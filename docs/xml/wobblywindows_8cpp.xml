<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="wobblywindows_8cpp" kind="file" language="C++">
    <compoundname>wobblywindows.cpp</compoundname>
    <includes refid="wobblywindows_8h" local="yes">wobblywindows.h</includes>
    <includes refid="effecthandler_8h" local="yes">effect/effecthandler.h</includes>
    <includes local="yes">wobblywindowsconfig.h</includes>
    <includes local="no">cmath</includes>
    <includes local="yes">moc_wobblywindows.cpp</includes>
    <incdepgraph>
      <node id="29">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>effect/effect.h</label>
        <link refid="effect_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>effect/effecthandler.h</label>
        <link refid="effecthandler_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>effect/effectwindow.h</label>
        <link refid="effectwindow_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>effect/offscreeneffect.h</label>
        <link refid="offscreeneffect_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/plugins/wobblywindows/wobblywindows.cpp</label>
        <link refid="wobblywindows_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>wobblywindows.h</label>
        <link refid="wobblywindows_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>scene/itemgeometry.h</label>
        <link refid="itemgeometry_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>KPluginFactory</label>
      </node>
      <node id="15">
        <label>KSharedConfig</label>
      </node>
      <node id="31">
        <label>QByteArray</label>
      </node>
      <node id="18">
        <label>QColor</label>
      </node>
      <node id="7">
        <label>QCoreApplication</label>
      </node>
      <node id="34">
        <label>QDebug</label>
      </node>
      <node id="38">
        <label>QEasingCurve</label>
      </node>
      <node id="42">
        <label>QHash</label>
      </node>
      <node id="39">
        <label>QIcon</label>
      </node>
      <node id="8">
        <label>QImage</label>
      </node>
      <node id="32">
        <label>QList</label>
      </node>
      <node id="43">
        <label>QLoggingCategory</label>
      </node>
      <node id="30">
        <label>QMatrix4x4</label>
      </node>
      <node id="27">
        <label>QObject</label>
      </node>
      <node id="40">
        <label>QPair</label>
      </node>
      <node id="9">
        <label>QPoint</label>
      </node>
      <node id="35">
        <label>QRect</label>
      </node>
      <node id="13">
        <label>QRegion</label>
      </node>
      <node id="41">
        <label>QSet</label>
      </node>
      <node id="33">
        <label>QSize</label>
      </node>
      <node id="44">
        <label>QStack</label>
      </node>
      <node id="36">
        <label>QUuid</label>
      </node>
      <node id="10">
        <label>QVariant</label>
      </node>
      <node id="11">
        <label>QVector2D</label>
      </node>
      <node id="37">
        <label>QWindow</label>
      </node>
      <node id="47">
        <label>cmath</label>
      </node>
      <node id="6">
        <label>config-kwin.h</label>
      </node>
      <node id="19">
        <label>epoxy/gl.h</label>
      </node>
      <node id="45">
        <label>functional</label>
      </node>
      <node id="12">
        <label>kwin_export.h</label>
      </node>
      <node id="48">
        <label>moc_wobblywindows.cpp</label>
      </node>
      <node id="20">
        <label>optional</label>
      </node>
      <node id="21">
        <label>ranges</label>
      </node>
      <node id="22">
        <label>span</label>
      </node>
      <node id="46">
        <label>wobblywindowsconfig.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_k_win_1_1_parameter_set" prot="public">KWin::ParameterSet</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2008<sp/>Cédric<sp/>Borgese<sp/>&lt;cedric.borgese@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wobblywindows_8h" kindref="compound">wobblywindows.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="effecthandler_8h" kindref="compound">effect/effecthandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wobblywindowsconfig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>COMPUTE_STATS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>you<sp/>enable<sp/>it<sp/>and<sp/>run<sp/>kwin<sp/>in<sp/>a<sp/>terminal<sp/>from<sp/>the<sp/>session<sp/>it<sp/>manages,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>sure<sp/>to<sp/>redirect<sp/>the<sp/>output<sp/>of<sp/>kwin<sp/>in<sp/>a<sp/>file<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you&apos;ll<sp/>propably<sp/>get<sp/>deadlocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>VERBOSE_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>COMPUTE_STATS<sp/>&amp;&amp;<sp/>!defined<sp/>VERBOSE_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#warning<sp/>&quot;You<sp/>enable<sp/>COMPUTE_STATS<sp/>without<sp/>VERBOSE_MODE,<sp/>computed<sp/>stats<sp/>will<sp/>not<sp/>be<sp/>printed.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">Q_LOGGING_CATEGORY(KWIN_WOBBLYWINDOWS,<sp/></highlight><highlight class="stringliteral">&quot;kwin_effect_wobblywindows&quot;</highlight><highlight class="normal">,<sp/>QtWarningMsg)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="struct_k_win_1_1_parameter_set" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_parameter_set" kindref="compound">ParameterSet</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36" refid="struct_k_win_1_1_parameter_set_1a9ad3d1d916b30011a91d1245a0118536" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="struct_k_win_1_1_parameter_set_1a9ad3d1d916b30011a91d1245a0118536" kindref="member">stiffness</ref>;</highlight></codeline>
<codeline lineno="37" refid="struct_k_win_1_1_parameter_set_1a976f83088c57040c6c481aeeec8e5776" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="struct_k_win_1_1_parameter_set_1a976f83088c57040c6c481aeeec8e5776" kindref="member">drag</ref>;</highlight></codeline>
<codeline lineno="38" refid="struct_k_win_1_1_parameter_set_1ad9861154b3a4c30022fc53ca9d57d06c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="struct_k_win_1_1_parameter_set_1ad9861154b3a4c30022fc53ca9d57d06c" kindref="member">move_factor</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="struct_k_win_1_1_parameter_set_1ad5fea5bcba034b1861d2b98e11d95f23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="struct_k_win_1_1_parameter_set_1ad5fea5bcba034b1861d2b98e11d95f23" kindref="member">xTesselation</ref>;</highlight></codeline>
<codeline lineno="41" refid="struct_k_win_1_1_parameter_set_1a59f2f8c3aa4bc15e097589d26c5de77d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="struct_k_win_1_1_parameter_set_1a59f2f8c3aa4bc15e097589d26c5de77d" kindref="member">yTesselation</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="struct_k_win_1_1_parameter_set_1aa2a634a10fa3359632f924cdcc5df751" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="struct_k_win_1_1_parameter_set_1aa2a634a10fa3359632f924cdcc5df751" kindref="member">minVelocity</ref>;</highlight></codeline>
<codeline lineno="44" refid="struct_k_win_1_1_parameter_set_1aa02d3188ce5e65cb41fa880713db5e5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="struct_k_win_1_1_parameter_set_1aa02d3188ce5e65cb41fa880713db5e5e" kindref="member">maxVelocity</ref>;</highlight></codeline>
<codeline lineno="45" refid="struct_k_win_1_1_parameter_set_1a1c5dd9ae51f3d6c1ed17ff7a54f10a12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="struct_k_win_1_1_parameter_set_1a1c5dd9ae51f3d6c1ed17ff7a54f10a12" kindref="member">stopVelocity</ref>;</highlight></codeline>
<codeline lineno="46" refid="struct_k_win_1_1_parameter_set_1acb6c323025ca5d1fbaaa5ee1e88791be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="struct_k_win_1_1_parameter_set_1acb6c323025ca5d1fbaaa5ee1e88791be" kindref="member">minAcceleration</ref>;</highlight></codeline>
<codeline lineno="47" refid="struct_k_win_1_1_parameter_set_1ac567a38443ac361ac31f5bb0b20f43f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="struct_k_win_1_1_parameter_set_1ac567a38443ac361ac31f5bb0b20f43f7" kindref="member">maxAcceleration</ref>;</highlight></codeline>
<codeline lineno="48" refid="struct_k_win_1_1_parameter_set_1a958c1163c5db881544213e9c035d1672" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="struct_k_win_1_1_parameter_set_1a958c1163c5db881544213e9c035d1672" kindref="member">stopAcceleration</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_parameter_set" kindref="compound">ParameterSet</ref><sp/>set_0<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>0.15,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>0.80,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>0.10,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>20.0,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>20.0,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>1000.0,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>0.5,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>1000.0,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>0.5,</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParameterSet<sp/>set_1<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>0.10,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>0.85,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>0.10,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>20.0,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>20.0,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>1000.0,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>0.5,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>1000.0,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>0.5,</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_parameter_set" kindref="compound">ParameterSet</ref><sp/>set_2<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>0.06,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>0.90,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>0.10,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>20.0,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>20.0,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>1000.0,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>0.5,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>1000.0,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>0.5,</highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_parameter_set" kindref="compound">ParameterSet</ref><sp/>set_3<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>0.03,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>0.92,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>0.20,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>20.0,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>20.0,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>1000.0,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>0.5,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>1000.0,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>0.5,</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_parameter_set" kindref="compound">ParameterSet</ref><sp/>set_4<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>0.01,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>0.97,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>0.25,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>20.0,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>20.0,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>1000.0,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>0.5,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>1000.0,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>0.5,</highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_parameter_set" kindref="compound">ParameterSet</ref><sp/>pset[5]<sp/>=<sp/>{set_0,<sp/>set_1,<sp/>set_2,<sp/>set_3,<sp/>set_4};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_k_win_1_1_wobbly_windows_effect_1a47a104f92af7482acc5e67a8e51f7506" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_wobbly_windows_effect_1a47a104f92af7482acc5e67a8e51f7506" kindref="member">WobblyWindowsEffect::WobblyWindowsEffect</ref>()</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>WobblyWindowsConfig::instance(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;config());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1abe866e5adad959c2773fae5434906788" kindref="member">reconfigure</ref>(<ref refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" kindref="member">ReconfigureAll</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1af265803a52b130d505ab9f8f66a30eb0" kindref="member">EffectsHandler::windowAdded</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_wobbly_windows_effect_1a51415ac7a1b2b728a10bd47eff4e05b4" kindref="member">WobblyWindowsEffect::slotWindowAdded</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>windows<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;stackingOrder();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*window<sp/>:<sp/>windows)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a51415ac7a1b2b728a10bd47eff4e05b4" kindref="member">slotWindowAdded</ref>(window);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="class_k_win_1_1_wobbly_windows_effect_1a1f4900e755b5564ba65d69c0ceaa9e4c" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_wobbly_windows_effect_1a1f4900e755b5564ba65d69c0ceaa9e4c" kindref="member">WobblyWindowsEffect::~WobblyWindowsEffect</ref>()</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!windows.empty())<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>be<sp/>empty<sp/>at<sp/>this<sp/>point...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_WOBBLYWINDOWS)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>list<sp/>not<sp/>empty.<sp/>Left<sp/>items<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>windows.count();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_k_win_1_1_wobbly_windows_effect_1abe866e5adad959c2773fae5434906788" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1abe866e5adad959c2773fae5434906788" kindref="member">WobblyWindowsEffect::reconfigure</ref>(ReconfigureFlags)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>WobblyWindowsConfig::self()-&gt;read();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>settingsMode<sp/>=<sp/>WobblyWindowsConfig::settings();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settingsMode<sp/>!=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Custom&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wobblynessLevel<sp/>=<sp/>WobblyWindowsConfig::wobblynessLevel();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wobblynessLevel<sp/>&gt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_WOBBLYWINDOWS)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>value<sp/>for<sp/>\&quot;WobblynessLevel\&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>wobblynessLevel;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wobblynessLevel<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setParameterSet(pset[wobblynessLevel]);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WobblyWindowsConfig::advancedMode())<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stiffness<sp/>=<sp/>WobblyWindowsConfig::stiffness()<sp/>/<sp/>100.0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_drag<sp/>=<sp/>WobblyWindowsConfig::drag()<sp/>/<sp/>100.0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_move_factor<sp/>=<sp/>WobblyWindowsConfig::moveFactor()<sp/>/<sp/>100.0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Custom<sp/>method,<sp/>read<sp/>all<sp/>values<sp/>from<sp/>config<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stiffness<sp/>=<sp/>WobblyWindowsConfig::stiffness()<sp/>/<sp/>100.0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_drag<sp/>=<sp/>WobblyWindowsConfig::drag()<sp/>/<sp/>100.0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_move_factor<sp/>=<sp/>WobblyWindowsConfig::moveFactor()<sp/>/<sp/>100.0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_xTesselation<sp/>=<sp/>WobblyWindowsConfig::xTesselation();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_yTesselation<sp/>=<sp/>WobblyWindowsConfig::yTesselation();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_minVelocity<sp/>=<sp/>WobblyWindowsConfig::minVelocity();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxVelocity<sp/>=<sp/>WobblyWindowsConfig::maxVelocity();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stopVelocity<sp/>=<sp/>WobblyWindowsConfig::stopVelocity();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_minAcceleration<sp/>=<sp/>WobblyWindowsConfig::minAcceleration();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxAcceleration<sp/>=<sp/>WobblyWindowsConfig::maxAcceleration();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stopAcceleration<sp/>=<sp/>WobblyWindowsConfig::stopAcceleration();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>m_moveWobble<sp/>=<sp/>WobblyWindowsConfig::moveWobble();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>m_resizeWobble<sp/>=<sp/>WobblyWindowsConfig::resizeWobble();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>VERBOSE_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_WOBBLYWINDOWS)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameters<sp/>:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;grid(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_stiffness<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_drag<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_move_factor<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;velocity(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_minVelocity<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_maxVelocity<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_stopVelocity<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;acceleration(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_minAcceleration<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_maxAcceleration<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_stopAcceleration<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tesselation(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_xTesselation<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_yTesselation<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="class_k_win_1_1_wobbly_windows_effect_1a6f43fcdd36db1782003298ae0022de4a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a6f43fcdd36db1782003298ae0022de4a" kindref="member">WobblyWindowsEffect::supported</ref>()</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_offscreen_effect_1adad3bef365b5939d04c257e0731e5013" kindref="member">OffscreenEffect::supported</ref>()<sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;animationsSupported();</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WobblyWindowsEffect::setParameterSet(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_parameter_set" kindref="compound">ParameterSet</ref><sp/>&amp;pset)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stiffness<sp/>=<sp/>pset.stiffness;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>m_drag<sp/>=<sp/>pset.drag;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>m_move_factor<sp/>=<sp/>pset.move_factor;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>m_xTesselation<sp/>=<sp/>pset.xTesselation;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>m_yTesselation<sp/>=<sp/>pset.yTesselation;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minVelocity<sp/>=<sp/>pset.minVelocity;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>m_maxVelocity<sp/>=<sp/>pset.maxVelocity;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stopVelocity<sp/>=<sp/>pset.stopVelocity;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minAcceleration<sp/>=<sp/>pset.minAcceleration;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>m_maxAcceleration<sp/>=<sp/>pset.maxAcceleration;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stopAcceleration<sp/>=<sp/>pset.stopAcceleration;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="class_k_win_1_1_wobbly_windows_effect_1a56e68b9ab3c6bb972ff6e17993a4659d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a56e68b9ab3c6bb972ff6e17993a4659d" kindref="member">WobblyWindowsEffect::setVelocityThreshold</ref>(qreal<sp/>m_minVelocity)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_minVelocity<sp/>=<sp/>m_minVelocity;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="class_k_win_1_1_wobbly_windows_effect_1a4a13ac671787d3de31913f3d9aefd33b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a4a13ac671787d3de31913f3d9aefd33b" kindref="member">WobblyWindowsEffect::setMoveFactor</ref>(qreal<sp/>factor)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>m_move_factor<sp/>=<sp/>factor;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="class_k_win_1_1_wobbly_windows_effect_1ae3624a2112250c4fc48ac1bf14ba88ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1ae3624a2112250c4fc48ac1bf14ba88ae" kindref="member">WobblyWindowsEffect::setStiffness</ref>(qreal<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a5c7289c9291944458b94237345063a68" kindref="member">stiffness</ref>)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stiffness<sp/>=<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a5c7289c9291944458b94237345063a68" kindref="member">stiffness</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="class_k_win_1_1_wobbly_windows_effect_1a96ad41272e7791dabf2a35be488a3c92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a96ad41272e7791dabf2a35be488a3c92" kindref="member">WobblyWindowsEffect::setDrag</ref>(qreal<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1aa6f9e0ab5afd09fd53113b3e26440bf1" kindref="member">drag</ref>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>m_drag<sp/>=<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1aa6f9e0ab5afd09fd53113b3e26440bf1" kindref="member">drag</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="class_k_win_1_1_wobbly_windows_effect_1a2ddf16f348c8db49d8540a5b070e277c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a2ddf16f348c8db49d8540a5b070e277c" kindref="member">WobblyWindowsEffect::prePaintScreen</ref>(<ref refid="class_k_win_1_1_screen_pre_paint_data" kindref="compound">ScreenPrePaintData</ref><sp/>&amp;data,<sp/>std::chrono::milliseconds<sp/>presentTime)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;prePaintScreen(data,<sp/>presentTime);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::milliseconds<sp/>integrationStep(10);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="class_k_win_1_1_wobbly_windows_effect_1ab61cba4718f96d0f93fb5540cb3b4dfc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1ab61cba4718f96d0f93fb5540cb3b4dfc" kindref="member">WobblyWindowsEffect::prePaintWindow</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/><ref refid="class_k_win_1_1_window_pre_paint_data" kindref="compound">WindowPrePaintData</ref><sp/>&amp;data,<sp/>std::chrono::milliseconds<sp/>presentTime)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>infoIt<sp/>=<sp/>windows.find(w);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(infoIt<sp/>!=<sp/>windows.end())<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="group__kwineffects_1gafefa807129c120e7358cd8a2247f9c31" kindref="member">setTransformed</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((presentTime<sp/>-<sp/>infoIt-&gt;clock).count()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>std::min(presentTime<sp/>-<sp/>infoIt-&gt;clock,<sp/>integrationStep);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infoIt-&gt;clock<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!updateWindowWobblyDatas(w,<sp/>delta.count()))<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;prePaintWindow(w,<sp/>data,<sp/>presentTime);</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="class_k_win_1_1_wobbly_windows_effect_1a1fe350cb507b59572c72f7e26f8f7741" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a1fe350cb507b59572c72f7e26f8f7741" kindref="member">WobblyWindowsEffect::apply</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask,<sp/><ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref><sp/>&amp;data,<sp/><ref refid="class_k_win_1_1_window_quad_list" kindref="compound">WindowQuadList</ref><sp/>&amp;quads)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(windows.contains(w))<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowWobblyInfos<sp/>&amp;wwi<sp/>=<sp/>windows[w];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wwi.wobblying)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tx<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>().x();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ty<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>().y();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>().width();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>().height();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1ac402e4ce70089b1478511e451c4a2623" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1a12d7c8207faa0369e920652ee2e25bfc" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quads<sp/>=<sp/>quads.<ref refid="class_k_win_1_1_window_quad_list_1af629d73e990dcff5478342e04c3eefe5" kindref="member">makeRegularGrid</ref>(m_xTesselation,<sp/>m_yTesselation);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>quads.count();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>4;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref><sp/>&amp;v<sp/>=<sp/>quads[i][j];</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>uv<sp/>=<sp/>{v.<ref refid="class_k_win_1_1_window_vertex_1a2410a6327e195217bbf890844323224c" kindref="member">x</ref>()<sp/>/<sp/>width,<sp/>v.<ref refid="class_k_win_1_1_window_vertex_1a993029d8be46adc8cdb06c7289c42ec0" kindref="member">y</ref>()<sp/>/<sp/>height};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>newPos<sp/>=<sp/>computeBezierPoint(wwi,<sp/>uv);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.<ref refid="class_k_win_1_1_window_vertex_1a745e85bd3dbee092ec055c8955810224" kindref="member">move</ref>(newPos.<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair_1a9f1100be7db78288e1beae151e10c622" kindref="member">x</ref><sp/>-<sp/>tx,<sp/>newPos.<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair_1aa7de94beb4187f12c70f4365586a8df4" kindref="member">y</ref><sp/>-<sp/>ty);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>std::min(left,<sp/>quads[i].left());</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top<sp/>=<sp/>std::min(top,<sp/>quads[i].top());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>std::max(right,<sp/>quads[i].right());</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom<sp/>=<sp/>std::max(bottom,<sp/>quads[i].bottom());</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>dirtyRect(</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>*<sp/>data.<ref refid="group__kwineffects_1gace5cca0325fe9ae39a42103979566310" kindref="member">xScale</ref>()<sp/>+<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1aac1f4a263e23a9ddcbb6e14f325923b9" kindref="member">x</ref>()<sp/>+<sp/>data.<ref refid="group__kwineffects_1gace652abd960b5d1c0d54c297fe2f5725" kindref="member">xTranslation</ref>(),</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top<sp/>*<sp/>data.<ref refid="group__kwineffects_1ga78d0bdf8c2b9b71888e47978bbfc63c5" kindref="member">yScale</ref>()<sp/>+<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1aca622a1be68a6c6e02290b6b3e8d2f54" kindref="member">y</ref>()<sp/>+<sp/>data.<ref refid="group__kwineffects_1ga7219eb8c50c3c5d27ac6bd94e6757552" kindref="member">yTranslation</ref>(),</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(right<sp/>-<sp/>left<sp/>+<sp/>1.0)<sp/>*<sp/>data.<ref refid="group__kwineffects_1gace5cca0325fe9ae39a42103979566310" kindref="member">xScale</ref>(),</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bottom<sp/>-<sp/>top<sp/>+<sp/>1.0)<sp/>*<sp/>data.<ref refid="group__kwineffects_1ga78d0bdf8c2b9b71888e47978bbfc63c5" kindref="member">yScale</ref>());</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Expand<sp/>the<sp/>dirty<sp/>region<sp/>by<sp/>1px<sp/>to<sp/>fix<sp/>potential<sp/>round/floor<sp/>issues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirtyRect.adjust(-1.0,<sp/>-1.0,<sp/>1.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_updateRegion<sp/>=<sp/>m_updateRegion.united(dirtyRect.toAlignedRect());</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="class_k_win_1_1_wobbly_windows_effect_1a5b0fbd81a207740ebac90546f8a5f3c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a5b0fbd81a207740ebac90546f8a5f3c7" kindref="member">WobblyWindowsEffect::postPaintScreen</ref>()</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_updateRegion.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;addRepaint(m_updateRegion);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_updateRegion<sp/>=<sp/>QRegion();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>next<sp/>effect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;postPaintScreen();</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="class_k_win_1_1_wobbly_windows_effect_1a51415ac7a1b2b728a10bd47eff4e05b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a51415ac7a1b2b728a10bd47eff4e05b4" kindref="member">WobblyWindowsEffect::slotWindowAdded</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w)</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(w,<sp/>&amp;<ref refid="class_k_win_1_1_effect_window_1a088f3fc1e6fca8bfb18a4fccdcaa3136" kindref="member">EffectWindow::windowStartUserMovedResized</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_wobbly_windows_effect_1a53c53421124a8334e4624e1860b1b75c" kindref="member">WobblyWindowsEffect::slotWindowStartUserMovedResized</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(w,<sp/>&amp;<ref refid="class_k_win_1_1_effect_window_1a53583b6a092848b7f139bac1e9633883" kindref="member">EffectWindow::windowStepUserMovedResized</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_wobbly_windows_effect_1a0ac7635d79f87cd333df576f19800d24" kindref="member">WobblyWindowsEffect::slotWindowStepUserMovedResized</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(w,<sp/>&amp;<ref refid="class_k_win_1_1_effect_window_1aef6351fb5e97fd6b4c8d9c0f4d322c90" kindref="member">EffectWindow::windowFinishUserMovedResized</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_wobbly_windows_effect_1a9fe3dadc1173e1d4b39550149c8e1313" kindref="member">WobblyWindowsEffect::slotWindowFinishUserMovedResized</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(w,<sp/>&amp;<ref refid="class_k_win_1_1_effect_window_1af4926d78bab0b3dd17dad390abcf113e" kindref="member">EffectWindow::windowMaximizedStateChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_wobbly_windows_effect_1aa1df3c77fdd8f4603ec65fca20ef3e7d" kindref="member">WobblyWindowsEffect::slotWindowMaximizeStateChanged</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="class_k_win_1_1_wobbly_windows_effect_1a53c53421124a8334e4624e1860b1b75c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a53c53421124a8334e4624e1860b1b75c" kindref="member">WobblyWindowsEffect::slotWindowStartUserMovedResized</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w)</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w-&gt;<ref refid="class_k_win_1_1_effect_window_1a57e275d5e167ae96fd46f16703a69a67" kindref="member">isSpecialWindow</ref>())<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((w-&gt;<ref refid="class_k_win_1_1_effect_window_1abd15e1e96851916e541bee9466b5e06a" kindref="member">isUserMove</ref>()<sp/>&amp;&amp;<sp/>m_moveWobble)<sp/>||<sp/>(w-&gt;<ref refid="class_k_win_1_1_effect_window_1a2f3aec5c00fe7395e1b68c0bd773ba0c" kindref="member">isUserResize</ref>()<sp/>&amp;&amp;<sp/>m_resizeWobble))<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startMovedResized(w);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="class_k_win_1_1_wobbly_windows_effect_1a0ac7635d79f87cd333df576f19800d24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a0ac7635d79f87cd333df576f19800d24" kindref="member">WobblyWindowsEffect::slotWindowStepUserMovedResized</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;geometry)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(windows.contains(w))<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowWobblyInfos<sp/>&amp;wwi<sp/>=<sp/>windows[w];</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>rect<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.y()<sp/>!=<sp/>wwi.resize_original_rect.y())<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.can_wobble_top<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.x()<sp/>!=<sp/>wwi.resize_original_rect.x())<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.can_wobble_left<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.right()<sp/>!=<sp/>wwi.resize_original_rect.right())<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.can_wobble_right<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.bottom()<sp/>!=<sp/>wwi.resize_original_rect.bottom())<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.can_wobble_bottom<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_offscreen_effect_1ae390a8c07620d899b467b6c919901649" kindref="member">setVertexSnappingMode</ref>(<ref refid="class_k_win_1_1_render_geometry_1a7bc1c02ecb839871aadec8895abda2e4a6adf97f83acf6453d4a6a4b1070f3754" kindref="member">RenderGeometry::VertexSnappingMode::None</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="class_k_win_1_1_wobbly_windows_effect_1a9fe3dadc1173e1d4b39550149c8e1313" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a9fe3dadc1173e1d4b39550149c8e1313" kindref="member">WobblyWindowsEffect::slotWindowFinishUserMovedResized</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(windows.contains(w))<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowWobblyInfos<sp/>&amp;wwi<sp/>=<sp/>windows[w];</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.status<sp/>=<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a00bc08f5d0032c27fe66262ec1fe8e0aa202ddbde4a47ff81fd71084f45bfe5e4" kindref="member">Free</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>rect<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.y()<sp/>!=<sp/>wwi.resize_original_rect.y())<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.can_wobble_top<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.x()<sp/>!=<sp/>wwi.resize_original_rect.x())<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.can_wobble_left<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.right()<sp/>!=<sp/>wwi.resize_original_rect.right())<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.can_wobble_right<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.bottom()<sp/>!=<sp/>wwi.resize_original_rect.bottom())<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.can_wobble_bottom<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="class_k_win_1_1_wobbly_windows_effect_1aa1df3c77fdd8f4603ec65fca20ef3e7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1aa1df3c77fdd8f4603ec65fca20ef3e7d" kindref="member">WobblyWindowsEffect::slotWindowMaximizeStateChanged</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>horizontal,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vertical)</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w-&gt;<ref refid="class_k_win_1_1_effect_window_1abd15e1e96851916e541bee9466b5e06a" kindref="member">isUserMove</ref>()<sp/>||<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1a57e275d5e167ae96fd46f16703a69a67" kindref="member">isSpecialWindow</ref>())<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_moveWobble<sp/>&amp;&amp;<sp/>m_resizeWobble)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepMovedResized(w);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(windows.contains(w))<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowWobblyInfos<sp/>&amp;wwi<sp/>=<sp/>windows[w];</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>rect<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.y()<sp/>!=<sp/>wwi.resize_original_rect.y())<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.can_wobble_top<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.x()<sp/>!=<sp/>wwi.resize_original_rect.x())<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.can_wobble_left<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.right()<sp/>!=<sp/>wwi.resize_original_rect.right())<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.can_wobble_right<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.bottom()<sp/>!=<sp/>wwi.resize_original_rect.bottom())<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.can_wobble_bottom<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WobblyWindowsEffect::startMovedResized(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!windows.contains(w))<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowWobblyInfos<sp/>new_wwi;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initWobblyInfo(new_wwi,<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>());</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windows[w]<sp/>=<sp/>new_wwi;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_offscreen_effect_1a6f9911e49dbaf73975c2f238937930be" kindref="member">redirect</ref>(w);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>WindowWobblyInfos<sp/>&amp;wwi<sp/>=<sp/>windows[w];</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.status<sp/>=<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a00bc08f5d0032c27fe66262ec1fe8e0aa5b04970e31aaf2f769b52bb494edfaa6" kindref="member">Moving</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>x_increment<sp/>=<sp/>rect.width()<sp/>/<sp/>(wwi.width<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>y_increment<sp/>=<sp/>rect.height()<sp/>/<sp/>(wwi.height<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>Pair<sp/>picked<sp/>=<sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">qreal</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" kindref="member">cursorPos</ref>().x()),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">qreal</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" kindref="member">cursorPos</ref>().y())};</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indx<sp/>=<sp/>(picked.x<sp/>-<sp/>rect.x())<sp/>/<sp/>x_increment<sp/>+<sp/>0.5;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indy<sp/>=<sp/>(picked.y<sp/>-<sp/>rect.y())<sp/>/<sp/>y_increment<sp/>+<sp/>0.5;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pickedPointIndex<sp/>=<sp/>indy<sp/>*<sp/>wwi.width<sp/>+<sp/>indx;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pickedPointIndex<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_WOBBLYWINDOWS)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Picked<sp/>index<sp/>==<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pickedPointIndex<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" kindref="member">cursorPos</ref>().x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" kindref="member">cursorPos</ref>().y()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pickedPointIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pickedPointIndex)<sp/>&gt;<sp/>wwi.count<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_WOBBLYWINDOWS)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Picked<sp/>index<sp/>==<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pickedPointIndex<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" kindref="member">cursorPos</ref>().x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" kindref="member">cursorPos</ref>().y()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pickedPointIndex<sp/>=<sp/>wwi.count<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>VERBOSE_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_WOBBLYWINDOWS)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Original<sp/>Picked<sp/>point<sp/>--<sp/>x<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>picked.x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>y<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>picked.y;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.constraint[pickedPointIndex]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w-&gt;<ref refid="class_k_win_1_1_effect_window_1a2f3aec5c00fe7395e1b68c0bd773ba0c" kindref="member">isUserResize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>a<sp/>resize,<sp/>do<sp/>not<sp/>allow<sp/>any<sp/>edges<sp/>to<sp/>wobble<sp/>until<sp/>it<sp/>has<sp/>been<sp/>moved<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>its<sp/>original<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.can_wobble_top<sp/>=<sp/>wwi.can_wobble_left<sp/>=<sp/>wwi.can_wobble_right<sp/>=<sp/>wwi.can_wobble_bottom<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.resize_original_rect<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.can_wobble_top<sp/>=<sp/>wwi.can_wobble_left<sp/>=<sp/>wwi.can_wobble_right<sp/>=<sp/>wwi.can_wobble_bottom<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WobblyWindowsEffect::stepMovedResized(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w)</highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>new_geometry<sp/>=<sp/>w-&gt;frameGeometry();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!windows.contains(w))<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowWobblyInfos<sp/>new_wwi;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initWobblyInfo(new_wwi,<sp/>new_geometry);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windows[w]<sp/>=<sp/>new_wwi;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>WindowWobblyInfos<sp/>&amp;wwi<sp/>=<sp/>windows[w];</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.status<sp/>=<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a00bc08f5d0032c27fe66262ec1fe8e0aa202ddbde4a47ff81fd71084f45bfe5e4" kindref="member">Free</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>maximized_area<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1ad7c5dbc6178025906beb67d0a2153250" kindref="member">clientArea</ref>(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22a445c2e99842dbf1b3870807ebbd11f23" kindref="member">MaximizeArea</ref>,<sp/>w);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>throb_direction_out<sp/>=<sp/>(new_geometry.top()<sp/>==<sp/>maximized_area.top()<sp/>&amp;&amp;<sp/>new_geometry.bottom()<sp/>==<sp/>maximized_area.bottom())<sp/>||<sp/>(new_geometry.left()<sp/>==<sp/>maximized_area.left()<sp/>&amp;&amp;<sp/>new_geometry.right()<sp/>==<sp/>maximized_area.right());</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>magnitude<sp/>=<sp/>throb_direction_out<sp/>?<sp/>10<sp/>:<sp/>-30;<sp/></highlight><highlight class="comment">//<sp/>a<sp/>small<sp/>throb<sp/>out<sp/>when<sp/>maximized,<sp/>a<sp/>larger<sp/>throb<sp/>inwards<sp/>when<sp/>restored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>wwi.height;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wwi.width;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>v<sp/>=<sp/>{magnitude<sp/>*<sp/>(i<sp/>/<sp/>qreal(wwi.width<sp/>-<sp/>1)<sp/>-<sp/>0.5),<sp/>magnitude<sp/>*<sp/>(j<sp/>/<sp/>qreal(wwi.height<sp/>-<sp/>1)<sp/>-<sp/>0.5)};</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.velocity[j<sp/>*<sp/>wwi.width<sp/>+<sp/>i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constrain<sp/>the<sp/>middle<sp/>of<sp/>the<sp/>window,<sp/>so<sp/>that<sp/>any<sp/>asymetry<sp/>wont<sp/>cause<sp/>it<sp/>to<sp/>drift<sp/>off-center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>wwi.height<sp/>-<sp/>1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>wwi.width<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.constraint[j<sp/>*<sp/>wwi.width<sp/>+<sp/>i]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WobblyWindowsEffect::initWobblyInfo(WindowWobblyInfos<sp/>&amp;wwi,<sp/>QRectF<sp/>geometry)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="471"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.count<sp/>=<sp/>4<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.width<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.height<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.bezierWidth<sp/>=<sp/>m_xTesselation;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.bezierHeight<sp/>=<sp/>m_yTesselation;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.bezierCount<sp/>=<sp/>m_xTesselation<sp/>*<sp/>m_yTesselation;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.origin.resize(wwi.count);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.position.resize(wwi.count);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.velocity.resize(wwi.count);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.acceleration.resize(wwi.count);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.buffer.resize(wwi.count);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.constraint.resize(wwi.count);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.bezierSurface.resize(wwi.bezierCount);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.status<sp/>=<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a00bc08f5d0032c27fe66262ec1fe8e0aa5b04970e31aaf2f769b52bb494edfaa6" kindref="member">Moving</ref>;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.clock<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::steady_clock::now().time_since_epoch());</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>x<sp/>=<sp/>geometry.x(),<sp/>y<sp/>=<sp/>geometry.y();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>width<sp/>=<sp/>geometry.width(),<sp/>height<sp/>=<sp/>geometry.height();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>initValue<sp/>=<sp/>{x,<sp/>y};</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>nullPair<sp/>=<sp/>{0.0,<sp/>0.0};</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>x_increment<sp/>=<sp/>width<sp/>/<sp/>(wwi.width<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>y_increment<sp/>=<sp/>height<sp/>/<sp/>(wwi.height<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>4;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>j<sp/>*<sp/>4<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.origin[idx]<sp/>=<sp/>initValue;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.position[idx]<sp/>=<sp/>initValue;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.velocity[idx]<sp/>=<sp/>nullPair;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.constraint[idx]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>4<sp/>-<sp/>2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>x<sp/>grid<sp/>count<sp/>-<sp/>2,<sp/>i.e.<sp/>not<sp/>the<sp/>last<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initValue.x<sp/>+=<sp/>x_increment;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initValue.x<sp/>=<sp/>width<sp/>+<sp/>x;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initValue.x<sp/>=<sp/>initValue.x;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initValue.x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initValue.x<sp/>=<sp/>initValue.x;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>4<sp/>-<sp/>2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>y<sp/>grid<sp/>count<sp/>-<sp/>2,<sp/>i.e.<sp/>not<sp/>the<sp/>last<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initValue.y<sp/>+=<sp/>y_increment;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initValue.y<sp/>=<sp/>height<sp/>+<sp/>y;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initValue.y<sp/>=<sp/>initValue.y;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">WobblyWindowsEffect::Pair</ref><sp/>WobblyWindowsEffect::computeBezierPoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WindowWobblyInfos<sp/>&amp;wwi,<sp/>Pair<sp/>point)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="528"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>tx<sp/>=<sp/>point.<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair_1a9f1100be7db78288e1beae151e10c622" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>ty<sp/>=<sp/>point.y;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>polynomial<sp/>coeff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>px[4];</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>px[0]<sp/>=<sp/>(1<sp/>-<sp/>tx)<sp/>*<sp/>(1<sp/>-<sp/>tx)<sp/>*<sp/>(1<sp/>-<sp/>tx);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>px[1]<sp/>=<sp/>3<sp/>*<sp/>(1<sp/>-<sp/>tx)<sp/>*<sp/>(1<sp/>-<sp/>tx)<sp/>*<sp/>tx;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>px[2]<sp/>=<sp/>3<sp/>*<sp/>(1<sp/>-<sp/>tx)<sp/>*<sp/>tx<sp/>*<sp/>tx;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>px[3]<sp/>=<sp/>tx<sp/>*<sp/>tx<sp/>*<sp/>tx;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>py[4];</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>py[0]<sp/>=<sp/>(1<sp/>-<sp/>ty)<sp/>*<sp/>(1<sp/>-<sp/>ty)<sp/>*<sp/>(1<sp/>-<sp/>ty);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>py[1]<sp/>=<sp/>3<sp/>*<sp/>(1<sp/>-<sp/>ty)<sp/>*<sp/>(1<sp/>-<sp/>ty)<sp/>*<sp/>ty;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>py[2]<sp/>=<sp/>3<sp/>*<sp/>(1<sp/>-<sp/>ty)<sp/>*<sp/>ty<sp/>*<sp/>ty;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>py[3]<sp/>=<sp/>ty<sp/>*<sp/>ty<sp/>*<sp/>ty;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>res<sp/>=<sp/>{0.0,<sp/>0.0};</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>4;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>assume<sp/>the<sp/>grid<sp/>is<sp/>4*4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.x<sp/>+=<sp/>px[i]<sp/>*<sp/>py[j]<sp/>*<sp/>wwi.position[i<sp/>+<sp/>j<sp/>*<sp/>wwi.width].x;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.y<sp/>+=<sp/>px[i]<sp/>*<sp/>py[j]<sp/>*<sp/>wwi.position[i<sp/>+<sp/>j<sp/>*<sp/>wwi.width].y;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fixVectorBounds(<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">WobblyWindowsEffect::Pair</ref><sp/>&amp;vec,<sp/>qreal<sp/>min,<sp/>qreal<sp/>max)</highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(vec.x)<sp/>&lt;<sp/>min)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(vec.x)<sp/>&gt;<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vec.x<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.x<sp/>=<sp/>max;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.x<sp/>=<sp/>-max;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(vec.y)<sp/>&lt;<sp/>min)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(vec.y)<sp/>&gt;<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vec.y<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.y<sp/>=<sp/>max;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.y<sp/>=<sp/>-max;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>COMPUTE_STATS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeVectorBounds(<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">WobblyWindowsEffect::Pair</ref><sp/>&amp;vec,<sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">WobblyWindowsEffect::Pair</ref><sp/>&amp;bound)</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(vec.x)<sp/>&lt;<sp/>bound.x)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bound.x<sp/>=<sp/>fabs(vec.x);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(vec.x)<sp/>&gt;<sp/>bound.y)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bound.y<sp/>=<sp/>fabs(vec.x);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(vec.y)<sp/>&lt;<sp/>bound.x)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bound.x<sp/>=<sp/>fabs(vec.y);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(vec.y)<sp/>&gt;<sp/>bound.y)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bound.y<sp/>=<sp/>fabs(vec.y);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>close<sp/>the<sp/>anonymous<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WobblyWindowsEffect::updateWindowWobblyDatas(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/>qreal<sp/>time)</highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>rect<sp/>=<sp/>w-&gt;frameGeometry();</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>WindowWobblyInfos<sp/>&amp;wwi<sp/>=<sp/>windows[w];</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>x_length<sp/>=<sp/>rect.width()<sp/>/<sp/>(wwi.width<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>y_length<sp/>=<sp/>rect.height()<sp/>/<sp/>(wwi.height<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>VERBOSE_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_WOBBLYWINDOWS)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;time<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>time;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_WOBBLYWINDOWS)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;increment<sp/>x<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x_length<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>//<sp/>y&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>y_length;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>origine<sp/>=<sp/>{rect.x(),<sp/>rect.y()};</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>wwi.height;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wwi.width;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.origin[wwi.width<sp/>*<sp/>j<sp/>+<sp/>i]<sp/>=<sp/>origine;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>wwi.width<sp/>-<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origine.x<sp/>+=<sp/>x_length;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origine.x<sp/>=<sp/>rect.width()<sp/>+<sp/>rect.x();</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origine.x<sp/>=<sp/>rect.x();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>wwi.height<sp/>-<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origine.y<sp/>+=<sp/>y_length;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origine.y<sp/>=<sp/>rect.height()<sp/>+<sp/>rect.y();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>neibourgs[4];</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>acceleration;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>acc_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>vel_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>acceleration,<sp/>velocity<sp/>and<sp/>position<sp/>for<sp/>each<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>corners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wwi.constraint[0])<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>window_pos<sp/>=<sp/>wwi.origin[0];</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>current_pos<sp/>=<sp/>wwi.position[0];</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>move<sp/>=<sp/>{window_pos.x<sp/>-<sp/>current_pos.x,<sp/>window_pos.y<sp/>-<sp/>current_pos.y};</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>accel<sp/>=<sp/>{move.x<sp/>*<sp/>m_stiffness,<sp/>move.y<sp/>*<sp/>m_stiffness};</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[0]<sp/>=<sp/>accel;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;pos<sp/>=<sp/>wwi.position[0];</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>wwi.position[1];</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>wwi.position[wwi.width];</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair_1a9f1100be7db78288e1beae151e10c622" kindref="member">x</ref><sp/>=<sp/>((neibourgs[0].x<sp/>-<sp/>pos.x)<sp/>-<sp/>x_length)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[1].x<sp/>-<sp/>pos.x)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>=<sp/>((neibourgs[1].y<sp/>-<sp/>pos.y)<sp/>-<sp/>y_length)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[0].y<sp/>-<sp/>pos.y)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.x<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[0]<sp/>=<sp/>acceleration;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wwi.constraint[wwi.width<sp/>-<sp/>1])<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>window_pos<sp/>=<sp/>wwi.origin[wwi.width<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>current_pos<sp/>=<sp/>wwi.position[wwi.width<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>move<sp/>=<sp/>{window_pos.x<sp/>-<sp/>current_pos.x,<sp/>window_pos.y<sp/>-<sp/>current_pos.y};</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>accel<sp/>=<sp/>{move.x<sp/>*<sp/>m_stiffness,<sp/>move.y<sp/>*<sp/>m_stiffness};</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[wwi.width<sp/>-<sp/>1]<sp/>=<sp/>accel;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;pos<sp/>=<sp/>wwi.position[wwi.width<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>wwi.position[wwi.width<sp/>-<sp/>2];</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>wwi.position[2<sp/>*<sp/>wwi.width<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair_1a9f1100be7db78288e1beae151e10c622" kindref="member">x</ref><sp/>=<sp/>(x_length<sp/>-<sp/>(pos.x<sp/>-<sp/>neibourgs[0].x))<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[1].x<sp/>-<sp/>pos.x)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>=<sp/>((neibourgs[1].y<sp/>-<sp/>pos.y)<sp/>-<sp/>y_length)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[0].y<sp/>-<sp/>pos.y)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.x<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[wwi.width<sp/>-<sp/>1]<sp/>=<sp/>acceleration;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wwi.constraint[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)])<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>window_pos<sp/>=<sp/>wwi.origin[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)];</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>current_pos<sp/>=<sp/>wwi.position[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)];</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>move<sp/>=<sp/>{window_pos.x<sp/>-<sp/>current_pos.x,<sp/>window_pos.y<sp/>-<sp/>current_pos.y};</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>accel<sp/>=<sp/>{move.x<sp/>*<sp/>m_stiffness,<sp/>move.y<sp/>*<sp/>m_stiffness};</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)]<sp/>=<sp/>accel;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;pos<sp/>=<sp/>wwi.position[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)];</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>wwi.position[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>wwi.position[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>2)];</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair_1a9f1100be7db78288e1beae151e10c622" kindref="member">x</ref><sp/>=<sp/>((neibourgs[0].x<sp/>-<sp/>pos.x)<sp/>-<sp/>x_length)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[1].x<sp/>-<sp/>pos.x)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>=<sp/>(y_length<sp/>-<sp/>(pos.y<sp/>-<sp/>neibourgs[1].y))<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[0].y<sp/>-<sp/>pos.y)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.x<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)]<sp/>=<sp/>acceleration;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wwi.constraint[wwi.count<sp/>-<sp/>1])<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>window_pos<sp/>=<sp/>wwi.origin[wwi.count<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>current_pos<sp/>=<sp/>wwi.position[wwi.count<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>move<sp/>=<sp/>{window_pos.x<sp/>-<sp/>current_pos.x,<sp/>window_pos.y<sp/>-<sp/>current_pos.y};</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>accel<sp/>=<sp/>{move.x<sp/>*<sp/>m_stiffness,<sp/>move.y<sp/>*<sp/>m_stiffness};</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[wwi.count<sp/>-<sp/>1]<sp/>=<sp/>accel;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;pos<sp/>=<sp/>wwi.position[wwi.count<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>wwi.position[wwi.count<sp/>-<sp/>2];</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>wwi.position[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair_1a9f1100be7db78288e1beae151e10c622" kindref="member">x</ref><sp/>=<sp/>(x_length<sp/>-<sp/>(pos.x<sp/>-<sp/>neibourgs[0].x))<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[1].x<sp/>-<sp/>pos.x)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>=<sp/>(y_length<sp/>-<sp/>(pos.y<sp/>-<sp/>neibourgs[1].y))<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[0].y<sp/>-<sp/>pos.y)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.x<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[wwi.count<sp/>-<sp/>1]<sp/>=<sp/>acceleration;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>borders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>wwi.width<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wwi.constraint[i])<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>window_pos<sp/>=<sp/>wwi.origin[i];</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>current_pos<sp/>=<sp/>wwi.position[i];</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>move<sp/>=<sp/>{window_pos.x<sp/>-<sp/>current_pos.x,<sp/>window_pos.y<sp/>-<sp/>current_pos.y};</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>accel<sp/>=<sp/>{move.x<sp/>*<sp/>m_stiffness,<sp/>move.y<sp/>*<sp/>m_stiffness};</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[i]<sp/>=<sp/>accel;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;pos<sp/>=<sp/>wwi.position[i];</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>wwi.position[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>wwi.position[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[2]<sp/>=<sp/>wwi.position[i<sp/>+<sp/>wwi.width];</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair_1a9f1100be7db78288e1beae151e10c622" kindref="member">x</ref><sp/>=<sp/>(x_length<sp/>-<sp/>(pos.x<sp/>-<sp/>neibourgs[0].x))<sp/>*<sp/>m_stiffness<sp/>+<sp/>((neibourgs[1].x<sp/>-<sp/>pos.x)<sp/>-<sp/>x_length)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[2].x<sp/>-<sp/>pos.x)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>=<sp/>((neibourgs[2].y<sp/>-<sp/>pos.y)<sp/>-<sp/>y_length)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[0].y<sp/>-<sp/>pos.y)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[1].y<sp/>-<sp/>pos.y)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.x<sp/>/=<sp/>3;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>/=<sp/>3;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[i]<sp/>=<sp/>acceleration;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)<sp/>+<sp/>1;<sp/>i<sp/>&lt;<sp/>wwi.count<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wwi.constraint[i])<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>window_pos<sp/>=<sp/>wwi.origin[i];</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>current_pos<sp/>=<sp/>wwi.position[i];</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>move<sp/>=<sp/>{window_pos.x<sp/>-<sp/>current_pos.x,<sp/>window_pos.y<sp/>-<sp/>current_pos.y};</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>accel<sp/>=<sp/>{move.x<sp/>*<sp/>m_stiffness,<sp/>move.y<sp/>*<sp/>m_stiffness};</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[i]<sp/>=<sp/>accel;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;pos<sp/>=<sp/>wwi.position[i];</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>wwi.position[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>wwi.position[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[2]<sp/>=<sp/>wwi.position[i<sp/>-<sp/>wwi.width];</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair_1a9f1100be7db78288e1beae151e10c622" kindref="member">x</ref><sp/>=<sp/>(x_length<sp/>-<sp/>(pos.x<sp/>-<sp/>neibourgs[0].x))<sp/>*<sp/>m_stiffness<sp/>+<sp/>((neibourgs[1].x<sp/>-<sp/>pos.x)<sp/>-<sp/>x_length)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[2].x<sp/>-<sp/>pos.x)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>=<sp/>(y_length<sp/>-<sp/>(pos.y<sp/>-<sp/>neibourgs[2].y))<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[0].y<sp/>-<sp/>pos.y)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[1].y<sp/>-<sp/>pos.y)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.x<sp/>/=<sp/>3;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>/=<sp/>3;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[i]<sp/>=<sp/>acceleration;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>wwi.width;<sp/>i<sp/>&lt;<sp/>wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1);<sp/>i<sp/>+=<sp/>wwi.width)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wwi.constraint[i])<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>window_pos<sp/>=<sp/>wwi.origin[i];</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>current_pos<sp/>=<sp/>wwi.position[i];</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>move<sp/>=<sp/>{window_pos.x<sp/>-<sp/>current_pos.x,<sp/>window_pos.y<sp/>-<sp/>current_pos.y};</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>accel<sp/>=<sp/>{move.x<sp/>*<sp/>m_stiffness,<sp/>move.y<sp/>*<sp/>m_stiffness};</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[i]<sp/>=<sp/>accel;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;pos<sp/>=<sp/>wwi.position[i];</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>wwi.position[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>wwi.position[i<sp/>-<sp/>wwi.width];</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[2]<sp/>=<sp/>wwi.position[i<sp/>+<sp/>wwi.width];</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair_1a9f1100be7db78288e1beae151e10c622" kindref="member">x</ref><sp/>=<sp/>((neibourgs[0].x<sp/>-<sp/>pos.x)<sp/>-<sp/>x_length)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[1].x<sp/>-<sp/>pos.x)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[2].x<sp/>-<sp/>pos.x)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>=<sp/>(y_length<sp/>-<sp/>(pos.y<sp/>-<sp/>neibourgs[1].y))<sp/>*<sp/>m_stiffness<sp/>+<sp/>((neibourgs[2].y<sp/>-<sp/>pos.y)<sp/>-<sp/>y_length)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[0].y<sp/>-<sp/>pos.y)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.x<sp/>/=<sp/>3;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>/=<sp/>3;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[i]<sp/>=<sp/>acceleration;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>right<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2<sp/>*<sp/>wwi.width<sp/>-<sp/>1;<sp/>i<sp/>&lt;<sp/>wwi.count<sp/>-<sp/>1;<sp/>i<sp/>+=<sp/>wwi.width)<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wwi.constraint[i])<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>window_pos<sp/>=<sp/>wwi.origin[i];</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>current_pos<sp/>=<sp/>wwi.position[i];</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>move<sp/>=<sp/>{window_pos.x<sp/>-<sp/>current_pos.x,<sp/>window_pos.y<sp/>-<sp/>current_pos.y};</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>accel<sp/>=<sp/>{move.x<sp/>*<sp/>m_stiffness,<sp/>move.y<sp/>*<sp/>m_stiffness};</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[i]<sp/>=<sp/>accel;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;pos<sp/>=<sp/>wwi.position[i];</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>wwi.position[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>wwi.position[i<sp/>-<sp/>wwi.width];</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[2]<sp/>=<sp/>wwi.position[i<sp/>+<sp/>wwi.width];</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair_1a9f1100be7db78288e1beae151e10c622" kindref="member">x</ref><sp/>=<sp/>(x_length<sp/>-<sp/>(pos.x<sp/>-<sp/>neibourgs[0].x))<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[1].x<sp/>-<sp/>pos.x)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[2].x<sp/>-<sp/>pos.x)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>=<sp/>(y_length<sp/>-<sp/>(pos.y<sp/>-<sp/>neibourgs[1].y))<sp/>*<sp/>m_stiffness<sp/>+<sp/>((neibourgs[2].y<sp/>-<sp/>pos.y)<sp/>-<sp/>y_length)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[0].y<sp/>-<sp/>pos.y)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.x<sp/>/=<sp/>3;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>/=<sp/>3;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[i]<sp/>=<sp/>acceleration;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>inner<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>wwi.height<sp/>-<sp/>1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>wwi.width<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>i<sp/>+<sp/>j<sp/>*<sp/>wwi.width;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wwi.constraint[index])<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>window_pos<sp/>=<sp/>wwi.origin[index];</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>current_pos<sp/>=<sp/>wwi.position[index];</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>move<sp/>=<sp/>{window_pos.x<sp/>-<sp/>current_pos.x,<sp/>window_pos.y<sp/>-<sp/>current_pos.y};</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>accel<sp/>=<sp/>{move.x<sp/>*<sp/>m_stiffness,<sp/>move.y<sp/>*<sp/>m_stiffness};</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[index]<sp/>=<sp/>accel;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;pos<sp/>=<sp/>wwi.position[index];</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>wwi.position[index<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>wwi.position[index<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[2]<sp/>=<sp/>wwi.position[index<sp/>-<sp/>wwi.width];</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[3]<sp/>=<sp/>wwi.position[index<sp/>+<sp/>wwi.width];</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair_1a9f1100be7db78288e1beae151e10c622" kindref="member">x</ref><sp/>=<sp/>((neibourgs[0].x<sp/>-<sp/>pos.x)<sp/>-<sp/>x_length)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(x_length<sp/>-<sp/>(pos.x<sp/>-<sp/>neibourgs[1].x))<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[2].x<sp/>-<sp/>pos.x)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[3].x<sp/>-<sp/>pos.x)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>=<sp/>(y_length<sp/>-<sp/>(pos.y<sp/>-<sp/>neibourgs[2].y))<sp/>*<sp/>m_stiffness<sp/>+<sp/>((neibourgs[3].y<sp/>-<sp/>pos.y)<sp/>-<sp/>y_length)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[0].y<sp/>-<sp/>pos.y)<sp/>*<sp/>m_stiffness<sp/>+<sp/>(neibourgs[1].y<sp/>-<sp/>pos.y)<sp/>*<sp/>m_stiffness;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.x<sp/>/=<sp/>4;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration.y<sp/>/=<sp/>4;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.acceleration[index]<sp/>=<sp/>acceleration;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>heightRingLinearMean(wwi.acceleration,<sp/>wwi);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>COMPUTE_STATS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>accBound<sp/>=<sp/>{m_maxAcceleration,<sp/>m_minAcceleration};</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>velBound<sp/>=<sp/>{m_maxVelocity,<sp/>m_minVelocity};</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>new<sp/>velocity<sp/>of<sp/>each<sp/>vertex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wwi.count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>acc<sp/>=<sp/>wwi.acceleration[i];</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixVectorBounds(acc,<sp/>m_minAcceleration,<sp/>m_maxAcceleration);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>COMPUTE_STATS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeVectorBounds(acc,<sp/>accBound);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;vel<sp/>=<sp/>wwi.velocity[i];</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel.<ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair_1a9f1100be7db78288e1beae151e10c622" kindref="member">x</ref><sp/>=<sp/>acc.x<sp/>*<sp/>time<sp/>+<sp/>vel.x<sp/>*<sp/>m_drag;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel.y<sp/>=<sp/>acc.y<sp/>*<sp/>time<sp/>+<sp/>vel.y<sp/>*<sp/>m_drag;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc_sum<sp/>+=<sp/>fabs(acc.x)<sp/>+<sp/>fabs(acc.y);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>heightRingLinearMean(wwi.velocity,<sp/>wwi);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>new<sp/>pos<sp/>of<sp/>each<sp/>vertex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wwi.count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;pos<sp/>=<sp/>wwi.position[i];</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;vel<sp/>=<sp/>wwi.velocity[i];</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixVectorBounds(vel,<sp/>m_minVelocity,<sp/>m_maxVelocity);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>COMPUTE_STATS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeVectorBounds(vel,<sp/>velBound);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.x<sp/>+=<sp/>vel.x<sp/>*<sp/>time<sp/>*<sp/>m_move_factor;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.y<sp/>+=<sp/>vel.y<sp/>*<sp/>time<sp/>*<sp/>m_move_factor;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel_sum<sp/>+=<sp/>fabs(vel.x)<sp/>+<sp/>fabs(vel.y);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>VERBOSE_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wwi.constraint[i])<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_WOBBLYWINDOWS)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Constraint<sp/>point<sp/>**<sp/>vel<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vel.x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vel.y<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>**<sp/>move<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vel.x<sp/>*<sp/>time<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vel.y<sp/>*<sp/>time;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wwi.can_wobble_top)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wwi.width;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>wwi.width<sp/>-<sp/>1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.position[i<sp/>+<sp/>wwi.width<sp/>*<sp/>j].y<sp/>=<sp/>wwi.origin[i<sp/>+<sp/>wwi.width<sp/>*<sp/>j].y;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wwi.can_wobble_bottom)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1);<sp/>i<sp/>&lt;<sp/>wwi.count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>wwi.width<sp/>-<sp/>1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.position[i<sp/>-<sp/>wwi.width<sp/>*<sp/>j].y<sp/>=<sp/>wwi.origin[i<sp/>-<sp/>wwi.width<sp/>*<sp/>j].y;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wwi.can_wobble_left)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wwi.count;<sp/>i<sp/>+=<sp/>wwi.width)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>wwi.width<sp/>-<sp/>1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.position[i<sp/>+<sp/>j].x<sp/>=<sp/>wwi.origin[i<sp/>+<sp/>j].x;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wwi.can_wobble_right)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>wwi.width<sp/>-<sp/>1;<sp/>i<sp/>&lt;<sp/>wwi.count;<sp/>i<sp/>+=<sp/>wwi.width)<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>wwi.width<sp/>-<sp/>1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wwi.position[i<sp/>-<sp/>j].x<sp/>=<sp/>wwi.origin[i<sp/>-<sp/>j].x;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>VERBOSE_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>COMPUTE_STATS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_WOBBLYWINDOWS)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Acceleration<sp/>bounds<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>accBound.x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>accBound.y<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_WOBBLYWINDOWS)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Velocity<sp/>bounds<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>velBound.x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>velBound.y<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_WOBBLYWINDOWS)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sum_acc<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>acc_sum<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>***<sp/><sp/>sum_vel<sp/>:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vel_sum;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.wobblying<sp/>=<sp/>!(acc_sum<sp/>&lt;<sp/>m_stopAcceleration<sp/>&amp;&amp;<sp/>vel_sum<sp/>&lt;<sp/>m_stopVelocity);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wwi.status<sp/>!=<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a00bc08f5d0032c27fe66262ec1fe8e0aa5b04970e31aaf2f769b52bb494edfaa6" kindref="member">Moving</ref><sp/>&amp;&amp;<sp/>!wwi.wobblying)<sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windows.remove(w);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_offscreen_effect_1a503d5105f32353e6a0046b8a0ea91b22" kindref="member">unredirect</ref>(w);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(windows.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1af3f4b9a57fd81eabe5c19d6e9e4a76c6" kindref="member">addRepaintFull</ref>();</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wwi.wobblying)<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_offscreen_effect_1ae390a8c07620d899b467b6c919901649" kindref="member">setVertexSnappingMode</ref>(<ref refid="class_k_win_1_1_render_geometry_1a7bc1c02ecb839871aadec8895abda2e4ab7f41fc1412ad2ee75e9b2635d3b9d5c" kindref="member">RenderGeometry::VertexSnappingMode::Round</ref>);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WobblyWindowsEffect::heightRingLinearMean(QList&lt;Pair&gt;<sp/>&amp;data,<sp/>WindowWobblyInfos<sp/>&amp;wwi)</highlight></codeline>
<codeline lineno="960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>neibourgs[8];</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>corners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;res<sp/>=<sp/>wwi.buffer[0];</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>vit<sp/>=<sp/>data[0];</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>data[1];</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>data[wwi.width];</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[2]<sp/>=<sp/>data[wwi.width<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.x<sp/>=<sp/>(neibourgs[0].x<sp/>+<sp/>neibourgs[1].x<sp/>+<sp/>neibourgs[2].x<sp/>+<sp/>3.0<sp/>*<sp/>vit.x)<sp/>/<sp/>6.0;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.y<sp/>=<sp/>(neibourgs[0].y<sp/>+<sp/>neibourgs[1].y<sp/>+<sp/>neibourgs[2].y<sp/>+<sp/>3.0<sp/>*<sp/>vit.y)<sp/>/<sp/>6.0;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;res<sp/>=<sp/>wwi.buffer[wwi.width<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>vit<sp/>=<sp/>data[wwi.width<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>data[wwi.width<sp/>-<sp/>2];</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>data[2<sp/>*<sp/>wwi.width<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[2]<sp/>=<sp/>data[2<sp/>*<sp/>wwi.width<sp/>-<sp/>2];</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.x<sp/>=<sp/>(neibourgs[0].x<sp/>+<sp/>neibourgs[1].x<sp/>+<sp/>neibourgs[2].x<sp/>+<sp/>3.0<sp/>*<sp/>vit.x)<sp/>/<sp/>6.0;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.y<sp/>=<sp/>(neibourgs[0].y<sp/>+<sp/>neibourgs[1].y<sp/>+<sp/>neibourgs[2].y<sp/>+<sp/>3.0<sp/>*<sp/>vit.y)<sp/>/<sp/>6.0;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;res<sp/>=<sp/>wwi.buffer[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)];</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>vit<sp/>=<sp/>data[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)];</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>data[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>data[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>2)];</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[2]<sp/>=<sp/>data[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>2)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.x<sp/>=<sp/>(neibourgs[0].x<sp/>+<sp/>neibourgs[1].x<sp/>+<sp/>neibourgs[2].x<sp/>+<sp/>3.0<sp/>*<sp/>vit.x)<sp/>/<sp/>6.0;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.y<sp/>=<sp/>(neibourgs[0].y<sp/>+<sp/>neibourgs[1].y<sp/>+<sp/>neibourgs[2].y<sp/>+<sp/>3.0<sp/>*<sp/>vit.y)<sp/>/<sp/>6.0;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;res<sp/>=<sp/>wwi.buffer[wwi.count<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>vit<sp/>=<sp/>data[wwi.count<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>data[wwi.count<sp/>-<sp/>2];</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>data[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[2]<sp/>=<sp/>data[wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)<sp/>-<sp/>2];</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.x<sp/>=<sp/>(neibourgs[0].x<sp/>+<sp/>neibourgs[1].x<sp/>+<sp/>neibourgs[2].x<sp/>+<sp/>3.0<sp/>*<sp/>vit.x)<sp/>/<sp/>6.0;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.y<sp/>=<sp/>(neibourgs[0].y<sp/>+<sp/>neibourgs[1].y<sp/>+<sp/>neibourgs[2].y<sp/>+<sp/>3.0<sp/>*<sp/>vit.y)<sp/>/<sp/>6.0;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>borders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>wwi.width<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;res<sp/>=<sp/>wwi.buffer[i];</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>vit<sp/>=<sp/>data[i];</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>data[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>data[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[2]<sp/>=<sp/>data[i<sp/>+<sp/>wwi.width];</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[3]<sp/>=<sp/>data[i<sp/>+<sp/>wwi.width<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[4]<sp/>=<sp/>data[i<sp/>+<sp/>wwi.width<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.x<sp/>=<sp/>(neibourgs[0].x<sp/>+<sp/>neibourgs[1].x<sp/>+<sp/>neibourgs[2].x<sp/>+<sp/>neibourgs[3].x<sp/>+<sp/>neibourgs[4].x<sp/>+<sp/>5.0<sp/>*<sp/>vit.x)<sp/>/<sp/>10.0;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.y<sp/>=<sp/>(neibourgs[0].y<sp/>+<sp/>neibourgs[1].y<sp/>+<sp/>neibourgs[2].y<sp/>+<sp/>neibourgs[3].y<sp/>+<sp/>neibourgs[4].y<sp/>+<sp/>5.0<sp/>*<sp/>vit.y)<sp/>/<sp/>10.0;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1)<sp/>+<sp/>1;<sp/>i<sp/>&lt;<sp/>wwi.count<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;res<sp/>=<sp/>wwi.buffer[i];</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>vit<sp/>=<sp/>data[i];</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>data[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>data[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[2]<sp/>=<sp/>data[i<sp/>-<sp/>wwi.width];</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[3]<sp/>=<sp/>data[i<sp/>-<sp/>wwi.width<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[4]<sp/>=<sp/>data[i<sp/>-<sp/>wwi.width<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.x<sp/>=<sp/>(neibourgs[0].x<sp/>+<sp/>neibourgs[1].x<sp/>+<sp/>neibourgs[2].x<sp/>+<sp/>neibourgs[3].x<sp/>+<sp/>neibourgs[4].x<sp/>+<sp/>5.0<sp/>*<sp/>vit.x)<sp/>/<sp/>10.0;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.y<sp/>=<sp/>(neibourgs[0].y<sp/>+<sp/>neibourgs[1].y<sp/>+<sp/>neibourgs[2].y<sp/>+<sp/>neibourgs[3].y<sp/>+<sp/>neibourgs[4].y<sp/>+<sp/>5.0<sp/>*<sp/>vit.y)<sp/>/<sp/>10.0;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>wwi.width;<sp/>i<sp/>&lt;<sp/>wwi.width<sp/>*<sp/>(wwi.height<sp/>-<sp/>1);<sp/>i<sp/>+=<sp/>wwi.width)<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;res<sp/>=<sp/>wwi.buffer[i];</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>vit<sp/>=<sp/>data[i];</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>data[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>data[i<sp/>-<sp/>wwi.width];</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[2]<sp/>=<sp/>data[i<sp/>+<sp/>wwi.width];</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[3]<sp/>=<sp/>data[i<sp/>-<sp/>wwi.width<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[4]<sp/>=<sp/>data[i<sp/>+<sp/>wwi.width<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.x<sp/>=<sp/>(neibourgs[0].x<sp/>+<sp/>neibourgs[1].x<sp/>+<sp/>neibourgs[2].x<sp/>+<sp/>neibourgs[3].x<sp/>+<sp/>neibourgs[4].x<sp/>+<sp/>5.0<sp/>*<sp/>vit.x)<sp/>/<sp/>10.0;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.y<sp/>=<sp/>(neibourgs[0].y<sp/>+<sp/>neibourgs[1].y<sp/>+<sp/>neibourgs[2].y<sp/>+<sp/>neibourgs[3].y<sp/>+<sp/>neibourgs[4].y<sp/>+<sp/>5.0<sp/>*<sp/>vit.y)<sp/>/<sp/>10.0;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>right<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2<sp/>*<sp/>wwi.width<sp/>-<sp/>1;<sp/>i<sp/>&lt;<sp/>wwi.count<sp/>-<sp/>1;<sp/>i<sp/>+=<sp/>wwi.width)<sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;res<sp/>=<sp/>wwi.buffer[i];</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>vit<sp/>=<sp/>data[i];</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>data[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>data[i<sp/>-<sp/>wwi.width];</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[2]<sp/>=<sp/>data[i<sp/>+<sp/>wwi.width];</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[3]<sp/>=<sp/>data[i<sp/>-<sp/>wwi.width<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[4]<sp/>=<sp/>data[i<sp/>+<sp/>wwi.width<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.x<sp/>=<sp/>(neibourgs[0].x<sp/>+<sp/>neibourgs[1].x<sp/>+<sp/>neibourgs[2].x<sp/>+<sp/>neibourgs[3].x<sp/>+<sp/>neibourgs[4].x<sp/>+<sp/>5.0<sp/>*<sp/>vit.x)<sp/>/<sp/>10.0;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.y<sp/>=<sp/>(neibourgs[0].y<sp/>+<sp/>neibourgs[1].y<sp/>+<sp/>neibourgs[2].y<sp/>+<sp/>neibourgs[3].y<sp/>+<sp/>neibourgs[4].y<sp/>+<sp/>5.0<sp/>*<sp/>vit.y)<sp/>/<sp/>10.0;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>inner<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>wwi.height<sp/>-<sp/>1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>wwi.width<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>i<sp/>+<sp/>j<sp/>*<sp/>wwi.width;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;res<sp/>=<sp/>wwi.buffer[index];</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref><sp/>&amp;vit<sp/>=<sp/>data[index];</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[0]<sp/>=<sp/>data[index<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[1]<sp/>=<sp/>data[index<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[2]<sp/>=<sp/>data[index<sp/>-<sp/>wwi.width];</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[3]<sp/>=<sp/>data[index<sp/>+<sp/>wwi.width];</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[4]<sp/>=<sp/>data[index<sp/>-<sp/>wwi.width<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[5]<sp/>=<sp/>data[index<sp/>-<sp/>wwi.width<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[6]<sp/>=<sp/>data[index<sp/>+<sp/>wwi.width<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neibourgs[7]<sp/>=<sp/>data[index<sp/>+<sp/>wwi.width<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.x<sp/>=<sp/>(neibourgs[0].x<sp/>+<sp/>neibourgs[1].x<sp/>+<sp/>neibourgs[2].x<sp/>+<sp/>neibourgs[3].x<sp/>+<sp/>neibourgs[4].x<sp/>+<sp/>neibourgs[5].x<sp/>+<sp/>neibourgs[6].x<sp/>+<sp/>neibourgs[7].x<sp/>+<sp/>8.0<sp/>*<sp/>vit.x)<sp/>/<sp/>16.0;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.y<sp/>=<sp/>(neibourgs[0].y<sp/>+<sp/>neibourgs[1].y<sp/>+<sp/>neibourgs[2].y<sp/>+<sp/>neibourgs[3].y<sp/>+<sp/>neibourgs[4].y<sp/>+<sp/>neibourgs[5].y<sp/>+<sp/>neibourgs[6].y<sp/>+<sp/>neibourgs[7].y<sp/>+<sp/>8.0<sp/>*<sp/>vit.y)<sp/>/<sp/>16.0;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>wwi.buffer;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>wwi.buffer<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097" refid="class_k_win_1_1_wobbly_windows_effect_1a7f518538e5a62f0a2d108042136b5e38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a7f518538e5a62f0a2d108042136b5e38" kindref="member">WobblyWindowsEffect::isActive</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1098"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!windows.isEmpty();</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102" refid="class_k_win_1_1_wobbly_windows_effect_1ab202dad637c8486057c9efb2732d6752" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a5c7289c9291944458b94237345063a68" kindref="member">WobblyWindowsEffect::stiffness</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1103"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stiffness;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107" refid="class_k_win_1_1_wobbly_windows_effect_1ae59a34da98ac9e39a1d044a3b748e4a1" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1aa6f9e0ab5afd09fd53113b3e26440bf1" kindref="member">WobblyWindowsEffect::drag</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1108"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_drag;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112" refid="class_k_win_1_1_wobbly_windows_effect_1a1c2046a957ff96abae0674599c1c6ed5" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1ad8f75b0a63e4e2120741f3e7aa5d93b2" kindref="member">WobblyWindowsEffect::moveFactor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1113"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_move_factor;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117" refid="class_k_win_1_1_wobbly_windows_effect_1ac26ad08451eae9c95842a8c19e8eb726" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a80ded6c426a9f75306d09017d5edfd4e" kindref="member">WobblyWindowsEffect::xTesselation</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1118"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_xTesselation;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122" refid="class_k_win_1_1_wobbly_windows_effect_1a342c9f57980e43ba1f53d7cb450ad0de" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a6493c14b75b1bdffe330358c663c8aef" kindref="member">WobblyWindowsEffect::yTesselation</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1123"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_yTesselation;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127" refid="class_k_win_1_1_wobbly_windows_effect_1a70e8be2d7a53668850b472ddb72b7065" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a7d90885528d27cd091ae29151d1d1a2e" kindref="member">WobblyWindowsEffect::minVelocity</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1128"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minVelocity;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132" refid="class_k_win_1_1_wobbly_windows_effect_1a6da6832cc80d7ff9e61b5c6df3629f11" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1ae798c92263bf922f9f51ece88687be1d" kindref="member">WobblyWindowsEffect::maxVelocity</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1133"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_maxVelocity;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137" refid="class_k_win_1_1_wobbly_windows_effect_1adf1871ae50c268a4d3450906a70c2daf" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a27ec2b20319178c5372e486b33f357c5" kindref="member">WobblyWindowsEffect::stopVelocity</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1138"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stopVelocity;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142" refid="class_k_win_1_1_wobbly_windows_effect_1afdd1c18c82b41c2165003b44d6d94a28" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1ae63c44edd798cef641d5cbf97092aea2" kindref="member">WobblyWindowsEffect::minAcceleration</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1143"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minAcceleration;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147" refid="class_k_win_1_1_wobbly_windows_effect_1ace90e374676860ae2ae1d3d80103eae4" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a75d0c60666b5d108e7c9ba1303979c5f" kindref="member">WobblyWindowsEffect::maxAcceleration</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1148"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_maxAcceleration;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152" refid="class_k_win_1_1_wobbly_windows_effect_1a0050a95e608a44301e12f8df21404e8c" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a961a6093573c2a5af167ffd0d66cfef8" kindref="member">WobblyWindowsEffect::stopAcceleration</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1153"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stopAcceleration;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157" refid="class_k_win_1_1_wobbly_windows_effect_1a0603908ad181025da3a2a8f42928e1b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a0603908ad181025da3a2a8f42928e1b1" kindref="member">WobblyWindowsEffect::isMoveWobble</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1158"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_moveWobble;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162" refid="class_k_win_1_1_wobbly_windows_effect_1a8dace18603cf9cb1cd84288d9a8cf7bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wobbly_windows_effect_1a8dace18603cf9cb1cd84288d9a8cf7bf" kindref="member">WobblyWindowsEffect::isResizeWobble</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1163"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_resizeWobble;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_wobblywindows.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/plugins/wobblywindows/wobblywindows.cpp"/>
  </compounddef>
</doxygen>
