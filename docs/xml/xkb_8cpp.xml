<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="xkb_8cpp" kind="file" language="C++">
    <compoundname>xkb.cpp</compoundname>
    <includes refid="xkb_8h" local="yes">xkb.h</includes>
    <includes local="yes">dbusproperties_interface.h</includes>
    <includes refid="inputmethod_8h" local="yes">inputmethod.h</includes>
    <includes refid="c__ptr_8h" local="yes">utils/c_ptr.h</includes>
    <includes refid="common_8h" local="yes">utils/common.h</includes>
    <includes refid="inputmethod__v1_8h" local="yes">wayland/inputmethod_v1.h</includes>
    <includes refid="keyboard_8h" local="yes">wayland/keyboard.h</includes>
    <includes refid="seat_8h" local="yes">wayland/seat.h</includes>
    <includes local="no">KConfigGroup</includes>
    <includes local="no">QKeyEvent</includes>
    <includes local="no">QTemporaryFile</includes>
    <includes local="no">QtGui/private/qxkbcommon_p.h</includes>
    <includes local="no">xkbcommon/xkbcommon-compose.h</includes>
    <includes local="no">xkbcommon/xkbcommon-keysyms.h</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes local="no">bitset</includes>
    <includes local="no">linux/input-event-codes.h</includes>
    <includes local="no">sys/mman.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="yes">moc_xkb.cpp</includes>
    <incdepgraph>
      <node id="5">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>input.h</label>
        <link refid="input_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>input_event_spy.h</label>
        <link refid="input__event__spy_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>inputmethod.h</label>
        <link refid="inputmethod_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>utils/c_ptr.h</label>
        <link refid="c__ptr_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>wayland/inputmethod_v1.h</label>
        <link refid="inputmethod__v1_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>wayland/keyboard.h</label>
        <link refid="keyboard_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>wayland/seat.h</label>
        <link refid="seat_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>textinput.h</label>
        <link refid="textinput_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>wayland/textinput_v2.h</label>
        <link refid="textinput__v2_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/xkb.cpp</label>
        <link refid="xkb_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>xkb.h</label>
        <link refid="xkb_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>KConfigGroup</label>
      </node>
      <node id="15">
        <label>KConfigWatcher</label>
      </node>
      <node id="16">
        <label>KSharedConfig</label>
      </node>
      <node id="53">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="54">
        <label>QApplication</label>
      </node>
      <node id="38">
        <label>QByteArray</label>
      </node>
      <node id="7">
        <label>QCoreApplication</label>
      </node>
      <node id="8">
        <label>QImage</label>
      </node>
      <node id="47">
        <label>QKeyEvent</label>
      </node>
      <node id="40">
        <label>QList</label>
      </node>
      <node id="21">
        <label>QLoggingCategory</label>
      </node>
      <node id="41">
        <label>QMatrix4x4</label>
      </node>
      <node id="28">
        <label>QMetaType</label>
      </node>
      <node id="13">
        <label>QObject</label>
      </node>
      <node id="9">
        <label>QPoint</label>
      </node>
      <node id="14">
        <label>QPointer</label>
      </node>
      <node id="55">
        <label>QProcessEnvironment</label>
      </node>
      <node id="42">
        <label>QRect</label>
      </node>
      <node id="17">
        <label>QSet</label>
      </node>
      <node id="39">
        <label>QString</label>
      </node>
      <node id="48">
        <label>QTemporaryFile</label>
      </node>
      <node id="34">
        <label>QTimer</label>
      </node>
      <node id="10">
        <label>QVariant</label>
      </node>
      <node id="11">
        <label>QVector2D</label>
      </node>
      <node id="29">
        <label>QtGlobal</label>
      </node>
      <node id="49">
        <label>QtGui/private/qxkbcommon_p.h</label>
      </node>
      <node id="56">
        <label>bitset</label>
      </node>
      <node id="33">
        <label>chrono</label>
      </node>
      <node id="43">
        <label>climits</label>
      </node>
      <node id="4">
        <label>config-kwin.h</label>
      </node>
      <node id="23">
        <label>dbusproperties_interface.h</label>
      </node>
      <node id="18">
        <label>functional</label>
      </node>
      <node id="12">
        <label>kwin_export.h</label>
      </node>
      <node id="57">
        <label>linux/input-event-codes.h</label>
      </node>
      <node id="26">
        <label>memory</label>
      </node>
      <node id="60">
        <label>moc_xkb.cpp</label>
      </node>
      <node id="22">
        <label>optional</label>
      </node>
      <node id="58">
        <label>sys/mman.h</label>
      </node>
      <node id="59">
        <label>unistd.h</label>
      </node>
      <node id="30">
        <label>utility</label>
      </node>
      <node id="31">
        <label>vector</label>
      </node>
      <node id="50">
        <label>xkbcommon/xkbcommon-compose.h</label>
      </node>
      <node id="51">
        <label>xkbcommon/xkbcommon-keysyms.h</label>
      </node>
      <node id="19">
        <label>xkbcommon/xkbcommon.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_k_win_1_1_trans_key" prot="public">KWin::TransKey</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="xkb_8cpp_1a7714550c34e32ea29e3fc7e6cf5d2094" prot="public" static="no">
        <name>XKB_LED_NAME_COMPOSE</name>
        <initializer>&quot;Compose&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xkb.cpp" line="35" column="9" bodyfile="kwin/src/xkb.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xkb_8cpp_1a105cd53c0a87d9cf8d6d119f81e1e2de" prot="public" static="no">
        <name>XKB_LED_NAME_KANA</name>
        <initializer>&quot;Kana&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xkb.cpp" line="38" column="9" bodyfile="kwin/src/xkb.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="xkb_8cpp_1a04f34291b07f88f8abefaf63b37600ee" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int EVDEV_OFFSET</definition>
        <argsstring></argsstring>
        <name>EVDEV_OFFSET</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xkb.cpp" line="45" column="18" bodyfile="kwin/src/xkb.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xkb_8cpp_1afa837c1b0be8364e0e9b16b4eaebf586" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* s_locale1Interface</definition>
        <argsstring></argsstring>
        <name>s_locale1Interface</name>
        <initializer>= &quot;org.freedesktop.locale1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xkb.cpp" line="46" column="19" bodyfile="kwin/src/xkb.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2013,<sp/>2016,<sp/>2017<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xkb_8h" kindref="compound">xkb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbusproperties_interface.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inputmethod_8h" kindref="compound">inputmethod.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="c__ptr_8h" kindref="compound">utils/c_ptr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">utils/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inputmethod__v1_8h" kindref="compound">wayland/inputmethod_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keyboard_8h" kindref="compound">wayland/keyboard.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="seat_8h" kindref="compound">wayland/seat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>frameworks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KConfigGroup&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QKeyEvent&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTemporaryFile&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtGui/private/qxkbcommon_p.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>xkbcommon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xkbcommon/xkbcommon-compose.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xkbcommon/xkbcommon-keysyms.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bitset&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/input-event-codes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>drop<sp/>these<sp/>ifdefs<sp/>when<sp/>xkbcommon<sp/>&gt;=<sp/>1.8.0<sp/>is<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XKB_LED_NAME_COMPOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="xkb_8cpp_1a7714550c34e32ea29e3fc7e6cf5d2094" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XKB_LED_NAME_COMPOSE<sp/>&quot;Compose&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XKB_LED_NAME_KANA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="xkb_8cpp_1a105cd53c0a87d9cf8d6d119f81e1e2de" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XKB_LED_NAME_KANA<sp/>&quot;Kana&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">Q_LOGGING_CATEGORY(KWIN_XKB,<sp/></highlight><highlight class="stringliteral">&quot;kwin_xkbcommon&quot;</highlight><highlight class="normal">,<sp/>QtWarningMsg)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>offset<sp/>between<sp/>KEY_*<sp/>numbering,<sp/>and<sp/>keycodes<sp/>in<sp/>the<sp/>XKB<sp/>evdev</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>dataset.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EVDEV_OFFSET<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s_locale1Interface<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;org.freedesktop.locale1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="struct_k_win_1_1_trans_key" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_trans_key" kindref="compound">TransKey</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53" refid="struct_k_win_1_1_trans_key_1a70daf2ab82abeaba84f2164d07db234c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/><ref refid="struct_k_win_1_1_trans_key_1a70daf2ab82abeaba84f2164d07db234c" kindref="member">keySymX</ref>;</highlight></codeline>
<codeline lineno="54" refid="struct_k_win_1_1_trans_key_1a8c9d01c2994abddcb7d83422ac47503c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_trans_key_1a8c9d01c2994abddcb7d83422ac47503c" kindref="member">keySymQt</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_trans_key" kindref="compound">TransKey</ref><sp/>g_rgSymXToQT[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>must<sp/>be<sp/>kept<sp/>in<sp/>sync<sp/>with<sp/>qxkbcommon.cpp<sp/>in<sp/>Qt!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Escape,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Escape<sp/>},</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Tab,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Tab<sp/>},</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_ISO_Left_Tab,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Backtab<sp/>},</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_BackSpace,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Backspace<sp/>},</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Return,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Return<sp/>},</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Insert,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Insert<sp/>},</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Delete,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Delete<sp/>},</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Clear,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Delete<sp/>},</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Pause,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Pause<sp/>},</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Print,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Print<sp/>},</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Sys_Req,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_SysReq<sp/>},</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>0x1005FF60,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_SysReq<sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hardcoded<sp/>Sun<sp/>SysReq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>0x1007ff00,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_SysReq<sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hardcoded<sp/>X386<sp/>SysReq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cursor<sp/>movement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Home,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Home<sp/>},</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_End,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_End<sp/>},</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Left,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Left<sp/>},</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Up,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Up<sp/>},</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Right,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Right<sp/>},</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Down,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Down<sp/>},</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Prior,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_PageUp<sp/>},</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Next,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_PageDown<sp/>},</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modifiers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Shift_L,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Shift<sp/>},</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Shift_R,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Shift<sp/>},</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Shift_Lock,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Shift<sp/>},</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Control_L,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Control<sp/>},</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Control_R,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Control<sp/>},</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Meta_L,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Meta<sp/>},</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Meta_R,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Meta<sp/>},</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Alt_L,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Alt<sp/>},</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Alt_R,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Alt<sp/>},</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Caps_Lock,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_CapsLock<sp/>},</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Num_Lock,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_NumLock<sp/>},</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Scroll_Lock,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_ScrollLock<sp/>},</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Super_L,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Super_L<sp/>},</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Super_R,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Super_R<sp/>},</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Menu,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Menu<sp/>},</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hyper_L,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hyper_L<sp/>},</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hyper_R,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hyper_R<sp/>},</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Help,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Help<sp/>},</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>0x1000FF74,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Backtab<sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hardcoded<sp/>HP<sp/>backtab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>0x1005FF10,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_F11<sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hardcoded<sp/>Sun<sp/>F36<sp/>(labeled<sp/>F11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>0x1005FF11,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_F12<sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hardcoded<sp/>Sun<sp/>F37<sp/>(labeled<sp/>F12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>numeric<sp/>and<sp/>function<sp/>keypad<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Space,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Space<sp/>},</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Tab,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Tab<sp/>},</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Enter,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Enter<sp/>},</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Home,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Home<sp/>},</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Left,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Left<sp/>},</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Up,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Up<sp/>},</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Right,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Right<sp/>},</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Down,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Down<sp/>},</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Prior,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_PageUp<sp/>},</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Next,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_PageDown<sp/>},</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_End,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_End<sp/>},</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Begin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Clear<sp/>},</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Insert,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Insert<sp/>},</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Delete,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Delete<sp/>},</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Equal,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Equal<sp/>},</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Multiply,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Asterisk<sp/>},</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Add,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Plus<sp/>},</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Separator,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Comma<sp/>},</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Subtract,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Minus<sp/>},</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Decimal,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Period<sp/>},</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_KP_Divide,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Slash<sp/>},</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>special<sp/>non-XF86<sp/>function<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Undo,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Undo<sp/>},</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Redo,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Redo<sp/>},</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Find,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Find<sp/>},</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Cancel,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Cancel<sp/>},</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>International<sp/>input<sp/>method<sp/>support<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>International<sp/>&amp;<sp/>multi-key<sp/>character<sp/>composition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_ISO_Level3_Shift,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_AltGr<sp/>},</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Multi_key,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Multi_key<sp/>},</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Codeinput,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Codeinput<sp/>},</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_SingleCandidate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_SingleCandidate<sp/>},</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_MultipleCandidate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_MultipleCandidate<sp/>},</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_PreviousCandidate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_PreviousCandidate<sp/>},</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Misc<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Mode_switch,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Mode_switch<sp/>},</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_script_switch,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Mode_switch<sp/>},</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Japanese<sp/>keyboard<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Kanji,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Kanji<sp/>},</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Muhenkan,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Muhenkan<sp/>},</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{<sp/>XKB_KEY_Henkan_Mode,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Henkan_Mode<sp/>},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Henkan_Mode,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Henkan<sp/>},</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Henkan,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Henkan<sp/>},</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Romaji,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Romaji<sp/>},</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hiragana,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hiragana<sp/>},</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Katakana,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Katakana<sp/>},</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hiragana_Katakana,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hiragana_Katakana<sp/>},</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Zenkaku,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Zenkaku<sp/>},</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hankaku,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hankaku<sp/>},</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Zenkaku_Hankaku,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Zenkaku_Hankaku<sp/>},</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Touroku,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Touroku<sp/>},</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Massyo,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Massyo<sp/>},</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Kana_Lock,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Kana_Lock<sp/>},</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Kana_Shift,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Kana_Shift<sp/>},</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Eisu_Shift,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Eisu_Shift<sp/>},</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Eisu_toggle,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Eisu_toggle<sp/>},</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{<sp/>XKB_KEY_Kanji_Bangou,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Kanji_Bangou<sp/>},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{<sp/>XKB_KEY_Zen_Koho,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Zen_Koho<sp/>},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{<sp/>XKB_KEY_Mae_Koho,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Mae_Koho<sp/>},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Kanji_Bangou,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Codeinput<sp/>},</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Zen_Koho,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_MultipleCandidate<sp/>},</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Mae_Koho,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_PreviousCandidate<sp/>},</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Korean<sp/>keyboard<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hangul<sp/>},</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_Start,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hangul_Start<sp/>},</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_End,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hangul_End<sp/>},</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_Hanja,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hangul_Hanja<sp/>},</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_Jamo,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hangul_Jamo<sp/>},</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_Romaja,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hangul_Romaja<sp/>},</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{<sp/>XKB_KEY_Hangul_Codeinput,<sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hangul_Codeinput<sp/>},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_Codeinput,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Codeinput<sp/>},</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_Jeonja,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hangul_Jeonja<sp/>},</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_Banja,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hangul_Banja<sp/>},</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_PreHanja,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hangul_PreHanja<sp/>},</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_PostHanja,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hangul_PostHanja<sp/>},</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{<sp/>XKB_KEY_Hangul_SingleCandidate,Qt::Key_Hangul_SingleCandidate<sp/>},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{<sp/>XKB_KEY_Hangul_MultipleCandidate,Qt::Key_Hangul_MultipleCandidate<sp/>},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{<sp/>XKB_KEY_Hangul_PreviousCandidate,Qt::Key_Hangul_PreviousCandidate<sp/>},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_SingleCandidate,<sp/><sp/>Qt::Key_SingleCandidate<sp/>},</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_MultipleCandidate,Qt::Key_MultipleCandidate<sp/>},</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_PreviousCandidate,Qt::Key_PreviousCandidate<sp/>},</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_Special,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hangul_Special<sp/>},</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{<sp/>XKB_KEY_Hangul_switch,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hangul_switch<sp/>},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_Hangul_switch,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Mode_switch<sp/>},</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dead<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_grave,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Grave<sp/>},</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_acute,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Acute<sp/>},</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_circumflex,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Circumflex<sp/>},</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_tilde,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Tilde<sp/>},</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_macron,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Macron<sp/>},</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_breve,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Breve<sp/>},</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_abovedot,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Abovedot<sp/>},</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_diaeresis,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Diaeresis<sp/>},</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_abovering,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Abovering<sp/>},</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_doubleacute,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Doubleacute<sp/>},</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_caron,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Caron<sp/>},</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_cedilla,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Cedilla<sp/>},</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_ogonek,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Ogonek<sp/>},</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_iota,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Iota<sp/>},</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_voiced_sound,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Voiced_Sound<sp/>},</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_semivoiced_sound,<sp/><sp/><sp/>Qt::Key_Dead_Semivoiced_Sound<sp/>},</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_belowdot,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Belowdot<sp/>},</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_hook,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Hook<sp/>},</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_horn,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Horn<sp/>},</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_stroke,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Stroke<sp/>},</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_abovecomma,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Abovecomma<sp/>},</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_abovereversedcomma,<sp/>Qt::Key_Dead_Abovereversedcomma<sp/>},</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_doublegrave,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Doublegrave<sp/>},</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_belowring,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Belowring<sp/>},</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_belowmacron,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Belowmacron<sp/>},</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_belowcircumflex,<sp/><sp/><sp/><sp/>Qt::Key_Dead_Belowcircumflex<sp/>},</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_belowtilde,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Belowtilde<sp/>},</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_belowbreve,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Belowbreve<sp/>},</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_belowdiaeresis,<sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Belowdiaeresis<sp/>},</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_invertedbreve,<sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Invertedbreve<sp/>},</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_belowcomma,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Belowcomma<sp/>},</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_currency,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Currency<sp/>},</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_a<sp/>},</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_A,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_A<sp/>},</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_e,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_e<sp/>},</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_E,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_E<sp/>},</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_i,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_i<sp/>},</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_I,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_I<sp/>},</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_o,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_o<sp/>},</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_O,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_O<sp/>},</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_u,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_u<sp/>},</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_U<sp/>},</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_small_schwa,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Small_Schwa<sp/>},</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_capital_schwa,<sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Capital_Schwa<sp/>},</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_greek,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Greek<sp/>},</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>four<sp/>XKB_KEY_dead<sp/>keys<sp/>got<sp/>removed<sp/>in<sp/>libxkbcommon<sp/>1.6.0</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/>The<sp/>define<sp/>check<sp/>is<sp/>kind<sp/>of<sp/>version<sp/>check<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XKB_KEY_dead_lowline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_lowline,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Dead_Lowline<sp/>},</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_aboveverticalline,<sp/><sp/>Qt::Key_Dead_Aboveverticalline<sp/>},</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_belowverticalline,<sp/><sp/>Qt::Key_Dead_Belowverticalline<sp/>},</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_dead_longsolidusoverlay,<sp/>Qt::Key_Dead_Longsolidusoverlay<sp/>},</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>keys<sp/>from<sp/>X.org<sp/>-<sp/>This<sp/>include<sp/>multimedia<sp/>keys,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wireless/bluetooth/uwb<sp/>keys,<sp/>special<sp/>launcher<sp/>keys,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Back,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Back<sp/>},</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Forward,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Forward<sp/>},</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Stop,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Stop<sp/>},</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Refresh,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Refresh<sp/>},</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Favorites,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Favorites<sp/>},</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioMedia,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_LaunchMedia<sp/>},</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86OpenURL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_OpenUrl<sp/>},</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86HomePage,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_HomePage<sp/>},</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Search,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Search<sp/>},</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioLowerVolume,<sp/><sp/><sp/><sp/>Qt::Key_VolumeDown<sp/>},</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioMute,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_VolumeMute<sp/>},</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioRaiseVolume,<sp/><sp/><sp/><sp/>Qt::Key_VolumeUp<sp/>},</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioPlay,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_MediaPlay<sp/>},</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioStop,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_MediaStop<sp/>},</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioPrev,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_MediaPrevious<sp/>},</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioNext,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_MediaNext<sp/>},</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioRecord,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_MediaRecord<sp/>},</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioPause,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_MediaPause<sp/>},</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Mail,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_LaunchMail<sp/>},</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86MyComputer,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_LaunchMedia<sp/>},</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Memo,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Memo<sp/>},</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86ToDoList,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_ToDoList<sp/>},</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Calendar,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Calendar<sp/>},</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86PowerDown,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_PowerDown<sp/>},</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86ContrastAdjust,<sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_ContrastAdjust<sp/>},</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Standby,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Standby<sp/>},</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86MonBrightnessUp,<sp/><sp/><sp/><sp/><sp/>Qt::Key_MonBrightnessUp<sp/>},</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86MonBrightnessDown,<sp/><sp/><sp/>Qt::Key_MonBrightnessDown<sp/>},</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86KbdLightOnOff,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_KeyboardLightOnOff<sp/>},</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86KbdBrightnessUp,<sp/><sp/><sp/><sp/><sp/>Qt::Key_KeyboardBrightnessUp<sp/>},</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86KbdBrightnessDown,<sp/><sp/><sp/>Qt::Key_KeyboardBrightnessDown<sp/>},</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86PowerOff,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_PowerOff<sp/>},</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86WakeUp,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_WakeUp<sp/>},</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Eject,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Eject<sp/>},</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86ScreenSaver,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_ScreenSaver<sp/>},</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86WWW,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_WWW<sp/>},</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Sleep,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Sleep<sp/>},</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86LightBulb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_LightBulb<sp/>},</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Shop,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Shop<sp/>},</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86History,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_History<sp/>},</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AddFavorite,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_AddFavorite<sp/>},</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86HotLinks,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_HotLinks<sp/>},</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86BrightnessAdjust,<sp/><sp/><sp/><sp/>Qt::Key_BrightnessAdjust<sp/>},</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Finance,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Finance<sp/>},</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Community,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Community<sp/>},</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioRewind,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_AudioRewind<sp/>},</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86BackForward,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_BackForward<sp/>},</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86ApplicationLeft,<sp/><sp/><sp/><sp/><sp/>Qt::Key_ApplicationLeft<sp/>},</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86ApplicationRight,<sp/><sp/><sp/><sp/>Qt::Key_ApplicationRight<sp/>},</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Book,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Book<sp/>},</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86CD,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_CD<sp/>},</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Calculater,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Calculator<sp/>},</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Calculator,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Calculator<sp/>},</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Clear,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Clear<sp/>},</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86ClearGrab,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_ClearGrab<sp/>},</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Close,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Close<sp/>},</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Copy,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Copy<sp/>},</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Cut,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Cut<sp/>},</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Display,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Display<sp/>},</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86DOS,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_DOS<sp/>},</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Documents,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Documents<sp/>},</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Excel,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Excel<sp/>},</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Explorer,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Explorer<sp/>},</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Game,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Game<sp/>},</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Go,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Go<sp/>},</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86iTouch,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_iTouch<sp/>},</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86LogOff,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_LogOff<sp/>},</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Market,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Market<sp/>},</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Meeting,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Meeting<sp/>},</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86MenuKB,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_MenuKB<sp/>},</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86MenuPB,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_MenuPB<sp/>},</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86MySites,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_MySites<sp/>},</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86New,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_New<sp/>},</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86News,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_News<sp/>},</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86OfficeHome,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_OfficeHome<sp/>},</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Open,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Open<sp/>},</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Option,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Option<sp/>},</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Paste,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Paste<sp/>},</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Phone,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Phone<sp/>},</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Reply,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Reply<sp/>},</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Reload,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Reload<sp/>},</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86RotateWindows,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_RotateWindows<sp/>},</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86RotationPB,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_RotationPB<sp/>},</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86RotationKB,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_RotationKB<sp/>},</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Save,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Save<sp/>},</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Send,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Send<sp/>},</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Spell,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Spell<sp/>},</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86SplitScreen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_SplitScreen<sp/>},</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Support,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Support<sp/>},</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86TaskPane,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_TaskPane<sp/>},</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Terminal,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Terminal<sp/>},</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Tools,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Tools<sp/>},</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Travel,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Travel<sp/>},</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Video,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Video<sp/>},</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Word,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Word<sp/>},</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Xfer,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Xfer<sp/>},</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86ZoomIn,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_ZoomIn<sp/>},</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86ZoomOut,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_ZoomOut<sp/>},</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Away,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Away<sp/>},</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Messenger,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Messenger<sp/>},</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86WebCam,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_WebCam<sp/>},</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86MailForward,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_MailForward<sp/>},</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Pictures,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Pictures<sp/>},</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Music,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Music<sp/>},</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Battery,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Battery<sp/>},</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Bluetooth,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Bluetooth<sp/>},</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86WLAN,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_WLAN<sp/>},</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86UWB,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_UWB<sp/>},</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioForward,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_AudioForward<sp/>},</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioRepeat,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_AudioRepeat<sp/>},</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioRandomPlay,<sp/><sp/><sp/><sp/><sp/>Qt::Key_AudioRandomPlay<sp/>},</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Subtitle,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Subtitle<sp/>},</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioCycleTrack,<sp/><sp/><sp/><sp/><sp/>Qt::Key_AudioCycleTrack<sp/>},</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Time,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Time<sp/>},</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Select,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Select<sp/>},</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86View,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_View<sp/>},</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86TopMenu,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_TopMenu<sp/>},</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Red,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Red<sp/>},</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Green,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Green<sp/>},</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Yellow,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Yellow<sp/>},</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Blue,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Blue<sp/>},</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Bluetooth,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Bluetooth<sp/>},</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Suspend,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Suspend<sp/>},</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Hibernate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Hibernate<sp/>},</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86TouchpadToggle,<sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_TouchpadToggle<sp/>},</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86TouchpadOn,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_TouchpadOn<sp/>},</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86TouchpadOff,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_TouchpadOff<sp/>},</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86AudioMicMute,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_MicMute<sp/>},</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Launch0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Launch0<sp/>},</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Launch1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Launch1<sp/>},</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Launch2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Launch2<sp/>},</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Launch3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Launch3<sp/>},</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Launch4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Launch4<sp/>},</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Launch5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Launch5<sp/>},</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Launch6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Launch6<sp/>},</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Launch7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Launch7<sp/>},</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Launch8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Launch8<sp/>},</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86Launch9,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_Launch9<sp/>},</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86LaunchA,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_LaunchA<sp/>},</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86LaunchB,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_LaunchB<sp/>},</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86LaunchC,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_LaunchC<sp/>},</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86LaunchD,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_LaunchD<sp/>},</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86LaunchE,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_LaunchE<sp/>},</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>XKB_KEY_XF86LaunchF,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Key_LaunchF<sp/>},</highlight></codeline>
<codeline lineno="408"><highlight class="normal">};</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>xkbLogHandler(xkb_context<sp/>*context,<sp/>xkb_log_level<sp/>priority,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>va_list<sp/>args)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[1024];</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>std::vsnprintf(buf,<sp/>1023,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>args);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(length<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>std::isspace(buf[length<sp/>-<sp/>1]))<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--length;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(priority)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XKB_LOG_LEVEL_DEBUG:</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_XKB,<sp/></highlight><highlight class="stringliteral">&quot;XKB:<sp/>%.*s&quot;</highlight><highlight class="normal">,<sp/>length,<sp/>buf);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XKB_LOG_LEVEL_INFO:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCInfo(KWIN_XKB,<sp/></highlight><highlight class="stringliteral">&quot;XKB:<sp/>%.*s&quot;</highlight><highlight class="normal">,<sp/>length,<sp/>buf);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XKB_LOG_LEVEL_WARNING:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_XKB,<sp/></highlight><highlight class="stringliteral">&quot;XKB:<sp/>%.*s&quot;</highlight><highlight class="normal">,<sp/>length,<sp/>buf);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XKB_LOG_LEVEL_ERROR:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XKB_LOG_LEVEL_CRITICAL:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_XKB,<sp/></highlight><highlight class="stringliteral">&quot;XKB:<sp/>%.*s&quot;</highlight><highlight class="normal">,<sp/>length,<sp/>buf);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_XKBCOMMON_NO_SECURE_GETENV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>xkb_context_flags<sp/><ref refid="namespace_k_win_1a7ae1922c734d977e7f05aa4dffb84dbd" kindref="member">KWIN_XKB_CONTEXT_FLAGS</ref><sp/>=<sp/>XKB_CONTEXT_NO_SECURE_GETENV;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="namespace_k_win_1a7ae1922c734d977e7f05aa4dffb84dbd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>xkb_context_flags<sp/><ref refid="namespace_k_win_1a7ae1922c734d977e7f05aa4dffb84dbd" kindref="member">KWIN_XKB_CONTEXT_FLAGS</ref><sp/>=<sp/>XKB_CONTEXT_NO_FLAGS;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="class_k_win_1_1_xkb_1a97094ad9d7c3174f7dd50ffd964656d8" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_xkb_1a97094ad9d7c3174f7dd50ffd964656d8" kindref="member">Xkb::Xkb</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>followLocale1)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_context(xkb_context_new(<ref refid="namespace_k_win_1a7ae1922c734d977e7f05aa4dffb84dbd" kindref="member">KWIN_XKB_CONTEXT_FLAGS</ref>))</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_keymap(nullptr)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_state(nullptr)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_shiftModifier(0)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_capsModifier(0)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_controlModifier(0)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_altModifier(0)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_metaModifier(0)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_numModifier(0)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_numLock(0)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_capsLock(0)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_scrollLock(0)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_composeLed(0)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_kanaLed(0)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_modifiers(Qt::<ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a12bf109a43571f68ce1e49b4a8fd17f0" kindref="member">NoModifier</ref>)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_consumedModifiers(Qt::<ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a12bf109a43571f68ce1e49b4a8fd17f0" kindref="member">NoModifier</ref>)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_keysym(XKB_KEY_NoSymbol)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_leds()</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_followLocale1(followLocale1)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;KWin::LEDs&gt;();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_context)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_XKB)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>create<sp/>xkb<sp/>context&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_context_set_log_level(m_context,<sp/>XKB_LOG_LEVEL_DEBUG);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_context_set_log_fn(m_context,<sp/>&amp;xkbLogHandler);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>locale<sp/>as<sp/>described<sp/>in<sp/>xkbcommon<sp/>doc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cannot<sp/>use<sp/>QLocale<sp/>as<sp/>it<sp/>drops<sp/>the<sp/>modifier<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QByteArray<sp/>locale<sp/>=<sp/>qgetenv(</highlight><highlight class="stringliteral">&quot;LC_ALL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(locale.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>locale<sp/>=<sp/>qgetenv(</highlight><highlight class="stringliteral">&quot;LC_CTYPE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(locale.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>locale<sp/>=<sp/>qgetenv(</highlight><highlight class="stringliteral">&quot;LANG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(locale.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>locale<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_compose.table<sp/>=<sp/>xkb_compose_table_new_from_locale(m_context,<sp/>locale.constData(),<sp/>XKB_COMPOSE_COMPILE_NO_FLAGS);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_compose.table)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_compose.state<sp/>=<sp/>xkb_compose_state_new(m_compose.table,<sp/>XKB_COMPOSE_STATE_NO_FLAGS);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_followLocale1)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>connected<sp/>=<sp/>QDBusConnection::systemBus().connect(s_locale1Interface,<sp/></highlight><highlight class="stringliteral">&quot;/org/freedesktop/locale1&quot;</highlight><highlight class="normal">,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;org.freedesktop.DBus.Properties&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;PropertiesChanged&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SLOT(<ref refid="class_k_win_1_1_xkb_1ae12bb4ca682ce36aa4c57935db64e54b" kindref="member">reconfigure</ref>()));</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!connected)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_XKB)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>connect<sp/>to<sp/>org.freedesktop.locale1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="class_k_win_1_1_xkb_1a62c5acafc7f0c7b9414f5f26e6f47be0" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_xkb_1a62c5acafc7f0c7b9414f5f26e6f47be0" kindref="member">Xkb::~Xkb</ref>()</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>xkb_compose_state_unref(m_compose.state);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>xkb_compose_table_unref(m_compose.table);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>xkb_state_unref(m_state);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>xkb_keymap_unref(m_keymap);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>xkb_context_unref(m_context);</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="class_k_win_1_1_xkb_1a40d361916e8fc46a92fd36a97b1fc60b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a40d361916e8fc46a92fd36a97b1fc60b" kindref="member">Xkb::setConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KSharedConfigPtr<sp/>&amp;config)</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>m_configGroup<sp/>=<sp/>config-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Layout&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="class_k_win_1_1_xkb_1a039d832b376ec2c36ee32c8fb1a32e57" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a039d832b376ec2c36ee32c8fb1a32e57" kindref="member">Xkb::setNumLockConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KSharedConfigPtr<sp/>&amp;config)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>m_numLockConfig<sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="class_k_win_1_1_xkb_1ae12bb4ca682ce36aa4c57935db64e54b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1ae12bb4ca682ce36aa4c57935db64e54b" kindref="member">Xkb::reconfigure</ref>()</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_context)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>xkb_keymap<sp/>*<ref refid="class_k_win_1_1_xkb_1ac6cacfcb7f4a12b29c98eb4e8ccdf55c" kindref="member">keymap</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qEnvironmentVariableIsSet(</highlight><highlight class="stringliteral">&quot;KWIN_XKB_DEFAULT_KEYMAP&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_followLocale1)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1ac6cacfcb7f4a12b29c98eb4e8ccdf55c" kindref="member">keymap</ref><sp/>=<sp/>loadKeymapFromLocale1();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1ac6cacfcb7f4a12b29c98eb4e8ccdf55c" kindref="member">keymap</ref><sp/>=<sp/>loadKeymapFromConfig();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_xkb_1ac6cacfcb7f4a12b29c98eb4e8ccdf55c" kindref="member">keymap</ref>)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_XKB)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>create<sp/>xkb<sp/>keymap<sp/>from<sp/>configuration&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1ac6cacfcb7f4a12b29c98eb4e8ccdf55c" kindref="member">keymap</ref><sp/>=<sp/>loadDefaultKeymap();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_xkb_1ac6cacfcb7f4a12b29c98eb4e8ccdf55c" kindref="member">keymap</ref>)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateKeymap(<ref refid="class_k_win_1_1_xkb_1ac6cacfcb7f4a12b29c98eb4e8ccdf55c" kindref="member">keymap</ref>);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_XKB)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>create<sp/>default<sp/>xkb<sp/>keymap&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stringIsEmptyOrNull(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>str[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xkb::applyEnvironmentRules(xkb_rule_names<sp/>&amp;ruleNames)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringIsEmptyOrNull(ruleNames.rules))<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ruleNames.rules<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;XKB_DEFAULT_RULES&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringIsEmptyOrNull(ruleNames.model))<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ruleNames.model<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;XKB_DEFAULT_MODEL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringIsEmptyOrNull(ruleNames.layout))<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ruleNames.layout<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;XKB_DEFAULT_LAYOUT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ruleNames.variant<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;XKB_DEFAULT_VARIANT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ruleNames.options<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ruleNames.options<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;XKB_DEFAULT_OPTIONS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal">xkb_keymap<sp/>*Xkb::loadKeymapFromConfig()</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_configGroup.isValid())<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>model<sp/>=<sp/>m_configGroup.readEntry(</highlight><highlight class="stringliteral">&quot;Model&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pc104&quot;</highlight><highlight class="normal">).toLatin1();</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>layout<sp/>=<sp/>m_configGroup.readEntry(</highlight><highlight class="stringliteral">&quot;LayoutList&quot;</highlight><highlight class="normal">).toLatin1();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>variant<sp/>=<sp/>m_configGroup.readEntry(</highlight><highlight class="stringliteral">&quot;VariantList&quot;</highlight><highlight class="normal">).toLatin1();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/><ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref><sp/>=<sp/>m_configGroup.readEntry(</highlight><highlight class="stringliteral">&quot;Options&quot;</highlight><highlight class="normal">).toLatin1();</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>xkb_rule_names<sp/>ruleNames<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rules<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.model<sp/>=<sp/>model.constData(),</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.layout<sp/>=<sp/>layout.constData(),</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.variant<sp/>=<sp/>variant.constData(),</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.options<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_configGroup.readEntry(</highlight><highlight class="stringliteral">&quot;ResetOldOptions&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ruleNames.options<sp/>=<sp/><ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>.constData();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>applyEnvironmentRules(ruleNames);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>m_layoutList<sp/>=<sp/>QString::fromLatin1(ruleNames.layout).split(QLatin1Char(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xkb_keymap_new_from_names(m_context,<sp/>&amp;ruleNames,<sp/>XKB_KEYMAP_COMPILE_NO_FLAGS);</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal">xkb_keymap<sp/>*Xkb::loadDefaultKeymap()</highlight></codeline>
<codeline lineno="608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>xkb_rule_names<sp/>ruleNames<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>applyEnvironmentRules(ruleNames);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>m_layoutList<sp/>=<sp/>QString::fromLatin1(ruleNames.layout).split(QLatin1Char(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xkb_keymap_new_from_names(m_context,<sp/>&amp;ruleNames,<sp/>XKB_KEYMAP_COMPILE_NO_FLAGS);</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal">xkb_keymap<sp/>*Xkb::loadKeymapFromLocale1()</highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>OrgFreedesktopDBusPropertiesInterface<sp/>locale1Properties(s_locale1Interface,<sp/></highlight><highlight class="stringliteral">&quot;/org/freedesktop/locale1&quot;</highlight><highlight class="normal">,<sp/>QDBusConnection::systemBus(),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariantMap<sp/>properties<sp/>=<sp/>locale1Properties.GetAll(s_locale1Interface);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>model<sp/>=<sp/>properties[</highlight><highlight class="stringliteral">&quot;X11Model&quot;</highlight><highlight class="normal">].toByteArray();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>layout<sp/>=<sp/>properties[</highlight><highlight class="stringliteral">&quot;X11Layout&quot;</highlight><highlight class="normal">].toByteArray();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>variant<sp/>=<sp/>properties[</highlight><highlight class="stringliteral">&quot;X11Variant&quot;</highlight><highlight class="normal">].toByteArray();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/><ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref><sp/>=<sp/>properties[</highlight><highlight class="stringliteral">&quot;X11Options&quot;</highlight><highlight class="normal">].toByteArray();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>xkb_rule_names<sp/>ruleNames<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rules<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.model<sp/>=<sp/>model.constData(),</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.layout<sp/>=<sp/>layout.constData(),</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.variant<sp/>=<sp/>variant.constData(),</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.options<sp/>=<sp/><ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>.constData(),</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>applyEnvironmentRules(ruleNames);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>m_layoutList<sp/>=<sp/>QString::fromLatin1(ruleNames.layout).split(QLatin1Char(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xkb_keymap_new_from_names(m_context,<sp/>&amp;ruleNames,<sp/>XKB_KEYMAP_COMPILE_NO_FLAGS);</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xkb::updateKeymap(xkb_keymap<sp/>*keymap)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_xkb_1ac6cacfcb7f4a12b29c98eb4e8ccdf55c" kindref="member">keymap</ref>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>xkb_state<sp/>*<ref refid="class_k_win_1_1_xkb_1a64553e4f7f697637c7449f3b439738de" kindref="member">state</ref><sp/>=<sp/>xkb_state_new(<ref refid="class_k_win_1_1_xkb_1ac6cacfcb7f4a12b29c98eb4e8ccdf55c" kindref="member">keymap</ref>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_xkb_1a64553e4f7f697637c7449f3b439738de" kindref="member">state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_XKB)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>create<sp/>XKB<sp/>state&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_keymap_unref(<ref refid="class_k_win_1_1_xkb_1ac6cacfcb7f4a12b29c98eb4e8ccdf55c" kindref="member">keymap</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>Locks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>numLockIsOn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>capsLockIsOn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s_startup<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s_startup)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numLockIsOn<sp/>=<sp/>xkb_state_mod_index_is_active(m_state,<sp/>m_numModifier,<sp/>XKB_STATE_MODS_LOCKED);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capsLockIsOn<sp/>=<sp/>xkb_state_mod_index_is_active(m_state,<sp/>m_capsModifier,<sp/>XKB_STATE_MODS_LOCKED);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>release<sp/>the<sp/>old<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>xkb_state_unref(m_state);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>xkb_keymap_unref(m_keymap);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>m_keymap<sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1ac6cacfcb7f4a12b29c98eb4e8ccdf55c" kindref="member">keymap</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>m_state<sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1a64553e4f7f697637c7449f3b439738de" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shiftModifier<sp/>=<sp/>xkb_keymap_mod_get_index(m_keymap,<sp/>XKB_MOD_NAME_SHIFT);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>m_capsModifier<sp/>=<sp/>xkb_keymap_mod_get_index(m_keymap,<sp/>XKB_MOD_NAME_CAPS);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>m_controlModifier<sp/>=<sp/>xkb_keymap_mod_get_index(m_keymap,<sp/>XKB_MOD_NAME_CTRL);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>m_altModifier<sp/>=<sp/>xkb_keymap_mod_get_index(m_keymap,<sp/>XKB_MOD_NAME_ALT);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>m_metaModifier<sp/>=<sp/>xkb_keymap_mod_get_index(m_keymap,<sp/>XKB_MOD_NAME_LOGO);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>m_numModifier<sp/>=<sp/>xkb_keymap_mod_get_index(m_keymap,<sp/>XKB_MOD_NAME_NUM);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>m_mod5Modifier<sp/>=<sp/>xkb_keymap_mod_get_index(m_keymap,<sp/></highlight><highlight class="stringliteral">&quot;Mod5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>m_numLock<sp/>=<sp/>xkb_keymap_led_get_index(m_keymap,<sp/>XKB_LED_NAME_NUM);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>m_capsLock<sp/>=<sp/>xkb_keymap_led_get_index(m_keymap,<sp/>XKB_LED_NAME_CAPS);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>m_scrollLock<sp/>=<sp/>xkb_keymap_led_get_index(m_keymap,<sp/>XKB_LED_NAME_SCROLL);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>m_composeLed<sp/>=<sp/>xkb_keymap_led_get_index(m_keymap,<sp/><ref refid="xkb_8cpp_1a7714550c34e32ea29e3fc7e6cf5d2094" kindref="member">XKB_LED_NAME_COMPOSE</ref>);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>m_kanaLed<sp/>=<sp/>xkb_keymap_led_get_index(m_keymap,<sp/><ref refid="xkb_8cpp_1a105cd53c0a87d9cf8d6d119f81e1e2de" kindref="member">XKB_LED_NAME_KANA</ref>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentLayout<sp/>=<sp/>xkb_state_serialize_layout(m_state,<sp/>XKB_STATE_LAYOUT_EFFECTIVE);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>m_modifierState.depressed<sp/>=<sp/>xkb_state_serialize_mods(m_state,<sp/>xkb_state_component(XKB_STATE_MODS_DEPRESSED));</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>m_modifierState.latched<sp/>=<sp/>xkb_state_serialize_mods(m_state,<sp/>xkb_state_component(XKB_STATE_MODS_LATCHED));</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>m_modifierState.locked<sp/>=<sp/>xkb_state_serialize_mods(m_state,<sp/>xkb_state_component(XKB_STATE_MODS_LOCKED));</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>setLock<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="keyboard__input_8h_1a638bf7a52db06f383ce5a4ef99dfe539" kindref="member">xkb_mod_index_t</ref><sp/>modifier,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modifier<sp/>!=<sp/>XKB_MOD_INVALID)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::bitset&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(xkb_mod_mask_t)<sp/>*<sp/>8&gt;<sp/>mask{m_modifierState.locked};</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask.size()<sp/>&gt;<sp/>modifier)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask[modifier]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_modifierState.locked<sp/>=<sp/>mask.to_ulong();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_state_update_mask(m_state,<sp/>m_modifierState.depressed,<sp/>m_modifierState.latched,<sp/>m_modifierState.locked,<sp/>0,<sp/>0,<sp/>m_currentLayout);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_modifierState.locked<sp/>=<sp/>xkb_state_serialize_mods(m_state,<sp/>xkb_state_component(XKB_STATE_MODS_LOCKED));</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s_startup<sp/>||<sp/>qEnvironmentVariableIsSet(</highlight><highlight class="stringliteral">&quot;KWIN_FORCE_NUM_LOCK_EVALUATION&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_startup<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_numLockConfig)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KConfigGroup<sp/>config<sp/>=<sp/>m_numLockConfig-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Keyboard&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STATE_ON<sp/>=<sp/>0,<sp/><sp/>STATE_OFF<sp/>=<sp/>1,<sp/>STATE_UNCHANGED<sp/>=<sp/>2,<sp/>see<sp/>plasma-desktop/kcms/keyboard/kcmmisc.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>setting<sp/>=<sp/>config.readEntry(</highlight><highlight class="stringliteral">&quot;NumLock&quot;</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setting<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLock(m_numModifier,<sp/>!setting);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLock(m_numModifier,<sp/>numLockIsOn);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLock(m_capsModifier,<sp/>capsLockIsOn);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>createKeymapFile();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1aa37614d5ed07dfb9bac57cee870db6d3" kindref="member">forwardModifiers</ref>();</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*inputmethod<sp/>=<sp/>kwinApp()-&gt;inputMethod())<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputmethod-&gt;forwardModifiers(<ref refid="class_k_win_1_1_input_method_1a2491aae15c7d877aba14e3cc0a1cac73a9c5fd4a27ab38065297d74b77b36eb27" kindref="member">InputMethod::Force</ref>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1ad01d820c45c3bcd71700fb7b31763c23" kindref="member">updateModifiers</ref>();</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xkb::createKeymapFile()</highlight></codeline>
<codeline lineno="722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>currentKeymap<sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1acafb0a885d20eb79587631f70f3bbd2a" kindref="member">keymapContents</ref>();</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentKeymap.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>m_seat-&gt;keyboard()-&gt;setKeymap(currentKeymap);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*inputmethod<sp/>=<sp/>kwinApp()-&gt;inputMethod();</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inputmethod)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*keyboardGrab<sp/>=<sp/>inputmethod-&gt;keyboardGrab())<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyboardGrab-&gt;sendKeymap(currentKeymap);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737" refid="class_k_win_1_1_xkb_1acafb0a885d20eb79587631f70f3bbd2a" refkind="member"><highlight class="normal">QByteArray<sp/><ref refid="class_k_win_1_1_xkb_1acafb0a885d20eb79587631f70f3bbd2a" kindref="member">Xkb::keymapContents</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="738"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_seat<sp/>||<sp/>!m_seat-&gt;keyboard())<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>uninstall<sp/>keymap<sp/>on<sp/>server?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_keymap)<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1af8087ffc5ee2774d3ec42e3ff2ad9456" kindref="member">UniqueCPtr&lt;char&gt;</ref><sp/>keymapString(xkb_keymap_get_as_string(m_keymap,<sp/>XKB_KEYMAP_FORMAT_TEXT_V1));</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keymapString)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keymapString.get();</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754" refid="class_k_win_1_1_xkb_1ad01d820c45c3bcd71700fb7b31763c23" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1ad01d820c45c3bcd71700fb7b31763c23" kindref="member">Xkb::updateModifiers</ref>(uint32_t<sp/>modsDepressed,<sp/>uint32_t<sp/>modsLatched,<sp/>uint32_t<sp/>modsLocked,<sp/>uint32_t<sp/>group)</highlight></codeline>
<codeline lineno="755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_keymap<sp/>||<sp/>!m_state)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>to<sp/>create<sp/>a<sp/>infinite<sp/>loop<sp/>between<sp/>input<sp/>method<sp/>and<sp/>compositor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_update_mask(m_state,<sp/>modsDepressed,<sp/>modsLatched,<sp/>modsLocked,<sp/>0,<sp/>0,<sp/>group)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1ad01d820c45c3bcd71700fb7b31763c23" kindref="member">updateModifiers</ref>();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1aa37614d5ed07dfb9bac57cee870db6d3" kindref="member">forwardModifiers</ref>();</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767" refid="class_k_win_1_1_xkb_1aa35c56df41ddb85ea586d20122e622d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1aa35c56df41ddb85ea586d20122e622d8" kindref="member">Xkb::updateKey</ref>(uint32_t<sp/>key,<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1" kindref="member">KeyboardKeyState</ref><sp/><ref refid="class_k_win_1_1_xkb_1a64553e4f7f697637c7449f3b439738de" kindref="member">state</ref>)</highlight></codeline>
<codeline lineno="768"><highlight class="normal">{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_keymap<sp/>||<sp/>!m_state)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sym<sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1a585b2b4cad89f9b4e39d11883e602eb9" kindref="member">toKeysym</ref>(key);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>xkb_state_update_key(m_state,<sp/>key<sp/>+<sp/>EVDEV_OFFSET,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">xkb_key_direction</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_k_win_1_1_xkb_1a64553e4f7f697637c7449f3b439738de" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_compose.state)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_xkb_1a64553e4f7f697637c7449f3b439738de" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">KeyboardKeyState::Pressed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_compose_state_feed(m_compose.state,<sp/>sym);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(xkb_compose_state_get_status(m_compose.state))<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XKB_COMPOSE_NOTHING:</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_keysym<sp/>=<sp/>sym;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XKB_COMPOSE_COMPOSED:</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_keysym<sp/>=<sp/>xkb_compose_state_get_one_sym(m_compose.state);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_keysym<sp/>=<sp/>XKB_KEY_NoSymbol;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_keysym<sp/>=<sp/>sym;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1ad01d820c45c3bcd71700fb7b31763c23" kindref="member">updateModifiers</ref>();</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>updateConsumedModifiers(key);</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1ad01d820c45c3bcd71700fb7b31763c23" kindref="member">Xkb::updateModifiers</ref>()</highlight></codeline>
<codeline lineno="797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>Qt::KeyboardModifiers<sp/>mods<sp/>=<sp/>Qt::NoModifier;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_shiftModifier,<sp/>XKB_STATE_MODS_EFFECTIVE)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods<sp/>|=<sp/>Qt::ShiftModifier;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_altModifier,<sp/>XKB_STATE_MODS_EFFECTIVE)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods<sp/>|=<sp/>Qt::AltModifier;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_controlModifier,<sp/>XKB_STATE_MODS_EFFECTIVE)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods<sp/>|=<sp/>Qt::ControlModifier;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_metaModifier,<sp/>XKB_STATE_MODS_EFFECTIVE)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods<sp/>|=<sp/>Qt::MetaModifier;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_keysym<sp/>&gt;=<sp/>XKB_KEY_KP_Space<sp/>&amp;&amp;<sp/>m_keysym<sp/>&lt;=<sp/>XKB_KEY_KP_Equal)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods<sp/>|=<sp/>Qt::KeypadModifier;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>m_modifiers<sp/>=<sp/>mods;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>LEDs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>LEDs<sp/><ref refid="class_k_win_1_1_xkb_1a6484d0b2fbcc5839ef1f2374e9fdd770" kindref="member">leds</ref>;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_led_index_is_active(m_state,<sp/>m_numLock)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1a6484d0b2fbcc5839ef1f2374e9fdd770" kindref="member">leds</ref><sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1a6484d0b2fbcc5839ef1f2374e9fdd770" kindref="member">leds</ref><sp/>|<sp/><ref refid="namespace_k_win_1a3f02fe5c7167a1a46177d3e01f3c694eacf6cc0261135c6d163fd4305375773d2" kindref="member">LED::NumLock</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_led_index_is_active(m_state,<sp/>m_capsLock)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1a6484d0b2fbcc5839ef1f2374e9fdd770" kindref="member">leds</ref><sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1a6484d0b2fbcc5839ef1f2374e9fdd770" kindref="member">leds</ref><sp/>|<sp/><ref refid="namespace_k_win_1a3f02fe5c7167a1a46177d3e01f3c694ea8d0f4171170104d094d8b6d4f8bf49e6" kindref="member">LED::CapsLock</ref>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_led_index_is_active(m_state,<sp/>m_scrollLock)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1a6484d0b2fbcc5839ef1f2374e9fdd770" kindref="member">leds</ref><sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1a6484d0b2fbcc5839ef1f2374e9fdd770" kindref="member">leds</ref><sp/>|<sp/><ref refid="namespace_k_win_1a3f02fe5c7167a1a46177d3e01f3c694ea7d7902d5e2998e4fb2b8694a2de4ff65" kindref="member">LED::ScrollLock</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_led_index_is_active(m_state,<sp/>m_composeLed)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1a6484d0b2fbcc5839ef1f2374e9fdd770" kindref="member">leds</ref><sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1a6484d0b2fbcc5839ef1f2374e9fdd770" kindref="member">leds</ref><sp/>|<sp/><ref refid="namespace_k_win_1a3f02fe5c7167a1a46177d3e01f3c694eaa0c29a6fe815b4e79cafb36a6714094c" kindref="member">LED::Compose</ref>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_led_index_is_active(m_state,<sp/>m_kanaLed)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1a6484d0b2fbcc5839ef1f2374e9fdd770" kindref="member">leds</ref><sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1a6484d0b2fbcc5839ef1f2374e9fdd770" kindref="member">leds</ref><sp/>|<sp/><ref refid="namespace_k_win_1a3f02fe5c7167a1a46177d3e01f3c694ea3713cbc241fd95e9d579846d44774452" kindref="member">LED::Kana</ref>;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_leds<sp/>!=<sp/><ref refid="class_k_win_1_1_xkb_1a6484d0b2fbcc5839ef1f2374e9fdd770" kindref="member">leds</ref>)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_leds<sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1a6484d0b2fbcc5839ef1f2374e9fdd770" kindref="member">leds</ref>;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_xkb_1a4659f6df482bf7ff08b84ce51b5dfa59" kindref="member">ledsChanged</ref>(m_leds);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>newLayout<sp/>=<sp/>xkb_state_serialize_layout(m_state,<sp/>XKB_STATE_LAYOUT_EFFECTIVE);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="class_k_win_1_1_xkb_1a4586eefd25f54e32659ed598bb0c1d7d" kindref="member">depressed</ref><sp/>=<sp/>xkb_state_serialize_mods(m_state,<sp/>XKB_STATE_MODS_DEPRESSED);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="class_k_win_1_1_xkb_1add58c30724aca2aebf846c5aac3a585a" kindref="member">latched</ref><sp/>=<sp/>xkb_state_serialize_mods(m_state,<sp/>XKB_STATE_MODS_LATCHED);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="class_k_win_1_1_xkb_1a29f5186c2465b9833b595cd93c9a9bc7" kindref="member">locked</ref><sp/>=<sp/>xkb_state_serialize_mods(m_state,<sp/>XKB_STATE_MODS_LOCKED);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newLayout<sp/>!=<sp/>m_currentLayout<sp/>||<sp/><ref refid="class_k_win_1_1_xkb_1a4586eefd25f54e32659ed598bb0c1d7d" kindref="member">depressed</ref><sp/>!=<sp/>m_modifierState.depressed<sp/>||<sp/><ref refid="class_k_win_1_1_xkb_1add58c30724aca2aebf846c5aac3a585a" kindref="member">latched</ref><sp/>!=<sp/>m_modifierState.latched<sp/>||<sp/><ref refid="class_k_win_1_1_xkb_1a29f5186c2465b9833b595cd93c9a9bc7" kindref="member">locked</ref><sp/>!=<sp/>m_modifierState.locked)<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_currentLayout<sp/>=<sp/>newLayout;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_modifierState.depressed<sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1a4586eefd25f54e32659ed598bb0c1d7d" kindref="member">depressed</ref>;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_modifierState.latched<sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1add58c30724aca2aebf846c5aac3a585a" kindref="member">latched</ref>;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_modifierState.locked<sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1a29f5186c2465b9833b595cd93c9a9bc7" kindref="member">locked</ref>;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_xkb_1a82672fe9027fca06b25869c3ad53a7f4" kindref="member">modifierStateChanged</ref>();</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853" refid="class_k_win_1_1_xkb_1aa37614d5ed07dfb9bac57cee870db6d3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1aa37614d5ed07dfb9bac57cee870db6d3" kindref="member">Xkb::forwardModifiers</ref>()</highlight></codeline>
<codeline lineno="854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_seat<sp/>||<sp/>!m_seat-&gt;keyboard())<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>m_seat-&gt;notifyKeyboardModifiers(m_modifierState.depressed,</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_modifierState.latched,</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_modifierState.locked,</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_currentLayout);</highlight></codeline>
<codeline lineno="862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864" refid="class_k_win_1_1_xkb_1a9401b854d0ea3f403ae040be6083d934" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_xkb_1aa6aa66e1b2223c856b7c26a999c8110b" kindref="member">Xkb::layoutName</ref>(<ref refid="keyboard__input_8h_1ad37512642806c55955e1cd5a30efcc39" kindref="member">xkb_layout_index_t</ref><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="865"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_keymap)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString{};</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromLocal8Bit(xkb_keymap_layout_get_name(m_keymap,<sp/>index));</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872" refid="class_k_win_1_1_xkb_1aa6aa66e1b2223c856b7c26a999c8110b" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_xkb_1aa6aa66e1b2223c856b7c26a999c8110b" kindref="member">Xkb::layoutName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="873"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1aa6aa66e1b2223c856b7c26a999c8110b" kindref="member">layoutName</ref>(m_currentLayout);</highlight></codeline>
<codeline lineno="875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877" refid="class_k_win_1_1_xkb_1a3a7139d7f7840c013e52c82e2543ed22" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_xkb_1a3a7139d7f7840c013e52c82e2543ed22" kindref="member">Xkb::layoutShortName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="878"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_layoutList.value(index);</highlight></codeline>
<codeline lineno="880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xkb::updateConsumedModifiers(uint32_t<sp/>key)</highlight></codeline>
<codeline lineno="883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>Qt::KeyboardModifiers<sp/>mods<sp/>=<sp/>Qt::NoModifier;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_consumed2(m_state,<sp/>key<sp/>+<sp/>EVDEV_OFFSET,<sp/>m_shiftModifier,<sp/>XKB_CONSUMED_MODE_GTK)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods<sp/>|=<sp/>Qt::ShiftModifier;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_consumed2(m_state,<sp/>key<sp/>+<sp/>EVDEV_OFFSET,<sp/>m_altModifier,<sp/>XKB_CONSUMED_MODE_GTK)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods<sp/>|=<sp/>Qt::AltModifier;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_consumed2(m_state,<sp/>key<sp/>+<sp/>EVDEV_OFFSET,<sp/>m_controlModifier,<sp/>XKB_CONSUMED_MODE_GTK)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods<sp/>|=<sp/>Qt::ControlModifier;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_consumed2(m_state,<sp/>key<sp/>+<sp/>EVDEV_OFFSET,<sp/>m_metaModifier,<sp/>XKB_CONSUMED_MODE_GTK)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods<sp/>|=<sp/>Qt::MetaModifier;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>m_consumedModifiers<sp/>=<sp/>mods;</highlight></codeline>
<codeline lineno="898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900" refid="class_k_win_1_1_xkb_1a10dd48a68a450f8aa7a840e30a7f02a8" refkind="member"><highlight class="normal">Qt::KeyboardModifiers<sp/><ref refid="class_k_win_1_1_xkb_1a10dd48a68a450f8aa7a840e30a7f02a8" kindref="member">Xkb::modifiersRelevantForGlobalShortcuts</ref>(uint32_t<sp/>scanCode)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="901"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_state)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Qt::NoModifier;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>Qt::KeyboardModifiers<sp/>mods<sp/>=<sp/>Qt::NoModifier;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_shiftModifier,<sp/>XKB_STATE_MODS_EFFECTIVE)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods<sp/>|=<sp/>Qt::ShiftModifier;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_altModifier,<sp/>XKB_STATE_MODS_EFFECTIVE)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods<sp/>|=<sp/>Qt::AltModifier;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_controlModifier,<sp/>XKB_STATE_MODS_EFFECTIVE)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods<sp/>|=<sp/>Qt::ControlModifier;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_metaModifier,<sp/>XKB_STATE_MODS_EFFECTIVE)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods<sp/>|=<sp/>Qt::MetaModifier;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_keysym<sp/>&gt;=<sp/>XKB_KEY_KP_Space<sp/>&amp;&amp;<sp/>m_keysym<sp/>&lt;=<sp/>XKB_KEY_KP_Equal)<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mods<sp/>|=<sp/>Qt::KeypadModifier;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>Qt::KeyboardModifiers<sp/>consumedMods<sp/>=<sp/>m_consumedModifiers;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mods<sp/>&amp;<sp/>Qt::ShiftModifier)<sp/>&amp;&amp;<sp/>(consumedMods<sp/>==<sp/>Qt::ShiftModifier))<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>whether<sp/>current<sp/>keysym<sp/>is<sp/>a<sp/>letter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>that<sp/>case<sp/>the<sp/>shift<sp/>should<sp/>be<sp/>removed<sp/>from<sp/>the<sp/>consumed<sp/>modifiers<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>it<sp/>would<sp/>not<sp/>be<sp/>possible<sp/>to<sp/>trigger<sp/>e.g.<sp/>Shift+W<sp/>as<sp/>a<sp/>shortcut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>BUG:<sp/>370341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QChar::isLetter(<ref refid="class_k_win_1_1_xkb_1a0daab4971d2ee601b3ff4432261b845e" kindref="member">toQtKey</ref>(m_keysym,<sp/>scanCode,<sp/>Qt::ControlModifier)))<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consumedMods<sp/>=<sp/>Qt::KeyboardModifiers();</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mods<sp/>&amp;<sp/>~consumedMods;</highlight></codeline>
<codeline lineno="934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936" refid="class_k_win_1_1_xkb_1a585b2b4cad89f9b4e39d11883e602eb9" refkind="member"><highlight class="normal"><ref refid="keyboard__input_8h_1a79e604a22703391bdfe212cfc10ea007" kindref="member">xkb_keysym_t</ref><sp/><ref refid="class_k_win_1_1_xkb_1a585b2b4cad89f9b4e39d11883e602eb9" kindref="member">Xkb::toKeysym</ref>(uint32_t<sp/>key)</highlight></codeline>
<codeline lineno="937"><highlight class="normal">{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_state)<sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>XKB_KEY_NoSymbol;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Workaround<sp/>because<sp/>there&apos;s<sp/>some<sp/>kind<sp/>of<sp/>overlap<sp/>between<sp/>KEY_ZENKAKUHANKAKU<sp/>and<sp/>TLDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>key<sp/>is<sp/>important<sp/>because<sp/>some<sp/>hardware<sp/>manufacturers<sp/>use<sp/>it<sp/>to<sp/>indicate<sp/>touchpad<sp/>toggling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="keyboard__input_8h_1a79e604a22703391bdfe212cfc10ea007" kindref="member">xkb_keysym_t</ref><sp/>ret<sp/>=<sp/>xkb_state_key_get_one_sym(m_state,<sp/>key<sp/>+<sp/>EVDEV_OFFSET);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>key<sp/>==<sp/>KEY_ZENKAKUHANKAKU)<sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>XKB_KEY_Zenkaku_Hankaku;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951" refid="class_k_win_1_1_xkb_1a3314388f4fd88decb634e23c0560b840" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_xkb_1a3314388f4fd88decb634e23c0560b840" kindref="member">Xkb::toString</ref>(<ref refid="keyboard__input_8h_1a79e604a22703391bdfe212cfc10ea007" kindref="member">xkb_keysym_t</ref><sp/>keysym)</highlight></codeline>
<codeline lineno="952"><highlight class="normal">{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_state<sp/>||<sp/>keysym<sp/>==<sp/>XKB_KEY_NoSymbol)<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString();</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>byteArray(7,<sp/>0);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>xkb_keysym_to_utf8(keysym,<sp/>byteArray.data(),<sp/>byteArray.size());</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok<sp/>==<sp/>-1<sp/>||<sp/>ok<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString();</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromUtf8(byteArray.constData());</highlight></codeline>
<codeline lineno="962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964" refid="class_k_win_1_1_xkb_1a0daab4971d2ee601b3ff4432261b845e" refkind="member"><highlight class="normal">Qt::Key<sp/><ref refid="class_k_win_1_1_xkb_1a0daab4971d2ee601b3ff4432261b845e" kindref="member">Xkb::toQtKey</ref>(<ref refid="keyboard__input_8h_1a79e604a22703391bdfe212cfc10ea007" kindref="member">xkb_keysym_t</ref><sp/>keySym,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>scanCode,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::KeyboardModifiers<sp/><ref refid="class_k_win_1_1_xkb_1a02803b26d0410774961619fc13730c96" kindref="member">modifiers</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="967"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>passing<sp/>superAsMeta<sp/>doesn&apos;t<sp/>have<sp/>impact<sp/>due<sp/>to<sp/>bug<sp/>in<sp/>the<sp/>Qt<sp/>function,<sp/>so<sp/>handle<sp/>it<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>Qt::Key<sp/>qtKey<sp/>=<sp/>Qt::Key(QXkbCommon::keysymToQtKey(keySym,<sp/><ref refid="class_k_win_1_1_xkb_1a02803b26d0410774961619fc13730c96" kindref="member">modifiers</ref>,<sp/>m_state,<sp/>scanCode<sp/>+<sp/>EVDEV_OFFSET));</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>workarounds<sp/>for<sp/>symbols<sp/>currently<sp/>wrong/not<sp/>mappable<sp/>via<sp/>keysymToQtKey()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qtKey<sp/>&gt;<sp/>0xff<sp/>&amp;&amp;<sp/>keySym<sp/>&lt;=<sp/>0xff)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XKB_KEY_mu,<sp/>XKB_KEY_ydiaeresis<sp/>go<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qtKey<sp/>=<sp/>Qt::Key(keySym);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qtKey;</highlight></codeline>
<codeline lineno="977"><highlight class="normal">}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979" refid="class_k_win_1_1_xkb_1ad5df692e9608106d91e2dd8ca7509ee3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1ad5df692e9608106d91e2dd8ca7509ee3" kindref="member">Xkb::shouldKeyRepeat</ref>(quint32<sp/>key)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="980"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_keymap)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xkb_keymap_key_repeats(m_keymap,<sp/>key<sp/>+<sp/>EVDEV_OFFSET)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987" refid="class_k_win_1_1_xkb_1a0cc11fac67b0c0c3b6b4ecac324944cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a0cc11fac67b0c0c3b6b4ecac324944cc" kindref="member">Xkb::switchToNextLayout</ref>()</highlight></codeline>
<codeline lineno="988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_keymap<sp/>||<sp/>!m_state)<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="keyboard__input_8h_1ad37512642806c55955e1cd5a30efcc39" kindref="member">xkb_layout_index_t</ref><sp/>numLayouts<sp/>=<sp/>xkb_keymap_num_layouts(m_keymap);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="keyboard__input_8h_1ad37512642806c55955e1cd5a30efcc39" kindref="member">xkb_layout_index_t</ref><sp/>nextLayout<sp/>=<sp/>(xkb_state_serialize_layout(m_state,<sp/>XKB_STATE_LAYOUT_EFFECTIVE)<sp/>+<sp/>1)<sp/>%<sp/>numLayouts;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1adcb305b4edebbc953651ba98c9de4754" kindref="member">switchToLayout</ref>(nextLayout);</highlight></codeline>
<codeline lineno="995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997" refid="class_k_win_1_1_xkb_1acf2d9322e79b456a0d23cd950c9ec761" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1acf2d9322e79b456a0d23cd950c9ec761" kindref="member">Xkb::switchToPreviousLayout</ref>()</highlight></codeline>
<codeline lineno="998"><highlight class="normal">{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_keymap<sp/>||<sp/>!m_state)<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="keyboard__input_8h_1ad37512642806c55955e1cd5a30efcc39" kindref="member">xkb_layout_index_t</ref><sp/>previousLayout<sp/>=<sp/>m_currentLayout<sp/>==<sp/>0<sp/>?<sp/><ref refid="class_k_win_1_1_xkb_1a963fe37a34ccdb94d4a22ab2f277b3b5" kindref="member">numberOfLayouts</ref>()<sp/>-<sp/>1<sp/>:<sp/>m_currentLayout<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1adcb305b4edebbc953651ba98c9de4754" kindref="member">switchToLayout</ref>(previousLayout);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006" refid="class_k_win_1_1_xkb_1adcb305b4edebbc953651ba98c9de4754" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1adcb305b4edebbc953651ba98c9de4754" kindref="member">Xkb::switchToLayout</ref>(<ref refid="keyboard__input_8h_1ad37512642806c55955e1cd5a30efcc39" kindref="member">xkb_layout_index_t</ref><sp/>layout)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_keymap<sp/>||<sp/>!m_state<sp/>||<sp/>layout<sp/>&gt;=<sp/><ref refid="class_k_win_1_1_xkb_1a963fe37a34ccdb94d4a22ab2f277b3b5" kindref="member">numberOfLayouts</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xkb_mod_mask_t<sp/><ref refid="class_k_win_1_1_xkb_1a4586eefd25f54e32659ed598bb0c1d7d" kindref="member">depressed</ref><sp/>=<sp/>xkb_state_serialize_mods(m_state,<sp/>xkb_state_component(XKB_STATE_MODS_DEPRESSED));</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xkb_mod_mask_t<sp/><ref refid="class_k_win_1_1_xkb_1add58c30724aca2aebf846c5aac3a585a" kindref="member">latched</ref><sp/>=<sp/>xkb_state_serialize_mods(m_state,<sp/>xkb_state_component(XKB_STATE_MODS_LATCHED));</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xkb_mod_mask_t<sp/><ref refid="class_k_win_1_1_xkb_1a29f5186c2465b9833b595cd93c9a9bc7" kindref="member">locked</ref><sp/>=<sp/>xkb_state_serialize_mods(m_state,<sp/>xkb_state_component(XKB_STATE_MODS_LOCKED));</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>xkb_state_update_mask(m_state,<sp/><ref refid="class_k_win_1_1_xkb_1a4586eefd25f54e32659ed598bb0c1d7d" kindref="member">depressed</ref>,<sp/><ref refid="class_k_win_1_1_xkb_1add58c30724aca2aebf846c5aac3a585a" kindref="member">latched</ref>,<sp/><ref refid="class_k_win_1_1_xkb_1a29f5186c2465b9833b595cd93c9a9bc7" kindref="member">locked</ref>,<sp/>0,<sp/>0,<sp/>layout);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1ad01d820c45c3bcd71700fb7b31763c23" kindref="member">updateModifiers</ref>();</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xkb_1aa37614d5ed07dfb9bac57cee870db6d3" kindref="member">forwardModifiers</ref>();</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020" refid="class_k_win_1_1_xkb_1a5938d48a12490aad68017edd7e44b294" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a5938d48a12490aad68017edd7e44b294" kindref="member">Xkb::setModifierLatched</ref>(<ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638" kindref="member">KWin::Xkb::Modifier</ref><sp/>mod,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1add58c30724aca2aebf846c5aac3a585a" kindref="member">latched</ref>)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="keyboard__input_8h_1a638bf7a52db06f383ce5a4ef99dfe539" kindref="member">xkb_mod_index_t</ref><sp/>modifier<sp/>=<sp/>XKB_MOD_INVALID;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mod)<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a12bf109a43571f68ce1e49b4a8fd17f0" kindref="member">NoModifier</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a458fe6181d9e3b800bd21afc51fffb01" kindref="member">Shift</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>=<sp/>m_shiftModifier;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638ad13fff779efd1f9328a6709ec43207eb" kindref="member">Mod1</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>=<sp/>m_altModifier;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a09c2634012119eae48f95cd572087680" kindref="member">Control</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>=<sp/>m_controlModifier;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a201443df800212ae307bd7afe7153624" kindref="member">Mod4</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>=<sp/>m_metaModifier;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a17aa48cd9671958311854313ff7aa94f" kindref="member">Mod5</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>=<sp/>m_mod5Modifier;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a0c16cf9c1d0abd10bdd0c8c35cc230f4" kindref="member">Num</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>=<sp/>m_numModifier;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a89fc35f4d3bb1c45344493e6aafa385c" kindref="member">Mod3</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638ad7dc8af9b84ee9fcedf3416571a15cc8" kindref="member">Lock</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>=<sp/>m_capsModifier;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modifier<sp/>!=<sp/>XKB_MOD_INVALID)<sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::bitset&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(xkb_mod_mask_t)<sp/>*<sp/>8&gt;<sp/>mask{m_modifierState.latched};</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask.size()<sp/>&gt;<sp/>modifier)<sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask[modifier]<sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1add58c30724aca2aebf846c5aac3a585a" kindref="member">latched</ref>;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_modifierState.latched<sp/>=<sp/>mask.to_ulong();</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_state_update_mask(m_state,<sp/>m_modifierState.depressed,<sp/>m_modifierState.latched,<sp/>m_modifierState.locked,<sp/>0,<sp/>0,<sp/>m_currentLayout);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_modifierState.latched<sp/>=<sp/>xkb_state_serialize_mods(m_state,<sp/>xkb_state_component(XKB_STATE_MODS_LATCHED));</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072" refid="class_k_win_1_1_xkb_1ae0c759022fd5adb86c45b516c250b998" refkind="member"><highlight class="normal">Xkb::Modifiers<sp/><ref refid="class_k_win_1_1_xkb_1ae0c759022fd5adb86c45b516c250b998" kindref="member">Xkb::depressedModifiers</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1073"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>Xkb::Modifiers<sp/>result;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_altModifier,<sp/>XKB_STATE_MODS_DEPRESSED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638ad13fff779efd1f9328a6709ec43207eb" kindref="member">Modifier::Mod1</ref>;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_controlModifier,<sp/>XKB_STATE_MODS_DEPRESSED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a09c2634012119eae48f95cd572087680" kindref="member">Modifier::Control</ref>;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_shiftModifier,<sp/>XKB_STATE_MODS_DEPRESSED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a458fe6181d9e3b800bd21afc51fffb01" kindref="member">Modifier::Shift</ref>;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_metaModifier,<sp/>XKB_STATE_MODS_DEPRESSED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a201443df800212ae307bd7afe7153624" kindref="member">Modifier::Mod4</ref>;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_mod5Modifier,<sp/>XKB_STATE_MODS_DEPRESSED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a17aa48cd9671958311854313ff7aa94f" kindref="member">Modifier::Mod5</ref>;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_capsModifier,<sp/>XKB_STATE_MODS_DEPRESSED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638ad7dc8af9b84ee9fcedf3416571a15cc8" kindref="member">Modifier::Lock</ref>;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_numModifier,<sp/>XKB_STATE_MODS_DEPRESSED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a0c16cf9c1d0abd10bdd0c8c35cc230f4" kindref="member">Modifier::Num</ref>;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101" refid="class_k_win_1_1_xkb_1ad429a4bb7bd449c550a4afc22f4d6b07" refkind="member"><highlight class="normal">Xkb::Modifiers<sp/><ref refid="class_k_win_1_1_xkb_1ad429a4bb7bd449c550a4afc22f4d6b07" kindref="member">Xkb::latchedModifiers</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1102"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>Xkb::Modifiers<sp/>result;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_altModifier,<sp/>XKB_STATE_MODS_LATCHED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638ad13fff779efd1f9328a6709ec43207eb" kindref="member">Modifier::Mod1</ref>;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_controlModifier,<sp/>XKB_STATE_MODS_LATCHED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a09c2634012119eae48f95cd572087680" kindref="member">Modifier::Control</ref>;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_shiftModifier,<sp/>XKB_STATE_MODS_LATCHED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a458fe6181d9e3b800bd21afc51fffb01" kindref="member">Modifier::Shift</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_metaModifier,<sp/>XKB_STATE_MODS_LATCHED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a201443df800212ae307bd7afe7153624" kindref="member">Modifier::Mod4</ref>;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_mod5Modifier,<sp/>XKB_STATE_MODS_LATCHED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a17aa48cd9671958311854313ff7aa94f" kindref="member">Modifier::Mod5</ref>;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_capsModifier,<sp/>XKB_STATE_MODS_LATCHED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638ad7dc8af9b84ee9fcedf3416571a15cc8" kindref="member">Modifier::Lock</ref>;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_numModifier,<sp/>XKB_STATE_MODS_LATCHED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a0c16cf9c1d0abd10bdd0c8c35cc230f4" kindref="member">Modifier::Num</ref>;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130" refid="class_k_win_1_1_xkb_1a8d0156f4ccaca211d09faa84e9ee25d7" refkind="member"><highlight class="normal">Xkb::Modifiers<sp/><ref refid="class_k_win_1_1_xkb_1a8d0156f4ccaca211d09faa84e9ee25d7" kindref="member">Xkb::lockedModifiers</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1131"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>Xkb::Modifiers<sp/>result;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_altModifier,<sp/>XKB_STATE_MODS_LOCKED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638ad13fff779efd1f9328a6709ec43207eb" kindref="member">Modifier::Mod1</ref>;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_controlModifier,<sp/>XKB_STATE_MODS_LOCKED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a09c2634012119eae48f95cd572087680" kindref="member">Modifier::Control</ref>;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_shiftModifier,<sp/>XKB_STATE_MODS_LOCKED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a458fe6181d9e3b800bd21afc51fffb01" kindref="member">Modifier::Shift</ref>;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_metaModifier,<sp/>XKB_STATE_MODS_LOCKED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a201443df800212ae307bd7afe7153624" kindref="member">Modifier::Mod4</ref>;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_mod5Modifier,<sp/>XKB_STATE_MODS_LOCKED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a17aa48cd9671958311854313ff7aa94f" kindref="member">Modifier::Mod5</ref>;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_capsModifier,<sp/>XKB_STATE_MODS_LOCKED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638ad7dc8af9b84ee9fcedf3416571a15cc8" kindref="member">Modifier::Lock</ref>;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xkb_state_mod_index_is_active(m_state,<sp/>m_numModifier,<sp/>XKB_STATE_MODS_LOCKED)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a0c16cf9c1d0abd10bdd0c8c35cc230f4" kindref="member">Modifier::Num</ref>;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159" refid="class_k_win_1_1_xkb_1a1bc26cdb0bfece1c9a6d6d6666a49568" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a1bc26cdb0bfece1c9a6d6d6666a49568" kindref="member">Xkb::setModifierLocked</ref>(<ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638" kindref="member">KWin::Xkb::Modifier</ref><sp/>mod,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a29f5186c2465b9833b595cd93c9a9bc7" kindref="member">locked</ref>)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="keyboard__input_8h_1a638bf7a52db06f383ce5a4ef99dfe539" kindref="member">xkb_mod_index_t</ref><sp/>modifier<sp/>=<sp/>XKB_MOD_INVALID;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mod)<sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a12bf109a43571f68ce1e49b4a8fd17f0" kindref="member">NoModifier</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a458fe6181d9e3b800bd21afc51fffb01" kindref="member">Shift</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>=<sp/>m_shiftModifier;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638ad13fff779efd1f9328a6709ec43207eb" kindref="member">Mod1</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>=<sp/>m_altModifier;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a09c2634012119eae48f95cd572087680" kindref="member">Control</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>=<sp/>m_controlModifier;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a201443df800212ae307bd7afe7153624" kindref="member">Mod4</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>=<sp/>m_metaModifier;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a17aa48cd9671958311854313ff7aa94f" kindref="member">Mod5</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>=<sp/>m_mod5Modifier;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a0c16cf9c1d0abd10bdd0c8c35cc230f4" kindref="member">Num</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>=<sp/>m_numModifier;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638a89fc35f4d3bb1c45344493e6aafa385c" kindref="member">Mod3</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a90171f74a4d7570833ddd534caa79638ad7dc8af9b84ee9fcedf3416571a15cc8" kindref="member">Lock</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>=<sp/>m_capsModifier;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modifier<sp/>!=<sp/>XKB_MOD_INVALID)<sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::bitset&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(xkb_mod_mask_t)<sp/>*<sp/>8&gt;<sp/>mask{m_modifierState.locked};</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask.size()<sp/>&gt;<sp/>modifier)<sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask[modifier]<sp/>=<sp/><ref refid="class_k_win_1_1_xkb_1a29f5186c2465b9833b595cd93c9a9bc7" kindref="member">locked</ref>;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_modifierState.locked<sp/>=<sp/>mask.to_ulong();</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xkb_state_update_mask(m_state,<sp/>m_modifierState.depressed,<sp/>m_modifierState.latched,<sp/>m_modifierState.locked,<sp/>0,<sp/>0,<sp/>m_currentLayout);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_modifierState.locked<sp/>=<sp/>xkb_state_serialize_mods(m_state,<sp/>xkb_state_component(XKB_STATE_MODS_LOCKED));</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211" refid="class_k_win_1_1_xkb_1a963fe37a34ccdb94d4a22ab2f277b3b5" refkind="member"><highlight class="normal">quint32<sp/><ref refid="class_k_win_1_1_xkb_1a963fe37a34ccdb94d4a22ab2f277b3b5" kindref="member">Xkb::numberOfLayouts</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1212"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_keymap)<sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xkb_keymap_num_layouts(m_keymap);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219" refid="class_k_win_1_1_xkb_1a533b8e48473cdae54bea219342e27cec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xkb_1a533b8e48473cdae54bea219342e27cec" kindref="member">Xkb::setSeat</ref>(<ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>m_seat<sp/>=<sp/>QPointer&lt;SeatInterface&gt;(seat);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224" refid="class_k_win_1_1_xkb_1ae3e65093b13d034c35d4e1f3ec4f5a7e" refkind="member"><highlight class="normal">std::optional&lt;std::pair&lt;int,<sp/>int&gt;&gt;<sp/><ref refid="class_k_win_1_1_xkb_1ae3e65093b13d034c35d4e1f3ec4f5a7e" kindref="member">Xkb::keycodeFromKeysym</ref>(<ref refid="keyboard__input_8h_1a79e604a22703391bdfe212cfc10ea007" kindref="member">xkb_keysym_t</ref><sp/>keysym)</highlight></codeline>
<codeline lineno="1225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layout<sp/>=<sp/>xkb_state_serialize_layout(m_state,<sp/>XKB_STATE_LAYOUT_EFFECTIVE);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xkb_keycode_t<sp/>max<sp/>=<sp/>xkb_keymap_max_keycode(m_keymap);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xkb_keycode_t<sp/>keycode<sp/>=<sp/>xkb_keymap_min_keycode(m_keymap);<sp/>keycode<sp/>&lt;<sp/>max;<sp/>keycode++)<sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>levelCount<sp/>=<sp/>xkb_keymap_num_levels_for_key(m_keymap,<sp/>keycode,<sp/>layout);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>currentLevel<sp/>=<sp/>0;<sp/>currentLevel<sp/>&lt;<sp/>levelCount;<sp/>currentLevel++)<sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="keyboard__input_8h_1a79e604a22703391bdfe212cfc10ea007" kindref="member">xkb_keysym_t</ref><sp/>*syms;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>num_syms<sp/>=<sp/>xkb_keymap_key_get_syms_by_level(m_keymap,<sp/>keycode,<sp/>layout,<sp/>currentLevel,<sp/>&amp;syms);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>sym<sp/>=<sp/>0;<sp/>sym<sp/>&lt;<sp/>num_syms;<sp/>sym++)<sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(syms[sym]<sp/>==<sp/>keysym)<sp/>{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{{keycode<sp/>-<sp/>EVDEV_OFFSET,<sp/>currentLevel}};</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243" refid="class_k_win_1_1_xkb_1a1ee744e9686c72b870aea285089a0e08" refkind="member"><highlight class="normal">QList&lt;xkb_keysym_t&gt;<sp/><ref refid="class_k_win_1_1_xkb_1a1ee744e9686c72b870aea285089a0e08" kindref="member">Xkb::keysymsFromQtKey</ref>(QKeyCombination<sp/>keyQt)</highlight></codeline>
<codeline lineno="1244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>symQt<sp/>=<sp/>keyQt.key();</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;xkb_keysym_t&gt;<sp/>syms;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symQt<sp/>&gt;=<sp/>Qt::Key_F1<sp/>&amp;&amp;<sp/>symQt<sp/>&lt;=<sp/>Qt::Key_F35)<sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syms.append(XKB_KEY_F1<sp/>+<sp/>(symQt<sp/>-<sp/>Qt::Key_F1));</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>syms;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasKeypadMod<sp/>=<sp/>keyQt.keyboardModifiers()<sp/>&amp;<sp/>Qt::KeypadModifier;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasKeypadMod)<sp/>{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symQt<sp/>&gt;=<sp/>Qt::Key_0<sp/>&amp;&amp;<sp/>symQt<sp/>&lt;=<sp/>Qt::Key_9)<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syms.append(XKB_KEY_KP_0<sp/>+<sp/>(symQt<sp/>-<sp/>Qt::Key_0));</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>syms;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QXkbCommon::isLatin1(symQt))<sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keyboard__input_8h_1a79e604a22703391bdfe212cfc10ea007" kindref="member">xkb_keysym_t</ref><sp/>lower,<sp/>upper;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QXkbCommon::xkbcommon_XConvertCase(symQt,<sp/>&amp;lower,<sp/>&amp;upper);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyQt.keyboardModifiers()<sp/>&amp;<sp/>Qt::ShiftModifier)<sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syms.append(upper);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syms.append(lower);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>syms;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_trans_key" kindref="compound">TransKey</ref><sp/>&amp;tk<sp/>:<sp/>g_rgSymXToQT)<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tk.keySymQt<sp/>==<sp/>symQt)<sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>keysyms<sp/>from<sp/>the<sp/>keypad<sp/>if<sp/>and<sp/>only<sp/>if<sp/>KeypadModifier<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasKeypadMod<sp/>&amp;&amp;<sp/>!QXkbCommon::isKeypad(tk.keySymX))<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasKeypadMod<sp/>&amp;&amp;<sp/>QXkbCommon::isKeypad(tk.keySymX))<sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syms.append(tk.keySymX);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!syms.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>syms;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;uint&gt;<sp/>ucs4<sp/>=<sp/>QString(QChar(symQt)).toUcs4();</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>utf32<sp/>:<sp/>ucs4)<sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syms.append(utf32<sp/>|<sp/>0x01000000);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>syms;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_xkb.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/xkb.cpp"/>
  </compounddef>
</doxygen>
