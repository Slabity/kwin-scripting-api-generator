<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_input_device" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>KWin::InputDevice</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <derivedcompoundref refid="class_input_device" prot="public" virt="non-virtual">InputDevice</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_eis_device" prot="public" virt="non-virtual">KWin::EisDevice</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_fake_input_device" prot="public" virt="non-virtual">KWin::FakeInputDevice</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_lib_input_1_1_device" prot="public" virt="non-virtual">KWin::LibInput::Device</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_wayland_1_1_wayland_input_device" prot="public" virt="non-virtual">KWin::Wayland::WaylandInputDevice</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_x11_windowed_input_device" prot="public" virt="non-virtual">KWin::X11WindowedInputDevice</derivedcompoundref>
    <includes refid="inputdevice_8h" local="no">inputdevice.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_input_device_1aa28bcff91a76e7c2b405dc6cc895cde6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>InputDevice::InputDevice</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>InputDevice</name>
        <qualifiedname>KWin::InputDevice::InputDevice</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="98" column="14" bodyfile="kwin/src/core/inputdevice.cpp" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1ac1e8d78f37e13e0a4a8622d074a57156" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString InputDevice::sysPath</definition>
        <argsstring>() const</argsstring>
        <name>sysPath</name>
        <qualifiedname>KWin::InputDevice::sysPath</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1ad1b228eadf29afb385a27afd8546cb09">sysPath</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="100" column="21" bodyfile="kwin/src/core/inputdevice.cpp" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1aad981f4a054982e6461209db49f6ffad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QString</type>
        <definition>virtual QString KWin::InputDevice::name</definition>
        <argsstring>() const =0</argsstring>
        <name>name</name>
        <qualifiedname>KWin::InputDevice::name</qualifiedname>
        <reimplementedby refid="class_input_device_1ab88acc31288ad5bb283f716bf0747792">name</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_device_1a495257512c4e3e7b59ddefae612e4bb7">name</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_fake_input_device_1a79a66d28975945834055b75f036c06dd">name</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1a0b01d3a1dfdd0d9c7892b0733dc68534">name</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1aeeb87ba27f7499d864a102e7f9cf46f7">name</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_input_device_1a95ecc24355179ee23a6babd17950f369">name</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="101" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1a3118e7b217b544f5e06c64a962a113ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>quint32</type>
        <definition>quint32 InputDevice::vendor</definition>
        <argsstring>() const</argsstring>
        <name>vendor</name>
        <qualifiedname>KWin::InputDevice::vendor</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1a2d8a9d5b24954540c351b617ba4a9c04">vendor</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="102" column="21" bodyfile="kwin/src/core/inputdevice.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1ad10b01e67e95a6a6566bf87eb9f83705" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>quint32</type>
        <definition>quint32 InputDevice::product</definition>
        <argsstring>() const</argsstring>
        <name>product</name>
        <qualifiedname>KWin::InputDevice::product</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1a1d2514575787e116fb5c7cb78b73e746">product</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="103" column="21" bodyfile="kwin/src/core/inputdevice.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1a2f56d3b5eed7bd3bc717199e21aa2e51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * InputDevice::group</definition>
        <argsstring>() const</argsstring>
        <name>group</name>
        <qualifiedname>KWin::InputDevice::group</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1adb6eb52cdfda19e5e88f2ae8dca0f404">group</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="105" column="18" bodyfile="kwin/src/core/inputdevice.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1a28f931744ac0815ad818380332e704f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::InputDevice::isEnabled</definition>
        <argsstring>() const =0</argsstring>
        <name>isEnabled</name>
        <qualifiedname>KWin::InputDevice::isEnabled</qualifiedname>
        <reimplementedby refid="class_input_device_1a01a4c88876a2a3f68b2d68809e04422d">isEnabled</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_device_1abd56da2bb796ad4ce4967abe40cbdf0c">isEnabled</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_fake_input_device_1a54e067e21d00d0d5a782961bbd62135f">isEnabled</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1afde052dbca3df7f85eedac78a0447a20">isEnabled</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1ab230b251fa86f749b83c60a619901a8b">isEnabled</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_input_device_1ad99ce9a015af4dc72c337d4380f66ead">isEnabled</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="107" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1a03ceb0b268f14beabb23794b27ff59bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void KWin::InputDevice::setEnabled</definition>
        <argsstring>(bool enabled)=0</argsstring>
        <name>setEnabled</name>
        <qualifiedname>KWin::InputDevice::setEnabled</qualifiedname>
        <reimplementedby refid="class_input_device_1a196c46dfc66f894afa8e9380eebb9942">setEnabled</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_device_1a36fe0cf180fd4d8b9d148dd3c9dabbc5">setEnabled</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_fake_input_device_1afc4d39ffd88fe49eba2537f7709a1543">setEnabled</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1afe9cbb8fa09567e4af3d0ea7e6e95459">setEnabled</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a2d099135e4373f2837e5623367d93597">setEnabled</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_input_device_1a2c7c15d385c34e59b71a199c7e4b46a7">setEnabled</reimplementedby>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="108" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1ae02d1543af79c38088c5190442a1bcc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>LEDs</type>
        <definition>LEDs InputDevice::leds</definition>
        <argsstring>() const</argsstring>
        <name>leds</name>
        <qualifiedname>KWin::InputDevice::leds</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1a6e9806b99c360d65559bf70f1660128f">leds</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="110" column="18" bodyfile="kwin/src/core/inputdevice.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1a582970abbfe7a7cfdf16d865991a2e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void InputDevice::setLeds</definition>
        <argsstring>(LEDs leds)</argsstring>
        <name>setLeds</name>
        <qualifiedname>KWin::InputDevice::setLeds</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1a1d45620c1742cee17855bd9a8b647850">setLeds</reimplementedby>
        <param>
          <type>LEDs</type>
          <declname>leds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="111" column="18" bodyfile="kwin/src/core/inputdevice.cpp" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1a1b70ce5d05e9fb22fe7c5759c9a02d94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::InputDevice::isKeyboard</definition>
        <argsstring>() const =0</argsstring>
        <name>isKeyboard</name>
        <qualifiedname>KWin::InputDevice::isKeyboard</qualifiedname>
        <reimplementedby refid="class_input_device_1adcd9cdd806d62f8e01469afe7a445b47">isKeyboard</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_device_1a5e62a9687184927875e4e1be5d72be99">isKeyboard</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_fake_input_device_1a1848986130f50738d77de83e4daf5783">isKeyboard</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1a1f9577774f00f5fd62b921dc1ff3f584">isKeyboard</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a600127120cf6c54c11f40c5082724110">isKeyboard</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_input_device_1a00c7300493ad9959db896d6efb816d1d">isKeyboard</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="113" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1a331075c15081e56df49c17d0882a3c99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::InputDevice::isPointer</definition>
        <argsstring>() const =0</argsstring>
        <name>isPointer</name>
        <qualifiedname>KWin::InputDevice::isPointer</qualifiedname>
        <reimplementedby refid="class_input_device_1adece39e373754cb300e1d24862b3a8dc">isPointer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_device_1a8f96c7711ea0add08f4add22c9806756">isPointer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_fake_input_device_1a0d2f5877b745fba49b0bfda11e8a106b">isPointer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1afa321bc97dbd2e2b19ffa14ca9fd234d">isPointer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a0692402f6f95b26d45e4889da99c1733">isPointer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_input_device_1ab1d42939285ba11c8a9e7b9a9b05d2ee">isPointer</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="114" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1a74674383b7e25067438228500de9a8b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::InputDevice::isTouchpad</definition>
        <argsstring>() const =0</argsstring>
        <name>isTouchpad</name>
        <qualifiedname>KWin::InputDevice::isTouchpad</qualifiedname>
        <reimplementedby refid="class_input_device_1a45dede30c66fc124ff169148dbf3615d">isTouchpad</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_device_1a55f16a3506e6004a0ddc4486665934fc">isTouchpad</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_fake_input_device_1a1e263bd6c51b3609e19ffcc021561785">isTouchpad</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1a171295a8db7f497687fdc3ca86412149">isTouchpad</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a3995d993a66143a3fca27e2c053928b6">isTouchpad</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_input_device_1a1ea981a670e1e8c216bf55d0a5db76aa">isTouchpad</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="115" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1a588e08cb3904b465f2127217ef324040" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::InputDevice::isTouch</definition>
        <argsstring>() const =0</argsstring>
        <name>isTouch</name>
        <qualifiedname>KWin::InputDevice::isTouch</qualifiedname>
        <reimplementedby refid="class_input_device_1a482484051de73f415748c073a3c12160">isTouch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_device_1a2da651f05785d8baa2c8725c6efba632">isTouch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_fake_input_device_1a25a503caf09a489fe7a0be9d48f0e583">isTouch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1abe3f8917ad8fab2c5a335b7029568dab">isTouch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a9d2a35d1b9a15f8e1ee643ec20e2a246">isTouch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_input_device_1ab926ccf0f6583263597d34dbf3623ae4">isTouch</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="116" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1a9e2fa178da50f29fb524fc5b4bc450f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::InputDevice::isTabletTool</definition>
        <argsstring>() const =0</argsstring>
        <name>isTabletTool</name>
        <qualifiedname>KWin::InputDevice::isTabletTool</qualifiedname>
        <reimplementedby refid="class_input_device_1abcc5ee92dfbbae396008215561067739">isTabletTool</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_device_1a9d8e9a07491a1ea35ecbdffb7d4b053e">isTabletTool</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_fake_input_device_1a972bab67614f998deff2903668d80f19">isTabletTool</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1a19f7bbdf4f353f6bcf63ffbea626c54f">isTabletTool</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a04c54eb5211d9ec4951cb286e8b85a90">isTabletTool</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_input_device_1af088f149252f83d06393a48d2c59da41">isTabletTool</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="117" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1aeb9893522b4ca183cbde1ffd31c711e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::InputDevice::isTabletPad</definition>
        <argsstring>() const =0</argsstring>
        <name>isTabletPad</name>
        <qualifiedname>KWin::InputDevice::isTabletPad</qualifiedname>
        <reimplementedby refid="class_input_device_1a446d89df39219197e4658f97de6bfd0b">isTabletPad</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_device_1afc71bce5e72283f25e0540ec88a94bfc">isTabletPad</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_fake_input_device_1a498d36d9a6dca52fffcc8053b1f2569d">isTabletPad</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1a4100f591300c3eaebac5dd8588fb5249">isTabletPad</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a85e7a2c756b9aedc10b02edef323b579">isTabletPad</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_input_device_1a7548d36e398244e7b4aca35d37064cbf">isTabletPad</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="118" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1abbbb154e529903f4493029190bb35fc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::InputDevice::isTabletModeSwitch</definition>
        <argsstring>() const =0</argsstring>
        <name>isTabletModeSwitch</name>
        <qualifiedname>KWin::InputDevice::isTabletModeSwitch</qualifiedname>
        <reimplementedby refid="class_input_device_1a2927e519b7e85e06cf4148960977bf47">isTabletModeSwitch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_device_1a068932ceff93762460df60fb1204b2f4">isTabletModeSwitch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_fake_input_device_1ac87e10891b07a77796e474c3182015ba">isTabletModeSwitch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1a31dfe0ab7d0b139d2590ee6ba31c190e">isTabletModeSwitch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a77f53f4034747df59590dc1615c84a69">isTabletModeSwitch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_input_device_1a3ea045136bb1d4be1050bd2e02cddcbd">isTabletModeSwitch</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="119" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1ad81736c7e46244d5f48132d10c7f8255" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::InputDevice::isLidSwitch</definition>
        <argsstring>() const =0</argsstring>
        <name>isLidSwitch</name>
        <qualifiedname>KWin::InputDevice::isLidSwitch</qualifiedname>
        <reimplementedby refid="class_input_device_1aa52ac4c6f1595324bfe0789505ae00a4">isLidSwitch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_device_1a10c9d3e7272457f7ecf8cfc52289d793">isLidSwitch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_fake_input_device_1ae079a5ca555f5fc126d46f9e36f66563">isLidSwitch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1a50774a5ba260ac15cc6dabdf3649b24c">isLidSwitch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1af868f02670ebde22f77eae49804e8069">isLidSwitch</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_input_device_1ab7555294caec0fc4229a8b9eb56079c6">isLidSwitch</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="120" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1afa3cfe3dcb3741a53f1c88f887d58b92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString InputDevice::outputName</definition>
        <argsstring>() const</argsstring>
        <name>outputName</name>
        <qualifiedname>KWin::InputDevice::outputName</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1acfb077793d5eb55bd5074edf7256907a">outputName</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="122" column="21" bodyfile="kwin/src/core/inputdevice.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1a7d3d38075506f5b85db2b9dd9bf35771" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void InputDevice::setOutputName</definition>
        <argsstring>(const QString &amp;outputName)</argsstring>
        <name>setOutputName</name>
        <qualifiedname>KWin::InputDevice::setOutputName</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1a6ef85624f2379730b1e953a5c03e99ac">setOutputName</reimplementedby>
        <param>
          <type>const QString &amp;</type>
          <declname>outputName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="123" column="18" bodyfile="kwin/src/core/inputdevice.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1ad78b0bcdcfa038f560c3f7d926f4fbbe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int InputDevice::tabletPadButtonCount</definition>
        <argsstring>() const</argsstring>
        <name>tabletPadButtonCount</name>
        <qualifiedname>KWin::InputDevice::tabletPadButtonCount</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1a7939ee8a56213c144207841e8ebfc458">tabletPadButtonCount</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="125" column="17" bodyfile="kwin/src/core/inputdevice.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_device_1abafa14f7b803ac563843d27346409bef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QList&lt; <ref refid="struct_k_win_1_1_input_device_tablet_pad_mode_group" kindref="compound">InputDeviceTabletPadModeGroup</ref> &gt;</type>
        <definition>QList&lt; InputDeviceTabletPadModeGroup &gt; InputDevice::modeGroups</definition>
        <argsstring>() const</argsstring>
        <name>modeGroups</name>
        <qualifiedname>KWin::InputDevice::modeGroups</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_lib_input_1_1_device_1a52697f73b8e38dd8fb3f79f75325cf82">modeGroups</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="127" column="19" bodyfile="kwin/src/core/inputdevice.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a18c0e18750a071e1ab7a3e3cd575071a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::keyChanged</definition>
        <argsstring>(quint32 key, KeyboardKeyState, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>keyChanged</name>
        <qualifiedname>KWin::InputDevice::keyChanged</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1" kindref="member">KeyboardKeyState</ref></type>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="130" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1af2aa67c0f21aa2f83c1e17a611e75f85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::pointerButtonChanged</definition>
        <argsstring>(quint32 button, PointerButtonState state, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>pointerButtonChanged</name>
        <qualifiedname>KWin::InputDevice::pointerButtonChanged</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>button</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3" kindref="member">PointerButtonState</ref></type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="131" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1aabda249f682e8597843a656c55525d5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::pointerMotionAbsolute</definition>
        <argsstring>(const QPointF &amp;position, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>pointerMotionAbsolute</name>
        <qualifiedname>KWin::InputDevice::pointerMotionAbsolute</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="132" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a41f177939241acaec7df62607e7370d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::pointerMotion</definition>
        <argsstring>(const QPointF &amp;delta, const QPointF &amp;deltaNonAccelerated, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>pointerMotion</name>
        <qualifiedname>KWin::InputDevice::pointerMotion</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>deltaNonAccelerated</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="133" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a33bbebff1d2b1a59a57c88dafa72eaaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::pointerAxisChanged</definition>
        <argsstring>(PointerAxis axis, qreal delta, qint32 deltaV120, PointerAxisSource source, bool inverted, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>pointerAxisChanged</name>
        <qualifiedname>KWin::InputDevice::pointerAxisChanged</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1aec4516626e95b6dc22c614c769a43590" kindref="member">PointerAxis</ref></type>
          <declname>axis</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>qint32</type>
          <declname>deltaV120</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a143704533be3f7be8a43b2b962600248" kindref="member">PointerAxisSource</ref></type>
          <declname>source</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inverted</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="134" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a43d563ab496cbbc60cd1098fce57ab70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::pointerFrame</definition>
        <argsstring>(InputDevice *device)</argsstring>
        <name>pointerFrame</name>
        <qualifiedname>KWin::InputDevice::pointerFrame</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="135" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a2af070611afbc3b97fb0930ac3898346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::touchFrame</definition>
        <argsstring>(InputDevice *device)</argsstring>
        <name>touchFrame</name>
        <qualifiedname>KWin::InputDevice::touchFrame</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="136" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a3605b08e0a373f1e91c09c87557fd020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::touchCanceled</definition>
        <argsstring>(InputDevice *device)</argsstring>
        <name>touchCanceled</name>
        <qualifiedname>KWin::InputDevice::touchCanceled</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="137" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a980b0a91ad2c70a7c1ed4360fccb76e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::touchDown</definition>
        <argsstring>(qint32 id, const QPointF &amp;absolutePos, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>touchDown</name>
        <qualifiedname>KWin::InputDevice::touchDown</qualifiedname>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>absolutePos</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="138" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1afcc35ba1cd647736c8122951a54025b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::touchUp</definition>
        <argsstring>(qint32 id, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>touchUp</name>
        <qualifiedname>KWin::InputDevice::touchUp</qualifiedname>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="139" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a3179642a0ae2196f397d221d0ff38b3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::touchMotion</definition>
        <argsstring>(qint32 id, const QPointF &amp;absolutePos, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>touchMotion</name>
        <qualifiedname>KWin::InputDevice::touchMotion</qualifiedname>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>absolutePos</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="140" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1ae7cfe76b5176e42e9e2d1f2eab657d9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::swipeGestureBegin</definition>
        <argsstring>(int fingerCount, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>swipeGestureBegin</name>
        <qualifiedname>KWin::InputDevice::swipeGestureBegin</qualifiedname>
        <param>
          <type>int</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="141" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a38f9a85f76f779c1736733efacdeff9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::swipeGestureUpdate</definition>
        <argsstring>(const QPointF &amp;delta, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>swipeGestureUpdate</name>
        <qualifiedname>KWin::InputDevice::swipeGestureUpdate</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="142" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1ae57204b3e3e2fd3cde04d13c8a5df366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::swipeGestureEnd</definition>
        <argsstring>(std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>swipeGestureEnd</name>
        <qualifiedname>KWin::InputDevice::swipeGestureEnd</qualifiedname>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="143" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a4ae913ffc5ba93bf20441d17608a2323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::swipeGestureCancelled</definition>
        <argsstring>(std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>swipeGestureCancelled</name>
        <qualifiedname>KWin::InputDevice::swipeGestureCancelled</qualifiedname>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="144" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a58c19abab1f426b987b0f0690011dfb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::pinchGestureBegin</definition>
        <argsstring>(int fingerCount, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>pinchGestureBegin</name>
        <qualifiedname>KWin::InputDevice::pinchGestureBegin</qualifiedname>
        <param>
          <type>int</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="145" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a9720434391b05daee19c3f18b72dc635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::pinchGestureUpdate</definition>
        <argsstring>(qreal scale, qreal angleDelta, const QPointF &amp;delta, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>pinchGestureUpdate</name>
        <qualifiedname>KWin::InputDevice::pinchGestureUpdate</qualifiedname>
        <param>
          <type>qreal</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>angleDelta</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="146" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1afcacc8ed046e56243d42f4a7f6cbd2e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::pinchGestureEnd</definition>
        <argsstring>(std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>pinchGestureEnd</name>
        <qualifiedname>KWin::InputDevice::pinchGestureEnd</qualifiedname>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="147" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a5b514ccff02b61cf03b9fc23806a58eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::pinchGestureCancelled</definition>
        <argsstring>(std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>pinchGestureCancelled</name>
        <qualifiedname>KWin::InputDevice::pinchGestureCancelled</qualifiedname>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="148" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a4f46cbd5727c3b81b2d3b0238f6efa4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::holdGestureBegin</definition>
        <argsstring>(int fingerCount, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>holdGestureBegin</name>
        <qualifiedname>KWin::InputDevice::holdGestureBegin</qualifiedname>
        <param>
          <type>int</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="149" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1ab362e3f2d08b666a98e71afd11b34de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::holdGestureEnd</definition>
        <argsstring>(std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>holdGestureEnd</name>
        <qualifiedname>KWin::InputDevice::holdGestureEnd</qualifiedname>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="150" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a5d0e018e878d5ffb65cc906ed841873a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::holdGestureCancelled</definition>
        <argsstring>(std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>holdGestureCancelled</name>
        <qualifiedname>KWin::InputDevice::holdGestureCancelled</qualifiedname>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="151" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a7be97fe8f11738c6bd6d6ec6fa810f5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::switchToggle</definition>
        <argsstring>(SwitchState state, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>switchToggle</name>
        <qualifiedname>KWin::InputDevice::switchToggle</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1abbce8a26ea93b91db7bbdceca2155130" kindref="member">SwitchState</ref></type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="152" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a36fd21ea27d722c88455fa7315619593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::tabletToolAxisEvent</definition>
        <argsstring>(const QPointF &amp;pos, qreal pressure, qreal xTilt, qreal yTilt, qreal rotation, qreal distance, bool tipDown, qreal sliderPosition, InputDeviceTabletTool *tool, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>tabletToolAxisEvent</name>
        <qualifiedname>KWin::InputDevice::tabletToolAxisEvent</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>pressure</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>xTilt</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>yTilt</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>tipDown</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>sliderPosition</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device_tablet_tool" kindref="compound">InputDeviceTabletTool</ref> *</type>
          <declname>tool</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="153" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1aee6146b2bf9d22adc82d8fdedb2b496d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::tabletToolProximityEvent</definition>
        <argsstring>(const QPointF &amp;pos, qreal xTilt, qreal yTilt, qreal rotation, qreal distance, bool tipNear, qreal sliderPosition, InputDeviceTabletTool *tool, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>tabletToolProximityEvent</name>
        <qualifiedname>KWin::InputDevice::tabletToolProximityEvent</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>xTilt</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>yTilt</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>tipNear</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>sliderPosition</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device_tablet_tool" kindref="compound">InputDeviceTabletTool</ref> *</type>
          <declname>tool</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="154" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1a567ce8c3e12e5d82725bcfb6f27d34a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::tabletToolTipEvent</definition>
        <argsstring>(const QPointF &amp;pos, qreal pressure, qreal xTilt, qreal yTilt, qreal rotation, qreal distance, bool tipDown, qreal sliderPosition, InputDeviceTabletTool *tool, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>tabletToolTipEvent</name>
        <qualifiedname>KWin::InputDevice::tabletToolTipEvent</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>pressure</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>xTilt</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>yTilt</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>tipDown</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>sliderPosition</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device_tablet_tool" kindref="compound">InputDeviceTabletTool</ref> *</type>
          <declname>tool</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="155" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1aeae463b5a1bf527c63ee0ae32d28e45c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::tabletToolButtonEvent</definition>
        <argsstring>(uint button, bool isPressed, InputDeviceTabletTool *tool, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>tabletToolButtonEvent</name>
        <qualifiedname>KWin::InputDevice::tabletToolButtonEvent</qualifiedname>
        <param>
          <type>uint</type>
          <declname>button</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isPressed</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device_tablet_tool" kindref="compound">InputDeviceTabletTool</ref> *</type>
          <declname>tool</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="156" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1adf7e491468284b12bf62f422af23bc8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::tabletPadButtonEvent</definition>
        <argsstring>(uint button, bool isPressed, quint32 group, quint32 mode, bool isModeSwitch, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>tabletPadButtonEvent</name>
        <qualifiedname>KWin::InputDevice::tabletPadButtonEvent</qualifiedname>
        <param>
          <type>uint</type>
          <declname>button</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isPressed</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>group</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isModeSwitch</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="157" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1af637ebd5021ae6b6d37121d8896768fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::tabletPadStripEvent</definition>
        <argsstring>(int number, int position, bool isFinger, quint32 group, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>tabletPadStripEvent</name>
        <qualifiedname>KWin::InputDevice::tabletPadStripEvent</qualifiedname>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>int</type>
          <declname>position</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isFinger</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>group</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="158" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_device_1aa55d18855d95e08d65fe225497342fc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputDevice::tabletPadRingEvent</definition>
        <argsstring>(int number, int position, bool isFinger, quint32 group, std::chrono::microseconds time, InputDevice *device)</argsstring>
        <name>tabletPadRingEvent</name>
        <qualifiedname>KWin::InputDevice::tabletPadRingEvent</qualifiedname>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>int</type>
          <declname>position</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isFinger</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>group</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/inputdevice.h" line="159" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> class represents an input device, e.g. a mouse, or a keyboard, etc. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>InputDevice</label>
        <link refid="class_input_device"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>KWin::EisDevice</label>
        <link refid="class_k_win_1_1_eis_device"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>KWin::FakeInputDevice</label>
        <link refid="class_k_win_1_1_fake_input_device"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::InputDevice</label>
        <link refid="class_k_win_1_1_input_device"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>KWin::LibInput::Device</label>
        <link refid="class_k_win_1_1_lib_input_1_1_device"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>KWin::Wayland::WaylandInputDevice</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_input_device"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>KWin::X11WindowedInputDevice</label>
        <link refid="class_k_win_1_1_x11_windowed_input_device"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::InputDevice</label>
        <link refid="class_k_win_1_1_input_device"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/core/inputdevice.h" line="93" column="1" bodyfile="kwin/src/core/inputdevice.h" bodystart="94" bodyend="160"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_input_device_1a2f56d3b5eed7bd3bc717199e21aa2e51" prot="public" virt="virtual"><scope>KWin::InputDevice</scope><name>group</name></member>
      <member refid="class_k_win_1_1_input_device_1a4f46cbd5727c3b81b2d3b0238f6efa4a" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>holdGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_device_1a5d0e018e878d5ffb65cc906ed841873a" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>holdGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_device_1ab362e3f2d08b666a98e71afd11b34de4" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>holdGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_device_1aa28bcff91a76e7c2b405dc6cc895cde6" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>InputDevice</name></member>
      <member refid="class_k_win_1_1_input_device_1a28f931744ac0815ad818380332e704f6" prot="public" virt="pure-virtual"><scope>KWin::InputDevice</scope><name>isEnabled</name></member>
      <member refid="class_k_win_1_1_input_device_1a1b70ce5d05e9fb22fe7c5759c9a02d94" prot="public" virt="pure-virtual"><scope>KWin::InputDevice</scope><name>isKeyboard</name></member>
      <member refid="class_k_win_1_1_input_device_1ad81736c7e46244d5f48132d10c7f8255" prot="public" virt="pure-virtual"><scope>KWin::InputDevice</scope><name>isLidSwitch</name></member>
      <member refid="class_k_win_1_1_input_device_1a331075c15081e56df49c17d0882a3c99" prot="public" virt="pure-virtual"><scope>KWin::InputDevice</scope><name>isPointer</name></member>
      <member refid="class_k_win_1_1_input_device_1abbbb154e529903f4493029190bb35fc5" prot="public" virt="pure-virtual"><scope>KWin::InputDevice</scope><name>isTabletModeSwitch</name></member>
      <member refid="class_k_win_1_1_input_device_1aeb9893522b4ca183cbde1ffd31c711e4" prot="public" virt="pure-virtual"><scope>KWin::InputDevice</scope><name>isTabletPad</name></member>
      <member refid="class_k_win_1_1_input_device_1a9e2fa178da50f29fb524fc5b4bc450f2" prot="public" virt="pure-virtual"><scope>KWin::InputDevice</scope><name>isTabletTool</name></member>
      <member refid="class_k_win_1_1_input_device_1a588e08cb3904b465f2127217ef324040" prot="public" virt="pure-virtual"><scope>KWin::InputDevice</scope><name>isTouch</name></member>
      <member refid="class_k_win_1_1_input_device_1a74674383b7e25067438228500de9a8b7" prot="public" virt="pure-virtual"><scope>KWin::InputDevice</scope><name>isTouchpad</name></member>
      <member refid="class_k_win_1_1_input_device_1a18c0e18750a071e1ab7a3e3cd575071a" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>keyChanged</name></member>
      <member refid="class_k_win_1_1_input_device_1ae02d1543af79c38088c5190442a1bcc1" prot="public" virt="virtual"><scope>KWin::InputDevice</scope><name>leds</name></member>
      <member refid="class_k_win_1_1_input_device_1abafa14f7b803ac563843d27346409bef" prot="public" virt="virtual"><scope>KWin::InputDevice</scope><name>modeGroups</name></member>
      <member refid="class_k_win_1_1_input_device_1aad981f4a054982e6461209db49f6ffad" prot="public" virt="pure-virtual"><scope>KWin::InputDevice</scope><name>name</name></member>
      <member refid="class_k_win_1_1_input_device_1afa3cfe3dcb3741a53f1c88f887d58b92" prot="public" virt="virtual"><scope>KWin::InputDevice</scope><name>outputName</name></member>
      <member refid="class_k_win_1_1_input_device_1a58c19abab1f426b987b0f0690011dfb0" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>pinchGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_device_1a5b514ccff02b61cf03b9fc23806a58eb" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>pinchGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_device_1afcacc8ed046e56243d42f4a7f6cbd2e9" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>pinchGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_device_1a9720434391b05daee19c3f18b72dc635" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>pinchGestureUpdate</name></member>
      <member refid="class_k_win_1_1_input_device_1a33bbebff1d2b1a59a57c88dafa72eaaa" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>pointerAxisChanged</name></member>
      <member refid="class_k_win_1_1_input_device_1af2aa67c0f21aa2f83c1e17a611e75f85" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>pointerButtonChanged</name></member>
      <member refid="class_k_win_1_1_input_device_1a43d563ab496cbbc60cd1098fce57ab70" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>pointerFrame</name></member>
      <member refid="class_k_win_1_1_input_device_1a41f177939241acaec7df62607e7370d3" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>pointerMotion</name></member>
      <member refid="class_k_win_1_1_input_device_1aabda249f682e8597843a656c55525d5d" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>pointerMotionAbsolute</name></member>
      <member refid="class_k_win_1_1_input_device_1ad10b01e67e95a6a6566bf87eb9f83705" prot="public" virt="virtual"><scope>KWin::InputDevice</scope><name>product</name></member>
      <member refid="class_k_win_1_1_input_device_1a03ceb0b268f14beabb23794b27ff59bb" prot="public" virt="pure-virtual"><scope>KWin::InputDevice</scope><name>setEnabled</name></member>
      <member refid="class_k_win_1_1_input_device_1a582970abbfe7a7cfdf16d865991a2e97" prot="public" virt="virtual"><scope>KWin::InputDevice</scope><name>setLeds</name></member>
      <member refid="class_k_win_1_1_input_device_1a7d3d38075506f5b85db2b9dd9bf35771" prot="public" virt="virtual"><scope>KWin::InputDevice</scope><name>setOutputName</name></member>
      <member refid="class_k_win_1_1_input_device_1ae7cfe76b5176e42e9e2d1f2eab657d9b" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>swipeGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_device_1a4ae913ffc5ba93bf20441d17608a2323" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>swipeGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_device_1ae57204b3e3e2fd3cde04d13c8a5df366" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>swipeGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_device_1a38f9a85f76f779c1736733efacdeff9a" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>swipeGestureUpdate</name></member>
      <member refid="class_k_win_1_1_input_device_1a7be97fe8f11738c6bd6d6ec6fa810f5c" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>switchToggle</name></member>
      <member refid="class_k_win_1_1_input_device_1ac1e8d78f37e13e0a4a8622d074a57156" prot="public" virt="virtual"><scope>KWin::InputDevice</scope><name>sysPath</name></member>
      <member refid="class_k_win_1_1_input_device_1ad78b0bcdcfa038f560c3f7d926f4fbbe" prot="public" virt="virtual"><scope>KWin::InputDevice</scope><name>tabletPadButtonCount</name></member>
      <member refid="class_k_win_1_1_input_device_1adf7e491468284b12bf62f422af23bc8e" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>tabletPadButtonEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1aa55d18855d95e08d65fe225497342fc6" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>tabletPadRingEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1af637ebd5021ae6b6d37121d8896768fb" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>tabletPadStripEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1a36fd21ea27d722c88455fa7315619593" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>tabletToolAxisEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1aeae463b5a1bf527c63ee0ae32d28e45c" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>tabletToolButtonEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1aee6146b2bf9d22adc82d8fdedb2b496d" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>tabletToolProximityEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1a567ce8c3e12e5d82725bcfb6f27d34a7" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>tabletToolTipEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1a3605b08e0a373f1e91c09c87557fd020" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>touchCanceled</name></member>
      <member refid="class_k_win_1_1_input_device_1a980b0a91ad2c70a7c1ed4360fccb76e7" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>touchDown</name></member>
      <member refid="class_k_win_1_1_input_device_1a2af070611afbc3b97fb0930ac3898346" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>touchFrame</name></member>
      <member refid="class_k_win_1_1_input_device_1a3179642a0ae2196f397d221d0ff38b3d" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>touchMotion</name></member>
      <member refid="class_k_win_1_1_input_device_1afcc35ba1cd647736c8122951a54025b8" prot="public" virt="non-virtual"><scope>KWin::InputDevice</scope><name>touchUp</name></member>
      <member refid="class_k_win_1_1_input_device_1a3118e7b217b544f5e06c64a962a113ef" prot="public" virt="virtual"><scope>KWin::InputDevice</scope><name>vendor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
