<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="eglplatformcontext_8cpp" kind="file" language="C++">
    <compoundname>eglplatformcontext.cpp</compoundname>
    <includes refid="eglplatformcontext_8h" local="yes">eglplatformcontext.h</includes>
    <includes refid="outputbackend_8h" local="yes">core/outputbackend.h</includes>
    <includes refid="eglhelpers_8h" local="yes">eglhelpers.h</includes>
    <includes refid="internalwindow_8h" local="yes">internalwindow.h</includes>
    <includes refid="offscreensurface_8h" local="yes">offscreensurface.h</includes>
    <includes refid="eglcontext_8h" local="yes">opengl/eglcontext.h</includes>
    <includes refid="egldisplay_8h" local="yes">opengl/egldisplay.h</includes>
    <includes refid="glutils_8h" local="yes">opengl/glutils.h</includes>
    <includes refid="swapchain_8h" local="yes">swapchain.h</includes>
    <includes refid="plugins_2qpa_2window_8h" local="yes">window.h</includes>
    <includes local="yes">logging.h</includes>
    <incdepgraph>
      <node id="29">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>core/graphicsbufferallocator.h</label>
        <link refid="graphicsbufferallocator_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>core/outputbackend.h</label>
        <link refid="outputbackend_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>internalwindow.h</label>
        <link refid="internalwindow_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>opengl/eglcontext.h</label>
        <link refid="eglcontext_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>opengl/egldisplay.h</label>
        <link refid="egldisplay_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>opengl/glframebuffer.h</label>
        <link refid="glframebuffer_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>opengl/glshader.h</label>
        <link refid="glshader_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>opengl/glshadermanager.h</label>
        <link refid="glshadermanager_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>opengl/gltexture.h</label>
        <link refid="gltexture_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>opengl/glutils.h</label>
        <link refid="glutils_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>eglhelpers.h</label>
        <link refid="eglhelpers_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/plugins/qpa/eglplatformcontext.cpp</label>
        <link refid="eglplatformcontext_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>eglplatformcontext.h</label>
        <link refid="eglplatformcontext_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>offscreensurface.h</label>
        <link refid="offscreensurface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>swapchain.h</label>
        <link refid="swapchain_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>window.h</label>
        <link refid="plugins_2qpa_2window_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>rules.h</label>
        <link refid="rules_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>window.h</label>
        <link refid="window_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>KConfigWatcher</label>
      </node>
      <node id="38">
        <label>KSharedConfig</label>
      </node>
      <node id="42">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="43">
        <label>QApplication</label>
      </node>
      <node id="31">
        <label>QByteArray</label>
      </node>
      <node id="72">
        <label>QColor</label>
      </node>
      <node id="9">
        <label>QCoreApplication</label>
      </node>
      <node id="33">
        <label>QDebug</label>
      </node>
      <node id="54">
        <label>QElapsedTimer</label>
      </node>
      <node id="63">
        <label>QExplicitlySharedDataPointer</label>
      </node>
      <node id="76">
        <label>QFlags</label>
      </node>
      <node id="37">
        <label>QHash</label>
      </node>
      <node id="55">
        <label>QIcon</label>
      </node>
      <node id="10">
        <label>QImage</label>
      </node>
      <node id="56">
        <label>QKeySequence</label>
      </node>
      <node id="32">
        <label>QList</label>
      </node>
      <node id="51">
        <label>QLoggingCategory</label>
      </node>
      <node id="73">
        <label>QMatrix3x3</label>
      </node>
      <node id="30">
        <label>QMatrix4x4</label>
      </node>
      <node id="15">
        <label>QObject</label>
      </node>
      <node id="11">
        <label>QPoint</label>
      </node>
      <node id="57">
        <label>QPointer</label>
      </node>
      <node id="44">
        <label>QProcessEnvironment</label>
      </node>
      <node id="34">
        <label>QRect</label>
      </node>
      <node id="47">
        <label>QRectF</label>
      </node>
      <node id="64">
        <label>QRegion</label>
      </node>
      <node id="23">
        <label>QSize</label>
      </node>
      <node id="66">
        <label>QStack</label>
      </node>
      <node id="50">
        <label>QString</label>
      </node>
      <node id="19">
        <label>QSurfaceFormat</label>
      </node>
      <node id="58">
        <label>QTimer</label>
      </node>
      <node id="35">
        <label>QUuid</label>
      </node>
      <node id="12">
        <label>QVariant</label>
      </node>
      <node id="13">
        <label>QVector2D</label>
      </node>
      <node id="74">
        <label>QVector3D</label>
      </node>
      <node id="52">
        <label>climits</label>
      </node>
      <node id="8">
        <label>config-kwin.h</label>
      </node>
      <node id="3">
        <label>epoxy/egl.h</label>
      </node>
      <node id="65">
        <label>epoxy/gl.h</label>
      </node>
      <node id="53">
        <label>functional</label>
      </node>
      <node id="14">
        <label>kwin_export.h</label>
      </node>
      <node id="85">
        <label>logging.h</label>
      </node>
      <node id="77">
        <label>map</label>
      </node>
      <node id="16">
        <label>memory</label>
      </node>
      <node id="17">
        <label>optional</label>
      </node>
      <node id="60">
        <label>qpa/qplatformoffscreensurface.h</label>
      </node>
      <node id="4">
        <label>qpa/qplatformopenglcontext.h</label>
      </node>
      <node id="84">
        <label>qpa/qplatformwindow.h</label>
      </node>
      <node id="79">
        <label>ranges</label>
      </node>
      <node id="80">
        <label>span</label>
      </node>
      <node id="68">
        <label>sys/types.h</label>
      </node>
      <node id="5">
        <label>unordered_map</label>
      </node>
      <node id="24">
        <label>utility</label>
      </node>
      <node id="39">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <innernamespace refid="namespace_k_win_1_1_q_p_a">KWin::QPA</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2015<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eglplatformcontext_8h" kindref="compound">eglplatformcontext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputbackend_8h" kindref="compound">core/outputbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eglhelpers_8h" kindref="compound">eglhelpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="internalwindow_8h" kindref="compound">internalwindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="offscreensurface_8h" kindref="compound">offscreensurface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eglcontext_8h" kindref="compound">opengl/eglcontext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="egldisplay_8h" kindref="compound">opengl/egldisplay.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glutils_8h" kindref="compound">opengl/glutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="swapchain_8h" kindref="compound">swapchain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="plugins_2qpa_2window_8h" kindref="compound">window.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;logging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1_1_q_p_a" kindref="compound">QPA</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1a86847a8b4925da911c2b08769b7fee2b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1a86847a8b4925da911c2b08769b7fee2b" kindref="member">EGLRenderTarget::EGLRenderTarget</ref>(<ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref><sp/>*<ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1aed29308ffea9fbb4b7f944ddfce37f0d" kindref="member">buffer</ref>,<sp/>std::unique_ptr&lt;GLFramebuffer&gt;<sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1a6a588ecfcd4ea289369290f5bef6e261" kindref="member">fbo</ref>,<sp/>std::shared_ptr&lt;GLTexture&gt;<sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1adc40a64a257c1b64144edd2c54ca60c9" kindref="member">texture</ref>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1aed29308ffea9fbb4b7f944ddfce37f0d" kindref="member">buffer</ref>(<ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1aed29308ffea9fbb4b7f944ddfce37f0d" kindref="member">buffer</ref>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1a6a588ecfcd4ea289369290f5bef6e261" kindref="member">fbo</ref>(std::move(<ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1a6a588ecfcd4ea289369290f5bef6e261" kindref="member">fbo</ref>))</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1adc40a64a257c1b64144edd2c54ca60c9" kindref="member">texture</ref>(std::move(<ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1adc40a64a257c1b64144edd2c54ca60c9" kindref="member">texture</ref>))</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1a5635c6115a30875ff03c7b23f9d16315" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1a5635c6115a30875ff03c7b23f9d16315" kindref="member">EGLRenderTarget::~EGLRenderTarget</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1a6a588ecfcd4ea289369290f5bef6e261" kindref="member">fbo</ref>.reset();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target_1adc40a64a257c1b64144edd2c54ca60c9" kindref="member">texture</ref>.reset();</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1aa02d9baed5e070265356abc227072d73" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1aa02d9baed5e070265356abc227072d73" kindref="member">EGLPlatformContext::EGLPlatformContext</ref>(QOpenGLContext<sp/>*context,<sp/><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref><sp/>*display)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_eglDisplay(display)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>create(context-&gt;format(),<sp/>kwinApp()-&gt;outputBackend()-&gt;sceneEglGlobalShareContext());</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1a5dddf00d9e1a4b3e9a9a9583e9487f66" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1a5dddf00d9e1a4b3e9a9a9583e9487f66" kindref="member">EGLPlatformContext::~EGLPlatformContext</ref>()</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_eglContext)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_renderTargets.empty()<sp/>||<sp/>!m_zombieRenderTargets.empty())<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_eglContext-&gt;makeCurrent();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_renderTargets.clear();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_zombieRenderTargets.clear();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1affaada309033f2e1695891520c2516cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1affaada309033f2e1695891520c2516cd" kindref="member">EGLPlatformContext::makeCurrent</ref>(QPlatformSurface<sp/>*surface)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_eglContext)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>m_eglContext-&gt;makeCurrent();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_QPA,<sp/></highlight><highlight class="stringliteral">&quot;eglMakeCurrent<sp/>failed:<sp/>%x&quot;</highlight><highlight class="normal">,<sp/>eglGetError());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_eglContext-&gt;checkGraphicsResetStatus()<sp/>!=<sp/>GL_NO_ERROR)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_renderTargets.clear();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_zombieRenderTargets.clear();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_eglContext.reset();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>m_zombieRenderTargets.clear();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surface-&gt;surface()-&gt;surfaceClass()<sp/>==<sp/>QSurface::Window)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_q_p_a_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_q_p_a_1_1_window" kindref="compound">Window</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(surface);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_q_p_a_1_1_swapchain" kindref="compound">Swapchain</ref><sp/>*swapchain<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_q_p_a_1_1_window_1ada096b8f05810dd1687b1020255c0843" kindref="member">swapchain</ref>(m_eglContext,<sp/>m_eglDisplay-&gt;nonExternalOnlySupportedDrmFormats());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!swapchain)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref><sp/>*buffer<sp/>=<sp/>swapchain-&gt;<ref refid="class_k_win_1_1_q_p_a_1_1_swapchain_1a2eaf77cd0bc8bd46e37cccaf789894a3" kindref="member">acquire</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buffer)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_renderTargets.find(buffer);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>m_renderTargets.end())<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_current<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;GLTexture&gt;<sp/>texture<sp/>=<sp/>m_eglContext-&gt;importDmaBufAsTexture(*buffer-&gt;<ref refid="class_k_win_1_1_graphics_buffer_1a975e80a802fa0d119921c13d4f06e576" kindref="member">dmabufAttributes</ref>());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!texture)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;GLFramebuffer&gt;<sp/>fbo<sp/>=<sp/>std::make_unique&lt;GLFramebuffer&gt;(texture.get(),<sp/><ref refid="class_k_win_1_1_g_l_framebuffer_1a1df019f982cd923a053778d320ccc2b8a213e9d1d0917ed8321201bd3c599ead0" kindref="member">GLFramebuffer::CombinedDepthStencil</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fbo-&gt;valid())<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>target<sp/>=<sp/>std::make_shared&lt;EGLRenderTarget&gt;(buffer,<sp/>std::move(fbo),<sp/>std::move(texture));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_renderTargets[buffer]<sp/>=<sp/>target;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject::connect(buffer,<sp/>&amp;QObject::destroyed,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>buffer]()<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_renderTargets.find(buffer);<sp/>it<sp/>!=<sp/>m_renderTargets.end())<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_zombieRenderTargets.push_back(std::move(it-&gt;second));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_renderTargets.erase(it);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_current<sp/>=<sp/>target;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>m_current-&gt;fbo-&gt;handle());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1aa174bc169173ea7424c5743f85061c5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1aa174bc169173ea7424c5743f85061c5e" kindref="member">EGLPlatformContext::doneCurrent</ref>()</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_eglContext)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_eglContext-&gt;doneCurrent();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1a0d1f32ebf9e9d3fe156776097cb01c96" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1a0d1f32ebf9e9d3fe156776097cb01c96" kindref="member">EGLPlatformContext::isValid</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="131"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_eglContext<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1ab8902a33df3f5b68a0c61447da9d94ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1ab8902a33df3f5b68a0c61447da9d94ff" kindref="member">EGLPlatformContext::isSharing</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="136"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1afffddff2507a7ef4b4b058bab6de1bae" refkind="member"><highlight class="normal">QSurfaceFormat<sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1afffddff2507a7ef4b4b058bab6de1bae" kindref="member">EGLPlatformContext::format</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="141"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_format;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1aad831d7f6c9ee3d8508063047c40f590" refkind="member"><highlight class="normal">QFunctionPointer<sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1aad831d7f6c9ee3d8508063047c40f590" kindref="member">EGLPlatformContext::getProcAddress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*procName)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eglGetProcAddress(procName);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1af85f6c46ee9112e499efcabb48e72174" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1af85f6c46ee9112e499efcabb48e72174" kindref="member">EGLPlatformContext::swapBuffers</ref>(QPlatformSurface<sp/>*surface)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surface-&gt;surface()-&gt;surfaceClass()<sp/>==<sp/>QSurface::Window)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_q_p_a_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_q_p_a_1_1_window" kindref="compound">Window</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(surface);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_internal_window" kindref="compound">InternalWindow</ref><sp/>*internalWindow<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_q_p_a_1_1_window_1a68bc287f9cf265896459da189edc746f" kindref="member">internalWindow</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!internalWindow)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glFlush();<sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>flush<sp/>pending<sp/>rendering<sp/>commands<sp/>manually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internalWindow-&gt;<ref refid="class_k_win_1_1_internal_window_1ace40b0d572f4a8b5d71b4987843e1c45" kindref="member">present</ref>(<ref refid="struct_k_win_1_1_internal_window_frame" kindref="compound">InternalWindowFrame</ref>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.buffer<sp/>=<sp/>m_current-&gt;buffer,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.bufferDamage<sp/>=<sp/>QRect(QPoint(0,<sp/>0),<sp/>m_current-&gt;buffer-&gt;size()),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.bufferTransform<sp/>=<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a16cbb90948f3bcab5a9ea45724e0ca17" kindref="member">OutputTransform::FlipY</ref>,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_current.reset();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1a6d0ab56e501ae193210787879925ce15" refkind="member"><highlight class="normal">GLuint<sp/><ref refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context_1a6d0ab56e501ae193210787879925ce15" kindref="member">EGLPlatformContext::defaultFramebufferObject</ref>(QPlatformSurface<sp/>*surface)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="172"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surface-&gt;surface()-&gt;surfaceClass()<sp/>==<sp/>QSurface::Window)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_current)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_current-&gt;fbo-&gt;handle();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_QPA)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>default<sp/>framebuffer<sp/>object<sp/>for<sp/>internal<sp/>window&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EGLPlatformContext::create(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSurfaceFormat<sp/>&amp;<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>::EGLContext<sp/>shareContext)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!eglBindAPI(<ref refid="namespace_k_win_1_1_q_p_a_1afbf9480bb7ba1cbe1a9e7f2a6f5241b2" kindref="member">isOpenGLES</ref>()<sp/>?<sp/>EGL_OPENGL_ES_API<sp/>:<sp/>EGL_OPENGL_API))<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_QPA,<sp/></highlight><highlight class="stringliteral">&quot;eglBindAPI<sp/>failed:<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/>eglGetError());</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>m_config<sp/>=<sp/><ref refid="namespace_k_win_1_1_q_p_a_1af0fce9cfc2389b1ae2e1696e7c4535ef" kindref="member">configFromFormat</ref>(m_eglDisplay,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_config<sp/>==<sp/>EGL_NO_CONFIG_KHR)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_QPA)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>suitable<sp/>EGLConfig<sp/>for&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>m_format<sp/>=<sp/><ref refid="namespace_k_win_1_1_q_p_a_1adbac63a3868ccae0f1a753312af6dc53" kindref="member">formatFromConfig</ref>(m_eglDisplay,<sp/>m_config);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>m_eglContext<sp/>=<sp/><ref refid="class_k_win_1_1_egl_context_1aeb873299e38e057eede21c1759b1b5f7" kindref="member">EglContext::create</ref>(m_eglDisplay,<sp/>m_config,<sp/>shareContext);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_eglContext)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_QPA)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>EGL<sp/>context&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>updateFormatFromContext();</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EGLPlatformContext::updateFormatFromContext()</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EGLSurface<sp/>oldDrawSurface<sp/>=<sp/>eglGetCurrentSurface(EGL_DRAW);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EGLSurface<sp/>oldReadSurface<sp/>=<sp/>eglGetCurrentSurface(EGL_READ);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>::EGLContext<sp/>oldContext<sp/>=<sp/>eglGetCurrentContext();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>m_eglContext-&gt;makeCurrent();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref><sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(glGetString(GL_VERSION));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>major,<sp/>minor;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parseOpenGLVersion(<ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>,<sp/>major,<sp/>minor))<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_format.setMajorVersion(major);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_format.setMinorVersion(minor);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_QPA)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unrecognized<sp/>OpenGL<sp/>version:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>value;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_format.version()<sp/>&gt;=<sp/>qMakePair(3,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetIntegerv(GL_CONTEXT_FLAGS,<sp/>&amp;value);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(value<sp/>&amp;<sp/>GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT))<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_format.setOption(QSurfaceFormat::DeprecatedFunctions);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&amp;<sp/>GL_CONTEXT_FLAG_DEBUG_BIT)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_format.setOption(QSurfaceFormat::DebugContext);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_format.setOption(QSurfaceFormat::DeprecatedFunctions);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_format.version()<sp/>&gt;=<sp/>qMakePair(3,<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetIntegerv(GL_CONTEXT_PROFILE_MASK,<sp/>&amp;value);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&amp;<sp/>GL_CONTEXT_CORE_PROFILE_BIT)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_format.setProfile(QSurfaceFormat::CoreProfile);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&amp;<sp/>GL_CONTEXT_COMPATIBILITY_PROFILE_BIT)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_format.setProfile(QSurfaceFormat::CompatibilityProfile);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_format.setProfile(QSurfaceFormat::NoProfile);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_format.setProfile(QSurfaceFormat::NoProfile);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>eglMakeCurrent(m_eglDisplay-&gt;handle(),<sp/>oldDrawSurface,<sp/>oldReadSurface,<sp/>oldContext);</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>QPA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/plugins/qpa/eglplatformcontext.cpp"/>
  </compounddef>
</doxygen>
