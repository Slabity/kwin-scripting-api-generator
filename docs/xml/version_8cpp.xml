<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="version_8cpp" kind="file" language="C++">
    <compoundname>version.cpp</compoundname>
    <includes refid="version_8h" local="yes">version.h</includes>
    <includes local="no">QChar</includes>
    <includes local="no">QList</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/utils/version.cpp</label>
        <link refid="version_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>QByteArray</label>
      </node>
      <node id="6">
        <label>QChar</label>
      </node>
      <node id="7">
        <label>QList</label>
      </node>
      <node id="5">
        <label>QString</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="version_8h" kindref="compound">version.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QChar&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QList&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_k_win_1_1_version_1a9a3aed3e58fd396553cf544adaf40a91" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_version_1a26314fb498795a0ef1560cc5c9d183e4" kindref="member">Version::Version</ref>(uint32_t<sp/>major,<sp/>uint32_t<sp/>minor,<sp/>uint32_t<sp/>patch)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_major(major)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_minor(minor)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_patch(patch)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_k_win_1_1_version_1a96284dbd7f4bbaf894358e1161d40824" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_version_1a96284dbd7f4bbaf894358e1161d40824" kindref="member">Version::isValid</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="25"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_major<sp/>&gt;<sp/>0<sp/>||<sp/>m_minor<sp/>&gt;<sp/>0<sp/>||<sp/>m_patch<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_k_win_1_1_version_1a99b570d3a0ad2e1528d1689e8217282b" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="class_k_win_1_1_version_1a99b570d3a0ad2e1528d1689e8217282b" kindref="member">Version::majorVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="30"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_major;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_k_win_1_1_version_1a7139be74fe40de04c2f31f8ab881997e" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="class_k_win_1_1_version_1a7139be74fe40de04c2f31f8ab881997e" kindref="member">Version::minorVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="35"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minor;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_k_win_1_1_version_1a82ea6feeeeb0f44dcaca5c90f263be32" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="class_k_win_1_1_version_1a82ea6feeeeb0f44dcaca5c90f263be32" kindref="member">Version::patchVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="40"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_patch;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_k_win_1_1_version_1aac3fef4b86cdfcc01b6ac2cf7eb30e38" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_version_1a9a3aed3e58fd396553cf544adaf40a91" kindref="member">Version</ref><sp/><ref refid="class_k_win_1_1_version_1aac3fef4b86cdfcc01b6ac2cf7eb30e38" kindref="member">Version::parseString</ref>(QByteArrayView<sp/>versionString)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>any<sp/>leading<sp/>non<sp/>digit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(start<sp/>&lt;<sp/>versionString.length()<sp/>&amp;&amp;<sp/>!QChar::fromLatin1(versionString[start]).isDigit())<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start++;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Strip<sp/>any<sp/>non<sp/>digit,<sp/>non<sp/>&apos;.&apos;<sp/>characters<sp/>from<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(end<sp/>&lt;<sp/>versionString.length()<sp/>&amp;&amp;<sp/>(versionString[end]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>||<sp/>QChar::fromLatin1(versionString[end]).isDigit()))<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end++;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>result<sp/>=<sp/>versionString.<ref refid="class_k_win_1_1_version_1ad03bfc9c3201ef5a8b380c5a2a4fdfab" kindref="member">toByteArray</ref>().mid(start,<sp/>end<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QByteArray&gt;<sp/>tokens<sp/>=<sp/>result.split(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens.empty())<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_version_1a26314fb498795a0ef1560cc5c9d183e4" kindref="member">Version</ref>(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>major<sp/>=<sp/>tokens.at(0).toInt();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>minor<sp/>=<sp/>tokens.count()<sp/>&gt;<sp/>1<sp/>?<sp/>tokens.at(1).toInt()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>patch<sp/>=<sp/>tokens.count()<sp/>&gt;<sp/>2<sp/>?<sp/>tokens.at(2).toInt()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_version_1a26314fb498795a0ef1560cc5c9d183e4" kindref="member">Version</ref>(major,<sp/>minor,<sp/>patch);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_k_win_1_1_version_1aa582d6efb18f05449a62149618eb48f7" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_version_1aa582d6efb18f05449a62149618eb48f7" kindref="member">Version::toString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="71"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_patch<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::number(m_major)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(m_minor);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::number(m_major)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(m_minor)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(m_patch);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_k_win_1_1_version_1ad03bfc9c3201ef5a8b380c5a2a4fdfab" refkind="member"><highlight class="normal">QByteArray<sp/><ref refid="class_k_win_1_1_version_1ad03bfc9c3201ef5a8b380c5a2a4fdfab" kindref="member">Version::toByteArray</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="80"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_patch<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QByteArray::number(m_major)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>+<sp/>QByteArray::number(m_minor);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QByteArray::number(m_major)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>+<sp/>QByteArray::number(m_minor)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>+<sp/>QByteArray::number(m_patch);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/utils/version.cpp"/>
  </compounddef>
</doxygen>
