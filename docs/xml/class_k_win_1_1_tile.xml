<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_tile" kind="class" language="C++" prot="public">
    <compoundname>KWin::Tile</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <derivedcompoundref refid="class_k_win_1_1_custom_tile" prot="public" virt="non-virtual">KWin::CustomTile</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_quick_root_tile" prot="public" virt="non-virtual">KWin::QuickRootTile</derivedcompoundref>
    <includes refid="tile_8h" local="no">tile.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_tile_1a4bf9a2f94d7f7e0b0f81a15843ad325b" prot="public" static="no" strong="yes">
        <type></type>
        <name>LayoutDirection</name>
        <qualifiedname>KWin::Tile::LayoutDirection</qualifiedname>
        <enumvalue id="class_k_win_1_1_tile_1a4bf9a2f94d7f7e0b0f81a15843ad325bac8df43648942ec3a9aec140f07f47b7c" prot="public">
          <name>Floating</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_tile_1a4bf9a2f94d7f7e0b0f81a15843ad325bac1b5fa03ecdb95d4a45dd1c40b02527f" prot="public">
          <name>Horizontal</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_tile_1a4bf9a2f94d7f7e0b0f81a15843ad325ba06ce2a25e5d12c166a36f654dbea6012" prot="public">
          <name>Vertical</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="42" column="5" bodyfile="kwin/src/tiles/tile.h" bodystart="42" bodyend="46"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_k_win_1_1_tile_1af938aab99f1805d00134777bba3968df" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>QRectF</type>
        <definition>QRectF KWin::Tile::relativeGeometry</definition>
        <argsstring></argsstring>
        <name>relativeGeometry</name>
        <qualifiedname>KWin::Tile::relativeGeometry</qualifiedname>
        <read>relativeGeometry</read>
        <write>setRelativeGeometry</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="30" column="5" bodyfile="kwin/src/tiles/tile.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_tile_1a12d68e09c1e305bd0de72c389cd2ee33" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>QRectF</type>
        <definition>QRectF KWin::Tile::absoluteGeometry</definition>
        <argsstring></argsstring>
        <name>absoluteGeometry</name>
        <qualifiedname>KWin::Tile::absoluteGeometry</qualifiedname>
        <read>absoluteGeometry</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="31" column="5" bodyfile="kwin/src/tiles/tile.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_tile_1a2c89d8979bd5a8cfd1760d4436235261" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>QRectF</type>
        <definition>QRectF KWin::Tile::absoluteGeometryInScreen</definition>
        <argsstring></argsstring>
        <name>absoluteGeometryInScreen</name>
        <qualifiedname>KWin::Tile::absoluteGeometryInScreen</qualifiedname>
        <read>absoluteGeometryInScreen</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="32" column="5" bodyfile="kwin/src/tiles/tile.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_tile_1ad08996f69247b0db7a8a8d86ca53d15d" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::Tile::padding</definition>
        <argsstring></argsstring>
        <name>padding</name>
        <qualifiedname>KWin::Tile::padding</qualifiedname>
        <read>padding</read>
        <write>setPadding</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="33" column="5" bodyfile="kwin/src/tiles/tile.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_tile_1a765382ed42324c889100fb5403241355" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::Tile::positionInLayout</definition>
        <argsstring></argsstring>
        <name>positionInLayout</name>
        <qualifiedname>KWin::Tile::positionInLayout</qualifiedname>
        <read>row</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="34" column="5" bodyfile="kwin/src/tiles/tile.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_tile_1ae166c9bc80e0b853864452b25218f95e" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> *</type>
        <definition>Tile * KWin::Tile::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <qualifiedname>KWin::Tile::parent</qualifiedname>
        <read>parentTile</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="35" column="5" bodyfile="kwin/src/tiles/tile.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_tile_1a3bd3618f887ef3d73df46355ff329b98" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_tile" kindref="compound">KWin::Tile</ref> * &gt;</type>
        <definition>QList&lt;KWin::Tile *&gt; KWin::Tile::tiles</definition>
        <argsstring></argsstring>
        <name>tiles</name>
        <qualifiedname>KWin::Tile::tiles</qualifiedname>
        <read>childTiles</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="36" column="5" bodyfile="kwin/src/tiles/tile.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_tile_1a97273fc247ad0b37dc6e009eed3c9ede" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref> * &gt;</type>
        <definition>QList&lt;KWin::Window *&gt; KWin::Tile::windows</definition>
        <argsstring></argsstring>
        <name>windows</name>
        <qualifiedname>KWin::Tile::windows</qualifiedname>
        <read>windows</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="37" column="5" bodyfile="kwin/src/tiles/tile.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_tile_1a83923c7941b7294a04a06c8b397cf3da" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool KWin::Tile::isLayout</definition>
        <argsstring></argsstring>
        <name>isLayout</name>
        <qualifiedname>KWin::Tile::isLayout</qualifiedname>
        <read>isLayout</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="38" column="5" bodyfile="kwin/src/tiles/tile.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_tile_1a454c3717f7246d9d7ac0e76b83927593" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool KWin::Tile::canBeRemoved</definition>
        <argsstring></argsstring>
        <name>canBeRemoved</name>
        <qualifiedname>KWin::Tile::canBeRemoved</qualifiedname>
        <read>canBeRemoved</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="39" column="5" bodyfile="kwin/src/tiles/tile.h" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_tile_1a3cfc41ca4b57b51132ed6e1c3e6469ab" prot="protected" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> * &gt;</type>
        <definition>QList&lt;Tile *&gt; KWin::Tile::m_children</definition>
        <argsstring></argsstring>
        <name>m_children</name>
        <qualifiedname>KWin::Tile::m_children</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="168" column="11" bodyfile="kwin/src/tiles/tile.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tile_1a5f0f46e0dfe1f7e2b50f39b3a9f2862c" prot="protected" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt;</type>
        <definition>QList&lt;Window *&gt; KWin::Tile::m_windows</definition>
        <argsstring></argsstring>
        <name>m_windows</name>
        <qualifiedname>KWin::Tile::m_windows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="169" column="11" bodyfile="kwin/src/tiles/tile.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tile_1a032338707b8c4dfe4dc94c340a969479" prot="protected" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> *</type>
        <definition>Tile* KWin::Tile::m_parentTile</definition>
        <argsstring></argsstring>
        <name>m_parentTile</name>
        <qualifiedname>KWin::Tile::m_parentTile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="170" column="10" bodyfile="kwin/src/tiles/tile.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tile_1aaba6bfe601a990def5a1dd9947305d4b" prot="protected" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
        <definition>VirtualDesktop* KWin::Tile::m_desktop</definition>
        <argsstring></argsstring>
        <name>m_desktop</name>
        <qualifiedname>KWin::Tile::m_desktop</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="172" column="20" bodyfile="kwin/src/tiles/tile.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tile_1af0c368bab678b06cb4c2a9bdc4a486c9" prot="protected" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_tile_manager" kindref="compound">TileManager</ref> *</type>
        <definition>TileManager* KWin::Tile::m_tiling</definition>
        <argsstring></argsstring>
        <name>m_tiling</name>
        <qualifiedname>KWin::Tile::m_tiling</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="173" column="17" bodyfile="kwin/src/tiles/tile.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tile_1ad765093a8362f7268ac59bfd52fc94e5" prot="protected" static="no" mutable="no">
        <type>QRectF</type>
        <definition>QRectF KWin::Tile::m_relativeGeometry</definition>
        <argsstring></argsstring>
        <name>m_relativeGeometry</name>
        <qualifiedname>KWin::Tile::m_relativeGeometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="174" column="12" bodyfile="kwin/src/tiles/tile.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tile_1a362b0c04bada33b47e7c3ca039bcf78d" prot="protected" static="no" mutable="no">
        <type>QuickTileMode</type>
        <definition>QuickTileMode KWin::Tile::m_quickTileMode</definition>
        <argsstring></argsstring>
        <name>m_quickTileMode</name>
        <qualifiedname>KWin::Tile::m_quickTileMode</qualifiedname>
        <initializer>= <ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa6adf97f83acf6453d4a6a4b1070f3754" kindref="member">QuickTileFlag::None</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="176" column="19" bodyfile="kwin/src/tiles/tile.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tile_1a6a0a5de1a5925cc132656b2f82ba9f46" prot="protected" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::Tile::m_padding</definition>
        <argsstring></argsstring>
        <name>m_padding</name>
        <qualifiedname>KWin::Tile::m_padding</qualifiedname>
        <initializer>= 4.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="177" column="11" bodyfile="kwin/src/tiles/tile.h" bodystart="177" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_tile_1a321aad8468dedb793e909be76956d9ed" prot="protected" static="yes" mutable="no">
        <type>QSizeF</type>
        <definition>QSizeF KWin::Tile::s_minimumSize</definition>
        <argsstring></argsstring>
        <name>s_minimumSize</name>
        <qualifiedname>KWin::Tile::s_minimumSize</qualifiedname>
        <initializer>= QSizeF(0.15, 0.15)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="175" column="19" bodyfile="kwin/src/tiles/tile.h" bodystart="175" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_tile_1acca0ed676dad89ccdc48b677e3e080a5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Tile::Tile</definition>
        <argsstring>(TileManager *tiling, Tile *parentItem=nullptr)</argsstring>
        <name>Tile</name>
        <qualifiedname>KWin::Tile::Tile</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_tile_manager" kindref="compound">TileManager</ref> *</type>
          <declname>tiling</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> *</type>
          <declname>parentItem</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="49" column="14" bodyfile="kwin/src/tiles/tile.cpp" bodystart="25" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1ae3a7987d46c65f916ed006fa87c7670c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Tile::~Tile</definition>
        <argsstring>()</argsstring>
        <name>~Tile</name>
        <qualifiedname>KWin::Tile::~Tile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="50" column="5" bodyfile="kwin/src/tiles/tile.cpp" bodystart="38" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a6605627b0223f26b40a7f4683579dbf0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
        <definition>VirtualDesktop * KWin::Tile::desktop</definition>
        <argsstring>() const</argsstring>
        <name>desktop</name>
        <qualifiedname>KWin::Tile::desktop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="52" column="20" bodyfile="kwin/src/tiles/tile.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a125d8868fbdeec74288ceef0535ce002" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Tile::isActive</definition>
        <argsstring>() const</argsstring>
        <name>isActive</name>
        <qualifiedname>KWin::Tile::isActive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="53" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1abe9307bf50e8647de48d310fb923a677" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::setGeometryFromWindow</definition>
        <argsstring>(const QRectF &amp;geom)</argsstring>
        <name>setGeometryFromWindow</name>
        <qualifiedname>KWin::Tile::setGeometryFromWindow</qualifiedname>
        <param>
          <type>const QRectF &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="55" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a981691c492a8a8c5a825cae9f93baf9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::setGeometryFromAbsolute</definition>
        <argsstring>(const QRectF &amp;geom)</argsstring>
        <name>setGeometryFromAbsolute</name>
        <qualifiedname>KWin::Tile::setGeometryFromAbsolute</qualifiedname>
        <param>
          <type>const QRectF &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="56" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="114" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1ad2c2aa924b2a0a7585cb19d61f984850" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::Tile::setRelativeGeometry</definition>
        <argsstring>(const QRectF &amp;geom)</argsstring>
        <name>setRelativeGeometry</name>
        <qualifiedname>KWin::Tile::setRelativeGeometry</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_custom_tile_1ab6f1754346e009179d325f8976c18b55">setRelativeGeometry</reimplementedby>
        <param>
          <type>const QRectF &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="57" column="18" bodyfile="kwin/src/tiles/tile.cpp" bodystart="125" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1aa72fc4e488a859fcd72343df1e34ce50" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::Tile::supportsResizeGravity</definition>
        <argsstring>(Gravity gravity)</argsstring>
        <name>supportsResizeGravity</name>
        <qualifiedname>KWin::Tile::supportsResizeGravity</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_custom_tile_1a8a58d6a2accce4c0ffb0b05c916f4e19">supportsResizeGravity</reimplementedby>
        <param>
          <type><ref refid="namespace_k_win_1a09aef7c112a8b0cdfb6e27a081d50dc8" kindref="member">Gravity</ref></type>
          <declname>gravity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="59" column="18" bodyfile="kwin/src/tiles/tile.cpp" bodystart="80" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a9ed15bbb4faf48a20cfc98d232733a4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Tile::relativeGeometry</definition>
        <argsstring>() const</argsstring>
        <name>relativeGeometry</name>
        <qualifiedname>KWin::Tile::relativeGeometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Geometry of the tile in units between 0 and 1 relative to the screen geometry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="64" column="12" bodyfile="kwin/src/tiles/tile.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a4af1910d37902192a60d11e4c663eeea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Tile::absoluteGeometry</definition>
        <argsstring>() const</argsstring>
        <name>absoluteGeometry</name>
        <qualifiedname>KWin::Tile::absoluteGeometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Geometry of the tile in absolute coordinates </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="69" column="12" bodyfile="kwin/src/tiles/tile.cpp" bodystart="154" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a97aada00dc076211b98abbe8384e1248" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Tile::absoluteGeometryInScreen</definition>
        <argsstring>() const</argsstring>
        <name>absoluteGeometryInScreen</name>
        <qualifiedname>KWin::Tile::absoluteGeometryInScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Geometry of the tile in absolute coordinates, but in screen coordinates, ie the top left corner of rootTile always at 0,0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="75" column="12" bodyfile="kwin/src/tiles/tile.cpp" bodystart="163" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1aee9733f0744e02500b249c416cb58aa7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Tile::windowGeometry</definition>
        <argsstring>() const</argsstring>
        <name>windowGeometry</name>
        <qualifiedname>KWin::Tile::windowGeometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Absolute geometry minus the padding and reserved areas such as panels </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="80" column="12" bodyfile="kwin/src/tiles/tile.cpp" bodystart="172" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a4e3c9d6fe1ae2266df18373fff20312e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Tile::maximizedWindowGeometry</definition>
        <argsstring>() const</argsstring>
        <name>maximizedWindowGeometry</name>
        <qualifiedname>KWin::Tile::maximizedWindowGeometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Absolute geometry minus the padding and reserved areas such as panels </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="85" column="12" bodyfile="kwin/src/tiles/tile.cpp" bodystart="185" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a716a2f2b22961edbb6a24e809e0bbe4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Qt::Edges</type>
        <definition>Qt::Edges KWin::Tile::anchors</definition>
        <argsstring>() const</argsstring>
        <name>anchors</name>
        <qualifiedname>KWin::Tile::anchors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Which edges of the tile touches an edge of the screen </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="90" column="15" bodyfile="kwin/src/tiles/tile.cpp" bodystart="191" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1ada34124e9b62956f97402c47de6a1267" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Tile::isLayout</definition>
        <argsstring>() const</argsstring>
        <name>isLayout</name>
        <qualifiedname>KWin::Tile::isLayout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="92" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="213" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a7577405606810a03de569aed6a36864a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Tile::canBeRemoved</definition>
        <argsstring>() const</argsstring>
        <name>canBeRemoved</name>
        <qualifiedname>KWin::Tile::canBeRemoved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="93" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="219" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a0215eab19c49c74645d3909514a323e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::Tile::padding</definition>
        <argsstring>() const</argsstring>
        <name>padding</name>
        <qualifiedname>KWin::Tile::padding</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="95" column="11" bodyfile="kwin/src/tiles/tile.cpp" bodystart="225" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1afb592f958c9183f2de1ea428e98ef804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::setPadding</definition>
        <argsstring>(qreal padding)</argsstring>
        <name>setPadding</name>
        <qualifiedname>KWin::Tile::setPadding</qualifiedname>
        <param>
          <type>qreal</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="96" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="231" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1aaef2d1d26b6e01464ec5864ddf4a907a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QuickTileMode</type>
        <definition>QuickTileMode KWin::Tile::quickTileMode</definition>
        <argsstring>() const</argsstring>
        <name>quickTileMode</name>
        <qualifiedname>KWin::Tile::quickTileMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="98" column="19" bodyfile="kwin/src/tiles/tile.cpp" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a39420b0119b6b72da4f2d204ee236ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::setQuickTileMode</definition>
        <argsstring>(QuickTileMode mode)</argsstring>
        <name>setQuickTileMode</name>
        <qualifiedname>KWin::Tile::setQuickTileMode</qualifiedname>
        <param>
          <type>QuickTileMode</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="99" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="258" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a2b9ea7a4f90e1fdd6ea3bd2d63b4217c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> *</type>
        <definition>Tile * KWin::Tile::rootTile</definition>
        <argsstring>() const</argsstring>
        <name>rootTile</name>
        <qualifiedname>KWin::Tile::rootTile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="101" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="263" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1ae072ac08c54a502107f748c6bfbc12de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> * &gt;</type>
        <definition>QList&lt; Tile * &gt; KWin::Tile::childTiles</definition>
        <argsstring>() const</argsstring>
        <name>childTiles</name>
        <qualifiedname>KWin::Tile::childTiles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>All tiles directly children of this tile </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="106" column="11" bodyfile="kwin/src/tiles/tile.cpp" bodystart="475" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1add7487e66f5b9da0dc583b23beb39722" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> * &gt;</type>
        <definition>QList&lt; Tile * &gt; KWin::Tile::descendants</definition>
        <argsstring>() const</argsstring>
        <name>descendants</name>
        <qualifiedname>KWin::Tile::descendants</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>All tiles descendant of this tile, recursive </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="111" column="11" bodyfile="kwin/src/tiles/tile.cpp" bodystart="493" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a0d2615a7c5500247bec0218144778901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::visitDescendants</definition>
        <argsstring>(std::function&lt; void(Tile *child)&gt; callback)</argsstring>
        <name>visitDescendants</name>
        <qualifiedname>KWin::Tile::visitDescendants</qualifiedname>
        <param>
          <type>std::function&lt; void(<ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> *child)&gt;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Visit all tiles descendant of this tile, recursive </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="116" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="507" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a0910dad8a0972a837a1b45fa5ae701f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::resizeFromGravity</definition>
        <argsstring>(Gravity gravity, int x_root, int y_root)</argsstring>
        <name>resizeFromGravity</name>
        <qualifiedname>KWin::Tile::resizeFromGravity</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a09aef7c112a8b0cdfb6e27a081d50dc8" kindref="member">Gravity</ref></type>
          <declname>gravity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x_root</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="118" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="275" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a1deb54542d4d8066052e97e1e9380ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE void</type>
        <definition>void KWin::Tile::resizeByPixels</definition>
        <argsstring>(qreal delta, Qt::Edge edge)</argsstring>
        <name>resizeByPixels</name>
        <qualifiedname>KWin::Tile::resizeByPixels</qualifiedname>
        <param>
          <type>qreal</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>Qt::Edge</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="120" column="22" bodyfile="kwin/src/tiles/tile.cpp" bodystart="318" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a298023137b89857eba123451ef808cea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE bool</type>
        <definition>bool KWin::Tile::addWindow</definition>
        <argsstring>(Window *window)</argsstring>
        <name>addWindow</name>
        <qualifiedname>KWin::Tile::addWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="122" column="22" bodyfile="kwin/src/tiles/tile.cpp" bodystart="352" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a6c7f77e3bceeb1f9396a56b4013fea66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE bool</type>
        <definition>bool KWin::Tile::removeWindow</definition>
        <argsstring>(Window *window)</argsstring>
        <name>removeWindow</name>
        <qualifiedname>KWin::Tile::removeWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="123" column="22" bodyfile="kwin/src/tiles/tile.cpp" bodystart="400" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1acd29527ab0360890a87184c3adcf804c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::forgetWindow</definition>
        <argsstring>(Window *window)</argsstring>
        <name>forgetWindow</name>
        <qualifiedname>KWin::Tile::forgetWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="124" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="415" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a393f70418bf765ab1faee0e75fc685f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref> * &gt;</type>
        <definition>QList&lt; KWin::Window * &gt; KWin::Tile::windows</definition>
        <argsstring>() const</argsstring>
        <name>windows</name>
        <qualifiedname>KWin::Tile::windows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="125" column="11" bodyfile="kwin/src/tiles/tile.cpp" bodystart="425" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a1a34f881a290b39218d51dc15d62bb72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::Tile::row</definition>
        <argsstring>() const</argsstring>
        <name>row</name>
        <qualifiedname>KWin::Tile::row</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="127" column="9" bodyfile="kwin/src/tiles/tile.cpp" bodystart="520" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1ab77f10063cdfb8fdfb58a5115b1dcd4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::Tile::childCount</definition>
        <argsstring>() const</argsstring>
        <name>childCount</name>
        <qualifiedname>KWin::Tile::childCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="128" column="9" bodyfile="kwin/src/tiles/tile.cpp" bodystart="488" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a7a8122769585044fb06c1e5aa5a7418f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> *</type>
        <definition>Tile * KWin::Tile::childTile</definition>
        <argsstring>(int row)</argsstring>
        <name>childTile</name>
        <qualifiedname>KWin::Tile::childTile</qualifiedname>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="129" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="480" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a43e96b3e47adedf28f28f303701b0e58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> *</type>
        <definition>Tile * KWin::Tile::nextSibling</definition>
        <argsstring>() const</argsstring>
        <name>nextSibling</name>
        <qualifiedname>KWin::Tile::nextSibling</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="130" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="529" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1ad01bcebb7447861413c4263152573ea3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> *</type>
        <definition>Tile * KWin::Tile::previousSibling</definition>
        <argsstring>() const</argsstring>
        <name>previousSibling</name>
        <qualifiedname>KWin::Tile::previousSibling</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="131" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="539" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1ab53c6d92735f5426eaf4881911070d68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> *</type>
        <definition>Tile * KWin::Tile::parentTile</definition>
        <argsstring>() const</argsstring>
        <name>parentTile</name>
        <qualifiedname>KWin::Tile::parentTile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="132" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="502" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a51bc60025c8ff0558a6cbc9b3a1b40ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_tile_manager" kindref="compound">TileManager</ref> *</type>
        <definition>TileManager * KWin::Tile::manager</definition>
        <argsstring>() const</argsstring>
        <name>manager</name>
        <qualifiedname>KWin::Tile::manager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="133" column="17" bodyfile="kwin/src/tiles/tile.cpp" bodystart="515" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1abb789b84205fc2dfc53ab53a17bd677d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::destroyChild</definition>
        <argsstring>(Tile *tile)</argsstring>
        <name>destroyChild</name>
        <qualifiedname>KWin::Tile::destroyChild</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> *</type>
          <declname>tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="140" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="453" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1a029a1f65aae83dd17c39676b083e4a65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * KWin::Tile::createChildAt</definition>
        <argsstring>(const QRectF &amp;relativeGeometry, int position)</argsstring>
        <name>createChildAt</name>
        <qualifiedname>KWin::Tile::createChildAt</qualifiedname>
        <param>
          <type>const QRectF &amp;</type>
          <declname>relativeGeometry</declname>
        </param>
        <param>
          <type>int</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="143" column="7" bodyfile="kwin/src/tiles/tile.h" bodystart="143" bodyend="149"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_tile_1a14499a17cef435ca77be9fa158b22599" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QSizeF</type>
        <definition>static QSizeF KWin::Tile::minimumSize</definition>
        <argsstring>()</argsstring>
        <name>minimumSize</name>
        <qualifiedname>KWin::Tile::minimumSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="135" column="26" bodyfile="kwin/src/tiles/tile.h" bodystart="135" bodyend="138"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_tile_1a28a6dca2e1d98b4e28273d854deca09f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::activeChanged</definition>
        <argsstring>(bool active)</argsstring>
        <name>activeChanged</name>
        <qualifiedname>KWin::Tile::activeChanged</qualifiedname>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="152" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_tile_1a440c6e391514f60c7f8e3636508532e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::relativeGeometryChanged</definition>
        <argsstring>()</argsstring>
        <name>relativeGeometryChanged</name>
        <qualifiedname>KWin::Tile::relativeGeometryChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="153" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_tile_1a78dfd4ba1715334afc8a39daefb5a746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::absoluteGeometryChanged</definition>
        <argsstring>()</argsstring>
        <name>absoluteGeometryChanged</name>
        <qualifiedname>KWin::Tile::absoluteGeometryChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="154" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_tile_1af737619dce934eb9a55e85a314fc6fb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::windowGeometryChanged</definition>
        <argsstring>()</argsstring>
        <name>windowGeometryChanged</name>
        <qualifiedname>KWin::Tile::windowGeometryChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="155" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_tile_1a292431042a5db325af9d16ec1114f113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::paddingChanged</definition>
        <argsstring>(qreal padding)</argsstring>
        <name>paddingChanged</name>
        <qualifiedname>KWin::Tile::paddingChanged</qualifiedname>
        <param>
          <type>qreal</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="156" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_tile_1ac8f6e5f353adb3924f339f6192085204" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::rowChanged</definition>
        <argsstring>(int row)</argsstring>
        <name>rowChanged</name>
        <qualifiedname>KWin::Tile::rowChanged</qualifiedname>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="157" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_tile_1a20d50aa9ef785b86d11f0dd8bfcec5fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::isLayoutChanged</definition>
        <argsstring>(bool isLayout)</argsstring>
        <name>isLayoutChanged</name>
        <qualifiedname>KWin::Tile::isLayoutChanged</qualifiedname>
        <param>
          <type>bool</type>
          <declname>isLayout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="158" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_tile_1a7b25d45119036b98200dc13a6625a907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::childTilesChanged</definition>
        <argsstring>()</argsstring>
        <name>childTilesChanged</name>
        <qualifiedname>KWin::Tile::childTilesChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="159" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_tile_1ae2e82c0e1ddafa605af3e452ec724d83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::windowAdded</definition>
        <argsstring>(Window *window)</argsstring>
        <name>windowAdded</name>
        <qualifiedname>KWin::Tile::windowAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="160" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_tile_1a7360d95151091bb4539c4d39f4107d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::windowRemoved</definition>
        <argsstring>(Window *window)</argsstring>
        <name>windowRemoved</name>
        <qualifiedname>KWin::Tile::windowRemoved</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="161" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_tile_1aeed9827e674eccfa06533b844ad43179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::windowsChanged</definition>
        <argsstring>()</argsstring>
        <name>windowsChanged</name>
        <qualifiedname>KWin::Tile::windowsChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="162" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_tile_1afebdd444ac3269b5edd38f615b999a86" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::insertChild</definition>
        <argsstring>(int position, Tile *item)</argsstring>
        <name>insertChild</name>
        <qualifiedname>KWin::Tile::insertChild</qualifiedname>
        <param>
          <type>int</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="165" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="430" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tile_1afeccf04cf601132a88d61196044b75e9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Tile::removeChild</definition>
        <argsstring>(Tile *child)</argsstring>
        <name>removeChild</name>
        <qualifiedname>KWin::Tile::removeChild</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_tile" kindref="compound">Tile</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tiles/tile.h" line="166" column="10" bodyfile="kwin/src/tiles/tile.cpp" bodystart="459" bodyend="473"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>KWin::CustomTile</label>
        <link refid="class_k_win_1_1_custom_tile"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>KWin::QuickRootTile</label>
        <link refid="class_k_win_1_1_quick_root_tile"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>KWin::RootTile</label>
        <link refid="class_k_win_1_1_root_tile"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::Tile</label>
        <link refid="class_k_win_1_1_tile"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::Tile</label>
        <link refid="class_k_win_1_1_tile"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>m_parentTile</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_desktop</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_tiling</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>KWin::TileManager</label>
        <link refid="class_k_win_1_1_tile_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KWin::VirtualDesktop</label>
        <link refid="class_k_win_1_1_virtual_desktop"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/tiles/tile.h" line="27" column="1" bodyfile="kwin/src/tiles/tile.h" bodystart="28" bodyend="178"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_tile_1a12d68e09c1e305bd0de72c389cd2ee33" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>absoluteGeometry</name></member>
      <member refid="class_k_win_1_1_tile_1a4af1910d37902192a60d11e4c663eeea" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>absoluteGeometry</name></member>
      <member refid="class_k_win_1_1_tile_1a78dfd4ba1715334afc8a39daefb5a746" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>absoluteGeometryChanged</name></member>
      <member refid="class_k_win_1_1_tile_1a2c89d8979bd5a8cfd1760d4436235261" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>absoluteGeometryInScreen</name></member>
      <member refid="class_k_win_1_1_tile_1a97aada00dc076211b98abbe8384e1248" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>absoluteGeometryInScreen</name></member>
      <member refid="class_k_win_1_1_tile_1a28a6dca2e1d98b4e28273d854deca09f" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>activeChanged</name></member>
      <member refid="class_k_win_1_1_tile_1a298023137b89857eba123451ef808cea" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>addWindow</name></member>
      <member refid="class_k_win_1_1_tile_1a716a2f2b22961edbb6a24e809e0bbe4b" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>anchors</name></member>
      <member refid="class_k_win_1_1_tile_1a454c3717f7246d9d7ac0e76b83927593" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>canBeRemoved</name></member>
      <member refid="class_k_win_1_1_tile_1a7577405606810a03de569aed6a36864a" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>canBeRemoved</name></member>
      <member refid="class_k_win_1_1_tile_1ab77f10063cdfb8fdfb58a5115b1dcd4d" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>childCount</name></member>
      <member refid="class_k_win_1_1_tile_1a7a8122769585044fb06c1e5aa5a7418f" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>childTile</name></member>
      <member refid="class_k_win_1_1_tile_1ae072ac08c54a502107f748c6bfbc12de" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>childTiles</name></member>
      <member refid="class_k_win_1_1_tile_1a7b25d45119036b98200dc13a6625a907" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>childTilesChanged</name></member>
      <member refid="class_k_win_1_1_tile_1a029a1f65aae83dd17c39676b083e4a65" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>createChildAt</name></member>
      <member refid="class_k_win_1_1_tile_1add7487e66f5b9da0dc583b23beb39722" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>descendants</name></member>
      <member refid="class_k_win_1_1_tile_1a6605627b0223f26b40a7f4683579dbf0" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>desktop</name></member>
      <member refid="class_k_win_1_1_tile_1abb789b84205fc2dfc53ab53a17bd677d" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>destroyChild</name></member>
      <member refid="class_k_win_1_1_tile_1acd29527ab0360890a87184c3adcf804c" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>forgetWindow</name></member>
      <member refid="class_k_win_1_1_tile_1afebdd444ac3269b5edd38f615b999a86" prot="protected" virt="non-virtual"><scope>KWin::Tile</scope><name>insertChild</name></member>
      <member refid="class_k_win_1_1_tile_1a125d8868fbdeec74288ceef0535ce002" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>isActive</name></member>
      <member refid="class_k_win_1_1_tile_1a83923c7941b7294a04a06c8b397cf3da" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>isLayout</name></member>
      <member refid="class_k_win_1_1_tile_1ada34124e9b62956f97402c47de6a1267" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>isLayout</name></member>
      <member refid="class_k_win_1_1_tile_1a20d50aa9ef785b86d11f0dd8bfcec5fd" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>isLayoutChanged</name></member>
      <member refid="class_k_win_1_1_tile_1a4bf9a2f94d7f7e0b0f81a15843ad325b" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>LayoutDirection</name></member>
      <member refid="class_k_win_1_1_tile_1a3cfc41ca4b57b51132ed6e1c3e6469ab" prot="protected" virt="non-virtual"><scope>KWin::Tile</scope><name>m_children</name></member>
      <member refid="class_k_win_1_1_tile_1aaba6bfe601a990def5a1dd9947305d4b" prot="protected" virt="non-virtual"><scope>KWin::Tile</scope><name>m_desktop</name></member>
      <member refid="class_k_win_1_1_tile_1a6a0a5de1a5925cc132656b2f82ba9f46" prot="protected" virt="non-virtual"><scope>KWin::Tile</scope><name>m_padding</name></member>
      <member refid="class_k_win_1_1_tile_1a032338707b8c4dfe4dc94c340a969479" prot="protected" virt="non-virtual"><scope>KWin::Tile</scope><name>m_parentTile</name></member>
      <member refid="class_k_win_1_1_tile_1a362b0c04bada33b47e7c3ca039bcf78d" prot="protected" virt="non-virtual"><scope>KWin::Tile</scope><name>m_quickTileMode</name></member>
      <member refid="class_k_win_1_1_tile_1ad765093a8362f7268ac59bfd52fc94e5" prot="protected" virt="non-virtual"><scope>KWin::Tile</scope><name>m_relativeGeometry</name></member>
      <member refid="class_k_win_1_1_tile_1af0c368bab678b06cb4c2a9bdc4a486c9" prot="protected" virt="non-virtual"><scope>KWin::Tile</scope><name>m_tiling</name></member>
      <member refid="class_k_win_1_1_tile_1a5f0f46e0dfe1f7e2b50f39b3a9f2862c" prot="protected" virt="non-virtual"><scope>KWin::Tile</scope><name>m_windows</name></member>
      <member refid="class_k_win_1_1_tile_1a51bc60025c8ff0558a6cbc9b3a1b40ff" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>manager</name></member>
      <member refid="class_k_win_1_1_tile_1a4e3c9d6fe1ae2266df18373fff20312e" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>maximizedWindowGeometry</name></member>
      <member refid="class_k_win_1_1_tile_1a14499a17cef435ca77be9fa158b22599" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>minimumSize</name></member>
      <member refid="class_k_win_1_1_tile_1a43e96b3e47adedf28f28f303701b0e58" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>nextSibling</name></member>
      <member refid="class_k_win_1_1_tile_1ad08996f69247b0db7a8a8d86ca53d15d" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>padding</name></member>
      <member refid="class_k_win_1_1_tile_1a0215eab19c49c74645d3909514a323e4" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>padding</name></member>
      <member refid="class_k_win_1_1_tile_1a292431042a5db325af9d16ec1114f113" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>paddingChanged</name></member>
      <member refid="class_k_win_1_1_tile_1ae166c9bc80e0b853864452b25218f95e" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>parent</name></member>
      <member refid="class_k_win_1_1_tile_1ab53c6d92735f5426eaf4881911070d68" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>parentTile</name></member>
      <member refid="class_k_win_1_1_tile_1a765382ed42324c889100fb5403241355" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>positionInLayout</name></member>
      <member refid="class_k_win_1_1_tile_1ad01bcebb7447861413c4263152573ea3" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>previousSibling</name></member>
      <member refid="class_k_win_1_1_tile_1aaef2d1d26b6e01464ec5864ddf4a907a" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>quickTileMode</name></member>
      <member refid="class_k_win_1_1_tile_1af938aab99f1805d00134777bba3968df" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>relativeGeometry</name></member>
      <member refid="class_k_win_1_1_tile_1a9ed15bbb4faf48a20cfc98d232733a4b" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>relativeGeometry</name></member>
      <member refid="class_k_win_1_1_tile_1a440c6e391514f60c7f8e3636508532e2" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>relativeGeometryChanged</name></member>
      <member refid="class_k_win_1_1_tile_1afeccf04cf601132a88d61196044b75e9" prot="protected" virt="non-virtual"><scope>KWin::Tile</scope><name>removeChild</name></member>
      <member refid="class_k_win_1_1_tile_1a6c7f77e3bceeb1f9396a56b4013fea66" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>removeWindow</name></member>
      <member refid="class_k_win_1_1_tile_1a1deb54542d4d8066052e97e1e9380ea8" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>resizeByPixels</name></member>
      <member refid="class_k_win_1_1_tile_1a0910dad8a0972a837a1b45fa5ae701f0" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>resizeFromGravity</name></member>
      <member refid="class_k_win_1_1_tile_1a2b9ea7a4f90e1fdd6ea3bd2d63b4217c" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>rootTile</name></member>
      <member refid="class_k_win_1_1_tile_1a1a34f881a290b39218d51dc15d62bb72" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>row</name></member>
      <member refid="class_k_win_1_1_tile_1ac8f6e5f353adb3924f339f6192085204" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>rowChanged</name></member>
      <member refid="class_k_win_1_1_tile_1a321aad8468dedb793e909be76956d9ed" prot="protected" virt="non-virtual"><scope>KWin::Tile</scope><name>s_minimumSize</name></member>
      <member refid="class_k_win_1_1_tile_1a981691c492a8a8c5a825cae9f93baf9a" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>setGeometryFromAbsolute</name></member>
      <member refid="class_k_win_1_1_tile_1abe9307bf50e8647de48d310fb923a677" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>setGeometryFromWindow</name></member>
      <member refid="class_k_win_1_1_tile_1afb592f958c9183f2de1ea428e98ef804" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>setPadding</name></member>
      <member refid="class_k_win_1_1_tile_1a39420b0119b6b72da4f2d204ee236ebd" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>setQuickTileMode</name></member>
      <member refid="class_k_win_1_1_tile_1ad2c2aa924b2a0a7585cb19d61f984850" prot="public" virt="virtual"><scope>KWin::Tile</scope><name>setRelativeGeometry</name></member>
      <member refid="class_k_win_1_1_tile_1aa72fc4e488a859fcd72343df1e34ce50" prot="public" virt="virtual"><scope>KWin::Tile</scope><name>supportsResizeGravity</name></member>
      <member refid="class_k_win_1_1_tile_1acca0ed676dad89ccdc48b677e3e080a5" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>Tile</name></member>
      <member refid="class_k_win_1_1_tile_1a3bd3618f887ef3d73df46355ff329b98" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>tiles</name></member>
      <member refid="class_k_win_1_1_tile_1a0d2615a7c5500247bec0218144778901" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>visitDescendants</name></member>
      <member refid="class_k_win_1_1_tile_1ae2e82c0e1ddafa605af3e452ec724d83" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>windowAdded</name></member>
      <member refid="class_k_win_1_1_tile_1aee9733f0744e02500b249c416cb58aa7" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>windowGeometry</name></member>
      <member refid="class_k_win_1_1_tile_1af737619dce934eb9a55e85a314fc6fb5" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>windowGeometryChanged</name></member>
      <member refid="class_k_win_1_1_tile_1a7360d95151091bb4539c4d39f4107d80" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>windowRemoved</name></member>
      <member refid="class_k_win_1_1_tile_1a97273fc247ad0b37dc6e009eed3c9ede" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>windows</name></member>
      <member refid="class_k_win_1_1_tile_1a393f70418bf765ab1faee0e75fc685f8" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>windows</name></member>
      <member refid="class_k_win_1_1_tile_1aeed9827e674eccfa06533b844ad43179" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>windowsChanged</name></member>
      <member refid="class_k_win_1_1_tile_1ae3a7987d46c65f916ed006fa87c7670c" prot="public" virt="non-virtual"><scope>KWin::Tile</scope><name>~Tile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
