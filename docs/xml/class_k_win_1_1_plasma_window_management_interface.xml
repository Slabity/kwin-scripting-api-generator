<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_plasma_window_management_interface" kind="class" language="C++" prot="public">
    <compoundname>KWin::PlasmaWindowManagementInterface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="plasmawindowmanagement_8h" local="no">plasmawindowmanagement.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_plasma_window_management_interface_1a64e7ddcd006cf64ba6d98d785e2d1e49" prot="public" static="no" strong="yes">
        <type></type>
        <name>ShowingDesktopState</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterface::ShowingDesktopState</qualifiedname>
        <enumvalue id="class_k_win_1_1_plasma_window_management_interface_1a64e7ddcd006cf64ba6d98d785e2d1e49ab9f5c797ebbf55adccdd8539a65a0241" prot="public">
          <name>Disabled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_plasma_window_management_interface_1a64e7ddcd006cf64ba6d98d785e2d1e49a00d23a76e43b46dae9ec7aa9dcbebb32" prot="public">
          <name>Enabled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.h" line="68" column="5" bodyfile="kwin/src/wayland/plasmawindowmanagement.h" bodystart="68" bodyend="71"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_plasma_window_management_interface_1aac494ca3a4adab311897b59b6e9c9a1b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_plasma_window_management_interface_private" kindref="compound">PlasmaWindowManagementInterfacePrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;PlasmaWindowManagementInterfacePrivate&gt; KWin::PlasmaWindowManagementInterface::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterface::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.h" line="100" column="21" bodyfile="kwin/src/wayland/plasmawindowmanagement.h" bodystart="100" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_1a4d5ed8b88c4001c1acbc754e415eac57" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::PlasmaWindowManagementInterface::PlasmaWindowManagementInterface</definition>
        <argsstring>(Display *display, QObject *parent=nullptr)</argsstring>
        <name>PlasmaWindowManagementInterface</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterface::PlasmaWindowManagementInterface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.h" line="66" column="14" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="293" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_1a31252aeab4fd819c3b8e1c5e570686d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::PlasmaWindowManagementInterface::~PlasmaWindowManagementInterface</definition>
        <argsstring>() override</argsstring>
        <name>~PlasmaWindowManagementInterface</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterface::~PlasmaWindowManagementInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.h" line="67" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_1a009e336ee210f0bb7397f225f80f8c2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterface::setShowingDesktopState</definition>
        <argsstring>(ShowingDesktopState state)</argsstring>
        <name>setShowingDesktopState</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterface::setShowingDesktopState</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_plasma_window_management_interface_1a64e7ddcd006cf64ba6d98d785e2d1e49" kindref="member">ShowingDesktopState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.h" line="72" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="301" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_1a765c8b6b3715d0025176ce746cba7ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_plasma_window_interface" kindref="compound">PlasmaWindowInterface</ref> *</type>
        <definition>PlasmaWindowInterface * KWin::PlasmaWindowManagementInterface::createWindow</definition>
        <argsstring>(QObject *parent, const QUuid &amp;uuid)</argsstring>
        <name>createWindow</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterface::createWindow</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const QUuid &amp;</type>
          <declname>uuid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.h" line="74" column="27" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="310" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_1af06eaacddc56ca40e20da5d83a1bfae4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_plasma_window_interface" kindref="compound">PlasmaWindowInterface</ref> * &gt;</type>
        <definition>QList&lt; PlasmaWindowInterface * &gt; KWin::PlasmaWindowManagementInterface::windows</definition>
        <argsstring>() const</argsstring>
        <name>windows</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterface::windows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.h" line="75" column="11" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="332" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_1ac7651342d0b847adf16aecd58f1699a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterface::setPlasmaVirtualDesktopManagementInterface</definition>
        <argsstring>(PlasmaVirtualDesktopManagementInterface *manager)</argsstring>
        <name>setPlasmaVirtualDesktopManagementInterface</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterface::setPlasmaVirtualDesktopManagementInterface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_plasma_virtual_desktop_management_interface" kindref="compound">PlasmaVirtualDesktopManagementInterface</ref> *</type>
          <declname>manager</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Associate a <ref refid="class_k_win_1_1_plasma_virtual_desktop_management_interface" kindref="compound">PlasmaVirtualDesktopManagementInterface</ref> to this window management. It&apos;s necessary to associate one in orderto use the plasma virtual desktop features of <ref refid="class_k_win_1_1_plasma_window_interface" kindref="compound">PlasmaWindowInterface</ref>, as a window must know what are the deasktops available </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.h" line="82" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="356" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_1a423d771dc714a3fe0da3f3ef0faf4e41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_plasma_virtual_desktop_management_interface" kindref="compound">PlasmaVirtualDesktopManagementInterface</ref> *</type>
        <definition>PlasmaVirtualDesktopManagementInterface * KWin::PlasmaWindowManagementInterface::plasmaVirtualDesktopManagementInterface</definition>
        <argsstring>() const</argsstring>
        <name>plasmaVirtualDesktopManagementInterface</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterface::plasmaVirtualDesktopManagementInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the <ref refid="class_k_win_1_1_plasma_virtual_desktop_management_interface" kindref="compound">PlasmaVirtualDesktopManagementInterface</ref> associated to this <ref refid="class_k_win_1_1_plasma_window_management_interface" kindref="compound">PlasmaWindowManagementInterface</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.h" line="87" column="45" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="364" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_1a0d2986f367325a88ef2e53b94d508f01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterface::setStackingOrder</definition>
        <argsstring>(const QList&lt; quint32 &gt; &amp;stackingOrder)</argsstring>
        <name>setStackingOrder</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterface::setStackingOrder</qualifiedname>
        <param>
          <type>const QList&lt; quint32 &gt; &amp;</type>
          <declname>stackingOrder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Associate stacking order to this window management </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.h" line="92" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="337" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_1a262b9b784e98d6c9c190b564c2f29a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterface::setStackingOrderUuids</definition>
        <argsstring>(const QList&lt; QString &gt; &amp;stackingOrderUuids)</argsstring>
        <name>setStackingOrderUuids</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterface::setStackingOrderUuids</qualifiedname>
        <param>
          <type>const QList&lt; QString &gt; &amp;</type>
          <declname>stackingOrderUuids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.h" line="94" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="346" bodyend="354"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_plasma_window_management_interface_1a7d33ae1eb804661a81c7b3af120584c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterface::requestChangeShowingDesktop</definition>
        <argsstring>(ShowingDesktopState requestedState)</argsstring>
        <name>requestChangeShowingDesktop</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterface::requestChangeShowingDesktop</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_plasma_window_management_interface_1a64e7ddcd006cf64ba6d98d785e2d1e49" kindref="member">ShowingDesktopState</ref></type>
          <declname>requestedState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.h" line="97" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::PlasmaWindowManagementInterface</label>
        <link refid="class_k_win_1_1_plasma_window_management_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::PlasmaWindowManagementInterface</label>
        <link refid="class_k_win_1_1_plasma_window_management_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/plasmawindowmanagement.h" line="61" column="1" bodyfile="kwin/src/wayland/plasmawindowmanagement.h" bodystart="62" bodyend="101"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_plasma_window_management_interface_1a765c8b6b3715d0025176ce746cba7ec3" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterface</scope><name>createWindow</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_1aac494ca3a4adab311897b59b6e9c9a1b" prot="private" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterface</scope><name>d</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_1a423d771dc714a3fe0da3f3ef0faf4e41" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterface</scope><name>plasmaVirtualDesktopManagementInterface</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_1a4d5ed8b88c4001c1acbc754e415eac57" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterface</scope><name>PlasmaWindowManagementInterface</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_1a7d33ae1eb804661a81c7b3af120584c4" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterface</scope><name>requestChangeShowingDesktop</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_1ac7651342d0b847adf16aecd58f1699a0" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterface</scope><name>setPlasmaVirtualDesktopManagementInterface</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_1a009e336ee210f0bb7397f225f80f8c2b" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterface</scope><name>setShowingDesktopState</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_1a0d2986f367325a88ef2e53b94d508f01" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterface</scope><name>setStackingOrder</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_1a262b9b784e98d6c9c190b564c2f29a87" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterface</scope><name>setStackingOrderUuids</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_1a64e7ddcd006cf64ba6d98d785e2d1e49" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterface</scope><name>ShowingDesktopState</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_1af06eaacddc56ca40e20da5d83a1bfae4" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterface</scope><name>windows</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_1a31252aeab4fd819c3b8e1c5e570686d5" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterface</scope><name>~PlasmaWindowManagementInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
