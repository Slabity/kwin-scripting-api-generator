<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="idlenotify__v1_8cpp" kind="file" language="C++">
    <compoundname>idlenotify_v1.cpp</compoundname>
    <includes refid="idlenotify__v1_8h" local="yes">idlenotify_v1.h</includes>
    <includes refid="display_8h" local="yes">display.h</includes>
    <includes refid="idledetector_8h" local="yes">idledetector.h</includes>
    <includes local="yes">qwayland-server-ext-idle-notify-v1.h</includes>
    <includes local="yes">idlenotify_v1.moc</includes>
    <includes local="yes">moc_idlenotify_v1.cpp</includes>
    <incdepgraph>
      <node id="8">
        <label>idledetector.h</label>
        <link refid="idledetector_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>display.h</label>
        <link refid="display_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/idlenotify_v1.cpp</label>
        <link refid="idlenotify__v1_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>idlenotify_v1.h</label>
        <link refid="idlenotify__v1_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>QBasicTimer</label>
      </node>
      <node id="7">
        <label>QList</label>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="11">
        <label>idlenotify_v1.moc</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="12">
        <label>moc_idlenotify_v1.cpp</label>
      </node>
      <node id="10">
        <label>qwayland-server-ext-idle-notify-v1.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_k_win_1_1_idle_notify_v1_interface_private" prot="public">KWin::IdleNotifyV1InterfacePrivate</innerclass>
    <innerclass refid="class_k_win_1_1_idle_notification_v1_interface" prot="public">KWin::IdleNotificationV1Interface</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2022<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="idlenotify__v1_8h" kindref="compound">idlenotify_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="idledetector_8h" kindref="compound">idledetector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-server-ext-idle-notify-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>s_version<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_k_win_1_1_idle_notify_v1_interface_private" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_idle_notify_v1_interface_private_1aabb2ef2eeb9df4576fe38f841e5938a4" kindref="member">IdleNotifyV1InterfacePrivate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWaylandServer::ext_idle_notifier_v1</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_idle_notify_v1_interface_private_1aabb2ef2eeb9df4576fe38f841e5938a4" kindref="member">IdleNotifyV1InterfacePrivate</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_notify_v1_interface_private_1a5645e49f8cc73fd04ee3c7e7c6c67b34" kindref="member">ext_idle_notifier_v1_destroy</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_notify_v1_interface_private_1afb324dc8e728de873a32e68821cf1ce5" kindref="member">ext_idle_notifier_v1_get_idle_notification</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>uint32_t<sp/>timeout,<sp/>struct<sp/>::wl_resource<sp/>*seat)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_notify_v1_interface_private_1a008a085512571d7366d63dac3e75640b" kindref="member">ext_idle_notifier_v1_get_input_idle_notification</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>uint32_t<sp/>timeout,<sp/>wl_resource<sp/>*seat)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_k_win_1_1_idle_notification_v1_interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_idle_notification_v1_interface_1a1b312e8d77a94d09608344320ded3e64" kindref="member">IdleNotificationV1Interface</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWaylandServer::ext_idle_notification_v1</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_idle_notification_v1_interface_1a1b312e8d77a94d09608344320ded3e64" kindref="member">IdleNotificationV1Interface</ref>(wl_client<sp/>*client,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::milliseconds<sp/>timeout,<sp/><ref refid="class_k_win_1_1_idle_detector_1ad0b017bde19f90fdf0836774554f47d1" kindref="member">IdleDetector::OperatingMode</ref><sp/>mode);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_notification_v1_interface_1ad3f613532e276cdd88153f590f2697ad" kindref="member">ext_idle_notification_v1_destroy_resource</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_notification_v1_interface_1abc97bdb0951b38ae9c5312abe2408217" kindref="member">ext_idle_notification_v1_destroy</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_k_win_1_1_idle_notify_v1_interface_private_1aabb2ef2eeb9df4576fe38f841e5938a4" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_idle_notify_v1_interface_private_1aabb2ef2eeb9df4576fe38f841e5938a4" kindref="member">IdleNotifyV1InterfacePrivate::IdleNotifyV1InterfacePrivate</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QtWaylandServer::ext_idle_notifier_v1(*display,<sp/>s_version)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_k_win_1_1_idle_notify_v1_interface_private_1a5645e49f8cc73fd04ee3c7e7c6c67b34" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_notify_v1_interface_private_1a5645e49f8cc73fd04ee3c7e7c6c67b34" kindref="member">IdleNotifyV1InterfacePrivate::ext_idle_notifier_v1_destroy</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_k_win_1_1_idle_notify_v1_interface_private_1afb324dc8e728de873a32e68821cf1ce5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_notify_v1_interface_private_1afb324dc8e728de873a32e68821cf1ce5" kindref="member">IdleNotifyV1InterfacePrivate::ext_idle_notifier_v1_get_idle_notification</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>uint32_t<sp/>timeout,<sp/>struct<sp/>::wl_resource<sp/>*seat)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_notification_v1_interface" kindref="compound">IdleNotificationV1Interface</ref>(resource-&gt;client(),<sp/>resource-&gt;version(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::milliseconds(timeout),<sp/><ref refid="class_k_win_1_1_idle_detector_1ad0b017bde19f90fdf0836774554f47d1a165b4318dea692b5be9d2a63ca5b224a" kindref="member">IdleDetector::OperatingMode::FollowsInhibitors</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_k_win_1_1_idle_notify_v1_interface_private_1a008a085512571d7366d63dac3e75640b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_notify_v1_interface_private_1a008a085512571d7366d63dac3e75640b" kindref="member">IdleNotifyV1InterfacePrivate::ext_idle_notifier_v1_get_input_idle_notification</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>uint32_t<sp/>timeout,<sp/>struct<sp/>::wl_resource<sp/>*seat)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_notification_v1_interface" kindref="compound">IdleNotificationV1Interface</ref>(resource-&gt;client(),<sp/>resource-&gt;version(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::milliseconds(timeout),<sp/><ref refid="class_k_win_1_1_idle_detector_1ad0b017bde19f90fdf0836774554f47d1ae43d46b8e033de5b20e9d82bc54236cf" kindref="member">IdleDetector::OperatingMode::IgnoresInhibitors</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_k_win_1_1_idle_notification_v1_interface_1a1b312e8d77a94d09608344320ded3e64" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_idle_notification_v1_interface_1a1b312e8d77a94d09608344320ded3e64" kindref="member">IdleNotificationV1Interface::IdleNotificationV1Interface</ref>(wl_client<sp/>*client,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::milliseconds<sp/>timeout,<sp/><ref refid="class_k_win_1_1_idle_detector_1ad0b017bde19f90fdf0836774554f47d1" kindref="member">IdleDetector::OperatingMode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QtWaylandServer::ext_idle_notification_v1(client,<sp/>id,<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>detector<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_detector" kindref="compound">IdleDetector</ref>(timeout,<sp/>mode,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(detector,<sp/>&amp;<ref refid="class_k_win_1_1_idle_detector_1aaffa15bb55ac7fb4406309ee79e8dc01" kindref="member">IdleDetector::idle</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_idled();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(detector,<sp/>&amp;<ref refid="class_k_win_1_1_idle_detector_1ae82738d04ededa79d4139519431f7ff5" kindref="member">IdleDetector::resumed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_resumed();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_k_win_1_1_idle_notification_v1_interface_1ad3f613532e276cdd88153f590f2697ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_notification_v1_interface_1ad3f613532e276cdd88153f590f2697ad" kindref="member">IdleNotificationV1Interface::ext_idle_notification_v1_destroy_resource</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_k_win_1_1_idle_notification_v1_interface_1abc97bdb0951b38ae9c5312abe2408217" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_notification_v1_interface_1abc97bdb0951b38ae9c5312abe2408217" kindref="member">IdleNotificationV1Interface::ext_idle_notification_v1_destroy</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_k_win_1_1_idle_notify_v1_interface_1a43d26edea7aa4282a8b089d7963dcea2" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_idle_notify_v1_interface_1a43d26edea7aa4282a8b089d7963dcea2" kindref="member">IdleNotifyV1Interface::IdleNotifyV1Interface</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display,<sp/>QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>d(new<sp/><ref refid="class_k_win_1_1_idle_notify_v1_interface_private" kindref="compound">IdleNotifyV1InterfacePrivate</ref>(display))</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_k_win_1_1_idle_notify_v1_interface_1a7193c4f7e3677614c31063f9b2c8ceb1" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_idle_notify_v1_interface_1a7193c4f7e3677614c31063f9b2c8ceb1" kindref="member">IdleNotifyV1Interface::~IdleNotifyV1Interface</ref>()</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idlenotify_v1.moc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_idlenotify_v1.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/idlenotify_v1.cpp"/>
  </compounddef>
</doxygen>
