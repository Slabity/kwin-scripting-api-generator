<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_x11_windowed_input_device" kind="class" language="C++" prot="public">
    <compoundname>KWin::X11WindowedInputDevice</compoundname>
    <basecompoundref refid="class_k_win_1_1_input_device" prot="public" virt="non-virtual">KWin::InputDevice</basecompoundref>
    <includes refid="x11__windowed__backend_8h" local="no">x11_windowed_backend.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_x11_windowed_input_device_1aa1229a6dc17f0a4aeae80da84e448d7e" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::X11WindowedInputDevice::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <qualifiedname>KWin::X11WindowedInputDevice::m_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="61" column="13" bodyfile="kwin/src/backends/x11/x11_windowed_backend.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_x11_windowed_input_device_1a8af115774c92ac44948a6510fc88dc14" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::X11WindowedInputDevice::m_pointer</definition>
        <argsstring></argsstring>
        <name>m_pointer</name>
        <qualifiedname>KWin::X11WindowedInputDevice::m_pointer</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="62" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_x11_windowed_input_device_1ab0bc5988863000f8f085d5986061a44e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::X11WindowedInputDevice::m_keyboard</definition>
        <argsstring></argsstring>
        <name>m_keyboard</name>
        <qualifiedname>KWin::X11WindowedInputDevice::m_keyboard</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="63" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_x11_windowed_input_device_1a84a5818de374dd6e512f84799839d5c7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::X11WindowedInputDevice::m_touch</definition>
        <argsstring></argsstring>
        <name>m_touch</name>
        <qualifiedname>KWin::X11WindowedInputDevice::m_touch</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="64" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.h" bodystart="64" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1af314fe3869b13acfbbcf098a61678aa8" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::X11WindowedInputDevice::X11WindowedInputDevice</definition>
        <argsstring>()=default</argsstring>
        <name>X11WindowedInputDevice</name>
        <qualifiedname>KWin::X11WindowedInputDevice::X11WindowedInputDevice</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="39" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1ae3ddbba7d1453f4de0355a32215d0724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::X11WindowedInputDevice::setPointer</definition>
        <argsstring>(bool set)</argsstring>
        <name>setPointer</name>
        <qualifiedname>KWin::X11WindowedInputDevice::setPointer</qualifiedname>
        <param>
          <type>bool</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="41" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1af5f780e81466a286956831b8882e6912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::X11WindowedInputDevice::setKeyboard</definition>
        <argsstring>(bool set)</argsstring>
        <name>setKeyboard</name>
        <qualifiedname>KWin::X11WindowedInputDevice::setKeyboard</qualifiedname>
        <param>
          <type>bool</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="42" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1aeacb4547dec52f4faa8f41d5392a2279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::X11WindowedInputDevice::setTouch</definition>
        <argsstring>(bool set)</argsstring>
        <name>setTouch</name>
        <qualifiedname>KWin::X11WindowedInputDevice::setTouch</qualifiedname>
        <param>
          <type>bool</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="43" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1ae1560a93741fd2d5007d1fd23bd44d49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::X11WindowedInputDevice::setName</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>setName</name>
        <qualifiedname>KWin::X11WindowedInputDevice::setName</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="44" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1a95ecc24355179ee23a6babd17950f369" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString KWin::X11WindowedInputDevice::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <qualifiedname>KWin::X11WindowedInputDevice::name</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1aad981f4a054982e6461209db49f6ffad">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="46" column="13" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1ad99ce9a015af4dc72c337d4380f66ead" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::X11WindowedInputDevice::isEnabled</definition>
        <argsstring>() const override</argsstring>
        <name>isEnabled</name>
        <qualifiedname>KWin::X11WindowedInputDevice::isEnabled</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1a28f931744ac0815ad818380332e704f6">isEnabled</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="48" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1a2c7c15d385c34e59b71a199c7e4b46a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::X11WindowedInputDevice::setEnabled</definition>
        <argsstring>(bool enabled) override</argsstring>
        <name>setEnabled</name>
        <qualifiedname>KWin::X11WindowedInputDevice::setEnabled</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1a03ceb0b268f14beabb23794b27ff59bb">setEnabled</reimplements>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="49" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1a00c7300493ad9959db896d6efb816d1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::X11WindowedInputDevice::isKeyboard</definition>
        <argsstring>() const override</argsstring>
        <name>isKeyboard</name>
        <qualifiedname>KWin::X11WindowedInputDevice::isKeyboard</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1a1b70ce5d05e9fb22fe7c5759c9a02d94">isKeyboard</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="51" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1ab1d42939285ba11c8a9e7b9a9b05d2ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::X11WindowedInputDevice::isPointer</definition>
        <argsstring>() const override</argsstring>
        <name>isPointer</name>
        <qualifiedname>KWin::X11WindowedInputDevice::isPointer</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1a331075c15081e56df49c17d0882a3c99">isPointer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="52" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1a1ea981a670e1e8c216bf55d0a5db76aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::X11WindowedInputDevice::isTouchpad</definition>
        <argsstring>() const override</argsstring>
        <name>isTouchpad</name>
        <qualifiedname>KWin::X11WindowedInputDevice::isTouchpad</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1a74674383b7e25067438228500de9a8b7">isTouchpad</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="53" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1ab926ccf0f6583263597d34dbf3623ae4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::X11WindowedInputDevice::isTouch</definition>
        <argsstring>() const override</argsstring>
        <name>isTouch</name>
        <qualifiedname>KWin::X11WindowedInputDevice::isTouch</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1a588e08cb3904b465f2127217ef324040">isTouch</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="54" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1af088f149252f83d06393a48d2c59da41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::X11WindowedInputDevice::isTabletTool</definition>
        <argsstring>() const override</argsstring>
        <name>isTabletTool</name>
        <qualifiedname>KWin::X11WindowedInputDevice::isTabletTool</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1a9e2fa178da50f29fb524fc5b4bc450f2">isTabletTool</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="55" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1a7548d36e398244e7b4aca35d37064cbf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::X11WindowedInputDevice::isTabletPad</definition>
        <argsstring>() const override</argsstring>
        <name>isTabletPad</name>
        <qualifiedname>KWin::X11WindowedInputDevice::isTabletPad</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1aeb9893522b4ca183cbde1ffd31c711e4">isTabletPad</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="56" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1a3ea045136bb1d4be1050bd2e02cddcbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::X11WindowedInputDevice::isTabletModeSwitch</definition>
        <argsstring>() const override</argsstring>
        <name>isTabletModeSwitch</name>
        <qualifiedname>KWin::X11WindowedInputDevice::isTabletModeSwitch</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1abbbb154e529903f4493029190bb35fc5">isTabletModeSwitch</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="57" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_windowed_input_device_1ab7555294caec0fc4229a8b9eb56079c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::X11WindowedInputDevice::isLidSwitch</definition>
        <argsstring>() const override</argsstring>
        <name>isLidSwitch</name>
        <qualifiedname>KWin::X11WindowedInputDevice::isLidSwitch</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1ad81736c7e46244d5f48132d10c7f8255">isLidSwitch</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="58" column="10" bodyfile="kwin/src/backends/x11/x11_windowed_backend.cpp" bodystart="113" bodyend="116"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::InputDevice</label>
        <link refid="class_k_win_1_1_input_device"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::X11WindowedInputDevice</label>
        <link refid="class_k_win_1_1_x11_windowed_input_device"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::InputDevice</label>
        <link refid="class_k_win_1_1_input_device"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::X11WindowedInputDevice</label>
        <link refid="class_k_win_1_1_x11_windowed_input_device"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/backends/x11/x11_windowed_backend.h" line="34" column="1" bodyfile="kwin/src/backends/x11/x11_windowed_backend.h" bodystart="35" bodyend="65"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_input_device_1a2f56d3b5eed7bd3bc717199e21aa2e51" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>group</name></member>
      <member refid="class_k_win_1_1_input_device_1a4f46cbd5727c3b81b2d3b0238f6efa4a" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>holdGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_device_1a5d0e018e878d5ffb65cc906ed841873a" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>holdGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_device_1ab362e3f2d08b666a98e71afd11b34de4" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>holdGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_device_1aa28bcff91a76e7c2b405dc6cc895cde6" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>InputDevice</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1ad99ce9a015af4dc72c337d4380f66ead" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>isEnabled</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1a00c7300493ad9959db896d6efb816d1d" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>isKeyboard</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1ab7555294caec0fc4229a8b9eb56079c6" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>isLidSwitch</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1ab1d42939285ba11c8a9e7b9a9b05d2ee" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>isPointer</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1a3ea045136bb1d4be1050bd2e02cddcbd" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>isTabletModeSwitch</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1a7548d36e398244e7b4aca35d37064cbf" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>isTabletPad</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1af088f149252f83d06393a48d2c59da41" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>isTabletTool</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1ab926ccf0f6583263597d34dbf3623ae4" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>isTouch</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1a1ea981a670e1e8c216bf55d0a5db76aa" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>isTouchpad</name></member>
      <member refid="class_k_win_1_1_input_device_1a18c0e18750a071e1ab7a3e3cd575071a" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>keyChanged</name></member>
      <member refid="class_k_win_1_1_input_device_1ae02d1543af79c38088c5190442a1bcc1" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>leds</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1ab0bc5988863000f8f085d5986061a44e" prot="private" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>m_keyboard</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1aa1229a6dc17f0a4aeae80da84e448d7e" prot="private" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>m_name</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1a8af115774c92ac44948a6510fc88dc14" prot="private" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>m_pointer</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1a84a5818de374dd6e512f84799839d5c7" prot="private" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>m_touch</name></member>
      <member refid="class_k_win_1_1_input_device_1abafa14f7b803ac563843d27346409bef" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>modeGroups</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1a95ecc24355179ee23a6babd17950f369" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>name</name></member>
      <member refid="class_k_win_1_1_input_device_1afa3cfe3dcb3741a53f1c88f887d58b92" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>outputName</name></member>
      <member refid="class_k_win_1_1_input_device_1a58c19abab1f426b987b0f0690011dfb0" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>pinchGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_device_1a5b514ccff02b61cf03b9fc23806a58eb" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>pinchGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_device_1afcacc8ed046e56243d42f4a7f6cbd2e9" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>pinchGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_device_1a9720434391b05daee19c3f18b72dc635" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>pinchGestureUpdate</name></member>
      <member refid="class_k_win_1_1_input_device_1a33bbebff1d2b1a59a57c88dafa72eaaa" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>pointerAxisChanged</name></member>
      <member refid="class_k_win_1_1_input_device_1af2aa67c0f21aa2f83c1e17a611e75f85" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>pointerButtonChanged</name></member>
      <member refid="class_k_win_1_1_input_device_1a43d563ab496cbbc60cd1098fce57ab70" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>pointerFrame</name></member>
      <member refid="class_k_win_1_1_input_device_1a41f177939241acaec7df62607e7370d3" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>pointerMotion</name></member>
      <member refid="class_k_win_1_1_input_device_1aabda249f682e8597843a656c55525d5d" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>pointerMotionAbsolute</name></member>
      <member refid="class_k_win_1_1_input_device_1ad10b01e67e95a6a6566bf87eb9f83705" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>product</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1a2c7c15d385c34e59b71a199c7e4b46a7" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>setEnabled</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1af5f780e81466a286956831b8882e6912" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>setKeyboard</name></member>
      <member refid="class_k_win_1_1_input_device_1a582970abbfe7a7cfdf16d865991a2e97" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>setLeds</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1ae1560a93741fd2d5007d1fd23bd44d49" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>setName</name></member>
      <member refid="class_k_win_1_1_input_device_1a7d3d38075506f5b85db2b9dd9bf35771" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>setOutputName</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1ae3ddbba7d1453f4de0355a32215d0724" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>setPointer</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1aeacb4547dec52f4faa8f41d5392a2279" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>setTouch</name></member>
      <member refid="class_k_win_1_1_input_device_1ae7cfe76b5176e42e9e2d1f2eab657d9b" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>swipeGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_device_1a4ae913ffc5ba93bf20441d17608a2323" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>swipeGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_device_1ae57204b3e3e2fd3cde04d13c8a5df366" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>swipeGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_device_1a38f9a85f76f779c1736733efacdeff9a" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>swipeGestureUpdate</name></member>
      <member refid="class_k_win_1_1_input_device_1a7be97fe8f11738c6bd6d6ec6fa810f5c" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>switchToggle</name></member>
      <member refid="class_k_win_1_1_input_device_1ac1e8d78f37e13e0a4a8622d074a57156" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>sysPath</name></member>
      <member refid="class_k_win_1_1_input_device_1ad78b0bcdcfa038f560c3f7d926f4fbbe" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>tabletPadButtonCount</name></member>
      <member refid="class_k_win_1_1_input_device_1adf7e491468284b12bf62f422af23bc8e" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>tabletPadButtonEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1aa55d18855d95e08d65fe225497342fc6" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>tabletPadRingEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1af637ebd5021ae6b6d37121d8896768fb" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>tabletPadStripEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1a36fd21ea27d722c88455fa7315619593" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>tabletToolAxisEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1aeae463b5a1bf527c63ee0ae32d28e45c" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>tabletToolButtonEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1aee6146b2bf9d22adc82d8fdedb2b496d" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>tabletToolProximityEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1a567ce8c3e12e5d82725bcfb6f27d34a7" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>tabletToolTipEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1a3605b08e0a373f1e91c09c87557fd020" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>touchCanceled</name></member>
      <member refid="class_k_win_1_1_input_device_1a980b0a91ad2c70a7c1ed4360fccb76e7" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>touchDown</name></member>
      <member refid="class_k_win_1_1_input_device_1a2af070611afbc3b97fb0930ac3898346" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>touchFrame</name></member>
      <member refid="class_k_win_1_1_input_device_1a3179642a0ae2196f397d221d0ff38b3d" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>touchMotion</name></member>
      <member refid="class_k_win_1_1_input_device_1afcc35ba1cd647736c8122951a54025b8" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>touchUp</name></member>
      <member refid="class_k_win_1_1_input_device_1a3118e7b217b544f5e06c64a962a113ef" prot="public" virt="virtual"><scope>KWin::X11WindowedInputDevice</scope><name>vendor</name></member>
      <member refid="class_k_win_1_1_x11_windowed_input_device_1af314fe3869b13acfbbcf098a61678aa8" prot="public" virt="non-virtual"><scope>KWin::X11WindowedInputDevice</scope><name>X11WindowedInputDevice</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
