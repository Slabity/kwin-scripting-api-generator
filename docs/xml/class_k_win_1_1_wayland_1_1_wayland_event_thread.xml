<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_wayland_1_1_wayland_event_thread" kind="class" language="C++" prot="public">
    <compoundname>KWin::Wayland::WaylandEventThread</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QThread</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_event_thread_1ad72b2da86ecbcd5bcaf41a16a389680e" prot="private" static="no" mutable="no">
        <type>wl_display *const</type>
        <definition>wl_display* const KWin::Wayland::WaylandEventThread::m_display</definition>
        <argsstring></argsstring>
        <name>m_display</name>
        <qualifiedname>KWin::Wayland::WaylandEventThread::m_display</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_display.cpp" line="149" column="22" bodyfile="kwin/src/backends/wayland/wayland_display.cpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_event_thread_1a5bbf3bbb0d62aa2d9a3b55ea10e1eee9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::Wayland::WaylandEventThread::m_fd</definition>
        <argsstring></argsstring>
        <name>m_fd</name>
        <qualifiedname>KWin::Wayland::WaylandEventThread::m_fd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_display.cpp" line="150" column="9" bodyfile="kwin/src/backends/wayland/wayland_display.cpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_event_thread_1aba7ded972a5e68d7a9e951e2a218c850" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::Wayland::WaylandEventThread::m_quitPipe[2]</definition>
        <argsstring>[2]</argsstring>
        <name>m_quitPipe</name>
        <qualifiedname>KWin::Wayland::WaylandEventThread::m_quitPipe</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_display.cpp" line="151" column="9" bodyfile="kwin/src/backends/wayland/wayland_display.cpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_event_thread_1ab1d37b29593da0859c9a1850f7b5034b" prot="private" static="no" mutable="no">
        <type>QAtomicInteger&lt; bool &gt;</type>
        <definition>QAtomicInteger&lt;bool&gt; KWin::Wayland::WaylandEventThread::m_reading</definition>
        <argsstring></argsstring>
        <name>m_reading</name>
        <qualifiedname>KWin::Wayland::WaylandEventThread::m_reading</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_display.cpp" line="152" column="20" bodyfile="kwin/src/backends/wayland/wayland_display.cpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_event_thread_1a808401b193c796e08bd93239db770aef" prot="private" static="no" mutable="no">
        <type>QMutex</type>
        <definition>QMutex KWin::Wayland::WaylandEventThread::m_mutex</definition>
        <argsstring></argsstring>
        <name>m_mutex</name>
        <qualifiedname>KWin::Wayland::WaylandEventThread::m_mutex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_display.cpp" line="153" column="12" bodyfile="kwin/src/backends/wayland/wayland_display.cpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_event_thread_1a063443d0e41802b57b296525c7c664e3" prot="private" static="no" mutable="no">
        <type>QWaitCondition</type>
        <definition>QWaitCondition KWin::Wayland::WaylandEventThread::m_cond</definition>
        <argsstring></argsstring>
        <name>m_cond</name>
        <qualifiedname>KWin::Wayland::WaylandEventThread::m_cond</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_display.cpp" line="154" column="20" bodyfile="kwin/src/backends/wayland/wayland_display.cpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_event_thread_1abecea68fe11247f73f6fed58f7fb6532" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Wayland::WaylandEventThread::m_quitting</definition>
        <argsstring></argsstring>
        <name>m_quitting</name>
        <qualifiedname>KWin::Wayland::WaylandEventThread::m_quitting</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_display.cpp" line="155" column="10" bodyfile="kwin/src/backends/wayland/wayland_display.cpp" bodystart="155" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_event_thread_1aed39210292fd8d60c22eb520890b1da5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::Wayland::WaylandEventThread::WaylandEventThread</definition>
        <argsstring>(wl_display *display)</argsstring>
        <name>WaylandEventThread</name>
        <qualifiedname>KWin::Wayland::WaylandEventThread::WaylandEventThread</qualifiedname>
        <param>
          <type>wl_display *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_display.cpp" line="55" column="5" bodyfile="kwin/src/backends/wayland/wayland_display.cpp" bodystart="55" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_event_thread_1a0c74cb7ca35c6803307978d47fbcd4de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::Wayland::WaylandEventThread::~WaylandEventThread</definition>
        <argsstring>() override</argsstring>
        <name>~WaylandEventThread</name>
        <qualifiedname>KWin::Wayland::WaylandEventThread::~WaylandEventThread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_display.cpp" line="67" column="5" bodyfile="kwin/src/backends/wayland/wayland_display.cpp" bodystart="67" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_event_thread_1a7e9564442ee8d6c5dd73f5334fddc6c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Wayland::WaylandEventThread::dispatch</definition>
        <argsstring>()</argsstring>
        <name>dispatch</name>
        <qualifiedname>KWin::Wayland::WaylandEventThread::dispatch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_display.cpp" line="75" column="10" bodyfile="kwin/src/backends/wayland/wayland_display.cpp" bodystart="75" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_event_thread_1a2d4d432c38c37343dc5c5bb22562bf92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Wayland::WaylandEventThread::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <qualifiedname>KWin::Wayland::WaylandEventThread::stop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_display.cpp" line="97" column="10" bodyfile="kwin/src/backends/wayland/wayland_display.cpp" bodystart="97" bodyend="109"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_wayland_1_1_wayland_event_thread_1a6096b81c533b07ac52483c7dadf203eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Wayland::WaylandEventThread::available</definition>
        <argsstring>()</argsstring>
        <name>available</name>
        <qualifiedname>KWin::Wayland::WaylandEventThread::available</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_display.cpp" line="112" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_event_thread_1acc22b0964638cb3b440e8ccfeade3df1" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Wayland::WaylandEventThread::run</definition>
        <argsstring>() override</argsstring>
        <name>run</name>
        <qualifiedname>KWin::Wayland::WaylandEventThread::run</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_display.cpp" line="115" column="10" bodyfile="kwin/src/backends/wayland/wayland_display.cpp" bodystart="115" bodyend="146"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::Wayland::WaylandEventThread</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_event_thread"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QThread</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::Wayland::WaylandEventThread</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_event_thread"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QThread</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/backends/wayland/wayland_display.cpp" line="50" column="1" bodyfile="kwin/src/backends/wayland/wayland_display.cpp" bodystart="51" bodyend="156"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_event_thread_1a6096b81c533b07ac52483c7dadf203eb" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEventThread</scope><name>available</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_event_thread_1a7e9564442ee8d6c5dd73f5334fddc6c4" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEventThread</scope><name>dispatch</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_event_thread_1a063443d0e41802b57b296525c7c664e3" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandEventThread</scope><name>m_cond</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_event_thread_1ad72b2da86ecbcd5bcaf41a16a389680e" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandEventThread</scope><name>m_display</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_event_thread_1a5bbf3bbb0d62aa2d9a3b55ea10e1eee9" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandEventThread</scope><name>m_fd</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_event_thread_1a808401b193c796e08bd93239db770aef" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandEventThread</scope><name>m_mutex</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_event_thread_1aba7ded972a5e68d7a9e951e2a218c850" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandEventThread</scope><name>m_quitPipe</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_event_thread_1abecea68fe11247f73f6fed58f7fb6532" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandEventThread</scope><name>m_quitting</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_event_thread_1ab1d37b29593da0859c9a1850f7b5034b" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandEventThread</scope><name>m_reading</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_event_thread_1acc22b0964638cb3b440e8ccfeade3df1" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEventThread</scope><name>run</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_event_thread_1a2d4d432c38c37343dc5c5bb22562bf92" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEventThread</scope><name>stop</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_event_thread_1aed39210292fd8d60c22eb520890b1da5" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEventThread</scope><name>WaylandEventThread</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_event_thread_1a0c74cb7ca35c6803307978d47fbcd4de" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEventThread</scope><name>~WaylandEventThread</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
