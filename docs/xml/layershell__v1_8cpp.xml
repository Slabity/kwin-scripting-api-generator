<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="layershell__v1_8cpp" kind="file" language="C++">
    <compoundname>layershell_v1.cpp</compoundname>
    <includes refid="layershell__v1_8h" local="yes">layershell_v1.h</includes>
    <includes refid="display_8h" local="yes">display.h</includes>
    <includes refid="wayland_2output_8h" local="yes">output.h</includes>
    <includes refid="surface_8h" local="yes">surface.h</includes>
    <includes refid="common_8h" local="yes">utils/common.h</includes>
    <includes refid="xdgshell__p_8h" local="yes">xdgshell_p.h</includes>
    <includes local="no">QPointer</includes>
    <includes local="no">QQueue</includes>
    <includes local="yes">qwayland-server-wlr-layer-shell-unstable-v1.h</includes>
    <includes local="yes">moc_layershell_v1.cpp</includes>
    <incdepgraph>
      <node id="19">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>display.h</label>
        <link refid="display_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/layershell_v1.cpp</label>
        <link refid="layershell__v1_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>layershell_v1.h</label>
        <link refid="layershell__v1_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>output.h</label>
        <link refid="wayland_2output_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>surface.h</label>
        <link refid="surface_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>surface_p.h</label>
        <link refid="surface__p_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>xdgshell.h</label>
        <link refid="xdgshell_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>xdgshell_p.h</label>
        <link refid="xdgshell__p_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>QByteArray</label>
      </node>
      <node id="13">
        <label>QCoreApplication</label>
      </node>
      <node id="24">
        <label>QDebug</label>
      </node>
      <node id="48">
        <label>QHash</label>
      </node>
      <node id="40">
        <label>QIcon</label>
      </node>
      <node id="14">
        <label>QImage</label>
      </node>
      <node id="5">
        <label>QList</label>
      </node>
      <node id="37">
        <label>QLoggingCategory</label>
      </node>
      <node id="7">
        <label>QMargins</label>
      </node>
      <node id="21">
        <label>QMatrix4x4</label>
      </node>
      <node id="6">
        <label>QObject</label>
      </node>
      <node id="15">
        <label>QPoint</label>
      </node>
      <node id="31">
        <label>QPointer</label>
      </node>
      <node id="51">
        <label>QQueue</label>
      </node>
      <node id="25">
        <label>QRect</label>
      </node>
      <node id="33">
        <label>QRegion</label>
      </node>
      <node id="43">
        <label>QSharedDataPointer</label>
      </node>
      <node id="23">
        <label>QSize</label>
      </node>
      <node id="36">
        <label>QString</label>
      </node>
      <node id="26">
        <label>QUuid</label>
      </node>
      <node id="16">
        <label>QVariant</label>
      </node>
      <node id="17">
        <label>QVector2D</label>
      </node>
      <node id="44">
        <label>chrono</label>
      </node>
      <node id="38">
        <label>climits</label>
      </node>
      <node id="12">
        <label>config-kwin.h</label>
      </node>
      <node id="50">
        <label>deque</label>
      </node>
      <node id="4">
        <label>kwin_export.h</label>
      </node>
      <node id="32">
        <label>memory</label>
      </node>
      <node id="53">
        <label>moc_layershell_v1.cpp</label>
      </node>
      <node id="20">
        <label>optional</label>
      </node>
      <node id="49">
        <label>qwayland-server-wayland.h</label>
      </node>
      <node id="52">
        <label>qwayland-server-wlr-layer-shell-unstable-v1.h</label>
      </node>
      <node id="41">
        <label>qwayland-server-xdg-shell.h</label>
      </node>
      <node id="47">
        <label>utility</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_k_win_1_1_layer_shell_v1_interface_private" prot="public">KWin::LayerShellV1InterfacePrivate</innerclass>
    <innerclass refid="struct_k_win_1_1_layer_surface_v1_commit" prot="public">KWin::LayerSurfaceV1Commit</innerclass>
    <innerclass refid="struct_k_win_1_1_layer_surface_v1_state" prot="public">KWin::LayerSurfaceV1State</innerclass>
    <innerclass refid="class_k_win_1_1_layer_surface_v1_interface_private" prot="public">KWin::LayerSurfaceV1InterfacePrivate</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="layershell__v1_8h" kindref="compound">layershell_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland_2output_8h" kindref="compound">output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface_8h" kindref="compound">surface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">utils/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xdgshell__p_8h" kindref="compound">xdgshell_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPointer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QQueue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-server-wlr-layer-shell-unstable-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_version<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_k_win_1_1_layer_shell_v1_interface_private" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1a38b68a5d4e4af7e92b25b3722ffb72c1" kindref="member">LayerShellV1InterfacePrivate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWaylandServer::zwlr_layer_shell_v1</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1a38b68a5d4e4af7e92b25b3722ffb72c1" kindref="member">LayerShellV1InterfacePrivate</ref>(<ref refid="class_k_win_1_1_layer_shell_v1_interface" kindref="compound">LayerShellV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1ac23606ae05cea1d792955ef0e95c0fd4" kindref="member">q</ref>,<sp/><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*<ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1ae6cb9531bb655885bfaa3daa9e04ba9b" kindref="member">display</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_k_win_1_1_layer_shell_v1_interface_private_1ac23606ae05cea1d792955ef0e95c0fd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_shell_v1_interface" kindref="compound">LayerShellV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1ac23606ae05cea1d792955ef0e95c0fd4" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="29" refid="class_k_win_1_1_layer_shell_v1_interface_private_1ae6cb9531bb655885bfaa3daa9e04ba9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*<ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1ae6cb9531bb655885bfaa3daa9e04ba9b" kindref="member">display</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1a927a4343ac7f4687d72d30b3c60ff7b1" kindref="member">zwlr_layer_shell_v1_get_layer_surface</ref>(Resource<sp/>*resource,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>::wl_resource<sp/>*surface_resource,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>::wl_resource<sp/>*output_resource,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>layer,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;scope)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1aa92efc851025742d8127035fb48468b4" kindref="member">zwlr_layer_shell_v1_destroy</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="struct_k_win_1_1_layer_surface_v1_commit" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_layer_surface_v1_commit" kindref="compound">LayerSurfaceV1Commit</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43" refid="struct_k_win_1_1_layer_surface_v1_commit_1ab2373455c2f18e87131fccb816f1fc26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;LayerSurfaceV1Interface::Layer&gt;<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_commit_1ab2373455c2f18e87131fccb816f1fc26" kindref="member">layer</ref>;</highlight></codeline>
<codeline lineno="44" refid="struct_k_win_1_1_layer_surface_v1_commit_1a8df966497da8220b94765b4e5b464332" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Qt::Edges&gt;<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a8df966497da8220b94765b4e5b464332" kindref="member">anchor</ref>;</highlight></codeline>
<codeline lineno="45" refid="struct_k_win_1_1_layer_surface_v1_commit_1a07e497b45bcededfbdba288f93d5c883" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;QMargins&gt;<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a07e497b45bcededfbdba288f93d5c883" kindref="member">margins</ref>;</highlight></codeline>
<codeline lineno="46" refid="struct_k_win_1_1_layer_surface_v1_commit_1a7af646b1b9293039ad258c36ef7a2570" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;QSize&gt;<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a7af646b1b9293039ad258c36ef7a2570" kindref="member">desiredSize</ref>;</highlight></codeline>
<codeline lineno="47" refid="struct_k_win_1_1_layer_surface_v1_commit_1a1cc4d07d1eb2193695c34a3416495a2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;int&gt;<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a1cc4d07d1eb2193695c34a3416495a2d" kindref="member">exclusiveZone</ref>;</highlight></codeline>
<codeline lineno="48" refid="struct_k_win_1_1_layer_surface_v1_commit_1af73c9ee406d5d9925475ced8cae29e5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Qt::Edge&gt;<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_commit_1af73c9ee406d5d9925475ced8cae29e5c" kindref="member">exclusiveEdge</ref>;</highlight></codeline>
<codeline lineno="49" refid="struct_k_win_1_1_layer_surface_v1_commit_1abf931382f8118bb0ef504f43c45bd63e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;quint32&gt;<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_commit_1abf931382f8118bb0ef504f43c45bd63e" kindref="member">acknowledgedConfigure</ref>;</highlight></codeline>
<codeline lineno="50" refid="struct_k_win_1_1_layer_surface_v1_commit_1aab85d38f9685490013b84ae25d668d42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_commit_1aab85d38f9685490013b84ae25d668d42" kindref="member">acceptsFocus</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="struct_k_win_1_1_layer_surface_v1_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_layer_surface_v1_state" kindref="compound">LayerSurfaceV1State</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55" refid="struct_k_win_1_1_layer_surface_v1_state_1a11112e8f76b47a1743a037d5067f0009" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QQueue&lt;quint32&gt;<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state_1a11112e8f76b47a1743a037d5067f0009" kindref="member">serials</ref>;</highlight></codeline>
<codeline lineno="56" refid="struct_k_win_1_1_layer_surface_v1_state_1ad0567455a8ba8aed19ea34423c00e067" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64" kindref="member">LayerSurfaceV1Interface::Layer</ref><sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state_1ad0567455a8ba8aed19ea34423c00e067" kindref="member">layer</ref><sp/>=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64a4713b37e17f565445d7a180a27207b20" kindref="member">LayerSurfaceV1Interface::BottomLayer</ref>;</highlight></codeline>
<codeline lineno="57" refid="struct_k_win_1_1_layer_surface_v1_state_1ae562d72f358f8d2684661ffb023de618" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Qt::Edges<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state_1ae562d72f358f8d2684661ffb023de618" kindref="member">anchor</ref>;</highlight></codeline>
<codeline lineno="58" refid="struct_k_win_1_1_layer_surface_v1_state_1adb8bb81f07b0c85494ed3b817d5e959f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QMargins<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state_1adb8bb81f07b0c85494ed3b817d5e959f" kindref="member">margins</ref>;</highlight></codeline>
<codeline lineno="59" refid="struct_k_win_1_1_layer_surface_v1_state_1a0d01029c983d2b804b7b5830b9d9bf7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state_1a0d01029c983d2b804b7b5830b9d9bf7c" kindref="member">desiredSize</ref><sp/>=<sp/>QSize(0,<sp/>0);</highlight></codeline>
<codeline lineno="60" refid="struct_k_win_1_1_layer_surface_v1_state_1afce885b2970a496d7eccfd3cf651db0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state_1afce885b2970a496d7eccfd3cf651db0e" kindref="member">exclusiveZone</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61" refid="struct_k_win_1_1_layer_surface_v1_state_1a092e992c7e400fd81c42e66f506b60c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Qt::Edge<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state_1a092e992c7e400fd81c42e66f506b60c7" kindref="member">exclusiveEdge</ref><sp/>=<sp/>Qt::Edge();</highlight></codeline>
<codeline lineno="62" refid="struct_k_win_1_1_layer_surface_v1_state_1a0ae0336bbcb4860bedcbcb53cd97e74a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state_1a0ae0336bbcb4860bedcbcb53cd97e74a" kindref="member">acceptsFocus</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63" refid="struct_k_win_1_1_layer_surface_v1_state_1a844483bb890de692d919189c809968ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state_1a844483bb890de692d919189c809968ca" kindref="member">configured</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64" refid="struct_k_win_1_1_layer_surface_v1_state_1a2f827ab3f5d496221f51bfaf7dea716a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state_1a2f827ab3f5d496221f51bfaf7dea716a" kindref="member">closed</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65" refid="struct_k_win_1_1_layer_surface_v1_state_1a354e537891d2c4a49ebfa8a6fdca5b74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state_1a354e537891d2c4a49ebfa8a6fdca5b74" kindref="member">committed</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66" refid="struct_k_win_1_1_layer_surface_v1_state_1a507d9c707711c53491ecdd4dbba694f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state_1a507d9c707711c53491ecdd4dbba694f0" kindref="member">firstBufferAttached</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_k_win_1_1_layer_surface_v1_interface_private" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a50552c0b51f68d7a84b900a969c9348a" kindref="member">LayerSurfaceV1InterfacePrivate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_extension_1a6206b89a2aff7f9a1c8272e6a040243a" kindref="member">SurfaceExtension</ref>&lt;LayerSurfaceV1Commit&gt;,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWaylandServer::zwlr_layer_surface_v1</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a50552c0b51f68d7a84b900a969c9348a" kindref="member">LayerSurfaceV1InterfacePrivate</ref>(<ref refid="class_k_win_1_1_layer_surface_v1_interface" kindref="compound">LayerSurfaceV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" kindref="member">q</ref>,<sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae16a5a668b6053fab221feb386502dc6" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a482fb4d30368f0b466aed6ec2a6161dc" kindref="member">apply</ref>(<ref refid="struct_k_win_1_1_layer_surface_v1_commit" kindref="compound">LayerSurfaceV1Commit</ref><sp/>*commit)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface" kindref="compound">LayerSurfaceV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="77" refid="class_k_win_1_1_layer_surface_v1_interface_private_1a84b55dde405664db29f58e6152c99275" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_shell_v1_interface" kindref="compound">LayerShellV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a84b55dde405664db29f58e6152c99275" kindref="member">shell</ref>;</highlight></codeline>
<codeline lineno="78" refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae16a5a668b6053fab221feb386502dc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointer&lt;SurfaceInterface&gt;<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae16a5a668b6053fab221feb386502dc6" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="79" refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae6d38791a1e9dceaadee3a3b38adc248" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointer&lt;OutputInterface&gt;<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae6d38791a1e9dceaadee3a3b38adc248" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="80" refid="class_k_win_1_1_layer_surface_v1_interface_private_1a394a2279f41f53f7fdddde73caa588e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a394a2279f41f53f7fdddde73caa588e2" kindref="member">scope</ref>;</highlight></codeline>
<codeline lineno="81" refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state" kindref="compound">LayerSurfaceV1State</ref><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae1185923a88b717eafa7819cbf747015" kindref="member">zwlr_layer_surface_v1_destroy_resource</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ab99989ac68c681ef831fcd0ca4cda8fc" kindref="member">zwlr_layer_surface_v1_set_size</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>width,<sp/>uint32_t<sp/>height)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ac48ddf3a4afa571e259ca65077945a84" kindref="member">zwlr_layer_surface_v1_set_anchor</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>anchor)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a1333b9b53552606a68e3fab95169e4df" kindref="member">zwlr_layer_surface_v1_set_exclusive_edge</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>edge)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1aceb99e106edd6ef3bc4952c87dee248c" kindref="member">zwlr_layer_surface_v1_set_exclusive_zone</ref>(Resource<sp/>*resource,<sp/>int32_t<sp/>zone)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a72ba8b0af422f66baeb9125045072ce2" kindref="member">zwlr_layer_surface_v1_set_margin</ref>(Resource<sp/>*resource,<sp/>int32_t<sp/>top,<sp/>int32_t<sp/>right,<sp/>int32_t<sp/>bottom,<sp/>int32_t<sp/>left)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a5f1b8234fc2fd4d93ebe1e357b3938f4" kindref="member">zwlr_layer_surface_v1_set_keyboard_interactivity</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>keyboard_interactivity)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1afe36d59aeabaf978e02bdfaf0aa51bb4" kindref="member">zwlr_layer_surface_v1_get_popup</ref>(Resource<sp/>*resource,<sp/>struct<sp/>::wl_resource<sp/>*popup)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a54c6ff3b1e716032511f5addfc5e3be9" kindref="member">zwlr_layer_surface_v1_ack_configure</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>serial)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a8d8b24690c7d93eaafc2a4ca338fbeb0" kindref="member">zwlr_layer_surface_v1_destroy</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a2fcc3a10881e2dacf07a95c32e35bc76" kindref="member">zwlr_layer_surface_v1_set_layer</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>layer)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_k_win_1_1_layer_shell_v1_interface_private_1a38b68a5d4e4af7e92b25b3722ffb72c1" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1a38b68a5d4e4af7e92b25b3722ffb72c1" kindref="member">LayerShellV1InterfacePrivate::LayerShellV1InterfacePrivate</ref>(<ref refid="class_k_win_1_1_layer_shell_v1_interface" kindref="compound">LayerShellV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1ac23606ae05cea1d792955ef0e95c0fd4" kindref="member">q</ref>,<sp/><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*<ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1ae6cb9531bb655885bfaa3daa9e04ba9b" kindref="member">display</ref>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QtWaylandServer::zwlr_layer_shell_v1(*<ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1ae6cb9531bb655885bfaa3daa9e04ba9b" kindref="member">display</ref>,<sp/>s_version)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1ac23606ae05cea1d792955ef0e95c0fd4" kindref="member">q</ref>(<ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1ac23606ae05cea1d792955ef0e95c0fd4" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1ae6cb9531bb655885bfaa3daa9e04ba9b" kindref="member">display</ref>(<ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1ae6cb9531bb655885bfaa3daa9e04ba9b" kindref="member">display</ref>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_k_win_1_1_layer_shell_v1_interface_private_1a927a4343ac7f4687d72d30b3c60ff7b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1a927a4343ac7f4687d72d30b3c60ff7b1" kindref="member">LayerShellV1InterfacePrivate::zwlr_layer_shell_v1_get_layer_surface</ref>(Resource<sp/>*resource,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource<sp/>*surface_resource,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource<sp/>*output_resource,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>layer,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;scope)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a24ac16f7936d889771c2ab09d973175b" kindref="member">SurfaceInterface::get</ref>(surface_resource);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_interface" kindref="compound">OutputInterface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_interface_1afe9634a40d2bbb1071411743694b7e55" kindref="member">OutputInterface::get</ref>(output_resource);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a6f53ff0fca97e468e7ccf6681f4a5030" kindref="member">buffer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_already_constructed,<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>wl_surface<sp/>already<sp/>has<sp/>a<sp/>buffer<sp/>attached&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer<sp/>&gt;<sp/>layer_overlay)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_invalid_layer,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>layer<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>layer);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_role" kindref="compound">SurfaceRole</ref><sp/>*role<sp/>=<sp/>surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a74d8c5aef926651948ae88d70feb0ffe" kindref="member">role</ref>())<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(role<sp/>!=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a9bc6d786930b4c88bf4574ee001251e3" kindref="member">LayerSurfaceV1Interface::role</ref>())<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_role,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>wl_surface<sp/>already<sp/>has<sp/>a<sp/>role<sp/>assigned<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>role-&gt;name().constData());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1af7fc1b7a86682bcd55e1195f471213e4" kindref="member">setRole</ref>(<ref refid="class_k_win_1_1_layer_surface_v1_interface_1a9bc6d786930b4c88bf4574ee001251e3" kindref="member">LayerSurfaceV1Interface::role</ref>());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource<sp/>*layerSurfaceResource<sp/>=<sp/>wl_resource_create(resource-&gt;client(),<sp/>&amp;zwlr_layer_surface_v1_interface,<sp/>resource-&gt;version(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!layerSurfaceResource)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(resource-&gt;handle);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layerSurface<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface" kindref="compound">LayerSurfaceV1Interface</ref>(<ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1ac23606ae05cea1d792955ef0e95c0fd4" kindref="member">q</ref>,<sp/>surface,<sp/>output,<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64" kindref="member">LayerSurfaceV1Interface::Layer</ref>(layer),<sp/>scope,<sp/>layerSurfaceResource);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1ac23606ae05cea1d792955ef0e95c0fd4" kindref="member">q</ref>-&gt;surfaceCreated(layerSurface);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="class_k_win_1_1_layer_shell_v1_interface_private_1aa92efc851025742d8127035fb48468b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_shell_v1_interface_private_1aa92efc851025742d8127035fb48468b4" kindref="member">LayerShellV1InterfacePrivate::zwlr_layer_shell_v1_destroy</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="class_k_win_1_1_layer_shell_v1_interface_1a11a389193954ba848bd5e3f2dad9e909" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_layer_shell_v1_interface_1a11a389193954ba848bd5e3f2dad9e909" kindref="member">LayerShellV1Interface::LayerShellV1Interface</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*<ref refid="class_k_win_1_1_layer_shell_v1_interface_1ab1ea08f1f105adf7ac009854be5b9a99" kindref="member">display</ref>,<sp/>QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>d(new<sp/><ref refid="class_k_win_1_1_layer_shell_v1_interface_private" kindref="compound">LayerShellV1InterfacePrivate</ref>(this,<sp/><ref refid="class_k_win_1_1_layer_shell_v1_interface_1ab1ea08f1f105adf7ac009854be5b9a99" kindref="member">display</ref>))</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class_k_win_1_1_layer_shell_v1_interface_1a881a6e2f45a46438b171a18a998bf10a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_layer_shell_v1_interface_1a881a6e2f45a46438b171a18a998bf10a" kindref="member">LayerShellV1Interface::~LayerShellV1Interface</ref>()</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="class_k_win_1_1_layer_shell_v1_interface_1ab1ea08f1f105adf7ac009854be5b9a99" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*<ref refid="class_k_win_1_1_layer_shell_v1_interface_1ab1ea08f1f105adf7ac009854be5b9a99" kindref="member">LayerShellV1Interface::display</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="160"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;display;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="class_k_win_1_1_layer_surface_v1_interface_private_1a50552c0b51f68d7a84b900a969c9348a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a50552c0b51f68d7a84b900a969c9348a" kindref="member">LayerSurfaceV1InterfacePrivate::LayerSurfaceV1InterfacePrivate</ref>(<ref refid="class_k_win_1_1_layer_surface_v1_interface" kindref="compound">LayerSurfaceV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" kindref="member">q</ref>,<sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae16a5a668b6053fab221feb386502dc6" kindref="member">surface</ref>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_surface_extension_1a6206b89a2aff7f9a1c8272e6a040243a" kindref="member">SurfaceExtension</ref>(<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae16a5a668b6053fab221feb386502dc6" kindref="member">surface</ref>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" kindref="member">q</ref>(<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae16a5a668b6053fab221feb386502dc6" kindref="member">surface</ref>(<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae16a5a668b6053fab221feb386502dc6" kindref="member">surface</ref>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae1185923a88b717eafa7819cbf747015" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae1185923a88b717eafa7819cbf747015" kindref="member">LayerSurfaceV1InterfacePrivate::zwlr_layer_surface_v1_destroy_resource</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" kindref="member">q</ref>-&gt;aboutToBeDestroyed();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_k_win_1_1_layer_surface_v1_interface_private_1ab99989ac68c681ef831fcd0ca4cda8fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ab99989ac68c681ef831fcd0ca4cda8fc" kindref="member">LayerSurfaceV1InterfacePrivate::zwlr_layer_surface_v1_set_size</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>width,<sp/>uint32_t<sp/>height)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.desiredSize<sp/>=<sp/>QSize(width,<sp/>height);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="class_k_win_1_1_layer_surface_v1_interface_private_1ac48ddf3a4afa571e259ca65077945a84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ac48ddf3a4afa571e259ca65077945a84" kindref="member">LayerSurfaceV1InterfacePrivate::zwlr_layer_surface_v1_set_anchor</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>anchor)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>anchorMask<sp/>=<sp/>anchor_top<sp/>|<sp/>anchor_left<sp/>|<sp/>anchor_right<sp/>|<sp/>anchor_bottom;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor<sp/>&gt;<sp/>anchorMask)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_invalid_anchor,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>anchor<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>anchor);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.anchor<sp/>=<sp/>Qt::Edges();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor<sp/>&amp;<sp/>anchor_top)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.anchor<sp/>|=<sp/>Qt::TopEdge;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor<sp/>&amp;<sp/>anchor_right)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.anchor<sp/>|=<sp/>Qt::RightEdge;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor<sp/>&amp;<sp/>anchor_bottom)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.anchor<sp/>|=<sp/>Qt::BottomEdge;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor<sp/>&amp;<sp/>anchor_left)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.anchor<sp/>|=<sp/>Qt::LeftEdge;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="class_k_win_1_1_layer_surface_v1_interface_private_1a1333b9b53552606a68e3fab95169e4df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a1333b9b53552606a68e3fab95169e4df" kindref="member">LayerSurfaceV1InterfacePrivate::zwlr_layer_surface_v1_set_exclusive_edge</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>edge)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!edge)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.exclusiveEdge<sp/>=<sp/>Qt::Edge();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>==<sp/>anchor_top)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.exclusiveEdge<sp/>=<sp/>Qt::TopEdge;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>==<sp/>anchor_right)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.exclusiveEdge<sp/>=<sp/>Qt::RightEdge;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>==<sp/>anchor_bottom)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.exclusiveEdge<sp/>=<sp/>Qt::BottomEdge;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>==<sp/>anchor_left)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.exclusiveEdge<sp/>=<sp/>Qt::LeftEdge;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_invalid_exclusive_edge,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>exclusive<sp/>edge:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>edge);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="class_k_win_1_1_layer_surface_v1_interface_private_1aceb99e106edd6ef3bc4952c87dee248c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1aceb99e106edd6ef3bc4952c87dee248c" kindref="member">LayerSurfaceV1InterfacePrivate::zwlr_layer_surface_v1_set_exclusive_zone</ref>(Resource<sp/>*,<sp/>int32_t<sp/>zone)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.exclusiveZone<sp/>=<sp/>zone;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="class_k_win_1_1_layer_surface_v1_interface_private_1a72ba8b0af422f66baeb9125045072ce2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a72ba8b0af422f66baeb9125045072ce2" kindref="member">LayerSurfaceV1InterfacePrivate::zwlr_layer_surface_v1_set_margin</ref>(Resource<sp/>*,<sp/>int32_t<sp/>top,<sp/>int32_t<sp/>right,<sp/>int32_t<sp/>bottom,<sp/>int32_t<sp/>left)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.margins<sp/>=<sp/>QMargins(left,<sp/>top,<sp/>right,<sp/>bottom);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="class_k_win_1_1_layer_surface_v1_interface_private_1a5f1b8234fc2fd4d93ebe1e357b3938f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a5f1b8234fc2fd4d93ebe1e357b3938f4" kindref="member">LayerSurfaceV1InterfacePrivate::zwlr_layer_surface_v1_set_keyboard_interactivity</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>keyboard_interactivity)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.acceptsFocus<sp/>=<sp/>keyboard_interactivity;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="class_k_win_1_1_layer_surface_v1_interface_private_1afe36d59aeabaf978e02bdfaf0aa51bb4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1afe36d59aeabaf978e02bdfaf0aa51bb4" kindref="member">LayerSurfaceV1InterfacePrivate::zwlr_layer_surface_v1_get_popup</ref>(Resource<sp/>*resource,<sp/>struct<sp/>::wl_resource<sp/>*popup_resource)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xdg_popup_interface" kindref="compound">XdgPopupInterface</ref><sp/>*popup<sp/>=<sp/><ref refid="class_k_win_1_1_xdg_popup_interface_1a5b40367c24f71431cf396409ba5ce071" kindref="member">XdgPopupInterface::get</ref>(popup_resource);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xdg_popup_interface_private" kindref="compound">XdgPopupInterfacePrivate</ref><sp/>*popupPrivate<sp/>=<sp/><ref refid="class_k_win_1_1_xdg_popup_interface_private_1a290c74d57e4f6cb5abd2f1ea74069e25" kindref="member">XdgPopupInterfacePrivate::get</ref>(popup);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(popup-&gt;<ref refid="class_k_win_1_1_xdg_popup_interface_1ae06e8330c4d14ae707331e676d7a9ce4" kindref="member">isConfigured</ref>())<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_invalid_surface_state,<sp/></highlight><highlight class="stringliteral">&quot;xdg_popup<sp/>surface<sp/>is<sp/>already<sp/>configured&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>popupPrivate-&gt;<ref refid="class_k_win_1_1_xdg_popup_interface_private_1a632ef6af187854e207625c0d354be222" kindref="member">parentSurface</ref><sp/>=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae16a5a668b6053fab221feb386502dc6" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="class_k_win_1_1_layer_surface_v1_interface_private_1a54c6ff3b1e716032511f5addfc5e3be9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a54c6ff3b1e716032511f5addfc5e3be9" kindref="member">LayerSurfaceV1InterfacePrivate::zwlr_layer_surface_v1_ack_configure</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>serial)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.serials.contains(serial))<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_invalid_surface_state,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>configure<sp/>serial<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>serial);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.serials.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>head<sp/>=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.serials.takeFirst();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head<sp/>==<sp/>serial)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.closed)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.acknowledgedConfigure<sp/>=<sp/>serial;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="class_k_win_1_1_layer_surface_v1_interface_private_1a8d8b24690c7d93eaafc2a4ca338fbeb0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a8d8b24690c7d93eaafc2a4ca338fbeb0" kindref="member">LayerSurfaceV1InterfacePrivate::zwlr_layer_surface_v1_destroy</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="class_k_win_1_1_layer_surface_v1_interface_private_1a2fcc3a10881e2dacf07a95c32e35bc76" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a2fcc3a10881e2dacf07a95c32e35bc76" kindref="member">LayerSurfaceV1InterfacePrivate::zwlr_layer_surface_v1_set_layer</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>layer)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(layer<sp/>&gt;<sp/>LayerShellV1InterfacePrivate::layer_overlay))<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>LayerShellV1InterfacePrivate::error_invalid_layer,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>layer<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>layer);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref>.layer<sp/>=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64" kindref="member">LayerSurfaceV1Interface::Layer</ref>(layer);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="class_k_win_1_1_layer_surface_v1_interface_private_1a482fb4d30368f0b466aed6ec2a6161dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a482fb4d30368f0b466aed6ec2a6161dc" kindref="member">LayerSurfaceV1InterfacePrivate::apply</ref>(<ref refid="struct_k_win_1_1_layer_surface_v1_commit" kindref="compound">LayerSurfaceV1Commit</ref><sp/>*commit)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.closed)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1abf931382f8118bb0ef504f43c45bd63e" kindref="member">acknowledgedConfigure</ref>.has_value())<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" kindref="member">q</ref>-&gt;configureAcknowledged(commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1abf931382f8118bb0ef504f43c45bd63e" kindref="member">acknowledgedConfigure</ref>.value());</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae16a5a668b6053fab221feb386502dc6" kindref="member">surface</ref>-&gt;isMapped()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.configured))<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource()-&gt;handle,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_invalid_surface_state,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;a<sp/>buffer<sp/>has<sp/>been<sp/>attached<sp/>to<sp/>a<sp/>layer<sp/>surface<sp/>prior<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;to<sp/>the<sp/>first<sp/>layer_surface.configure<sp/>event&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a7af646b1b9293039ad258c36ef7a2570" kindref="member">desiredSize</ref><sp/>&amp;&amp;<sp/>commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a7af646b1b9293039ad258c36ef7a2570" kindref="member">desiredSize</ref>-&gt;width()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Qt::Edges<sp/>anchor<sp/>=<sp/>commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a8df966497da8220b94765b4e5b464332" kindref="member">anchor</ref>.value_or(<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.anchor);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(anchor<sp/>&amp;<sp/>Qt::LeftEdge)<sp/>||<sp/>!(anchor<sp/>&amp;<sp/>Qt::RightEdge))<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource()-&gt;handle,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_invalid_size,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>layer<sp/>surface<sp/>has<sp/>a<sp/>width<sp/>of<sp/>0<sp/>but<sp/>its<sp/>anchor<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;doesn&apos;t<sp/>include<sp/>the<sp/>left<sp/>and<sp/>the<sp/>right<sp/>screen<sp/>edge&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a7af646b1b9293039ad258c36ef7a2570" kindref="member">desiredSize</ref><sp/>&amp;&amp;<sp/>commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a7af646b1b9293039ad258c36ef7a2570" kindref="member">desiredSize</ref>-&gt;height()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Qt::Edges<sp/>anchor<sp/>=<sp/>commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a8df966497da8220b94765b4e5b464332" kindref="member">anchor</ref>.value_or(<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.anchor);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(anchor<sp/>&amp;<sp/>Qt::TopEdge)<sp/>||<sp/>!(anchor<sp/>&amp;<sp/>Qt::BottomEdge))<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource()-&gt;handle,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_invalid_size,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>layer<sp/>surface<sp/>has<sp/>a<sp/>height<sp/>of<sp/>0<sp/>but<sp/>its<sp/>anchor<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;doesn&apos;t<sp/>include<sp/>the<sp/>top<sp/>and<sp/>the<sp/>bottom<sp/>screen<sp/>edge&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1af73c9ee406d5d9925475ced8cae29e5c" kindref="member">exclusiveEdge</ref>.has_value()<sp/>||<sp/>commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a8df966497da8220b94765b4e5b464332" kindref="member">anchor</ref>.has_value())<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>exclusiveEdge<sp/>=<sp/>commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1af73c9ee406d5d9925475ced8cae29e5c" kindref="member">exclusiveEdge</ref>.value_or(<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.exclusiveEdge);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>anchor<sp/>=<sp/>commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a8df966497da8220b94765b4e5b464332" kindref="member">anchor</ref>.value_or(<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.anchor);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exclusiveEdge<sp/>&amp;&amp;<sp/>!(exclusiveEdge<sp/>&amp;<sp/>anchor))<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource()-&gt;handle,<sp/>error_invalid_exclusive_edge,<sp/></highlight><highlight class="stringliteral">&quot;Exclusive<sp/>edge<sp/>is<sp/>not<sp/>of<sp/>the<sp/>anchors&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>detect<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae16a5a668b6053fab221feb386502dc6" kindref="member">surface</ref>-&gt;isMapped()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.firstBufferAttached)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state" kindref="compound">LayerSurfaceV1State</ref>();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" kindref="member">pending</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_layer_surface_v1_commit" kindref="compound">LayerSurfaceV1Commit</ref>();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_extension_1a8da10b95bcea16f5b41b785727d56814" kindref="member">stashed</ref>.clear();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_layer_surface_v1_state" kindref="compound">LayerSurfaceV1State</ref><sp/>previous<sp/>=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.committed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Must<sp/>set<sp/>the<sp/>committed<sp/>state<sp/>before<sp/>emitting<sp/>any<sp/>signals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1ae16a5a668b6053fab221feb386502dc6" kindref="member">surface</ref>-&gt;isMapped())<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.firstBufferAttached<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1ab2373455c2f18e87131fccb816f1fc26" kindref="member">layer</ref>.has_value())<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.layer<sp/>=<sp/>commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1ab2373455c2f18e87131fccb816f1fc26" kindref="member">layer</ref>.value();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a8df966497da8220b94765b4e5b464332" kindref="member">anchor</ref>.has_value())<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.anchor<sp/>=<sp/>commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a8df966497da8220b94765b4e5b464332" kindref="member">anchor</ref>.value();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a07e497b45bcededfbdba288f93d5c883" kindref="member">margins</ref>.has_value())<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.margins<sp/>=<sp/>commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a07e497b45bcededfbdba288f93d5c883" kindref="member">margins</ref>.value();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a7af646b1b9293039ad258c36ef7a2570" kindref="member">desiredSize</ref>.has_value())<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.desiredSize<sp/>=<sp/>commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a7af646b1b9293039ad258c36ef7a2570" kindref="member">desiredSize</ref>.value();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a1cc4d07d1eb2193695c34a3416495a2d" kindref="member">exclusiveZone</ref>.has_value())<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.exclusiveZone<sp/>=<sp/>commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1a1cc4d07d1eb2193695c34a3416495a2d" kindref="member">exclusiveZone</ref>.value();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1af73c9ee406d5d9925475ced8cae29e5c" kindref="member">exclusiveEdge</ref>.has_value())<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.exclusiveEdge<sp/>=<sp/>commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1af73c9ee406d5d9925475ced8cae29e5c" kindref="member">exclusiveEdge</ref>.value();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1aab85d38f9685490013b84ae25d668d42" kindref="member">acceptsFocus</ref>.has_value())<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.acceptsFocus<sp/>=<sp/>commit-&gt;<ref refid="struct_k_win_1_1_layer_surface_v1_commit_1aab85d38f9685490013b84ae25d668d42" kindref="member">acceptsFocus</ref>.value();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous.<ref refid="struct_k_win_1_1_layer_surface_v1_state_1a0ae0336bbcb4860bedcbcb53cd97e74a" kindref="member">acceptsFocus</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.acceptsFocus)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" kindref="member">q</ref>-&gt;acceptsFocusChanged();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous.<ref refid="struct_k_win_1_1_layer_surface_v1_state_1ad0567455a8ba8aed19ea34423c00e067" kindref="member">layer</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.layer)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" kindref="member">q</ref>-&gt;layerChanged();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous.<ref refid="struct_k_win_1_1_layer_surface_v1_state_1ae562d72f358f8d2684661ffb023de618" kindref="member">anchor</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.anchor)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" kindref="member">q</ref>-&gt;anchorChanged();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous.<ref refid="struct_k_win_1_1_layer_surface_v1_state_1a0d01029c983d2b804b7b5830b9d9bf7c" kindref="member">desiredSize</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.desiredSize)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" kindref="member">q</ref>-&gt;desiredSizeChanged();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous.<ref refid="struct_k_win_1_1_layer_surface_v1_state_1afce885b2970a496d7eccfd3cf651db0e" kindref="member">exclusiveZone</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.exclusiveZone)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" kindref="member">q</ref>-&gt;exclusiveZoneChanged();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous.<ref refid="struct_k_win_1_1_layer_surface_v1_state_1adb8bb81f07b0c85494ed3b817d5e959f" kindref="member">margins</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1af93aec909468695797a1b833746fc854" kindref="member">state</ref>.margins)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private_1a0849acbe411e329fef5bbcc713f278bc" kindref="member">q</ref>-&gt;marginsChanged();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="class_k_win_1_1_layer_surface_v1_interface_1a68587751aa36b7008463d10656e15085" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a68587751aa36b7008463d10656e15085" kindref="member">LayerSurfaceV1Interface::LayerSurfaceV1Interface</ref>(<ref refid="class_k_win_1_1_layer_shell_v1_interface" kindref="compound">LayerShellV1Interface</ref><sp/>*shell,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_layer_surface_v1_interface_1aa35f6d919628b3b72b546e44974e0b96" kindref="member">surface</ref>,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_interface" kindref="compound">OutputInterface</ref><sp/>*<ref refid="class_k_win_1_1_layer_surface_v1_interface_1ace27995e61563c18b0faf27eb68350b6" kindref="member">output</ref>,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64" kindref="member">Layer</ref><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a4f95b3398931b1a7c4c4a8b572b4364c" kindref="member">layer</ref>,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_k_win_1_1_layer_surface_v1_interface_1ab986478264cb8e53fb6188982d07475d" kindref="member">scope</ref>,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d(new<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_private" kindref="compound">LayerSurfaceV1InterfacePrivate</ref>(this,<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1aa35f6d919628b3b72b546e44974e0b96" kindref="member">surface</ref>))</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;state.layer<sp/>=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a4f95b3398931b1a7c4c4a8b572b4364c" kindref="member">layer</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;shell<sp/>=<sp/>shell;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;output<sp/>=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1ace27995e61563c18b0faf27eb68350b6" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;scope<sp/>=<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1ab986478264cb8e53fb6188982d07475d" kindref="member">scope</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;init(resource);</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="class_k_win_1_1_layer_surface_v1_interface_1acc116a869a089484adae8e36a8018a3d" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_layer_surface_v1_interface_1acc116a869a089484adae8e36a8018a3d" kindref="member">LayerSurfaceV1Interface::~LayerSurfaceV1Interface</ref>()</highlight></codeline>
<codeline lineno="411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="class_k_win_1_1_layer_surface_v1_interface_1a9bc6d786930b4c88bf4574ee001251e3" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_role" kindref="compound">SurfaceRole</ref><sp/>*<ref refid="class_k_win_1_1_layer_surface_v1_interface_1a9bc6d786930b4c88bf4574ee001251e3" kindref="member">LayerSurfaceV1Interface::role</ref>()</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_role" kindref="compound">SurfaceRole</ref><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a9bc6d786930b4c88bf4574ee001251e3" kindref="member">role</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;layer_surface_v1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_k_win_1_1_layer_surface_v1_interface_1a9bc6d786930b4c88bf4574ee001251e3" kindref="member">role</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="class_k_win_1_1_layer_surface_v1_interface_1a802f24dea1dcf56f18a5caf958ca8f63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a802f24dea1dcf56f18a5caf958ca8f63" kindref="member">LayerSurfaceV1Interface::isCommitted</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="421"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;state.committed;</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="class_k_win_1_1_layer_surface_v1_interface_1aa35f6d919628b3b72b546e44974e0b96" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_layer_surface_v1_interface_1aa35f6d919628b3b72b546e44974e0b96" kindref="member">LayerSurfaceV1Interface::surface</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="426"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;surface;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="class_k_win_1_1_layer_surface_v1_interface_1ac5f6f32667a05e162b1c99f9569254b0" refkind="member"><highlight class="normal">Qt::Edges<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1ac5f6f32667a05e162b1c99f9569254b0" kindref="member">LayerSurfaceV1Interface::anchor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="431"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;state.anchor;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="class_k_win_1_1_layer_surface_v1_interface_1ac6e72e0999b1cb325213f13cc1462e24" refkind="member"><highlight class="normal">QSize<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1ac6e72e0999b1cb325213f13cc1462e24" kindref="member">LayerSurfaceV1Interface::desiredSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="436"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;state.desiredSize;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="class_k_win_1_1_layer_surface_v1_interface_1a3f66223511823ca47143e085dfce9382" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a3f66223511823ca47143e085dfce9382" kindref="member">LayerSurfaceV1Interface::acceptsFocus</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="441"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;state.acceptsFocus;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="class_k_win_1_1_layer_surface_v1_interface_1a4f95b3398931b1a7c4c4a8b572b4364c" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64" kindref="member">LayerSurfaceV1Interface::Layer</ref><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a4f95b3398931b1a7c4c4a8b572b4364c" kindref="member">LayerSurfaceV1Interface::layer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="446"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;state.layer;</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="class_k_win_1_1_layer_surface_v1_interface_1a76bb59ca0995b1eb7af289f42b434aaf" refkind="member"><highlight class="normal">QMargins<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a76bb59ca0995b1eb7af289f42b434aaf" kindref="member">LayerSurfaceV1Interface::margins</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="451"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;state.margins;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="class_k_win_1_1_layer_surface_v1_interface_1a63d175e9e2ceabbe70877ea0fdcf95c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a63d175e9e2ceabbe70877ea0fdcf95c0" kindref="member">LayerSurfaceV1Interface::leftMargin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="456"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;state.margins.left();</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="class_k_win_1_1_layer_surface_v1_interface_1a6ad324d128c31bf7ec1502ff5aa25087" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a6ad324d128c31bf7ec1502ff5aa25087" kindref="member">LayerSurfaceV1Interface::topMargin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="461"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;state.margins.top();</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="class_k_win_1_1_layer_surface_v1_interface_1a51edb11905d7243d91f6737ab553af3f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a51edb11905d7243d91f6737ab553af3f" kindref="member">LayerSurfaceV1Interface::rightMargin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="466"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;state.margins.right();</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="class_k_win_1_1_layer_surface_v1_interface_1af0e8679c52ed1f811a49826d946fc4fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1af0e8679c52ed1f811a49826d946fc4fa" kindref="member">LayerSurfaceV1Interface::bottomMargin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="471"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;state.margins.bottom();</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="class_k_win_1_1_layer_surface_v1_interface_1a2e88aadf210b2b45f3c6bfe584642135" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a2e88aadf210b2b45f3c6bfe584642135" kindref="member">LayerSurfaceV1Interface::exclusiveZone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="476"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;state.exclusiveZone;</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="class_k_win_1_1_layer_surface_v1_interface_1a6a6fa22324b27ef484326c84101fb59c" refkind="member"><highlight class="normal">Qt::Edge<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a6a6fa22324b27ef484326c84101fb59c" kindref="member">LayerSurfaceV1Interface::exclusiveEdge</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="481"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_layer_surface_v1_interface_1a2e88aadf210b2b45f3c6bfe584642135" kindref="member">exclusiveZone</ref>()<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Qt::Edge();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;state.exclusiveEdge)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;state.exclusiveEdge;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_layer_surface_v1_interface_1ac5f6f32667a05e162b1c99f9569254b0" kindref="member">anchor</ref>()<sp/>==<sp/>(Qt::LeftEdge<sp/>|<sp/>Qt::TopEdge<sp/>|<sp/>Qt::RightEdge)<sp/>||<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1ac5f6f32667a05e162b1c99f9569254b0" kindref="member">anchor</ref>()<sp/>==<sp/>Qt::TopEdge)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Qt::TopEdge;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_layer_surface_v1_interface_1ac5f6f32667a05e162b1c99f9569254b0" kindref="member">anchor</ref>()<sp/>==<sp/>(Qt::TopEdge<sp/>|<sp/>Qt::RightEdge<sp/>|<sp/>Qt::BottomEdge)<sp/>||<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1ac5f6f32667a05e162b1c99f9569254b0" kindref="member">anchor</ref>()<sp/>==<sp/>Qt::RightEdge)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Qt::RightEdge;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_layer_surface_v1_interface_1ac5f6f32667a05e162b1c99f9569254b0" kindref="member">anchor</ref>()<sp/>==<sp/>(Qt::RightEdge<sp/>|<sp/>Qt::BottomEdge<sp/>|<sp/>Qt::LeftEdge)<sp/>||<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1ac5f6f32667a05e162b1c99f9569254b0" kindref="member">anchor</ref>()<sp/>==<sp/>Qt::BottomEdge)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Qt::BottomEdge;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_layer_surface_v1_interface_1ac5f6f32667a05e162b1c99f9569254b0" kindref="member">anchor</ref>()<sp/>==<sp/>(Qt::BottomEdge<sp/>|<sp/>Qt::LeftEdge<sp/>|<sp/>Qt::TopEdge)<sp/>||<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1ac5f6f32667a05e162b1c99f9569254b0" kindref="member">anchor</ref>()<sp/>==<sp/>Qt::LeftEdge)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Qt::LeftEdge;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Qt::Edge();</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="class_k_win_1_1_layer_surface_v1_interface_1ace27995e61563c18b0faf27eb68350b6" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_interface" kindref="compound">OutputInterface</ref><sp/>*<ref refid="class_k_win_1_1_layer_surface_v1_interface_1ace27995e61563c18b0faf27eb68350b6" kindref="member">LayerSurfaceV1Interface::output</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="506"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;output;</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="class_k_win_1_1_layer_surface_v1_interface_1ab986478264cb8e53fb6188982d07475d" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1ab986478264cb8e53fb6188982d07475d" kindref="member">LayerSurfaceV1Interface::scope</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="511"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;scope;</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="class_k_win_1_1_layer_surface_v1_interface_1afbc469e8f03db5ccf20cb43ad087c2be" refkind="member"><highlight class="normal">quint32<sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1afbc469e8f03db5ccf20cb43ad087c2be" kindref="member">LayerSurfaceV1Interface::sendConfigure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;state.closed)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>configure<sp/>a<sp/>closed<sp/>layer<sp/>shell<sp/>surface&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>serial<sp/>=<sp/>d-&gt;shell-&gt;<ref refid="class_k_win_1_1_output_interface_1aaf80d126c669a7d739cb04bbc013be0c" kindref="member">display</ref>()-&gt;<ref refid="class_k_win_1_1_display_1a88d04e81a3c1a696bae7fca6426fabcc" kindref="member">nextSerial</ref>();</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;state.serials<sp/>&lt;&lt;<sp/>serial;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;send_configure(serial,<sp/>size.width(),<sp/>size.height());</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;state.configured<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>serial;</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531" refid="class_k_win_1_1_layer_surface_v1_interface_1a025112c7806ee82773a275e255b1c0c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a025112c7806ee82773a275e255b1c0c1" kindref="member">LayerSurfaceV1Interface::sendClosed</ref>()</highlight></codeline>
<codeline lineno="532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;state.closed)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_closed();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;state.closed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_layershell_v1.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/layershell_v1.cpp"/>
  </compounddef>
</doxygen>
