<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="test__gestures_8cpp" kind="file" language="C++">
    <compoundname>test_gestures.cpp</compoundname>
    <includes refid="gestures_8h" local="yes">gestures.h</includes>
    <includes local="no">QSignalSpy</includes>
    <includes local="no">QTest</includes>
    <includes local="no">QtWidgets/qaction.h</includes>
    <includes local="no">iostream</includes>
    <includes local="yes">test_gestures.moc</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/autotests/test_gestures.cpp</label>
        <link refid="test__gestures_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gestures.h</label>
        <link refid="gestures_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>QCoreApplication</label>
      </node>
      <node id="6">
        <label>QImage</label>
      </node>
      <node id="11">
        <label>QList</label>
      </node>
      <node id="12">
        <label>QMap</label>
      </node>
      <node id="13">
        <label>QObject</label>
      </node>
      <node id="7">
        <label>QPoint</label>
      </node>
      <node id="14">
        <label>QPointF</label>
      </node>
      <node id="15">
        <label>QSignalSpy</label>
      </node>
      <node id="16">
        <label>QTest</label>
      </node>
      <node id="8">
        <label>QVariant</label>
      </node>
      <node id="9">
        <label>QVector2D</label>
      </node>
      <node id="17">
        <label>QtWidgets/qaction.h</label>
      </node>
      <node id="4">
        <label>config-kwin.h</label>
      </node>
      <node id="18">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>kwin_export.h</label>
      </node>
      <node id="19">
        <label>test_gestures.moc</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_gesture_test" prot="public">GestureTest</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="test__gestures_8cpp_1a72df7dd0f2376f295b0fc376df093efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_METATYPE</definition>
        <argsstring>(SwipeDirection)</argsstring>
        <name>Q_DECLARE_METATYPE</name>
        <param>
          <type><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/test_gestures.cpp" line="18" column="1" declfile="kwin/autotests/test_gestures.cpp" declline="18" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="test__gestures_8cpp_1a42eb6f91417904e27ac5f04067ea3d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_METATYPE</definition>
        <argsstring>(PinchDirection)</argsstring>
        <name>Q_DECLARE_METATYPE</name>
        <param>
          <type><ref refid="namespace_k_win_1a8852f83038eda36bc255d8f5f3baae05" kindref="member">PinchDirection</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/test_gestures.cpp" line="19" column="1" declfile="kwin/autotests/test_gestures.cpp" declline="19" declcolumn="1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2017<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gestures_8h" kindref="compound">gestures.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSignalSpy&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtWidgets/qaction.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="test__gestures_8cpp_1a72df7dd0f2376f295b0fc376df093efd" refkind="member"><highlight class="normal"><ref refid="test__gestures_8cpp_1a72df7dd0f2376f295b0fc376df093efd" kindref="member">Q_DECLARE_METATYPE</ref>(<ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref>);</highlight></codeline>
<codeline lineno="19" refid="test__gestures_8cpp_1a42eb6f91417904e27ac5f04067ea3d60" refkind="member"><highlight class="normal"><ref refid="test__gestures_8cpp_1a72df7dd0f2376f295b0fc376df093efd" kindref="member">Q_DECLARE_METATYPE</ref>(<ref refid="namespace_k_win_1a8852f83038eda36bc255d8f5f3baae05" kindref="member">PinchDirection</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_gesture_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gesture_test" kindref="compound">GestureTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Q_SLOTS:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeMinFinger_data();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeMinFinger();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testPinchMinFinger_data();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testPinchMinFinger();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeMaxFinger_data();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeMaxFinger();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testPinchMaxFinger_data();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testPinchMaxFinger();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeDirection_data();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeDirection();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testPinchDirection_data();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testPinchDirection();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swipe<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMinimumX_data();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMinimumX();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMinimumY_data();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMinimumY();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMaximumX_data();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMaximumX();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMaximumY_data();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMaximumY();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testStartGeometry();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swipe<sp/>and<sp/>pinch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSetMinimumDelta();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMinimumDeltaReached_data();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMinimumDeltaReached();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMinimumScaleDelta();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testUnregisterSwipeCancels();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testUnregisterPinchCancels();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testDeleteSwipeCancels();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeCancel_data();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeCancel();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeUpdateTrigger_data();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeUpdateTrigger();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeMinFingerStart_data();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeMinFingerStart();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeMaxFingerStart_data();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeMaxFingerStart();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testNotEmitCallbacksBeforeDirectionDecided();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swipe<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeGeometryStart_data();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwipeGeometryStart();</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeMinFinger_data()</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;uint&gt;(</highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;uint&gt;(</highlight><highlight class="stringliteral">&quot;expectedCount&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>0u<sp/>&lt;&lt;<sp/>0u;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>1u<sp/>&lt;&lt;<sp/>1u;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;10&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>10u<sp/>&lt;&lt;<sp/>10u;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeMinFinger()</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>swipeGesture;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1ae85ef68d8e7e8e8374b3d450d6fa44a1" kindref="member">minimumFingerCountIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1a603127fe61e01e49987cf6d339751203" kindref="member">minimumFingerCount</ref>(),<sp/>0u);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(uint,<sp/>count);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1aa4582655a570eea6f04002a954ab1277" kindref="member">setMinimumFingerCount</ref>(count);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1ae85ef68d8e7e8e8374b3d450d6fa44a1" kindref="member">minimumFingerCountIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>QTEST(swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1a603127fe61e01e49987cf6d339751203" kindref="member">minimumFingerCount</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;expectedCount&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1aa4582655a570eea6f04002a954ab1277" kindref="member">setMinimumFingerCount</ref>(0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1ae85ef68d8e7e8e8374b3d450d6fa44a1" kindref="member">minimumFingerCountIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1a603127fe61e01e49987cf6d339751203" kindref="member">minimumFingerCount</ref>(),<sp/>0u);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testPinchMinFinger_data()</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;uint&gt;(</highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;uint&gt;(</highlight><highlight class="stringliteral">&quot;expectedCount&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>0u<sp/>&lt;&lt;<sp/>0u;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>1u<sp/>&lt;&lt;<sp/>1u;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;10&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>10u<sp/>&lt;&lt;<sp/>10u;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testPinchMinFinger()</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>PinchGesture<sp/>pinchGesture;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1a47b144c8f5c1bb74b7f62a0b641f7228" kindref="member">minimumFingerCountIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1a18f83c175b0a70f3569f873827f28415" kindref="member">minimumFingerCount</ref>(),<sp/>0u);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(uint,<sp/>count);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1a98e0f8a82c7cf7b18c62cfa5b08e04e4" kindref="member">setMinimumFingerCount</ref>(count);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1a47b144c8f5c1bb74b7f62a0b641f7228" kindref="member">minimumFingerCountIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>QTEST(pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1a18f83c175b0a70f3569f873827f28415" kindref="member">minimumFingerCount</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;expectedCount&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1a98e0f8a82c7cf7b18c62cfa5b08e04e4" kindref="member">setMinimumFingerCount</ref>(0);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1a47b144c8f5c1bb74b7f62a0b641f7228" kindref="member">minimumFingerCountIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1a18f83c175b0a70f3569f873827f28415" kindref="member">minimumFingerCount</ref>(),<sp/>0u);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeMaxFinger_data()</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;uint&gt;(</highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;uint&gt;(</highlight><highlight class="stringliteral">&quot;expectedCount&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>0u<sp/>&lt;&lt;<sp/>0u;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>1u<sp/>&lt;&lt;<sp/>1u;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;10&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>10u<sp/>&lt;&lt;<sp/>10u;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeMaxFinger()</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a22f158cf56322541e491750ee6f952dc" kindref="member">maximumFingerCountIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a7720ab93da717b4ce3c229eb52ee0b33" kindref="member">maximumFingerCount</ref>(),<sp/>0u);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(uint,<sp/>count);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1ac519e70422085a3f0104dbcb117f0161" kindref="member">setMaximumFingerCount</ref>(count);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a22f158cf56322541e491750ee6f952dc" kindref="member">maximumFingerCountIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>QTEST(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a7720ab93da717b4ce3c229eb52ee0b33" kindref="member">maximumFingerCount</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;expectedCount&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1ac519e70422085a3f0104dbcb117f0161" kindref="member">setMaximumFingerCount</ref>(0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a22f158cf56322541e491750ee6f952dc" kindref="member">maximumFingerCountIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a7720ab93da717b4ce3c229eb52ee0b33" kindref="member">maximumFingerCount</ref>(),<sp/>0u);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testPinchMaxFinger_data()</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;uint&gt;(</highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;uint&gt;(</highlight><highlight class="stringliteral">&quot;expectedCount&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>0u<sp/>&lt;&lt;<sp/>0u;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>1u<sp/>&lt;&lt;<sp/>1u;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;10&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>10u<sp/>&lt;&lt;<sp/>10u;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testPinchMaxFinger()</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>PinchGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_pinch_gesture_1aa25099838a17f606acd5cc7beba41fd6" kindref="member">maximumFingerCountIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_pinch_gesture_1af3414c728230973c1aff9a8cda4e7754" kindref="member">maximumFingerCount</ref>(),<sp/>0u);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(uint,<sp/>count);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_pinch_gesture_1af0a756cc72dcdff8f908037a8c7b0311" kindref="member">setMaximumFingerCount</ref>(count);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_pinch_gesture_1aa25099838a17f606acd5cc7beba41fd6" kindref="member">maximumFingerCountIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>QTEST(gesture.<ref refid="class_k_win_1_1_pinch_gesture_1af3414c728230973c1aff9a8cda4e7754" kindref="member">maximumFingerCount</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;expectedCount&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_pinch_gesture_1af0a756cc72dcdff8f908037a8c7b0311" kindref="member">setMaximumFingerCount</ref>(0);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_pinch_gesture_1aa25099838a17f606acd5cc7beba41fd6" kindref="member">maximumFingerCountIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_pinch_gesture_1af3414c728230973c1aff9a8cda4e7754" kindref="member">maximumFingerCount</ref>(),<sp/>0u);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeDirection_data()</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;SwipeDirection&gt;(</highlight><highlight class="stringliteral">&quot;swipe_direction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Up&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Up;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Left;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Right;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Down&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Down;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeDirection()</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a0fda85157c9ee55031d82510bb46df9e" kindref="member">direction</ref>(),<sp/>SwipeDirection::Down);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(<ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref>,<sp/>swipe_direction);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a09ec29a92b104228ff8dae1f6201a7a1" kindref="member">setDirection</ref>(swipe_direction);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a0fda85157c9ee55031d82510bb46df9e" kindref="member">direction</ref>(),<sp/>swipe_direction);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>to<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a09ec29a92b104228ff8dae1f6201a7a1" kindref="member">setDirection</ref>(SwipeDirection::Down);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a0fda85157c9ee55031d82510bb46df9e" kindref="member">direction</ref>(),<sp/>SwipeDirection::Down);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testPinchDirection_data()</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;PinchDirection&gt;(</highlight><highlight class="stringliteral">&quot;pinch_direction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Contracting&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>PinchDirection::Contracting;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Expanding&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>PinchDirection::Expanding;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testPinchDirection()</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>PinchGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_pinch_gesture_1a96364dee329592c049a4a45c567a1f25" kindref="member">direction</ref>(),<sp/>PinchDirection::Expanding);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(<ref refid="namespace_k_win_1a8852f83038eda36bc255d8f5f3baae05" kindref="member">PinchDirection</ref>,<sp/>pinch_direction);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_pinch_gesture_1a136315975ce0d04edf13bd2633bd74c6" kindref="member">setDirection</ref>(pinch_direction);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_pinch_gesture_1a96364dee329592c049a4a45c567a1f25" kindref="member">direction</ref>(),<sp/>pinch_direction);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>to<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_pinch_gesture_1a136315975ce0d04edf13bd2633bd74c6" kindref="member">setDirection</ref>(PinchDirection::Expanding);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_pinch_gesture_1a96364dee329592c049a4a45c567a1f25" kindref="member">direction</ref>(),<sp/>PinchDirection::Expanding);</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testMinimumX_data()</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;min&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>-1;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testMinimumX()</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1abf722c9faade6251a48058ecb4f3d86f" kindref="member">minimumX</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1aefd3324c2933ff206e02cf2dbcebb8da" kindref="member">minimumXIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>min);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a43a7049208b64d08bd90aaddd66697e2" kindref="member">setMinimumX</ref>(min);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1abf722c9faade6251a48058ecb4f3d86f" kindref="member">minimumX</ref>(),<sp/>min);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1aefd3324c2933ff206e02cf2dbcebb8da" kindref="member">minimumXIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testMinimumY_data()</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;min&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>-1;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testMinimumY()</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1af1591b2c543f66ab2485c77142cfd92d" kindref="member">minimumY</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1acbb79f017e658d4089a00cbac6da526b" kindref="member">minimumYIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>min);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1aaa5006ab13bd8f8207670a42a82e5169" kindref="member">setMinimumY</ref>(min);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1af1591b2c543f66ab2485c77142cfd92d" kindref="member">minimumY</ref>(),<sp/>min);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1acbb79f017e658d4089a00cbac6da526b" kindref="member">minimumYIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testMaximumX_data()</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;max&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>-1;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testMaximumX()</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1afef92ea92ce063f6138837a118c46938" kindref="member">maximumX</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a6e65bf8199f611c8df369d185e89fb83" kindref="member">maximumXIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>max);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a9c5dfc2d6aaf2bf98321977bb0517cdd" kindref="member">setMaximumX</ref>(max);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1afef92ea92ce063f6138837a118c46938" kindref="member">maximumX</ref>(),<sp/>max);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a6e65bf8199f611c8df369d185e89fb83" kindref="member">maximumXIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testMaximumY_data()</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;max&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>-1;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testMaximumY()</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1aa831ef494b8b293d8212699080e812a0" kindref="member">maximumY</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a513df822e45b056326fde8e3fcf8a743" kindref="member">maximumYIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>max);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a0a99f4c568a58ac6b9a18c6af36a7d5a" kindref="member">setMaximumY</ref>(max);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1aa831ef494b8b293d8212699080e812a0" kindref="member">maximumY</ref>(),<sp/>max);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a513df822e45b056326fde8e3fcf8a743" kindref="member">maximumYIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testStartGeometry()</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1adbe8d9f15f0c7ec1c771434fd113874d" kindref="member">setStartGeometry</ref>(QRect(1,<sp/>2,<sp/>20,<sp/>30));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1aefd3324c2933ff206e02cf2dbcebb8da" kindref="member">minimumXIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1acbb79f017e658d4089a00cbac6da526b" kindref="member">minimumYIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a6e65bf8199f611c8df369d185e89fb83" kindref="member">maximumXIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a513df822e45b056326fde8e3fcf8a743" kindref="member">maximumYIsRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1abf722c9faade6251a48058ecb4f3d86f" kindref="member">minimumX</ref>(),<sp/>1);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1af1591b2c543f66ab2485c77142cfd92d" kindref="member">minimumY</ref>(),<sp/>2);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1afef92ea92ce063f6138837a118c46938" kindref="member">maximumX</ref>(),<sp/>21);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1aa831ef494b8b293d8212699080e812a0" kindref="member">maximumY</ref>(),<sp/>32);</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSetMinimumDelta()</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>swipeGesture;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1a30ea6b02991477ee2d45bb2a29be7855" kindref="member">isMinimumDeltaRelevant</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1a62c1e5b0949cc25b0908f452d4213340" kindref="member">minimumDelta</ref>(),<sp/>QPointF());</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1ab3f3d690006ce0feb76bc273c25385ec" kindref="member">minimumDeltaReached</ref>(QPointF()),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1aab736ee68f233d62dd293aa99f7e1110" kindref="member">setMinimumDelta</ref>(QPointF(2,<sp/>3));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1a30ea6b02991477ee2d45bb2a29be7855" kindref="member">isMinimumDeltaRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1a62c1e5b0949cc25b0908f452d4213340" kindref="member">minimumDelta</ref>(),<sp/>QPointF(2,<sp/>3));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1ab3f3d690006ce0feb76bc273c25385ec" kindref="member">minimumDeltaReached</ref>(QPointF()),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(swipeGesture.<ref refid="class_k_win_1_1_swipe_gesture_1ab3f3d690006ce0feb76bc273c25385ec" kindref="member">minimumDeltaReached</ref>(QPointF(2,<sp/>3)),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>PinchGesture<sp/>pinchGesture;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1a4fa07139e000b87e2a109ab5ecef1dd0" kindref="member">isMinimumScaleDeltaRelevant</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1af647bda3f92ce2db6066946225ba8392" kindref="member">minimumScaleDelta</ref>(),<sp/>DEFAULT_UNIT_SCALE_DELTA);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1a357ac17facac69f2763c8c7df506f26e" kindref="member">minimumScaleDeltaReached</ref>(1.25),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1a0905b91b7a68dddf03384bc6f7f367d5" kindref="member">setMinimumScaleDelta</ref>(.5);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1a4fa07139e000b87e2a109ab5ecef1dd0" kindref="member">isMinimumScaleDeltaRelevant</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1af647bda3f92ce2db6066946225ba8392" kindref="member">minimumScaleDelta</ref>(),<sp/>.5);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1a357ac17facac69f2763c8c7df506f26e" kindref="member">minimumScaleDeltaReached</ref>(1.24),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pinchGesture.<ref refid="class_k_win_1_1_pinch_gesture_1a357ac17facac69f2763c8c7df506f26e" kindref="member">minimumScaleDeltaReached</ref>(1.5),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testMinimumDeltaReached_data()</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;SwipeDirection&gt;(</highlight><highlight class="stringliteral">&quot;direction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QPointF&gt;(</highlight><highlight class="stringliteral">&quot;minimumDelta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QPointF&gt;(</highlight><highlight class="stringliteral">&quot;delta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;reached&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;qreal&gt;(</highlight><highlight class="stringliteral">&quot;progress&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Up<sp/>(more)&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Up<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>-30)<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>-40)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>1.0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Up<sp/>(exact)&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Up<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>-30)<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>-30)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>1.0;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Up<sp/>(less)&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Up<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>-30)<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>-29)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>29.0<sp/>/<sp/>30.0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>(more)&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Left<sp/>&lt;&lt;<sp/>QPointF(-30,<sp/>-30)<sp/>&lt;&lt;<sp/>QPointF(-40,<sp/>20)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>1.0;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>(exact)&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Left<sp/>&lt;&lt;<sp/>QPointF(-30,<sp/>-40)<sp/>&lt;&lt;<sp/>QPointF(-30,<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>1.0;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>(less)&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Left<sp/>&lt;&lt;<sp/>QPointF(-30,<sp/>-30)<sp/>&lt;&lt;<sp/>QPointF(-29,<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>29.0<sp/>/<sp/>30.0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>(more)&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Right<sp/>&lt;&lt;<sp/>QPointF(30,<sp/>-30)<sp/>&lt;&lt;<sp/>QPointF(40,<sp/>20)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>1.0;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>(exact)&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Right<sp/>&lt;&lt;<sp/>QPointF(30,<sp/>-40)<sp/>&lt;&lt;<sp/>QPointF(30,<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>1.0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>(less)&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Right<sp/>&lt;&lt;<sp/>QPointF(30,<sp/>-30)<sp/>&lt;&lt;<sp/>QPointF(29,<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>29.0<sp/>/<sp/>30.0;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Down<sp/>(more)&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Down<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>30)<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>40)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>1.0;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Down<sp/>(exact)&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Down<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>30)<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>30)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>1.0;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Down<sp/>(less)&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Down<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>30)<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>29)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>29.0<sp/>/<sp/>30.0;</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testMinimumDeltaReached()</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>GestureRecognizer<sp/>recognizer;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swipe<sp/>gesture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(<ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref>,<sp/>direction);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a09ec29a92b104228ff8dae1f6201a7a1" kindref="member">setDirection</ref>(direction);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QPointF,<sp/>minimumDelta);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1aab736ee68f233d62dd293aa99f7e1110" kindref="member">setMinimumDelta</ref>(minimumDelta);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QPointF,<sp/>delta);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>reached);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_swipe_gesture_1ab3f3d690006ce0feb76bc273c25385ec" kindref="member">minimumDeltaReached</ref>(delta),<sp/>reached);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a8d777169188f8ee7935dc2c36154361b" kindref="member">registerSwipeGesture</ref>(&amp;gesture);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>startedSpy(&amp;gesture,<sp/>&amp;SwipeGesture::started);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>triggeredSpy(&amp;gesture,<sp/>&amp;SwipeGesture::triggered);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>cancelledSpy(&amp;gesture,<sp/>&amp;SwipeGesture::cancelled);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>progressSpy(&amp;gesture,<sp/>&amp;<ref refid="class_k_win_1_1_swipe_gesture_1a5a6bfb66418846357933709cc33127ee" kindref="member">SwipeGesture::progress</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">startSwipeGesture</ref>(1);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(startedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(triggeredSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(progressSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a39aacf2c7d3d096208aa6bd3012ae3ff" kindref="member">updateSwipeGesture</ref>(delta);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(startedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(triggeredSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(progressSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>QTEST(progressSpy.first().first().value&lt;qreal&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;progress&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a112d2f0856f5019301f9a2681e199b67" kindref="member">endSwipeGesture</ref>();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(startedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(progressSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(triggeredSpy.isEmpty(),<sp/>!reached);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.isEmpty(),<sp/>reached);</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testMinimumScaleDelta()</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pinch<sp/>gesture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>PinchGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_pinch_gesture_1a136315975ce0d04edf13bd2633bd74c6" kindref="member">setDirection</ref>(PinchDirection::Contracting);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_pinch_gesture_1a0905b91b7a68dddf03384bc6f7f367d5" kindref="member">setMinimumScaleDelta</ref>(.5);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_pinch_gesture_1a98e0f8a82c7cf7b18c62cfa5b08e04e4" kindref="member">setMinimumFingerCount</ref>(3);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_pinch_gesture_1af0a756cc72dcdff8f908037a8c7b0311" kindref="member">setMaximumFingerCount</ref>(4);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_pinch_gesture_1a357ac17facac69f2763c8c7df506f26e" kindref="member">minimumScaleDeltaReached</ref>(1.25),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(gesture.<ref refid="class_k_win_1_1_pinch_gesture_1a357ac17facac69f2763c8c7df506f26e" kindref="member">minimumScaleDeltaReached</ref>(1.5),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>GestureRecognizer<sp/>recognizer;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1abc49c6bc54a209fa0150c8693a3bc5d7" kindref="member">registerPinchGesture</ref>(&amp;gesture);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>startedSpy(&amp;gesture,<sp/>&amp;PinchGesture::started);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>triggeredSpy(&amp;gesture,<sp/>&amp;PinchGesture::triggered);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>cancelledSpy(&amp;gesture,<sp/>&amp;PinchGesture::cancelled);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>progressSpy(&amp;gesture,<sp/>&amp;PinchGesture::progress);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a03b981bc00b890a6a63e5c5560f3a81e" kindref="member">startPinchGesture</ref>(4);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(startedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(triggeredSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(progressSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testUnregisterSwipeCancels()</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>GestureRecognizer<sp/>recognizer;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;SwipeGesture&gt;<sp/>gesture(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SwipeGesture);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>startedSpy(gesture.get(),<sp/>&amp;SwipeGesture::started);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>cancelledSpy(gesture.get(),<sp/>&amp;SwipeGesture::cancelled);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a8d777169188f8ee7935dc2c36154361b" kindref="member">registerSwipeGesture</ref>(gesture.get());</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">startSwipeGesture</ref>(1);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(startedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a7783ca68e31c2f7848b81a63ab595128" kindref="member">unregisterSwipeGesture</ref>(gesture.get());</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>gesture<sp/>should<sp/>not<sp/>trigger<sp/>cancel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.reset();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testUnregisterPinchCancels()</highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>GestureRecognizer<sp/>recognizer;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;PinchGesture&gt;<sp/>gesture(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PinchGesture);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>startedSpy(gesture.get(),<sp/>&amp;PinchGesture::started);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>cancelledSpy(gesture.get(),<sp/>&amp;PinchGesture::cancelled);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1abc49c6bc54a209fa0150c8693a3bc5d7" kindref="member">registerPinchGesture</ref>(gesture.get());</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a03b981bc00b890a6a63e5c5560f3a81e" kindref="member">startPinchGesture</ref>(1);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(startedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1add16741c555f410adc1986bed3f5131e" kindref="member">unregisterPinchGesture</ref>(gesture.get());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>gesture<sp/>should<sp/>not<sp/>trigger<sp/>cancel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.reset();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testDeleteSwipeCancels()</highlight></codeline>
<codeline lineno="460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>GestureRecognizer<sp/>recognizer;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;SwipeGesture&gt;<sp/>gesture(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SwipeGesture);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>startedSpy(gesture.get(),<sp/>&amp;SwipeGesture::started);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>cancelledSpy(gesture.get(),<sp/>&amp;SwipeGesture::cancelled);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a8d777169188f8ee7935dc2c36154361b" kindref="member">registerSwipeGesture</ref>(gesture.get());</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">startSwipeGesture</ref>(1);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(startedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.reset();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeCancel_data()</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;SwipeDirection&gt;(</highlight><highlight class="stringliteral">&quot;direction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Up&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Up;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Left;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Right;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Down&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Down;</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeCancel()</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>GestureRecognizer<sp/>recognizer;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;SwipeGesture&gt;<sp/>gesture(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SwipeGesture);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(<ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref>,<sp/>direction);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture-&gt;<ref refid="class_k_win_1_1_pinch_gesture_1a136315975ce0d04edf13bd2633bd74c6" kindref="member">setDirection</ref>(direction);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>startedSpy(gesture.get(),<sp/>&amp;SwipeGesture::started);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>cancelledSpy(gesture.get(),<sp/>&amp;SwipeGesture::cancelled);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>triggeredSpy(gesture.get(),<sp/>&amp;SwipeGesture::triggered);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a8d777169188f8ee7935dc2c36154361b" kindref="member">registerSwipeGesture</ref>(gesture.get());</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">startSwipeGesture</ref>(1);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(startedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ac06d90018011773dec8d56f9a8d4d4d4" kindref="member">cancelSwipeGesture</ref>();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(triggeredSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeUpdateTrigger_data()</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;SwipeDirection&gt;(</highlight><highlight class="stringliteral">&quot;direction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QPointF&gt;(</highlight><highlight class="stringliteral">&quot;delta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Up&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Up<sp/>&lt;&lt;<sp/>QPointF(2,<sp/>-3);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Left<sp/>&lt;&lt;<sp/>QPointF(-3,<sp/>1);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Right<sp/>&lt;&lt;<sp/>QPointF(20,<sp/>-19);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Down&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>SwipeDirection::Down<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>50);</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeUpdateTrigger()</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>GestureRecognizer<sp/>recognizer;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(<ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref>,<sp/>direction);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1a09ec29a92b104228ff8dae1f6201a7a1" kindref="member">setDirection</ref>(direction);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>triggeredSpy(&amp;gesture,<sp/>&amp;SwipeGesture::triggered);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>cancelledSpy(&amp;gesture,<sp/>&amp;SwipeGesture::cancelled);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a8d777169188f8ee7935dc2c36154361b" kindref="member">registerSwipeGesture</ref>(&amp;gesture);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">startSwipeGesture</ref>(1);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QPointF,<sp/>delta);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a39aacf2c7d3d096208aa6bd3012ae3ff" kindref="member">updateSwipeGesture</ref>(delta);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(triggeredSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a112d2f0856f5019301f9a2681e199b67" kindref="member">endSwipeGesture</ref>();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cancelledSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(triggeredSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeMinFingerStart_data()</highlight></codeline>
<codeline lineno="538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;uint&gt;(</highlight><highlight class="stringliteral">&quot;min&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;uint&gt;(</highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;same&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>1u<sp/>&lt;&lt;<sp/>1u<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;less&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>2u<sp/>&lt;&lt;<sp/>1u<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;more&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>1u<sp/>&lt;&lt;<sp/>2u<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeMinFingerStart()</highlight></codeline>
<codeline lineno="549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>GestureRecognizer<sp/>recognizer;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(uint,<sp/>min);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1aa4582655a570eea6f04002a954ab1277" kindref="member">setMinimumFingerCount</ref>(min);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>startedSpy(&amp;gesture,<sp/>&amp;SwipeGesture::started);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a8d777169188f8ee7935dc2c36154361b" kindref="member">registerSwipeGesture</ref>(&amp;gesture);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(uint,<sp/>count);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">startSwipeGesture</ref>(count);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>QTEST(!startedSpy.isEmpty(),<sp/></highlight><highlight class="stringliteral">&quot;started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeMaxFingerStart_data()</highlight></codeline>
<codeline lineno="564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;uint&gt;(</highlight><highlight class="stringliteral">&quot;max&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;uint&gt;(</highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;same&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>1u<sp/>&lt;&lt;<sp/>1u<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;less&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>2u<sp/>&lt;&lt;<sp/>1u<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;more&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>1u<sp/>&lt;&lt;<sp/>2u<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeMaxFingerStart()</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>GestureRecognizer<sp/>recognizer;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(uint,<sp/>max);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1ac519e70422085a3f0104dbcb117f0161" kindref="member">setMaximumFingerCount</ref>(max);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>startedSpy(&amp;gesture,<sp/>&amp;SwipeGesture::started);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a8d777169188f8ee7935dc2c36154361b" kindref="member">registerSwipeGesture</ref>(&amp;gesture);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(uint,<sp/>count);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">startSwipeGesture</ref>(count);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>QTEST(!startedSpy.isEmpty(),<sp/></highlight><highlight class="stringliteral">&quot;started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testNotEmitCallbacksBeforeDirectionDecided()</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>GestureRecognizer<sp/>recognizer;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>up;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>down;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>right;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>PinchGesture<sp/>expand;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>PinchGesture<sp/>contract;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>up.<ref refid="class_k_win_1_1_swipe_gesture_1a09ec29a92b104228ff8dae1f6201a7a1" kindref="member">setDirection</ref>(SwipeDirection::Up);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>down.<ref refid="class_k_win_1_1_swipe_gesture_1a09ec29a92b104228ff8dae1f6201a7a1" kindref="member">setDirection</ref>(SwipeDirection::Down);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>right.<ref refid="class_k_win_1_1_swipe_gesture_1a09ec29a92b104228ff8dae1f6201a7a1" kindref="member">setDirection</ref>(SwipeDirection::Right);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>expand.<ref refid="class_k_win_1_1_pinch_gesture_1a136315975ce0d04edf13bd2633bd74c6" kindref="member">setDirection</ref>(PinchDirection::Expanding);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>contract.<ref refid="class_k_win_1_1_pinch_gesture_1a136315975ce0d04edf13bd2633bd74c6" kindref="member">setDirection</ref>(PinchDirection::Contracting);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a8d777169188f8ee7935dc2c36154361b" kindref="member">registerSwipeGesture</ref>(&amp;up);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a8d777169188f8ee7935dc2c36154361b" kindref="member">registerSwipeGesture</ref>(&amp;down);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a8d777169188f8ee7935dc2c36154361b" kindref="member">registerSwipeGesture</ref>(&amp;right);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1abc49c6bc54a209fa0150c8693a3bc5d7" kindref="member">registerPinchGesture</ref>(&amp;expand);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1abc49c6bc54a209fa0150c8693a3bc5d7" kindref="member">registerPinchGesture</ref>(&amp;contract);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>upSpy(&amp;up,<sp/>&amp;<ref refid="class_k_win_1_1_swipe_gesture_1a5a6bfb66418846357933709cc33127ee" kindref="member">SwipeGesture::progress</ref>);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>downSpy(&amp;down,<sp/>&amp;<ref refid="class_k_win_1_1_swipe_gesture_1a5a6bfb66418846357933709cc33127ee" kindref="member">SwipeGesture::progress</ref>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>rightSpy(&amp;right,<sp/>&amp;<ref refid="class_k_win_1_1_swipe_gesture_1a5a6bfb66418846357933709cc33127ee" kindref="member">SwipeGesture::progress</ref>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>expandSpy(&amp;expand,<sp/>&amp;PinchGesture::progress);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>contractSpy(&amp;contract,<sp/>&amp;PinchGesture::progress);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>release<sp/>callback<sp/>until<sp/>we<sp/>know<sp/>the<sp/>direction<sp/>of<sp/>swipe<sp/>gesture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">startSwipeGesture</ref>(4);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(upSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(downSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(rightSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>up<sp/>(negative<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a39aacf2c7d3d096208aa6bd3012ae3ff" kindref="member">updateSwipeGesture</ref>(QPointF(0,<sp/>-1.5));</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(upSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(downSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(rightSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>down<sp/>(positive<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recognizer.updateSwipeGesture(QPointF(0,<sp/>0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a39aacf2c7d3d096208aa6bd3012ae3ff" kindref="member">updateSwipeGesture</ref>(QPointF(0,<sp/>3));</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(upSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(downSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(rightSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ac06d90018011773dec8d56f9a8d4d4d4" kindref="member">cancelSwipeGesture</ref>();</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">startSwipeGesture</ref>(4);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a39aacf2c7d3d096208aa6bd3012ae3ff" kindref="member">updateSwipeGesture</ref>(QPointF(1,<sp/>0));</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(upSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(downSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(rightSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ac06d90018011773dec8d56f9a8d4d4d4" kindref="member">cancelSwipeGesture</ref>();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>test<sp/>for<sp/>pinch<sp/>gestures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a03b981bc00b890a6a63e5c5560f3a81e" kindref="member">startPinchGesture</ref>(4);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(expandSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(contractSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>contracting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ab109c012b4b1d55361d776f02457e130" kindref="member">updatePinchGesture</ref>(.5,<sp/>0,<sp/>QPointF(0,<sp/>0));</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(expandSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(contractSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expanding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ab109c012b4b1d55361d776f02457e130" kindref="member">updatePinchGesture</ref>(1.5,<sp/>0,<sp/>QPointF(0,<sp/>0));</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(expandSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(contractSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeGeometryStart_data()</highlight></codeline>
<codeline lineno="660"><highlight class="normal">{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QRect&gt;(</highlight><highlight class="stringliteral">&quot;geometry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QPointF&gt;(</highlight><highlight class="stringliteral">&quot;startPos&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;top<sp/>left&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QRect(0,<sp/>0,<sp/>10,<sp/>20)<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;top<sp/>right&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QRect(0,<sp/>0,<sp/>10,<sp/>20)<sp/>&lt;&lt;<sp/>QPointF(10,<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;bottom<sp/>left&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QRect(0,<sp/>0,<sp/>10,<sp/>20)<sp/>&lt;&lt;<sp/>QPointF(0,<sp/>20)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;bottom<sp/>right&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QRect(0,<sp/>0,<sp/>10,<sp/>20)<sp/>&lt;&lt;<sp/>QPointF(10,<sp/>20)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;x<sp/>too<sp/>small&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QRect(10,<sp/>20,<sp/>30,<sp/>40)<sp/>&lt;&lt;<sp/>QPointF(9,<sp/>25)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;y<sp/>too<sp/>small&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QRect(10,<sp/>20,<sp/>30,<sp/>40)<sp/>&lt;&lt;<sp/>QPointF(25,<sp/>19)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;x<sp/>too<sp/>large&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QRect(10,<sp/>20,<sp/>30,<sp/>40)<sp/>&lt;&lt;<sp/>QPointF(41,<sp/>25)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;y<sp/>too<sp/>large&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QRect(10,<sp/>20,<sp/>30,<sp/>40)<sp/>&lt;&lt;<sp/>QPointF(25,<sp/>61)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;inside&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QRect(10,<sp/>20,<sp/>30,<sp/>40)<sp/>&lt;&lt;<sp/>QPointF(25,<sp/>25)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureTest::testSwipeGeometryStart()</highlight></codeline>
<codeline lineno="677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>GestureRecognizer<sp/>recognizer;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>SwipeGesture<sp/>gesture;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QRect,<sp/>geometry);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>gesture.<ref refid="class_k_win_1_1_swipe_gesture_1adbe8d9f15f0c7ec1c771434fd113874d" kindref="member">setStartGeometry</ref>(geometry);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>startedSpy(&amp;gesture,<sp/>&amp;SwipeGesture::started);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1a8d777169188f8ee7935dc2c36154361b" kindref="member">registerSwipeGesture</ref>(&amp;gesture);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QPointF,<sp/>startPos);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>recognizer.<ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">startSwipeGesture</ref>(startPos);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>QTEST(!startedSpy.isEmpty(),<sp/></highlight><highlight class="stringliteral">&quot;started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><ref refid="onscreennotificationtest_8cpp_1a2f6feba20c73ec66058034e36bb8f880" kindref="member">QTEST_MAIN</ref>(<ref refid="class_gesture_test" kindref="compound">GestureTest</ref>)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_gestures.moc&quot;</highlight></codeline>
    </programlisting>
    <location file="kwin/autotests/test_gestures.cpp"/>
  </compounddef>
</doxygen>
