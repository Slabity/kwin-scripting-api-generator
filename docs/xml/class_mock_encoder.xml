<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_mock_encoder" kind="class" language="C++" prot="public">
    <compoundname>MockEncoder</compoundname>
    <basecompoundref refid="class_mock_object" prot="public" virt="non-virtual">MockObject</basecompoundref>
    <includes refid="mock__drm_8h" local="no">mock_drm.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_mock_encoder_1a992e79efc5d3873bea2992404e49c5d8" prot="public" static="no" mutable="no">
        <type><ref refid="class_mock_crtc" kindref="compound">MockCrtc</ref> *</type>
        <definition>MockCrtc* MockEncoder::crtc</definition>
        <argsstring></argsstring>
        <name>crtc</name>
        <qualifiedname>MockEncoder::crtc</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="88" column="14" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_encoder_1a505c376d85f3cedb48933ff5c8ccb430" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t MockEncoder::possible_crtcs</definition>
        <argsstring></argsstring>
        <name>possible_crtcs</name>
        <qualifiedname>MockEncoder::possible_crtcs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="89" column="14" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_encoder_1afb57a33e2c572f0300809b23e92e9394" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t MockEncoder::possible_clones</definition>
        <argsstring></argsstring>
        <name>possible_clones</name>
        <qualifiedname>MockEncoder::possible_clones</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="90" column="14" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="90" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mock_encoder_1af8291b748dd54ec9c8765a99accd3cce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockEncoder::MockEncoder</definition>
        <argsstring>(MockGpu *gpu, uint32_t possible_crtcs)</argsstring>
        <name>MockEncoder</name>
        <qualifiedname>MockEncoder::MockEncoder</qualifiedname>
        <param>
          <type><ref refid="class_mock_gpu" kindref="compound">MockGpu</ref> *</type>
          <declname>gpu</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>possible_crtcs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="84" column="5" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="261" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_encoder_1a53ef69e3928a9fde8180579f245cc53b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockEncoder::MockEncoder</definition>
        <argsstring>(const MockEncoder &amp;obj)=default</argsstring>
        <name>MockEncoder</name>
        <qualifiedname>MockEncoder::MockEncoder</qualifiedname>
        <param>
          <type>const <ref refid="class_mock_encoder" kindref="compound">MockEncoder</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="85" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_encoder_1aecfa4b7611475ea013821735087dfbd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockEncoder::~MockEncoder</definition>
        <argsstring>()=default</argsstring>
        <name>~MockEncoder</name>
        <qualifiedname>MockEncoder::~MockEncoder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="86" column="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>MockEncoder</label>
        <link refid="class_mock_encoder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MockObject</label>
        <link refid="class_mock_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>MockCrtc</label>
        <link refid="class_mock_crtc"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>currentFb</edgelabel>
          <edgelabel>nextFb</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>MockEncoder</label>
        <link refid="class_mock_encoder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>crtc</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>MockFb</label>
        <link refid="class_mock_fb"/>
        <childnode refid="3" relation="usage">
          <edgelabel>gpu</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>MockGpu</label>
        <link refid="class_mock_gpu"/>
      </node>
      <node id="2">
        <label>MockObject</label>
        <link refid="class_mock_object"/>
        <childnode refid="3" relation="usage">
          <edgelabel>gpu</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/drm/mock_drm.h" line="82" column="1" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="82" bodyend="91"/>
    <listofallmembers>
      <member refid="class_mock_encoder_1a992e79efc5d3873bea2992404e49c5d8" prot="public" virt="non-virtual"><scope>MockEncoder</scope><name>crtc</name></member>
      <member refid="class_mock_object_1a76f1c2955f448959528ffc1c4872c36a" prot="public" virt="non-virtual"><scope>MockEncoder</scope><name>getProp</name></member>
      <member refid="class_mock_object_1a9529304fa4cb728bfb7a57c1327ab6cc" prot="public" virt="non-virtual"><scope>MockEncoder</scope><name>getPropId</name></member>
      <member refid="class_mock_object_1aee2a37c6a86ae20ee579900b72e04bfe" prot="public" virt="non-virtual"><scope>MockEncoder</scope><name>gpu</name></member>
      <member refid="class_mock_object_1a9578562398c7e2f643300da2bf8f745f" prot="public" virt="non-virtual"><scope>MockEncoder</scope><name>id</name></member>
      <member refid="class_mock_encoder_1af8291b748dd54ec9c8765a99accd3cce" prot="public" virt="non-virtual"><scope>MockEncoder</scope><name>MockEncoder</name></member>
      <member refid="class_mock_encoder_1a53ef69e3928a9fde8180579f245cc53b" prot="public" virt="non-virtual"><scope>MockEncoder</scope><name>MockEncoder</name></member>
      <member refid="class_mock_object_1aa99edcf828702ea4827416c5df93e448" prot="public" virt="non-virtual"><scope>MockEncoder</scope><name>MockObject</name></member>
      <member refid="class_mock_encoder_1afb57a33e2c572f0300809b23e92e9394" prot="public" virt="non-virtual"><scope>MockEncoder</scope><name>possible_clones</name></member>
      <member refid="class_mock_encoder_1a505c376d85f3cedb48933ff5c8ccb430" prot="public" virt="non-virtual"><scope>MockEncoder</scope><name>possible_crtcs</name></member>
      <member refid="class_mock_object_1a90cdcc4aa90c655ff7f76fa82e39401e" prot="public" virt="non-virtual"><scope>MockEncoder</scope><name>props</name></member>
      <member refid="class_mock_object_1ac1fb4229dc515cc08cef807dce970962" prot="public" virt="non-virtual"><scope>MockEncoder</scope><name>setProp</name></member>
      <member refid="class_mock_encoder_1aecfa4b7611475ea013821735087dfbd3" prot="public" virt="non-virtual"><scope>MockEncoder</scope><name>~MockEncoder</name></member>
      <member refid="class_mock_object_1aa32f10d16e17321d7e37fe2fe442e7d3" prot="public" virt="virtual"><scope>MockEncoder</scope><name>~MockObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
