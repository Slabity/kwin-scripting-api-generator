<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_test_wayland_seat" kind="class" language="C++" prot="public">
    <compoundname>TestWaylandSeat</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_test_wayland_seat_1a9fe6d711726be3a8d4ec2314e81291f3" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_display" kindref="compound">KWin::Display</ref> *</type>
        <definition>KWin::Display* TestWaylandSeat::m_display</definition>
        <argsstring></argsstring>
        <name>m_display</name>
        <qualifiedname>TestWaylandSeat::m_display</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="117" column="19" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_seat_1a3a8e767969944a4d2e1d6287c053c312" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_compositor_interface" kindref="compound">KWin::CompositorInterface</ref> *</type>
        <definition>KWin::CompositorInterface* TestWaylandSeat::m_compositorInterface</definition>
        <argsstring></argsstring>
        <name>m_compositorInterface</name>
        <qualifiedname>TestWaylandSeat::m_compositorInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="118" column="31" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_seat_1a89ed5db068bbd185236eb540cd1c0d6f" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_seat_interface" kindref="compound">KWin::SeatInterface</ref> *</type>
        <definition>KWin::SeatInterface* TestWaylandSeat::m_seatInterface</definition>
        <argsstring></argsstring>
        <name>m_seatInterface</name>
        <qualifiedname>TestWaylandSeat::m_seatInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="119" column="25" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_seat_1a58cb2300caa647eddb5eb9f6486680ab" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_sub_compositor_interface" kindref="compound">KWin::SubCompositorInterface</ref> *</type>
        <definition>KWin::SubCompositorInterface* TestWaylandSeat::m_subCompositorInterface</definition>
        <argsstring></argsstring>
        <name>m_subCompositorInterface</name>
        <qualifiedname>TestWaylandSeat::m_subCompositorInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="120" column="34" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_seat_1a3aed85d4f3e3d980c8af91ad32f17ee6" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_relative_pointer_manager_v1_interface" kindref="compound">KWin::RelativePointerManagerV1Interface</ref> *</type>
        <definition>KWin::RelativePointerManagerV1Interface* TestWaylandSeat::m_relativePointerManagerV1Interface</definition>
        <argsstring></argsstring>
        <name>m_relativePointerManagerV1Interface</name>
        <qualifiedname>TestWaylandSeat::m_relativePointerManagerV1Interface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="121" column="45" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_seat_1a9dd1520cf5a2e33ab69038a927197ae5" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_pointer_gestures_v1_interface" kindref="compound">KWin::PointerGesturesV1Interface</ref> *</type>
        <definition>KWin::PointerGesturesV1Interface* TestWaylandSeat::m_pointerGesturesV1Interface</definition>
        <argsstring></argsstring>
        <name>m_pointerGesturesV1Interface</name>
        <qualifiedname>TestWaylandSeat::m_pointerGesturesV1Interface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="122" column="38" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_seat_1ae0839be17417ef968f2bc5ada38e50ea" prot="private" static="no" mutable="no">
        <type>KWayland::Client::ConnectionThread *</type>
        <definition>KWayland::Client::ConnectionThread* TestWaylandSeat::m_connection</definition>
        <argsstring></argsstring>
        <name>m_connection</name>
        <qualifiedname>TestWaylandSeat::m_connection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="123" column="40" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_seat_1a65939d753c67d4a7791e451038fe9053" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Compositor *</type>
        <definition>KWayland::Client::Compositor* TestWaylandSeat::m_compositor</definition>
        <argsstring></argsstring>
        <name>m_compositor</name>
        <qualifiedname>TestWaylandSeat::m_compositor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="124" column="34" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_seat_1a7c8a8acd277c36ba1c7d7a31374a1ac3" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Seat *</type>
        <definition>KWayland::Client::Seat* TestWaylandSeat::m_seat</definition>
        <argsstring></argsstring>
        <name>m_seat</name>
        <qualifiedname>TestWaylandSeat::m_seat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="125" column="28" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_seat_1acd1fef2f796b7ac1edc2136cbb8cf6d9" prot="private" static="no" mutable="no">
        <type>KWayland::Client::ShmPool *</type>
        <definition>KWayland::Client::ShmPool* TestWaylandSeat::m_shm</definition>
        <argsstring></argsstring>
        <name>m_shm</name>
        <qualifiedname>TestWaylandSeat::m_shm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="126" column="31" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_seat_1a4881fb97531d9a24d793a0ddde0b8df7" prot="private" static="no" mutable="no">
        <type>KWayland::Client::SubCompositor *</type>
        <definition>KWayland::Client::SubCompositor* TestWaylandSeat::m_subCompositor</definition>
        <argsstring></argsstring>
        <name>m_subCompositor</name>
        <qualifiedname>TestWaylandSeat::m_subCompositor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="127" column="37" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_seat_1aae86f8f16286e2a52f3d3bcecab14cee" prot="private" static="no" mutable="no">
        <type>KWayland::Client::RelativePointerManager *</type>
        <definition>KWayland::Client::RelativePointerManager* TestWaylandSeat::m_relativePointerManager</definition>
        <argsstring></argsstring>
        <name>m_relativePointerManager</name>
        <qualifiedname>TestWaylandSeat::m_relativePointerManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="128" column="46" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_seat_1afe793b5ae403933a447996d6db1b1cb4" prot="private" static="no" mutable="no">
        <type>KWayland::Client::PointerGestures *</type>
        <definition>KWayland::Client::PointerGestures* TestWaylandSeat::m_pointerGestures</definition>
        <argsstring></argsstring>
        <name>m_pointerGestures</name>
        <qualifiedname>TestWaylandSeat::m_pointerGestures</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="129" column="39" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_seat_1a8b0daf22d1a2f2e9068234b96d5a8a21" prot="private" static="no" mutable="no">
        <type>KWayland::Client::EventQueue *</type>
        <definition>KWayland::Client::EventQueue* TestWaylandSeat::m_queue</definition>
        <argsstring></argsstring>
        <name>m_queue</name>
        <qualifiedname>TestWaylandSeat::m_queue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="130" column="34" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_seat_1a3eb92baaa201c9814a46facc02970664" prot="private" static="no" mutable="no">
        <type>QThread *</type>
        <definition>QThread* TestWaylandSeat::m_thread</definition>
        <argsstring></argsstring>
        <name>m_thread</name>
        <qualifiedname>TestWaylandSeat::m_thread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="131" column="13" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="131" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_test_wayland_seat_1a6b8c71975ae3177764cf579015d29714" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestWaylandSeat::TestWaylandSeat</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>TestWaylandSeat</name>
        <qualifiedname>TestWaylandSeat::TestWaylandSeat</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="87" column="14" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="136" bodyend="154"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_test_wayland_seat_1acf1b20237f36f8a2e912c0616d4dbe46" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>TestWaylandSeat::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="89" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="156" bodyend="229"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1a0fb7b9d1e5735963c18015c0766dbaac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>TestWaylandSeat::cleanup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="90" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="231" bodyend="281"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1aa6ddab9e5f1ae46bb4d483926ae7f82f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testCapabilities_data</definition>
        <argsstring>()</argsstring>
        <name>testCapabilities_data</name>
        <qualifiedname>TestWaylandSeat::testCapabilities_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="92" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="290" bodyend="304"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1aeef898a65ee451e699ad39c06b30d5ff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testCapabilities</definition>
        <argsstring>()</argsstring>
        <name>testCapabilities</name>
        <qualifiedname>TestWaylandSeat::testCapabilities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="93" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="306" bodyend="345"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1aaf4b02196003fdf023da80560e14343f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testPointer</definition>
        <argsstring>()</argsstring>
        <name>testPointer</name>
        <qualifiedname>TestWaylandSeat::testPointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="94" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="347" bodyend="528"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1a2a66e06e6247a43fb736af88214c50e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testPointerTransformation_data</definition>
        <argsstring>()</argsstring>
        <name>testPointerTransformation_data</name>
        <qualifiedname>TestWaylandSeat::testPointerTransformation_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="95" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="530" bodyend="547"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1afb7a15b43c0cc9fe79719d68139d5b7d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testPointerTransformation</definition>
        <argsstring>()</argsstring>
        <name>testPointerTransformation</name>
        <qualifiedname>TestWaylandSeat::testPointerTransformation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="96" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="549" bodyend="617"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1addca80581df957d447496a3cd96297d3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testPointerButton_data</definition>
        <argsstring>()</argsstring>
        <name>testPointerButton_data</name>
        <qualifiedname>TestWaylandSeat::testPointerButton_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="97" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="621" bodyend="647"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1a37f8b5054f8b83187d4a03e036623fd7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testPointerButton</definition>
        <argsstring>()</argsstring>
        <name>testPointerButton</name>
        <qualifiedname>TestWaylandSeat::testPointerButton</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="98" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="649" bodyend="712"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1a07b3d3d56c7410e8f6065a918e4fcec3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testPointerSubSurfaceTree</definition>
        <argsstring>()</argsstring>
        <name>testPointerSubSurfaceTree</name>
        <qualifiedname>TestWaylandSeat::testPointerSubSurfaceTree</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="99" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="714" bodyend="804"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1a005b330080cb7635c9934b339b403a36" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testPointerSwipeGesture_data</definition>
        <argsstring>()</argsstring>
        <name>testPointerSwipeGesture_data</name>
        <qualifiedname>TestWaylandSeat::testPointerSwipeGesture_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="100" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="806" bodyend="814"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1ac2879ec32561988467047bc7e64a8836" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testPointerSwipeGesture</definition>
        <argsstring>()</argsstring>
        <name>testPointerSwipeGesture</name>
        <qualifiedname>TestWaylandSeat::testPointerSwipeGesture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="101" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="816" bodyend="925"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1a5dce4644fb4814b5207122709b4fe5a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testPointerPinchGesture_data</definition>
        <argsstring>()</argsstring>
        <name>testPointerPinchGesture_data</name>
        <qualifiedname>TestWaylandSeat::testPointerPinchGesture_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="102" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="927" bodyend="935"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1a284ead3a52f2587ee5758879bf53dc1f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testPointerPinchGesture</definition>
        <argsstring>()</argsstring>
        <name>testPointerPinchGesture</name>
        <qualifiedname>TestWaylandSeat::testPointerPinchGesture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="103" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="937" bodyend="1050"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1a028da5baba68715ca541018bfd33619b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testPointerHoldGesture_data</definition>
        <argsstring>()</argsstring>
        <name>testPointerHoldGesture_data</name>
        <qualifiedname>TestWaylandSeat::testPointerHoldGesture_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="104" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="1052" bodyend="1060"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1aebbf1c8a5f94425968f7161edfdf31b7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testPointerHoldGesture</definition>
        <argsstring>()</argsstring>
        <name>testPointerHoldGesture</name>
        <qualifiedname>TestWaylandSeat::testPointerHoldGesture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="105" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="1081" bodyend="1171"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1a74ed93edcbd73b864e0f43fd051bd2e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testPointerAxis</definition>
        <argsstring>()</argsstring>
        <name>testPointerAxis</name>
        <qualifiedname>TestWaylandSeat::testPointerAxis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="106" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="1173" bodyend="1272"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1a7480d76d42ca06214bdb213760fef4d3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testCursor</definition>
        <argsstring>()</argsstring>
        <name>testCursor</name>
        <qualifiedname>TestWaylandSeat::testCursor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="107" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="1274" bodyend="1343"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1a5bcc4c2219b3b09b0b4d5a610bd4a2fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testKeyboard</definition>
        <argsstring>()</argsstring>
        <name>testKeyboard</name>
        <qualifiedname>TestWaylandSeat::testKeyboard</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="108" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="1345" bodyend="1506"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1ae5df04114b6c5d9344a82cd51ab602ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testSelection</definition>
        <argsstring>()</argsstring>
        <name>testSelection</name>
        <qualifiedname>TestWaylandSeat::testSelection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="109" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="1508" bodyend="1609"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1ad44b0e04a864328537bddb442669bb46" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testDataDeviceForKeyboardSurface</definition>
        <argsstring>()</argsstring>
        <name>testDataDeviceForKeyboardSurface</name>
        <qualifiedname>TestWaylandSeat::testDataDeviceForKeyboardSurface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="110" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="1611" bodyend="1700"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1a8266c24a26a94c2976ec7f191aebfb58" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testTouch</definition>
        <argsstring>()</argsstring>
        <name>testTouch</name>
        <qualifiedname>TestWaylandSeat::testTouch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="111" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="1702" bodyend="1910"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_seat_1a3e2fdc33d1e695fbc478c44f5c7b4107" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSeat::testKeymap</definition>
        <argsstring>()</argsstring>
        <name>testKeymap</name>
        <qualifiedname>TestWaylandSeat::testKeymap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="112" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="1912" bodyend="1958"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_test_wayland_seat_1a4676bcf102dbfa59542fa77e379bc70f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TestWaylandSeat::sync</definition>
        <argsstring>()</argsstring>
        <name>sync</name>
        <qualifiedname>TestWaylandSeat::sync</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="115" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="283" bodyend="288"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestWaylandSeat</label>
        <link refid="class_test_wayland_seat"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestWaylandSeat</label>
        <link refid="class_test_wayland_seat"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="83" column="1" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="84" bodyend="132"/>
    <listofallmembers>
      <member refid="class_test_wayland_seat_1a0fb7b9d1e5735963c18015c0766dbaac" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>cleanup</name></member>
      <member refid="class_test_wayland_seat_1acf1b20237f36f8a2e912c0616d4dbe46" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>init</name></member>
      <member refid="class_test_wayland_seat_1a65939d753c67d4a7791e451038fe9053" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_compositor</name></member>
      <member refid="class_test_wayland_seat_1a3a8e767969944a4d2e1d6287c053c312" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_compositorInterface</name></member>
      <member refid="class_test_wayland_seat_1ae0839be17417ef968f2bc5ada38e50ea" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_connection</name></member>
      <member refid="class_test_wayland_seat_1a9fe6d711726be3a8d4ec2314e81291f3" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_display</name></member>
      <member refid="class_test_wayland_seat_1afe793b5ae403933a447996d6db1b1cb4" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_pointerGestures</name></member>
      <member refid="class_test_wayland_seat_1a9dd1520cf5a2e33ab69038a927197ae5" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_pointerGesturesV1Interface</name></member>
      <member refid="class_test_wayland_seat_1a8b0daf22d1a2f2e9068234b96d5a8a21" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_queue</name></member>
      <member refid="class_test_wayland_seat_1aae86f8f16286e2a52f3d3bcecab14cee" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_relativePointerManager</name></member>
      <member refid="class_test_wayland_seat_1a3aed85d4f3e3d980c8af91ad32f17ee6" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_relativePointerManagerV1Interface</name></member>
      <member refid="class_test_wayland_seat_1a7c8a8acd277c36ba1c7d7a31374a1ac3" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_seat</name></member>
      <member refid="class_test_wayland_seat_1a89ed5db068bbd185236eb540cd1c0d6f" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_seatInterface</name></member>
      <member refid="class_test_wayland_seat_1acd1fef2f796b7ac1edc2136cbb8cf6d9" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_shm</name></member>
      <member refid="class_test_wayland_seat_1a4881fb97531d9a24d793a0ddde0b8df7" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_subCompositor</name></member>
      <member refid="class_test_wayland_seat_1a58cb2300caa647eddb5eb9f6486680ab" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_subCompositorInterface</name></member>
      <member refid="class_test_wayland_seat_1a3eb92baaa201c9814a46facc02970664" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>m_thread</name></member>
      <member refid="class_test_wayland_seat_1a4676bcf102dbfa59542fa77e379bc70f" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>sync</name></member>
      <member refid="class_test_wayland_seat_1aeef898a65ee451e699ad39c06b30d5ff" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testCapabilities</name></member>
      <member refid="class_test_wayland_seat_1aa6ddab9e5f1ae46bb4d483926ae7f82f" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testCapabilities_data</name></member>
      <member refid="class_test_wayland_seat_1a7480d76d42ca06214bdb213760fef4d3" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testCursor</name></member>
      <member refid="class_test_wayland_seat_1ad44b0e04a864328537bddb442669bb46" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testDataDeviceForKeyboardSurface</name></member>
      <member refid="class_test_wayland_seat_1a5bcc4c2219b3b09b0b4d5a610bd4a2fb" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testKeyboard</name></member>
      <member refid="class_test_wayland_seat_1a3e2fdc33d1e695fbc478c44f5c7b4107" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testKeymap</name></member>
      <member refid="class_test_wayland_seat_1aaf4b02196003fdf023da80560e14343f" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testPointer</name></member>
      <member refid="class_test_wayland_seat_1a74ed93edcbd73b864e0f43fd051bd2e9" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testPointerAxis</name></member>
      <member refid="class_test_wayland_seat_1a37f8b5054f8b83187d4a03e036623fd7" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testPointerButton</name></member>
      <member refid="class_test_wayland_seat_1addca80581df957d447496a3cd96297d3" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testPointerButton_data</name></member>
      <member refid="class_test_wayland_seat_1aebbf1c8a5f94425968f7161edfdf31b7" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testPointerHoldGesture</name></member>
      <member refid="class_test_wayland_seat_1a028da5baba68715ca541018bfd33619b" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testPointerHoldGesture_data</name></member>
      <member refid="class_test_wayland_seat_1a284ead3a52f2587ee5758879bf53dc1f" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testPointerPinchGesture</name></member>
      <member refid="class_test_wayland_seat_1a5dce4644fb4814b5207122709b4fe5a1" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testPointerPinchGesture_data</name></member>
      <member refid="class_test_wayland_seat_1a07b3d3d56c7410e8f6065a918e4fcec3" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testPointerSubSurfaceTree</name></member>
      <member refid="class_test_wayland_seat_1ac2879ec32561988467047bc7e64a8836" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testPointerSwipeGesture</name></member>
      <member refid="class_test_wayland_seat_1a005b330080cb7635c9934b339b403a36" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testPointerSwipeGesture_data</name></member>
      <member refid="class_test_wayland_seat_1afb7a15b43c0cc9fe79719d68139d5b7d" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testPointerTransformation</name></member>
      <member refid="class_test_wayland_seat_1a2a66e06e6247a43fb736af88214c50e5" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testPointerTransformation_data</name></member>
      <member refid="class_test_wayland_seat_1ae5df04114b6c5d9344a82cd51ab602ec" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testSelection</name></member>
      <member refid="class_test_wayland_seat_1a8266c24a26a94c2976ec7f191aebfb58" prot="private" virt="non-virtual"><scope>TestWaylandSeat</scope><name>testTouch</name></member>
      <member refid="class_test_wayland_seat_1a6b8c71975ae3177764cf579015d29714" prot="public" virt="non-virtual"><scope>TestWaylandSeat</scope><name>TestWaylandSeat</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
