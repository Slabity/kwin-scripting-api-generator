<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_xcb_1_1_wrapper_3_01_data_01_4" kind="class" language="C++" prot="public">
    <compoundname>KWin::Xcb::Wrapper&lt; Data &gt;</compoundname>
    <basecompoundref refid="class_k_win_1_1_xcb_1_1_abstract_wrapper" prot="public" virt="non-virtual">KWin::Xcb::AbstractWrapper&lt; Data &gt;</basecompoundref>
    <basecompoundref refid="class_k_win_1_1_xcb_1_1_abstract_wrapper" prot="public" virt="non-virtual">KWin::Xcb::AbstractWrapper&lt; Data &gt;</basecompoundref>
    <includes refid="xcbutils_8h" local="no">xcbutils.h</includes>
    <templateparamlist>
      <param>
        <type>typename Data</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_wrapper_3_01_data_01_4_1ab42d64b61a46c9a086caa9f1a8601980" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::Xcb::Wrapper&lt; Data &gt;::Wrapper</definition>
        <argsstring>()</argsstring>
        <name>Wrapper</name>
        <qualifiedname>KWin::Xcb::Wrapper&lt; Data &gt;::Wrapper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="482" column="14" bodyfile="kwin/src/utils/xcbutils.h" bodystart="482" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_wrapper_1a74d896264b1a1ae4bd6fe939a680357e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Xcb::Wrapper&lt; Data, Args &gt;::Wrapper</definition>
        <argsstring>()=default</argsstring>
        <name>Wrapper</name>
        <qualifiedname>KWin::Xcb::Wrapper&lt; Data &gt;::Wrapper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="435" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_wrapper_1a555f0bc8579000384237373469e688fd" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::Xcb::Wrapper&lt; Data, Args &gt;::Wrapper</definition>
        <argsstring>(Args... args)</argsstring>
        <name>Wrapper</name>
        <qualifiedname>KWin::Xcb::Wrapper&lt; Data &gt;::Wrapper</qualifiedname>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="436" column="14" bodyfile="kwin/src/utils/xcbutils.h" bodystart="436" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_wrapper_1a78b0e612a535d3056272284e5503ca22" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::Xcb::Wrapper&lt; Data, Args &gt;::Wrapper</definition>
        <argsstring>(xcb_window_t w, Args... args)</argsstring>
        <name>Wrapper</name>
        <qualifiedname>KWin::Xcb::Wrapper&lt; Data &gt;::Wrapper</qualifiedname>
        <param>
          <type>xcb_window_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="440" column="14" bodyfile="kwin/src/utils/xcbutils.h" bodystart="440" bodyend="443"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Template specialization for no variadic arguments. </para>
    </briefdescription>
    <detaileddescription>
<para>It&apos;s needed to prevent ambiguous constructors being generated. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::Xcb::AbstractWrapper&lt; Data &gt;</label>
        <link refid="class_k_win_1_1_xcb_1_1_abstract_wrapper"/>
      </node>
      <node id="1">
        <label>KWin::Xcb::Wrapper&lt; Data &gt;</label>
        <link refid="class_k_win_1_1_xcb_1_1_wrapper_3_01_data_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::Xcb::AbstractWrapper&lt; Data &gt;</label>
        <link refid="class_k_win_1_1_xcb_1_1_abstract_wrapper"/>
      </node>
      <node id="1">
        <label>KWin::Xcb::Wrapper&lt; Data &gt;</label>
        <link refid="class_k_win_1_1_xcb_1_1_wrapper_3_01_data_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/src/utils/xcbutils.h" line="474" column="1" bodyfile="kwin/src/utils/xcbutils.h" bodystart="475" bodyend="486"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1abb699a4e3ea3f173e60d85ac002437b3" prot="protected" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>AbstractWrapper</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a1f46aa9adb3a717c43737fc7fe7daab9" prot="protected" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>AbstractWrapper</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1adfff363339b29090b2feef4879114d9f" prot="protected" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>AbstractWrapper</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1ac521b3501b8dcfdbff4fb3298fcadb68" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>Cookie</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a6ba5713772402a437ad15f732268222c" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>data</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a3b2354e94544c999c88bf7b0be7954c8" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>data</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a5339f5d731224a1857bd61d8f5eb84ac" prot="protected" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>getReply</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a3a63032c158d81c214e7d09aa72a2e0f" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>isNull</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1ab2609efa22c0c5a1b46b2b0c015ed72c" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>isNull</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1abb8e0fe1808222260170b82f9830ac3f" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>isRetrieved</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1acdb2ca786bff8a6b505e13e8b9975da5" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>operator bool</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a06a902b1ed009cf660351010813e1c38" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>operator bool</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1ad7b95ba92c89a4d20ec287e63ff3c2f3" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>operator-&gt;</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1aeff97879572d0ab9e7248d28eb39c348" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>operator=</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1afe263ed2fd2c80a29998e22d97b7b3fe" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>Reply</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a004fd9f828b0e012a779415670b1f40c" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>take</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1aca5457de5f179ab7622756932df06f9a" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>window</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_wrapper_3_01_data_01_4_1ab42d64b61a46c9a086caa9f1a8601980" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>Wrapper</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_wrapper_1a74d896264b1a1ae4bd6fe939a680357e" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>Wrapper</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_wrapper_1a555f0bc8579000384237373469e688fd" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>Wrapper</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_wrapper_1a78b0e612a535d3056272284e5503ca22" prot="public" virt="non-virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>Wrapper</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a9e7f67bc9b3fa6ce68217b17f910846e" prot="public" virt="virtual"><scope>KWin::Xcb::Wrapper&lt; Data &gt;</scope><name>~AbstractWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
