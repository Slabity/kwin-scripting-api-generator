<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_shader_binder" kind="class" language="C++" prot="public">
    <compoundname>KWin::ShaderBinder</compoundname>
    <includes refid="glshadermanager_8h" local="no">glshadermanager.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_shader_binder_1af41cb941c1ebfcdd3d2c93957e14d5f2" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_g_l_shader" kindref="compound">GLShader</ref> *</type>
        <definition>GLShader* KWin::ShaderBinder::m_shader</definition>
        <argsstring></argsstring>
        <name>m_shader</name>
        <qualifiedname>KWin::ShaderBinder::m_shader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glshadermanager.h" line="202" column="14" bodyfile="kwin/src/opengl/glshadermanager.h" bodystart="202" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_shader_binder_1aff89b986e2cd9ecf7bf38df1ad713c1d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::ShaderBinder::ShaderBinder</definition>
        <argsstring>(GLShader *shader)</argsstring>
        <name>ShaderBinder</name>
        <qualifiedname>KWin::ShaderBinder::ShaderBinder</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_g_l_shader" kindref="compound">GLShader</ref> *</type>
          <declname>shader</declname>
        </param>
        <briefdescription>
<para>Pushes the given <computeroutput>shader</computeroutput> to the <ref refid="class_k_win_1_1_shader_manager" kindref="compound">ShaderManager</ref>&apos;s stack. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shader</parametername>
</parameternamelist>
<parameterdescription>
<para>The Shader to push on the stack </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_shader_manager_1aedd0dd423df032415b439a08c6f70fed" kindref="member">ShaderManager::pushShader</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glshadermanager.h" line="185" column="14" bodyfile="kwin/src/opengl/glshadermanager.h" bodystart="205" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shader_binder_1a25849af96719452f2b0bdc24ed615bac" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::ShaderBinder::ShaderBinder</definition>
        <argsstring>(ShaderTraits traits)</argsstring>
        <name>ShaderBinder</name>
        <qualifiedname>KWin::ShaderBinder::ShaderBinder</qualifiedname>
        <param>
          <type>ShaderTraits</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>Pushes the Shader with the given <computeroutput>traits</computeroutput> to the <ref refid="class_k_win_1_1_shader_manager" kindref="compound">ShaderManager</ref>&apos;s stack. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>The traits describing the shader </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_shader_manager_1aedd0dd423df032415b439a08c6f70fed" kindref="member">ShaderManager::pushShader</ref> </para>
</simplesect>
<simplesect kind="since"><para>5.6 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glshadermanager.h" line="193" column="14" bodyfile="kwin/src/opengl/glshadermanager.h" bodystart="211" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shader_binder_1af9b5b626796075f815f67fa3d533f5de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::ShaderBinder::~ShaderBinder</definition>
        <argsstring>()</argsstring>
        <name>~ShaderBinder</name>
        <qualifiedname>KWin::ShaderBinder::~ShaderBinder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glshadermanager.h" line="194" column="5" bodyfile="kwin/src/opengl/glshadermanager.h" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shader_binder_1affc54487256b4a0ab0fe1289170df1f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_g_l_shader" kindref="compound">GLShader</ref> *</type>
        <definition>GLShader * KWin::ShaderBinder::shader</definition>
        <argsstring>()</argsstring>
        <name>shader</name>
        <qualifiedname>KWin::ShaderBinder::shader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The Shader pushed to the Stack. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glshadermanager.h" line="199" column="14" bodyfile="kwin/src/opengl/glshadermanager.h" bodystart="222" bodyend="225"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An helper class to push a Shader on to <ref refid="class_k_win_1_1_shader_manager" kindref="compound">ShaderManager</ref>&apos;s stack and ensuring that the Shader gets popped again from the stack automatically once the object goes out of life.</para>
<para>How to use: <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal">GLShader<sp/>*myCustomShaderIWantToPush;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_k_win_1_1_shader_binder_1aff89b986e2cd9ecf7bf38df1ad713c1d" kindref="member">ShaderBinder</ref><sp/>binder(myCustomShaderIWantToPush);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>do<sp/>stuff<sp/>with<sp/>the<sp/>shader<sp/>being<sp/>pushed<sp/>on<sp/>the<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>here<sp/>the<sp/>Shader<sp/>is<sp/>automatically<sp/>popped<sp/>as<sp/>helper<sp/>does<sp/>no<sp/>longer<sp/>exist.</highlight></codeline>
</programlisting></para>
<para><simplesect kind="since"><para>4.10 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="kwin/src/opengl/glshadermanager.h" line="176" column="1" bodyfile="kwin/src/opengl/glshadermanager.h" bodystart="177" bodyend="203"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_shader_binder_1af41cb941c1ebfcdd3d2c93957e14d5f2" prot="private" virt="non-virtual"><scope>KWin::ShaderBinder</scope><name>m_shader</name></member>
      <member refid="class_k_win_1_1_shader_binder_1affc54487256b4a0ab0fe1289170df1f8" prot="public" virt="non-virtual"><scope>KWin::ShaderBinder</scope><name>shader</name></member>
      <member refid="class_k_win_1_1_shader_binder_1aff89b986e2cd9ecf7bf38df1ad713c1d" prot="public" virt="non-virtual"><scope>KWin::ShaderBinder</scope><name>ShaderBinder</name></member>
      <member refid="class_k_win_1_1_shader_binder_1a25849af96719452f2b0bdc24ed615bac" prot="public" virt="non-virtual"><scope>KWin::ShaderBinder</scope><name>ShaderBinder</name></member>
      <member refid="class_k_win_1_1_shader_binder_1af9b5b626796075f815f67fa3d533f5de" prot="public" virt="non-virtual"><scope>KWin::ShaderBinder</scope><name>~ShaderBinder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
