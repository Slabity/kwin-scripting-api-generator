<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_scene_open_g_l_decoration_renderer" kind="class" language="C++" prot="public">
    <compoundname>KWin::SceneOpenGLDecorationRenderer</compoundname>
    <basecompoundref refid="class_k_win_1_1_decoration_renderer" prot="public" virt="non-virtual">KWin::DecorationRenderer</basecompoundref>
    <includes refid="workspacescene__opengl_8h" local="no">workspacescene_opengl.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a50e7f921fab05fa93d95f18e58ada45b" prot="public" static="no" strong="yes">
        <type>int</type>
        <name>DecorationPart</name>
        <qualifiedname>KWin::SceneOpenGLDecorationRenderer::DecorationPart</qualifiedname>
        <enumvalue id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a50e7f921fab05fa93d95f18e58ada45ba945d5e233cf7d6240f6b783b36a374ff" prot="public">
          <name>Left</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a50e7f921fab05fa93d95f18e58ada45baa4ffdcf0dc1f31b9acaf295d75b51d00" prot="public">
          <name>Top</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a50e7f921fab05fa93d95f18e58ada45ba92b09c7c48c520c3c55e497875da437c" prot="public">
          <name>Right</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a50e7f921fab05fa93d95f18e58ada45ba2ad9d63b69c4a10a5cc9cad923133bc4" prot="public">
          <name>Bottom</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a50e7f921fab05fa93d95f18e58ada45bae93f994f01c537c4e2f7d8528c3eb5e9" prot="public">
          <name>Count</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/workspacescene_opengl.h" line="79" column="5" bodyfile="kwin/src/scene/workspacescene_opengl.h" bodystart="79" bodyend="85"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1aa03797235e1cfc171e4ca975abcfcbe8" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref> &gt;</type>
        <definition>std::unique_ptr&lt;GLTexture&gt; KWin::SceneOpenGLDecorationRenderer::m_texture</definition>
        <argsstring></argsstring>
        <name>m_texture</name>
        <qualifiedname>KWin::SceneOpenGLDecorationRenderer::m_texture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/workspacescene_opengl.h" line="105" column="21" bodyfile="kwin/src/scene/workspacescene_opengl.h" bodystart="105" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a5ec8ae9cc615121687d8aa93e84fd1ae" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::SceneOpenGLDecorationRenderer::SceneOpenGLDecorationRenderer</definition>
        <argsstring>(Decoration::DecoratedWindowImpl *client)</argsstring>
        <name>SceneOpenGLDecorationRenderer</name>
        <qualifiedname>KWin::SceneOpenGLDecorationRenderer::SceneOpenGLDecorationRenderer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_decoration_1_1_decorated_window_impl" kindref="compound">Decoration::DecoratedWindowImpl</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/workspacescene_opengl.h" line="86" column="14" bodyfile="kwin/src/scene/workspacescene_opengl.cpp" bodystart="274" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a1cdfed438a3e0445cb21c653fb209ad9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::SceneOpenGLDecorationRenderer::~SceneOpenGLDecorationRenderer</definition>
        <argsstring>() override</argsstring>
        <name>~SceneOpenGLDecorationRenderer</name>
        <qualifiedname>KWin::SceneOpenGLDecorationRenderer::~SceneOpenGLDecorationRenderer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/workspacescene_opengl.h" line="87" column="5" bodyfile="kwin/src/scene/workspacescene_opengl.cpp" bodystart="280" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a71068049dc1109068c39cd2f26508bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SceneOpenGLDecorationRenderer::render</definition>
        <argsstring>(const QRegion &amp;region) override</argsstring>
        <name>render</name>
        <qualifiedname>KWin::SceneOpenGLDecorationRenderer::render</qualifiedname>
        <reimplements refid="class_k_win_1_1_decoration_renderer_1a5e7d4b407f14080bf3e9ac3c54c64396">render</reimplements>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/workspacescene_opengl.h" line="89" column="10" bodyfile="kwin/src/scene/workspacescene_opengl.cpp" bodystart="337" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1ad97d85f1f4cf43832b0222bb48a67f8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref> *</type>
        <definition>GLTexture * KWin::SceneOpenGLDecorationRenderer::texture</definition>
        <argsstring>()</argsstring>
        <name>texture</name>
        <qualifiedname>KWin::SceneOpenGLDecorationRenderer::texture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/workspacescene_opengl.h" line="91" column="15" bodyfile="kwin/src/scene/workspacescene_opengl.h" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1aee149eff46549531bcde2060a6ebf858" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref> *</type>
        <definition>GLTexture * KWin::SceneOpenGLDecorationRenderer::texture</definition>
        <argsstring>() const</argsstring>
        <name>texture</name>
        <qualifiedname>KWin::SceneOpenGLDecorationRenderer::texture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/workspacescene_opengl.h" line="95" column="15" bodyfile="kwin/src/scene/workspacescene_opengl.h" bodystart="95" bodyend="98"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a2a6184347629bdfd458add6cf70e7300" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SceneOpenGLDecorationRenderer::renderPart</definition>
        <argsstring>(const QRectF &amp;rect, const QRectF &amp;partRect, const QPoint &amp;textureOffset, qreal devicePixelRatio, bool rotated=false)</argsstring>
        <name>renderPart</name>
        <qualifiedname>KWin::SceneOpenGLDecorationRenderer::renderPart</qualifiedname>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>partRect</declname>
        </param>
        <param>
          <type>const QPoint &amp;</type>
          <declname>textureOffset</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>devicePixelRatio</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rotated</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/workspacescene_opengl.h" line="101" column="10" bodyfile="kwin/src/scene/workspacescene_opengl.cpp" bodystart="370" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1ac2f5705f3906f9997fa0479d0a7a57fa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SceneOpenGLDecorationRenderer::resizeTexture</definition>
        <argsstring>()</argsstring>
        <name>resizeTexture</name>
        <qualifiedname>KWin::SceneOpenGLDecorationRenderer::resizeTexture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/workspacescene_opengl.h" line="103" column="10" bodyfile="kwin/src/scene/workspacescene_opengl.cpp" bodystart="449" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a4ef4e3d8e551e63a34a4897d11fe2392" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::SceneOpenGLDecorationRenderer::toNativeSize</definition>
        <argsstring>(double size) const</argsstring>
        <name>toNativeSize</name>
        <qualifiedname>KWin::SceneOpenGLDecorationRenderer::toNativeSize</qualifiedname>
        <param>
          <type>double</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/workspacescene_opengl.h" line="104" column="9" bodyfile="kwin/src/scene/workspacescene_opengl.cpp" bodystart="479" bodyend="482"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a65b847a2ef1804636f47d44eb5894fdb" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QMargins</type>
        <definition>const QMargins KWin::SceneOpenGLDecorationRenderer::texturePadForPart</definition>
        <argsstring>(const QRectF &amp;rect, const QRectF &amp;partRect)</argsstring>
        <name>texturePadForPart</name>
        <qualifiedname>KWin::SceneOpenGLDecorationRenderer::texturePadForPart</qualifiedname>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>partRect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/workspacescene_opengl.h" line="102" column="27" bodyfile="kwin/src/scene/workspacescene_opengl.cpp" bodystart="425" bodyend="442"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::DecorationRenderer</label>
        <link refid="class_k_win_1_1_decoration_renderer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::SceneOpenGLDecorationRenderer</label>
        <link refid="class_k_win_1_1_scene_open_g_l_decoration_renderer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::DecorationRenderer</label>
        <link refid="class_k_win_1_1_decoration_renderer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::SceneOpenGLDecorationRenderer</label>
        <link refid="class_k_win_1_1_scene_open_g_l_decoration_renderer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/scene/workspacescene_opengl.h" line="75" column="1" bodyfile="kwin/src/scene/workspacescene_opengl.h" bodystart="76" bodyend="106"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_decoration_renderer_1ab5e22413aa60aceee7293a8e0a7e5629" prot="public" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>addDamage</name></member>
      <member refid="class_k_win_1_1_decoration_renderer_1a9b9d3b6c1cc0cd6b96be3995e3fda7db" prot="protected" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>areImageSizesDirty</name></member>
      <member refid="class_k_win_1_1_decoration_renderer_1a52b8ae1cfb2dab0dbcee6e7adb5d22c8" prot="protected" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>client</name></member>
      <member refid="class_k_win_1_1_decoration_renderer_1ac848aa2e8a42c7fb86b1423a031ed2e4" prot="public" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>damage</name></member>
      <member refid="class_k_win_1_1_decoration_renderer_1a6e828a009a18ce4e98a865a36bef6e65" prot="public" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>damaged</name></member>
      <member refid="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a50e7f921fab05fa93d95f18e58ada45b" prot="public" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>DecorationPart</name></member>
      <member refid="class_k_win_1_1_decoration_renderer_1a6b0d3b790ea18bccec771e79fc51d19b" prot="protected" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>DecorationRenderer</name></member>
      <member refid="class_k_win_1_1_decoration_renderer_1ab87a90e1263b3abd13738561885da7a4" prot="public" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>devicePixelRatio</name></member>
      <member refid="class_k_win_1_1_decoration_renderer_1adcd894d78d515448862ebb556648cf5f" prot="public" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>effectiveDevicePixelRatio</name></member>
      <member refid="class_k_win_1_1_decoration_renderer_1a0f7f36f0776fdb2febcae8312064c109" prot="public" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>invalidate</name></member>
      <member refid="class_k_win_1_1_scene_open_g_l_decoration_renderer_1aa03797235e1cfc171e4ca975abcfcbe8" prot="private" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>m_texture</name></member>
      <member refid="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a71068049dc1109068c39cd2f26508bfa" prot="public" virt="virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>render</name></member>
      <member refid="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a2a6184347629bdfd458add6cf70e7300" prot="private" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>renderPart</name></member>
      <member refid="class_k_win_1_1_decoration_renderer_1afd48a15d753072379eb421c1f4128db8" prot="protected" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>renderToPainter</name></member>
      <member refid="class_k_win_1_1_decoration_renderer_1a8b41978af0423e3f114cc0990f572116" prot="public" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>resetDamage</name></member>
      <member refid="class_k_win_1_1_decoration_renderer_1a0c6a20e5f86a6a49da3519e3963464b9" prot="protected" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>resetImageSizesDirty</name></member>
      <member refid="class_k_win_1_1_scene_open_g_l_decoration_renderer_1ac2f5705f3906f9997fa0479d0a7a57fa" prot="private" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>resizeTexture</name></member>
      <member refid="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a5ec8ae9cc615121687d8aa93e84fd1ae" prot="public" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>SceneOpenGLDecorationRenderer</name></member>
      <member refid="class_k_win_1_1_decoration_renderer_1ae01c96ee2b55d4b99fec64f50907cc10" prot="public" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>setDevicePixelRatio</name></member>
      <member refid="class_k_win_1_1_scene_open_g_l_decoration_renderer_1ad97d85f1f4cf43832b0222bb48a67f8c" prot="public" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>texture</name></member>
      <member refid="class_k_win_1_1_scene_open_g_l_decoration_renderer_1aee149eff46549531bcde2060a6ebf858" prot="public" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>texture</name></member>
      <member refid="class_k_win_1_1_decoration_renderer_1a15f82254e3b8dbb020e0149c6cee220b" prot="public" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>TexturePad</name></member>
      <member refid="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a65b847a2ef1804636f47d44eb5894fdb" prot="private" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>texturePadForPart</name></member>
      <member refid="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a4ef4e3d8e551e63a34a4897d11fe2392" prot="private" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>toNativeSize</name></member>
      <member refid="class_k_win_1_1_scene_open_g_l_decoration_renderer_1a1cdfed438a3e0445cb21c653fb209ad9" prot="public" virt="non-virtual"><scope>KWin::SceneOpenGLDecorationRenderer</scope><name>~SceneOpenGLDecorationRenderer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
