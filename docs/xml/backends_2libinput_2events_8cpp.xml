<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="backends_2libinput_2events_8cpp" kind="file" language="C++">
    <compoundname>events.cpp</compoundname>
    <includes refid="events_8h" local="yes">events.h</includes>
    <includes refid="device_8h" local="yes">device.h</includes>
    <includes local="no">QSize</includes>
    <incdepgraph>
      <node id="20">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/backends/libinput/events.cpp</label>
        <link refid="backends_2libinput_2events_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>events.h</label>
        <link refid="events_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>input.h</label>
        <link refid="input_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>KConfigGroup</label>
      </node>
      <node id="15">
        <label>KConfigWatcher</label>
      </node>
      <node id="16">
        <label>KSharedConfig</label>
      </node>
      <node id="7">
        <label>QCoreApplication</label>
      </node>
      <node id="22">
        <label>QEasingCurve</label>
      </node>
      <node id="8">
        <label>QImage</label>
      </node>
      <node id="23">
        <label>QList</label>
      </node>
      <node id="24">
        <label>QMatrix4x4</label>
      </node>
      <node id="13">
        <label>QObject</label>
      </node>
      <node id="9">
        <label>QPoint</label>
      </node>
      <node id="14">
        <label>QPointer</label>
      </node>
      <node id="17">
        <label>QSet</label>
      </node>
      <node id="26">
        <label>QSize</label>
      </node>
      <node id="25">
        <label>QSizeF</label>
      </node>
      <node id="10">
        <label>QVariant</label>
      </node>
      <node id="11">
        <label>QVector2D</label>
      </node>
      <node id="4">
        <label>config-kwin.h</label>
      </node>
      <node id="18">
        <label>functional</label>
      </node>
      <node id="12">
        <label>kwin_export.h</label>
      </node>
      <node id="19">
        <label>libinput.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <innernamespace refid="namespace_k_win_1_1_lib_input">KWin::LibInput</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2014<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="events_8h" kindref="compound">events.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="device_8h" kindref="compound">device.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSize&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1_1_lib_input" kindref="compound">LibInput</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_k_win_1_1_lib_input_1_1_event_1a6c47cce328f206eac250302d8ef3975b" refkind="member"><highlight class="normal">std::unique_ptr&lt;Event&gt;<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1a6c47cce328f206eac250302d8ef3975b" kindref="member">Event::create</ref>(libinput_event<sp/>*event)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!event)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>libinput_event_get_type(event);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>add<sp/>touch<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>add<sp/>device<sp/>notify<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_KEYBOARD_KEY:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;KeyEvent&gt;(event);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_POINTER_SCROLL_WHEEL:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_POINTER_SCROLL_FINGER:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_POINTER_SCROLL_CONTINUOUS:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_POINTER_BUTTON:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_POINTER_MOTION:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_POINTER_MOTION_ABSOLUTE:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;PointerEvent&gt;(event,<sp/>t);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_TOUCH_DOWN:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_TOUCH_UP:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_TOUCH_MOTION:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_TOUCH_CANCEL:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_TOUCH_FRAME:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;TouchEvent&gt;(event,<sp/>t);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_GESTURE_SWIPE_BEGIN:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_GESTURE_SWIPE_UPDATE:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_GESTURE_SWIPE_END:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;SwipeGestureEvent&gt;(event,<sp/>t);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_GESTURE_PINCH_BEGIN:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_GESTURE_PINCH_UPDATE:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_GESTURE_PINCH_END:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;PinchGestureEvent&gt;(event,<sp/>t);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_GESTURE_HOLD_BEGIN:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_GESTURE_HOLD_END:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;HoldGestureEvent&gt;(event,<sp/>t);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_TABLET_TOOL_AXIS:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_TABLET_TOOL_PROXIMITY:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_TABLET_TOOL_TIP:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;TabletToolEvent&gt;(event,<sp/>t);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_TABLET_TOOL_BUTTON:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;TabletToolButtonEvent&gt;(event,<sp/>t);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_TABLET_PAD_RING:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;TabletPadRingEvent&gt;(event,<sp/>t);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_TABLET_PAD_STRIP:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;TabletPadStripEvent&gt;(event,<sp/>t);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_TABLET_PAD_BUTTON:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;TabletPadButtonEvent&gt;(event,<sp/>t);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_EVENT_SWITCH_TOGGLE:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;SwitchEvent&gt;(event,<sp/>t);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Event&gt;{</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1af2f00c6b64883754df912ffc62370af0" kindref="member">Event</ref>(event,<sp/>t)};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_k_win_1_1_lib_input_1_1_event_1af2f00c6b64883754df912ffc62370af0" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_event_1af2f00c6b64883754df912ffc62370af0" kindref="member">Event::Event</ref>(libinput_event<sp/>*event,<sp/>libinput_event_type<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_event(event)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_type(<ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_device(nullptr)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_k_win_1_1_lib_input_1_1_event_1a02d70a6e82d58d22b1763a1594517b29" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_event_1a02d70a6e82d58d22b1763a1594517b29" kindref="member">Event::~Event</ref>()</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>libinput_event_destroy(m_event);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_k_win_1_1_lib_input_1_1_event_1ae18c8cea7b81b308edefa8c42ddcebd1" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_device" kindref="compound">Device</ref><sp/>*<ref refid="class_k_win_1_1_lib_input_1_1_event_1ae18c8cea7b81b308edefa8c42ddcebd1" kindref="member">Event::device</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="86"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_device)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_device<sp/>=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a7aed37a42f19931cb87007fb35f5038a" kindref="member">Device::get</ref>(libinput_event_get_device(m_event));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_device;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="class_k_win_1_1_lib_input_1_1_event_1aff0357ee975f383a5926893fbbe1550a" refkind="member"><highlight class="normal">libinput_device<sp/>*<ref refid="class_k_win_1_1_lib_input_1_1_event_1aff0357ee975f383a5926893fbbe1550a" kindref="member">Event::nativeDevice</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="94"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_device)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_device-&gt;device();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_event_get_device(m_event);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_k_win_1_1_lib_input_1_1_key_event_1a537c14d5eb9501b416469a5cd9c67e0b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_key_event_1a537c14d5eb9501b416469a5cd9c67e0b" kindref="member">KeyEvent::KeyEvent</ref>(libinput_event<sp/>*event)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1af2f00c6b64883754df912ffc62370af0" kindref="member">Event</ref>(event,<sp/>LIBINPUT_EVENT_KEYBOARD_KEY)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_keyboardEvent(libinput_event_get_keyboard_event(event))</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_key_event_1af692c9cfd79d08a89fd1854295ca6eb5" kindref="member">KeyEvent::~KeyEvent</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="class_k_win_1_1_lib_input_1_1_key_event_1a26756c5c243be3268dabc0a6bd780090" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="class_k_win_1_1_lib_input_1_1_key_event_1a26756c5c243be3268dabc0a6bd780090" kindref="member">KeyEvent::key</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="110"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_event_keyboard_get_key(m_keyboardEvent);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_k_win_1_1_lib_input_1_1_key_event_1aba3e5576f0a822a930d55183e735927f" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1" kindref="member">KeyboardKeyState</ref><sp/><ref refid="class_k_win_1_1_lib_input_1_1_key_event_1aba3e5576f0a822a930d55183e735927f" kindref="member">KeyEvent::state</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="115"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(libinput_event_keyboard_get_key_state(m_keyboardEvent))<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_KEY_STATE_PRESSED:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">KeyboardKeyState::Pressed</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_KEY_STATE_RELEASED:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1aea1e34304a5d8ffa7c9b0ed8ede4ef1a" kindref="member">KeyboardKeyState::Released</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_k_win_1_1_lib_input_1_1_key_event_1a99df659036318b780bbd431a5e81bbfd" refkind="member"><highlight class="normal">std::chrono::microseconds<sp/><ref refid="class_k_win_1_1_lib_input_1_1_key_event_1a99df659036318b780bbd431a5e81bbfd" kindref="member">KeyEvent::time</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="127"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::microseconds(libinput_event_keyboard_get_time_usec(m_keyboardEvent));</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_k_win_1_1_lib_input_1_1_pointer_event_1ae18394f6aad95ae19512992c60526875" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1ae18394f6aad95ae19512992c60526875" kindref="member">PointerEvent::PointerEvent</ref>(libinput_event<sp/>*event,<sp/>libinput_event_type<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1af2f00c6b64883754df912ffc62370af0" kindref="member">Event</ref>(event,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_pointerEvent(libinput_event_get_pointer_event(event))</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a1e1d331844b6c61a4d971a14ae413e4c" kindref="member">PointerEvent::~PointerEvent</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a37f42b1b42b711acc4d87295194976dc" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a37f42b1b42b711acc4d87295194976dc" kindref="member">PointerEvent::absolutePos</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="140"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>()<sp/>==<sp/>LIBINPUT_EVENT_POINTER_MOTION_ABSOLUTE);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(libinput_event_pointer_get_absolute_x(m_pointerEvent),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinput_event_pointer_get_absolute_y(m_pointerEvent));</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_k_win_1_1_lib_input_1_1_pointer_event_1aedc8d5fe7152b7069032e198b96a0fc8" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a37f42b1b42b711acc4d87295194976dc" kindref="member">PointerEvent::absolutePos</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="147"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>()<sp/>==<sp/>LIBINPUT_EVENT_POINTER_MOTION_ABSOLUTE);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(libinput_event_pointer_get_absolute_x_transformed(m_pointerEvent,<sp/>size.width()),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinput_event_pointer_get_absolute_y_transformed(m_pointerEvent,<sp/>size.height()));</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a6af8bfac4384b5e110fd4aaa8a14f842" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a6af8bfac4384b5e110fd4aaa8a14f842" kindref="member">PointerEvent::delta</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="154"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>()<sp/>==<sp/>LIBINPUT_EVENT_POINTER_MOTION);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(libinput_event_pointer_get_dx(m_pointerEvent),<sp/>libinput_event_pointer_get_dy(m_pointerEvent));</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a559a3b69078d718d258b453ecb4e0a94" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a559a3b69078d718d258b453ecb4e0a94" kindref="member">PointerEvent::deltaUnaccelerated</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="160"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>()<sp/>==<sp/>LIBINPUT_EVENT_POINTER_MOTION);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(libinput_event_pointer_get_dx_unaccelerated(m_pointerEvent),<sp/>libinput_event_pointer_get_dy_unaccelerated(m_pointerEvent));</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a219209247cacb5dabedc5170cd753498" refkind="member"><highlight class="normal">std::chrono::microseconds<sp/><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a219209247cacb5dabedc5170cd753498" kindref="member">PointerEvent::time</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="166"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::microseconds(libinput_event_pointer_get_time_usec(m_pointerEvent));</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a7b3e96787f1f457778aa286170f7b819" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a7b3e96787f1f457778aa286170f7b819" kindref="member">PointerEvent::button</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="171"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>()<sp/>==<sp/>LIBINPUT_EVENT_POINTER_BUTTON);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_event_pointer_get_button(m_pointerEvent);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a7760f95599504b0f44ae1ab7d2566873" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3" kindref="member">PointerButtonState</ref><sp/><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a7760f95599504b0f44ae1ab7d2566873" kindref="member">PointerEvent::buttonState</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="177"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>()<sp/>==<sp/>LIBINPUT_EVENT_POINTER_BUTTON);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(libinput_event_pointer_get_button_state(m_pointerEvent))<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_BUTTON_STATE_PRESSED:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">PointerButtonState::Pressed</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_BUTTON_STATE_RELEASED:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3aea1e34304a5d8ffa7c9b0ed8ede4ef1a" kindref="member">PointerButtonState::Released</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a8103d5bfe1fa582fae0dfaecaa7c8c25" refkind="member"><highlight class="normal">QList&lt;PointerAxis&gt;<sp/><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a8103d5bfe1fa582fae0dfaecaa7c8c25" kindref="member">PointerEvent::axis</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="190"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;PointerAxis&gt;<sp/>a;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_event_pointer_has_axis(m_pointerEvent,<sp/>LIBINPUT_POINTER_AXIS_SCROLL_HORIZONTAL))<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aec4516626e95b6dc22c614c769a43590ac1b5fa03ecdb95d4a45dd1c40b02527f" kindref="member">PointerAxis::Horizontal</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_event_pointer_has_axis(m_pointerEvent,<sp/>LIBINPUT_POINTER_AXIS_SCROLL_VERTICAL))<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aec4516626e95b6dc22c614c769a43590a06ce2a25e5d12c166a36f654dbea6012" kindref="member">PointerAxis::Vertical</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a1bb776e534c2631f3687922a79bfc52d" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a1bb776e534c2631f3687922a79bfc52d" kindref="member">PointerEvent::scrollValue</ref>(<ref refid="namespace_k_win_1aec4516626e95b6dc22c614c769a43590" kindref="member">PointerAxis</ref><sp/><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a8103d5bfe1fa582fae0dfaecaa7c8c25" kindref="member">axis</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="202"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>libinput_pointer_axis<sp/>a<sp/>=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a8103d5bfe1fa582fae0dfaecaa7c8c25" kindref="member">axis</ref><sp/>==<sp/><ref refid="namespace_k_win_1aec4516626e95b6dc22c614c769a43590ac1b5fa03ecdb95d4a45dd1c40b02527f" kindref="member">PointerAxis::Horizontal</ref></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>LIBINPUT_POINTER_AXIS_SCROLL_HORIZONTAL</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>LIBINPUT_POINTER_AXIS_SCROLL_VERTICAL;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_event_pointer_get_scroll_value(m_pointerEvent,<sp/>a)<sp/>*<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1ae18c8cea7b81b308edefa8c42ddcebd1" kindref="member">device</ref>()-&gt;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a0c1957a86cf585aafe8858565ee27da9" kindref="member">scrollFactor</ref>();</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a0e2cd3e66b628184bb1415abf3b80862" refkind="member"><highlight class="normal">qint32<sp/><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a0e2cd3e66b628184bb1415abf3b80862" kindref="member">PointerEvent::scrollValueV120</ref>(<ref refid="namespace_k_win_1aec4516626e95b6dc22c614c769a43590" kindref="member">PointerAxis</ref><sp/><ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a8103d5bfe1fa582fae0dfaecaa7c8c25" kindref="member">axis</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="210"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>libinput_pointer_axis<sp/>a<sp/>=<sp/>(<ref refid="class_k_win_1_1_lib_input_1_1_pointer_event_1a8103d5bfe1fa582fae0dfaecaa7c8c25" kindref="member">axis</ref><sp/>==<sp/><ref refid="namespace_k_win_1aec4516626e95b6dc22c614c769a43590ac1b5fa03ecdb95d4a45dd1c40b02527f" kindref="member">PointerAxis::Horizontal</ref>)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>LIBINPUT_POINTER_AXIS_SCROLL_HORIZONTAL</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>LIBINPUT_POINTER_AXIS_SCROLL_VERTICAL;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_event_pointer_get_scroll_value_v120(m_pointerEvent,<sp/>a)<sp/>*<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1ae18c8cea7b81b308edefa8c42ddcebd1" kindref="member">device</ref>()-&gt;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a0c1957a86cf585aafe8858565ee27da9" kindref="member">scrollFactor</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="class_k_win_1_1_lib_input_1_1_touch_event_1a5e9e8dc7ed6917b97e8db6f0c141372a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_touch_event_1a5e9e8dc7ed6917b97e8db6f0c141372a" kindref="member">TouchEvent::TouchEvent</ref>(libinput_event<sp/>*event,<sp/>libinput_event_type<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1af2f00c6b64883754df912ffc62370af0" kindref="member">Event</ref>(event,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_touchEvent(libinput_event_get_touch_event(event))</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_touch_event_1a637214cdec590382f293679009dd746b" kindref="member">TouchEvent::~TouchEvent</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="class_k_win_1_1_lib_input_1_1_touch_event_1a26a94f9198300f950ddce6699b101d10" refkind="member"><highlight class="normal">std::chrono::microseconds<sp/><ref refid="class_k_win_1_1_lib_input_1_1_touch_event_1a26a94f9198300f950ddce6699b101d10" kindref="member">TouchEvent::time</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="226"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::microseconds(libinput_event_touch_get_time_usec(m_touchEvent));</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="class_k_win_1_1_lib_input_1_1_touch_event_1a97f290d50c768c1d87332fa3b288f19a" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_lib_input_1_1_touch_event_1a97f290d50c768c1d87332fa3b288f19a" kindref="member">TouchEvent::absolutePos</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="231"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>()<sp/>==<sp/>LIBINPUT_EVENT_TOUCH_DOWN<sp/>||<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>()<sp/>==<sp/>LIBINPUT_EVENT_TOUCH_MOTION);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(libinput_event_touch_get_x(m_touchEvent),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinput_event_touch_get_y(m_touchEvent));</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="class_k_win_1_1_lib_input_1_1_touch_event_1aed7dde2a4b571ef67140553cab9ee4a5" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_lib_input_1_1_touch_event_1a97f290d50c768c1d87332fa3b288f19a" kindref="member">TouchEvent::absolutePos</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="238"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>()<sp/>==<sp/>LIBINPUT_EVENT_TOUCH_DOWN<sp/>||<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>()<sp/>==<sp/>LIBINPUT_EVENT_TOUCH_MOTION);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(libinput_event_touch_get_x_transformed(m_touchEvent,<sp/>size.width()),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinput_event_touch_get_y_transformed(m_touchEvent,<sp/>size.height()));</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="class_k_win_1_1_lib_input_1_1_touch_event_1a549c600f257c7808e5d9a1b29d687ba6" refkind="member"><highlight class="normal">qint32<sp/><ref refid="class_k_win_1_1_lib_input_1_1_touch_event_1a549c600f257c7808e5d9a1b29d687ba6" kindref="member">TouchEvent::id</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="245"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>()<sp/>!=<sp/>LIBINPUT_EVENT_TOUCH_FRAME);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_event_touch_get_seat_slot(m_touchEvent);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="class_k_win_1_1_lib_input_1_1_gesture_event_1a2b44000ccf8a6acc0a86bfefb64d2b99" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1a2b44000ccf8a6acc0a86bfefb64d2b99" kindref="member">GestureEvent::GestureEvent</ref>(libinput_event<sp/>*event,<sp/>libinput_event_type<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1af2f00c6b64883754df912ffc62370af0" kindref="member">Event</ref>(event,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1ab96c7c75bcae15f15ddd8c0b935855f7" kindref="member">m_gestureEvent</ref>(libinput_event_get_gesture_event(event))</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1ae6409d60a5515ec2d2ce52a4f3f698c0" kindref="member">GestureEvent::~GestureEvent</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="class_k_win_1_1_lib_input_1_1_gesture_event_1a023a2e59a5e5d8cadf9e2ec1e51ee842" refkind="member"><highlight class="normal">std::chrono::microseconds<sp/><ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1a023a2e59a5e5d8cadf9e2ec1e51ee842" kindref="member">GestureEvent::time</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="260"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::microseconds(libinput_event_gesture_get_time_usec(<ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1ab96c7c75bcae15f15ddd8c0b935855f7" kindref="member">m_gestureEvent</ref>));</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="class_k_win_1_1_lib_input_1_1_gesture_event_1a8877c112131028d88e13edf212de8416" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1a8877c112131028d88e13edf212de8416" kindref="member">GestureEvent::fingerCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="265"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_event_gesture_get_finger_count(<ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1ab96c7c75bcae15f15ddd8c0b935855f7" kindref="member">m_gestureEvent</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="class_k_win_1_1_lib_input_1_1_gesture_event_1a1529277d0c147ea15cb39bb511a1859d" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1a1529277d0c147ea15cb39bb511a1859d" kindref="member">GestureEvent::delta</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="270"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(libinput_event_gesture_get_dx_unaccelerated(<ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1ab96c7c75bcae15f15ddd8c0b935855f7" kindref="member">m_gestureEvent</ref>),</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinput_event_gesture_get_dy_unaccelerated(<ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1ab96c7c75bcae15f15ddd8c0b935855f7" kindref="member">m_gestureEvent</ref>));</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="class_k_win_1_1_lib_input_1_1_gesture_event_1afe65a3cd762928297803f6db5b770956" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1afe65a3cd762928297803f6db5b770956" kindref="member">GestureEvent::isCancelled</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="276"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_event_gesture_get_cancelled(<ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1ab96c7c75bcae15f15ddd8c0b935855f7" kindref="member">m_gestureEvent</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="class_k_win_1_1_lib_input_1_1_pinch_gesture_event_1a3e6838f446f7e0de8a962a3819d2fb92" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_pinch_gesture_event_1a3e6838f446f7e0de8a962a3819d2fb92" kindref="member">PinchGestureEvent::PinchGestureEvent</ref>(libinput_event<sp/>*event,<sp/>libinput_event_type<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1a2b44000ccf8a6acc0a86bfefb64d2b99" kindref="member">GestureEvent</ref>(event,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_pinch_gesture_event_1a543f42ed560ae5439acfbb2031ff293b" kindref="member">PinchGestureEvent::~PinchGestureEvent</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="class_k_win_1_1_lib_input_1_1_pinch_gesture_event_1a53040ebb9e725e3f398397bc6e324680" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_lib_input_1_1_pinch_gesture_event_1a53040ebb9e725e3f398397bc6e324680" kindref="member">PinchGestureEvent::scale</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="288"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_event_gesture_get_scale(<ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1ab96c7c75bcae15f15ddd8c0b935855f7" kindref="member">m_gestureEvent</ref>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="class_k_win_1_1_lib_input_1_1_pinch_gesture_event_1abd5f9237ef7ba9d1700cc9f5c4a52569" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_lib_input_1_1_pinch_gesture_event_1abd5f9237ef7ba9d1700cc9f5c4a52569" kindref="member">PinchGestureEvent::angleDelta</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="293"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_event_gesture_get_angle_delta(<ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1ab96c7c75bcae15f15ddd8c0b935855f7" kindref="member">m_gestureEvent</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="class_k_win_1_1_lib_input_1_1_swipe_gesture_event_1a71310b48c8706cd661288ef6cbf6ba46" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_swipe_gesture_event_1a71310b48c8706cd661288ef6cbf6ba46" kindref="member">SwipeGestureEvent::SwipeGestureEvent</ref>(libinput_event<sp/>*event,<sp/>libinput_event_type<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1a2b44000ccf8a6acc0a86bfefb64d2b99" kindref="member">GestureEvent</ref>(event,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_swipe_gesture_event_1a3c137a9089868ad094b9fc96da4c4b39" kindref="member">SwipeGestureEvent::~SwipeGestureEvent</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="class_k_win_1_1_lib_input_1_1_hold_gesture_event_1a9f6a39477050c0a7d21d390b0b79d467" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_hold_gesture_event_1a9f6a39477050c0a7d21d390b0b79d467" kindref="member">HoldGestureEvent::HoldGestureEvent</ref>(libinput_event<sp/>*event,<sp/>libinput_event_type<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_lib_input_1_1_gesture_event_1a2b44000ccf8a6acc0a86bfefb64d2b99" kindref="member">GestureEvent</ref>(event,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_hold_gesture_event_1aacc6382cb8a02dd2e5a03c757b8a50a7" kindref="member">HoldGestureEvent::~HoldGestureEvent</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_k_win_1_1_lib_input_1_1_switch_event_1afed2a3409dc1c806671f9860175734f6" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_switch_event_1afed2a3409dc1c806671f9860175734f6" kindref="member">SwitchEvent::SwitchEvent</ref>(libinput_event<sp/>*event,<sp/>libinput_event_type<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1af2f00c6b64883754df912ffc62370af0" kindref="member">Event</ref>(event,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_switchEvent(libinput_event_get_switch_event(event))</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_switch_event_1ad04e581112fbdcf2dbf2051e6879dc87" kindref="member">SwitchEvent::~SwitchEvent</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="class_k_win_1_1_lib_input_1_1_switch_event_1a08399d90728c9e540f6aed403c4f3949" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1abbce8a26ea93b91db7bbdceca2155130" kindref="member">SwitchState</ref><sp/><ref refid="class_k_win_1_1_lib_input_1_1_switch_event_1a08399d90728c9e540f6aed403c4f3949" kindref="member">SwitchEvent::state</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="320"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(libinput_event_switch_get_switch_state(m_switchEvent))<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_SWITCH_STATE_OFF:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1abbce8a26ea93b91db7bbdceca2155130ad15305d7a4e34e02489c74a5ef542f36" kindref="member">SwitchState::Off</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_SWITCH_STATE_ON:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1abbce8a26ea93b91db7bbdceca2155130a521c36a31c2762741cf0f8890cbe05e3" kindref="member">SwitchState::On</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1abbce8a26ea93b91db7bbdceca2155130ad15305d7a4e34e02489c74a5ef542f36" kindref="member">SwitchState::Off</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="class_k_win_1_1_lib_input_1_1_switch_event_1a8ff62959082d806f598f91e07ffc29ac" refkind="member"><highlight class="normal">std::chrono::microseconds<sp/><ref refid="class_k_win_1_1_lib_input_1_1_switch_event_1a8ff62959082d806f598f91e07ffc29ac" kindref="member">SwitchEvent::time</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="333"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::microseconds(libinput_event_switch_get_time_usec(m_switchEvent));</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="class_k_win_1_1_lib_input_1_1_tablet_tool_event_1ae4141c510d9add36427bee583f929cda" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_event_1ae4141c510d9add36427bee583f929cda" kindref="member">TabletToolEvent::TabletToolEvent</ref>(libinput_event<sp/>*event,<sp/>libinput_event_type<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1af2f00c6b64883754df912ffc62370af0" kindref="member">Event</ref>(event,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tabletToolEvent(libinput_event_get_tablet_tool_event(event))</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="class_k_win_1_1_lib_input_1_1_tablet_tool_event_1abac45664a856d7c82b6f0cba89c8b56c" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_event_1abac45664a856d7c82b6f0cba89c8b56c" kindref="member">TabletToolEvent::transformedPosition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="344"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>outputArea<sp/>=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1ae18c8cea7b81b308edefa8c42ddcebd1" kindref="member">device</ref>()-&gt;<ref refid="class_k_win_1_1_lib_input_1_1_device_1ae0e9f9670bc33b6079a1d69351b2947e" kindref="member">outputArea</ref>();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{(size.width()<sp/>-<sp/>1)<sp/>*<sp/>outputArea.x()<sp/>+<sp/>libinput_event_tablet_tool_get_x_transformed(m_tabletToolEvent,<sp/>(size.width()<sp/>-<sp/>1)<sp/>*<sp/>outputArea.width()),</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(size.height()<sp/>-<sp/>1)<sp/>*<sp/>outputArea.y()<sp/>+<sp/>libinput_event_tablet_tool_get_y_transformed(m_tabletToolEvent,<sp/>(size.height()<sp/>-<sp/>1)<sp/>*<sp/>outputArea.height())};</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="class_k_win_1_1_lib_input_1_1_tablet_tool_button_event_1ac7fbe8152cb1e8655cf038a51f3e4f6d" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_button_event_1ac7fbe8152cb1e8655cf038a51f3e4f6d" kindref="member">TabletToolButtonEvent::TabletToolButtonEvent</ref>(libinput_event<sp/>*event,<sp/>libinput_event_type<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1af2f00c6b64883754df912ffc62370af0" kindref="member">Event</ref>(event,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tabletToolEvent(libinput_event_get_tablet_tool_event(event))</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="class_k_win_1_1_lib_input_1_1_tablet_pad_button_event_1af4485db18baa4fed226af93cc79febbf" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_tablet_pad_button_event_1af4485db18baa4fed226af93cc79febbf" kindref="member">TabletPadButtonEvent::TabletPadButtonEvent</ref>(libinput_event<sp/>*event,<sp/>libinput_event_type<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1af2f00c6b64883754df912ffc62370af0" kindref="member">Event</ref>(event,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tabletPadEvent(libinput_event_get_tablet_pad_event(event))</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="class_k_win_1_1_lib_input_1_1_tablet_pad_strip_event_1ac34ca9f8c92240d4244970324bc58094" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_tablet_pad_strip_event_1ac34ca9f8c92240d4244970324bc58094" kindref="member">TabletPadStripEvent::TabletPadStripEvent</ref>(libinput_event<sp/>*event,<sp/>libinput_event_type<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1af2f00c6b64883754df912ffc62370af0" kindref="member">Event</ref>(event,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tabletPadEvent(libinput_event_get_tablet_pad_event(event))</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="class_k_win_1_1_lib_input_1_1_tablet_pad_ring_event_1acd77e7c7a93a30309443d3e361790314" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_tablet_pad_ring_event_1acd77e7c7a93a30309443d3e361790314" kindref="member">TabletPadRingEvent::TabletPadRingEvent</ref>(libinput_event<sp/>*event,<sp/>libinput_event_type<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1af2f00c6b64883754df912ffc62370af0" kindref="member">Event</ref>(event,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_event_1aaf5e352ce7ef641c1806a7783f048ca3" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tabletPadEvent(libinput_event_get_tablet_pad_event(event))</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/backends/libinput/events.cpp"/>
  </compounddef>
</doxygen>
