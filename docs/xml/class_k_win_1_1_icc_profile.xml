<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_icc_profile" kind="class" language="C++" prot="public">
    <compoundname>KWin::IccProfile</compoundname>
    <includes refid="iccprofile_8h" local="no">iccprofile.h</includes>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_icc_profile_1aaa42770c4ec2dd840ae35e7b837cae94" prot="public" static="yes" mutable="no">
        <type>const <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref></type>
        <definition>const ColorDescription KWin::IccProfile::s_connectionSpace</definition>
        <argsstring></argsstring>
        <name>s_connectionSpace</name>
        <qualifiedname>KWin::IccProfile::s_connectionSpace</qualifiedname>
        <initializer>= <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref>(CIEXYZD50, <ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref>(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ac4d9acf6c01c7c6872491ce9d8370410" kindref="member">TransferFunction::linear</ref>, 0, 1), 1, 0, 1, 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="52" column="35" bodyfile="kwin/src/core/iccprofile.h" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_icc_profile_1a3785b7a673844b596feab64b8f8e2f18" prot="private" static="no" mutable="no">
        <type><ref refid="iccprofile_8h_1abea1909e7159ef8bdef5296a7da54948" kindref="member">cmsHPROFILE</ref> const</type>
        <definition>cmsHPROFILE const KWin::IccProfile::m_handle</definition>
        <argsstring></argsstring>
        <name>m_handle</name>
        <qualifiedname>KWin::IccProfile::m_handle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="55" column="23" bodyfile="kwin/src/core/iccprofile.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_icc_profile_1adbe1bfb614208b537fb5fd33e65c4922" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref></type>
        <definition>const Colorimetry KWin::IccProfile::m_colorimetry</definition>
        <argsstring></argsstring>
        <name>m_colorimetry</name>
        <qualifiedname>KWin::IccProfile::m_colorimetry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="56" column="23" bodyfile="kwin/src/core/iccprofile.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_icc_profile_1a14269729cf936940d2f68e3b6d4b0c1b" prot="private" static="no" mutable="no">
        <type>const std::optional&lt; <ref refid="class_k_win_1_1_color_pipeline" kindref="compound">ColorPipeline</ref> &gt;</type>
        <definition>const std::optional&lt;ColorPipeline&gt; KWin::IccProfile::m_bToA0Tag</definition>
        <argsstring></argsstring>
        <name>m_bToA0Tag</name>
        <qualifiedname>KWin::IccProfile::m_bToA0Tag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="57" column="25" bodyfile="kwin/src/core/iccprofile.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_icc_profile_1a92644c144dc66647263b5cee1e15ae46" prot="private" static="no" mutable="no">
        <type>const std::optional&lt; <ref refid="class_k_win_1_1_color_pipeline" kindref="compound">ColorPipeline</ref> &gt;</type>
        <definition>const std::optional&lt;ColorPipeline&gt; KWin::IccProfile::m_bToA1Tag</definition>
        <argsstring></argsstring>
        <name>m_bToA1Tag</name>
        <qualifiedname>KWin::IccProfile::m_bToA1Tag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="58" column="25" bodyfile="kwin/src/core/iccprofile.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_icc_profile_1a96f5716f25be0c66b73f44d7368ba209" prot="private" static="no" mutable="no">
        <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_color_transformation" kindref="compound">ColorTransformation</ref> &gt;</type>
        <definition>const std::shared_ptr&lt;ColorTransformation&gt; KWin::IccProfile::m_inverseEOTF</definition>
        <argsstring></argsstring>
        <name>m_inverseEOTF</name>
        <qualifiedname>KWin::IccProfile::m_inverseEOTF</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="59" column="27" bodyfile="kwin/src/core/iccprofile.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_icc_profile_1a51e7dc8b7b38ebcd96ef775a977b6fad" prot="private" static="no" mutable="no">
        <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_color_transformation" kindref="compound">ColorTransformation</ref> &gt;</type>
        <definition>const std::shared_ptr&lt;ColorTransformation&gt; KWin::IccProfile::m_vcgt</definition>
        <argsstring></argsstring>
        <name>m_vcgt</name>
        <qualifiedname>KWin::IccProfile::m_vcgt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="60" column="27" bodyfile="kwin/src/core/iccprofile.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_icc_profile_1aa8c1187ec45f0b1c100bff331a8fd96d" prot="private" static="no" mutable="no">
        <type>const std::optional&lt; double &gt;</type>
        <definition>const std::optional&lt;double&gt; KWin::IccProfile::m_minBrightness</definition>
        <argsstring></argsstring>
        <name>m_minBrightness</name>
        <qualifiedname>KWin::IccProfile::m_minBrightness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="61" column="25" bodyfile="kwin/src/core/iccprofile.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_icc_profile_1aa91816e81eb01a39f9926a671cc2c1f0" prot="private" static="no" mutable="no">
        <type>const std::optional&lt; double &gt;</type>
        <definition>const std::optional&lt;double&gt; KWin::IccProfile::m_maxBrightness</definition>
        <argsstring></argsstring>
        <name>m_maxBrightness</name>
        <qualifiedname>KWin::IccProfile::m_maxBrightness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="62" column="25" bodyfile="kwin/src/core/iccprofile.h" bodystart="62" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_icc_profile_1a65f522d1e4f3b07cf83fcbff0b6e76cc" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::IccProfile::IccProfile</definition>
        <argsstring>(cmsHPROFILE handle, const Colorimetry &amp;colorimetry, std::optional&lt; ColorPipeline &gt; &amp;&amp;bToA0Tag, std::optional&lt; ColorPipeline &gt; &amp;&amp;bToA1Tag, const std::shared_ptr&lt; ColorTransformation &gt; &amp;inverseEOTF, const std::shared_ptr&lt; ColorTransformation &gt; &amp;vcgt, std::optional&lt; double &gt; minBrightness, std::optional&lt; double &gt; maxBrightness)</argsstring>
        <name>IccProfile</name>
        <qualifiedname>KWin::IccProfile::IccProfile</qualifiedname>
        <param>
          <type><ref refid="iccprofile_8h_1abea1909e7159ef8bdef5296a7da54948" kindref="member">cmsHPROFILE</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref> &amp;</type>
          <declname>colorimetry</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="class_k_win_1_1_color_pipeline" kindref="compound">ColorPipeline</ref> &gt; &amp;&amp;</type>
          <declname>bToA0Tag</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="class_k_win_1_1_color_pipeline" kindref="compound">ColorPipeline</ref> &gt; &amp;&amp;</type>
          <declname>bToA1Tag</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_color_transformation" kindref="compound">ColorTransformation</ref> &gt; &amp;</type>
          <declname>inverseEOTF</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_color_transformation" kindref="compound">ColorTransformation</ref> &gt; &amp;</type>
          <declname>vcgt</declname>
        </param>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>minBrightness</declname>
        </param>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>maxBrightness</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="29" column="14" bodyfile="kwin/src/core/iccprofile.cpp" bodystart="30" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_icc_profile_1a6eaf3f25dd47fc04c8fb7a533509ee6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::IccProfile::~IccProfile</definition>
        <argsstring>()</argsstring>
        <name>~IccProfile</name>
        <qualifiedname>KWin::IccProfile::~IccProfile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="30" column="5" bodyfile="kwin/src/core/iccprofile.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_icc_profile_1aca71cdedb465d5d009df1f591b2d996f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_k_win_1_1_color_pipeline" kindref="compound">ColorPipeline</ref> *</type>
        <definition>const ColorPipeline * KWin::IccProfile::BToATag</definition>
        <argsstring>(RenderingIntent intent) const</argsstring>
        <name>BToATag</name>
        <qualifiedname>KWin::IccProfile::BToATag</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9" kindref="member">RenderingIntent</ref></type>
          <declname>intent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the BToA tag describes a transformation from <ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref> with D50 whitepoint to the display color space. May be nullptr! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="36" column="25" bodyfile="kwin/src/core/iccprofile.cpp" bodystart="72" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_icc_profile_1a5d2c66f8b295bad31f66d9c006b44d06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_color_transformation" kindref="compound">ColorTransformation</ref> &gt;</type>
        <definition>std::shared_ptr&lt; ColorTransformation &gt; KWin::IccProfile::inverseTransferFunction</definition>
        <argsstring>() const</argsstring>
        <name>inverseTransferFunction</name>
        <qualifiedname>KWin::IccProfile::inverseTransferFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NOTE that this inverse transfer function is an estimation and not necessarily exact! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="41" column="21" bodyfile="kwin/src/core/iccprofile.cpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_icc_profile_1a38ed68cc3e8780df41f938fb4e9dc754" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_color_transformation" kindref="compound">ColorTransformation</ref> &gt;</type>
        <definition>std::shared_ptr&lt; ColorTransformation &gt; KWin::IccProfile::vcgt</definition>
        <argsstring>() const</argsstring>
        <name>vcgt</name>
        <qualifiedname>KWin::IccProfile::vcgt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The VCGT is a non-standard tag that needs to be applied before pixels are sent to the display. May be nullptr! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="46" column="21" bodyfile="kwin/src/core/iccprofile.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_icc_profile_1a17a4ecbc9e22d4c314f93b7d7e9ae589" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref> &amp;</type>
        <definition>const Colorimetry &amp; KWin::IccProfile::colorimetry</definition>
        <argsstring>() const</argsstring>
        <name>colorimetry</name>
        <qualifiedname>KWin::IccProfile::colorimetry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="47" column="23" bodyfile="kwin/src/core/iccprofile.cpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_icc_profile_1a46cb1f6d6da3cd1f0009aca6e470444a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt; double &gt; KWin::IccProfile::minBrightness</definition>
        <argsstring>() const</argsstring>
        <name>minBrightness</name>
        <qualifiedname>KWin::IccProfile::minBrightness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="48" column="19" bodyfile="kwin/src/core/iccprofile.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_icc_profile_1aa8b37585e08fb50cf8f7042bbc5aeaf9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt; double &gt; KWin::IccProfile::maxBrightness</definition>
        <argsstring>() const</argsstring>
        <name>maxBrightness</name>
        <qualifiedname>KWin::IccProfile::maxBrightness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="49" column="19" bodyfile="kwin/src/core/iccprofile.cpp" bodystart="52" bodyend="55"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_icc_profile_1af4a3ac4edf53e22f327152864cbe1956" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::expected&lt; std::unique_ptr&lt; <ref refid="class_k_win_1_1_icc_profile" kindref="compound">IccProfile</ref> &gt;, QString &gt;</type>
        <definition>std::expected&lt; std::unique_ptr&lt; IccProfile &gt;, QString &gt; KWin::IccProfile::load</definition>
        <argsstring>(const QString &amp;path)</argsstring>
        <name>load</name>
        <qualifiedname>KWin::IccProfile::load</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/iccprofile.h" line="51" column="26" bodyfile="kwin/src/core/iccprofile.cpp" bodystart="244" bodyend="408"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>KWin::ColorDescription</label>
        <link refid="class_k_win_1_1_color_description"/>
        <childnode refid="2" relation="usage">
          <edgelabel>sRGB</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>KWin::IccProfile</label>
        <link refid="class_k_win_1_1_icc_profile"/>
        <childnode refid="2" relation="usage">
          <edgelabel>s_connectionSpace</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/src/core/iccprofile.h" line="26" column="1" bodyfile="kwin/src/core/iccprofile.h" bodystart="27" bodyend="63"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_icc_profile_1aca71cdedb465d5d009df1f591b2d996f" prot="public" virt="non-virtual"><scope>KWin::IccProfile</scope><name>BToATag</name></member>
      <member refid="class_k_win_1_1_icc_profile_1a17a4ecbc9e22d4c314f93b7d7e9ae589" prot="public" virt="non-virtual"><scope>KWin::IccProfile</scope><name>colorimetry</name></member>
      <member refid="class_k_win_1_1_icc_profile_1a65f522d1e4f3b07cf83fcbff0b6e76cc" prot="public" virt="non-virtual"><scope>KWin::IccProfile</scope><name>IccProfile</name></member>
      <member refid="class_k_win_1_1_icc_profile_1a5d2c66f8b295bad31f66d9c006b44d06" prot="public" virt="non-virtual"><scope>KWin::IccProfile</scope><name>inverseTransferFunction</name></member>
      <member refid="class_k_win_1_1_icc_profile_1af4a3ac4edf53e22f327152864cbe1956" prot="public" virt="non-virtual"><scope>KWin::IccProfile</scope><name>load</name></member>
      <member refid="class_k_win_1_1_icc_profile_1a14269729cf936940d2f68e3b6d4b0c1b" prot="private" virt="non-virtual"><scope>KWin::IccProfile</scope><name>m_bToA0Tag</name></member>
      <member refid="class_k_win_1_1_icc_profile_1a92644c144dc66647263b5cee1e15ae46" prot="private" virt="non-virtual"><scope>KWin::IccProfile</scope><name>m_bToA1Tag</name></member>
      <member refid="class_k_win_1_1_icc_profile_1adbe1bfb614208b537fb5fd33e65c4922" prot="private" virt="non-virtual"><scope>KWin::IccProfile</scope><name>m_colorimetry</name></member>
      <member refid="class_k_win_1_1_icc_profile_1a3785b7a673844b596feab64b8f8e2f18" prot="private" virt="non-virtual"><scope>KWin::IccProfile</scope><name>m_handle</name></member>
      <member refid="class_k_win_1_1_icc_profile_1a96f5716f25be0c66b73f44d7368ba209" prot="private" virt="non-virtual"><scope>KWin::IccProfile</scope><name>m_inverseEOTF</name></member>
      <member refid="class_k_win_1_1_icc_profile_1aa91816e81eb01a39f9926a671cc2c1f0" prot="private" virt="non-virtual"><scope>KWin::IccProfile</scope><name>m_maxBrightness</name></member>
      <member refid="class_k_win_1_1_icc_profile_1aa8c1187ec45f0b1c100bff331a8fd96d" prot="private" virt="non-virtual"><scope>KWin::IccProfile</scope><name>m_minBrightness</name></member>
      <member refid="class_k_win_1_1_icc_profile_1a51e7dc8b7b38ebcd96ef775a977b6fad" prot="private" virt="non-virtual"><scope>KWin::IccProfile</scope><name>m_vcgt</name></member>
      <member refid="class_k_win_1_1_icc_profile_1aa8b37585e08fb50cf8f7042bbc5aeaf9" prot="public" virt="non-virtual"><scope>KWin::IccProfile</scope><name>maxBrightness</name></member>
      <member refid="class_k_win_1_1_icc_profile_1a46cb1f6d6da3cd1f0009aca6e470444a" prot="public" virt="non-virtual"><scope>KWin::IccProfile</scope><name>minBrightness</name></member>
      <member refid="class_k_win_1_1_icc_profile_1aaa42770c4ec2dd840ae35e7b837cae94" prot="public" virt="non-virtual"><scope>KWin::IccProfile</scope><name>s_connectionSpace</name></member>
      <member refid="class_k_win_1_1_icc_profile_1a38ed68cc3e8780df41f938fb4e9dc754" prot="public" virt="non-virtual"><scope>KWin::IccProfile</scope><name>vcgt</name></member>
      <member refid="class_k_win_1_1_icc_profile_1a6eaf3f25dd47fc04c8fb7a533509ee6d" prot="public" virt="non-virtual"><scope>KWin::IccProfile</scope><name>~IccProfile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
