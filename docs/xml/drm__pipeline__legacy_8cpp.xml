<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="drm__pipeline__legacy_8cpp" kind="file" language="C++">
    <compoundname>drm_pipeline_legacy.cpp</compoundname>
    <includes refid="graphicsbuffer_8h" local="yes">core/graphicsbuffer.h</includes>
    <includes refid="drm__buffer_8h" local="yes">drm_buffer.h</includes>
    <includes refid="drm__commit_8h" local="yes">drm_commit.h</includes>
    <includes refid="drm__commit__thread_8h" local="yes">drm_commit_thread.h</includes>
    <includes refid="drm__connector_8h" local="yes">drm_connector.h</includes>
    <includes refid="drm__crtc_8h" local="yes">drm_crtc.h</includes>
    <includes refid="drm__gpu_8h" local="yes">drm_gpu.h</includes>
    <includes refid="drm__layer_8h" local="yes">drm_layer.h</includes>
    <includes refid="drm__logging_8h" local="yes">drm_logging.h</includes>
    <includes refid="drm__pipeline_8h" local="yes">drm_pipeline.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">gbm.h</includes>
    <incdepgraph>
      <node id="46">
        <label>drm_blob.h</label>
        <link refid="drm__blob_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>drm_buffer.h</label>
        <link refid="drm__buffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>drm_colorop.h</label>
        <link refid="drm__colorop_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>drm_commit.h</label>
        <link refid="drm__commit_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>drm_commit_thread.h</label>
        <link refid="drm__commit__thread_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>drm_connector.h</label>
        <link refid="drm__connector_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>drm_crtc.h</label>
        <link refid="drm__crtc_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>drm_gpu.h</label>
        <link refid="drm__gpu_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>drm_layer.h</label>
        <link refid="drm__layer_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>drm_logging.h</label>
        <link refid="drm__logging_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>drm_object.h</label>
        <link refid="drm__object_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>drm_pipeline.h</label>
        <link refid="drm__pipeline_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/backends/drm/drm_pipeline_legacy.cpp</label>
        <link refid="drm__pipeline__legacy_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>drm_plane.h</label>
        <link refid="drm__plane_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>drm_pointer.h</label>
        <link refid="drm__pointer_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>drm_property.h</label>
        <link refid="drm__property_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>colorlut3d.h</label>
        <link refid="colorlut3d_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>core/colorpipeline.h</label>
        <link refid="colorpipeline_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>colortransformation.h</label>
        <link refid="colortransformation_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>core/drmdevice.h</label>
        <link refid="drmdevice_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>graphicsbufferallocator.h</label>
        <link refid="graphicsbufferallocator_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>core/outputlayer.h</label>
        <link refid="outputlayer_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>renderjournal.h</label>
        <link refid="renderjournal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>core/renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>core/renderloop_p.h</label>
        <link refid="renderloop__p_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>QByteArray</label>
      </node>
      <node id="19">
        <label>QCoreApplication</label>
      </node>
      <node id="28">
        <label>QDebug</label>
      </node>
      <node id="13">
        <label>QHash</label>
      </node>
      <node id="20">
        <label>QImage</label>
      </node>
      <node id="31">
        <label>QList</label>
      </node>
      <node id="29">
        <label>QLoggingCategory</label>
      </node>
      <node id="32">
        <label>QMap</label>
      </node>
      <node id="43">
        <label>QMatrix4x4</label>
      </node>
      <node id="5">
        <label>QObject</label>
      </node>
      <node id="21">
        <label>QPoint</label>
      </node>
      <node id="67">
        <label>QPointer</label>
      </node>
      <node id="44">
        <label>QRect</label>
      </node>
      <node id="79">
        <label>QRegion</label>
      </node>
      <node id="6">
        <label>QSize</label>
      </node>
      <node id="74">
        <label>QSocketNotifier</label>
      </node>
      <node id="60">
        <label>QString</label>
      </node>
      <node id="34">
        <label>QThread</label>
      </node>
      <node id="69">
        <label>QTimer</label>
      </node>
      <node id="45">
        <label>QUuid</label>
      </node>
      <node id="22">
        <label>QVariant</label>
      </node>
      <node id="53">
        <label>QVector</label>
      </node>
      <node id="23">
        <label>QVector2D</label>
      </node>
      <node id="9">
        <label>chrono</label>
      </node>
      <node id="35">
        <label>condition_variable</label>
      </node>
      <node id="18">
        <label>config-kwin.h</label>
      </node>
      <node id="56">
        <label>drm.h</label>
      </node>
      <node id="76">
        <label>epoxy/egl.h</label>
      </node>
      <node id="80">
        <label>errno.h</label>
      </node>
      <node id="70">
        <label>fstream</label>
      </node>
      <node id="81">
        <label>gbm.h</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
      <node id="36">
        <label>mutex</label>
      </node>
      <node id="42">
        <label>optional</label>
      </node>
      <node id="75">
        <label>qobject.h</label>
      </node>
      <node id="72">
        <label>qobjectdefs.h</label>
      </node>
      <node id="57">
        <label>span</label>
      </node>
      <node id="47">
        <label>stdint.h</label>
      </node>
      <node id="61">
        <label>sys/types.h</label>
      </node>
      <node id="55">
        <label>tuple</label>
      </node>
      <node id="14">
        <label>unordered_map</label>
      </node>
      <node id="15">
        <label>unordered_set</label>
      </node>
      <node id="7">
        <label>utility</label>
      </node>
      <node id="37">
        <label>vector</label>
      </node>
      <node id="25">
        <label>xf86drm.h</label>
      </node>
      <node id="12">
        <label>xf86drmMode.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graphicsbuffer_8h" kindref="compound">core/graphicsbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__buffer_8h" kindref="compound">drm_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__commit_8h" kindref="compound">drm_commit.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__commit__thread_8h" kindref="compound">drm_commit_thread.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__connector_8h" kindref="compound">drm_connector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__crtc_8h" kindref="compound">drm_crtc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__gpu_8h" kindref="compound">drm_gpu.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__layer_8h" kindref="compound">drm_layer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__logging_8h" kindref="compound">drm_logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__pipeline_8h" kindref="compound">drm_pipeline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gbm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">DrmPipeline::Error</ref><sp/>DrmPipeline::presentLegacy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">Error</ref><sp/>err<sp/>=<sp/>applyPendingChangesLegacy();<sp/>err<sp/>!=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buffer<sp/>=<sp/>m_primaryLayer-&gt;currentBuffer();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_primaryLayer-&gt;sourceRect()<sp/>!=<sp/>m_primaryLayer-&gt;targetRect()<sp/>||<sp/>m_primaryLayer-&gt;targetRect()<sp/>!=<sp/>QRect(QPoint(0,<sp/>0),<sp/>buffer-&gt;buffer()-&gt;size()))<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>commit<sp/>=<sp/>std::make_unique&lt;DrmLegacyCommit&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>buffer,<sp/>frame);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!commit-&gt;doPageflip(m_pending.presentationMode))<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Page<sp/>flip<sp/>failed:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errnoToError();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>m_commitThread-&gt;setPendingCommit(std::move(commit));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_k_win_1_1_drm_pipeline_1a99756c008e80a303ad18144002a02a70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a99756c008e80a303ad18144002a02a70" kindref="member">DrmPipeline::forceLegacyModeset</ref>()</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1af7db525a7239d89edbaf003be2bfac72" kindref="member">activePending</ref>())<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legacyModeset();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLegacyGamma();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">DrmPipeline::Error</ref><sp/>DrmPipeline::legacyModeset()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_primaryLayer-&gt;checkTestBuffer())<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba041b9356343474123a9604fbd61c5dc4" kindref="member">Error::TestBufferFailed</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buffer<sp/>=<sp/>m_primaryLayer-&gt;currentBuffer();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_primaryLayer-&gt;sourceRect()<sp/>!=<sp/>QRect(QPoint(0,<sp/>0),<sp/>buffer-&gt;buffer()-&gt;size()))<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>commit<sp/>=<sp/>std::make_unique&lt;DrmLegacyCommit&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>buffer,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!commit-&gt;doModeset(m_connector,<sp/>m_pending.mode.get()))<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Modeset<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errnoToError();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">DrmPipeline::Error</ref><sp/>DrmPipeline::commitPipelinesLegacy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;DrmPipeline<sp/>*&gt;<sp/>&amp;pipelines,<sp/>CommitMode<sp/>mode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;DrmObject<sp/>*&gt;<sp/>&amp;unusedObjects)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">Error</ref><sp/>err<sp/>=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pipeline<sp/>:<sp/>pipelines)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>pipeline-&gt;applyPendingChangesLegacy();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>least<sp/>try<sp/>to<sp/>revert<sp/>the<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pipeline<sp/>:<sp/>pipelines)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline-&gt;revertPendingChanges();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline-&gt;applyPendingChangesLegacy();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pipeline<sp/>:<sp/>pipelines)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline-&gt;applyPendingChanges();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref><sp/>==<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894cae60a24390723aaabf0dec8612ff6517b" kindref="member">CommitMode::CommitModeset</ref><sp/>&amp;&amp;<sp/>pipeline-&gt;activePending())<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline-&gt;pageFlipped(std::chrono::steady_clock::now().time_since_epoch());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;obj<sp/>:<sp/>unusedObjects)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1ade877865c237b042bcff6884eaa6be0a" kindref="member">crtc</ref><sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">DrmCrtc<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj))<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drmModeSetCrtc(pipelines.front()-&gt;gpu()-&gt;fd(),<sp/><ref refid="class_k_win_1_1_drm_pipeline_1ade877865c237b042bcff6884eaa6be0a" kindref="member">crtc</ref>-&gt;id(),<sp/>0,<sp/>0,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">DrmPipeline::Error</ref><sp/>DrmPipeline::applyPendingChangesLegacy()</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pending.active<sp/>&amp;&amp;<sp/>m_pending.crtc)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drmModeSetCursor(<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;fd(),<sp/>m_pending.crtc-&gt;id(),<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1af7db525a7239d89edbaf003be2bfac72" kindref="member">activePending</ref>())<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_primaryLayer-&gt;colorPipeline().isIdentity()<sp/>||<sp/>!m_cursorLayer-&gt;colorPipeline().isIdentity())<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>while<sp/>it&apos;s<sp/>technically<sp/>possible<sp/>to<sp/>set<sp/>CRTC<sp/>color<sp/>management<sp/>properties,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>may<sp/>result<sp/>in<sp/>glitches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">DrmPipeline::Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldEnableVrr<sp/>=<sp/>m_pending.presentationMode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a21ae134702d2a8b0953846e2e4ee9e95" kindref="member">PresentationMode::AdaptiveSync</ref><sp/>||<sp/>m_pending.presentationMode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767abe8b04736227cf3f2ab88320638e9505" kindref="member">PresentationMode::AdaptiveAsync</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.crtc-&gt;vrrEnabled.isValid()<sp/>&amp;&amp;<sp/>!m_pending.crtc-&gt;vrrEnabled.setPropertyLegacy(shouldEnableVrr))<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>vrr<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errnoToError();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;broadcastRGB.isValid())<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_connector-&gt;broadcastRGB.setEnumLegacy(<ref refid="class_k_win_1_1_drm_connector_1a5b4473f103edc6d43fea880dcda809fc" kindref="member">DrmConnector::rgbRangeToBroadcastRgb</ref>(m_pending.rgbRange));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;overscan.isValid())<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_connector-&gt;overscan.setPropertyLegacy(m_pending.overscan);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;underscan.isValid())<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>hborder<sp/>=<sp/>calculateUnderscan();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_connector-&gt;underscan.setEnumLegacy(m_pending.overscan<sp/>!=<sp/>0<sp/>?<sp/><ref refid="class_k_win_1_1_drm_connector_1a570fa52b4a07182c9c8ada17326a2ff9a521c36a31c2762741cf0f8890cbe05e3" kindref="member">DrmConnector::UnderscanOptions::On</ref><sp/>:<sp/><ref refid="class_k_win_1_1_drm_connector_1a570fa52b4a07182c9c8ada17326a2ff9ad15305d7a4e34e02489c74a5ef542f36" kindref="member">DrmConnector::UnderscanOptions::Off</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_connector-&gt;underscanVBorder.setPropertyLegacy(m_pending.overscan);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_connector-&gt;underscanHBorder.setPropertyLegacy(hborder);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;scalingMode.isValid()<sp/>&amp;&amp;<sp/>m_connector-&gt;scalingMode.hasEnum(<ref refid="class_k_win_1_1_drm_connector_1ad35442285b66b35fec93cea422b9564ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">DrmConnector::ScalingMode::None</ref>))<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_connector-&gt;scalingMode.setEnumLegacy(<ref refid="class_k_win_1_1_drm_connector_1ad35442285b66b35fec93cea422b9564ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">DrmConnector::ScalingMode::None</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;hdrMetadata.isValid())<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>blob<sp/>=<sp/>createHdrMetadata(m_pending.hdr<sp/>?<sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a326f23a55a0039ee6a7130470b8b8779" kindref="member">TransferFunction::PerceptualQuantizer</ref><sp/>:<sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">TransferFunction::gamma22</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_connector-&gt;hdrMetadata.setPropertyLegacy(blob<sp/>?<sp/>blob-&gt;blobId()<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.hdr)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">DrmPipeline::Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;colorspace.isValid())<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_connector-&gt;colorspace.setEnumLegacy(m_pending.wcg<sp/>?<sp/><ref refid="class_k_win_1_1_drm_connector_1a0f6c1df77081a8760cac70cce2e2d8d7afe4a585d94741421927ee1ed38e64fa1" kindref="member">DrmConnector::Colorspace::BT2020_RGB</ref><sp/>:<sp/><ref refid="class_k_win_1_1_drm_connector_1a0f6c1df77081a8760cac70cce2e2d8d7a7a1920d61156abc05a60135aefe8bc67" kindref="member">DrmConnector::Colorspace::Default</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.wcg)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">DrmPipeline::Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>currentModeContent<sp/>=<sp/>m_pending.crtc-&gt;queryCurrentMode();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.crtc<sp/>!=<sp/>m_next.crtc<sp/>||<sp/>*m_pending.mode<sp/>!=<sp/>currentModeContent)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>legacy<sp/>path<sp/>to<sp/>set<sp/>mode&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_pending.mode-&gt;nativeMode()-&gt;name;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">Error</ref><sp/>err<sp/>=<sp/>legacyModeset();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.crtcColorPipeline<sp/>!=<sp/>m_currentLegacyGamma)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">Error</ref><sp/>err<sp/>=<sp/>setLegacyGamma();<sp/>err<sp/>!=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;contentType.isValid())<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_connector-&gt;contentType.setEnumLegacy(m_pending.contentType);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCursorLegacy();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_connector-&gt;dpms.setPropertyLegacy(<ref refid="class_k_win_1_1_drm_pipeline_1af7db525a7239d89edbaf003be2bfac72" kindref="member">activePending</ref>()<sp/>?<sp/>DRM_MODE_DPMS_ON<sp/>:<sp/>DRM_MODE_DPMS_OFF))<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>legacy<sp/>dpms<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errnoToError();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">DrmPipeline::Error</ref><sp/>DrmPipeline::setLegacyGamma()</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;uint16_t&gt;<sp/>red(m_pending.crtc-&gt;gammaRampSize());</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;uint16_t&gt;<sp/>green(m_pending.crtc-&gt;gammaRampSize());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;uint16_t&gt;<sp/>blue(m_pending.crtc-&gt;gammaRampSize());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_pending.crtc-&gt;gammaRampSize();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref><sp/>=<sp/>i<sp/>/<sp/>double(m_pending.crtc-&gt;gammaRampSize()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVector3D<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a419d39b2b9bab964dacfb1ed55267dd2" kindref="member">output</ref><sp/>=<sp/>QVector3D(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>,<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>,<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;op<sp/>:<sp/>m_pending.crtcColorPipeline.ops)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tf<sp/>=<sp/>std::get_if&lt;ColorTransferFunction&gt;(&amp;op.operation))<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a419d39b2b9bab964dacfb1ed55267dd2" kindref="member">output</ref><sp/>=<sp/>tf-&gt;tf.encodedToNits(<ref refid="class_k_win_1_1_drm_pipeline_1a419d39b2b9bab964dacfb1ed55267dd2" kindref="member">output</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tf<sp/>=<sp/>std::get_if&lt;InverseColorTransferFunction&gt;(&amp;op.operation))<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a419d39b2b9bab964dacfb1ed55267dd2" kindref="member">output</ref><sp/>=<sp/>tf-&gt;tf.nitsToEncoded(<ref refid="class_k_win_1_1_drm_pipeline_1a419d39b2b9bab964dacfb1ed55267dd2" kindref="member">output</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mult<sp/>=<sp/>std::get_if&lt;ColorMultiplier&gt;(&amp;op.operation))<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a419d39b2b9bab964dacfb1ed55267dd2" kindref="member">output</ref><sp/>*=<sp/>mult-&gt;factors;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red[i]<sp/>=<sp/>std::clamp(<ref refid="class_k_win_1_1_drm_pipeline_1a419d39b2b9bab964dacfb1ed55267dd2" kindref="member">output</ref>.x(),<sp/>0.0f,<sp/>1.0f)<sp/>*<sp/>std::numeric_limits&lt;uint16_t&gt;::max();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>green[i]<sp/>=<sp/>std::clamp(<ref refid="class_k_win_1_1_drm_pipeline_1a419d39b2b9bab964dacfb1ed55267dd2" kindref="member">output</ref>.y(),<sp/>0.0f,<sp/>1.0f)<sp/>*<sp/>std::numeric_limits&lt;uint16_t&gt;::max();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blue[i]<sp/>=<sp/>std::clamp(<ref refid="class_k_win_1_1_drm_pipeline_1a419d39b2b9bab964dacfb1ed55267dd2" kindref="member">output</ref>.z(),<sp/>0.0f,<sp/>1.0f)<sp/>*<sp/>std::numeric_limits&lt;uint16_t&gt;::max();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(drmModeCrtcSetGamma(<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;fd(),<sp/>m_pending.crtc-&gt;id(),<sp/>m_pending.crtc-&gt;gammaRampSize(),<sp/>red.data(),<sp/>green.data(),<sp/>blue.data())<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>gamma<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errnoToError();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentLegacyGamma<sp/>=<sp/>m_pending.crtcColorPipeline;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">DrmPipeline::Error::None</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DrmPipeline::setCursorLegacy()</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bo<sp/>=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a050f4592818862139a1ac68c65de1fd8" kindref="member">cursorLayer</ref>()-&gt;<ref refid="class_k_win_1_1_drm_pipeline_layer_1ac97777cca6e507b3e9fba0b38f87fe49" kindref="member">currentBuffer</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>handle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bo<sp/>&amp;&amp;<sp/>bo-&gt;buffer()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a050f4592818862139a1ac68c65de1fd8" kindref="member">cursorLayer</ref>()-&gt;isEnabled())<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DmaBufAttributes<sp/>*attributes<sp/>=<sp/>bo-&gt;buffer()-&gt;dmabufAttributes();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(drmPrimeFDToHandle(<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;fd(),<sp/>attributes-&gt;<ref refid="class_k_win_1_1_drm_gpu_1a5c2cc73ffda21dac504ea64a439c80bf" kindref="member">fd</ref>[0].get(),<sp/>&amp;handle)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;drmPrimeFDToHandle()<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">drm_mode_cursor2<sp/>arg<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags<sp/>=<sp/>DRM_MODE_CURSOR_BO<sp/>|<sp/>DRM_MODE_CURSOR_MOVE,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.crtc_id<sp/>=<sp/>m_pending.crtc-&gt;id(),</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.x<sp/>=<sp/>int32_t(m_cursorLayer-&gt;targetRect().x()),</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y<sp/>=<sp/>int32_t(m_cursorLayer-&gt;targetRect().y()),</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.width<sp/>=<sp/>(uint32_t)<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;<ref refid="class_k_win_1_1_drm_gpu_1a7d1826fb6863bee6abdf7450e3ed340f" kindref="member">cursorSize</ref>().width(),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.height<sp/>=<sp/>(uint32_t)<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;<ref refid="class_k_win_1_1_drm_gpu_1a7d1826fb6863bee6abdf7450e3ed340f" kindref="member">cursorSize</ref>().height(),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.handle<sp/>=<sp/>handle,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hot_x<sp/>=<sp/>int32_t(m_cursorLayer-&gt;hotspot().x()),</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hot_y<sp/>=<sp/>int32_t(m_cursorLayer-&gt;hotspot().y()),</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>drmIoctl(<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;fd(),<sp/>DRM_IOCTL_MODE_CURSOR2,<sp/>&amp;arg);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drmCloseBufferHandle(<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;fd(),<sp/>handle);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/backends/drm/drm_pipeline_legacy.cpp"/>
  </compounddef>
</doxygen>
