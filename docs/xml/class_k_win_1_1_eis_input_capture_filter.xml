<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_eis_input_capture_filter" kind="class" language="C++" prot="public">
    <compoundname>KWin::EisInputCaptureFilter</compoundname>
    <basecompoundref refid="class_k_win_1_1_input_event_filter" prot="public" virt="non-virtual">KWin::InputEventFilter</basecompoundref>
    <includes refid="eisinputcapturefilter_8h" local="no">eisinputcapturefilter.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_eis_input_capture_filter_1a84558ef379c3fe486607c970c6406495" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_eis_input_capture_manager" kindref="compound">EisInputCaptureManager</ref> *</type>
        <definition>EisInputCaptureManager* KWin::EisInputCaptureFilter::m_manager</definition>
        <argsstring></argsstring>
        <name>m_manager</name>
        <qualifiedname>KWin::EisInputCaptureFilter::m_manager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="54" column="28" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_eis_input_capture_filter_1aa5ba533bd5f592a99ada104059ed6677" prot="private" static="no" mutable="no">
        <type>QHash&lt; qint32, eis_touch * &gt;</type>
        <definition>QHash&lt;qint32, eis_touch *&gt; KWin::EisInputCaptureFilter::m_touches</definition>
        <argsstring></argsstring>
        <name>m_touches</name>
        <qualifiedname>KWin::EisInputCaptureFilter::m_touches</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="55" column="11" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.h" bodystart="55" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1a570e0805e3751e41d5f33068d5415ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::EisInputCaptureFilter::EisInputCaptureFilter</definition>
        <argsstring>(EisInputCaptureManager *m_manager)</argsstring>
        <name>EisInputCaptureFilter</name>
        <qualifiedname>KWin::EisInputCaptureFilter::EisInputCaptureFilter</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_eis_input_capture_manager" kindref="compound">EisInputCaptureManager</ref> *</type>
          <declname>m_manager</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="22" column="5" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="18" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1a839669f28fecd3bd9e2317acca545275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::EisInputCaptureFilter::clearTouches</definition>
        <argsstring>()</argsstring>
        <name>clearTouches</name>
        <qualifiedname>KWin::EisInputCaptureFilter::clearTouches</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="24" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="24" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1a0ae7fa1f34225eccff524170c60a7dce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::pointerMotion</definition>
        <argsstring>(PointerMotionEvent *event) override</argsstring>
        <name>pointerMotion</name>
        <qualifiedname>KWin::EisInputCaptureFilter::pointerMotion</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a0e8cf7f7d0816fa15dbfef65300bdf74">pointerMotion</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_pointer_motion_event" kindref="compound">PointerMotionEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="26" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="32" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1ad0390d9cee3d8a4941e0aa4d6089236c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::pointerButton</definition>
        <argsstring>(PointerButtonEvent *event) override</argsstring>
        <name>pointerButton</name>
        <qualifiedname>KWin::EisInputCaptureFilter::pointerButton</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a42d5cd1beabe79a9f0f47c7984a63e03">pointerButton</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="27" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="43" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1add1078ec066d5221cd8481b4f0aa35a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::pointerFrame</definition>
        <argsstring>() override</argsstring>
        <name>pointerFrame</name>
        <qualifiedname>KWin::EisInputCaptureFilter::pointerFrame</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a8aedcd4f0130e1c00d08b87213f123c1">pointerFrame</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="28" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="54" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1a26a8554913dad313546b1659208ced1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::pointerAxis</definition>
        <argsstring>(PointerAxisEvent *event) override</argsstring>
        <name>pointerAxis</name>
        <qualifiedname>KWin::EisInputCaptureFilter::pointerAxis</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a34fb678aeaece81927f9ffd95bb418a6">pointerAxis</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event filter for pointer axis events.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event information about the axis event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> to stop further event processing, <computeroutput>false</computeroutput> to pass to next filter </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="29" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="65" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1abb93e71fc9ad9f8c6fecbcf2fadfa132" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::keyboardKey</definition>
        <argsstring>(KeyboardKeyEvent *event) override</argsstring>
        <name>keyboardKey</name>
        <qualifiedname>KWin::EisInputCaptureFilter::keyboardKey</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1accb90817b0fb12456022cb3e1d89fd24">keyboardKey</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event filter for keyboard events.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event information about the key event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> to stop further event processing, <computeroutput>false</computeroutput> to pass to next filter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="31" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="96" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1a26376c2013dffc1240f558e2ba46e3fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::touchDown</definition>
        <argsstring>(qint32 id, const QPointF &amp;pos, std::chrono::microseconds time) override</argsstring>
        <name>touchDown</name>
        <qualifiedname>KWin::EisInputCaptureFilter::touchDown</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a9d918ff67523d7f036943c9aa56a2e1b">touchDown</reimplements>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="33" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="108" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1af19c64abca88b62008eb9395ee2baf7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::touchMotion</definition>
        <argsstring>(qint32 id, const QPointF &amp;pos, std::chrono::microseconds time) override</argsstring>
        <name>touchMotion</name>
        <qualifiedname>KWin::EisInputCaptureFilter::touchMotion</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1ab8d0440bac50eda28cba2ac9ed7548e1">touchMotion</reimplements>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="34" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="121" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1aa829f26d9bf716f91c6076c084c0d355" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::touchUp</definition>
        <argsstring>(qint32 id, std::chrono::microseconds time) override</argsstring>
        <name>touchUp</name>
        <qualifiedname>KWin::EisInputCaptureFilter::touchUp</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a608cb067e83ad4ed842476cc16ac0800">touchUp</reimplements>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="35" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="132" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1a220db7ba35ca1a0f9028f38b16c9c6d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::touchCancel</definition>
        <argsstring>() override</argsstring>
        <name>touchCancel</name>
        <qualifiedname>KWin::EisInputCaptureFilter::touchCancel</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1ae760899fce671a183fbc540b8beaeea8">touchCancel</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="36" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="143" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1a13ff9662c087abb998fb02ca431b5455" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::touchFrame</definition>
        <argsstring>() override</argsstring>
        <name>touchFrame</name>
        <qualifiedname>KWin::EisInputCaptureFilter::touchFrame</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1ae7e591c6e196c1c8929934c69da523b9">touchFrame</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="37" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="150" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1a8b30868c8f6669ccffaf9acbed36a01c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::pinchGestureBegin</definition>
        <argsstring>(int fingerCount, std::chrono::microseconds time) override</argsstring>
        <name>pinchGestureBegin</name>
        <qualifiedname>KWin::EisInputCaptureFilter::pinchGestureBegin</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1ad56a554ea3b7f767e31d332c4c5e055c">pinchGestureBegin</reimplements>
        <param>
          <type>int</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="39" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="161" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1a03f5d40139de231aee39c133709d2823" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::pinchGestureUpdate</definition>
        <argsstring>(qreal scale, qreal angleDelta, const QPointF &amp;delta, std::chrono::microseconds time) override</argsstring>
        <name>pinchGestureUpdate</name>
        <qualifiedname>KWin::EisInputCaptureFilter::pinchGestureUpdate</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a598c8b3e5fe665b14a3e67a375832d08">pinchGestureUpdate</reimplements>
        <param>
          <type>qreal</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>angleDelta</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="40" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="168" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1adde52aaf8d7f81cdbf20b60723fc146c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::pinchGestureEnd</definition>
        <argsstring>(std::chrono::microseconds time) override</argsstring>
        <name>pinchGestureEnd</name>
        <qualifiedname>KWin::EisInputCaptureFilter::pinchGestureEnd</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a10658e9f1c58a685940eb12b435fe146">pinchGestureEnd</reimplements>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="41" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="176" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1a07133292f3a02e94f1b818932f9089c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::pinchGestureCancelled</definition>
        <argsstring>(std::chrono::microseconds time) override</argsstring>
        <name>pinchGestureCancelled</name>
        <qualifiedname>KWin::EisInputCaptureFilter::pinchGestureCancelled</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1ab613d6168ad5c579aa19af90b88e87b1">pinchGestureCancelled</reimplements>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="42" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="183" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1ac907b4dec640d4a4edb8c6bfcf060af4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::swipeGestureBegin</definition>
        <argsstring>(int fingerCount, std::chrono::microseconds time) override</argsstring>
        <name>swipeGestureBegin</name>
        <qualifiedname>KWin::EisInputCaptureFilter::swipeGestureBegin</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1aef58de63781487e47b4137c43a8d2c44">swipeGestureBegin</reimplements>
        <param>
          <type>int</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="44" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="191" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1ac32b60ecb0f51cb6e9701f0518b56140" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::swipeGestureUpdate</definition>
        <argsstring>(const QPointF &amp;delta, std::chrono::microseconds time) override</argsstring>
        <name>swipeGestureUpdate</name>
        <qualifiedname>KWin::EisInputCaptureFilter::swipeGestureUpdate</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a9a1557bd23c9ea3965a7130edc7462c5">swipeGestureUpdate</reimplements>
        <param>
          <type>const QPointF &amp;</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="45" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="198" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1a99793477cf7242abd7633298003429d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::swipeGestureEnd</definition>
        <argsstring>(std::chrono::microseconds time) override</argsstring>
        <name>swipeGestureEnd</name>
        <qualifiedname>KWin::EisInputCaptureFilter::swipeGestureEnd</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1ab5b578ec73f882e2830f2fefe1f4775e">swipeGestureEnd</reimplements>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="46" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="205" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1acad0e749f0df4e4fd94100f334310b73" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::swipeGestureCancelled</definition>
        <argsstring>(std::chrono::microseconds time) override</argsstring>
        <name>swipeGestureCancelled</name>
        <qualifiedname>KWin::EisInputCaptureFilter::swipeGestureCancelled</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a6d1ec0e92bdcd24e12a11a68483f9517">swipeGestureCancelled</reimplements>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="47" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="212" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1a2dcc4ba7d8d4df975aa9195ef7066af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::holdGestureBegin</definition>
        <argsstring>(int fingerCount, std::chrono::microseconds time) override</argsstring>
        <name>holdGestureBegin</name>
        <qualifiedname>KWin::EisInputCaptureFilter::holdGestureBegin</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1ac0990f77bd702079fc24ef1b85b6027a">holdGestureBegin</reimplements>
        <param>
          <type>int</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="49" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="220" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1aac81f812f13819963b1474f1b848fc09" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::holdGestureEnd</definition>
        <argsstring>(std::chrono::microseconds time) override</argsstring>
        <name>holdGestureEnd</name>
        <qualifiedname>KWin::EisInputCaptureFilter::holdGestureEnd</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1aaf03914c307f1f6e300ac28e7dfd8bbc">holdGestureEnd</reimplements>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="50" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="227" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_eis_input_capture_filter_1a9c8f63102f8eb7bad8ca1bef79329083" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EisInputCaptureFilter::holdGestureCancelled</definition>
        <argsstring>(std::chrono::microseconds time) override</argsstring>
        <name>holdGestureCancelled</name>
        <qualifiedname>KWin::EisInputCaptureFilter::holdGestureCancelled</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1ae0d852136e0039a753ffed5feb537f1c">holdGestureCancelled</reimplements>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="51" column="10" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.cpp" bodystart="234" bodyend="240"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::EisInputCaptureFilter</label>
        <link refid="class_k_win_1_1_eis_input_capture_filter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::InputEventFilter</label>
        <link refid="class_k_win_1_1_input_event_filter"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::EisInputCaptureFilter</label>
        <link refid="class_k_win_1_1_eis_input_capture_filter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::InputEventFilter</label>
        <link refid="class_k_win_1_1_input_event_filter"/>
      </node>
    </collaborationgraph>
    <location file="kwin/src/plugins/eis/eisinputcapturefilter.h" line="19" column="1" bodyfile="kwin/src/plugins/eis/eisinputcapturefilter.h" bodystart="20" bodyend="56"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1a839669f28fecd3bd9e2317acca545275" prot="public" virt="non-virtual"><scope>KWin::EisInputCaptureFilter</scope><name>clearTouches</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1a570e0805e3751e41d5f33068d5415ec8" prot="public" virt="non-virtual"><scope>KWin::EisInputCaptureFilter</scope><name>EisInputCaptureFilter</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1a2dcc4ba7d8d4df975aa9195ef7066af3" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>holdGestureBegin</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1a9c8f63102f8eb7bad8ca1bef79329083" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>holdGestureCancelled</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1aac81f812f13819963b1474f1b848fc09" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>holdGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" prot="public" virt="non-virtual"><scope>KWin::EisInputCaptureFilter</scope><name>InputEventFilter</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1abb93e71fc9ad9f8c6fecbcf2fadfa132" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>keyboardKey</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1a84558ef379c3fe486607c970c6406495" prot="private" virt="non-virtual"><scope>KWin::EisInputCaptureFilter</scope><name>m_manager</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1aa5ba533bd5f592a99ada104059ed6677" prot="private" virt="non-virtual"><scope>KWin::EisInputCaptureFilter</scope><name>m_touches</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ae72e537c14e9de14f0720c8f25c6c4cd" prot="protected" virt="non-virtual"><scope>KWin::EisInputCaptureFilter</scope><name>passToInputMethod</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1a8b30868c8f6669ccffaf9acbed36a01c" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>pinchGestureBegin</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1a07133292f3a02e94f1b818932f9089c8" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>pinchGestureCancelled</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1adde52aaf8d7f81cdbf20b60723fc146c" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>pinchGestureEnd</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1a03f5d40139de231aee39c133709d2823" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>pinchGestureUpdate</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1a26a8554913dad313546b1659208ced1d" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>pointerAxis</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1ad0390d9cee3d8a4941e0aa4d6089236c" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>pointerButton</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1add1078ec066d5221cd8481b4f0aa35a6" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>pointerFrame</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1a0ae7fa1f34225eccff524170c60a7dce" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>pointerMotion</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1ac907b4dec640d4a4edb8c6bfcf060af4" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>swipeGestureBegin</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1acad0e749f0df4e4fd94100f334310b73" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>swipeGestureCancelled</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1a99793477cf7242abd7633298003429d6" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>swipeGestureEnd</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1ac32b60ecb0f51cb6e9701f0518b56140" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>swipeGestureUpdate</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1aed8b92865343626379d8ac71f4bd2ea4" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>switchEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a4ef1fabdd3f77b942ee0596f400f32fc" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>tabletPadButtonEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1aeab73b0dbcd57d4b3f678a81de7489b4" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>tabletPadRingEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a02286f0b50679ecea3e1b231cb27861a" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>tabletPadStripEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1aff68194291337061cc9785d66c3043ce" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>tabletToolAxisEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a7a56441182925d5c0fd6876bc0414c8e" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>tabletToolButtonEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a02802b4a5bef840c2c077f7271755858" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>tabletToolProximityEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1af1d39642578227a239b2aa8e55405367" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>tabletToolTipEvent</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1a220db7ba35ca1a0f9028f38b16c9c6d2" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>touchCancel</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1a26376c2013dffc1240f558e2ba46e3fa" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>touchDown</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1a13ff9662c087abb998fb02ca431b5455" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>touchFrame</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1af19c64abca88b62008eb9395ee2baf7c" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>touchMotion</name></member>
      <member refid="class_k_win_1_1_eis_input_capture_filter_1aa829f26d9bf716f91c6076c084c0d355" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>touchUp</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a52a11556fd89cea278b3fcb79d4f6a78" prot="public" virt="non-virtual"><scope>KWin::EisInputCaptureFilter</scope><name>weight</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ab87db3c27248ac5074cf84ee87d94c9c" prot="public" virt="virtual"><scope>KWin::EisInputCaptureFilter</scope><name>~InputEventFilter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
