<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_render_layer_delegate" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>KWin::RenderLayerDelegate</compoundname>
    <derivedcompoundref refid="class_k_win_1_1_scene_delegate" prot="public" virt="non-virtual">KWin::SceneDelegate</derivedcompoundref>
    <includes refid="renderlayerdelegate_8h" local="no">renderlayerdelegate.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_render_layer_delegate_1a8c8509d8bbef2689caff93c56617a089" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
        <definition>RenderLayer* KWin::RenderLayerDelegate::m_layer</definition>
        <argsstring></argsstring>
        <name>m_layer</name>
        <qualifiedname>KWin::RenderLayerDelegate::m_layer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayerdelegate.h" line="67" column="17" bodyfile="kwin/src/core/renderlayerdelegate.h" bodystart="67" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_render_layer_delegate_1a27de4a1c4ac9ff226df4b8eefb548f45" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual KWin::RenderLayerDelegate::~RenderLayerDelegate</definition>
        <argsstring>()=default</argsstring>
        <name>~RenderLayerDelegate</name>
        <qualifiedname>KWin::RenderLayerDelegate::~RenderLayerDelegate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayerdelegate.h" line="30" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_delegate_1adac9614a26fc1d3e137b0f83786fb6ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
        <definition>RenderLayer * KWin::RenderLayerDelegate::layer</definition>
        <argsstring>() const</argsstring>
        <name>layer</name>
        <qualifiedname>KWin::RenderLayerDelegate::layer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayerdelegate.h" line="32" column="17" bodyfile="kwin/src/core/renderlayerdelegate.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_delegate_1ada9a5fe83fc046fbb68b98217fc8e19b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayerDelegate::setLayer</definition>
        <argsstring>(RenderLayer *layer)</argsstring>
        <name>setLayer</name>
        <qualifiedname>KWin::RenderLayerDelegate::setLayer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayerdelegate.h" line="33" column="10" bodyfile="kwin/src/core/renderlayerdelegate.cpp" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_delegate_1ac01978793c2ff944dfd9448c599e6120" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::RenderLayerDelegate::frame</definition>
        <argsstring>(OutputFrame *frame)</argsstring>
        <name>frame</name>
        <qualifiedname>KWin::RenderLayerDelegate::frame</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_scene_delegate_1abce430ef0e06e0258661a0f60f4ce7ea">frame</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called by the compositor after compositing the frame. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayerdelegate.h" line="38" column="18" bodyfile="kwin/src/core/renderlayerdelegate.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_delegate_1a6af615d88f0bf368032ad62ceb24f1c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QRegion</type>
        <definition>QRegion KWin::RenderLayerDelegate::prePaint</definition>
        <argsstring>()</argsstring>
        <name>prePaint</name>
        <qualifiedname>KWin::RenderLayerDelegate::prePaint</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_scene_delegate_1a51f0aba47897e8e279a3574e9601fb02">prePaint</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called by the compositor before starting painting. Reimplement this function to do frame initialization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayerdelegate.h" line="44" column="21" bodyfile="kwin/src/core/renderlayerdelegate.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_delegate_1a82f0eb7d816c51dbb4f148b78e61461c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::RenderLayerDelegate::postPaint</definition>
        <argsstring>()</argsstring>
        <name>postPaint</name>
        <qualifiedname>KWin::RenderLayerDelegate::postPaint</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_scene_delegate_1a39c4ee10614f1314f4e3e4767c3d9854">postPaint</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called by the compositor after finishing painting. Reimplement this function to do post frame cleanup. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayerdelegate.h" line="50" column="18" bodyfile="kwin/src/core/renderlayerdelegate.cpp" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_delegate_1a1f0f568e59f9dd99ac3f06ae9075f16b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_surface_item" kindref="compound">SurfaceItem</ref> * &gt;</type>
        <definition>QList&lt; SurfaceItem * &gt; KWin::RenderLayerDelegate::scanoutCandidates</definition>
        <argsstring>(ssize_t maxCount) const</argsstring>
        <name>scanoutCandidates</name>
        <qualifiedname>KWin::RenderLayerDelegate::scanoutCandidates</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_scene_delegate_1a256669357111ac56d45fc0a1bc9fe341">scanoutCandidates</reimplementedby>
        <param>
          <type>ssize_t</type>
          <declname>maxCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the direct scanout candidate hint. It can be used to avoid compositing the render layer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayerdelegate.h" line="56" column="19" bodyfile="kwin/src/core/renderlayerdelegate.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_delegate_1a3f500bc2d919a140f1f88bba94e88dcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void KWin::RenderLayerDelegate::paint</definition>
        <argsstring>(const RenderTarget &amp;renderTarget, const QRegion &amp;region)=0</argsstring>
        <name>paint</name>
        <qualifiedname>KWin::RenderLayerDelegate::paint</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_cursor_delegate_open_g_l_1a608b7c541ee87c37a9aeb0f5eaac8e8b">paint</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_cursor_delegate_q_painter_1acca91eeae6429924ed3c8a4e39f8f67a">paint</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_scene_delegate_1a394e47b6276bb6e724238a627627631c">paint</reimplementedby>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called when the compositor wants the render layer delegate to repaint its contents. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayerdelegate.h" line="62" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_delegate_1a3aaceb67720f15dec80000e0f1560031" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double KWin::RenderLayerDelegate::desiredHdrHeadroom</definition>
        <argsstring>() const</argsstring>
        <name>desiredHdrHeadroom</name>
        <qualifiedname>KWin::RenderLayerDelegate::desiredHdrHeadroom</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_scene_delegate_1a4814c93bede9faa4528a23a9585eaa60">desiredHdrHeadroom</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayerdelegate.h" line="64" column="20" bodyfile="kwin/src/core/renderlayerdelegate.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_render_layer_delegate" kindref="compound">RenderLayerDelegate</ref> class represents a render layer&apos;s contents. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>KWin::CursorDelegateOpenGL</label>
        <link refid="class_k_win_1_1_cursor_delegate_open_g_l"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>KWin::CursorDelegateQPainter</label>
        <link refid="class_k_win_1_1_cursor_delegate_q_painter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::RenderLayerDelegate</label>
        <link refid="class_k_win_1_1_render_layer_delegate"/>
      </node>
      <node id="2">
        <label>KWin::SceneDelegate</label>
        <link refid="class_k_win_1_1_scene_delegate"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="kwin/src/core/renderlayerdelegate.h" line="27" column="1" bodyfile="kwin/src/core/renderlayerdelegate.h" bodystart="28" bodyend="68"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_render_layer_delegate_1a3aaceb67720f15dec80000e0f1560031" prot="public" virt="virtual"><scope>KWin::RenderLayerDelegate</scope><name>desiredHdrHeadroom</name></member>
      <member refid="class_k_win_1_1_render_layer_delegate_1ac01978793c2ff944dfd9448c599e6120" prot="public" virt="virtual"><scope>KWin::RenderLayerDelegate</scope><name>frame</name></member>
      <member refid="class_k_win_1_1_render_layer_delegate_1adac9614a26fc1d3e137b0f83786fb6ea" prot="public" virt="non-virtual"><scope>KWin::RenderLayerDelegate</scope><name>layer</name></member>
      <member refid="class_k_win_1_1_render_layer_delegate_1a8c8509d8bbef2689caff93c56617a089" prot="private" virt="non-virtual"><scope>KWin::RenderLayerDelegate</scope><name>m_layer</name></member>
      <member refid="class_k_win_1_1_render_layer_delegate_1a3f500bc2d919a140f1f88bba94e88dcf" prot="public" virt="pure-virtual"><scope>KWin::RenderLayerDelegate</scope><name>paint</name></member>
      <member refid="class_k_win_1_1_render_layer_delegate_1a82f0eb7d816c51dbb4f148b78e61461c" prot="public" virt="virtual"><scope>KWin::RenderLayerDelegate</scope><name>postPaint</name></member>
      <member refid="class_k_win_1_1_render_layer_delegate_1a6af615d88f0bf368032ad62ceb24f1c7" prot="public" virt="virtual"><scope>KWin::RenderLayerDelegate</scope><name>prePaint</name></member>
      <member refid="class_k_win_1_1_render_layer_delegate_1a1f0f568e59f9dd99ac3f06ae9075f16b" prot="public" virt="virtual"><scope>KWin::RenderLayerDelegate</scope><name>scanoutCandidates</name></member>
      <member refid="class_k_win_1_1_render_layer_delegate_1ada9a5fe83fc046fbb68b98217fc8e19b" prot="public" virt="non-virtual"><scope>KWin::RenderLayerDelegate</scope><name>setLayer</name></member>
      <member refid="class_k_win_1_1_render_layer_delegate_1a27de4a1c4ac9ff226df4b8eefb548f45" prot="public" virt="virtual"><scope>KWin::RenderLayerDelegate</scope><name>~RenderLayerDelegate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
