<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="renderbackend_8cpp" kind="file" language="C++">
    <compoundname>renderbackend.cpp</compoundname>
    <includes refid="renderbackend_8h" local="yes">renderbackend.h</includes>
    <includes refid="renderloop__p_8h" local="yes">renderloop_p.h</includes>
    <includes refid="surfaceitem_8h" local="yes">scene/surfaceitem.h</includes>
    <includes refid="syncobjtimeline_8h" local="yes">syncobjtimeline.h</includes>
    <includes local="no">QCoreApplication</includes>
    <includes local="no">QThread</includes>
    <includes local="no">drm_fourcc.h</includes>
    <includes local="no">ranges</includes>
    <includes local="yes">moc_renderbackend.cpp</includes>
    <incdepgraph>
      <node id="4">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/core/renderbackend.cpp</label>
        <link refid="renderbackend_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>renderjournal.h</label>
        <link refid="renderjournal_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>renderloop_p.h</label>
        <link refid="renderloop__p_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>syncobjtimeline.h</label>
        <link refid="syncobjtimeline_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>scene/item.h</label>
        <link refid="item_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>scene/itemgeometry.h</label>
        <link refid="itemgeometry_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>scene/surfaceitem.h</label>
        <link refid="surfaceitem_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>QByteArray</label>
      </node>
      <node id="39">
        <label>QColor</label>
      </node>
      <node id="13">
        <label>QCoreApplication</label>
      </node>
      <node id="22">
        <label>QDebug</label>
      </node>
      <node id="14">
        <label>QImage</label>
      </node>
      <node id="20">
        <label>QList</label>
      </node>
      <node id="6">
        <label>QMatrix4x4</label>
      </node>
      <node id="17">
        <label>QObject</label>
      </node>
      <node id="15">
        <label>QPoint</label>
      </node>
      <node id="26">
        <label>QPointer</label>
      </node>
      <node id="23">
        <label>QRect</label>
      </node>
      <node id="40">
        <label>QRegion</label>
      </node>
      <node id="21">
        <label>QSize</label>
      </node>
      <node id="48">
        <label>QThread</label>
      </node>
      <node id="31">
        <label>QTimer</label>
      </node>
      <node id="44">
        <label>QTransform</label>
      </node>
      <node id="24">
        <label>QUuid</label>
      </node>
      <node id="16">
        <label>QVariant</label>
      </node>
      <node id="7">
        <label>QVector2D</label>
      </node>
      <node id="30">
        <label>chrono</label>
      </node>
      <node id="12">
        <label>config-kwin.h</label>
      </node>
      <node id="45">
        <label>deque</label>
      </node>
      <node id="49">
        <label>drm_fourcc.h</label>
      </node>
      <node id="41">
        <label>epoxy/gl.h</label>
      </node>
      <node id="32">
        <label>fstream</label>
      </node>
      <node id="8">
        <label>kwin_export.h</label>
      </node>
      <node id="27">
        <label>memory</label>
      </node>
      <node id="50">
        <label>moc_renderbackend.cpp</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="42">
        <label>ranges</label>
      </node>
      <node id="43">
        <label>span</label>
      </node>
      <node id="47">
        <label>stdint.h</label>
      </node>
      <node id="35">
        <label>utility</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderbackend_8h" kindref="compound">renderbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderloop__p_8h" kindref="compound">renderloop_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surfaceitem_8h" kindref="compound">scene/surfaceitem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="syncobjtimeline_8h" kindref="compound">syncobjtimeline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QCoreApplication&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QThread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drm_fourcc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ranges&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="struct_k_win_1_1_render_time_span_1afcf065e3f7cdb5d94bb3866c2250800b" refkind="member"><highlight class="normal"><ref refid="struct_k_win_1_1_render_time_span" kindref="compound">RenderTimeSpan</ref><sp/><ref refid="struct_k_win_1_1_render_time_span_1afcf065e3f7cdb5d94bb3866c2250800b" kindref="member">RenderTimeSpan::operator|</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_render_time_span" kindref="compound">RenderTimeSpan</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_render_time_span" kindref="compound">RenderTimeSpan</ref>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.start<sp/>=<sp/>std::min(<ref refid="struct_k_win_1_1_render_time_span_1aa85106942808dff79d59651cc333ff4a" kindref="member">start</ref>,<sp/>other.<ref refid="struct_k_win_1_1_render_time_span_1aa85106942808dff79d59651cc333ff4a" kindref="member">start</ref>),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.end<sp/>=<sp/>std::max(<ref refid="struct_k_win_1_1_render_time_span_1aaae0b511046a225f9844c100a7f3dd62" kindref="member">end</ref>,<sp/>other.<ref refid="struct_k_win_1_1_render_time_span_1aaae0b511046a225f9844c100a7f3dd62" kindref="member">end</ref>),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_k_win_1_1_cpu_render_time_query_1a6960ef0eeffc18ef986557bc1ab2b56b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_cpu_render_time_query_1a6960ef0eeffc18ef986557bc1ab2b56b" kindref="member">CpuRenderTimeQuery::CpuRenderTimeQuery</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_start(std::chrono::steady_clock::now())</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_k_win_1_1_cpu_render_time_query_1a042d8bd0dd1e7adb963a75920f7cebee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_cpu_render_time_query_1a042d8bd0dd1e7adb963a75920f7cebee" kindref="member">CpuRenderTimeQuery::end</ref>()</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>m_end<sp/>=<sp/>std::chrono::steady_clock::now();</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_k_win_1_1_cpu_render_time_query_1a78e2a0b582cb3c21267b1af5e7e494be" refkind="member"><highlight class="normal">std::optional&lt;RenderTimeSpan&gt;<sp/><ref refid="class_k_win_1_1_cpu_render_time_query_1a78e2a0b582cb3c21267b1af5e7e494be" kindref="member">CpuRenderTimeQuery::query</ref>()</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(m_end);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_render_time_span" kindref="compound">RenderTimeSpan</ref>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.start<sp/>=<sp/>m_start,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.end<sp/>=<sp/>*m_end,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_k_win_1_1_output_frame_1aab9b23ffbdaba4937c9da4b02015f8d4" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_frame_1aab9b23ffbdaba4937c9da4b02015f8d4" kindref="member">OutputFrame::OutputFrame</ref>(<ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref><sp/>*loop,<sp/>std::chrono::nanoseconds<sp/><ref refid="class_k_win_1_1_output_frame_1a898456fed1cda2918aaa1aee1efdab6f" kindref="member">refreshDuration</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_loop(loop)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_refreshDuration(<ref refid="class_k_win_1_1_output_frame_1a898456fed1cda2918aaa1aee1efdab6f" kindref="member">refreshDuration</ref>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_targetPageflipTime(loop-&gt;nextPresentationTimestamp())</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_predictedRenderTime(loop-&gt;<ref refid="class_k_win_1_1_output_frame_1a486fd2fa93eac82b8307df482429628c" kindref="member">predictedRenderTime</ref>())</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_k_win_1_1_output_frame_1a4cd64d3e7378a94820c7370c95c2777c" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_frame_1a4cd64d3e7378a94820c7370c95c2777c" kindref="member">OutputFrame::~OutputFrame</ref>()</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(QThread::currentThread()<sp/>==<sp/>QCoreApplication::instance()-&gt;thread());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_presented<sp/>&amp;&amp;<sp/>m_loop)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a2a9dc8ff7ad26efd60e9c02334d249d3" kindref="member">RenderLoopPrivate::get</ref>(m_loop)-&gt;<ref refid="class_k_win_1_1_render_loop_private_1a0730965823593deaf3d136b93980d4d3" kindref="member">notifyFrameDropped</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_k_win_1_1_output_frame_1a5e62b43777a3b46765d48ff7265ef8eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_frame_1a5e62b43777a3b46765d48ff7265ef8eb" kindref="member">OutputFrame::addFeedback</ref>(std::unique_ptr&lt;PresentationFeedback&gt;<sp/>&amp;&amp;feedback)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>m_feedbacks.push_back(std::move(feedback));</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">std::optional&lt;RenderTimeSpan&gt;<sp/>OutputFrame::queryRenderTime()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="69"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_renderTimeQueries.empty())<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_render_time_span" kindref="compound">RenderTimeSpan</ref>{};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first<sp/>=<sp/>m_renderTimeQueries.front()-&gt;query();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderTimeSpan<sp/>ret<sp/>=<sp/>*first;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;query<sp/>:<sp/>m_renderTimeQueries<sp/>|<sp/>std::views::drop(1))<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>opt<sp/>=<sp/>query-&gt;query();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!opt)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>ret<sp/>|<sp/>*opt;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_k_win_1_1_output_frame_1aef1211064d01d61f5d4121bb20dbc2f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_frame_1aef1211064d01d61f5d4121bb20dbc2f6" kindref="member">OutputFrame::presented</ref>(std::chrono::nanoseconds<sp/>timestamp,<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!m_presented);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>m_presented<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>renderTime<sp/>=<sp/>queryRenderTime();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_loop)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a2a9dc8ff7ad26efd60e9c02334d249d3" kindref="member">RenderLoopPrivate::get</ref>(m_loop)-&gt;<ref refid="class_k_win_1_1_render_loop_private_1a075d78945f20f8c2ef205aa98dd27a72" kindref="member">notifyFrameCompleted</ref>(timestamp,<sp/>renderTime,<sp/>mode,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;feedback<sp/>:<sp/>m_feedbacks)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feedback-&gt;presented(m_refreshDuration,<sp/>timestamp,<sp/>mode);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_k_win_1_1_output_frame_1ab41144b758501086879768b80ea02c72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_frame_1ab41144b758501086879768b80ea02c72" kindref="member">OutputFrame::setContentType</ref>(<ref refid="namespace_k_win_1ae822402a75b1dbd6c2afc72f87fa60a6" kindref="member">ContentType</ref><sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>m_contentType<sp/>=<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="class_k_win_1_1_output_frame_1a04aaeda7249fb950f09ff00376e0cbd1" refkind="member"><highlight class="normal">std::optional&lt;ContentType&gt;<sp/><ref refid="class_k_win_1_1_output_frame_1a04aaeda7249fb950f09ff00376e0cbd1" kindref="member">OutputFrame::contentType</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="108"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_contentType;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_k_win_1_1_output_frame_1a9598496c88df295e025df83e67bf58f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_frame_1a9598496c88df295e025df83e67bf58f4" kindref="member">OutputFrame::setPresentationMode</ref>(<ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>m_presentationMode<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_k_win_1_1_output_frame_1a1addeb54d871c28a83f75c249bda6d02" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref><sp/><ref refid="class_k_win_1_1_output_frame_1a1addeb54d871c28a83f75c249bda6d02" kindref="member">OutputFrame::presentationMode</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="118"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_presentationMode;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_k_win_1_1_output_frame_1a8ace2e5dc2bc14312b4a83bc285d18dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_frame_1a8ace2e5dc2bc14312b4a83bc285d18dc" kindref="member">OutputFrame::setDamage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>m_damage<sp/>=<sp/>region;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_k_win_1_1_output_frame_1a2578e0107c2e6cc5f86659339d0c4684" refkind="member"><highlight class="normal">QRegion<sp/><ref refid="class_k_win_1_1_output_frame_1a2578e0107c2e6cc5f86659339d0c4684" kindref="member">OutputFrame::damage</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="128"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_damage;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="class_k_win_1_1_output_frame_1aaede3e4b1639e0772c87e0105e49981f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_frame_1aaede3e4b1639e0772c87e0105e49981f" kindref="member">OutputFrame::addRenderTimeQuery</ref>(std::unique_ptr&lt;RenderTimeQuery&gt;<sp/>&amp;&amp;query)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>m_renderTimeQueries.push_back(std::move(query));</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="class_k_win_1_1_output_frame_1adaf1e373e89caf839bc0f546389a9600" refkind="member"><highlight class="normal">std::chrono::steady_clock::time_point<sp/><ref refid="class_k_win_1_1_output_frame_1adaf1e373e89caf839bc0f546389a9600" kindref="member">OutputFrame::targetPageflipTime</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="138"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_targetPageflipTime;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="class_k_win_1_1_output_frame_1a898456fed1cda2918aaa1aee1efdab6f" refkind="member"><highlight class="normal">std::chrono::nanoseconds<sp/><ref refid="class_k_win_1_1_output_frame_1a898456fed1cda2918aaa1aee1efdab6f" kindref="member">OutputFrame::refreshDuration</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="143"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_refreshDuration;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="class_k_win_1_1_output_frame_1a486fd2fa93eac82b8307df482429628c" refkind="member"><highlight class="normal">std::chrono::nanoseconds<sp/><ref refid="class_k_win_1_1_output_frame_1a486fd2fa93eac82b8307df482429628c" kindref="member">OutputFrame::predictedRenderTime</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="148"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_predictedRenderTime;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="class_k_win_1_1_output_frame_1adfdfeed0e4b3676314d2ed4359756577" refkind="member"><highlight class="normal">std::optional&lt;double&gt;<sp/><ref refid="class_k_win_1_1_output_frame_1adfdfeed0e4b3676314d2ed4359756577" kindref="member">OutputFrame::brightness</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="153"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_brightness;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_k_win_1_1_output_frame_1a6ce71a97a48117b917ca67d42ecb54f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_frame_1a6ce71a97a48117b917ca67d42ecb54f4" kindref="member">OutputFrame::setBrightness</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_frame_1adfdfeed0e4b3676314d2ed4359756577" kindref="member">brightness</ref>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>m_brightness<sp/>=<sp/><ref refid="class_k_win_1_1_output_frame_1adfdfeed0e4b3676314d2ed4359756577" kindref="member">brightness</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="class_k_win_1_1_output_frame_1a0157ba120db844d9f41db11b7c29fefc" refkind="member"><highlight class="normal">std::optional&lt;double&gt;<sp/><ref refid="class_k_win_1_1_output_frame_1a0157ba120db844d9f41db11b7c29fefc" kindref="member">OutputFrame::artificialHdrHeadroom</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="163"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_artificialHdrHeadroom;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="class_k_win_1_1_output_frame_1aec9d52289649ff9568fc8074bd973280" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_frame_1aec9d52289649ff9568fc8074bd973280" kindref="member">OutputFrame::setArtificialHdrHeadroom</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>edr)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>m_artificialHdrHeadroom<sp/>=<sp/>edr;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_k_win_1_1_render_backend_1abe178a184592ff07e972f4971de5f964" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref><sp/>*<ref refid="class_k_win_1_1_render_backend_1abe178a184592ff07e972f4971de5f964" kindref="member">RenderBackend::cursorLayer</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_k_win_1_1_render_backend_1a995e6152b42f76691d296e99780ef707" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_backend_1a995e6152b42f76691d296e99780ef707" kindref="member">RenderBackend::checkGraphicsReset</ref>()</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="class_k_win_1_1_render_backend_1a9135e39ee4f8aed8dcfd2771fe0a7773" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref><sp/>*<ref refid="class_k_win_1_1_render_backend_1a9135e39ee4f8aed8dcfd2771fe0a7773" kindref="member">RenderBackend::drmDevice</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="183"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_k_win_1_1_render_backend_1a19fb9a934538fe684e8fe9725f253904" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_backend_1a19fb9a934538fe684e8fe9725f253904" kindref="member">RenderBackend::testImportBuffer</ref>(<ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="class_k_win_1_1_render_backend_1aca3c178c2ab62c1b5f1074200b066c53" refkind="member"><highlight class="normal">QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/><ref refid="class_k_win_1_1_render_backend_1aca3c178c2ab62c1b5f1074200b066c53" kindref="member">RenderBackend::supportedFormats</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="193"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;{{DRM_FORMAT_XRGB8888,<sp/>QList&lt;uint64_t&gt;{DRM_FORMAT_MOD_LINEAR}}};</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="class_k_win_1_1_render_backend_1ae04af70cc6faab27ad41086935c2601c" refkind="member"><highlight class="normal">std::unique_ptr&lt;SurfaceTexture&gt;<sp/><ref refid="class_k_win_1_1_render_backend_1ae04af70cc6faab27ad41086935c2601c" kindref="member">RenderBackend::createSurfaceTextureWayland</ref>(<ref refid="class_k_win_1_1_surface_pixmap" kindref="compound">SurfacePixmap</ref><sp/>*pixmap)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="class_k_win_1_1_render_backend_1a64651d2ee05d39d5e1df7391036198d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_backend_1a64651d2ee05d39d5e1df7391036198d8" kindref="member">RenderBackend::repairPresentation</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_renderbackend.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/core/renderbackend.cpp"/>
  </compounddef>
</doxygen>
