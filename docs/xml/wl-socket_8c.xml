<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="wl-socket_8c" kind="file" language="C++">
    <compoundname>wl-socket.c</compoundname>
    <includes local="no">assert.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/file.h</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">sys/un.h</includes>
    <includes local="no">unistd.h</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/helpers/wayland_wrapper/wl-socket.c</label>
        <link refid="wl-socket_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>assert.h</label>
      </node>
      <node id="3">
        <label>errno.h</label>
      </node>
      <node id="4">
        <label>fcntl.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="8">
        <label>sys/file.h</label>
      </node>
      <node id="9">
        <label>sys/socket.h</label>
      </node>
      <node id="10">
        <label>sys/stat.h</label>
      </node>
      <node id="11">
        <label>sys/un.h</label>
      </node>
      <node id="12">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structwl__socket" prot="public">wl_socket</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="wl-socket_8c_1a8fb447618db946a9e2a596d9ea18763f" prot="public" static="no">
        <name>_DEFAULT_SOURCE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/wl-socket.c" line="11" column="9" bodyfile="kwin/src/helpers/wayland_wrapper/wl-socket.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wl-socket_8c_1a7baab2aa5bf8eb14b6128e0f16634837" prot="public" static="no">
        <name>UNIX_PATH_MAX</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/wl-socket.c" line="29" column="9" bodyfile="kwin/src/helpers/wayland_wrapper/wl-socket.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wl-socket_8c_1a11aa03fdbf1a2680335dcaa0c73f25e3" prot="public" static="no">
        <name>LOCK_SUFFIX</name>
        <initializer>&quot;.lock&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/wl-socket.c" line="32" column="9" bodyfile="kwin/src/helpers/wayland_wrapper/wl-socket.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wl-socket_8c_1a55f0760f271ff025b986de41b1e9f11e" prot="public" static="no">
        <name>LOCK_SUFFIXLEN</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/wl-socket.c" line="33" column="9" bodyfile="kwin/src/helpers/wayland_wrapper/wl-socket.c" bodystart="33" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="wl-socket_8c_1a165ec67526d7fa3bf0c898ebca5da1f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
        <definition>static struct wl_socket * wl_socket_alloc</definition>
        <argsstring>(void)</argsstring>
        <name>wl_socket_alloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/wl-socket.c" line="43" column="23" bodyfile="kwin/src/helpers/wayland_wrapper/wl-socket.c" bodystart="43" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="wl-socket_8c_1a85ce9bda5a5265785cb274d0bfd86932" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wl_socket_lock</definition>
        <argsstring>(struct wl_socket *socket)</argsstring>
        <name>wl_socket_lock</name>
        <param>
          <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
          <declname>socket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/wl-socket.c" line="57" column="12" bodyfile="kwin/src/helpers/wayland_wrapper/wl-socket.c" bodystart="57" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="wl-socket_8c_1a6a15aaf2cf1b5b0003ddf35026050db9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_socket_destroy</definition>
        <argsstring>(struct wl_socket *s)</argsstring>
        <name>wl_socket_destroy</name>
        <param>
          <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
          <declname>socket</declname>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cleanup resources and close the FD </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/wl-socket.c" line="99" column="6" bodyfile="kwin/src/helpers/wayland_wrapper/wl-socket.c" bodystart="99" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="wl-socket_8c_1a8b70c0c1340acdf9225d0225a2e98246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * wl_socket_get_display_name</definition>
        <argsstring>(struct wl_socket *s)</argsstring>
        <name>wl_socket_get_display_name</name>
        <param>
          <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the name of the socket, i.e &quot;wayland-0&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/wl-socket.c" line="113" column="12" bodyfile="kwin/src/helpers/wayland_wrapper/wl-socket.c" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="wl-socket_8c_1a8850aa32f189a1df40f5be0228a1bebc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_socket_get_fd</definition>
        <argsstring>(struct wl_socket *s)</argsstring>
        <name>wl_socket_get_fd</name>
        <param>
          <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the file descriptor for the socket </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/wl-socket.c" line="118" column="5" bodyfile="kwin/src/helpers/wayland_wrapper/wl-socket.c" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="wl-socket_8c_1a304316f1e5543c0b09d86f022ba40d97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
        <definition>struct wl_socket * wl_socket_create</definition>
        <argsstring>()</argsstring>
        <name>wl_socket_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate and create a socket It is bound and accepted </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/wl-socket.c" line="123" column="16" bodyfile="kwin/src/helpers/wayland_wrapper/wl-socket.c" bodystart="123" bodyend="172"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>&lt;davidedmundson@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2008<sp/>Kristian<sp/>Høgsberg</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="wl-socket_8c_1a8fb447618db946a9e2a596d9ea18763f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_DEFAULT_SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/file.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/un.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>size<sp/>of<sp/>the<sp/>char<sp/>array<sp/>in<sp/>struct<sp/>sock_addr_un.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>No<sp/>Wayland<sp/>socket<sp/>can<sp/>be<sp/>created<sp/>with<sp/>a<sp/>path<sp/>longer<sp/>than<sp/>this,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>including<sp/>the<sp/>null<sp/>terminator.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNIX_PATH_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="wl-socket_8c_1a7baab2aa5bf8eb14b6128e0f16634837" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNIX_PATH_MAX<sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="wl-socket_8c_1a11aa03fdbf1a2680335dcaa0c73f25e3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOCK_SUFFIX<sp/>&quot;.lock&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="wl-socket_8c_1a55f0760f271ff025b986de41b1e9f11e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOCK_SUFFIXLEN<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structwl__socket" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>{</highlight></codeline>
<codeline lineno="36" refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="37" refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref>;</highlight></codeline>
<codeline lineno="38" refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_un<sp/><ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>;</highlight></codeline>
<codeline lineno="39" refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>[<ref refid="wl-socket_8c_1a7baab2aa5bf8eb14b6128e0f16634837" kindref="member">UNIX_PATH_MAX</ref><sp/>+<sp/><ref refid="wl-socket_8c_1a55f0760f271ff025b986de41b1e9f11e" kindref="member">LOCK_SUFFIXLEN</ref>];</highlight></codeline>
<codeline lineno="40" refid="structwl__socket_1a1ca89507bb577f132f5e50e977dcbe6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structwl__socket_1a1ca89507bb577f132f5e50e977dcbe6d" kindref="member">display_name</ref>[20];</highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*wl_socket_alloc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*s;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wl_socket_lock(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*socket)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>socket_stat;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(socket-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>socket-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s%s&quot;</highlight><highlight class="normal">,<sp/>socket-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path,<sp/><ref refid="wl-socket_8c_1a11aa03fdbf1a2680335dcaa0c73f25e3" kindref="member">LOCK_SUFFIX</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>socket-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref><sp/>=<sp/>open(socket-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>,<sp/>O_CREAT<sp/>|<sp/>O_CLOEXEC<sp/>|<sp/>O_RDWR,<sp/>(S_IRUSR<sp/>|<sp/>S_IWUSR<sp/>|<sp/>S_IRGRP<sp/>|<sp/>S_IWGRP));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>open<sp/>lockfile<sp/>%s<sp/>check<sp/>permissions\n&quot;</highlight><highlight class="normal">,<sp/>socket-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flock(socket-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref>,<sp/>LOCK_EX<sp/>|<sp/>LOCK_NB)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>lock<sp/>lockfile<sp/>%s,<sp/>maybe<sp/>another<sp/>compositor<sp/>is<sp/>running\n&quot;</highlight><highlight class="normal">,<sp/>socket-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_fd;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lstat(socket-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path,<sp/>&amp;socket_stat)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>!=<sp/>ENOENT)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;did<sp/>not<sp/>manage<sp/>to<sp/>stat<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>socket-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_fd;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_stat.st_mode<sp/>&amp;<sp/>S_IWUSR<sp/>||<sp/>socket_stat.st_mode<sp/>&amp;<sp/>S_IWGRP)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlink(socket-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">err_fd:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>close(socket-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>socket-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">err:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>*socket-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>did<sp/>not<sp/>set<sp/>this<sp/>value<sp/>here,<sp/>but<sp/>without<sp/>lock<sp/>the</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>socket<sp/>won&apos;t<sp/>be<sp/>created<sp/>anyway.<sp/>This<sp/>prevents<sp/>the</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>wl_socket_destroy<sp/>from<sp/>unlinking<sp/>already<sp/>existing<sp/>socket</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>created<sp/>by<sp/>other<sp/>compositor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>*socket-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="wl-socket_8c_1a6a15aaf2cf1b5b0003ddf35026050db9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wl-socket_8c_1a6a15aaf2cf1b5b0003ddf35026050db9" kindref="member">wl_socket_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*s)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path[0])</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlink(s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>[0])</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlink(s-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(s-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="wl-socket_8c_1a8b70c0c1340acdf9225d0225a2e98246" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="wl-socket_8c_1a8b70c0c1340acdf9225d0225a2e98246" kindref="member">wl_socket_get_display_name</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*s)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s-&gt;<ref refid="structwl__socket_1a1ca89507bb577f132f5e50e977dcbe6d" kindref="member">display_name</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="wl-socket_8c_1a8850aa32f189a1df40f5be0228a1bebc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wl-socket_8c_1a8850aa32f189a1df40f5be0228a1bebc" kindref="member">wl_socket_get_fd</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*s)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="wl-socket_8c_1a304316f1e5543c0b09d86f022ba40d97" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*<ref refid="wl-socket_8c_1a304316f1e5543c0b09d86f022ba40d97" kindref="member">wl_socket_create</ref>()</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*s;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name_size;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>reasonable<sp/>number<sp/>of<sp/>maximum<sp/>default<sp/>sockets.<sp/>If</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>you<sp/>need<sp/>more<sp/>than<sp/>this,<sp/>use<sp/>the<sp/>explicit<sp/>add_socket<sp/>API.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_DISPLAYNO<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*runtime_dir<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;XDG_RUNTIME_DIR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!runtime_dir)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;XDG_RUNTIME_DIR<sp/>not<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>wl_socket_alloc();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(s-&gt;<ref refid="structwl__socket_1a1ca89507bb577f132f5e50e977dcbe6d" kindref="member">display_name</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>s-&gt;<ref refid="structwl__socket_1a1ca89507bb577f132f5e50e977dcbe6d" kindref="member">display_name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;wayland-%d&quot;</highlight><highlight class="normal">,<sp/>displayno);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_family<sp/>=<sp/>AF_LOCAL;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_size<sp/>=<sp/>snprintf(s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path,<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>runtime_dir,<sp/>s-&gt;<ref refid="structwl__socket_1a1ca89507bb577f132f5e50e977dcbe6d" kindref="member">display_name</ref>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(name_size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name_size<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_socket_lock(s)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref><sp/>=<sp/>socket(PF_LOCAL,<sp/>SOCK_STREAM,<sp/>0);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>SUN_LEN(&amp;s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>bind(s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref>,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr*)&amp;s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>,<sp/>size);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>listen(s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref>,<sp/>128);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(displayno++<sp/>&lt;<sp/>MAX_DISPLAYNO);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">fail:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wl-socket_8c_1a6a15aaf2cf1b5b0003ddf35026050db9" kindref="member">wl_socket_destroy</ref>(s);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/helpers/wayland_wrapper/wl-socket.c"/>
  </compounddef>
</doxygen>
