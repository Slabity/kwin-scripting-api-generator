<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="x11__windowed__egl__backend_8cpp" kind="file" language="C++">
    <compoundname>x11_windowed_egl_backend.cpp</compoundname>
    <includes refid="x11__windowed__egl__backend_8h" local="yes">x11_windowed_egl_backend.h</includes>
    <includes refid="gbmgraphicsbufferallocator_8h" local="yes">core/gbmgraphicsbufferallocator.h</includes>
    <includes refid="eglnativefence_8h" local="yes">opengl/eglnativefence.h</includes>
    <includes refid="eglswapchain_8h" local="yes">opengl/eglswapchain.h</includes>
    <includes refid="glrendertimequery_8h" local="yes">opengl/glrendertimequery.h</includes>
    <includes refid="x11__windowed__backend_8h" local="yes">x11_windowed_backend.h</includes>
    <includes refid="x11__windowed__logging_8h" local="yes">x11_windowed_logging.h</includes>
    <includes refid="x11__windowed__output_8h" local="yes">x11_windowed_output.h</includes>
    <includes local="no">drm_fourcc.h</includes>
    <includes local="yes">moc_x11_windowed_egl_backend.cpp</includes>
    <incdepgraph>
      <node id="69">
        <label>x11_windowed_backend.h</label>
        <link refid="x11__windowed__backend_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/backends/x11/x11_windowed_egl_backend.cpp</label>
        <link refid="x11__windowed__egl__backend_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>x11_windowed_egl_backend.h</label>
        <link refid="x11__windowed__egl__backend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>x11_windowed_logging.h</label>
        <link refid="x11__windowed__logging_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>x11_windowed_output.h</label>
        <link refid="x11__windowed__output_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>core/drmdevice.h</label>
        <link refid="drmdevice_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>core/gbmgraphicsbufferallocator.h</label>
        <link refid="gbmgraphicsbufferallocator_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>core/graphicsbufferallocator.h</label>
        <link refid="graphicsbufferallocator_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>core/inputbackend.h</label>
        <link refid="inputbackend_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>core/outputbackend.h</label>
        <link refid="outputbackend_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/outputlayer.h</label>
        <link refid="outputlayer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>opengl/eglcontext.h</label>
        <link refid="eglcontext_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>opengl/egldisplay.h</label>
        <link refid="egldisplay_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>opengl/eglnativefence.h</label>
        <link refid="eglnativefence_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>opengl/eglswapchain.h</label>
        <link refid="eglswapchain_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>opengl/glframebuffer.h</label>
        <link refid="glframebuffer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>opengl/glrendertimequery.h</label>
        <link refid="glrendertimequery_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>opengl/glshader.h</label>
        <link refid="glshader_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>opengl/glshadermanager.h</label>
        <link refid="glshadermanager_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>opengl/gltexture.h</label>
        <link refid="gltexture_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>opengl/glutils.h</label>
        <link refid="glutils_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>platformsupport/scenes/opengl/abstract_egl_backend.h</label>
        <link refid="abstract__egl__backend_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>platformsupport/scenes/opengl/openglbackend.h</label>
        <link refid="openglbackend_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>wayland/linuxdmabufv1clientbuffer.h</label>
        <link refid="linuxdmabufv1clientbuffer_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>KSharedConfig</label>
      </node>
      <node id="20">
        <label>QByteArray</label>
      </node>
      <node id="40">
        <label>QColor</label>
      </node>
      <node id="14">
        <label>QCoreApplication</label>
      </node>
      <node id="23">
        <label>QDebug</label>
      </node>
      <node id="32">
        <label>QExplicitlySharedDataPointer</label>
      </node>
      <node id="44">
        <label>QFlags</label>
      </node>
      <node id="53">
        <label>QHash</label>
      </node>
      <node id="15">
        <label>QImage</label>
      </node>
      <node id="21">
        <label>QList</label>
      </node>
      <node id="78">
        <label>QLoggingCategory</label>
      </node>
      <node id="41">
        <label>QMatrix3x3</label>
      </node>
      <node id="7">
        <label>QMatrix4x4</label>
      </node>
      <node id="18">
        <label>QObject</label>
      </node>
      <node id="16">
        <label>QPoint</label>
      </node>
      <node id="26">
        <label>QPointer</label>
      </node>
      <node id="24">
        <label>QRect</label>
      </node>
      <node id="27">
        <label>QRegion</label>
      </node>
      <node id="61">
        <label>QSet</label>
      </node>
      <node id="22">
        <label>QSize</label>
      </node>
      <node id="36">
        <label>QStack</label>
      </node>
      <node id="35">
        <label>QString</label>
      </node>
      <node id="25">
        <label>QUuid</label>
      </node>
      <node id="17">
        <label>QVariant</label>
      </node>
      <node id="8">
        <label>QVector2D</label>
      </node>
      <node id="42">
        <label>QVector3D</label>
      </node>
      <node id="28">
        <label>chrono</label>
      </node>
      <node id="13">
        <label>config-kwin.h</label>
      </node>
      <node id="67">
        <label>cstdint</label>
      </node>
      <node id="82">
        <label>drm_fourcc.h</label>
      </node>
      <node id="37">
        <label>epoxy/egl.h</label>
      </node>
      <node id="33">
        <label>epoxy/gl.h</label>
      </node>
      <node id="50">
        <label>functional</label>
      </node>
      <node id="9">
        <label>kwin_export.h</label>
      </node>
      <node id="45">
        <label>map</label>
      </node>
      <node id="46">
        <label>memory</label>
      </node>
      <node id="83">
        <label>moc_x11_windowed_egl_backend.cpp</label>
      </node>
      <node id="6">
        <label>optional</label>
      </node>
      <node id="48">
        <label>ranges</label>
      </node>
      <node id="49">
        <label>span</label>
      </node>
      <node id="54">
        <label>sys/types.h</label>
      </node>
      <node id="80">
        <label>unordered_map</label>
      </node>
      <node id="60">
        <label>utility</label>
      </node>
      <node id="62">
        <label>wayland-server.h</label>
      </node>
      <node id="81">
        <label>xcb/present.h</label>
      </node>
      <node id="75">
        <label>xcb/render.h</label>
      </node>
      <node id="76">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2015<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="x11__windowed__egl__backend_8h" kindref="compound">x11_windowed_egl_backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gbmgraphicsbufferallocator_8h" kindref="compound">core/gbmgraphicsbufferallocator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eglnativefence_8h" kindref="compound">opengl/eglnativefence.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eglswapchain_8h" kindref="compound">opengl/eglswapchain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glrendertimequery_8h" kindref="compound">opengl/glrendertimequery.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="x11__windowed__backend_8h" kindref="compound">x11_windowed_backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="x11__windowed__logging_8h" kindref="compound">x11_windowed_logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="x11__windowed__output_8h" kindref="compound">x11_windowed_output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drm_fourcc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1a431ffa97c5f52e5d9ff12b9381447e75" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1a431ffa97c5f52e5d9ff12b9381447e75" kindref="member">X11WindowedEglPrimaryLayer::X11WindowedEglPrimaryLayer</ref>(<ref refid="class_k_win_1_1_x11_windowed_egl_backend" kindref="compound">X11WindowedEglBackend</ref><sp/>*backend,<sp/><ref refid="class_k_win_1_1_x11_windowed_output" kindref="compound">X11WindowedOutput</ref><sp/>*output)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_output_layer_1a9ee261bca4012bac914df29d5ebf4117" kindref="member">OutputLayer</ref>(output)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_output(output)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_backend(backend)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1aa3d6274a57c75f7692d473b078bfb4a6" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1aa3d6274a57c75f7692d473b078bfb4a6" kindref="member">X11WindowedEglPrimaryLayer::~X11WindowedEglPrimaryLayer</ref>()</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1af4bba28b372bbb48f0bcc8e1f31660c9" refkind="member"><highlight class="normal">std::optional&lt;OutputLayerBeginFrameInfo&gt;<sp/><ref refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1af4bba28b372bbb48f0bcc8e1f31660c9" kindref="member">X11WindowedEglPrimaryLayer::doBeginFrame</ref>()</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_backend-&gt;openglContext()-&gt;makeCurrent())<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>bufferSize<sp/>=<sp/>m_output-&gt;modeSize();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_swapchain<sp/>||<sp/>m_swapchain-&gt;size()<sp/>!=<sp/>bufferSize)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>=<sp/>DRM_FORMAT_XRGB8888;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/><ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref><sp/>=<sp/>m_backend-&gt;backend()-&gt;driFormats();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref>.contains(<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>))<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_swapchain<sp/>=<sp/><ref refid="class_k_win_1_1_egl_swapchain_1ac294347e22b86fa33eda6d954acffd9f" kindref="member">EglSwapchain::create</ref>(m_backend-&gt;drmDevice()-&gt;allocator(),<sp/>m_backend-&gt;openglContext(),<sp/>bufferSize,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/><ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref>[<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>]);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_swapchain)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>m_buffer<sp/>=<sp/>m_swapchain-&gt;acquire();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_buffer)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>QRegion<sp/>repaint<sp/>=<sp/>m_output-&gt;exposedArea()<sp/>+<sp/>m_output-&gt;rect();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>m_output-&gt;clearExposedArea();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>m_query<sp/>=<sp/>std::make_unique&lt;GLRenderTimeQuery&gt;(m_backend-&gt;openglContextRef());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>m_query-&gt;begin();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_output_layer_begin_frame_info" kindref="compound">OutputLayerBeginFrameInfo</ref>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.renderTarget<sp/>=<sp/><ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref>(m_buffer-&gt;framebuffer()),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.repaint<sp/>=<sp/>repaint,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1a7b485dd6bba6de5b7505466c79ce9127" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1a7b485dd6bba6de5b7505466c79ce9127" kindref="member">X11WindowedEglPrimaryLayer::doEndFrame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;renderedRegion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;damagedRegion,<sp/><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref><sp/>*frame)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>m_query-&gt;end();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>frame-&gt;<ref refid="class_k_win_1_1_output_frame_1aaede3e4b1639e0772c87e0105e49981f" kindref="member">addRenderTimeQuery</ref>(std::move(m_query));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1a86a76e10087cdb91e87fdbbb80713367" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1a86a76e10087cdb91e87fdbbb80713367" kindref="member">X11WindowedEglPrimaryLayer::present</ref>()</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_buffer)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_pixmap_t<sp/>pixmap<sp/>=<sp/>m_output-&gt;importBuffer(m_buffer-&gt;buffer());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(pixmap<sp/>!=<sp/>XCB_PIXMAP_NONE);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_xfixes_region_t<sp/>valid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_xfixes_region_t<sp/>update<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>serial<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>targetMsc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_present_pixmap(m_output-&gt;backend()-&gt;connection(),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_output-&gt;window(),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixmap,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XCB_NONE,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XCB_NONE,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XCB_NONE,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetMsc,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_e_g_l_native_fence" kindref="compound">EGLNativeFence</ref><sp/>releaseFence{m_backend-&gt;eglDisplayObject()};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>m_swapchain-&gt;release(m_buffer,<sp/>releaseFence.fileDescriptor().duplicate());</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1ae28a3e471314db11841bb2df7e709e3c" refkind="member"><highlight class="normal">std::shared_ptr&lt;GLTexture&gt;<sp/><ref refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1ae28a3e471314db11841bb2df7e709e3c" kindref="member">X11WindowedEglPrimaryLayer::texture</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="114"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_buffer-&gt;texture();</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1afda73bbe0512963c1715e6537d6a154c" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref><sp/>*<ref refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1afda73bbe0512963c1715e6537d6a154c" kindref="member">X11WindowedEglPrimaryLayer::scanoutDevice</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="119"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_backend-&gt;drmDevice();</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1a23193f5a75de26fb09d2a6a075ccf853" refkind="member"><highlight class="normal">QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/><ref refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1a23193f5a75de26fb09d2a6a075ccf853" kindref="member">X11WindowedEglPrimaryLayer::supportedDrmFormats</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="124"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_backend-&gt;backend()-&gt;driFormats();</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1a7866e45c2ae49ffe3efdd761ee7d4ab6" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1a7866e45c2ae49ffe3efdd761ee7d4ab6" kindref="member">X11WindowedEglCursorLayer::X11WindowedEglCursorLayer</ref>(<ref refid="class_k_win_1_1_x11_windowed_egl_backend" kindref="compound">X11WindowedEglBackend</ref><sp/>*backend,<sp/><ref refid="class_k_win_1_1_x11_windowed_output" kindref="compound">X11WindowedOutput</ref><sp/>*output)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_output_layer_1a9ee261bca4012bac914df29d5ebf4117" kindref="member">OutputLayer</ref>(output)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_backend(backend)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1a9b1c9782f3a98d13c4ff032b77795a3e" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1a9b1c9782f3a98d13c4ff032b77795a3e" kindref="member">X11WindowedEglCursorLayer::~X11WindowedEglCursorLayer</ref>()</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>m_backend-&gt;openglContext()-&gt;makeCurrent();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>m_framebuffer.reset();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>m_texture.reset();</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1a77b9b09d1a8dc6fde2715232b328e4ba" refkind="member"><highlight class="normal">std::optional&lt;OutputLayerBeginFrameInfo&gt;<sp/><ref refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1a77b9b09d1a8dc6fde2715232b328e4ba" kindref="member">X11WindowedEglCursorLayer::doBeginFrame</ref>()</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_backend-&gt;openglContext()-&gt;makeCurrent())<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/><ref refid="class_k_win_1_1_output_layer_1a55b2e80edaf7ad94832884608aca8042" kindref="member">targetRect</ref>().size().expandedTo(QSize(64,<sp/>64));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>bufferSize(std::ceil(tmp.width()),<sp/>std::ceil(tmp.height()));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_texture<sp/>||<sp/>m_texture-&gt;size()<sp/>!=<sp/>bufferSize)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_texture<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a22b5bb33ada7c4b53f73c57f5405289f" kindref="member">GLTexture::allocate</ref>(GL_RGBA8,<sp/>bufferSize);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_texture)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_framebuffer<sp/>=<sp/>std::make_unique&lt;GLFramebuffer&gt;(m_texture.get());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_query)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_query<sp/>=<sp/>std::make_unique&lt;GLRenderTimeQuery&gt;(m_backend-&gt;openglContextRef());</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>m_query-&gt;begin();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_output_layer_begin_frame_info" kindref="compound">OutputLayerBeginFrameInfo</ref>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.renderTarget<sp/>=<sp/><ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref>(m_framebuffer.get()),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.repaint<sp/>=<sp/><ref refid="namespace_k_win_1a0655524c1f1ba8dbb2cf16a1e4b9bb97" kindref="member">infiniteRegion</ref>(),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1ad8fa56591147e0da725354cff7120821" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1ad8fa56591147e0da725354cff7120821" kindref="member">X11WindowedEglCursorLayer::doEndFrame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;renderedRegion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;damagedRegion,<sp/><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref><sp/>*frame)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_context" kindref="compound">EglContext</ref><sp/>*context<sp/>=<sp/>m_backend-&gt;openglContext();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>QImage<sp/>buffer(m_framebuffer-&gt;size(),<sp/>QImage::Format_RGBA8888_Premultiplied);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_framebuffer_1a7eb3049da73a065dcf8ff137fd9b5e3f" kindref="member">GLFramebuffer::pushFramebuffer</ref>(m_framebuffer.get());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>context-&gt;<ref refid="class_k_win_1_1_egl_context_1a8e514031249659695106a1736139ca5f" kindref="member">glReadnPixels</ref>(0,<sp/>0,<sp/>buffer.width(),<sp/>buffer.height(),<sp/>GL_RGBA,<sp/>GL_UNSIGNED_BYTE,<sp/>buffer.sizeInBytes(),<sp/>buffer.bits());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_framebuffer_1a3f7265ef927c8b0ab82728c5118c7bed" kindref="member">GLFramebuffer::popFramebuffer</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_x11_windowed_output" kindref="compound">X11WindowedOutput</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_k_win_1_1_output_layer_1a9b035f27d0ea567a73bf27f9ef82f744" kindref="member">m_output</ref>)-&gt;cursor()-&gt;update(buffer.mirrored(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/><ref refid="class_k_win_1_1_output_layer_1ab5b0f0faaea0c7e881db718a64658dc0" kindref="member">hotspot</ref>());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>m_query-&gt;end();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame-&gt;<ref refid="class_k_win_1_1_output_frame_1aaede3e4b1639e0772c87e0105e49981f" kindref="member">addRenderTimeQuery</ref>(std::move(m_query));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1ae56100f1789afc72f2a94bd3f5a86d6e" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref><sp/>*<ref refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1ae56100f1789afc72f2a94bd3f5a86d6e" kindref="member">X11WindowedEglCursorLayer::scanoutDevice</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="185"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_backend-&gt;drmDevice();</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1a6712414ff53cb45cefa583d055304799" refkind="member"><highlight class="normal">QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/><ref refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1a6712414ff53cb45cefa583d055304799" kindref="member">X11WindowedEglCursorLayer::supportedDrmFormats</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="190"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_backend-&gt;supportedFormats();</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="class_k_win_1_1_x11_windowed_egl_backend_1a98b10477e34f6257f79c9a777e21deb1" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_x11_windowed_egl_backend_1a98b10477e34f6257f79c9a777e21deb1" kindref="member">X11WindowedEglBackend::X11WindowedEglBackend</ref>(<ref refid="class_k_win_1_1_x11_windowed_backend" kindref="compound">X11WindowedBackend</ref><sp/>*<ref refid="class_k_win_1_1_x11_windowed_egl_backend_1a5f8ef5c25a27087f070dc789f534de0b" kindref="member">backend</ref>)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_backend(<ref refid="class_k_win_1_1_x11_windowed_egl_backend_1a5f8ef5c25a27087f070dc789f534de0b" kindref="member">backend</ref>)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="class_k_win_1_1_x11_windowed_egl_backend_1a2a21512d6fec1d6689250f346eb5cb2b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_x11_windowed_egl_backend_1a2a21512d6fec1d6689250f346eb5cb2b" kindref="member">X11WindowedEglBackend::~X11WindowedEglBackend</ref>()</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>m_outputs.clear();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_abstract_egl_backend_1a9a2734bb6daddb796b4675f20c90c6ad" kindref="member">cleanup</ref>();</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="class_k_win_1_1_x11_windowed_egl_backend_1a5f8ef5c25a27087f070dc789f534de0b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_x11_windowed_backend" kindref="compound">X11WindowedBackend</ref><sp/>*<ref refid="class_k_win_1_1_x11_windowed_egl_backend_1a5f8ef5c25a27087f070dc789f534de0b" kindref="member">X11WindowedEglBackend::backend</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="206"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_backend;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="class_k_win_1_1_x11_windowed_egl_backend_1acb57557a9ad86b482eaabe0f33447cac" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref><sp/>*<ref refid="class_k_win_1_1_x11_windowed_egl_backend_1acb57557a9ad86b482eaabe0f33447cac" kindref="member">X11WindowedEglBackend::drmDevice</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="211"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_backend-&gt;drmDevice();</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>X11WindowedEglBackend::initializeEgl()</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_abstract_egl_backend_1a01975a2b1049b42a21a0cc25f7dbcaee" kindref="member">initClientExtensions</ref>();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_backend-&gt;<ref refid="class_k_win_1_1_x11_windowed_backend_1a98430cb34efe5fa82d668029eb3ad1a4" kindref="member">sceneEglDisplayObject</ref>())<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;extension<sp/>:<sp/>{QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;EGL_EXT_platform_base&quot;</highlight><highlight class="normal">),<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;EGL_KHR_platform_gbm&quot;</highlight><highlight class="normal">)})<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_abstract_egl_backend_1a1410486b6a1eb589dc2609b587e33116" kindref="member">hasClientExtension</ref>(extension))<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_X11WINDOWED)<sp/>&lt;&lt;<sp/>extension<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;client<sp/>extension<sp/>is<sp/>not<sp/>supported<sp/>by<sp/>the<sp/>platform&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_backend-&gt;setEglDisplay(<ref refid="class_k_win_1_1_egl_display_1a4074b80fc73f62e385c3d8f3101e9358" kindref="member">EglDisplay::create</ref>(eglGetPlatformDisplayEXT(EGL_PLATFORM_GBM_KHR,<sp/>m_backend-&gt;drmDevice()-&gt;gbmDevice(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>display<sp/>=<sp/>m_backend-&gt;sceneEglDisplayObject();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!display)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_abstract_egl_backend_1a354d6a5a43660c0fff3b5f15b5ceb4a4" kindref="member">setEglDisplay</ref>(display);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>X11WindowedEglBackend::initRenderingContext()</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_abstract_egl_backend_1ac0da7fcdabd3d0a81845f22428324f1c" kindref="member">createContext</ref>(EGL_NO_CONFIG_KHR))<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_abstract_egl_backend_1a139917a79035d3f5d755332773642fc7" kindref="member">makeCurrent</ref>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="class_k_win_1_1_x11_windowed_egl_backend_1a4a80805ed420c6bfe1dd59336ab07278" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_windowed_egl_backend_1a4a80805ed420c6bfe1dd59336ab07278" kindref="member">X11WindowedEglBackend::init</ref>()</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>qputenv(</highlight><highlight class="stringliteral">&quot;EGL_PLATFORM&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;x11&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initializeEgl())<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_open_g_l_backend_1a680916d9d3de7bcf5c1c3ad6338fde5b" kindref="member">setFailed</ref>(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>initialize<sp/>egl&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initRenderingContext())<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_open_g_l_backend_1a680916d9d3de7bcf5c1c3ad6338fde5b" kindref="member">setFailed</ref>(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>initialize<sp/>rendering<sp/>context&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_abstract_egl_backend_1adb84cfda99d103cd0b8f424d5a8eefd5" kindref="member">initWayland</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;outputs<sp/>=<sp/>m_backend-&gt;outputs();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;output<sp/>:<sp/>outputs)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_windowed_output" kindref="compound">X11WindowedOutput</ref><sp/>*x11Output<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_x11_windowed_output" kindref="compound">X11WindowedOutput</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(output);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_outputs[output]<sp/>=<sp/>Layers{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.primaryLayer<sp/>=<sp/>std::make_unique&lt;X11WindowedEglPrimaryLayer&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>x11Output),</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.cursorLayer<sp/>=<sp/>std::make_unique&lt;X11WindowedEglCursorLayer&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>x11Output),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="class_k_win_1_1_x11_windowed_egl_backend_1ad95072fad105959aafe2af3ebaf4f8e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_windowed_egl_backend_1ad95072fad105959aafe2af3ebaf4f8e4" kindref="member">X11WindowedEglBackend::present</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>m_outputs[output].primaryLayer-&gt;present();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_x11_windowed_output" kindref="compound">X11WindowedOutput</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(output)-&gt;outputChange(frame-&gt;damage());</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_x11_windowed_output" kindref="compound">X11WindowedOutput</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(output)-&gt;framePending(frame);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="class_k_win_1_1_x11_windowed_egl_backend_1a0490b0bbbde48fd1c69c7b422d91a832" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref><sp/>*<ref refid="class_k_win_1_1_x11_windowed_egl_backend_1a0490b0bbbde48fd1c69c7b422d91a832" kindref="member">X11WindowedEglBackend::primaryLayer</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_outputs[output].primaryLayer.get();</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="class_k_win_1_1_x11_windowed_egl_backend_1a3382ef1705a0ce3d511edaae026a252e" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref><sp/>*<ref refid="class_k_win_1_1_x11_windowed_egl_backend_1a3382ef1705a0ce3d511edaae026a252e" kindref="member">X11WindowedEglBackend::cursorLayer</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_outputs[output].cursorLayer.get();</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="class_k_win_1_1_x11_windowed_egl_backend_1a2208dfc77fa43898b947fd46718d8d14" refkind="member"><highlight class="normal">std::pair&lt;std::shared_ptr&lt;GLTexture&gt;,<sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref>&gt;<sp/><ref refid="class_k_win_1_1_x11_windowed_egl_backend_1a2208dfc77fa43898b947fd46718d8d14" kindref="member">X11WindowedEglBackend::textureForOutput</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="291"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_outputs.find(output);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>m_outputs.end())<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref>};</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(it-&gt;second.primaryLayer-&gt;texture(),<sp/><ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_x11_windowed_egl_backend.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/backends/x11/x11_windowed_egl_backend.cpp"/>
  </compounddef>
</doxygen>
