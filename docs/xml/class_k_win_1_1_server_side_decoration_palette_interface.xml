<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_server_side_decoration_palette_interface" kind="class" language="C++" prot="public">
    <compoundname>KWin::ServerSideDecorationPaletteInterface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="server__decoration__palette_8h" local="no">server_decoration_palette.h</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_k_win_1_1_server_side_decoration_palette_interface_1a40c692a62f6916ce7096f614cdff3c76" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class ServerSideDecorationPaletteManagerInterfacePrivate</definition>
        <argsstring></argsstring>
        <name>ServerSideDecorationPaletteManagerInterfacePrivate</name>
        <qualifiedname>KWin::ServerSideDecorationPaletteInterface::ServerSideDecorationPaletteManagerInterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_server_side_decoration_palette_manager_interface_private" kindref="compound">ServerSideDecorationPaletteManagerInterfacePrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration_palette.h" line="80" column="18" bodyfile="kwin/src/wayland/server_decoration_palette.h" bodystart="80" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_server_side_decoration_palette_interface_1a9e35ce2ea8458a54b6bbf1e08bb66886" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_server_side_decoration_palette_interface_private" kindref="compound">ServerSideDecorationPaletteInterfacePrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ServerSideDecorationPaletteInterfacePrivate&gt; KWin::ServerSideDecorationPaletteInterface::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::ServerSideDecorationPaletteInterface::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration_palette.h" line="82" column="21" bodyfile="kwin/src/wayland/server_decoration_palette.h" bodystart="82" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_server_side_decoration_palette_interface_1a5823dcf5ac4c9bc808d13ca6f5fba5a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ServerSideDecorationPaletteInterface::~ServerSideDecorationPaletteInterface</definition>
        <argsstring>() override</argsstring>
        <name>~ServerSideDecorationPaletteInterface</name>
        <qualifiedname>KWin::ServerSideDecorationPaletteInterface::~ServerSideDecorationPaletteInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration_palette.h" line="60" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_server_side_decoration_palette_interface_1adb391869f67faf50b41cc14d1f3d10a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::ServerSideDecorationPaletteInterface::palette</definition>
        <argsstring>() const</argsstring>
        <name>palette</name>
        <qualifiedname>KWin::ServerSideDecorationPaletteInterface::palette</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the palette or an empty string if unset </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration_palette.h" line="65" column="13" bodyfile="kwin/src/wayland/server_decoration_palette.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_server_side_decoration_palette_interface_1aad2d911ce4392d6f46fe82f9f6d82a06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
        <definition>SurfaceInterface * KWin::ServerSideDecorationPaletteInterface::surface</definition>
        <argsstring>() const</argsstring>
        <name>surface</name>
        <qualifiedname>KWin::ServerSideDecorationPaletteInterface::surface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> this <ref refid="class_k_win_1_1_server_side_decoration_palette_interface" kindref="compound">ServerSideDecorationPaletteInterface</ref> references. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration_palette.h" line="70" column="22" bodyfile="kwin/src/wayland/server_decoration_palette.cpp" bodystart="137" bodyend="140"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_server_side_decoration_palette_interface_1a920bcd354f5cd2f5af2c455136acce0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ServerSideDecorationPaletteInterface::paletteChanged</definition>
        <argsstring>(const QString &amp;palette)</argsstring>
        <name>paletteChanged</name>
        <qualifiedname>KWin::ServerSideDecorationPaletteInterface::paletteChanged</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>palette</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Emitted when the palette changes or is first received </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration_palette.h" line="76" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_server_side_decoration_palette_interface_1a36ac61063970281964cc17736198051c" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ServerSideDecorationPaletteInterface::ServerSideDecorationPaletteInterface</definition>
        <argsstring>(SurfaceInterface *surface, wl_resource *resource)</argsstring>
        <name>ServerSideDecorationPaletteInterface</name>
        <qualifiedname>KWin::ServerSideDecorationPaletteInterface::ServerSideDecorationPaletteInterface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration_palette.h" line="79" column="14" bodyfile="kwin/src/wayland/server_decoration_palette.cpp" bodystart="124" bodyend="128"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Provides the palette This interface is attached to a wl_surface and informs the server of a requested palette </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::ServerSideDecorationPaletteInterface</label>
        <link refid="class_k_win_1_1_server_side_decoration_palette_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::ServerSideDecorationPaletteInterface</label>
        <link refid="class_k_win_1_1_server_side_decoration_palette_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/server_decoration_palette.h" line="56" column="1" bodyfile="kwin/src/wayland/server_decoration_palette.h" bodystart="57" bodyend="83"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_server_side_decoration_palette_interface_1a9e35ce2ea8458a54b6bbf1e08bb66886" prot="private" virt="non-virtual"><scope>KWin::ServerSideDecorationPaletteInterface</scope><name>d</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_palette_interface_1adb391869f67faf50b41cc14d1f3d10a8" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationPaletteInterface</scope><name>palette</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_palette_interface_1a920bcd354f5cd2f5af2c455136acce0a" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationPaletteInterface</scope><name>paletteChanged</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_palette_interface_1a36ac61063970281964cc17736198051c" prot="private" virt="non-virtual"><scope>KWin::ServerSideDecorationPaletteInterface</scope><name>ServerSideDecorationPaletteInterface</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_palette_interface_1a40c692a62f6916ce7096f614cdff3c76" prot="private" virt="non-virtual"><scope>KWin::ServerSideDecorationPaletteInterface</scope><name>ServerSideDecorationPaletteManagerInterfacePrivate</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_palette_interface_1aad2d911ce4392d6f46fe82f9f6d82a06" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationPaletteInterface</scope><name>surface</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_palette_interface_1a5823dcf5ac4c9bc808d13ca6f5fba5a5" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationPaletteInterface</scope><name>~ServerSideDecorationPaletteInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
