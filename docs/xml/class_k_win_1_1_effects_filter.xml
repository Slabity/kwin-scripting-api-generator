<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_effects_filter" kind="class" language="C++" prot="public">
    <compoundname>KWin::EffectsFilter</compoundname>
    <basecompoundref refid="class_k_win_1_1_input_event_filter" prot="public" virt="non-virtual">KWin::InputEventFilter</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1a6fe2a7c157bba225be81310d7beb4b8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::EffectsFilter::EffectsFilter</definition>
        <argsstring>()</argsstring>
        <name>EffectsFilter</name>
        <qualifiedname>KWin::EffectsFilter::EffectsFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="520" column="5" bodyfile="kwin/src/input.cpp" bodystart="520" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1a3626f4479883002722948b0beee68a1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::pointerMotion</definition>
        <argsstring>(PointerMotionEvent *event) override</argsstring>
        <name>pointerMotion</name>
        <qualifiedname>KWin::EffectsFilter::pointerMotion</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a0e8cf7f7d0816fa15dbfef65300bdf74">pointerMotion</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_pointer_motion_event" kindref="compound">PointerMotionEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="524" column="10" bodyfile="kwin/src/input.cpp" bodystart="524" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1ab6d8a9cda9277e58c8f5c15eac8ce79c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::pointerButton</definition>
        <argsstring>(PointerButtonEvent *event) override</argsstring>
        <name>pointerButton</name>
        <qualifiedname>KWin::EffectsFilter::pointerButton</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a42d5cd1beabe79a9f0f47c7984a63e03">pointerButton</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="539" column="10" bodyfile="kwin/src/input.cpp" bodystart="539" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1a16e0d9eeb67725faac634c19fca9209a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::pointerAxis</definition>
        <argsstring>(PointerAxisEvent *event) override</argsstring>
        <name>pointerAxis</name>
        <qualifiedname>KWin::EffectsFilter::pointerAxis</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a34fb678aeaece81927f9ffd95bb418a6">pointerAxis</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event filter for pointer axis events.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event information about the axis event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> to stop further event processing, <computeroutput>false</computeroutput> to pass to next filter </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="554" column="10" bodyfile="kwin/src/input.cpp" bodystart="554" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1ad53e94664b91a0017014086f91837241" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::keyboardKey</definition>
        <argsstring>(KeyboardKeyEvent *event) override</argsstring>
        <name>keyboardKey</name>
        <qualifiedname>KWin::EffectsFilter::keyboardKey</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1accb90817b0fb12456022cb3e1d89fd24">keyboardKey</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event filter for keyboard events.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event information about the key event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> to stop further event processing, <computeroutput>false</computeroutput> to pass to next filter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="570" column="10" bodyfile="kwin/src/input.cpp" bodystart="570" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1aaaace65eb42c809615b291b6a7667d3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::touchDown</definition>
        <argsstring>(qint32 id, const QPointF &amp;pos, std::chrono::microseconds time) override</argsstring>
        <name>touchDown</name>
        <qualifiedname>KWin::EffectsFilter::touchDown</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a9d918ff67523d7f036943c9aa56a2e1b">touchDown</reimplements>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="590" column="10" bodyfile="kwin/src/input.cpp" bodystart="590" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1a3d5af61f47ec9ba0250f7156e2df2993" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::touchMotion</definition>
        <argsstring>(qint32 id, const QPointF &amp;pos, std::chrono::microseconds time) override</argsstring>
        <name>touchMotion</name>
        <qualifiedname>KWin::EffectsFilter::touchMotion</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1ab8d0440bac50eda28cba2ac9ed7548e1">touchMotion</reimplements>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="597" column="10" bodyfile="kwin/src/input.cpp" bodystart="597" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1ad220ddbfb97ac2d29e4d1152d7a15a97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::touchUp</definition>
        <argsstring>(qint32 id, std::chrono::microseconds time) override</argsstring>
        <name>touchUp</name>
        <qualifiedname>KWin::EffectsFilter::touchUp</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a608cb067e83ad4ed842476cc16ac0800">touchUp</reimplements>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="604" column="10" bodyfile="kwin/src/input.cpp" bodystart="604" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1a96d9580abeb5f4f496b2cd545295bf18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::touchCancel</definition>
        <argsstring>() override</argsstring>
        <name>touchCancel</name>
        <qualifiedname>KWin::EffectsFilter::touchCancel</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1ae760899fce671a183fbc540b8beaeea8">touchCancel</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="611" column="10" bodyfile="kwin/src/input.cpp" bodystart="611" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1a2bb4dea6e873554b6944f42f54985110" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::tabletToolProximityEvent</definition>
        <argsstring>(TabletToolProximityEvent *event) override</argsstring>
        <name>tabletToolProximityEvent</name>
        <qualifiedname>KWin::EffectsFilter::tabletToolProximityEvent</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a02802b4a5bef840c2c077f7271755858">tabletToolProximityEvent</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_tool_proximity_event" kindref="compound">TabletToolProximityEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="616" column="10" bodyfile="kwin/src/input.cpp" bodystart="616" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1aad8d6dc648de7554b5276073e913021e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::tabletToolAxisEvent</definition>
        <argsstring>(TabletToolAxisEvent *event) override</argsstring>
        <name>tabletToolAxisEvent</name>
        <qualifiedname>KWin::EffectsFilter::tabletToolAxisEvent</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1aff68194291337061cc9785d66c3043ce">tabletToolAxisEvent</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_tool_axis_event" kindref="compound">TabletToolAxisEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="623" column="10" bodyfile="kwin/src/input.cpp" bodystart="623" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1a5726eb81f0b9c17b55490a6225f21a81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::tabletToolTipEvent</definition>
        <argsstring>(TabletToolTipEvent *event) override</argsstring>
        <name>tabletToolTipEvent</name>
        <qualifiedname>KWin::EffectsFilter::tabletToolTipEvent</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1af1d39642578227a239b2aa8e55405367">tabletToolTipEvent</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="630" column="10" bodyfile="kwin/src/input.cpp" bodystart="630" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1a8378bebf4a31dc3540f5956389bf40bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::tabletToolButtonEvent</definition>
        <argsstring>(TabletToolButtonEvent *event) override</argsstring>
        <name>tabletToolButtonEvent</name>
        <qualifiedname>KWin::EffectsFilter::tabletToolButtonEvent</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a7a56441182925d5c0fd6876bc0414c8e">tabletToolButtonEvent</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_tool_button_event" kindref="compound">TabletToolButtonEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="637" column="10" bodyfile="kwin/src/input.cpp" bodystart="637" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1a977e2063177a0433f61d33d8208c48be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::tabletPadButtonEvent</definition>
        <argsstring>(TabletPadButtonEvent *event) override</argsstring>
        <name>tabletPadButtonEvent</name>
        <qualifiedname>KWin::EffectsFilter::tabletPadButtonEvent</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a4ef1fabdd3f77b942ee0596f400f32fc">tabletPadButtonEvent</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_pad_button_event" kindref="compound">TabletPadButtonEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="644" column="10" bodyfile="kwin/src/input.cpp" bodystart="644" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1a22faea35b7cac771ac258b502c37db08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::tabletPadStripEvent</definition>
        <argsstring>(TabletPadStripEvent *event) override</argsstring>
        <name>tabletPadStripEvent</name>
        <qualifiedname>KWin::EffectsFilter::tabletPadStripEvent</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1a02286f0b50679ecea3e1b231cb27861a">tabletPadStripEvent</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_pad_strip_event" kindref="compound">TabletPadStripEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="651" column="10" bodyfile="kwin/src/input.cpp" bodystart="651" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effects_filter_1abbfce55fb47288b693777c3008794baa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::EffectsFilter::tabletPadRingEvent</definition>
        <argsstring>(TabletPadRingEvent *event) override</argsstring>
        <name>tabletPadRingEvent</name>
        <qualifiedname>KWin::EffectsFilter::tabletPadRingEvent</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_filter_1aeab73b0dbcd57d4b3f678a81de7489b4">tabletPadRingEvent</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_pad_ring_event" kindref="compound">TabletPadRingEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="658" column="10" bodyfile="kwin/src/input.cpp" bodystart="658" bodyend="664"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::EffectsFilter</label>
        <link refid="class_k_win_1_1_effects_filter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::InputEventFilter</label>
        <link refid="class_k_win_1_1_input_event_filter"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::EffectsFilter</label>
        <link refid="class_k_win_1_1_effects_filter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::InputEventFilter</label>
        <link refid="class_k_win_1_1_input_event_filter"/>
      </node>
    </collaborationgraph>
    <location file="kwin/src/input.cpp" line="517" column="1" bodyfile="kwin/src/input.cpp" bodystart="518" bodyend="665"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_effects_filter_1a6fe2a7c157bba225be81310d7beb4b8c" prot="public" virt="non-virtual"><scope>KWin::EffectsFilter</scope><name>EffectsFilter</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ac0990f77bd702079fc24ef1b85b6027a" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>holdGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ae0d852136e0039a753ffed5feb537f1c" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>holdGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1aaf03914c307f1f6e300ac28e7dfd8bbc" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>holdGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" prot="public" virt="non-virtual"><scope>KWin::EffectsFilter</scope><name>InputEventFilter</name></member>
      <member refid="class_k_win_1_1_effects_filter_1ad53e94664b91a0017014086f91837241" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>keyboardKey</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ae72e537c14e9de14f0720c8f25c6c4cd" prot="protected" virt="non-virtual"><scope>KWin::EffectsFilter</scope><name>passToInputMethod</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ad56a554ea3b7f767e31d332c4c5e055c" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>pinchGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ab613d6168ad5c579aa19af90b88e87b1" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>pinchGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a10658e9f1c58a685940eb12b435fe146" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>pinchGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a598c8b3e5fe665b14a3e67a375832d08" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>pinchGestureUpdate</name></member>
      <member refid="class_k_win_1_1_effects_filter_1a16e0d9eeb67725faac634c19fca9209a" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>pointerAxis</name></member>
      <member refid="class_k_win_1_1_effects_filter_1ab6d8a9cda9277e58c8f5c15eac8ce79c" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>pointerButton</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a8aedcd4f0130e1c00d08b87213f123c1" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>pointerFrame</name></member>
      <member refid="class_k_win_1_1_effects_filter_1a3626f4479883002722948b0beee68a1c" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>pointerMotion</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1aef58de63781487e47b4137c43a8d2c44" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>swipeGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a6d1ec0e92bdcd24e12a11a68483f9517" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>swipeGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ab5b578ec73f882e2830f2fefe1f4775e" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>swipeGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a9a1557bd23c9ea3965a7130edc7462c5" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>swipeGestureUpdate</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1aed8b92865343626379d8ac71f4bd2ea4" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>switchEvent</name></member>
      <member refid="class_k_win_1_1_effects_filter_1a977e2063177a0433f61d33d8208c48be" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>tabletPadButtonEvent</name></member>
      <member refid="class_k_win_1_1_effects_filter_1abbfce55fb47288b693777c3008794baa" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>tabletPadRingEvent</name></member>
      <member refid="class_k_win_1_1_effects_filter_1a22faea35b7cac771ac258b502c37db08" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>tabletPadStripEvent</name></member>
      <member refid="class_k_win_1_1_effects_filter_1aad8d6dc648de7554b5276073e913021e" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>tabletToolAxisEvent</name></member>
      <member refid="class_k_win_1_1_effects_filter_1a8378bebf4a31dc3540f5956389bf40bb" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>tabletToolButtonEvent</name></member>
      <member refid="class_k_win_1_1_effects_filter_1a2bb4dea6e873554b6944f42f54985110" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>tabletToolProximityEvent</name></member>
      <member refid="class_k_win_1_1_effects_filter_1a5726eb81f0b9c17b55490a6225f21a81" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>tabletToolTipEvent</name></member>
      <member refid="class_k_win_1_1_effects_filter_1a96d9580abeb5f4f496b2cd545295bf18" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>touchCancel</name></member>
      <member refid="class_k_win_1_1_effects_filter_1aaaace65eb42c809615b291b6a7667d3b" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>touchDown</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ae7e591c6e196c1c8929934c69da523b9" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>touchFrame</name></member>
      <member refid="class_k_win_1_1_effects_filter_1a3d5af61f47ec9ba0250f7156e2df2993" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>touchMotion</name></member>
      <member refid="class_k_win_1_1_effects_filter_1ad220ddbfb97ac2d29e4d1152d7a15a97" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>touchUp</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a52a11556fd89cea278b3fcb79d4f6a78" prot="public" virt="non-virtual"><scope>KWin::EffectsFilter</scope><name>weight</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ab87db3c27248ac5074cf84ee87d94c9c" prot="public" virt="virtual"><scope>KWin::EffectsFilter</scope><name>~InputEventFilter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
