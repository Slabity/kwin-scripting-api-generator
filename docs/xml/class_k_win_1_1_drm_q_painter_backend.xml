<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_drm_q_painter_backend" kind="class" language="C++" prot="public">
    <compoundname>KWin::DrmQPainterBackend</compoundname>
    <basecompoundref refid="class_k_win_1_1_q_painter_backend" prot="public" virt="non-virtual">KWin::QPainterBackend</basecompoundref>
    <basecompoundref refid="class_k_win_1_1_drm_render_backend" prot="public" virt="non-virtual">KWin::DrmRenderBackend</basecompoundref>
    <includes refid="drm__qpainter__backend_8h" local="no">drm_qpainter_backend.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_drm_q_painter_backend_1a0e0a6d778d4d63f4a32d150e73f4bc83" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_drm_backend" kindref="compound">DrmBackend</ref> *</type>
        <definition>DrmBackend* KWin::DrmQPainterBackend::m_backend</definition>
        <argsstring></argsstring>
        <name>m_backend</name>
        <qualifiedname>KWin::DrmQPainterBackend::m_backend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_backend.h" line="42" column="16" bodyfile="kwin/src/backends/drm/drm_qpainter_backend.h" bodystart="42" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_backend_1aa65e7b63e34a2ffcc8924b87a5bb4de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::DrmQPainterBackend::DrmQPainterBackend</definition>
        <argsstring>(DrmBackend *backend)</argsstring>
        <name>DrmQPainterBackend</name>
        <qualifiedname>KWin::DrmQPainterBackend::DrmQPainterBackend</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_drm_backend" kindref="compound">DrmBackend</ref> *</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_backend.h" line="28" column="5" bodyfile="kwin/src/backends/drm/drm_qpainter_backend.cpp" bodystart="22" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_backend_1a66a56197f28599c1eb1ad0db55ce015a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::DrmQPainterBackend::~DrmQPainterBackend</definition>
        <argsstring>()</argsstring>
        <name>~DrmQPainterBackend</name>
        <qualifiedname>KWin::DrmQPainterBackend::~DrmQPainterBackend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_backend.h" line="29" column="5" bodyfile="kwin/src/backends/drm/drm_qpainter_backend.cpp" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_backend_1ab51dd7d7b302e166d3f5db25dbafa7a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref> *</type>
        <definition>DrmDevice * KWin::DrmQPainterBackend::drmDevice</definition>
        <argsstring>() const override</argsstring>
        <name>drmDevice</name>
        <qualifiedname>KWin::DrmQPainterBackend::drmDevice</qualifiedname>
        <reimplements refid="class_k_win_1_1_render_backend_1a9135e39ee4f8aed8dcfd2771fe0a7773">drmDevice</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_backend.h" line="31" column="15" bodyfile="kwin/src/backends/drm/drm_qpainter_backend.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_backend_1ab84f9ff10d2b4e19caae63a79cc5e500" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::DrmQPainterBackend::present</definition>
        <argsstring>(Output *output, const std::shared_ptr&lt; OutputFrame &gt; &amp;frame) override</argsstring>
        <name>present</name>
        <qualifiedname>KWin::DrmQPainterBackend::present</qualifiedname>
        <reimplements refid="class_k_win_1_1_render_backend_1ad9736308199d71cdd97755a111f5abbe">present</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> &gt; &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_backend.h" line="33" column="10" bodyfile="kwin/src/backends/drm/drm_qpainter_backend.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_backend_1a969d52f08c3e9ca1736b81459c09954e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::DrmQPainterBackend::repairPresentation</definition>
        <argsstring>(Output *output) override</argsstring>
        <name>repairPresentation</name>
        <qualifiedname>KWin::DrmQPainterBackend::repairPresentation</qualifiedname>
        <reimplements refid="class_k_win_1_1_render_backend_1a64651d2ee05d39d5e1df7391036198d8">repairPresentation</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_backend.h" line="34" column="10" bodyfile="kwin/src/backends/drm/drm_qpainter_backend.cpp" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_backend_1a5381eb01f08d98f014d0ff06e4ced3f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref> *</type>
        <definition>OutputLayer * KWin::DrmQPainterBackend::primaryLayer</definition>
        <argsstring>(Output *output) override</argsstring>
        <name>primaryLayer</name>
        <qualifiedname>KWin::DrmQPainterBackend::primaryLayer</qualifiedname>
        <reimplements refid="class_k_win_1_1_render_backend_1a0862ffb5aba97ee2d82e6488e4d1471d">primaryLayer</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_backend.h" line="35" column="17" bodyfile="kwin/src/backends/drm/drm_qpainter_backend.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_backend_1abed1391198b4029f6fa39d3ca70d8a49" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref> *</type>
        <definition>OutputLayer * KWin::DrmQPainterBackend::cursorLayer</definition>
        <argsstring>(Output *output) override</argsstring>
        <name>cursorLayer</name>
        <qualifiedname>KWin::DrmQPainterBackend::cursorLayer</qualifiedname>
        <reimplements refid="class_k_win_1_1_render_backend_1abe178a184592ff07e972f4971de5f964">cursorLayer</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_backend.h" line="36" column="17" bodyfile="kwin/src/backends/drm/drm_qpainter_backend.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_backend_1aff0ef8434410d904f7430f9f84cc3585" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_drm_pipeline_layer" kindref="compound">DrmPipelineLayer</ref> &gt;</type>
        <definition>std::shared_ptr&lt; DrmPipelineLayer &gt; KWin::DrmQPainterBackend::createDrmPlaneLayer</definition>
        <argsstring>(DrmPipeline *pipeline, DrmPlane::TypeIndex type) override</argsstring>
        <name>createDrmPlaneLayer</name>
        <qualifiedname>KWin::DrmQPainterBackend::createDrmPlaneLayer</qualifiedname>
        <reimplements refid="class_k_win_1_1_drm_render_backend_1a113497a09f7daaa28ce0c736ee15ce48">createDrmPlaneLayer</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_drm_pipeline" kindref="compound">DrmPipeline</ref> *</type>
          <declname>pipeline</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_drm_plane_1a3cf72c069e4b10ac10646deba960d050" kindref="member">DrmPlane::TypeIndex</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_backend.h" line="38" column="21" bodyfile="kwin/src/backends/drm/drm_qpainter_backend.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_backend_1ab60436610da8911ddef9c59ffadc0c6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_drm_output_layer" kindref="compound">DrmOutputLayer</ref> &gt;</type>
        <definition>std::shared_ptr&lt; DrmOutputLayer &gt; KWin::DrmQPainterBackend::createLayer</definition>
        <argsstring>(DrmVirtualOutput *output) override</argsstring>
        <name>createLayer</name>
        <qualifiedname>KWin::DrmQPainterBackend::createLayer</qualifiedname>
        <reimplements refid="class_k_win_1_1_drm_render_backend_1a4a3047fc800b159589ef7a24245b2301">createLayer</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_drm_virtual_output" kindref="compound">DrmVirtualOutput</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_backend.h" line="39" column="21" bodyfile="kwin/src/backends/drm/drm_qpainter_backend.cpp" bodystart="68" bodyend="71"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::DrmQPainterBackend</label>
        <link refid="class_k_win_1_1_drm_q_painter_backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>KWin::DrmRenderBackend</label>
        <link refid="class_k_win_1_1_drm_render_backend"/>
      </node>
      <node id="2">
        <label>KWin::QPainterBackend</label>
        <link refid="class_k_win_1_1_q_painter_backend"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KWin::RenderBackend</label>
        <link refid="class_k_win_1_1_render_backend"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::DrmQPainterBackend</label>
        <link refid="class_k_win_1_1_drm_q_painter_backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>KWin::DrmRenderBackend</label>
        <link refid="class_k_win_1_1_drm_render_backend"/>
      </node>
      <node id="2">
        <label>KWin::QPainterBackend</label>
        <link refid="class_k_win_1_1_q_painter_backend"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KWin::RenderBackend</label>
        <link refid="class_k_win_1_1_render_backend"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/backends/drm/drm_qpainter_backend.h" line="24" column="1" bodyfile="kwin/src/backends/drm/drm_qpainter_backend.h" bodystart="25" bodyend="43"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_render_backend_1a995e6152b42f76691d296e99780ef707" prot="public" virt="virtual"><scope>KWin::DrmQPainterBackend</scope><name>checkGraphicsReset</name></member>
      <member refid="class_k_win_1_1_q_painter_backend_1aa900b8b99a52720ee4a4755004dd223f" prot="public" virt="virtual"><scope>KWin::DrmQPainterBackend</scope><name>compositingType</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_backend_1aff0ef8434410d904f7430f9f84cc3585" prot="public" virt="virtual"><scope>KWin::DrmQPainterBackend</scope><name>createDrmPlaneLayer</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_backend_1ab60436610da8911ddef9c59ffadc0c6e" prot="public" virt="virtual"><scope>KWin::DrmQPainterBackend</scope><name>createLayer</name></member>
      <member refid="class_k_win_1_1_q_painter_backend_1aff220169aa2dab357193134bcf2b2614" prot="public" virt="virtual"><scope>KWin::DrmQPainterBackend</scope><name>createSurfaceTextureWayland</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_backend_1abed1391198b4029f6fa39d3ca70d8a49" prot="public" virt="virtual"><scope>KWin::DrmQPainterBackend</scope><name>cursorLayer</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_backend_1ab51dd7d7b302e166d3f5db25dbafa7a7" prot="public" virt="virtual"><scope>KWin::DrmQPainterBackend</scope><name>drmDevice</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_backend_1aa65e7b63e34a2ffcc8924b87a5bb4de7" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterBackend</scope><name>DrmQPainterBackend</name></member>
      <member refid="class_k_win_1_1_q_painter_backend_1a42d70b9b9256a11fe6b9cc9d22170330" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterBackend</scope><name>isFailed</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_backend_1a0e0a6d778d4d63f4a32d150e73f4bc83" prot="private" virt="non-virtual"><scope>KWin::DrmQPainterBackend</scope><name>m_backend</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_backend_1ab84f9ff10d2b4e19caae63a79cc5e500" prot="public" virt="virtual"><scope>KWin::DrmQPainterBackend</scope><name>present</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_backend_1a5381eb01f08d98f014d0ff06e4ced3f3" prot="public" virt="virtual"><scope>KWin::DrmQPainterBackend</scope><name>primaryLayer</name></member>
      <member refid="class_k_win_1_1_q_painter_backend_1aea8d4b3476c2a0d7f05bfc31173e5dd5" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterBackend</scope><name>QPainterBackend</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_backend_1a969d52f08c3e9ca1736b81459c09954e" prot="public" virt="virtual"><scope>KWin::DrmQPainterBackend</scope><name>repairPresentation</name></member>
      <member refid="class_k_win_1_1_q_painter_backend_1a360e5f99249f85996c4ba12cc3029e72" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterBackend</scope><name>setFailed</name></member>
      <member refid="class_k_win_1_1_render_backend_1aca3c178c2ab62c1b5f1074200b066c53" prot="public" virt="virtual"><scope>KWin::DrmQPainterBackend</scope><name>supportedFormats</name></member>
      <member refid="class_k_win_1_1_render_backend_1a19fb9a934538fe684e8fe9725f253904" prot="public" virt="virtual"><scope>KWin::DrmQPainterBackend</scope><name>testImportBuffer</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_backend_1a66a56197f28599c1eb1ad0db55ce015a" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterBackend</scope><name>~DrmQPainterBackend</name></member>
      <member refid="class_k_win_1_1_drm_render_backend_1a7c1b7ff145ec2fef105454425cbc93dc" prot="public" virt="virtual"><scope>KWin::DrmQPainterBackend</scope><name>~DrmRenderBackend</name></member>
      <member refid="class_k_win_1_1_q_painter_backend_1aa9567039bb920bc977ac946de73944c4" prot="public" virt="virtual"><scope>KWin::DrmQPainterBackend</scope><name>~QPainterBackend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
