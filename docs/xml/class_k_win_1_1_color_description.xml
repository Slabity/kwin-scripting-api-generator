<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_color_description" kind="class" language="C++" prot="public">
    <compoundname>KWin::ColorDescription</compoundname>
    <includes refid="colorspace_8h" local="no">colorspace.h</includes>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" prot="public" static="yes" mutable="no">
        <type>const <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref></type>
        <definition>const ColorDescription KWin::ColorDescription::sRGB</definition>
        <argsstring></argsstring>
        <name>sRGB</name>
        <qualifiedname>KWin::ColorDescription::sRGB</qualifiedname>
        <initializer>= <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref>(<ref refid="class_k_win_1_1_colorimetry_1abdec0c7f99cb7af5dd75fdaadfff4297" kindref="member">Colorimetry::BT709</ref>, <ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref>(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">TransferFunction::gamma22</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This color description describes display-referred sRGB, with a gamma22 transfer function </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="268" column="35" bodyfile="kwin/src/core/colorspace.h" bodystart="268" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_color_description_1a01a0774ba82c55624f6c66826164fb1c" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref></type>
        <definition>Colorimetry KWin::ColorDescription::m_containerColorimetry</definition>
        <argsstring></argsstring>
        <name>m_containerColorimetry</name>
        <qualifiedname>KWin::ColorDescription::m_containerColorimetry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="271" column="17" bodyfile="kwin/src/core/colorspace.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_color_description_1a3ab35f61e3869c82ba64311926adafb4" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref> &gt;</type>
        <definition>std::optional&lt;Colorimetry&gt; KWin::ColorDescription::m_masteringColorimetry</definition>
        <argsstring></argsstring>
        <name>m_masteringColorimetry</name>
        <qualifiedname>KWin::ColorDescription::m_masteringColorimetry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="272" column="19" bodyfile="kwin/src/core/colorspace.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_color_description_1af24ef1dc5f726cb12379bb4f33b54690" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref></type>
        <definition>TransferFunction KWin::ColorDescription::m_transferFunction</definition>
        <argsstring></argsstring>
        <name>m_transferFunction</name>
        <qualifiedname>KWin::ColorDescription::m_transferFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="273" column="22" bodyfile="kwin/src/core/colorspace.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_color_description_1a73ea72d9aba3e95bc3ce5ad8104ee826" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref></type>
        <definition>Colorimetry KWin::ColorDescription::m_sdrColorimetry</definition>
        <argsstring></argsstring>
        <name>m_sdrColorimetry</name>
        <qualifiedname>KWin::ColorDescription::m_sdrColorimetry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="274" column="17" bodyfile="kwin/src/core/colorspace.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_color_description_1abe3450ad86334318a25410b8265c36d7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KWin::ColorDescription::m_referenceLuminance</definition>
        <argsstring></argsstring>
        <name>m_referenceLuminance</name>
        <qualifiedname>KWin::ColorDescription::m_referenceLuminance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="275" column="12" bodyfile="kwin/src/core/colorspace.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_color_description_1ae716c24a3b532d69d1653c1a4c5bc958" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KWin::ColorDescription::m_minLuminance</definition>
        <argsstring></argsstring>
        <name>m_minLuminance</name>
        <qualifiedname>KWin::ColorDescription::m_minLuminance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="276" column="12" bodyfile="kwin/src/core/colorspace.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_color_description_1a98772b5bb4f4e0af2d2b906ca9919441" prot="private" static="no" mutable="no">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt;double&gt; KWin::ColorDescription::m_maxAverageLuminance</definition>
        <argsstring></argsstring>
        <name>m_maxAverageLuminance</name>
        <qualifiedname>KWin::ColorDescription::m_maxAverageLuminance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="277" column="19" bodyfile="kwin/src/core/colorspace.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_color_description_1a5da77fea01174649425b5a9b0afc1453" prot="private" static="no" mutable="no">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt;double&gt; KWin::ColorDescription::m_maxHdrLuminance</definition>
        <argsstring></argsstring>
        <name>m_maxHdrLuminance</name>
        <qualifiedname>KWin::ColorDescription::m_maxHdrLuminance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="278" column="19" bodyfile="kwin/src/core/colorspace.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_color_description_1a65d479eab1fabdc10c26f07e954f8982" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9" kindref="member">YUVMatrixCoefficients</ref></type>
        <definition>YUVMatrixCoefficients KWin::ColorDescription::m_yuvCoefficients</definition>
        <argsstring></argsstring>
        <name>m_yuvCoefficients</name>
        <qualifiedname>KWin::ColorDescription::m_yuvCoefficients</qualifiedname>
        <initializer>= <ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9ac9c5c65fb4af9cf90eb99b3b84424189" kindref="member">YUVMatrixCoefficients::Identity</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="279" column="27" bodyfile="kwin/src/core/colorspace.h" bodystart="279" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ColorDescription::ColorDescription</definition>
        <argsstring>(const Colorimetry &amp;containerColorimetry, TransferFunction tf, double referenceLuminance, double minLuminance, std::optional&lt; double &gt; maxAverageLuminance, std::optional&lt; double &gt; maxHdrLuminance, YUVMatrixCoefficients yuvCoefficients=YUVMatrixCoefficients::Identity)</argsstring>
        <name>ColorDescription</name>
        <qualifiedname>KWin::ColorDescription::ColorDescription</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref> &amp;</type>
          <declname>containerColorimetry</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref></type>
          <declname>tf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>referenceLuminance</declname>
        </param>
        <param>
          <type>double</type>
          <declname>minLuminance</declname>
        </param>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>maxAverageLuminance</declname>
        </param>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>maxHdrLuminance</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9" kindref="member">YUVMatrixCoefficients</ref></type>
          <declname>yuvCoefficients</declname>
          <defval><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9ac9c5c65fb4af9cf90eb99b3b84424189" kindref="member">YUVMatrixCoefficients::Identity</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>containerColorimetry</parametername>
</parameternamelist>
<parameterdescription>
<para>the container colorimety of this description </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tf</parametername>
</parameternamelist>
<parameterdescription>
<para>the transfer function of this description </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referenceLuminance</parametername>
</parameternamelist>
<parameterdescription>
<para>the brightness of SDR content </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minLuminance</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum brightness of HDR content </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxAverageLuminance</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum brightness of HDR content, if the whole screen is white </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxHdrLuminance</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum brightness of HDR content, for a small part of the screen only </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sdrColorimetry</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="218" column="14" bodyfile="kwin/src/core/colorspace.cpp" bodystart="444" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a30ce1cf7484205f2293fa67ad03bbc45" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ColorDescription::ColorDescription</definition>
        <argsstring>(const Colorimetry &amp;containerColorimetry, TransferFunction tf, double referenceLuminance, double minLuminance, std::optional&lt; double &gt; maxAverageLuminance, std::optional&lt; double &gt; maxHdrLuminance, std::optional&lt; Colorimetry &gt; masteringColorimetry, const Colorimetry &amp;sdrColorimetry, YUVMatrixCoefficients yuvCoefficients=YUVMatrixCoefficients::Identity)</argsstring>
        <name>ColorDescription</name>
        <qualifiedname>KWin::ColorDescription::ColorDescription</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref> &amp;</type>
          <declname>containerColorimetry</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref></type>
          <declname>tf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>referenceLuminance</declname>
        </param>
        <param>
          <type>double</type>
          <declname>minLuminance</declname>
        </param>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>maxAverageLuminance</declname>
        </param>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>maxHdrLuminance</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref> &gt;</type>
          <declname>masteringColorimetry</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref> &amp;</type>
          <declname>sdrColorimetry</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9" kindref="member">YUVMatrixCoefficients</ref></type>
          <declname>yuvCoefficients</declname>
          <defval><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9ac9c5c65fb4af9cf90eb99b3b84424189" kindref="member">YUVMatrixCoefficients::Identity</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="219" column="14" bodyfile="kwin/src/core/colorspace.cpp" bodystart="449" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a402ad96bbb790b5d4979f2bc9d8be85a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ColorDescription::ColorDescription</definition>
        <argsstring>(const Colorimetry &amp;containerColorimetry, TransferFunction tf, YUVMatrixCoefficients yuvCoefficients=YUVMatrixCoefficients::Identity)</argsstring>
        <name>ColorDescription</name>
        <qualifiedname>KWin::ColorDescription::ColorDescription</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref> &amp;</type>
          <declname>containerColorimetry</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref></type>
          <declname>tf</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9" kindref="member">YUVMatrixCoefficients</ref></type>
          <declname>yuvCoefficients</declname>
          <defval><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9ac9c5c65fb4af9cf90eb99b3b84424189" kindref="member">YUVMatrixCoefficients::Identity</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="220" column="14" bodyfile="kwin/src/core/colorspace.cpp" bodystart="462" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref> &amp;</type>
        <definition>const Colorimetry &amp; KWin::ColorDescription::containerColorimetry</definition>
        <argsstring>() const</argsstring>
        <name>containerColorimetry</name>
        <qualifiedname>KWin::ColorDescription::containerColorimetry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The primaries and whitepoint that colors are encoded for. This is used to convert between different colorspaces. In most cases this will be the rec.709 primaries for SDR, or rec.2020 for HDR </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="226" column="23" bodyfile="kwin/src/core/colorspace.cpp" bodystart="467" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a573a56f3b15f6a6b2cc943cca9274ccd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::optional&lt; <ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref> &gt; &amp;</type>
        <definition>const std::optional&lt; Colorimetry &gt; &amp; KWin::ColorDescription::masteringColorimetry</definition>
        <argsstring>() const</argsstring>
        <name>masteringColorimetry</name>
        <qualifiedname>KWin::ColorDescription::masteringColorimetry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The mastering colorimetry contains all colors that the image actually (may) contain, which can be used to improve the conversion to a different color description. In most cases this will be smaller than the container colorimetry; for example a screen with an HDR mode but only rec.709 colors would have a container colorimetry of rec.2020 and a mastering colorimetry of rec.709. In some cases however it can be bigger than the container colorimetry, like with scRGB. It has the container colorimetry of sRGB, but a mastering colorimetry that can be bigger (like rec.2020 for example) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="232" column="25" bodyfile="kwin/src/core/colorspace.cpp" bodystart="472" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a9fdb814649b9a34ddd2feca0d77348ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref> &amp;</type>
        <definition>const Colorimetry &amp; KWin::ColorDescription::sdrColorimetry</definition>
        <argsstring>() const</argsstring>
        <name>sdrColorimetry</name>
        <qualifiedname>KWin::ColorDescription::sdrColorimetry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="233" column="23" bodyfile="kwin/src/core/colorspace.cpp" bodystart="477" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref></type>
        <definition>TransferFunction KWin::ColorDescription::transferFunction</definition>
        <argsstring>() const</argsstring>
        <name>transferFunction</name>
        <qualifiedname>KWin::ColorDescription::transferFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="234" column="22" bodyfile="kwin/src/core/colorspace.cpp" bodystart="482" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double KWin::ColorDescription::referenceLuminance</definition>
        <argsstring>() const</argsstring>
        <name>referenceLuminance</name>
        <qualifiedname>KWin::ColorDescription::referenceLuminance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="235" column="12" bodyfile="kwin/src/core/colorspace.cpp" bodystart="487" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double KWin::ColorDescription::minLuminance</definition>
        <argsstring>() const</argsstring>
        <name>minLuminance</name>
        <qualifiedname>KWin::ColorDescription::minLuminance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="236" column="12" bodyfile="kwin/src/core/colorspace.cpp" bodystart="492" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a4cecebafce982393cba7ff65dae1b804" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt; double &gt; KWin::ColorDescription::maxAverageLuminance</definition>
        <argsstring>() const</argsstring>
        <name>maxAverageLuminance</name>
        <qualifiedname>KWin::ColorDescription::maxAverageLuminance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="237" column="19" bodyfile="kwin/src/core/colorspace.cpp" bodystart="497" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1af5ee8e0ffe6d82b52bf658bab9f7c6de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt; double &gt; KWin::ColorDescription::maxHdrLuminance</definition>
        <argsstring>() const</argsstring>
        <name>maxHdrLuminance</name>
        <qualifiedname>KWin::ColorDescription::maxHdrLuminance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="238" column="19" bodyfile="kwin/src/core/colorspace.cpp" bodystart="502" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1ae9358d8ecc35ad20ade15618eadb64de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9" kindref="member">YUVMatrixCoefficients</ref></type>
        <definition>YUVMatrixCoefficients KWin::ColorDescription::yuvCoefficients</definition>
        <argsstring>() const</argsstring>
        <name>yuvCoefficients</name>
        <qualifiedname>KWin::ColorDescription::yuvCoefficients</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="239" column="27" bodyfile="kwin/src/core/colorspace.cpp" bodystart="507" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a78a578fd10414df649abfa18af4090ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QMatrix4x4</type>
        <definition>QMatrix4x4 KWin::ColorDescription::yuvMatrix</definition>
        <argsstring>() const</argsstring>
        <name>yuvMatrix</name>
        <qualifiedname>KWin::ColorDescription::yuvMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the yuv-&gt;rgb matrix for the yuv coefficients of this color description TODO move this to <ref refid="class_k_win_1_1_color_pipeline" kindref="compound">ColorPipeline</ref>, to deal with ICtCp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="245" column="16" bodyfile="kwin/src/core/colorspace.cpp" bodystart="533" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a2ebee005e586531188009e8e3d4f82d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::ColorDescription::operator==</definition>
        <argsstring>(const ColorDescription &amp;other) const =default</argsstring>
        <name>operator==</name>
        <qualifiedname>KWin::ColorDescription::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="247" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a79cccf87692be638eff62ca463629115" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref></type>
        <definition>ColorDescription KWin::ColorDescription::withTransferFunction</definition>
        <argsstring>(const TransferFunction &amp;func) const</argsstring>
        <name>withTransferFunction</name>
        <qualifiedname>KWin::ColorDescription::withTransferFunction</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref> &amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="249" column="22" bodyfile="kwin/src/core/colorspace.cpp" bodystart="594" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a27a399b8bd1563d9111bf743ffbfe025" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref></type>
        <definition>ColorDescription KWin::ColorDescription::withWhitepoint</definition>
        <argsstring>(xyY newWhitePoint) const</argsstring>
        <name>withWhitepoint</name>
        <qualifiedname>KWin::ColorDescription::withWhitepoint</qualifiedname>
        <param>
          <type><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref></type>
          <declname>newWhitePoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>replaces the current whitepoint with the new one this does not do whitepoint adaptation! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="254" column="22" bodyfile="kwin/src/core/colorspace.cpp" bodystart="599" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a35068973653bce76469836f1b1a7702b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref></type>
        <definition>ColorDescription KWin::ColorDescription::dimmed</definition>
        <argsstring>(double brightnessFactor) const</argsstring>
        <name>dimmed</name>
        <qualifiedname>KWin::ColorDescription::dimmed</qualifiedname>
        <param>
          <type>double</type>
          <declname>brightnessFactor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="255" column="22" bodyfile="kwin/src/core/colorspace.cpp" bodystart="613" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1aa3c18d418099e86722b4ccf4deae45f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref></type>
        <definition>ColorDescription KWin::ColorDescription::withReference</definition>
        <argsstring>(double referenceLuminance) const</argsstring>
        <name>withReference</name>
        <qualifiedname>KWin::ColorDescription::withReference</qualifiedname>
        <param>
          <type>double</type>
          <declname>referenceLuminance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="256" column="22" bodyfile="kwin/src/core/colorspace.cpp" bodystart="631" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a0d391002e4c471211a6c8f78e454cdc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref></type>
        <definition>ColorDescription KWin::ColorDescription::withYuvCoefficients</definition>
        <argsstring>(YUVMatrixCoefficients coefficient) const</argsstring>
        <name>withYuvCoefficients</name>
        <qualifiedname>KWin::ColorDescription::withYuvCoefficients</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9" kindref="member">YUVMatrixCoefficients</ref></type>
          <declname>coefficient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="257" column="22" bodyfile="kwin/src/core/colorspace.cpp" bodystart="645" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a6dc069adbe6c3958bf5d9759de70ae55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QMatrix4x4</type>
        <definition>QMatrix4x4 KWin::ColorDescription::toOther</definition>
        <argsstring>(const ColorDescription &amp;other, RenderingIntent intent) const</argsstring>
        <name>toOther</name>
        <qualifiedname>KWin::ColorDescription::toOther</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9" kindref="member">RenderingIntent</ref></type>
          <declname>intent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a matrix that transforms from linear RGB in this color description to linear RGB in the other one </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="262" column="16" bodyfile="kwin/src/core/colorspace.cpp" bodystart="548" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_color_description_1a36d46d9ae7a317676f52cacbc0412914" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVector3D</type>
        <definition>QVector3D KWin::ColorDescription::mapTo</definition>
        <argsstring>(QVector3D rgb, const ColorDescription &amp;other, RenderingIntent intent) const</argsstring>
        <name>mapTo</name>
        <qualifiedname>KWin::ColorDescription::mapTo</qualifiedname>
        <param>
          <type>QVector3D</type>
          <declname>rgb</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9" kindref="member">RenderingIntent</ref></type>
          <declname>intent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="263" column="15" bodyfile="kwin/src/core/colorspace.cpp" bodystart="587" bodyend="592"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Describes the meaning of encoded color values, with additional metadata for how to convert between different encodings Note that not all properties of this description are relevant in all contexts </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>KWin::ColorDescription</label>
        <link refid="class_k_win_1_1_color_description"/>
        <childnode refid="1" relation="usage">
          <edgelabel>sRGB</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/src/core/colorspace.h" line="206" column="1" bodyfile="kwin/src/core/colorspace.h" bodystart="207" bodyend="280"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>ColorDescription</name></member>
      <member refid="class_k_win_1_1_color_description_1a30ce1cf7484205f2293fa67ad03bbc45" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>ColorDescription</name></member>
      <member refid="class_k_win_1_1_color_description_1a402ad96bbb790b5d4979f2bc9d8be85a" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>ColorDescription</name></member>
      <member refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>containerColorimetry</name></member>
      <member refid="class_k_win_1_1_color_description_1a35068973653bce76469836f1b1a7702b" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>dimmed</name></member>
      <member refid="class_k_win_1_1_color_description_1a01a0774ba82c55624f6c66826164fb1c" prot="private" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>m_containerColorimetry</name></member>
      <member refid="class_k_win_1_1_color_description_1a3ab35f61e3869c82ba64311926adafb4" prot="private" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>m_masteringColorimetry</name></member>
      <member refid="class_k_win_1_1_color_description_1a98772b5bb4f4e0af2d2b906ca9919441" prot="private" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>m_maxAverageLuminance</name></member>
      <member refid="class_k_win_1_1_color_description_1a5da77fea01174649425b5a9b0afc1453" prot="private" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>m_maxHdrLuminance</name></member>
      <member refid="class_k_win_1_1_color_description_1ae716c24a3b532d69d1653c1a4c5bc958" prot="private" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>m_minLuminance</name></member>
      <member refid="class_k_win_1_1_color_description_1abe3450ad86334318a25410b8265c36d7" prot="private" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>m_referenceLuminance</name></member>
      <member refid="class_k_win_1_1_color_description_1a73ea72d9aba3e95bc3ce5ad8104ee826" prot="private" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>m_sdrColorimetry</name></member>
      <member refid="class_k_win_1_1_color_description_1af24ef1dc5f726cb12379bb4f33b54690" prot="private" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>m_transferFunction</name></member>
      <member refid="class_k_win_1_1_color_description_1a65d479eab1fabdc10c26f07e954f8982" prot="private" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>m_yuvCoefficients</name></member>
      <member refid="class_k_win_1_1_color_description_1a36d46d9ae7a317676f52cacbc0412914" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>mapTo</name></member>
      <member refid="class_k_win_1_1_color_description_1a573a56f3b15f6a6b2cc943cca9274ccd" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>masteringColorimetry</name></member>
      <member refid="class_k_win_1_1_color_description_1a4cecebafce982393cba7ff65dae1b804" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>maxAverageLuminance</name></member>
      <member refid="class_k_win_1_1_color_description_1af5ee8e0ffe6d82b52bf658bab9f7c6de" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>maxHdrLuminance</name></member>
      <member refid="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>minLuminance</name></member>
      <member refid="class_k_win_1_1_color_description_1a2ebee005e586531188009e8e3d4f82d6" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>operator==</name></member>
      <member refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>referenceLuminance</name></member>
      <member refid="class_k_win_1_1_color_description_1a9fdb814649b9a34ddd2feca0d77348ef" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>sdrColorimetry</name></member>
      <member refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>sRGB</name></member>
      <member refid="class_k_win_1_1_color_description_1a6dc069adbe6c3958bf5d9759de70ae55" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>toOther</name></member>
      <member refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>transferFunction</name></member>
      <member refid="class_k_win_1_1_color_description_1aa3c18d418099e86722b4ccf4deae45f1" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>withReference</name></member>
      <member refid="class_k_win_1_1_color_description_1a79cccf87692be638eff62ca463629115" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>withTransferFunction</name></member>
      <member refid="class_k_win_1_1_color_description_1a27a399b8bd1563d9111bf743ffbfe025" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>withWhitepoint</name></member>
      <member refid="class_k_win_1_1_color_description_1a0d391002e4c471211a6c8f78e454cdc5" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>withYuvCoefficients</name></member>
      <member refid="class_k_win_1_1_color_description_1ae9358d8ecc35ad20ade15618eadb64de" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>yuvCoefficients</name></member>
      <member refid="class_k_win_1_1_color_description_1a78a578fd10414df649abfa18af4090ee" prot="public" virt="non-virtual"><scope>KWin::ColorDescription</scope><name>yuvMatrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
