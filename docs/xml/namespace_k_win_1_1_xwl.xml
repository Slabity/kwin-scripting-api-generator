<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespace_k_win_1_1_xwl" kind="namespace" language="C++">
    <compoundname>KWin::Xwl</compoundname>
    <innerclass refid="class_k_win_1_1_xwl_1_1_clipboard" prot="public">KWin::Xwl::Clipboard</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_data_bridge" prot="public">KWin::Xwl::DataBridge</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_data_receiver" prot="public">KWin::Xwl::DataReceiver</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_dnd" prot="public">KWin::Xwl::Dnd</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_drag" prot="public">KWin::Xwl::Drag</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_primary" prot="public">KWin::Xwl::Primary</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_selection" prot="public">KWin::Xwl::Selection</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_selection_source" prot="public">KWin::Xwl::SelectionSource</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_transfer" prot="public">KWin::Xwl::Transfer</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_transfer_wlto_x" prot="public">KWin::Xwl::TransferWltoX</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_transfer_xto_wl" prot="public">KWin::Xwl::TransferXtoWl</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_wl_source" prot="public">KWin::Xwl::WlSource</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_wl_to_x_drag" prot="public">KWin::Xwl::WlToXDrag</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_wl_visit" prot="public">KWin::Xwl::WlVisit</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_x11_source" prot="public">KWin::Xwl::X11Source</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_xrandr_event_filter" prot="public">KWin::Xwl::XrandrEventFilter</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag" prot="public">KWin::Xwl::XToWlDrag</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_xvisit" prot="public">KWin::Xwl::Xvisit</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_xwayland" prot="public">KWin::Xwl::Xwayland</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_xwayland_input_filter" prot="public">KWin::Xwl::XwaylandInputFilter</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_xwayland_launcher" prot="public">KWin::Xwl::XwaylandLauncher</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_xwl_data_source" prot="public">KWin::Xwl::XwlDataSource</innerclass>
    <innerclass refid="class_k_win_1_1_xwl_1_1_xwl_drop_handler" prot="public">KWin::Xwl::XwlDropHandler</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_k_win_1_1_xwl_1a4245fb9cb1310a1304868c4d99186352" prot="public" static="no" strong="yes">
        <type></type>
        <name>DragEventReply</name>
        <qualifiedname>KWin::Xwl::DragEventReply</qualifiedname>
        <enumvalue id="namespace_k_win_1_1_xwl_1a4245fb9cb1310a1304868c4d99186352afd038fc7f319e48f3115d92bf5bdbef9" prot="public">
          <name>Ignore</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_k_win_1_1_xwl_1a4245fb9cb1310a1304868c4d99186352aa1df5b634fdadddf5a2170304c556b90" prot="public">
          <name>Take</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_k_win_1_1_xwl_1a4245fb9cb1310a1304868c4d99186352abd9c6c9ca372721e187caeb1654b4209" prot="public">
          <name>Wayland</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/xwayland_interface.h" line="24" column="1" bodyfile="kwin/src/xwayland/xwayland_interface.h" bodystart="24" bodyend="31"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespace_k_win_1_1_xwl_1a7097e16f2e493b194e40efd962813d0c" prot="public" static="no">
        <type><ref refid="class_k_win_1_1_data_device_manager_interface_1a8aae415a2e33ca11c48d18e128f627b4" kindref="member">DataDeviceManagerInterface::DnDAction</ref></type>
        <definition>typedef KWin::DataDeviceManagerInterface::DnDAction KWin::Xwl::DnDAction =  DataDeviceManagerInterface::DnDAction</definition>
        <argsstring></argsstring>
        <name>DnDAction</name>
        <qualifiedname>KWin::Xwl::DnDAction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/dnd.cpp" line="180" column="1" bodyfile="kwin/src/xwayland/dnd.cpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_k_win_1_1_xwl_1a2bec88c854ebd82809aa9d1c04664276" prot="public" static="no">
        <type>DataDeviceManagerInterface::DnDActions</type>
        <definition>typedef KWin::DataDeviceManagerInterface::DnDActions KWin::Xwl::DnDActions =  DataDeviceManagerInterface::DnDActions</definition>
        <argsstring></argsstring>
        <name>DnDActions</name>
        <qualifiedname>KWin::Xwl::DnDActions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/dnd.cpp" line="181" column="1" bodyfile="kwin/src/xwayland/dnd.cpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_k_win_1_1_xwl_1a2bbd1c789124831a7a0fc22c1b831a30" prot="public" static="no">
        <type>QPair&lt; QString, xcb_atom_t &gt;</type>
        <definition>typedef QPair&lt; QString, xcb_atom_t &gt; KWin::Xwl::Mime =  QPair&lt;QString, xcb_atom_t&gt;</definition>
        <argsstring></argsstring>
        <name>Mime</name>
        <qualifiedname>KWin::Xwl::Mime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.cpp" line="204" column="1" bodyfile="kwin/src/xwayland/drag_x.cpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_k_win_1_1_xwl_1a7c4df38d14fd473ab75d05f2357258ee" prot="public" static="no">
        <type>QList&lt; QPair&lt; QString, xcb_atom_t &gt; &gt;</type>
        <definition>using KWin::Xwl::Mimes =  QList&lt;QPair&lt;QString, xcb_atom_t&gt;&gt;</definition>
        <argsstring></argsstring>
        <name>Mimes</name>
        <qualifiedname>KWin::Xwl::Mimes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="31" column="1" bodyfile="kwin/src/xwayland/drag_x.h" bodystart="31" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_k_win_1_1_xwl_1a55371ef029d1d9fc24408730c2ccbb26" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t KWin::Xwl::s_version</definition>
        <argsstring></argsstring>
        <name>s_version</name>
        <qualifiedname>KWin::Xwl::s_version</qualifiedname>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/dnd.cpp" line="37" column="23" bodyfile="kwin/src/xwayland/dnd.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_k_win_1_1_xwl_1ae95db72f1cde7ca2f2eaf2fe20bb626d" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t KWin::Xwl::s_incrChunkSize</definition>
        <argsstring></argsstring>
        <name>s_incrChunkSize</name>
        <qualifiedname>KWin::Xwl::s_incrChunkSize</qualifiedname>
        <initializer>= 63 * 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/transfer.cpp" line="36" column="23" bodyfile="kwin/src/xwayland/transfer.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_k_win_1_1_xwl_1a908a3580a13dcf09af547101d0dd2639" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>static QStringList KWin::Xwl::atomToMimeTypes</definition>
        <argsstring>(xcb_atom_t atom)</argsstring>
        <name>atomToMimeTypes</name>
        <qualifiedname>KWin::Xwl::atomToMimeTypes</qualifiedname>
        <param>
          <type>xcb_atom_t</type>
          <declname>atom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.cpp" line="39" column="20" bodyfile="kwin/src/xwayland/drag_x.cpp" bodystart="39" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_xwl_1a2faff954db32d641a6f2de2237a4c92b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool KWin::Xwl::hasMimeName</definition>
        <argsstring>(const Mimes &amp;mimes, const QString &amp;name)</argsstring>
        <name>hasMimeName</name>
        <qualifiedname>KWin::Xwl::hasMimeName</qualifiedname>
        <param>
          <type>const <ref refid="namespace_k_win_1_1_xwl_1a7c4df38d14fd473ab75d05f2357258ee" kindref="member">Mimes</ref> &amp;</type>
          <declname>mimes</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.cpp" line="321" column="13" bodyfile="kwin/src/xwayland/drag_x.cpp" bodystart="321" bodyend="327"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="kwin/src/main_wayland.h" line="16" column="1"/>
  </compounddef>
</doxygen>
