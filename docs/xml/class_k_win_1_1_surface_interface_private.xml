<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_surface_interface_private" kind="class" language="C++" prot="public">
    <compoundname>KWin::SurfaceInterfacePrivate</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QtWaylandServer::wl_surface</basecompoundref>
    <includes refid="surface__p_8h" local="no">surface_p.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a6be8320daa49597be1cd9a6ba54ff7a9" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_compositor_interface" kindref="compound">CompositorInterface</ref> *</type>
        <definition>CompositorInterface* KWin::SurfaceInterfacePrivate::compositor</definition>
        <argsstring></argsstring>
        <name>compositor</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::compositor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="147" column="25" bodyfile="kwin/src/wayland/surface_p.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
        <definition>SurfaceInterface* KWin::SurfaceInterfacePrivate::q</definition>
        <argsstring></argsstring>
        <name>q</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::q</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="148" column="22" bodyfile="kwin/src/wayland/surface_p.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a8ad0a837668b607e608188a5b3431842" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_surface_role" kindref="compound">SurfaceRole</ref> *</type>
        <definition>SurfaceRole* KWin::SurfaceInterfacePrivate::role</definition>
        <argsstring></argsstring>
        <name>role</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::role</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="149" column="17" bodyfile="kwin/src/wayland/surface_p.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="struct_k_win_1_1_surface_state" kindref="compound">SurfaceState</ref> &gt;</type>
        <definition>std::unique_ptr&lt;SurfaceState&gt; KWin::SurfaceInterfacePrivate::current</definition>
        <argsstring></argsstring>
        <name>current</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::current</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="150" column="21" bodyfile="kwin/src/wayland/surface_p.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="struct_k_win_1_1_surface_state" kindref="compound">SurfaceState</ref> &gt;</type>
        <definition>std::unique_ptr&lt;SurfaceState&gt; KWin::SurfaceInterfacePrivate::pending</definition>
        <argsstring></argsstring>
        <name>pending</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::pending</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="151" column="21" bodyfile="kwin/src/wayland/surface_p.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1ab5a7ee1c57517c8ad3beccbd81edb581" prot="public" static="no" mutable="no">
        <type>QRectF</type>
        <definition>QRectF KWin::SurfaceInterfacePrivate::bufferSourceBox</definition>
        <argsstring></argsstring>
        <name>bufferSourceBox</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::bufferSourceBox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="152" column="12" bodyfile="kwin/src/wayland/surface_p.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" prot="public" static="no" mutable="no">
        <type>QSizeF</type>
        <definition>QSizeF KWin::SurfaceInterfacePrivate::surfaceSize</definition>
        <argsstring></argsstring>
        <name>surfaceSize</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::surfaceSize</qualifiedname>
        <initializer>= QSizeF(0, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="153" column="12" bodyfile="kwin/src/wayland/surface_p.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a3bc29744852f970becf011f59bbc919b" prot="public" static="no" mutable="no">
        <type>QRegion</type>
        <definition>QRegion KWin::SurfaceInterfacePrivate::inputRegion</definition>
        <argsstring></argsstring>
        <name>inputRegion</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::inputRegion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="155" column="13" bodyfile="kwin/src/wayland/surface_p.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a9b0f6f27785e70e26b1dde83a9582fcc" prot="public" static="no" mutable="no">
        <type>QRegion</type>
        <definition>QRegion KWin::SurfaceInterfacePrivate::opaqueRegion</definition>
        <argsstring></argsstring>
        <name>opaqueRegion</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::opaqueRegion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="156" column="13" bodyfile="kwin/src/wayland/surface_p.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a979f390fd254c3b1bbe6f77c4e3f442a" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_graphics_buffer_ref" kindref="compound">GraphicsBufferRef</ref></type>
        <definition>GraphicsBufferRef KWin::SurfaceInterfacePrivate::bufferRef</definition>
        <argsstring></argsstring>
        <name>bufferRef</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::bufferRef</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="157" column="23" bodyfile="kwin/src/wayland/surface_p.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a7ac039f6992d06145f99148542d7aaa0" prot="public" static="no" mutable="no">
        <type>QRegion</type>
        <definition>QRegion KWin::SurfaceInterfacePrivate::bufferDamage</definition>
        <argsstring></argsstring>
        <name>bufferDamage</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::bufferDamage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="158" column="13" bodyfile="kwin/src/wayland/surface_p.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a2dd76eeb6414dbec2d05105f9ad7d856" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::SurfaceInterfacePrivate::mapped</definition>
        <argsstring></argsstring>
        <name>mapped</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::mapped</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="159" column="10" bodyfile="kwin/src/wayland/surface_p.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a693e0f4016c0d2337d1542dbbfd51b47" prot="public" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::SurfaceInterfacePrivate::scaleOverride</definition>
        <argsstring></argsstring>
        <name>scaleOverride</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::scaleOverride</qualifiedname>
        <initializer>= 1.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="160" column="11" bodyfile="kwin/src/wayland/surface_p.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1ad3ba9ec59f116f005f07e358f13a14d8" prot="public" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::SurfaceInterfacePrivate::pendingScaleOverride</definition>
        <argsstring></argsstring>
        <name>pendingScaleOverride</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::pendingScaleOverride</qualifiedname>
        <initializer>= 1.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="161" column="11" bodyfile="kwin/src/wayland/surface_p.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1adc738604031e36fd242b8d6099653d20" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_transaction" kindref="compound">Transaction</ref> *</type>
        <definition>Transaction* KWin::SurfaceInterfacePrivate::firstTransaction</definition>
        <argsstring></argsstring>
        <name>firstTransaction</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::firstTransaction</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="163" column="17" bodyfile="kwin/src/wayland/surface_p.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1aaacc5862723abdcb7bb6b132c8884f40" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_transaction" kindref="compound">Transaction</ref> *</type>
        <definition>Transaction* KWin::SurfaceInterfacePrivate::lastTransaction</definition>
        <argsstring></argsstring>
        <name>lastTransaction</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::lastTransaction</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="164" column="17" bodyfile="kwin/src/wayland/surface_p.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a1b3c3318484cd9df2b45c58567ca0f8e" prot="public" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_output_interface" kindref="compound">OutputInterface</ref> * &gt;</type>
        <definition>QList&lt;OutputInterface *&gt; KWin::SurfaceInterfacePrivate::outputs</definition>
        <argsstring></argsstring>
        <name>outputs</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::outputs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="166" column="11" bodyfile="kwin/src/wayland/surface_p.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1ab24e4533a32a6e859a92f0336aa23e28" prot="public" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_k_win_1_1_output_interface" kindref="compound">OutputInterface</ref> &gt;</type>
        <definition>QPointer&lt;OutputInterface&gt; KWin::SurfaceInterfacePrivate::primaryOutput</definition>
        <argsstring></argsstring>
        <name>primaryOutput</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::primaryOutput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="167" column="14" bodyfile="kwin/src/wayland/surface_p.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a5a59e0edbf210b6dc5b47129828466ff" prot="public" static="no" mutable="no">
        <type>std::optional&lt; qreal &gt;</type>
        <definition>std::optional&lt;qreal&gt; KWin::SurfaceInterfacePrivate::preferredBufferScale</definition>
        <argsstring></argsstring>
        <name>preferredBufferScale</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::preferredBufferScale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="168" column="19" bodyfile="kwin/src/wayland/surface_p.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1aec81c2bf09ac8d3c0c292e0661568a9e" prot="public" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref> &gt;</type>
        <definition>std::optional&lt;OutputTransform&gt; KWin::SurfaceInterfacePrivate::preferredBufferTransform</definition>
        <argsstring></argsstring>
        <name>preferredBufferTransform</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::preferredBufferTransform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="169" column="19" bodyfile="kwin/src/wayland/surface_p.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1afcd49f43dced8e03f6e6fad96d4d80e8" prot="public" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref> &gt;</type>
        <definition>std::optional&lt;ColorDescription&gt; KWin::SurfaceInterfacePrivate::preferredColorDescription</definition>
        <argsstring></argsstring>
        <name>preferredColorDescription</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::preferredColorDescription</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="170" column="19" bodyfile="kwin/src/wayland/surface_p.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a9f3c9805e77842f304059c22ffd8fdb5" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_locked_pointer_v1_interface" kindref="compound">LockedPointerV1Interface</ref> *</type>
        <definition>LockedPointerV1Interface* KWin::SurfaceInterfacePrivate::lockedPointer</definition>
        <argsstring></argsstring>
        <name>lockedPointer</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::lockedPointer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="172" column="30" bodyfile="kwin/src/wayland/surface_p.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a1ae056e325be763714db0556876b4ade" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_confined_pointer_v1_interface" kindref="compound">ConfinedPointerV1Interface</ref> *</type>
        <definition>ConfinedPointerV1Interface* KWin::SurfaceInterfacePrivate::confinedPointer</definition>
        <argsstring></argsstring>
        <name>confinedPointer</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::confinedPointer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="173" column="32" bodyfile="kwin/src/wayland/surface_p.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1acb40edeb9178e73e03bcdc42ced98b66" prot="public" static="no" mutable="no">
        <type>QHash&lt; <ref refid="class_k_win_1_1_output_interface" kindref="compound">OutputInterface</ref> *, QMetaObject::Connection &gt;</type>
        <definition>QHash&lt;OutputInterface *, QMetaObject::Connection&gt; KWin::SurfaceInterfacePrivate::outputDestroyedConnections</definition>
        <argsstring></argsstring>
        <name>outputDestroyedConnections</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::outputDestroyedConnections</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="174" column="11" bodyfile="kwin/src/wayland/surface_p.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a80ee413c268e0b82d7b2b72df5d4985f" prot="public" static="no" mutable="no">
        <type>QHash&lt; <ref refid="class_k_win_1_1_output_interface" kindref="compound">OutputInterface</ref> *, QMetaObject::Connection &gt;</type>
        <definition>QHash&lt;OutputInterface *, QMetaObject::Connection&gt; KWin::SurfaceInterfacePrivate::outputBoundConnections</definition>
        <argsstring></argsstring>
        <name>outputBoundConnections</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::outputBoundConnections</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="175" column="11" bodyfile="kwin/src/wayland/surface_p.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1aac53996351af94c8c36effddfd75ce3f" prot="public" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_idle_inhibitor_v1_interface" kindref="compound">IdleInhibitorV1Interface</ref> * &gt;</type>
        <definition>QList&lt;IdleInhibitorV1Interface *&gt; KWin::SurfaceInterfacePrivate::idleInhibitors</definition>
        <argsstring></argsstring>
        <name>idleInhibitors</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::idleInhibitors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="177" column="11" bodyfile="kwin/src/wayland/surface_p.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1afe7c97a25ee9f6c28799b220b415a435" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_viewport_interface" kindref="compound">ViewportInterface</ref> *</type>
        <definition>ViewportInterface* KWin::SurfaceInterfacePrivate::viewportExtension</definition>
        <argsstring></argsstring>
        <name>viewportExtension</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::viewportExtension</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="178" column="23" bodyfile="kwin/src/wayland/surface_p.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a3824e57c0e28356db0271576a2a27a07" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback" kindref="compound">LinuxDmaBufV1Feedback</ref> &gt;</type>
        <definition>std::unique_ptr&lt;LinuxDmaBufV1Feedback&gt; KWin::SurfaceInterfacePrivate::dmabufFeedbackV1</definition>
        <argsstring></argsstring>
        <name>dmabufFeedbackV1</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::dmabufFeedbackV1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="179" column="21" bodyfile="kwin/src/wayland/surface_p.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1ae93561d35d671996bf78529fb56b0d20" prot="public" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_k_win_1_1_content_type_v1_interface" kindref="compound">ContentTypeV1Interface</ref> &gt;</type>
        <definition>QPointer&lt;ContentTypeV1Interface&gt; KWin::SurfaceInterfacePrivate::contentTypeInterface</definition>
        <argsstring></argsstring>
        <name>contentTypeInterface</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::contentTypeInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="180" column="14" bodyfile="kwin/src/wayland/surface_p.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a44fcad6db90fe2572866ebaa1c0d5993" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_fractional_scale_v1_interface" kindref="compound">FractionalScaleV1Interface</ref> *</type>
        <definition>FractionalScaleV1Interface* KWin::SurfaceInterfacePrivate::fractionalScaleExtension</definition>
        <argsstring></argsstring>
        <name>fractionalScaleExtension</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::fractionalScaleExtension</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="181" column="32" bodyfile="kwin/src/wayland/surface_p.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a0b79fba46fe6f97f4f8179a97046cc75" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref> *</type>
        <definition>ClientConnection* KWin::SurfaceInterfacePrivate::client</definition>
        <argsstring></argsstring>
        <name>client</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::client</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="182" column="22" bodyfile="kwin/src/wayland/surface_p.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a9b4ad1186dcd048094505353b206bd37" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_tearing_control_v1_interface" kindref="compound">TearingControlV1Interface</ref> *</type>
        <definition>TearingControlV1Interface* KWin::SurfaceInterfacePrivate::tearing</definition>
        <argsstring></argsstring>
        <name>tearing</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::tearing</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="183" column="31" bodyfile="kwin/src/wayland/surface_p.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a4efcc95339fe517eac1d710694618a08" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_frog_color_management_surface_v1" kindref="compound">FrogColorManagementSurfaceV1</ref> *</type>
        <definition>FrogColorManagementSurfaceV1* KWin::SurfaceInterfacePrivate::frogColorManagement</definition>
        <argsstring></argsstring>
        <name>frogColorManagement</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::frogColorManagement</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="184" column="34" bodyfile="kwin/src/wayland/surface_p.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a5fc7c9c6beca01e4bf77665aaae9ef08" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_color_surface_v1" kindref="compound">ColorSurfaceV1</ref> *</type>
        <definition>ColorSurfaceV1* KWin::SurfaceInterfacePrivate::colorSurface</definition>
        <argsstring></argsstring>
        <name>colorSurface</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::colorSurface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="185" column="20" bodyfile="kwin/src/wayland/surface_p.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a7819c3021890ab36328cb2563f35a75f" prot="public" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_color_feedback_surface_v1" kindref="compound">ColorFeedbackSurfaceV1</ref> * &gt;</type>
        <definition>QList&lt;ColorFeedbackSurfaceV1 *&gt; KWin::SurfaceInterfacePrivate::colorFeedbackSurfaces</definition>
        <argsstring></argsstring>
        <name>colorFeedbackSurfaces</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::colorFeedbackSurfaces</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="186" column="11" bodyfile="kwin/src/wayland/surface_p.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1ac76e9a01ba0719c9a4776208d07d1a04" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_linux_drm_sync_obj_surface_v1" kindref="compound">LinuxDrmSyncObjSurfaceV1</ref> *</type>
        <definition>LinuxDrmSyncObjSurfaceV1* KWin::SurfaceInterfacePrivate::syncObjV1</definition>
        <argsstring></argsstring>
        <name>syncObjV1</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::syncObjV1</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="187" column="30" bodyfile="kwin/src/wayland/surface_p.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a89f2c2ae87f00a7f6024c1d89922d8cb" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_alpha_modifier_surface_v1" kindref="compound">AlphaModifierSurfaceV1</ref> *</type>
        <definition>AlphaModifierSurfaceV1* KWin::SurfaceInterfacePrivate::alphaModifier</definition>
        <argsstring></argsstring>
        <name>alphaModifier</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::alphaModifier</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="188" column="28" bodyfile="kwin/src/wayland/surface_p.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1aca87da0335ede86307dc528a98122ee7" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref> *</type>
        <definition>SubSurfaceInterface* KWin::SurfaceInterfacePrivate::handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::handle</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="192" column="29" bodyfile="kwin/src/wayland/surface_p.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_transaction" kindref="compound">Transaction</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Transaction&gt; KWin::SurfaceInterfacePrivate::transaction</definition>
        <argsstring></argsstring>
        <name>transaction</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::transaction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="193" column="25" bodyfile="kwin/src/wayland/surface_p.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" prot="public" static="no" mutable="no">
        <type>struct <ref refid="class_k_win_1_1_surface_interface_private" kindref="compound">KWin::SurfaceInterfacePrivate</ref></type>
        <definition>struct KWin::SurfaceInterfacePrivate KWin::SurfaceInterfacePrivate::subsurface</definition>
        <argsstring></argsstring>
        <name>subsurface</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::subsurface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="194" column="16"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a4fc329c580ebe3aa839c4a7890fa6ef7" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="class_k_win_1_1_presentation_time_feedback" kindref="compound">PresentationTimeFeedback</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;PresentationTimeFeedback&gt; &gt; KWin::SurfaceInterfacePrivate::pendingPresentationFeedbacks</definition>
        <argsstring></argsstring>
        <name>pendingPresentationFeedbacks</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::pendingPresentationFeedbacks</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="196" column="17" bodyfile="kwin/src/wayland/surface_p.h" bodystart="196" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1a5698b7f97913c1b25d19925f7fa9d6c5" prot="private" static="no" mutable="no">
        <type>QMetaObject::Connection</type>
        <definition>QMetaObject::Connection KWin::SurfaceInterfacePrivate::constrainsOneShotConnection</definition>
        <argsstring></argsstring>
        <name>constrainsOneShotConnection</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::constrainsOneShotConnection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="213" column="29" bodyfile="kwin/src/wayland/surface_p.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_interface_private_1afda6586156e78db0e004c21b7166408f" prot="private" static="no" mutable="no">
        <type>QMetaObject::Connection</type>
        <definition>QMetaObject::Connection KWin::SurfaceInterfacePrivate::constrainsUnboundConnection</definition>
        <argsstring></argsstring>
        <name>constrainsUnboundConnection</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::constrainsUnboundConnection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="214" column="29" bodyfile="kwin/src/wayland/surface_p.h" bodystart="214" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a78c6d25b9d679356cef73bb14ca36138" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_surface_interface_private" kindref="compound">SurfaceInterfacePrivate</ref> *</type>
        <definition>static SurfaceInterfacePrivate * KWin::SurfaceInterfacePrivate::get</definition>
        <argsstring>(SurfaceInterface *surface)</argsstring>
        <name>get</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::get</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="113" column="36" bodyfile="kwin/src/wayland/surface_p.h" bodystart="113" bodyend="116"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1ab2122db84a98ba24dad882edb2c65e7e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::SurfaceInterfacePrivate::SurfaceInterfacePrivate</definition>
        <argsstring>(SurfaceInterface *q)</argsstring>
        <name>SurfaceInterfacePrivate</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::SurfaceInterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="118" column="14" bodyfile="kwin/src/wayland/surface.cpp" bodystart="57" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1ab31cacafc2ccbd1f0dce2ce2ce6c6ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::addChild</definition>
        <argsstring>(SubSurfaceInterface *subsurface)</argsstring>
        <name>addChild</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::addChild</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref> *</type>
          <declname>subsurface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="120" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="64" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a60725cf75d1979aa830bb699a33565ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::removeChild</definition>
        <argsstring>(SubSurfaceInterface *subsurface)</argsstring>
        <name>removeChild</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::removeChild</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref> *</type>
          <declname>subsurface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="121" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="97" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a1a4d62dcdf8b905f51f911da283e26ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SurfaceInterfacePrivate::raiseChild</definition>
        <argsstring>(SubSurfaceInterface *subsurface, SurfaceInterface *anchor)</argsstring>
        <name>raiseChild</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::raiseChild</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref> *</type>
          <declname>subsurface</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>anchor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="122" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="124" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1aea9828f4e71f7d721e74bba655a059db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SurfaceInterfacePrivate::lowerChild</definition>
        <argsstring>(SubSurfaceInterface *subsurface, SurfaceInterface *anchor)</argsstring>
        <name>lowerChild</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::lowerChild</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref> *</type>
          <declname>subsurface</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>anchor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="123" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="151" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a5eb6ac150c2e5a326ef6fc77fe77f92a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::setShadow</definition>
        <argsstring>(const QPointer&lt; ShadowInterface &gt; &amp;shadow)</argsstring>
        <name>setShadow</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::setShadow</qualifiedname>
        <param>
          <type>const QPointer&lt; <ref refid="class_k_win_1_1_shadow_interface" kindref="compound">ShadowInterface</ref> &gt; &amp;</type>
          <declname>shadow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="124" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="178" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a183bcfb0f9e3f37f86fbba6150dd74b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::setBlur</definition>
        <argsstring>(const QPointer&lt; BlurInterface &gt; &amp;blur)</argsstring>
        <name>setBlur</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::setBlur</qualifiedname>
        <param>
          <type>const QPointer&lt; <ref refid="class_k_win_1_1_blur_interface" kindref="compound">BlurInterface</ref> &gt; &amp;</type>
          <declname>blur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="125" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="184" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a12904473202b5687e104a603acea4266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::setContrast</definition>
        <argsstring>(const QPointer&lt; ContrastInterface &gt; &amp;contrast)</argsstring>
        <name>setContrast</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::setContrast</qualifiedname>
        <param>
          <type>const QPointer&lt; <ref refid="class_k_win_1_1_contrast_interface" kindref="compound">ContrastInterface</ref> &gt; &amp;</type>
          <declname>contrast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="126" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1aefa0413dc0a4022f1e0d397c7fe0551e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::setSlide</definition>
        <argsstring>(const QPointer&lt; SlideInterface &gt; &amp;slide)</argsstring>
        <name>setSlide</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::setSlide</qualifiedname>
        <param>
          <type>const QPointer&lt; <ref refid="class_k_win_1_1_slide_interface" kindref="compound">SlideInterface</ref> &gt; &amp;</type>
          <declname>slide</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="127" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="190" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a8e31e2e2a2e6e86ba0b921b5ebb9d452" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::installPointerConstraint</definition>
        <argsstring>(LockedPointerV1Interface *lock)</argsstring>
        <name>installPointerConstraint</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::installPointerConstraint</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_locked_pointer_v1_interface" kindref="compound">LockedPointerV1Interface</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="128" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="202" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a610f0b5b41fe1f54b22e4485300de441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::installPointerConstraint</definition>
        <argsstring>(ConfinedPointerV1Interface *confinement)</argsstring>
        <name>installPointerConstraint</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::installPointerConstraint</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_confined_pointer_v1_interface" kindref="compound">ConfinedPointerV1Interface</ref> *</type>
          <declname>confinement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="129" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="230" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a138e7a1590fa6ec5484d2e246538fa61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::installIdleInhibitor</definition>
        <argsstring>(IdleInhibitorV1Interface *inhibitor)</argsstring>
        <name>installIdleInhibitor</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::installIdleInhibitor</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_idle_inhibitor_v1_interface" kindref="compound">IdleInhibitorV1Interface</ref> *</type>
          <declname>inhibitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="130" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="258" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a15e0792173d2b508b10507848733c3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::removeIdleInhibitor</definition>
        <argsstring>(IdleInhibitorV1Interface *inhibitor)</argsstring>
        <name>removeIdleInhibitor</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::removeIdleInhibitor</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_idle_inhibitor_v1_interface" kindref="compound">IdleInhibitorV1Interface</ref> *</type>
          <declname>inhibitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="131" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="266" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a009850c82ed547073c611967f33ad0cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::SurfaceInterfacePrivate::computeBufferSourceBox</definition>
        <argsstring>() const</argsstring>
        <name>computeBufferSourceBox</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::computeBufferSourceBox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="133" column="12" bodyfile="kwin/src/wayland/surface.cpp" bodystart="527" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1ae5bceedd6d2937b84c4b223faf279a84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::applyState</definition>
        <argsstring>(SurfaceState *next)</argsstring>
        <name>applyState</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::applyState</qualifiedname>
        <param>
          <type><ref refid="struct_k_win_1_1_surface_state" kindref="compound">SurfaceState</ref> *</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="134" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="646" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a679a9393d795ccc2c709990163ea165e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SurfaceInterfacePrivate::computeEffectiveMapped</definition>
        <argsstring>() const</argsstring>
        <name>computeEffectiveMapped</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::computeEffectiveMapped</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="136" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="781" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a70d0ec630f07e5ac57b5c6e499ce74c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::updateEffectiveMapped</definition>
        <argsstring>()</argsstring>
        <name>updateEffectiveMapped</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::updateEffectiveMapped</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="137" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="792" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a2d40367c137b5049faf798d255b40fd8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SurfaceInterfacePrivate::contains</definition>
        <argsstring>(const QPointF &amp;position) const</argsstring>
        <name>contains</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::contains</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if this surface (not including subsurfaces) contains a given point <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>in surface-local co-ordiantes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="143" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="817" bodyend="824"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a901b88ce658c89262fd7cbad78d300b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SurfaceInterfacePrivate::inputContains</definition>
        <argsstring>(const QPointF &amp;position) const</argsstring>
        <name>inputContains</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::inputContains</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="144" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="826" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a84cad8c8d3bfb60758380e2b4b9f9c00" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRegion</type>
        <definition>QRegion KWin::SurfaceInterfacePrivate::mapToBuffer</definition>
        <argsstring>(const QRegion &amp;region) const</argsstring>
        <name>mapToBuffer</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::mapToBuffer</qualifiedname>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="145" column="13" bodyfile="kwin/src/wayland/surface.cpp" bodystart="831" bodyend="846"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a6c427231e71c5bc17a0e976c251f2fce" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::surface_destroy_resource</definition>
        <argsstring>(Resource *resource) override</argsstring>
        <name>surface_destroy_resource</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::surface_destroy_resource</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="199" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="274" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a3372d7a04035de70a3a755c8db9cd984" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::surface_destroy</definition>
        <argsstring>(Resource *resource) override</argsstring>
        <name>surface_destroy</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::surface_destroy</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="200" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a98fc07e7fd3540d8a4d4640f7a2523e3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::surface_attach</definition>
        <argsstring>(Resource *resource, struct ::wl_resource *buffer, int32_t x, int32_t y) override</argsstring>
        <name>surface_attach</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::surface_attach</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct ::wl_resource *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="201" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="285" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a6b446d66db4c0e3a737e09fa086d98fd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::surface_damage</definition>
        <argsstring>(Resource *resource, int32_t x, int32_t y, int32_t width, int32_t height) override</argsstring>
        <name>surface_damage</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::surface_damage</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="202" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a560d8e3efe821fda46f18de722cf0a0f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::surface_frame</definition>
        <argsstring>(Resource *resource, uint32_t callback) override</argsstring>
        <name>surface_frame</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::surface_frame</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="203" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="312" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1ad1d94179ce4b88e104afe3b347d6527b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::surface_set_opaque_region</definition>
        <argsstring>(Resource *resource, struct ::wl_resource *region) override</argsstring>
        <name>surface_set_opaque_region</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::surface_set_opaque_region</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct ::wl_resource *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="204" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="330" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a16c3ee5aae72ec24c2ed2e21b806a06e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::surface_set_input_region</definition>
        <argsstring>(Resource *resource, struct ::wl_resource *region) override</argsstring>
        <name>surface_set_input_region</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::surface_set_input_region</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct ::wl_resource *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="205" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="337" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a0ad10dfbe823828c94fe264f8209da1c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::surface_commit</definition>
        <argsstring>(Resource *resource) override</argsstring>
        <name>surface_commit</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::surface_commit</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="206" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="344" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1ac1b5697c55a5a363bbf848822a9292fb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::surface_set_buffer_transform</definition>
        <argsstring>(Resource *resource, int32_t transform) override</argsstring>
        <name>surface_set_buffer_transform</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::surface_set_buffer_transform</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="207" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="423" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a19a3595526875d9dbae0d95042f2efd3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::surface_set_buffer_scale</definition>
        <argsstring>(Resource *resource, int32_t scale) override</argsstring>
        <name>surface_set_buffer_scale</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::surface_set_buffer_scale</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="208" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="433" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1a97af26e845b3c7b6a790b413de9ca1c6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::surface_damage_buffer</definition>
        <argsstring>(Resource *resource, int32_t x, int32_t y, int32_t width, int32_t height) override</argsstring>
        <name>surface_damage_buffer</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::surface_damage_buffer</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="209" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="443" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_interface_private_1ae57458579e3b4cf1136b881eaccae0cb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceInterfacePrivate::surface_offset</definition>
        <argsstring>(Resource *resource, int32_t x, int32_t y) override</argsstring>
        <name>surface_offset</name>
        <qualifiedname>KWin::SurfaceInterfacePrivate::surface_offset</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface_p.h" line="210" column="10" bodyfile="kwin/src/wayland/surface.cpp" bodystart="448" bodyend="451"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::SurfaceInterfacePrivate</label>
        <link refid="class_k_win_1_1_surface_interface_private"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QtWaylandServer::wl_surface</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="24">
        <label>KWin::AlphaModifierSurfaceV1</label>
        <link refid="class_k_win_1_1_alpha_modifier_surface_v1"/>
        <childnode refid="25" relation="private-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>KWin::ClientConnection</label>
        <link refid="class_k_win_1_1_client_connection"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>KWin::ColorSurfaceV1</label>
        <link refid="class_k_win_1_1_color_surface_v1"/>
        <childnode refid="21" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KWin::CompositorInterface</label>
        <link refid="class_k_win_1_1_compositor_interface"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>KWin::ConfinedPointerV1Interface</label>
        <link refid="class_k_win_1_1_confined_pointer_v1_interface"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>KWin::FractionalScaleV1Interface</label>
        <link refid="class_k_win_1_1_fractional_scale_v1_interface"/>
        <childnode refid="14" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>KWin::FrogColorManagementSurfaceV1</label>
        <link refid="class_k_win_1_1_frog_color_management_surface_v1"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="private-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>KWin::GraphicsBufferRef</label>
        <link refid="class_k_win_1_1_graphics_buffer_ref"/>
      </node>
      <node id="22">
        <label>KWin::LinuxDrmSyncObjSurfaceV1</label>
        <link refid="class_k_win_1_1_linux_drm_sync_obj_surface_v1"/>
        <childnode refid="23" relation="private-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>KWin::LockedPointerV1Interface</label>
        <link refid="class_k_win_1_1_locked_pointer_v1_interface"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>KWin::SubSurfaceInterface</label>
        <link refid="class_k_win_1_1_sub_surface_interface"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>KWin::SurfaceInterface</label>
        <link refid="class_k_win_1_1_surface_interface"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::SurfaceInterfacePrivate</label>
        <link refid="class_k_win_1_1_surface_interface_private"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>compositor</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>q</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>role</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>bufferRef</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>firstTransaction</edgelabel>
          <edgelabel>lastTransaction</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>lockedPointer</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>confinedPointer</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>viewportExtension</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>fractionalScaleExtension</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>client</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>tearing</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>frogColorManagement</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>colorSurface</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>syncObjV1</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>alphaModifier</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>handle</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>KWin::SurfaceRole</label>
        <link refid="class_k_win_1_1_surface_role"/>
      </node>
      <node id="16">
        <label>KWin::TearingControlV1Interface</label>
        <link refid="class_k_win_1_1_tearing_control_v1_interface"/>
        <childnode refid="17" relation="private-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>KWin::Transaction</label>
        <link refid="class_k_win_1_1_transaction"/>
      </node>
      <node id="11">
        <label>KWin::ViewportInterface</label>
        <link refid="class_k_win_1_1_viewport_interface"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="19">
        <label>QtWaylandServer::frog_color_managed_surface</label>
      </node>
      <node id="2">
        <label>QtWaylandServer::wl_surface</label>
      </node>
      <node id="25">
        <label>QtWaylandServer::wp_alpha_modifier_surface_v1</label>
      </node>
      <node id="21">
        <label>QtWaylandServer::wp_color_management_surface_v1</label>
      </node>
      <node id="14">
        <label>QtWaylandServer::wp_fractional_scale_v1</label>
      </node>
      <node id="23">
        <label>QtWaylandServer::wp_linux_drm_syncobj_surface_v1</label>
      </node>
      <node id="17">
        <label>QtWaylandServer::wp_tearing_control_v1</label>
      </node>
      <node id="12">
        <label>QtWaylandServer::wp_viewport</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/surface_p.h" line="110" column="1" bodyfile="kwin/src/wayland/surface_p.h" bodystart="111" bodyend="215"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_surface_interface_private_1ab31cacafc2ccbd1f0dce2ce2ce6c6ecd" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>addChild</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a89f2c2ae87f00a7f6024c1d89922d8cb" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>alphaModifier</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1ae5bceedd6d2937b84c4b223faf279a84" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>applyState</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a7ac039f6992d06145f99148542d7aaa0" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>bufferDamage</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a979f390fd254c3b1bbe6f77c4e3f442a" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>bufferRef</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1ab5a7ee1c57517c8ad3beccbd81edb581" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>bufferSourceBox</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a0b79fba46fe6f97f4f8179a97046cc75" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>client</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a7819c3021890ab36328cb2563f35a75f" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>colorFeedbackSurfaces</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a5fc7c9c6beca01e4bf77665aaae9ef08" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>colorSurface</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a6be8320daa49597be1cd9a6ba54ff7a9" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>compositor</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a009850c82ed547073c611967f33ad0cb" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>computeBufferSourceBox</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a679a9393d795ccc2c709990163ea165e" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>computeEffectiveMapped</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a1ae056e325be763714db0556876b4ade" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>confinedPointer</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a5698b7f97913c1b25d19925f7fa9d6c5" prot="private" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>constrainsOneShotConnection</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1afda6586156e78db0e004c21b7166408f" prot="private" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>constrainsUnboundConnection</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a2d40367c137b5049faf798d255b40fd8" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>contains</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1ae93561d35d671996bf78529fb56b0d20" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>contentTypeInterface</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>current</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a3824e57c0e28356db0271576a2a27a07" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>dmabufFeedbackV1</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1adc738604031e36fd242b8d6099653d20" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>firstTransaction</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a44fcad6db90fe2572866ebaa1c0d5993" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>fractionalScaleExtension</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a4efcc95339fe517eac1d710694618a08" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>frogColorManagement</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a78c6d25b9d679356cef73bb14ca36138" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>get</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1aca87da0335ede86307dc528a98122ee7" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>handle</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1aac53996351af94c8c36effddfd75ce3f" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>idleInhibitors</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a901b88ce658c89262fd7cbad78d300b5" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>inputContains</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a3bc29744852f970becf011f59bbc919b" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>inputRegion</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a138e7a1590fa6ec5484d2e246538fa61" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>installIdleInhibitor</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a8e31e2e2a2e6e86ba0b921b5ebb9d452" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>installPointerConstraint</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a610f0b5b41fe1f54b22e4485300de441" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>installPointerConstraint</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1aaacc5862723abdcb7bb6b132c8884f40" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>lastTransaction</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a9f3c9805e77842f304059c22ffd8fdb5" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>lockedPointer</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1aea9828f4e71f7d721e74bba655a059db" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>lowerChild</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a2dd76eeb6414dbec2d05105f9ad7d856" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>mapped</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a84cad8c8d3bfb60758380e2b4b9f9c00" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>mapToBuffer</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a9b0f6f27785e70e26b1dde83a9582fcc" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>opaqueRegion</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a80ee413c268e0b82d7b2b72df5d4985f" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>outputBoundConnections</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1acb40edeb9178e73e03bcdc42ced98b66" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>outputDestroyedConnections</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a1b3c3318484cd9df2b45c58567ca0f8e" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>outputs</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>pending</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a4fc329c580ebe3aa839c4a7890fa6ef7" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>pendingPresentationFeedbacks</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1ad3ba9ec59f116f005f07e358f13a14d8" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>pendingScaleOverride</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a5a59e0edbf210b6dc5b47129828466ff" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>preferredBufferScale</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1aec81c2bf09ac8d3c0c292e0661568a9e" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>preferredBufferTransform</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1afcd49f43dced8e03f6e6fad96d4d80e8" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>preferredColorDescription</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1ab24e4533a32a6e859a92f0336aa23e28" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>primaryOutput</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>q</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a1a4d62dcdf8b905f51f911da283e26ca" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>raiseChild</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a60725cf75d1979aa830bb699a33565ff" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>removeChild</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a15e0792173d2b508b10507848733c3d1" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>removeIdleInhibitor</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a8ad0a837668b607e608188a5b3431842" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>role</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a693e0f4016c0d2337d1542dbbfd51b47" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>scaleOverride</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a183bcfb0f9e3f37f86fbba6150dd74b7" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>setBlur</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a12904473202b5687e104a603acea4266" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>setContrast</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a5eb6ac150c2e5a326ef6fc77fe77f92a" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>setShadow</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1aefa0413dc0a4022f1e0d397c7fe0551e" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>setSlide</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>subsurface</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a98fc07e7fd3540d8a4d4640f7a2523e3" prot="protected" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>surface_attach</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a0ad10dfbe823828c94fe264f8209da1c" prot="protected" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>surface_commit</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a6b446d66db4c0e3a737e09fa086d98fd" prot="protected" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>surface_damage</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a97af26e845b3c7b6a790b413de9ca1c6" prot="protected" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>surface_damage_buffer</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a3372d7a04035de70a3a755c8db9cd984" prot="protected" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>surface_destroy</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a6c427231e71c5bc17a0e976c251f2fce" prot="protected" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>surface_destroy_resource</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a560d8e3efe821fda46f18de722cf0a0f" prot="protected" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>surface_frame</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1ae57458579e3b4cf1136b881eaccae0cb" prot="protected" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>surface_offset</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a19a3595526875d9dbae0d95042f2efd3" prot="protected" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>surface_set_buffer_scale</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1ac1b5697c55a5a363bbf848822a9292fb" prot="protected" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>surface_set_buffer_transform</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a16c3ee5aae72ec24c2ed2e21b806a06e" prot="protected" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>surface_set_input_region</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1ad1d94179ce4b88e104afe3b347d6527b" prot="protected" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>surface_set_opaque_region</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1ab2122db84a98ba24dad882edb2c65e7e" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>SurfaceInterfacePrivate</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>surfaceSize</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1ac76e9a01ba0719c9a4776208d07d1a04" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>syncObjV1</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a9b4ad1186dcd048094505353b206bd37" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>tearing</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>transaction</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1a70d0ec630f07e5ac57b5c6e499ce74c7" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>updateEffectiveMapped</name></member>
      <member refid="class_k_win_1_1_surface_interface_private_1afe7c97a25ee9f6c28799b220b415a435" prot="public" virt="non-virtual"><scope>KWin::SurfaceInterfacePrivate</scope><name>viewportExtension</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
