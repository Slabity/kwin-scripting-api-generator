<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="scriptedeffect_8cpp" kind="file" language="C++">
    <compoundname>scriptedeffect.cpp</compoundname>
    <includes refid="scriptedeffect_8h" local="yes">scriptedeffect.h</includes>
    <includes refid="glshader_8h" local="yes">opengl/glshader.h</includes>
    <includes refid="glshadermanager_8h" local="yes">opengl/glshadermanager.h</includes>
    <includes refid="scripting__logging_8h" local="yes">scripting_logging.h</includes>
    <includes refid="workspace__wrapper_8h" local="yes">workspace_wrapper.h</includes>
    <includes refid="core_2output_8h" local="yes">core/output.h</includes>
    <includes refid="effecthandler_8h" local="yes">effect/effecthandler.h</includes>
    <includes refid="input_8h" local="yes">input.h</includes>
    <includes refid="screenedge_8h" local="yes">screenedge.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes local="no">KConfigGroup</includes>
    <includes local="no">KGlobalAccel</includes>
    <includes local="no">KPluginMetaData</includes>
    <includes local="no">kconfigloader.h</includes>
    <includes local="no">QAction</includes>
    <includes local="no">QFile</includes>
    <includes local="no">QJSEngine</includes>
    <includes local="no">QList</includes>
    <includes local="no">QStandardPaths</includes>
    <includes local="no">optional</includes>
    <includes local="yes">moc_scriptedeffect.cpp</includes>
    <incdepgraph>
      <node id="30">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>effect/animationeffect.h</label>
        <link refid="animationeffect_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>effect/effect.h</label>
        <link refid="effect_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>effect/effecthandler.h</label>
        <link refid="effecthandler_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>effect/effectwindow.h</label>
        <link refid="effectwindow_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>effect/offscreeneffect.h</label>
        <link refid="offscreeneffect_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>input.h</label>
        <link refid="input_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>opengl/glshader.h</label>
        <link refid="glshader_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>opengl/glshadermanager.h</label>
        <link refid="glshadermanager_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>scene/itemgeometry.h</label>
        <link refid="itemgeometry_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>screenedge.h</label>
        <link refid="screenedge_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/scripting/scriptedeffect.cpp</label>
        <link refid="scriptedeffect_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>scriptedeffect.h</label>
        <link refid="scriptedeffect_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>scripting_logging.h</label>
        <link refid="scripting__logging_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>workspace_wrapper.h</label>
        <link refid="workspace__wrapper_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>KConfigGroup</label>
      </node>
      <node id="66">
        <label>KConfigWatcher</label>
      </node>
      <node id="84">
        <label>KGlobalAccel</label>
      </node>
      <node id="15">
        <label>KPluginFactory</label>
      </node>
      <node id="85">
        <label>KPluginMetaData</label>
      </node>
      <node id="16">
        <label>KSharedConfig</label>
      </node>
      <node id="72">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="87">
        <label>QAction</label>
      </node>
      <node id="73">
        <label>QApplication</label>
      </node>
      <node id="36">
        <label>QByteArray</label>
      </node>
      <node id="19">
        <label>QColor</label>
      </node>
      <node id="9">
        <label>QCoreApplication</label>
      </node>
      <node id="76">
        <label>QDBusContext</label>
      </node>
      <node id="77">
        <label>QDataStream</label>
      </node>
      <node id="42">
        <label>QDebug</label>
      </node>
      <node id="24">
        <label>QEasingCurve</label>
      </node>
      <node id="25">
        <label>QElapsedTimer</label>
      </node>
      <node id="88">
        <label>QFile</label>
      </node>
      <node id="37">
        <label>QFlags</label>
      </node>
      <node id="61">
        <label>QHash</label>
      </node>
      <node id="58">
        <label>QIcon</label>
      </node>
      <node id="10">
        <label>QImage</label>
      </node>
      <node id="27">
        <label>QJSEngine</label>
      </node>
      <node id="28">
        <label>QJSValue</label>
      </node>
      <node id="53">
        <label>QList</label>
      </node>
      <node id="43">
        <label>QLoggingCategory</label>
      </node>
      <node id="32">
        <label>QMatrix3x3</label>
      </node>
      <node id="31">
        <label>QMatrix4x4</label>
      </node>
      <node id="45">
        <label>QObject</label>
      </node>
      <node id="59">
        <label>QPair</label>
      </node>
      <node id="11">
        <label>QPoint</label>
      </node>
      <node id="65">
        <label>QPointer</label>
      </node>
      <node id="74">
        <label>QProcessEnvironment</label>
      </node>
      <node id="46">
        <label>QQmlListProperty</label>
      </node>
      <node id="47">
        <label>QRect</label>
      </node>
      <node id="14">
        <label>QRegion</label>
      </node>
      <node id="60">
        <label>QSet</label>
      </node>
      <node id="48">
        <label>QSize</label>
      </node>
      <node id="38">
        <label>QStack</label>
      </node>
      <node id="89">
        <label>QStandardPaths</label>
      </node>
      <node id="33">
        <label>QString</label>
      </node>
      <node id="49">
        <label>QStringList</label>
      </node>
      <node id="78">
        <label>QTimer</label>
      </node>
      <node id="54">
        <label>QUuid</label>
      </node>
      <node id="12">
        <label>QVariant</label>
      </node>
      <node id="13">
        <label>QVector2D</label>
      </node>
      <node id="34">
        <label>QVector3D</label>
      </node>
      <node id="57">
        <label>QWindow</label>
      </node>
      <node id="26">
        <label>QtMath</label>
      </node>
      <node id="82">
        <label>climits</label>
      </node>
      <node id="8">
        <label>config-kwin.h</label>
      </node>
      <node id="20">
        <label>epoxy/gl.h</label>
      </node>
      <node id="62">
        <label>functional</label>
      </node>
      <node id="86">
        <label>kconfigloader.h</label>
      </node>
      <node id="4">
        <label>kwin_export.h</label>
      </node>
      <node id="39">
        <label>map</label>
      </node>
      <node id="40">
        <label>memory</label>
      </node>
      <node id="90">
        <label>moc_scriptedeffect.cpp</label>
      </node>
      <node id="83">
        <label>netwm_def.h</label>
      </node>
      <node id="21">
        <label>optional</label>
      </node>
      <node id="22">
        <label>ranges</label>
      </node>
      <node id="23">
        <label>span</label>
      </node>
      <node id="68">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_k_win_1_1_animation_settings" prot="public">KWin::AnimationSettings</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2012<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2018<sp/>David<sp/>Edmundson<sp/>&lt;davidedmundson@kde.org&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scriptedeffect_8h" kindref="compound">scriptedeffect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glshader_8h" kindref="compound">opengl/glshader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glshadermanager_8h" kindref="compound">opengl/glshadermanager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scripting__logging_8h" kindref="compound">scripting_logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace__wrapper_8h" kindref="compound">workspace_wrapper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2output_8h" kindref="compound">core/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="effecthandler_8h" kindref="compound">effect/effecthandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input_8h" kindref="compound">input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="screenedge_8h" kindref="compound">screenedge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KConfigGroup&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KGlobalAccel&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KPluginMetaData&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kconfigloader.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QAction&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QFile&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QJSEngine&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QList&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QStandardPaths&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">Q_DECLARE_METATYPE(KSharedConfigPtr)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="struct_k_win_1_1_animation_settings" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_animation_settings" kindref="compound">AnimationSettings</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44" refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840a7517b3c65e2a60a60e6525b5b358b152" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840a7517b3c65e2a60a60e6525b5b358b152" kindref="member">Type</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,</highlight></codeline>
<codeline lineno="45" refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840af9fb878d4d99997299ae5337dbb9e75f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840af9fb878d4d99997299ae5337dbb9e75f" kindref="member">Curve</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="46" refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840aebdffd90e18889d0551b63a9ebdfb2f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840aebdffd90e18889d0551b63a9ebdfb2f3" kindref="member">Delay</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,</highlight></codeline>
<codeline lineno="47" refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840ad9932b79b261079629a329bd300d1f36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840ad9932b79b261079629a329bd300d1f36" kindref="member">Duration</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,</highlight></codeline>
<codeline lineno="48" refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840ad9b9b788a586d61c26902c992f99ae56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840ad9b9b788a586d61c26902c992f99ae56" kindref="member">FullScreen</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,</highlight></codeline>
<codeline lineno="49" refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840a1d01152a2b1e43a8e4dcacd8a63f4f34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840a1d01152a2b1e43a8e4dcacd8a63f4f34" kindref="member">KeepAlive</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>5,</highlight></codeline>
<codeline lineno="50" refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840a3157b0631d1f5cb767986a3331450e16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840a3157b0631d1f5cb767986a3331450e16" kindref="member">FrozenTime</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>6</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="52" refid="struct_k_win_1_1_animation_settings_1aa07790d2137a8ac2d83a38de4e3f2074" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_animation_effect_1ae82fac34cfd92461ef431fa8fa651895" kindref="member">AnimationEffect::Attribute</ref><sp/><ref refid="struct_k_win_1_1_animation_settings_1aa07790d2137a8ac2d83a38de4e3f2074" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="53" refid="struct_k_win_1_1_animation_settings_1aa20a3c1ff820a776cbd534824e3dec46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QEasingCurve::Type<sp/><ref refid="struct_k_win_1_1_animation_settings_1aa20a3c1ff820a776cbd534824e3dec46" kindref="member">curve</ref>;</highlight></codeline>
<codeline lineno="54" refid="struct_k_win_1_1_animation_settings_1aab1f50f3b3fc3901eb1b0a4aae887695" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValue<sp/><ref refid="struct_k_win_1_1_animation_settings_1aab1f50f3b3fc3901eb1b0a4aae887695" kindref="member">from</ref>;</highlight></codeline>
<codeline lineno="55" refid="struct_k_win_1_1_animation_settings_1ad3d4b96fb79636a4f17637b57339112b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValue<sp/><ref refid="struct_k_win_1_1_animation_settings_1ad3d4b96fb79636a4f17637b57339112b" kindref="member">to</ref>;</highlight></codeline>
<codeline lineno="56" refid="struct_k_win_1_1_animation_settings_1a2065d5c4a0cd4096b74910ad024f572e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_animation_settings_1a2065d5c4a0cd4096b74910ad024f572e" kindref="member">delay</ref>;</highlight></codeline>
<codeline lineno="57" refid="struct_k_win_1_1_animation_settings_1a5f3c9f7ee862a8a560da45e87a7cf210" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>qint64<sp/><ref refid="struct_k_win_1_1_animation_settings_1a5f3c9f7ee862a8a560da45e87a7cf210" kindref="member">frozenTime</ref>;</highlight></codeline>
<codeline lineno="58" refid="struct_k_win_1_1_animation_settings_1afccfc5328b8677a67bd4cef3897b8f2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/><ref refid="struct_k_win_1_1_animation_settings_1afccfc5328b8677a67bd4cef3897b8f2b" kindref="member">duration</ref>;</highlight></codeline>
<codeline lineno="59" refid="struct_k_win_1_1_animation_settings_1aec1ec9204a92c0a7f6cce8be9d88aeba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/><ref refid="struct_k_win_1_1_animation_settings_1aec1ec9204a92c0a7f6cce8be9d88aeba" kindref="member">set</ref>;</highlight></codeline>
<codeline lineno="60" refid="struct_k_win_1_1_animation_settings_1ad098fee889dba41fa6ebda6fa155dba5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/><ref refid="struct_k_win_1_1_animation_settings_1ad098fee889dba41fa6ebda6fa155dba5" kindref="member">metaData</ref>;</highlight></codeline>
<codeline lineno="61" refid="struct_k_win_1_1_animation_settings_1ab27f9f49678b476a631fcb7cb61703b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_animation_settings_1ab27f9f49678b476a631fcb7cb61703b0" kindref="member">fullScreenEffect</ref>;</highlight></codeline>
<codeline lineno="62" refid="struct_k_win_1_1_animation_settings_1a639c1f2651406ace5dd8f8aff0910c93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_animation_settings_1a639c1f2651406ace5dd8f8aff0910c93" kindref="member">keepAlive</ref>;</highlight></codeline>
<codeline lineno="63" refid="struct_k_win_1_1_animation_settings_1a79525b976476570f3805826949cce146" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;uint&gt;<sp/><ref refid="struct_k_win_1_1_animation_settings_1a79525b976476570f3805826949cce146" kindref="member">shader</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="namespace_k_win_1ac1b595c1ea03881335d69d6e34a070bf" refkind="member"><highlight class="normal"><ref refid="struct_k_win_1_1_animation_settings" kindref="compound">AnimationSettings</ref><sp/><ref refid="namespace_k_win_1ac1b595c1ea03881335d69d6e34a070bf" kindref="member">animationSettingsFromObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_animation_settings" kindref="compound">AnimationSettings</ref><sp/>settings;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1aec1ec9204a92c0a7f6cce8be9d88aeba" kindref="member">set</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1ad098fee889dba41fa6ebda6fa155dba5" kindref="member">metaData</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1ad3d4b96fb79636a4f17637b57339112b" kindref="member">to</ref><sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1aab1f50f3b3fc3901eb1b0a4aae887695" kindref="member">from</ref><sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>duration<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(duration.isNumber())<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1afccfc5328b8677a67bd4cef3897b8f2b" kindref="member">duration</ref><sp/>=<sp/>duration.toUInt();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1aec1ec9204a92c0a7f6cce8be9d88aeba" kindref="member">set</ref><sp/>|=<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840ad9932b79b261079629a329bd300d1f36" kindref="member">AnimationSettings::Duration</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1afccfc5328b8677a67bd4cef3897b8f2b" kindref="member">duration</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>delay<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;delay&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delay.isNumber())<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1a2065d5c4a0cd4096b74910ad024f572e" kindref="member">delay</ref><sp/>=<sp/>delay.toInt();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1aec1ec9204a92c0a7f6cce8be9d88aeba" kindref="member">set</ref><sp/>|=<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840aebdffd90e18889d0551b63a9ebdfb2f3" kindref="member">AnimationSettings::Delay</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1a2065d5c4a0cd4096b74910ad024f572e" kindref="member">delay</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>curve<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;curve&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curve.isNumber())<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1aa20a3c1ff820a776cbd534824e3dec46" kindref="member">curve</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">QEasingCurve::Type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(curve.toInt());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1aec1ec9204a92c0a7f6cce8be9d88aeba" kindref="member">set</ref><sp/>|=<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840af9fb878d4d99997299ae5337dbb9e75f" kindref="member">AnimationSettings::Curve</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1aa20a3c1ff820a776cbd534824e3dec46" kindref="member">curve</ref><sp/>=<sp/>QEasingCurve::Linear;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>.isNumber())<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1aa07790d2137a8ac2d83a38de4e3f2074" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_animation_effect_1ae82fac34cfd92461ef431fa8fa651895" kindref="member">AnimationEffect::Attribute</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>.toInt());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1aec1ec9204a92c0a7f6cce8be9d88aeba" kindref="member">set</ref><sp/>|=<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840a7517b3c65e2a60a60e6525b5b358b152" kindref="member">AnimationSettings::Type</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1aa07790d2137a8ac2d83a38de4e3f2074" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_animation_effect_1ae82fac34cfd92461ef431fa8fa651895" kindref="member">AnimationEffect::Attribute</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>isFullScreen<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;fullScreen&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isFullScreen.isBool())<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1ab27f9f49678b476a631fcb7cb61703b0" kindref="member">fullScreenEffect</ref><sp/>=<sp/>isFullScreen.toBool();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1aec1ec9204a92c0a7f6cce8be9d88aeba" kindref="member">set</ref><sp/>|=<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840ad9b9b788a586d61c26902c992f99ae56" kindref="member">AnimationSettings::FullScreen</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1ab27f9f49678b476a631fcb7cb61703b0" kindref="member">fullScreenEffect</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>keepAlive<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;keepAlive&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keepAlive.isBool())<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1a639c1f2651406ace5dd8f8aff0910c93" kindref="member">keepAlive</ref><sp/>=<sp/>keepAlive.toBool();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1aec1ec9204a92c0a7f6cce8be9d88aeba" kindref="member">set</ref><sp/>|=<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840a1d01152a2b1e43a8e4dcacd8a63f4f34" kindref="member">AnimationSettings::KeepAlive</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1a639c1f2651406ace5dd8f8aff0910c93" kindref="member">keepAlive</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>frozenTime<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;frozenTime&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frozenTime.isNumber())<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1a5f3c9f7ee862a8a560da45e87a7cf210" kindref="member">frozenTime</ref><sp/>=<sp/>frozenTime.toInt();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1aec1ec9204a92c0a7f6cce8be9d88aeba" kindref="member">set</ref><sp/>|=<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840a3157b0631d1f5cb767986a3331450e16" kindref="member">AnimationSettings::FrozenTime</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1a5f3c9f7ee862a8a560da45e87a7cf210" kindref="member">frozenTime</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shader<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;fragmentShader&quot;</highlight><highlight class="normal">));<sp/>shader.isNumber())<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="struct_k_win_1_1_animation_settings_1a79525b976476570f3805826949cce146" kindref="member">shader</ref><sp/>=<sp/>shader.toUInt();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>settings;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_f_px2" kindref="compound">KWin::FPx2</ref><sp/>fpx2FromScriptValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;value)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.isNull())<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FPx2();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.isNumber())<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_f_px2" kindref="compound">FPx2</ref>(value.toNumber());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.isObject())<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>value1<sp/>=<sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;value1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>value2<sp/>=<sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;value2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value1.isNumber()<sp/>||<sp/>!value2.isNumber())<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_SCRIPTING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>cast<sp/>scripted<sp/>FPx2<sp/>to<sp/>C++&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_f_px2" kindref="compound">FPx2</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_f_px2" kindref="compound">FPx2</ref>(value1.toNumber(),<sp/>value2.toNumber());</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_f_px2" kindref="compound">FPx2</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="class_k_win_1_1_scripted_effect_1ac8c4123c6188f4467a0d1c4a22bdd30f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_scripted_effect_1aa97d08987e54997fa9c454d9cddf5451" kindref="member">ScriptedEffect</ref><sp/>*<ref refid="class_k_win_1_1_scripted_effect_1a9fd03bc5feb60b4bd22eb1d2fc19c799" kindref="member">ScriptedEffect::create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KPluginMetaData<sp/>&amp;effect)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>name<sp/>=<sp/>effect.<ref refid="class_k_win_1_1_scripted_effect_1a0484f89d1c1e86aa1338a7f8dae40400" kindref="member">pluginId</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_k_win_1_1_scripted_effect_1ab0db2cc128fffc252a9b5d7cf204166e" kindref="member">scriptFile</ref><sp/>=<sp/>QStandardPaths::locate(QStandardPaths::GenericDataLocation,<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;kwin-wayland/effects/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>name<sp/>+<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;/contents/code/main.js&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_scripted_effect_1ab0db2cc128fffc252a9b5d7cf204166e" kindref="member">scriptFile</ref>.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_k_win_1_1_scripted_effect_1ab0db2cc128fffc252a9b5d7cf204166e" kindref="member">scriptFile</ref><sp/>=<sp/>QStandardPaths::locate(QStandardPaths::GenericDataLocation,<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;kwin/effects/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>name<sp/>+<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;/contents/code/main.js&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_scripted_effect_1ab0db2cc128fffc252a9b5d7cf204166e" kindref="member">scriptFile</ref>.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_SCRIPTING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>locate<sp/>effect<sp/>script&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a9fd03bc5feb60b4bd22eb1d2fc19c799" kindref="member">ScriptedEffect::create</ref>(name,<sp/><ref refid="class_k_win_1_1_scripted_effect_1ab0db2cc128fffc252a9b5d7cf204166e" kindref="member">scriptFile</ref>,<sp/>effect.value(QStringLiteral(</highlight><highlight class="stringliteral">&quot;X-KDE-Ordering&quot;</highlight><highlight class="normal">),<sp/>0),<sp/>effect.value(QStringLiteral(</highlight><highlight class="stringliteral">&quot;X-KWin-Exclusive-Category&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="class_k_win_1_1_scripted_effect_1a9fd03bc5feb60b4bd22eb1d2fc19c799" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_scripted_effect_1aa97d08987e54997fa9c454d9cddf5451" kindref="member">ScriptedEffect</ref><sp/>*<ref refid="class_k_win_1_1_scripted_effect_1a9fd03bc5feb60b4bd22eb1d2fc19c799" kindref="member">ScriptedEffect::create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;effectName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;pathToScript,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chainPosition,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;exclusiveCategory)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_scripted_effect_1aa97d08987e54997fa9c454d9cddf5451" kindref="member">ScriptedEffect</ref><sp/>*effect<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1aa97d08987e54997fa9c454d9cddf5451" kindref="member">ScriptedEffect</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>effect-&gt;m_exclusiveCategory<sp/>=<sp/>exclusiveCategory;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!effect-&gt;<ref refid="class_k_win_1_1_scripted_effect_1a25b0598332ded89e450c8926b29dee45" kindref="member">init</ref>(effectName,<sp/>pathToScript))<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>effect;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>effect-&gt;m_chainPosition<sp/>=<sp/>chainPosition;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>effect;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="class_k_win_1_1_scripted_effect_1a09f6de284d3462e910ccfa699bf3e8db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a09f6de284d3462e910ccfa699bf3e8db" kindref="member">ScriptedEffect::supported</ref>()</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;animationsSupported();</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="class_k_win_1_1_scripted_effect_1aa97d08987e54997fa9c454d9cddf5451" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_scripted_effect_1aa97d08987e54997fa9c454d9cddf5451" kindref="member">ScriptedEffect::ScriptedEffect</ref>()</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_animation_effect_1abada8ad54366e90cc02a86c7006b5f82" kindref="member">AnimationEffect</ref>()</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_engine(new<sp/>QJSEngine(this))</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_scriptFile(QString())</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_config(nullptr)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_chainPosition(0)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1af7e6be37b43602e76272b671cec0bb1b" kindref="member">EffectsHandler::activeFullScreenEffectChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref><sp/>*fullScreenEffect<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;activeFullScreenEffect();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullScreenEffect<sp/>==<sp/>m_activeFullScreenEffect)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_activeFullScreenEffect<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>||<sp/>fullScreenEffect<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_scripted_effect_1a60b167be64e78d41d959b29a2425717d" kindref="member">isActiveFullScreenEffectChanged</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_activeFullScreenEffect<sp/>=<sp/>fullScreenEffect;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="class_k_win_1_1_scripted_effect_1a1143ea2868b9c9be5eb8f0e2f2bd5e3c" kindref="member">ScriptedEffect::~ScriptedEffect</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="class_k_win_1_1_scripted_effect_1a25b0598332ded89e450c8926b29dee45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a25b0598332ded89e450c8926b29dee45" kindref="member">ScriptedEffect::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;effectName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;pathToScript)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;QJSValueList&gt;();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;QList&lt;KWin::EffectWindow<sp/>*&gt;&gt;();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/><ref refid="class_k_win_1_1_scripted_effect_1ab0db2cc128fffc252a9b5d7cf204166e" kindref="member">scriptFile</ref>(pathToScript);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_scripted_effect_1ab0db2cc128fffc252a9b5d7cf204166e" kindref="member">scriptFile</ref>.open(QIODevice::ReadOnly))<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_SCRIPTING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>script<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pathToScript;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>m_effectName<sp/>=<sp/>effectName;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>m_scriptFile<sp/>=<sp/>pathToScript;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>does<sp/>the<sp/>effect<sp/>contain<sp/>an<sp/>KConfigXT<sp/>file?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>kconfigXTFile<sp/>=<sp/>QStandardPaths::locate(QStandardPaths::GenericDataLocation,<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;kwin-wayland/effects/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>m_effectName<sp/>+<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;/contents/config/main.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kconfigXTFile.isNull())<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>kconfigXTFile<sp/>=<sp/>QStandardPaths::locate(QStandardPaths::GenericDataLocation,<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;kwin/effects/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>m_effectName<sp/>+<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;/contents/config/main.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!kconfigXTFile.isNull())<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KConfigGroup<sp/>cg<sp/>=<sp/>QCoreApplication::instance()-&gt;property(</highlight><highlight class="stringliteral">&quot;config&quot;</highlight><highlight class="normal">).value&lt;KSharedConfigPtr&gt;()-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Effect-%1&quot;</highlight><highlight class="normal">).arg(m_effectName));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFile<sp/>xmlFile(kconfigXTFile);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_config<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KConfigLoader(cg,<sp/>&amp;xmlFile,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_config-&gt;load();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>m_engine-&gt;installExtensions(QJSEngine::ConsoleExtension);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValue<sp/>globalObject<sp/>=<sp/>m_engine-&gt;globalObject();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValue<sp/>effectsObject<sp/>=<sp/>m_engine-&gt;newQObject(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSEngine::setObjectOwnership(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>,<sp/>QJSEngine::CppOwnership);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>globalObject.setProperty(QStringLiteral(</highlight><highlight class="stringliteral">&quot;effects&quot;</highlight><highlight class="normal">),<sp/>effectsObject);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValue<sp/>selfObject<sp/>=<sp/>m_engine-&gt;newQObject(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSEngine::setObjectOwnership(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>QJSEngine::CppOwnership);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>globalObject.setProperty(QStringLiteral(</highlight><highlight class="stringliteral">&quot;effect&quot;</highlight><highlight class="normal">),<sp/>selfObject);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>globalObject.setProperty(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Effect&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;newQMetaObject(&amp;ScriptedEffect::staticMetaObject));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>globalObject.setProperty(QStringLiteral(</highlight><highlight class="stringliteral">&quot;KWin&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;newQMetaObject(&amp;QtScriptWorkspaceWrapper::staticMetaObject));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>globalObject.setProperty(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Globals&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;newQMetaObject(&amp;KWin::staticMetaObject));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>globalObject.setProperty(QStringLiteral(</highlight><highlight class="stringliteral">&quot;QEasingCurve&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;newQMetaObject(&amp;QEasingCurve::staticMetaObject));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>globalProperties{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;animationTime&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;displayWidth&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;displayHeight&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;registerShortcut&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;registerScreenEdge&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;registerRealtimeScreenEdge&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;registerTouchScreenEdge&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;unregisterScreenEdge&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;unregisterTouchScreenEdge&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;animate&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;set&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;retarget&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;freezeInTime&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;redirect&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;complete&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;cancel&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;addShader&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;setUniform&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;propertyName<sp/>:<sp/>globalProperties)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalObject.setProperty(propertyName,<sp/>selfObject.property(propertyName));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>result<sp/>=<sp/>m_engine-&gt;evaluate(QString::fromUtf8(<ref refid="class_k_win_1_1_scripted_effect_1ab0db2cc128fffc252a9b5d7cf204166e" kindref="member">scriptFile</ref>.readAll()));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.isError())<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_SCRIPTING,<sp/></highlight><highlight class="stringliteral">&quot;%s:%d:<sp/>error:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>qPrintable(<ref refid="class_k_win_1_1_scripted_effect_1ab0db2cc128fffc252a9b5d7cf204166e" kindref="member">scriptFile</ref>.fileName()),</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;lineNumber&quot;</highlight><highlight class="normal">)).toInt(),</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qPrintable(result.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal">)).toString()));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="class_k_win_1_1_scripted_effect_1a3435a535510becd1357ab6d45b055791" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a4ef9cff7935bf5cb8d4ffcde878124e2" kindref="member">ScriptedEffect::animationEnded</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref><sp/>*w,<sp/><ref refid="class_k_win_1_1_animation_effect_1ae82fac34cfd92461ef431fa8fa651895" kindref="member">Attribute</ref><sp/>a,<sp/>uint<sp/>meta)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_animation_effect_1a2621b78354e661cc248b395aa6a870fa" kindref="member">AnimationEffect::animationEnded</ref>(w,<sp/>a,<sp/>meta);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_scripted_effect_1a4ef9cff7935bf5cb8d4ffcde878124e2" kindref="member">animationEnded</ref>(w,<sp/>0);</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="class_k_win_1_1_scripted_effect_1a1dc017121a2f3bc0acff761f2f54fbd2" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_scripted_effect_1a0484f89d1c1e86aa1338a7f8dae40400" kindref="member">ScriptedEffect::pluginId</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="305"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_effectName;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="class_k_win_1_1_scripted_effect_1aa4bc78136bc202d38fb92a68ed6a6516" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a285f3be39f1d7400f8a86ca1b3f22f4b" kindref="member">ScriptedEffect::isActiveFullScreenEffect</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="310"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;activeFullScreenEffect()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="class_k_win_1_1_scripted_effect_1a10451c07664be641cc0deb8dfcfa0e53" refkind="member"><highlight class="normal">QList&lt;int&gt;<sp/><ref refid="class_k_win_1_1_scripted_effect_1a10451c07664be641cc0deb8dfcfa0e53" kindref="member">ScriptedEffect::touchEdgesForAction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;action)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="315"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;int&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_exclusiveCategory<sp/>==<sp/>QLatin1StringView(</highlight><highlight class="stringliteral">&quot;show-desktop&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>action<sp/>==<sp/>QLatin1StringView(</highlight><highlight class="stringliteral">&quot;show-desktop&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b<sp/>:<sp/>{<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a929278994e070e1f867508f07e3258b8" kindref="member">ElectricTop</ref>,<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a93cc1ac713156a4b4de68018f01f30cf" kindref="member">ElectricRight</ref>,<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a370207e11a2d2e90ec64262effae4953" kindref="member">ElectricBottom</ref>,<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5ae5facf4c47b5ddcfc937c8f9974a2b30" kindref="member">ElectricLeft</ref>})<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;screenEdges()-&gt;actionForTouchBorder(b)<sp/>==<sp/><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76acf6c91bd8ff9dbcbf606a638cb61141f" kindref="member">ElectricActionShowDesktop</ref>)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.append(b);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_config)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_config-&gt;property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;TouchBorderActivate&quot;</highlight><highlight class="normal">)<sp/>+<sp/>action).value&lt;QList&lt;int&gt;&gt;();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">QJSValue<sp/>ScriptedEffect::animate_helper(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>AnimationType<sp/>animationType)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValue<sp/>windowProperty<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;window&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!windowProperty.isObject())<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Window<sp/>property<sp/>missing<sp/>in<sp/>animation<sp/>options&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QJSValue();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>EffectWindow<sp/>*window<sp/>=<sp/>qobject_cast&lt;EffectWindow<sp/>*&gt;(windowProperty.toQObject());</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Window<sp/>property<sp/>references<sp/>invalid<sp/>window&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QJSValue();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;AnimationSettings&gt;<sp/>settings{<ref refid="namespace_k_win_1ac1b595c1ea03881335d69d6e34a070bf" kindref="member">animationSettingsFromObject</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)};<sp/></highlight><highlight class="comment">//<sp/>global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValue<sp/>animations<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;animations&quot;</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">//<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!animations.isUndefined())<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!animations.isArray())<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Animations<sp/>provided<sp/>but<sp/>not<sp/>an<sp/>array&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QJSValue();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(animations.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;length&quot;</highlight><highlight class="normal">)).toInt());</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSValue<sp/>value<sp/>=<sp/>animations.property(QString::number(i));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.isObject())<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AnimationSettings<sp/>s<sp/>=<sp/><ref refid="namespace_k_win_1ac1b595c1ea03881335d69d6e34a070bf" kindref="member">animationSettingsFromObject</ref>(value);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="class_k_win_1_1_scripted_effect_1af0c40b66a3dd55ad6445699a81d08ab8" kindref="member">set</ref><sp/>=<sp/>s.set<sp/>|<sp/>settings.at(0).set;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Catch<sp/>show<sp/>stoppers<sp/>(incompletable<sp/>animation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="class_k_win_1_1_scripted_effect_1af0c40b66a3dd55ad6445699a81d08ab8" kindref="member">set</ref><sp/>&amp;<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840a7517b3c65e2a60a60e6525b5b358b152" kindref="member">AnimationSettings::Type</ref>))<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Type<sp/>property<sp/>missing<sp/>in<sp/>animation<sp/>options&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QJSValue();</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="class_k_win_1_1_scripted_effect_1af0c40b66a3dd55ad6445699a81d08ab8" kindref="member">set</ref><sp/>&amp;<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840ad9932b79b261079629a329bd300d1f36" kindref="member">AnimationSettings::Duration</ref>))<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Duration<sp/>property<sp/>missing<sp/>in<sp/>animation<sp/>options&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QJSValue();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Complete<sp/>local<sp/>animations<sp/>from<sp/>global<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(s.set<sp/>&amp;<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840ad9932b79b261079629a329bd300d1f36" kindref="member">AnimationSettings::Duration</ref>))<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.duration<sp/>=<sp/>settings.at(0).duration;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(s.set<sp/>&amp;<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840af9fb878d4d99997299ae5337dbb9e75f" kindref="member">AnimationSettings::Curve</ref>))<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.curve<sp/>=<sp/>settings.at(0).curve;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(s.set<sp/>&amp;<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840aebdffd90e18889d0551b63a9ebdfb2f3" kindref="member">AnimationSettings::Delay</ref>))<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.delay<sp/>=<sp/>settings.at(0).delay;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(s.set<sp/>&amp;<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840ad9b9b788a586d61c26902c992f99ae56" kindref="member">AnimationSettings::FullScreen</ref>))<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.fullScreenEffect<sp/>=<sp/>settings.at(0).fullScreenEffect;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(s.set<sp/>&amp;<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840a1d01152a2b1e43a8e4dcacd8a63f4f34" kindref="member">AnimationSettings::KeepAlive</ref>))<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.keepAlive<sp/>=<sp/>settings.at(0).keepAlive;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.shader.has_value())<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.shader<sp/>=<sp/>settings.at(0).shader;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.metaData<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>QMap&lt;AnimationEffect::MetaType,<sp/>QString&gt;<sp/>MetaTypeMap;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MetaTypeMap<sp/>metaTypes({{<ref refid="class_k_win_1_1_animation_effect_1a6a7b397dc18c582de01625168d197fc5af8919e2a0aa0a154b5544d0b5fc51fcb" kindref="member">AnimationEffect::SourceAnchor</ref>,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;sourceAnchor&quot;</highlight><highlight class="normal">)},</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="class_k_win_1_1_animation_effect_1a6a7b397dc18c582de01625168d197fc5a84d2cf15f3fc82689b425711128c5263" kindref="member">AnimationEffect::TargetAnchor</ref>,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;targetAnchor&quot;</highlight><highlight class="normal">)},</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="class_k_win_1_1_animation_effect_1a6a7b397dc18c582de01625168d197fc5a576bb734f707295c07d6838c89f58607" kindref="member">AnimationEffect::RelativeSourceX</ref>,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;relativeSourceX&quot;</highlight><highlight class="normal">)},</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="class_k_win_1_1_animation_effect_1a6a7b397dc18c582de01625168d197fc5a525af2fcf0d6b53ee897c2dade0d5ecf" kindref="member">AnimationEffect::RelativeSourceY</ref>,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;relativeSourceY&quot;</highlight><highlight class="normal">)},</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="class_k_win_1_1_animation_effect_1a6a7b397dc18c582de01625168d197fc5a295dca0b686357f91450db4afd2f01f2" kindref="member">AnimationEffect::RelativeTargetX</ref>,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;relativeTargetX&quot;</highlight><highlight class="normal">)},</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="class_k_win_1_1_animation_effect_1a6a7b397dc18c582de01625168d197fc5a303e9d59502b2520b5813ee533f3f72d" kindref="member">AnimationEffect::RelativeTargetY</ref>,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;relativeTargetY&quot;</highlight><highlight class="normal">)},</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="class_k_win_1_1_animation_effect_1a6a7b397dc18c582de01625168d197fc5a3049dbea054c421398df90b19831ef7a" kindref="member">AnimationEffect::Axis</ref>,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;axis&quot;</highlight><highlight class="normal">)}});</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>metaTypes.constBegin(),</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>metaTypes.constEnd();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>end;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSValue<sp/>metaVal<sp/>=<sp/>value.property(*it);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metaVal.isNumber())<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_animation_effect_1a32d06cdede96d4fcc724f73293b7560b" kindref="member">AnimationEffect::setMetaData</ref>(it.key(),<sp/>metaVal.toInt(),<sp/>s.metaData);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.type<sp/>==<sp/><ref refid="class_k_win_1_1_animation_effect_1ae82fac34cfd92461ef431fa8fa651895a079dabf6f4315fa57ead06c5115edccf" kindref="member">ShaderUniform</ref><sp/>&amp;&amp;<sp/>s.shader)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uniformProperty<sp/>=<sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;uniform&quot;</highlight><highlight class="normal">)).toString();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shader<sp/>=<sp/>findShader(s.shader.value());</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shader)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Shader<sp/>for<sp/>given<sp/>shaderId<sp/>not<sp/>found&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1a5374d885eb19ec21dece4326968da3d4" kindref="member">makeOpenGLContextCurrent</ref>())<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>make<sp/>OpenGL<sp/>context<sp/>current&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShaderBinder<sp/>binder{shader};</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.metaData<sp/>=<sp/>shader-&gt;uniformLocation(uniformProperty.toUtf8().constData());</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings<sp/>&lt;&lt;<sp/>s;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settings.count()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="class_k_win_1_1_scripted_effect_1af0c40b66a3dd55ad6445699a81d08ab8" kindref="member">set</ref><sp/>=<sp/>settings.at(0).set;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="class_k_win_1_1_scripted_effect_1af0c40b66a3dd55ad6445699a81d08ab8" kindref="member">set</ref><sp/>&amp;<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840a7517b3c65e2a60a60e6525b5b358b152" kindref="member">AnimationSettings::Type</ref>))<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Type<sp/>property<sp/>missing<sp/>in<sp/>animation<sp/>options&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QJSValue();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="class_k_win_1_1_scripted_effect_1af0c40b66a3dd55ad6445699a81d08ab8" kindref="member">set</ref><sp/>&amp;<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840ad9932b79b261079629a329bd300d1f36" kindref="member">AnimationSettings::Duration</ref>))<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Duration<sp/>property<sp/>missing<sp/>in<sp/>animation<sp/>options&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QJSValue();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(settings.at(0).set<sp/>&amp;<sp/><ref refid="struct_k_win_1_1_animation_settings_1a92e43a19b50590d27083639cf0870840a7517b3c65e2a60a60e6525b5b358b152" kindref="member">AnimationSettings::Type</ref>))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>invalid<sp/>global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.removeAt(0);<sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>get<sp/>rid<sp/>of<sp/>it,<sp/>only<sp/>used<sp/>to<sp/>complete<sp/>the<sp/>others</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settings.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;No<sp/>animations<sp/>provided&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QJSValue();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValue<sp/>array<sp/>=<sp/>m_engine-&gt;newArray(settings.length());</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>settings.count();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AnimationSettings<sp/>&amp;setting<sp/>=<sp/>settings[i];</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>animationId;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(animationType<sp/>==<sp/>AnimationType::Set)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>animationId<sp/>=<sp/><ref refid="class_k_win_1_1_scripted_effect_1af0c40b66a3dd55ad6445699a81d08ab8" kindref="member">set</ref>(window,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.type,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.duration,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.to,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.from,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.metaData,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.curve,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.delay,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.fullScreenEffect,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.keepAlive,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.shader<sp/>?<sp/>setting.shader.value()<sp/>:<sp/>0u);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setting.frozenTime<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_scripted_effect_1afc969f7dd63ab469aae18a092b27d2f1" kindref="member">freezeInTime</ref>(animationId,<sp/>setting.frozenTime);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>animationId<sp/>=<sp/><ref refid="class_k_win_1_1_scripted_effect_1a718103847041a63b5f9e7b83f2584b62" kindref="member">animate</ref>(window,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.type,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.duration,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.to,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.from,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.metaData,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.curve,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.delay,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.fullScreenEffect,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.keepAlive,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting.shader<sp/>?<sp/>setting.shader.value()<sp/>:<sp/>0u);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setting.frozenTime<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_scripted_effect_1afc969f7dd63ab469aae18a092b27d2f1" kindref="member">freezeInTime</ref>(animationId,<sp/>setting.frozenTime);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array.setProperty(i,<sp/>animationId);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>array;</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="class_k_win_1_1_scripted_effect_1a718103847041a63b5f9e7b83f2584b62" refkind="member"><highlight class="normal">quint64<sp/><ref refid="class_k_win_1_1_scripted_effect_1a718103847041a63b5f9e7b83f2584b62" kindref="member">ScriptedEffect::animate</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref><sp/>*window,<sp/><ref refid="class_k_win_1_1_animation_effect_1ae82fac34cfd92461ef431fa8fa651895" kindref="member">KWin::AnimationEffect::Attribute</ref><sp/>attribute,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ms,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;from,<sp/>uint<sp/><ref refid="class_k_win_1_1_animation_effect_1a779e526b9a16d40fbb640f53927d52fa" kindref="member">metaData</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curve,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delay,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fullScreen,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepAlive,<sp/>uint<sp/>shaderId)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>QEasingCurve<sp/>qec;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curve<sp/>&lt;<sp/>QEasingCurve::Custom)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qec.setType(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">QEasingCurve::Type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(curve));</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curve<sp/>==<sp/><ref refid="class_k_win_1_1_scripted_effect_1afb911d9087266805520dcba575d1f4c9a1b57043d5d540efbb03fd55239d18c5e" kindref="member">GaussianCurve</ref>)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qec.setCustomType(<ref refid="class_k_win_1_1_animation_effect_1ac73b6519cc131623633292e7997841af" kindref="member">qecGaussian</ref>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_animation_effect_1aab7f535260df8f6bb226f1590373dc4b" kindref="member">AnimationEffect::animate</ref>(window,<sp/>attribute,<sp/><ref refid="class_k_win_1_1_animation_effect_1a779e526b9a16d40fbb640f53927d52fa" kindref="member">metaData</ref>,<sp/>ms,<sp/>fpx2FromScriptValue(to),<sp/>qec,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay,<sp/>fpx2FromScriptValue(from),<sp/>fullScreen,<sp/>keepAlive,<sp/>findShader(shaderId));</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="class_k_win_1_1_scripted_effect_1a750945b0c2b716ffe1e8cc4ff8ceee63" refkind="member"><highlight class="normal">QJSValue<sp/><ref refid="class_k_win_1_1_scripted_effect_1a718103847041a63b5f9e7b83f2584b62" kindref="member">ScriptedEffect::animate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>animate_helper(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>AnimationType::Animate);</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="class_k_win_1_1_scripted_effect_1af0c40b66a3dd55ad6445699a81d08ab8" refkind="member"><highlight class="normal">quint64<sp/><ref refid="class_k_win_1_1_scripted_effect_1af0c40b66a3dd55ad6445699a81d08ab8" kindref="member">ScriptedEffect::set</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref><sp/>*window,<sp/><ref refid="class_k_win_1_1_animation_effect_1ae82fac34cfd92461ef431fa8fa651895" kindref="member">KWin::AnimationEffect::Attribute</ref><sp/>attribute,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ms,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;from,<sp/>uint<sp/><ref refid="class_k_win_1_1_animation_effect_1a779e526b9a16d40fbb640f53927d52fa" kindref="member">metaData</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curve,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delay,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fullScreen,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepAlive,<sp/>uint<sp/>shaderId)</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>QEasingCurve<sp/>qec;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curve<sp/>&lt;<sp/>QEasingCurve::Custom)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qec.setType(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">QEasingCurve::Type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(curve));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curve<sp/>==<sp/><ref refid="class_k_win_1_1_scripted_effect_1afb911d9087266805520dcba575d1f4c9a1b57043d5d540efbb03fd55239d18c5e" kindref="member">GaussianCurve</ref>)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qec.setCustomType(<ref refid="class_k_win_1_1_animation_effect_1ac73b6519cc131623633292e7997841af" kindref="member">qecGaussian</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_animation_effect_1a01c90afe88d6742968cdbe8ff911cdde" kindref="member">AnimationEffect::set</ref>(window,<sp/>attribute,<sp/><ref refid="class_k_win_1_1_animation_effect_1a779e526b9a16d40fbb640f53927d52fa" kindref="member">metaData</ref>,<sp/>ms,<sp/>fpx2FromScriptValue(to),<sp/>qec,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay,<sp/>fpx2FromScriptValue(from),<sp/>fullScreen,<sp/>keepAlive,<sp/>findShader(shaderId));</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521" refid="class_k_win_1_1_scripted_effect_1a4d58071afc6a553b6d7307067564ebfb" refkind="member"><highlight class="normal">QJSValue<sp/><ref refid="class_k_win_1_1_scripted_effect_1af0c40b66a3dd55ad6445699a81d08ab8" kindref="member">ScriptedEffect::set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>animate_helper(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>AnimationType::Set);</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="class_k_win_1_1_scripted_effect_1a43a81bbd38f7175c986eb75324e20211" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a43a81bbd38f7175c986eb75324e20211" kindref="member">ScriptedEffect::retarget</ref>(quint64<sp/>animationId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;newTarget,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newRemainingTime)</highlight></codeline>
<codeline lineno="527"><highlight class="normal">{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_animation_effect_1a3ae98ef446f259a978740c9448a45fb8" kindref="member">AnimationEffect::retarget</ref>(animationId,<sp/>fpx2FromScriptValue(newTarget),<sp/>newRemainingTime);</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531" refid="class_k_win_1_1_scripted_effect_1a095ec288e0af3b9c97f19f75a8baf5f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a43a81bbd38f7175c986eb75324e20211" kindref="member">ScriptedEffect::retarget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;quint64&gt;<sp/>&amp;animationIds,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;newTarget,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newRemainingTime)</highlight></codeline>
<codeline lineno="532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::all_of(animationIds.begin(),<sp/>animationIds.end(),<sp/>[&amp;](quint64<sp/>animationId)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>retarget(animationId,<sp/>newTarget,<sp/>newRemainingTime);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="class_k_win_1_1_scripted_effect_1afc969f7dd63ab469aae18a092b27d2f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1afc969f7dd63ab469aae18a092b27d2f1" kindref="member">ScriptedEffect::freezeInTime</ref>(quint64<sp/>animationId,<sp/>qint64<sp/>frozenTime)</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_animation_effect_1a7978b20304d9c0f2bdadeb56d562bf5b" kindref="member">AnimationEffect::freezeInTime</ref>(animationId,<sp/>frozenTime);</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="class_k_win_1_1_scripted_effect_1ad0f7ba507a05b07894478766d3e86909" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1afc969f7dd63ab469aae18a092b27d2f1" kindref="member">ScriptedEffect::freezeInTime</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;quint64&gt;<sp/>&amp;animationIds,<sp/>qint64<sp/>frozenTime)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::all_of(animationIds.begin(),<sp/>animationIds.end(),<sp/>[&amp;](quint64<sp/>animationId)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>AnimationEffect::freezeInTime(animationId,<sp/>frozenTime);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="class_k_win_1_1_scripted_effect_1a9e66bbd52e2bea8e4d2fc3820c04f3ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a9e66bbd52e2bea8e4d2fc3820c04f3ab" kindref="member">ScriptedEffect::redirect</ref>(quint64<sp/>animationId,<sp/><ref refid="class_k_win_1_1_animation_effect_1a010a03e246c674b58bedb4d006fa65fd" kindref="member">Direction</ref><sp/>direction,<sp/>TerminationFlags<sp/>terminationFlags)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_animation_effect_1a0579e12a0e28fa34a47afa27cd9ddb39" kindref="member">AnimationEffect::redirect</ref>(animationId,<sp/>direction,<sp/>terminationFlags);</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555" refid="class_k_win_1_1_scripted_effect_1af044cb51b37d2b35e8f241317c3700c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a9e66bbd52e2bea8e4d2fc3820c04f3ab" kindref="member">ScriptedEffect::redirect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;quint64&gt;<sp/>&amp;animationIds,<sp/><ref refid="class_k_win_1_1_animation_effect_1a010a03e246c674b58bedb4d006fa65fd" kindref="member">Direction</ref><sp/>direction,<sp/>TerminationFlags<sp/>terminationFlags)</highlight></codeline>
<codeline lineno="556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::all_of(animationIds.begin(),<sp/>animationIds.end(),<sp/>[&amp;](quint64<sp/>animationId)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>redirect(animationId,<sp/>direction,<sp/>terminationFlags);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="class_k_win_1_1_scripted_effect_1a495b3cf4de464209cc60c3b941b01139" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a495b3cf4de464209cc60c3b941b01139" kindref="member">ScriptedEffect::complete</ref>(quint64<sp/>animationId)</highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_animation_effect_1a253236a80cad9bc4fd92d5c80325ae03" kindref="member">AnimationEffect::complete</ref>(animationId);</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="class_k_win_1_1_scripted_effect_1a6f54aa4599f124b3db97ab778e8c15b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a495b3cf4de464209cc60c3b941b01139" kindref="member">ScriptedEffect::complete</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;quint64&gt;<sp/>&amp;animationIds)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::all_of(animationIds.begin(),<sp/>animationIds.end(),<sp/>[&amp;](quint64<sp/>animationId)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>complete(animationId);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574" refid="class_k_win_1_1_scripted_effect_1aaad524cc76685b3e64c4f938da7c3895" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1aaad524cc76685b3e64c4f938da7c3895" kindref="member">ScriptedEffect::cancel</ref>(quint64<sp/>animationId)</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_animation_effect_1a5b6efa75d24259e7f4891a5aafab1dd8" kindref="member">AnimationEffect::cancel</ref>(animationId);</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579" refid="class_k_win_1_1_scripted_effect_1a93188d5d6d6d564109705627b1ffc691" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1aaad524cc76685b3e64c4f938da7c3895" kindref="member">ScriptedEffect::cancel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;quint64&gt;<sp/>&amp;animationIds)</highlight></codeline>
<codeline lineno="580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint64<sp/>&amp;animationId<sp/>:<sp/>animationIds)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>|=<sp/><ref refid="class_k_win_1_1_scripted_effect_1aaad524cc76685b3e64c4f938da7c3895" kindref="member">cancel</ref>(animationId);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="class_k_win_1_1_scripted_effect_1ac758754b527c68af9cda8613f551a457" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1ac758754b527c68af9cda8613f551a457" kindref="member">ScriptedEffect::isGrabbed</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/><ref refid="class_k_win_1_1_scripted_effect_1aa96f58378a6bc0272f687fb7e43dc14b" kindref="member">ScriptedEffect::DataRole</ref><sp/>grabRole)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*e<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1a6a82d876206aec3c767d8ea8ca1dc1fe" kindref="member">data</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_k_win_1a18fd9ac5b065f286f5484b33f46cbda6" kindref="member">KWin::DataRole</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(grabRole)).value&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*&gt;();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="class_k_win_1_1_scripted_effect_1a73e3f6e5736eda00b418662565d3f79b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a73e3f6e5736eda00b418662565d3f79b" kindref="member">ScriptedEffect::grab</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/><ref refid="class_k_win_1_1_scripted_effect_1aa96f58378a6bc0272f687fb7e43dc14b" kindref="member">DataRole</ref><sp/>grabRole,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*grabber<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1a6a82d876206aec3c767d8ea8ca1dc1fe" kindref="member">data</ref>(grabRole).value&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*&gt;();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grabber<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grabber<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>grabber<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!force)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1a69d83e8d2e0e9c5630c054ce31210ce8" kindref="member">setData</ref>(grabRole,<sp/>QVariant::fromValue(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="class_k_win_1_1_scripted_effect_1a665bac66a5a0f0ac53aa7d520c2c9443" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a665bac66a5a0f0ac53aa7d520c2c9443" kindref="member">ScriptedEffect::ungrab</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/><ref refid="class_k_win_1_1_scripted_effect_1aa96f58378a6bc0272f687fb7e43dc14b" kindref="member">DataRole</ref><sp/>grabRole)</highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*grabber<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1a6a82d876206aec3c767d8ea8ca1dc1fe" kindref="member">data</ref>(grabRole).value&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*&gt;();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grabber<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grabber<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1a69d83e8d2e0e9c5630c054ce31210ce8" kindref="member">setData</ref>(grabRole,<sp/>QVariant());</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632" refid="class_k_win_1_1_scripted_effect_1a94e3eae80a2fc9eb8b2eaad622b7d615" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a94e3eae80a2fc9eb8b2eaad622b7d615" kindref="member">ScriptedEffect::reconfigure</ref>(ReconfigureFlags<sp/>flags)</highlight></codeline>
<codeline lineno="633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__kwineffects_1ga737c6d80eb8f8b24fdc6398209c38e3d" kindref="member">AnimationEffect::reconfigure</ref>(flags);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_config)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_config-&gt;read();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_scripted_effect_1a41a60da566125e4e8395d5e05426589f" kindref="member">configChanged</ref>();</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641" refid="class_k_win_1_1_scripted_effect_1ae0b75e9db28610d8d1b7cfea570034b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1ae0b75e9db28610d8d1b7cfea570034b7" kindref="member">ScriptedEffect::registerShortcut</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;objectName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;keySequence,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;callback)</highlight></codeline>
<codeline lineno="643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isCallable())<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Shortcut<sp/>handler<sp/>must<sp/>be<sp/>callable&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>QAction<sp/>*action<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QAction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>action-&gt;setObjectName(objectName);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>action-&gt;setText(text);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QKeySequence<sp/>shortcut<sp/>=<sp/>QKeySequence(keySequence);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setShortcut(action,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>shortcut);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(action,<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>action,<sp/>callback]()<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSValue<sp/>actionObject<sp/>=<sp/>m_engine-&gt;newQObject(action);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSEngine::setObjectOwnership(action,<sp/>QJSEngine::CppOwnership);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSValue(callback).call(QJSValueList{actionObject});</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660" refid="class_k_win_1_1_scripted_effect_1ac58d1efb9325d6c32f33c6f2f50f00ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1ac58d1efb9325d6c32f33c6f2f50f00ea" kindref="member">ScriptedEffect::borderActivated</ref>(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref><sp/>edge)</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_scripted_effect_1af6b0c85516aa9335a672efb314312213" kindref="member">screenEdgeCallbacks</ref>().constFind(edge);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_k_win_1_1_scripted_effect_1af6b0c85516aa9335a672efb314312213" kindref="member">screenEdgeCallbacks</ref>().constEnd())<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;callback<sp/>:<sp/>it.value())<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSValue(callback).call();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="class_k_win_1_1_scripted_effect_1ac893ac5540438046933d5cc278092c20" refkind="member"><highlight class="normal">QJSValue<sp/><ref refid="class_k_win_1_1_scripted_effect_1ac893ac5540438046933d5cc278092c20" kindref="member">ScriptedEffect::readConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;defaultValue)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_config)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>defaultValue;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_engine-&gt;toScriptValue(m_config-&gt;property(key));</highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679" refid="class_k_win_1_1_scripted_effect_1a55939f76add518a6fc5117437538d8e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a55939f76add518a6fc5117437538d8e8" kindref="member">ScriptedEffect::displayWidth</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="680"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aca2679a62471e374db5227ae4491b4a8" kindref="member">geometry</ref>().width();</highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684" refid="class_k_win_1_1_scripted_effect_1a041bf74af50453e43f2445f3fec5d91c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a041bf74af50453e43f2445f3fec5d91c" kindref="member">ScriptedEffect::displayHeight</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="685"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aca2679a62471e374db5227ae4491b4a8" kindref="member">geometry</ref>().height();</highlight></codeline>
<codeline lineno="687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689" refid="class_k_win_1_1_scripted_effect_1a526f45db4cd1d91c81846c6200576b8a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a526f45db4cd1d91c81846c6200576b8a" kindref="member">ScriptedEffect::animationTime</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>defaultTime)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="690"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__kwineffects_1gab9bcf52072fe74567496b0a894d1d873" kindref="member">Effect::animationTime</ref>(std::chrono::milliseconds(defaultTime));</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694" refid="class_k_win_1_1_scripted_effect_1a1fbe19df7959452547321c738017d35b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a1fbe19df7959452547321c738017d35b" kindref="member">ScriptedEffect::registerScreenEdge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;callback)</highlight></codeline>
<codeline lineno="695"><highlight class="normal">{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isCallable())<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Screen<sp/>edge<sp/>handler<sp/>must<sp/>be<sp/>callable&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_scripted_effect_1af6b0c85516aa9335a672efb314312213" kindref="member">screenEdgeCallbacks</ref>().find(edge);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_k_win_1_1_scripted_effect_1af6b0c85516aa9335a672efb314312213" kindref="member">screenEdgeCallbacks</ref>().end())<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>yet<sp/>registered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1a26e8b8046e90de4811253d87de67477d" kindref="member">reserve</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">KWin::ElectricBorder</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(edge),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;borderActivated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_scripted_effect_1af6b0c85516aa9335a672efb314312213" kindref="member">screenEdgeCallbacks</ref>().insert(edge,<sp/>QJSValueList{callback});</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;append(callback);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711" refid="class_k_win_1_1_scripted_effect_1a0f7d81b5f060b4f99c8693ab0af92348" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a0f7d81b5f060b4f99c8693ab0af92348" kindref="member">ScriptedEffect::registerRealtimeScreenEdge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;callback)</highlight></codeline>
<codeline lineno="712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isCallable())<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Screen<sp/>edge<sp/>handler<sp/>must<sp/>be<sp/>callable&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_scripted_effect_1a11a8ddebf66d7ee4e38d4748266f4ff8" kindref="member">realtimeScreenEdgeCallbacks</ref>().find(edge);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_k_win_1_1_scripted_effect_1a11a8ddebf66d7ee4e38d4748266f4ff8" kindref="member">realtimeScreenEdgeCallbacks</ref>().end())<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>yet<sp/>registered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_scripted_effect_1a11a8ddebf66d7ee4e38d4748266f4ff8" kindref="member">realtimeScreenEdgeCallbacks</ref>().insert(edge,<sp/>QJSValueList{callback});</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*triggerAction<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QAction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(triggerAction,<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>edge]()<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_scripted_effect_1a11a8ddebf66d7ee4e38d4748266f4ff8" kindref="member">realtimeScreenEdgeCallbacks</ref>().constFind(edge);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_k_win_1_1_scripted_effect_1a11a8ddebf66d7ee4e38d4748266f4ff8" kindref="member">realtimeScreenEdgeCallbacks</ref>().constEnd())<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;callback<sp/>:<sp/>it.value())<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSValue(callback).call({edge});</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;registerRealtimeTouchBorder(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">KWin::ElectricBorder</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(edge),<sp/>triggerAction,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref><sp/>border,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;deltaProgress,<sp/><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*screen)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_scripted_effect_1a11a8ddebf66d7ee4e38d4748266f4ff8" kindref="member">realtimeScreenEdgeCallbacks</ref>().constFind(border);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_k_win_1_1_scripted_effect_1a11a8ddebf66d7ee4e38d4748266f4ff8" kindref="member">realtimeScreenEdgeCallbacks</ref>().constEnd())<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;callback<sp/>:<sp/>it.value())<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSValue<sp/>delta<sp/>=<sp/>m_engine-&gt;newObject();</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta.setProperty(</highlight><highlight class="stringliteral">&quot;width&quot;</highlight><highlight class="normal">,<sp/>deltaProgress.x());</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta.setProperty(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">,<sp/>deltaProgress.y());</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSValue(callback).call({border,<sp/>QJSValue(delta),<sp/>m_engine-&gt;newQObject(screen)});</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;append(callback);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748" refid="class_k_win_1_1_scripted_effect_1a1c29fbe9127872ae578c773d684bccaf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a1c29fbe9127872ae578c773d684bccaf" kindref="member">ScriptedEffect::unregisterScreenEdge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge)</highlight></codeline>
<codeline lineno="749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_scripted_effect_1af6b0c85516aa9335a672efb314312213" kindref="member">screenEdgeCallbacks</ref>().find(edge);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_k_win_1_1_scripted_effect_1af6b0c85516aa9335a672efb314312213" kindref="member">screenEdgeCallbacks</ref>().end())<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>previously<sp/>registered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1aaee4026fa795568ea3217b1d70cd4234" kindref="member">unreserve</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">KWin::ElectricBorder</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(edge),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_scripted_effect_1af6b0c85516aa9335a672efb314312213" kindref="member">screenEdgeCallbacks</ref>().erase(it);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760" refid="class_k_win_1_1_scripted_effect_1a6c49ecffcb7df67526ba06823a2f8116" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a6c49ecffcb7df67526ba06823a2f8116" kindref="member">ScriptedEffect::registerTouchScreenEdge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;callback)</highlight></codeline>
<codeline lineno="761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchScreenEdgeCallbacks.constFind(edge)<sp/>!=<sp/>m_touchScreenEdgeCallbacks.constEnd())<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isCallable())<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Touch<sp/>screen<sp/>edge<sp/>handler<sp/>must<sp/>be<sp/>callable&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>QAction<sp/>*action<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QAction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(action,<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[callback]()<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSValue(callback).call();</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1abdd24d5b332b226ad4b3b84d79979721" kindref="member">reserveTouch</ref>(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">KWin::ElectricBorder</ref>(edge),<sp/>action);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>m_touchScreenEdgeCallbacks.insert(edge,<sp/>action);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778" refid="class_k_win_1_1_scripted_effect_1abb35b9d668448dca9671da5e40f8ba03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1abb35b9d668448dca9671da5e40f8ba03" kindref="member">ScriptedEffect::unregisterTouchScreenEdge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge)</highlight></codeline>
<codeline lineno="779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_touchScreenEdgeCallbacks.find(edge);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>m_touchScreenEdgeCallbacks.end())<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it.value();</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>m_touchScreenEdgeCallbacks.erase(it);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789" refid="class_k_win_1_1_scripted_effect_1a62c74c1892bca988f5cc253c278bd8b1" refkind="member"><highlight class="normal">QJSEngine<sp/>*<ref refid="class_k_win_1_1_scripted_effect_1a62c74c1892bca988f5cc253c278bd8b1" kindref="member">ScriptedEffect::engine</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="790"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_engine;</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794" refid="class_k_win_1_1_scripted_effect_1a3e9a88a5a9fbcb5236a82185fc43640e" refkind="member"><highlight class="normal">uint<sp/><ref refid="class_k_win_1_1_scripted_effect_1a3e9a88a5a9fbcb5236a82185fc43640e" kindref="member">ScriptedEffect::addFragmentShader</ref>(<ref refid="class_k_win_1_1_scripted_effect_1a4acdc3956540f4c55d28312ae70879a8" kindref="member">ShaderTrait</ref><sp/>traits,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fragmentShaderFile)</highlight></codeline>
<codeline lineno="795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;makeOpenGLContextCurrent())<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>make<sp/>OpenGL<sp/>context<sp/>current&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>fragment;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fragmentShaderFile.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragment<sp/>=<sp/>QStandardPaths::locate(QStandardPaths::GenericDataLocation,<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;kwin-wayland/effects/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>m_effectName<sp/>+<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;/contents/shaders/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fragmentShaderFile);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fragment.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragment<sp/>=<sp/>QStandardPaths::locate(QStandardPaths::GenericDataLocation,<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;kwin/effects/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>m_effectName<sp/>+<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;/contents/shaders/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fragmentShaderFile);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shader<sp/>=<sp/><ref refid="class_k_win_1_1_shader_manager_1aaf9c40a0a4f2e72ad6e30fa967dd073c" kindref="member">ShaderManager::instance</ref>()-&gt;<ref refid="class_k_win_1_1_shader_manager_1a3a336f77b008451717f7dbcfd3081ab0" kindref="member">generateShaderFromFile</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">KWin::ShaderTraits</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(traits)),<sp/>{},<sp/>fragment);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shader-&gt;isValid())<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Shader<sp/>failed<sp/>to<sp/>load&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>is<sp/>never<sp/>a<sp/>valid<sp/>shader<sp/>identifier,<sp/>it&apos;s<sp/>ensured<sp/>the<sp/>first<sp/>shader<sp/>gets<sp/>id<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>shaderId{m_nextShaderId};</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nextShaderId++;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shaders[shaderId]<sp/>=<sp/>std::move(shader);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shaderId;</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_shader" kindref="compound">GLShader</ref><sp/>*ScriptedEffect::findShader(uint<sp/>shaderId)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="823"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_shaders.find(shaderId);<sp/>it<sp/>!=<sp/>m_shaders.end())<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second.get();</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830" refid="class_k_win_1_1_scripted_effect_1a5f838dc8c8ef2f1c3e87cb360cbb6b6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripted_effect_1a5f838dc8c8ef2f1c3e87cb360cbb6b6e" kindref="member">ScriptedEffect::setUniform</ref>(uint<sp/>shaderId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;value)</highlight></codeline>
<codeline lineno="831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shader<sp/>=<sp/>findShader(shaderId);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shader)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Shader<sp/>for<sp/>given<sp/>shaderId<sp/>not<sp/>found&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;makeOpenGLContextCurrent())<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>make<sp/>OpenGL<sp/>context<sp/>current&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>setColorUniform<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>shader,<sp/>name](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!color.isValid())<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shader-&gt;setUniform(name.toUtf8().constData(),<sp/>color))<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>uniform<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_shader_binder" kindref="compound">ShaderBinder</ref><sp/>binder{shader};</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.isString())<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setColorUniform(value.toString());</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.isNumber())<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shader-&gt;setUniform(name.toUtf8().constData(),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(value.toNumber())))<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>uniform<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.isArray())<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;length&quot;</highlight><highlight class="normal">)).toInt();</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shader-&gt;setUniform(name.toUtf8().constData(),<sp/>QVector2D{float(value.property(0).toNumber()),<sp/>float(value.property(1).toNumber())}))<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>uniform<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shader-&gt;setUniform(name.toUtf8().constData(),<sp/>QVector3D{float(value.property(0).toNumber()),<sp/>float(value.property(1).toNumber()),<sp/>float(value.property(2).toNumber())}))<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>uniform<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shader-&gt;setUniform(name.toUtf8().constData(),<sp/>QVector4D{float(value.property(0).toNumber()),<sp/>float(value.property(1).toNumber()),<sp/>float(value.property(2).toNumber()),<sp/>float(value.property(3).toNumber())}))<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>uniform<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>array&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.isVariant())<sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>variant<sp/>=<sp/>value.toVariant();</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setColorUniform(variant.value&lt;QColor&gt;());</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>value<sp/>provided<sp/>for<sp/>uniform&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_scriptedeffect.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/scripting/scriptedeffect.cpp"/>
  </compounddef>
</doxygen>
