<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="frog__colormanagement__v1_8cpp" kind="file" language="C++">
    <compoundname>frog_colormanagement_v1.cpp</compoundname>
    <includes refid="frog__colormanagement__v1_8h" local="yes">frog_colormanagement_v1.h</includes>
    <includes refid="display_8h" local="yes">display.h</includes>
    <includes refid="surface_8h" local="yes">surface.h</includes>
    <includes refid="surface__p_8h" local="yes">surface_p.h</includes>
    <includes local="yes">moc_frog_colormanagement_v1.cpp</includes>
    <incdepgraph>
      <node id="3">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>display.h</label>
        <link refid="display_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/frog_colormanagement_v1.cpp</label>
        <link refid="frog__colormanagement__v1_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>frog_colormanagement_v1.h</label>
        <link refid="frog__colormanagement__v1_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>surface.h</label>
        <link refid="surface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>surface_p.h</label>
        <link refid="surface__p_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>QByteArray</label>
      </node>
      <node id="18">
        <label>QCoreApplication</label>
      </node>
      <node id="25">
        <label>QDebug</label>
      </node>
      <node id="36">
        <label>QHash</label>
      </node>
      <node id="19">
        <label>QImage</label>
      </node>
      <node id="12">
        <label>QList</label>
      </node>
      <node id="5">
        <label>QMatrix4x4</label>
      </node>
      <node id="9">
        <label>QObject</label>
      </node>
      <node id="20">
        <label>QPoint</label>
      </node>
      <node id="10">
        <label>QPointer</label>
      </node>
      <node id="26">
        <label>QRect</label>
      </node>
      <node id="32">
        <label>QRegion</label>
      </node>
      <node id="24">
        <label>QSize</label>
      </node>
      <node id="27">
        <label>QUuid</label>
      </node>
      <node id="21">
        <label>QVariant</label>
      </node>
      <node id="6">
        <label>QVector2D</label>
      </node>
      <node id="17">
        <label>config-kwin.h</label>
      </node>
      <node id="38">
        <label>deque</label>
      </node>
      <node id="7">
        <label>kwin_export.h</label>
      </node>
      <node id="31">
        <label>memory</label>
      </node>
      <node id="39">
        <label>moc_frog_colormanagement_v1.cpp</label>
      </node>
      <node id="4">
        <label>optional</label>
      </node>
      <node id="37">
        <label>qwayland-server-wayland.h</label>
      </node>
      <node id="35">
        <label>utility</label>
      </node>
      <node id="8">
        <label>wayland/qwayland-server-frog-color-management-v1.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="frog__colormanagement__v1_8h" kindref="compound">frog_colormanagement_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface_8h" kindref="compound">surface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface__p_8h" kindref="compound">surface_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>s_version<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_k_win_1_1_frog_color_management_v1_1a1e39d10e81991e3c9c2c82da6242b1e1" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_frog_color_management_v1_1a1e39d10e81991e3c9c2c82da6242b1e1" kindref="member">FrogColorManagementV1::FrogColorManagementV1</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display,<sp/>QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>QtWaylandServer::frog_color_management_factory_v1(*display,<sp/>s_version)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_k_win_1_1_frog_color_management_v1_1a12253ab7fb933482cb3da20c6bc66f7a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_frog_color_management_v1_1a12253ab7fb933482cb3da20c6bc66f7a" kindref="member">FrogColorManagementV1::~FrogColorManagementV1</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FrogColorManagementV1::frog_color_management_factory_v1_get_color_managed_surface(Resource<sp/>*resource,<sp/>wl_resource<sp/>*surface,<sp/>uint32_t<sp/>callback)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surf<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a24ac16f7936d889771c2ab09d973175b" kindref="member">SurfaceInterface::get</ref>(surface);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a78c6d25b9d679356cef73bb14ca36138" kindref="member">SurfaceInterfacePrivate::get</ref>(surf)-&gt;<ref refid="class_k_win_1_1_surface_interface_private_1a4efcc95339fe517eac1d710694618a08" kindref="member">frogColorManagement</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_frog_color_management_surface_v1" kindref="compound">FrogColorManagementSurfaceV1</ref>(surf,<sp/>resource-&gt;client(),<sp/>callback);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FrogColorManagementV1::frog_color_management_factory_v1_destroy(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_k_win_1_1_frog_color_management_surface_v1_1a1e9289382401ff7f955e38e297059ee5" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_frog_color_management_surface_v1_1a1e9289382401ff7f955e38e297059ee5" kindref="member">FrogColorManagementSurfaceV1::FrogColorManagementSurfaceV1</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface,<sp/>wl_client<sp/>*client,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QtWaylandServer::frog_color_managed_surface(client,<sp/>id,<sp/>s_version)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_surface(surface)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_k_win_1_1_frog_color_management_surface_v1_1a5ed509153917776419e53a2abefb7372" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_frog_color_management_surface_v1_1a5ed509153917776419e53a2abefb7372" kindref="member">FrogColorManagementSurfaceV1::~FrogColorManagementSurfaceV1</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_surface)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>priv<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a78c6d25b9d679356cef73bb14ca36138" kindref="member">SurfaceInterfacePrivate::get</ref>(m_surface);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priv-&gt;pending-&gt;colorDescription<sp/>=<sp/><ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priv-&gt;pending-&gt;colorDescriptionIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priv-&gt;frogColorManagement<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QtWaylandServer::frog_color_managed_surface::transfer_function<sp/>kwinToFrogTransferFunction(<ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref><sp/>tf)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(tf.<ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a91a1b61696108537c8ddb4f9e1099e7a" kindref="member">TransferFunction::sRGB</ref>:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QtWaylandServer::frog_color_managed_surface::transfer_function_srgb;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">TransferFunction::gamma22</ref>:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QtWaylandServer::frog_color_managed_surface::transfer_function_gamma_22;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a326f23a55a0039ee6a7130470b8b8779" kindref="member">TransferFunction::PerceptualQuantizer</ref>:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QtWaylandServer::frog_color_managed_surface::transfer_function_st2084_pq;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ac4d9acf6c01c7c6872491ce9d8370410" kindref="member">TransferFunction::linear</ref>:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QtWaylandServer::frog_color_managed_surface::transfer_function_scrgb_linear;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QtWaylandServer::frog_color_managed_surface::transfer_function_undefined;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="namespace_k_win_1a925328c316bf3db9b871b5a6f9d36eae" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="namespace_k_win_1a925328c316bf3db9b871b5a6f9d36eae" kindref="member">encodePrimary</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>primary)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uint16_t(std::clamp&lt;float&gt;(std::round(primary<sp/>/<sp/>0.00002),<sp/>0,<sp/>0xC350));</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_k_win_1_1_frog_color_management_surface_v1_1a0271e63b3a6bffae99460de8847a11b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_frog_color_management_surface_v1_1a0271e63b3a6bffae99460de8847a11b2" kindref="member">FrogColorManagementSurfaceV1::setPreferredColorDescription</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>&amp;colorDescription)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>color<sp/>=<sp/>colorDescription.<ref refid="class_k_win_1_1_color_description_1a573a56f3b15f6a6b2cc943cca9274ccd" kindref="member">masteringColorimetry</ref>().value_or(colorDescription.<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref><sp/>red<sp/>=<sp/>color.red().toxyY();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref><sp/>green<sp/>=<sp/>color.green().toxyY();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref><sp/>blue<sp/>=<sp/>color.blue().toxyY();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref><sp/>white<sp/>=<sp/>color.white().toxyY();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>send_preferred_metadata(kwinToFrogTransferFunction(colorDescription.<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>()),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a925328c316bf3db9b871b5a6f9d36eae" kindref="member">encodePrimary</ref>(red.<ref refid="struct_k_win_1_1xy_y_1a11c9514947a30621dd27a40ed017f6eb" kindref="member">x</ref>),<sp/><ref refid="namespace_k_win_1a925328c316bf3db9b871b5a6f9d36eae" kindref="member">encodePrimary</ref>(red.<ref refid="struct_k_win_1_1xy_y_1aa16680ebde07a4fec0e8f8b8d8b27777" kindref="member">y</ref>),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a925328c316bf3db9b871b5a6f9d36eae" kindref="member">encodePrimary</ref>(green.<ref refid="struct_k_win_1_1xy_y_1a11c9514947a30621dd27a40ed017f6eb" kindref="member">x</ref>),<sp/><ref refid="namespace_k_win_1a925328c316bf3db9b871b5a6f9d36eae" kindref="member">encodePrimary</ref>(green.<ref refid="struct_k_win_1_1xy_y_1aa16680ebde07a4fec0e8f8b8d8b27777" kindref="member">y</ref>),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a925328c316bf3db9b871b5a6f9d36eae" kindref="member">encodePrimary</ref>(blue.<ref refid="struct_k_win_1_1xy_y_1a11c9514947a30621dd27a40ed017f6eb" kindref="member">x</ref>),<sp/><ref refid="namespace_k_win_1a925328c316bf3db9b871b5a6f9d36eae" kindref="member">encodePrimary</ref>(blue.<ref refid="struct_k_win_1_1xy_y_1aa16680ebde07a4fec0e8f8b8d8b27777" kindref="member">y</ref>),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a925328c316bf3db9b871b5a6f9d36eae" kindref="member">encodePrimary</ref>(white.<ref refid="struct_k_win_1_1xy_y_1a11c9514947a30621dd27a40ed017f6eb" kindref="member">x</ref>),<sp/><ref refid="namespace_k_win_1a925328c316bf3db9b871b5a6f9d36eae" kindref="member">encodePrimary</ref>(white.<ref refid="struct_k_win_1_1xy_y_1aa16680ebde07a4fec0e8f8b8d8b27777" kindref="member">y</ref>),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::round(colorDescription.<ref refid="class_k_win_1_1_color_description_1af5ee8e0ffe6d82b52bf658bab9f7c6de" kindref="member">maxHdrLuminance</ref>().value_or(0)),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::round(colorDescription.<ref refid="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" kindref="member">minLuminance</ref>()<sp/>/<sp/>0.0001),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::round(colorDescription.<ref refid="class_k_win_1_1_color_description_1a4cecebafce982393cba7ff65dae1b804" kindref="member">maxAverageLuminance</ref>().value_or(0)));</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FrogColorManagementSurfaceV1::frog_color_managed_surface_set_known_transfer_function(Resource<sp/>*resource,<sp/>uint32_t<sp/>transfer_function)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(transfer_function)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>transfer_function_undefined:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>transfer_function_srgb:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>transfer_function_gamma_22:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_transferFunction<sp/>=<sp/><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref>(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">TransferFunction::gamma22</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>transfer_function_st2084_pq:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_transferFunction<sp/>=<sp/><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref>(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a326f23a55a0039ee6a7130470b8b8779" kindref="member">TransferFunction::PerceptualQuantizer</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>transfer_function_scrgb_linear:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_transferFunction<sp/>=<sp/><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref>(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ac4d9acf6c01c7c6872491ce9d8370410" kindref="member">TransferFunction::linear</ref>,<sp/>0.0,<sp/>80.0);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>updateColorDescription();</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FrogColorManagementSurfaceV1::frog_color_managed_surface_set_known_container_color_volume(Resource<sp/>*resource,<sp/>uint32_t<sp/>primaries)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(primaries)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>primaries_undefined:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>primaries_rec709:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_containerColorimetry<sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry_1abdec0c7f99cb7af5dd75fdaadfff4297" kindref="member">Colorimetry::BT709</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>primaries_rec2020:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_containerColorimetry<sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry_1a99c05e3a03117057e2bb1019b9861acb" kindref="member">Colorimetry::BT2020</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>updateColorDescription();</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FrogColorManagementSurfaceV1::frog_color_managed_surface_set_render_intent(Resource<sp/>*resource,<sp/>uint32_t<sp/>render_intent)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there&apos;s<sp/>only<sp/>perceptual<sp/>right<sp/>now,<sp/>so<sp/>this<sp/>can<sp/>be<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FrogColorManagementSurfaceV1::frog_color_managed_surface_set_hdr_metadata(Resource<sp/>*resource,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mastering_display_primary_red_x,<sp/>uint32_t<sp/>mastering_display_primary_red_y,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mastering_display_primary_green_x,<sp/>uint32_t<sp/>mastering_display_primary_green_y,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mastering_display_primary_blue_x,<sp/>uint32_t<sp/>mastering_display_primary_blue_y,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mastering_white_point_x,<sp/>uint32_t<sp/>mastering_white_point_y,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>max_display_mastering_luminance,<sp/>uint32_t<sp/>min_display_mastering_luminance,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>max_cll,<sp/>uint32_t<sp/>max_fall)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>applications<sp/>provide<sp/>truly<sp/>nonsensical<sp/>luminance<sp/>values,<sp/>like<sp/>10<sp/>million<sp/>nits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>just<sp/>a<sp/>basic<sp/>sanity<sp/>check<sp/>to<sp/>not<sp/>make<sp/>use<sp/>of<sp/>that<sp/>and<sp/>instead<sp/>assume<sp/>HGIG<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>are<sp/>fine<sp/>for<sp/>most<sp/>HDR<sp/>games<sp/>and<sp/>videos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasSensibleLuminances<sp/>=<sp/>max_display_mastering_luminance<sp/>&lt;=<sp/>10&apos;000<sp/>&amp;&amp;<sp/>max_cll<sp/>&lt;=<sp/>10&apos;000<sp/>&amp;&amp;<sp/>max_fall<sp/>&lt;=<sp/>10&apos;000;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasSensibleLuminances)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max_display_mastering_luminance<sp/>and<sp/>max_cll<sp/>more<sp/>or<sp/>less<sp/>have<sp/>the<sp/>same<sp/>meaning<sp/>in<sp/>practice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>seems<sp/>that<sp/>max_cll,<sp/>if<sp/>set,<sp/>is<sp/>more<sp/>accurate,<sp/>so<sp/>prefer<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_cll<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxPeakBrightness<sp/>=<sp/>max_cll;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_display_mastering_luminance<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxPeakBrightness<sp/>=<sp/>max_display_mastering_luminance;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_fall<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>(!m_maxPeakBrightness<sp/>||<sp/>max_fall<sp/>&lt;=<sp/>*m_maxPeakBrightness))<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxAverageLuminance<sp/>=<sp/>max_fall;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minLuminance<sp/>=<sp/>min_display_mastering_luminance<sp/>/<sp/>10&apos;000.0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!m_maxPeakBrightness<sp/>&amp;&amp;<sp/>!m_maxAverageLuminance)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(m_maxPeakBrightness<sp/>&amp;&amp;<sp/>minLuminance<sp/>&lt;<sp/>*m_maxPeakBrightness)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(m_maxAverageLuminance<sp/>&amp;&amp;<sp/>minLuminance<sp/>&lt;<sp/>*m_maxAverageLuminance))<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_minMasteringLuminance<sp/>=<sp/>minLuminance;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_minMasteringLuminance<sp/>=<sp/>m_transferFunction.minLuminance;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxAverageLuminance<sp/>=<sp/>600;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxPeakBrightness<sp/>=<sp/>1&apos;000;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mastering_display_primary_red_x<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>mastering_display_primary_red_y<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>mastering_display_primary_green_x<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>mastering_display_primary_green_y<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>mastering_display_primary_blue_x<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>mastering_display_primary_blue_y<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>mastering_white_point_x<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>mastering_white_point_y<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_masteringColorimetry<sp/>=<sp/>Colorimetry{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xy{mastering_display_primary_red_x<sp/>/<sp/>10&apos;000.0,<sp/>mastering_display_primary_red_y<sp/>/<sp/>10&apos;000.0},</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xy{mastering_display_primary_green_x<sp/>/<sp/>10&apos;000.0,<sp/>mastering_display_primary_green_y<sp/>/<sp/>10&apos;000.0},</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xy{mastering_display_primary_blue_x<sp/>/<sp/>10&apos;000.0,<sp/>mastering_display_primary_blue_y<sp/>/<sp/>10&apos;000.0},</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xy{mastering_white_point_x<sp/>/<sp/>10&apos;000.0,<sp/>mastering_white_point_y<sp/>/<sp/>10&apos;000.0},</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>updateColorDescription();</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FrogColorManagementSurfaceV1::frog_color_managed_surface_destroy(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FrogColorManagementSurfaceV1::frog_color_managed_surface_destroy_resource(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FrogColorManagementSurfaceV1::updateColorDescription()</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_surface)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SurfaceInterfacePrivate<sp/>*priv<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a78c6d25b9d679356cef73bb14ca36138" kindref="member">SurfaceInterfacePrivate::get</ref>(m_surface);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>referenceLuminance<sp/>=<sp/><ref refid="class_k_win_1_1_transfer_function_1a71f83dbad7283245c4a949f62c51d6ef" kindref="member">TransferFunction::defaultReferenceLuminanceFor</ref>(m_transferFunction.type);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_transferFunction.type<sp/>==<sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ac4d9acf6c01c7c6872491ce9d8370410" kindref="member">TransferFunction::linear</ref>)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>know<sp/>we&apos;re<sp/>dealing<sp/>with<sp/>Windows<sp/>scRGB<sp/>here,<sp/>which<sp/>works</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quite<sp/>badly<sp/>when<sp/>the<sp/>more<sp/>correct<sp/>reference<sp/>of<sp/>80<sp/>nits<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>referenceLuminance<sp/>=<sp/>203;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priv-&gt;pending-&gt;colorDescription<sp/>=<sp/>ColorDescription{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_containerColorimetry,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_transferFunction,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>referenceLuminance,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_minMasteringLuminance.value_or(m_transferFunction.minLuminance),</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxAverageLuminance,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxPeakBrightness,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_masteringColorimetry,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_colorimetry_1abdec0c7f99cb7af5dd75fdaadfff4297" kindref="member">Colorimetry::BT709</ref>,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priv-&gt;pending-&gt;colorDescriptionIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_frog_colormanagement_v1.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/frog_colormanagement_v1.cpp"/>
  </compounddef>
</doxygen>
