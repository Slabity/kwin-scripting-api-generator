<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_mock_plane" kind="class" language="C++" prot="public">
    <compoundname>MockPlane</compoundname>
    <basecompoundref refid="class_mock_object" prot="public" virt="non-virtual">MockObject</basecompoundref>
    <includes refid="mock__drm_8h" local="no">mock_drm.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_mock_plane_1a20613563987381c3a7b9d6ae2b916300" prot="public" static="no" mutable="no">
        <type><ref refid="class_mock_fb" kindref="compound">MockFb</ref> *</type>
        <definition>MockFb* MockPlane::currentFb</definition>
        <argsstring></argsstring>
        <name>currentFb</name>
        <qualifiedname>MockPlane::currentFb</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="121" column="12" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_plane_1adc3df27f080acb9ee63d6d1a67135292" prot="public" static="no" mutable="no">
        <type><ref refid="class_mock_fb" kindref="compound">MockFb</ref> *</type>
        <definition>MockFb* MockPlane::nextFb</definition>
        <argsstring></argsstring>
        <name>nextFb</name>
        <qualifiedname>MockPlane::nextFb</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="122" column="12" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_plane_1afafd52d4429e7131d0551146be8f9ecf" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int MockPlane::possibleCrtcs</definition>
        <argsstring></argsstring>
        <name>possibleCrtcs</name>
        <qualifiedname>MockPlane::possibleCrtcs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="123" column="9" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_plane_1ac470750c75e3ff2c32daea5ce1abee38" prot="public" static="no" mutable="no">
        <type><ref refid="mock__drm_8h_1abb8069f242e006c559a71f47984115bd" kindref="member">PlaneType</ref></type>
        <definition>PlaneType MockPlane::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>MockPlane::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="124" column="15" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="124" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mock_plane_1a7b8e24d9807e29f702104e4c93b8d0e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockPlane::MockPlane</definition>
        <argsstring>(MockGpu *gpu, PlaneType type, int crtcIndex)</argsstring>
        <name>MockPlane</name>
        <qualifiedname>MockPlane::MockPlane</qualifiedname>
        <param>
          <type><ref refid="class_mock_gpu" kindref="compound">MockGpu</ref> *</type>
          <declname>gpu</declname>
        </param>
        <param>
          <type><ref refid="mock__drm_8h_1abb8069f242e006c559a71f47984115bd" kindref="member">PlaneType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>crtcIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="117" column="5" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="240" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_plane_1a7e945289bad9fffb5a166cde02ed002b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockPlane::MockPlane</definition>
        <argsstring>(const MockPlane &amp;obj)=default</argsstring>
        <name>MockPlane</name>
        <qualifiedname>MockPlane::MockPlane</qualifiedname>
        <param>
          <type>const <ref refid="class_mock_plane" kindref="compound">MockPlane</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="118" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_plane_1afe53fa699d68452b1183877dcdc92b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockPlane::~MockPlane</definition>
        <argsstring>()=default</argsstring>
        <name>~MockPlane</name>
        <qualifiedname>MockPlane::~MockPlane</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="119" column="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>MockObject</label>
        <link refid="class_mock_object"/>
      </node>
      <node id="1">
        <label>MockPlane</label>
        <link refid="class_mock_plane"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>MockFb</label>
        <link refid="class_mock_fb"/>
        <childnode refid="3" relation="usage">
          <edgelabel>gpu</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>MockGpu</label>
        <link refid="class_mock_gpu"/>
      </node>
      <node id="2">
        <label>MockObject</label>
        <link refid="class_mock_object"/>
        <childnode refid="3" relation="usage">
          <edgelabel>gpu</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>MockPlane</label>
        <link refid="class_mock_plane"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>currentFb</edgelabel>
          <edgelabel>nextFb</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/drm/mock_drm.h" line="115" column="1" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="115" bodyend="125"/>
    <listofallmembers>
      <member refid="class_mock_plane_1a20613563987381c3a7b9d6ae2b916300" prot="public" virt="non-virtual"><scope>MockPlane</scope><name>currentFb</name></member>
      <member refid="class_mock_object_1a76f1c2955f448959528ffc1c4872c36a" prot="public" virt="non-virtual"><scope>MockPlane</scope><name>getProp</name></member>
      <member refid="class_mock_object_1a9529304fa4cb728bfb7a57c1327ab6cc" prot="public" virt="non-virtual"><scope>MockPlane</scope><name>getPropId</name></member>
      <member refid="class_mock_object_1aee2a37c6a86ae20ee579900b72e04bfe" prot="public" virt="non-virtual"><scope>MockPlane</scope><name>gpu</name></member>
      <member refid="class_mock_object_1a9578562398c7e2f643300da2bf8f745f" prot="public" virt="non-virtual"><scope>MockPlane</scope><name>id</name></member>
      <member refid="class_mock_object_1aa99edcf828702ea4827416c5df93e448" prot="public" virt="non-virtual"><scope>MockPlane</scope><name>MockObject</name></member>
      <member refid="class_mock_plane_1a7b8e24d9807e29f702104e4c93b8d0e2" prot="public" virt="non-virtual"><scope>MockPlane</scope><name>MockPlane</name></member>
      <member refid="class_mock_plane_1a7e945289bad9fffb5a166cde02ed002b" prot="public" virt="non-virtual"><scope>MockPlane</scope><name>MockPlane</name></member>
      <member refid="class_mock_plane_1adc3df27f080acb9ee63d6d1a67135292" prot="public" virt="non-virtual"><scope>MockPlane</scope><name>nextFb</name></member>
      <member refid="class_mock_plane_1afafd52d4429e7131d0551146be8f9ecf" prot="public" virt="non-virtual"><scope>MockPlane</scope><name>possibleCrtcs</name></member>
      <member refid="class_mock_object_1a90cdcc4aa90c655ff7f76fa82e39401e" prot="public" virt="non-virtual"><scope>MockPlane</scope><name>props</name></member>
      <member refid="class_mock_object_1ac1fb4229dc515cc08cef807dce970962" prot="public" virt="non-virtual"><scope>MockPlane</scope><name>setProp</name></member>
      <member refid="class_mock_plane_1ac470750c75e3ff2c32daea5ce1abee38" prot="public" virt="non-virtual"><scope>MockPlane</scope><name>type</name></member>
      <member refid="class_mock_object_1aa32f10d16e17321d7e37fe2fe442e7d3" prot="public" virt="virtual"><scope>MockPlane</scope><name>~MockObject</name></member>
      <member refid="class_mock_plane_1afe53fa699d68452b1183877dcdc92b25" prot="public" virt="non-virtual"><scope>MockPlane</scope><name>~MockPlane</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
