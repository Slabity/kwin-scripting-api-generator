<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="pixelgrid_8h" kind="file" language="C++">
    <compoundname>pixelgrid.h</compoundname>
    <includes local="yes">kwin_export.h</includes>
    <includes local="no">QPointF</includes>
    <includes local="no">QRect</includes>
    <includedby refid="renderviewport_8cpp" local="yes">kwin/src/core/renderviewport.cpp</includedby>
    <includedby refid="offscreeneffect_8cpp" local="yes">kwin/src/effect/offscreeneffect.cpp</includedby>
    <includedby refid="inputpanelv1window_8cpp" local="yes">kwin/src/inputpanelv1window.cpp</includedby>
    <includedby refid="layershellv1window_8cpp" local="yes">kwin/src/layershellv1window.cpp</includedby>
    <includedby refid="plugins_2blur_2blur_8cpp" local="yes">kwin/src/plugins/blur/blur.cpp</includedby>
    <includedby refid="regionscreencastsource_8cpp" local="yes">kwin/src/plugins/screencast/regionscreencastsource.cpp</includedby>
    <includedby refid="screenshot_8cpp" local="yes">kwin/src/plugins/screenshot/screenshot.cpp</includedby>
    <includedby refid="showpaint_8cpp" local="yes">kwin/src/plugins/showpaint/showpaint.cpp</includedby>
    <includedby refid="startupfeedback_8cpp" local="yes">kwin/src/plugins/startupfeedback/startupfeedback.cpp</includedby>
    <includedby refid="cursordelegate__opengl_8cpp" local="yes">kwin/src/scene/cursordelegate_opengl.cpp</includedby>
    <includedby refid="item_8cpp" local="yes">kwin/src/scene/item.cpp</includedby>
    <includedby refid="itemrenderer__opengl_8cpp" local="yes">kwin/src/scene/itemrenderer_opengl.cpp</includedby>
    <includedby refid="surfaceitem_8cpp" local="yes">kwin/src/scene/surfaceitem.cpp</includedby>
    <includedby refid="waylandwindow_8cpp" local="yes">kwin/src/waylandwindow.cpp</includedby>
    <includedby refid="xdgshellwindow_8cpp" local="yes">kwin/src/xdgshellwindow.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/core/pixelgrid.h</label>
        <link refid="pixelgrid_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>QPointF</label>
      </node>
      <node id="4">
        <label>QRect</label>
      </node>
      <node id="2">
        <label>kwin_export.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>kwin/src/core/pixelgrid.h</label>
        <link refid="pixelgrid_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kwin/src/core/renderviewport.cpp</label>
        <link refid="renderviewport_8cpp"/>
      </node>
      <node id="3">
        <label>kwin/src/effect/offscreeneffect.cpp</label>
        <link refid="offscreeneffect_8cpp"/>
      </node>
      <node id="4">
        <label>kwin/src/inputpanelv1window.cpp</label>
        <link refid="inputpanelv1window_8cpp"/>
      </node>
      <node id="5">
        <label>kwin/src/layershellv1window.cpp</label>
        <link refid="layershellv1window_8cpp"/>
      </node>
      <node id="6">
        <label>kwin/src/plugins/blur/blur.cpp</label>
        <link refid="plugins_2blur_2blur_8cpp"/>
      </node>
      <node id="7">
        <label>kwin/src/plugins/screencast/regionscreencastsource.cpp</label>
        <link refid="regionscreencastsource_8cpp"/>
      </node>
      <node id="8">
        <label>kwin/src/plugins/screenshot/screenshot.cpp</label>
        <link refid="screenshot_8cpp"/>
      </node>
      <node id="9">
        <label>kwin/src/plugins/showpaint/showpaint.cpp</label>
        <link refid="showpaint_8cpp"/>
      </node>
      <node id="10">
        <label>kwin/src/plugins/startupfeedback/startupfeedback.cpp</label>
        <link refid="startupfeedback_8cpp"/>
      </node>
      <node id="11">
        <label>kwin/src/scene/cursordelegate_opengl.cpp</label>
        <link refid="cursordelegate__opengl_8cpp"/>
      </node>
      <node id="12">
        <label>kwin/src/scene/item.cpp</label>
        <link refid="item_8cpp"/>
      </node>
      <node id="13">
        <label>kwin/src/scene/itemrenderer_opengl.cpp</label>
        <link refid="itemrenderer__opengl_8cpp"/>
      </node>
      <node id="14">
        <label>kwin/src/scene/surfaceitem.cpp</label>
        <link refid="surfaceitem_8cpp"/>
      </node>
      <node id="15">
        <label>kwin/src/waylandwindow.cpp</label>
        <link refid="waylandwindow_8cpp"/>
      </node>
      <node id="16">
        <label>kwin/src/xdgshellwindow.cpp</label>
        <link refid="xdgshellwindow_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;kwin_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPointF&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QRect&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="namespace_k_win_1aa1b95aced41e7391cc9ef85da08a95ae" refkind="member"><highlight class="normal">KWIN_EXPORT<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>QPoint<sp/><ref refid="namespace_k_win_1aa1b95aced41e7391cc9ef85da08a95ae" kindref="member">snapToPixelGrid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;point)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPoint(std::round(point.x()),<sp/>std::round(point.y()));</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="namespace_k_win_1a7138efbaedcea7ed56eb0adc36304c4e" refkind="member"><highlight class="normal">KWIN_EXPORT<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>QPointF<sp/><ref refid="namespace_k_win_1a7138efbaedcea7ed56eb0adc36304c4e" kindref="member">snapToPixelGridF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;point)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(std::round(point.x()),<sp/>std::round(point.y()));</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="namespace_k_win_1ac0eed46d0ceab4ed33400033e7064829" refkind="member"><highlight class="normal">KWIN_EXPORT<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>QRect<sp/><ref refid="namespace_k_win_1aa1b95aced41e7391cc9ef85da08a95ae" kindref="member">snapToPixelGrid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>topLeft<sp/>=<sp/><ref refid="namespace_k_win_1aa1b95aced41e7391cc9ef85da08a95ae" kindref="member">snapToPixelGrid</ref>(rect.topLeft());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>bottomRight<sp/>=<sp/><ref refid="namespace_k_win_1aa1b95aced41e7391cc9ef85da08a95ae" kindref="member">snapToPixelGrid</ref>(rect.bottomRight());</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRect(topLeft.x(),<sp/>topLeft.y(),<sp/>bottomRight.x()<sp/>-<sp/>topLeft.x(),<sp/>bottomRight.y()<sp/>-<sp/>topLeft.y());</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="namespace_k_win_1a505e44c759ba45219ca629174be92c63" refkind="member"><highlight class="normal">KWIN_EXPORT<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>QRectF<sp/><ref refid="namespace_k_win_1a7138efbaedcea7ed56eb0adc36304c4e" kindref="member">snapToPixelGridF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRectF(<ref refid="namespace_k_win_1a7138efbaedcea7ed56eb0adc36304c4e" kindref="member">snapToPixelGridF</ref>(rect.topLeft()),<sp/><ref refid="namespace_k_win_1a7138efbaedcea7ed56eb0adc36304c4e" kindref="member">snapToPixelGridF</ref>(rect.bottomRight()));</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="namespace_k_win_1ac5cdb84fe1860d1071de1403b965e667" refkind="member"><highlight class="normal">KWIN_EXPORT<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ac5cdb84fe1860d1071de1403b965e667" kindref="member">snapToPixels</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>logicalValue,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::round(logicalValue<sp/>*<sp/>scale)<sp/>/<sp/>scale;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="namespace_k_win_1a4e16b7445d470fdfb508cb7604404802" refkind="member"><highlight class="normal">KWIN_EXPORT<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>QPointF<sp/><ref refid="namespace_k_win_1ac5cdb84fe1860d1071de1403b965e667" kindref="member">snapToPixels</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;logicalValue,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(<ref refid="namespace_k_win_1ac5cdb84fe1860d1071de1403b965e667" kindref="member">snapToPixels</ref>(logicalValue.x(),<sp/>scale),<sp/><ref refid="namespace_k_win_1ac5cdb84fe1860d1071de1403b965e667" kindref="member">snapToPixels</ref>(logicalValue.y(),<sp/>scale));</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="namespace_k_win_1a36ef26f3782fc41e9772d234427a4c25" refkind="member"><highlight class="normal">KWIN_EXPORT<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>QSizeF<sp/><ref refid="namespace_k_win_1ac5cdb84fe1860d1071de1403b965e667" kindref="member">snapToPixels</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>&amp;logicalValue,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QSizeF(<ref refid="namespace_k_win_1ac5cdb84fe1860d1071de1403b965e667" kindref="member">snapToPixels</ref>(logicalValue.width(),<sp/>scale),<sp/><ref refid="namespace_k_win_1ac5cdb84fe1860d1071de1403b965e667" kindref="member">snapToPixels</ref>(logicalValue.height(),<sp/>scale));</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="namespace_k_win_1a36ac67170b9dc4afb61795e9946b0891" refkind="member"><highlight class="normal">KWIN_EXPORT<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>QRectF<sp/><ref refid="namespace_k_win_1ac5cdb84fe1860d1071de1403b965e667" kindref="member">snapToPixels</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;logicalValue,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>topLeft<sp/>=<sp/><ref refid="namespace_k_win_1ac5cdb84fe1860d1071de1403b965e667" kindref="member">snapToPixels</ref>(logicalValue.topLeft(),<sp/>scale);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>bottomRight<sp/>=<sp/><ref refid="namespace_k_win_1ac5cdb84fe1860d1071de1403b965e667" kindref="member">snapToPixels</ref>(logicalValue.bottomRight(),<sp/>scale);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRectF(topLeft,<sp/>bottomRight);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/core/pixelgrid.h"/>
  </compounddef>
</doxygen>
