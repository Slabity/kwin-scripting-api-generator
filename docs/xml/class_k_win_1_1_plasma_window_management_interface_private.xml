<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_plasma_window_management_interface_private" kind="class" language="C++" prot="public">
    <compoundname>KWin::PlasmaWindowManagementInterfacePrivate</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QtWaylandServer::org_kde_plasma_window_management</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_plasma_window_management_interface_private_1a758e9b6b8ebc8234c7bd4dcc544d27d1" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_plasma_window_management_interface_1a64e7ddcd006cf64ba6d98d785e2d1e49" kindref="member">PlasmaWindowManagementInterface::ShowingDesktopState</ref></type>
        <definition>PlasmaWindowManagementInterface::ShowingDesktopState KWin::PlasmaWindowManagementInterfacePrivate::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::state</qualifiedname>
        <initializer>= <ref refid="class_k_win_1_1_plasma_window_management_interface_1a64e7ddcd006cf64ba6d98d785e2d1e49ab9f5c797ebbf55adccdd8539a65a0241" kindref="member">PlasmaWindowManagementInterface::ShowingDesktopState::Disabled</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="43" column="58" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_plasma_window_management_interface_private_1a996eec54bb335fd474eac055965f0434" prot="public" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_plasma_window_interface" kindref="compound">PlasmaWindowInterface</ref> * &gt;</type>
        <definition>QList&lt;PlasmaWindowInterface *&gt; KWin::PlasmaWindowManagementInterfacePrivate::windows</definition>
        <argsstring></argsstring>
        <name>windows</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::windows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="44" column="11" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_plasma_window_management_interface_private_1ab648f147149151abeca599cfd7b77a07" prot="public" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_k_win_1_1_plasma_virtual_desktop_management_interface" kindref="compound">PlasmaVirtualDesktopManagementInterface</ref> &gt;</type>
        <definition>QPointer&lt;PlasmaVirtualDesktopManagementInterface&gt; KWin::PlasmaWindowManagementInterfacePrivate::plasmaVirtualDesktopManagementInterface</definition>
        <argsstring></argsstring>
        <name>plasmaVirtualDesktopManagementInterface</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::plasmaVirtualDesktopManagementInterface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="45" column="14" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_plasma_window_management_interface_private_1a7a94c6c557b86098bffa23f3f7e83c57" prot="public" static="no" mutable="no">
        <type>quint32</type>
        <definition>quint32 KWin::PlasmaWindowManagementInterfacePrivate::windowIdCounter</definition>
        <argsstring></argsstring>
        <name>windowIdCounter</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::windowIdCounter</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="46" column="13" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_plasma_window_management_interface_private_1ad51da17ba94d6cc403d1be479174e3d4" prot="public" static="no" mutable="no">
        <type>QList&lt; quint32 &gt;</type>
        <definition>QList&lt;quint32&gt; KWin::PlasmaWindowManagementInterfacePrivate::stackingOrder</definition>
        <argsstring></argsstring>
        <name>stackingOrder</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::stackingOrder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="47" column="11" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_plasma_window_management_interface_private_1a9e6d74d69b871f2c363250205d599521" prot="public" static="no" mutable="no">
        <type>QList&lt; QString &gt;</type>
        <definition>QList&lt;QString&gt; KWin::PlasmaWindowManagementInterfacePrivate::stackingOrderUuids</definition>
        <argsstring></argsstring>
        <name>stackingOrderUuids</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::stackingOrderUuids</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="48" column="11" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_plasma_window_management_interface_private_1a0d94dd31e5e5da1164a34185e9a84b04" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_plasma_window_management_interface" kindref="compound">PlasmaWindowManagementInterface</ref> *</type>
        <definition>PlasmaWindowManagementInterface* KWin::PlasmaWindowManagementInterfacePrivate::q</definition>
        <argsstring></argsstring>
        <name>q</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::q</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="49" column="37" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_private_1af9273aa538e0c208e5f95de65bba2894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::PlasmaWindowManagementInterfacePrivate::PlasmaWindowManagementInterfacePrivate</definition>
        <argsstring>(PlasmaWindowManagementInterface *_q, Display *display)</argsstring>
        <name>PlasmaWindowManagementInterfacePrivate</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::PlasmaWindowManagementInterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_plasma_window_management_interface" kindref="compound">PlasmaWindowManagementInterface</ref> *</type>
          <declname>_q</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="33" column="5" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="128" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_private_1a02a77341c26bb525fdbe802988870326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterfacePrivate::sendShowingDesktopState</definition>
        <argsstring>()</argsstring>
        <name>sendShowingDesktopState</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::sendShowingDesktopState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="34" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="134" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_private_1a698d22f2e71aab03c3acded7cb6f3e1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterfacePrivate::sendShowingDesktopState</definition>
        <argsstring>(wl_resource *resource)</argsstring>
        <name>sendShowingDesktopState</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::sendShowingDesktopState</qualifiedname>
        <param>
          <type>wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="35" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="142" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_private_1aadc839a997019db5c6390640e91758d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterfacePrivate::sendStackingOrderChanged</definition>
        <argsstring>()</argsstring>
        <name>sendStackingOrderChanged</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::sendStackingOrderChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="36" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="159" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_private_1ac0e00bf58ae7dad873df151f18af1e8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterfacePrivate::sendStackingOrderChanged</definition>
        <argsstring>(wl_resource *resource)</argsstring>
        <name>sendStackingOrderChanged</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::sendStackingOrderChanged</qualifiedname>
        <param>
          <type>wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="37" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="167" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_private_1ad5901cd3074ac50098a84548588eb7ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterfacePrivate::sendStackingOrderUuidsChanged</definition>
        <argsstring>()</argsstring>
        <name>sendStackingOrderUuidsChanged</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::sendStackingOrderUuidsChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="38" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="177" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_private_1a76a5c1f0771621101fe8b915f70de2b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterfacePrivate::sendStackingOrderUuidsChanged</definition>
        <argsstring>(wl_resource *resource)</argsstring>
        <name>sendStackingOrderUuidsChanged</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::sendStackingOrderUuidsChanged</qualifiedname>
        <param>
          <type>wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="39" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="185" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_private_1a7e184e20d7a53707ec90da4397ae0061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterfacePrivate::sendStackingOrderChanged2</definition>
        <argsstring>()</argsstring>
        <name>sendStackingOrderChanged2</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::sendStackingOrderChanged2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="40" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="204" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_private_1a9ad045ad0d9ed5c8cd4ebe244c3495c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterfacePrivate::sendStackingOrderChanged2</definition>
        <argsstring>(Resource *resource)</argsstring>
        <name>sendStackingOrderChanged2</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::sendStackingOrderChanged2</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="41" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="212" bodyend="218"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_private_1ac9009fb77281effa6811d1bf0d43ab46" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterfacePrivate::org_kde_plasma_window_management_bind_resource</definition>
        <argsstring>(Resource *resource) override</argsstring>
        <name>org_kde_plasma_window_management_bind_resource</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::org_kde_plasma_window_management_bind_resource</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="52" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="220" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_private_1a3114b7fc42dd86eb081d7a243bbe9625" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterfacePrivate::org_kde_plasma_window_management_show_desktop</definition>
        <argsstring>(Resource *resource, uint32_t state) override</argsstring>
        <name>org_kde_plasma_window_management_show_desktop</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::org_kde_plasma_window_management_show_desktop</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="53" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="233" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_private_1a8930bc1e35ddb8d52addd252a449ccb6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterfacePrivate::org_kde_plasma_window_management_get_window</definition>
        <argsstring>(Resource *resource, uint32_t id, uint32_t internal_window_id) override</argsstring>
        <name>org_kde_plasma_window_management_get_window</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::org_kde_plasma_window_management_get_window</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>internal_window_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="54" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="248" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_private_1a65fa71aa170f1e284c412c7e8b249588" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterfacePrivate::org_kde_plasma_window_management_get_window_by_uuid</definition>
        <argsstring>(Resource *resource, uint32_t id, const QString &amp;internal_window_uuid) override</argsstring>
        <name>org_kde_plasma_window_management_get_window_by_uuid</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::org_kde_plasma_window_management_get_window_by_uuid</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>internal_window_uuid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="55" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="263" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_window_management_interface_private_1a6052bde13f520390cd89fbadf7557bf5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaWindowManagementInterfacePrivate::org_kde_plasma_window_management_get_stacking_order</definition>
        <argsstring>(Resource *resource, uint32_t id) override</argsstring>
        <name>org_kde_plasma_window_management_get_stacking_order</name>
        <qualifiedname>KWin::PlasmaWindowManagementInterfacePrivate::org_kde_plasma_window_management_get_stacking_order</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="56" column="10" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="283" bodyend="291"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::PlasmaWindowManagementInterfacePrivate</label>
        <link refid="class_k_win_1_1_plasma_window_management_interface_private"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QtWaylandServer::org_kde_plasma_window_management</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>KWin::PlasmaWindowManagementInterface</label>
        <link refid="class_k_win_1_1_plasma_window_management_interface"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::PlasmaWindowManagementInterfacePrivate</label>
        <link refid="class_k_win_1_1_plasma_window_management_interface_private"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>q</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="2">
        <label>QtWaylandServer::org_kde_plasma_window_management</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/plasmawindowmanagement.cpp" line="30" column="1" bodyfile="kwin/src/wayland/plasmawindowmanagement.cpp" bodystart="31" bodyend="57"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1ac9009fb77281effa6811d1bf0d43ab46" prot="protected" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>org_kde_plasma_window_management_bind_resource</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1a6052bde13f520390cd89fbadf7557bf5" prot="protected" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>org_kde_plasma_window_management_get_stacking_order</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1a8930bc1e35ddb8d52addd252a449ccb6" prot="protected" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>org_kde_plasma_window_management_get_window</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1a65fa71aa170f1e284c412c7e8b249588" prot="protected" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>org_kde_plasma_window_management_get_window_by_uuid</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1a3114b7fc42dd86eb081d7a243bbe9625" prot="protected" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>org_kde_plasma_window_management_show_desktop</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1ab648f147149151abeca599cfd7b77a07" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>plasmaVirtualDesktopManagementInterface</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1af9273aa538e0c208e5f95de65bba2894" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>PlasmaWindowManagementInterfacePrivate</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1a0d94dd31e5e5da1164a34185e9a84b04" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>q</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1a02a77341c26bb525fdbe802988870326" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>sendShowingDesktopState</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1a698d22f2e71aab03c3acded7cb6f3e1c" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>sendShowingDesktopState</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1aadc839a997019db5c6390640e91758d9" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>sendStackingOrderChanged</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1ac0e00bf58ae7dad873df151f18af1e8f" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>sendStackingOrderChanged</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1a7e184e20d7a53707ec90da4397ae0061" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>sendStackingOrderChanged2</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1a9ad045ad0d9ed5c8cd4ebe244c3495c8" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>sendStackingOrderChanged2</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1ad5901cd3074ac50098a84548588eb7ce" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>sendStackingOrderUuidsChanged</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1a76a5c1f0771621101fe8b915f70de2b8" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>sendStackingOrderUuidsChanged</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1ad51da17ba94d6cc403d1be479174e3d4" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>stackingOrder</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1a9e6d74d69b871f2c363250205d599521" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>stackingOrderUuids</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1a758e9b6b8ebc8234c7bd4dcc544d27d1" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>state</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1a7a94c6c557b86098bffa23f3f7e83c57" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>windowIdCounter</name></member>
      <member refid="class_k_win_1_1_plasma_window_management_interface_private_1a996eec54bb335fd474eac055965f0434" prot="public" virt="non-virtual"><scope>KWin::PlasmaWindowManagementInterfacePrivate</scope><name>windows</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
