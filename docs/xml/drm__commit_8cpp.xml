<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="drm__commit_8cpp" kind="file" language="C++">
    <compoundname>drm_commit.cpp</compoundname>
    <includes refid="drm__commit_8h" local="yes">drm_commit.h</includes>
    <includes refid="renderbackend_8h" local="yes">core/renderbackend.h</includes>
    <includes refid="drm__blob_8h" local="yes">drm_blob.h</includes>
    <includes refid="drm__buffer_8h" local="yes">drm_buffer.h</includes>
    <includes refid="drm__connector_8h" local="yes">drm_connector.h</includes>
    <includes refid="drm__crtc_8h" local="yes">drm_crtc.h</includes>
    <includes refid="drm__gpu_8h" local="yes">drm_gpu.h</includes>
    <includes refid="drm__object_8h" local="yes">drm_object.h</includes>
    <includes refid="drm__property_8h" local="yes">drm_property.h</includes>
    <includes local="no">QCoreApplication</includes>
    <includes local="no">QThread</includes>
    <incdepgraph>
      <node id="40">
        <label>drm_blob.h</label>
        <link refid="drm__blob_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>drm_buffer.h</label>
        <link refid="drm__buffer_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>drm_colorop.h</label>
        <link refid="drm__colorop_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/backends/drm/drm_commit.cpp</label>
        <link refid="drm__commit_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>drm_commit.h</label>
        <link refid="drm__commit_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>drm_connector.h</label>
        <link refid="drm__connector_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>drm_crtc.h</label>
        <link refid="drm__crtc_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>drm_gpu.h</label>
        <link refid="drm__gpu_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>drm_logging.h</label>
        <link refid="drm__logging_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>drm_object.h</label>
        <link refid="drm__object_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>drm_pipeline.h</label>
        <link refid="drm__pipeline_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>drm_plane.h</label>
        <link refid="drm__plane_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>drm_pointer.h</label>
        <link refid="drm__pointer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>drm_property.h</label>
        <link refid="drm__property_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>colorlut3d.h</label>
        <link refid="colorlut3d_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>core/colorpipeline.h</label>
        <link refid="colorpipeline_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>colortransformation.h</label>
        <link refid="colortransformation_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>core/drmdevice.h</label>
        <link refid="drmdevice_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>graphicsbufferallocator.h</label>
        <link refid="graphicsbufferallocator_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>renderjournal.h</label>
        <link refid="renderjournal_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>core/renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>core/renderloop_p.h</label>
        <link refid="renderloop__p_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>QByteArray</label>
      </node>
      <node id="12">
        <label>QCoreApplication</label>
      </node>
      <node id="23">
        <label>QDebug</label>
      </node>
      <node id="5">
        <label>QHash</label>
      </node>
      <node id="13">
        <label>QImage</label>
      </node>
      <node id="26">
        <label>QList</label>
      </node>
      <node id="24">
        <label>QLoggingCategory</label>
      </node>
      <node id="27">
        <label>QMap</label>
      </node>
      <node id="32">
        <label>QMatrix4x4</label>
      </node>
      <node id="18">
        <label>QObject</label>
      </node>
      <node id="14">
        <label>QPoint</label>
      </node>
      <node id="39">
        <label>QPointer</label>
      </node>
      <node id="36">
        <label>QRect</label>
      </node>
      <node id="35">
        <label>QSize</label>
      </node>
      <node id="70">
        <label>QSocketNotifier</label>
      </node>
      <node id="59">
        <label>QString</label>
      </node>
      <node id="73">
        <label>QThread</label>
      </node>
      <node id="65">
        <label>QTimer</label>
      </node>
      <node id="37">
        <label>QUuid</label>
      </node>
      <node id="15">
        <label>QVariant</label>
      </node>
      <node id="52">
        <label>QVector</label>
      </node>
      <node id="16">
        <label>QVector2D</label>
      </node>
      <node id="6">
        <label>chrono</label>
      </node>
      <node id="11">
        <label>config-kwin.h</label>
      </node>
      <node id="55">
        <label>drm.h</label>
      </node>
      <node id="72">
        <label>epoxy/egl.h</label>
      </node>
      <node id="66">
        <label>fstream</label>
      </node>
      <node id="17">
        <label>kwin_export.h</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="31">
        <label>optional</label>
      </node>
      <node id="71">
        <label>qobject.h</label>
      </node>
      <node id="68">
        <label>qobjectdefs.h</label>
      </node>
      <node id="56">
        <label>span</label>
      </node>
      <node id="41">
        <label>stdint.h</label>
      </node>
      <node id="60">
        <label>sys/types.h</label>
      </node>
      <node id="54">
        <label>tuple</label>
      </node>
      <node id="7">
        <label>unordered_map</label>
      </node>
      <node id="8">
        <label>unordered_set</label>
      </node>
      <node id="44">
        <label>utility</label>
      </node>
      <node id="47">
        <label>vector</label>
      </node>
      <node id="20">
        <label>xf86drm.h</label>
      </node>
      <node id="4">
        <label>xf86drmMode.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <innernamespace refid="namespacestd_1_1chrono__literals">std::chrono_literals</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__commit_8h" kindref="compound">drm_commit.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderbackend_8h" kindref="compound">core/renderbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__blob_8h" kindref="compound">drm_blob.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__buffer_8h" kindref="compound">drm_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__connector_8h" kindref="compound">drm_connector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__crtc_8h" kindref="compound">drm_crtc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__gpu_8h" kindref="compound">drm_gpu.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__object_8h" kindref="compound">drm_object.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__property_8h" kindref="compound">drm_property.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QCoreApplication&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QThread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono_literals;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_k_win_1_1_drm_commit_1af8e7719bbb7f0dc2a5ee577a6416857b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_commit_1af8e7719bbb7f0dc2a5ee577a6416857b" kindref="member">DrmCommit::DrmCommit</ref>(<ref refid="class_k_win_1_1_drm_gpu" kindref="compound">DrmGpu</ref><sp/>*<ref refid="class_k_win_1_1_drm_commit_1af8a218c85630a9fd793248fea96d568b" kindref="member">gpu</ref>)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_drm_commit_1a60efe7a7a9ba3f563ff10f3b0494637f" kindref="member">m_gpu</ref>(<ref refid="class_k_win_1_1_drm_commit_1af8a218c85630a9fd793248fea96d568b" kindref="member">gpu</ref>)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_k_win_1_1_drm_commit_1a11debcbdb0965d730ed80519160d0773" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_commit_1a11debcbdb0965d730ed80519160d0773" kindref="member">DrmCommit::~DrmCommit</ref>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(QThread::currentThread()<sp/>==<sp/>QCoreApplication::instance()-&gt;thread());</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_k_win_1_1_drm_commit_1af8a218c85630a9fd793248fea96d568b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_gpu" kindref="compound">DrmGpu</ref><sp/>*<ref refid="class_k_win_1_1_drm_commit_1af8a218c85630a9fd793248fea96d568b" kindref="member">DrmCommit::gpu</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="38"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_commit_1a60efe7a7a9ba3f563ff10f3b0494637f" kindref="member">m_gpu</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_k_win_1_1_drm_commit_1a7585238c00e7c147fcbe1a5ef74d6d0a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_commit_1a7585238c00e7c147fcbe1a5ef74d6d0a" kindref="member">DrmCommit::setDefunct</ref>()</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_commit_1a525e2a227233ff07fe626188e76d4f01" kindref="member">m_defunct</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_k_win_1_1_drm_atomic_commit_1a6df6e260a9915f3cc3e62b37659189db" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_atomic_commit_1a6df6e260a9915f3cc3e62b37659189db" kindref="member">DrmAtomicCommit::DrmAtomicCommit</ref>(<ref refid="class_k_win_1_1_drm_gpu" kindref="compound">DrmGpu</ref><sp/>*<ref refid="class_k_win_1_1_drm_commit_1af8a218c85630a9fd793248fea96d568b" kindref="member">gpu</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_drm_commit_1af8e7719bbb7f0dc2a5ee577a6416857b" kindref="member">DrmCommit</ref>(<ref refid="class_k_win_1_1_drm_commit_1af8a218c85630a9fd793248fea96d568b" kindref="member">gpu</ref>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_k_win_1_1_drm_atomic_commit_1a77ffe077389d8b805897e7f4708b2f1a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_atomic_commit_1a6df6e260a9915f3cc3e62b37659189db" kindref="member">DrmAtomicCommit::DrmAtomicCommit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;DrmPipeline<sp/>*&gt;<sp/>&amp;pipelines)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_drm_commit_1af8e7719bbb7f0dc2a5ee577a6416857b" kindref="member">DrmCommit</ref>(pipelines.front()-&gt;<ref refid="class_k_win_1_1_drm_commit_1af8a218c85630a9fd793248fea96d568b" kindref="member">gpu</ref>())</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_pipelines(pipelines)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_k_win_1_1_drm_atomic_commit_1a315e293fdf6386f1b730a2532544d7f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a315e293fdf6386f1b730a2532544d7f3" kindref="member">DrmAtomicCommit::addProperty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_property" kindref="compound">DrmProperty</ref><sp/>&amp;prop,<sp/>uint64_t<sp/>value)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(!prop.<ref refid="class_k_win_1_1_drm_property_1ab4b7776ea0edc1ab3b628f54b0516fbf" kindref="member">isValid</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>add<sp/>an<sp/>invalid<sp/>property&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>prop.<ref refid="class_k_win_1_1_drm_property_1a3b2803256030e03cf4aa7fe87e5740e1" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>prop.<ref refid="class_k_win_1_1_drm_property_1a8a63aa5767039508382b67d3d356cbfe" kindref="member">checkValueInRange</ref>(value);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>m_properties[prop.<ref refid="class_k_win_1_1_drm_property_1a4a911970056d5734149aa7b678f9e599" kindref="member">drmObject</ref>()-&gt;<ref refid="class_k_win_1_1_drm_object_1a2474d06d22464f17cd51d440232cd249" kindref="member">id</ref>()][prop.<ref refid="class_k_win_1_1_drm_property_1aa5a83d4ee645a5a0f83bc80c98bdf254" kindref="member">propId</ref>()]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_k_win_1_1_drm_atomic_commit_1a8c53789ea8201b737d2d3ae0524e748b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a8c53789ea8201b737d2d3ae0524e748b" kindref="member">DrmAtomicCommit::addBlob</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_property" kindref="compound">DrmProperty</ref><sp/>&amp;prop,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DrmBlob&gt;<sp/>&amp;blob)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a315e293fdf6386f1b730a2532544d7f3" kindref="member">addProperty</ref>(prop,<sp/>blob<sp/>?<sp/>blob-&gt;blobId()<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>m_blobs[&amp;prop]<sp/>=<sp/>blob;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_k_win_1_1_drm_atomic_commit_1ac46995b92e4d282261978f97afcbd672" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1ac46995b92e4d282261978f97afcbd672" kindref="member">DrmAtomicCommit::addBuffer</ref>(<ref refid="class_k_win_1_1_drm_plane" kindref="compound">DrmPlane</ref><sp/>*plane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DrmFramebuffer&gt;<sp/>&amp;buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a315e293fdf6386f1b730a2532544d7f3" kindref="member">addProperty</ref>(plane-&gt;<ref refid="class_k_win_1_1_drm_plane_1a7af89f91521a45f2db46cf9d826bdf5c" kindref="member">fbId</ref>,<sp/>buffer<sp/>?<sp/>buffer-&gt;framebufferId()<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>m_buffers[plane]<sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>m_frames[plane]<sp/>=<sp/>frame;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>atomic<sp/>commits<sp/>with<sp/>IN_FENCE_FD<sp/>fail<sp/>with<sp/>NVidia<sp/>and<sp/>(as<sp/>of<sp/>kernel<sp/>6.9)<sp/>with<sp/>tearing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plane-&gt;<ref refid="class_k_win_1_1_drm_plane_1a2ed5ecf233ee36a11d945d88cec68434" kindref="member">inFenceFd</ref>.<ref refid="class_k_win_1_1_drm_property_1ab4b7776ea0edc1ab3b628f54b0516fbf" kindref="member">isValid</ref>()<sp/>&amp;&amp;<sp/>!plane-&gt;<ref refid="class_k_win_1_1_drm_object_1a8093fc529b574d5dd01bbfd5e39530a8" kindref="member">gpu</ref>()-&gt;<ref refid="class_k_win_1_1_drm_gpu_1a3319742bba5e67183b5e8da27c2a8f0e" kindref="member">isNVidia</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_drm_atomic_commit_1a30919173e3b6b60892cfb7dbf7e040ae" kindref="member">isTearing</ref>())<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a315e293fdf6386f1b730a2532544d7f3" kindref="member">addProperty</ref>(plane-&gt;<ref refid="class_k_win_1_1_drm_plane_1a2ed5ecf233ee36a11d945d88cec68434" kindref="member">inFenceFd</ref>,<sp/>buffer<sp/>?<sp/>buffer-&gt;syncFd().get()<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>m_planes.emplace(plane);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_targetPageflipTime)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_targetPageflipTime<sp/>=<sp/>std::min(*m_targetPageflipTime,<sp/>frame-&gt;targetPageflipTime());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_targetPageflipTime<sp/>=<sp/>frame-&gt;targetPageflipTime();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="class_k_win_1_1_drm_atomic_commit_1a6fae8ba5694793cd4cc77d1ac5832596" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a6fae8ba5694793cd4cc77d1ac5832596" kindref="member">DrmAtomicCommit::setVrr</ref>(<ref refid="class_k_win_1_1_drm_crtc" kindref="compound">DrmCrtc</ref><sp/>*crtc,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vrr)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a315e293fdf6386f1b730a2532544d7f3" kindref="member">addProperty</ref>(crtc-&gt;<ref refid="class_k_win_1_1_drm_crtc_1a5ba844e453ffb9691abdbfd860147bba" kindref="member">vrrEnabled</ref>,<sp/>vrr<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vrr<sp/>=<sp/>vrr;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_k_win_1_1_drm_atomic_commit_1a2421eb46425396c2c94cb719a2ca36b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a2421eb46425396c2c94cb719a2ca36b4" kindref="member">DrmAtomicCommit::setPresentationMode</ref>(<ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>m_mode<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_k_win_1_1_drm_atomic_commit_1a1cb2b09e3c2a7448709bad854b7f89d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a1cb2b09e3c2a7448709bad854b7f89d9" kindref="member">DrmAtomicCommit::test</ref>()</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>flags<sp/>=<sp/>DRM_MODE_ATOMIC_TEST_ONLY<sp/>|<sp/>DRM_MODE_ATOMIC_NONBLOCK;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_atomic_commit_1a30919173e3b6b60892cfb7dbf7e040ae" kindref="member">isTearing</ref>())<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>DRM_MODE_PAGE_FLIP_ASYNC;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>doCommit(flags);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_k_win_1_1_drm_atomic_commit_1a2bddbefe3e34e57bb62c876b0db9be83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a2bddbefe3e34e57bb62c876b0db9be83" kindref="member">DrmAtomicCommit::testAllowModeset</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>doCommit(DRM_MODE_ATOMIC_TEST_ONLY<sp/>|<sp/>DRM_MODE_ATOMIC_ALLOW_MODESET);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_k_win_1_1_drm_atomic_commit_1a671bcfd3029dad165481ec283f6cee88" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a671bcfd3029dad165481ec283f6cee88" kindref="member">DrmAtomicCommit::commit</ref>()</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>flags<sp/>=<sp/>DRM_MODE_ATOMIC_NONBLOCK<sp/>|<sp/>DRM_MODE_PAGE_FLIP_EVENT;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_atomic_commit_1a30919173e3b6b60892cfb7dbf7e040ae" kindref="member">isTearing</ref>())<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>DRM_MODE_PAGE_FLIP_ASYNC;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>doCommit(flags);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_k_win_1_1_drm_atomic_commit_1a0bd961b8879466f07290c298b8ae5fab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a0bd961b8879466f07290c298b8ae5fab" kindref="member">DrmAtomicCommit::commitModeset</ref>()</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>m_modeset<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>doCommit(DRM_MODE_ATOMIC_ALLOW_MODESET);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DrmAtomicCommit::doCommit(uint32_t<sp/>flags)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>objects;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>propertyCounts;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>propertyIds;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;<sp/>values;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>objects.reserve(m_properties.size());</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>propertyCounts.reserve(m_properties.size());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>totalPropertiesCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>properties]<sp/>:<sp/>m_properties)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objects.push_back(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertyCounts.push_back(properties.size());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPropertiesCount<sp/>+=<sp/>properties.size();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>propertyIds.reserve(totalPropertiesCount);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>values.reserve(totalPropertiesCount);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>properties]<sp/>:<sp/>m_properties)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[property,<sp/>value]<sp/>:<sp/>properties)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertyIds.push_back(property);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values.push_back(value);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>drm_mode_atomic<sp/>commitData{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags<sp/>=<sp/>flags,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.count_objs<sp/>=<sp/>uint32_t(objects.size()),</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.objs_ptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(objects.data()),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.count_props_ptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(propertyCounts.data()),</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.props_ptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(propertyIds.data()),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.prop_values_ptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(values.data()),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.reserved<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.user_data<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>drmIoctl(<ref refid="class_k_win_1_1_drm_commit_1a60efe7a7a9ba3f563ff10f3b0494637f" kindref="member">m_gpu</ref>-&gt;fd(),<sp/>DRM_IOCTL_MODE_ATOMIC,<sp/>&amp;commitData)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_k_win_1_1_drm_atomic_commit_1a97397e69b3e6418ddf87a587caaf41bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a97397e69b3e6418ddf87a587caaf41bc" kindref="member">DrmAtomicCommit::pageFlipped</ref>(std::chrono::nanoseconds<sp/>timestamp)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(QThread::currentThread()<sp/>==<sp/>QCoreApplication::instance()-&gt;thread());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[plane,<sp/>buffer]<sp/>:<sp/>m_buffers)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plane-&gt;setCurrentBuffer(buffer);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_commit_1a525e2a227233ff07fe626188e76d4f01" kindref="member">m_defunct</ref>)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[plane,<sp/>frame]<sp/>:<sp/>m_frames)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame-&gt;presented(timestamp,<sp/>m_mode);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>m_frames.clear();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pipeline<sp/>:<sp/>std::as_const(m_pipelines))<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline-&gt;pageFlipped(timestamp);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_k_win_1_1_drm_atomic_commit_1a7870632397e570b758cb68b05e2433c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a7870632397e570b758cb68b05e2433c7" kindref="member">DrmAtomicCommit::areBuffersReadable</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="189"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::ranges::all_of(m_buffers,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pair)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[plane,<sp/>buffer]<sp/>=<sp/>pair;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!buffer<sp/>||<sp/>buffer-&gt;isReadable();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="class_k_win_1_1_drm_atomic_commit_1a9af8a25c29de6858a484563dccdb9d97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a9af8a25c29de6858a484563dccdb9d97" kindref="member">DrmAtomicCommit::setDeadline</ref>(std::chrono::steady_clock::time_point<sp/>deadline)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[plane,<sp/>buffer]<sp/>:<sp/>m_buffers)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;setDeadline(deadline);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="class_k_win_1_1_drm_atomic_commit_1abb147cf847eee9aec5131b1102148eb2" refkind="member"><highlight class="normal">std::optional&lt;bool&gt;<sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1abb147cf847eee9aec5131b1102148eb2" kindref="member">DrmAtomicCommit::isVrr</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="206"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_vrr;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="class_k_win_1_1_drm_atomic_commit_1a295edfa84a37e0ab58d0ae26cbd85ee5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_set&lt;DrmPlane<sp/>*&gt;<sp/>&amp;<ref refid="class_k_win_1_1_drm_atomic_commit_1a295edfa84a37e0ab58d0ae26cbd85ee5" kindref="member">DrmAtomicCommit::modifiedPlanes</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="211"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_planes;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="class_k_win_1_1_drm_atomic_commit_1a3e4293578ac95f2d6600a65116404f3e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a3e4293578ac95f2d6600a65116404f3e" kindref="member">DrmAtomicCommit::merge</ref>(<ref refid="class_k_win_1_1_drm_atomic_commit_1a6df6e260a9915f3cc3e62b37659189db" kindref="member">DrmAtomicCommit</ref><sp/>*onTop)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[obj,<sp/>properties]<sp/>:<sp/>onTop-&gt;m_properties)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;ownProperties<sp/>=<sp/>m_properties[obj];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[prop,<sp/>value]<sp/>:<sp/>properties)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownProperties[prop]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[plane,<sp/>buffer]<sp/>:<sp/>onTop-&gt;m_buffers)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_buffers[plane]<sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_frames[plane]<sp/>=<sp/>onTop-&gt;m_frames[plane];</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_planes.emplace(plane);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[prop,<sp/>blob]<sp/>:<sp/>onTop-&gt;m_blobs)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_blobs[prop]<sp/>=<sp/>blob;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(onTop-&gt;m_vrr)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vrr<sp/>=<sp/>onTop-&gt;m_vrr;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_targetPageflipTime)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_targetPageflipTime<sp/>=<sp/>onTop-&gt;m_targetPageflipTime;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(onTop-&gt;m_targetPageflipTime)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*m_targetPageflipTime<sp/>=<sp/>std::min(*m_targetPageflipTime,<sp/>*onTop-&gt;m_targetPageflipTime);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_allowedVrrDelay<sp/>&amp;&amp;<sp/>onTop-&gt;m_allowedVrrDelay)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*m_allowedVrrDelay<sp/>=<sp/>std::min(*m_allowedVrrDelay,<sp/>*onTop-&gt;m_allowedVrrDelay);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_allowedVrrDelay.reset();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="class_k_win_1_1_drm_atomic_commit_1a34f882d24fee4bd2f4467cded471278e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a34f882d24fee4bd2f4467cded471278e" kindref="member">DrmAtomicCommit::setAllowedVrrDelay</ref>(std::optional&lt;std::chrono::nanoseconds&gt;<sp/>allowedDelay)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>m_allowedVrrDelay<sp/>=<sp/>allowedDelay;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="class_k_win_1_1_drm_atomic_commit_1ab4514c0bc136b535093f5ecefa4f4e12" refkind="member"><highlight class="normal">std::optional&lt;std::chrono::nanoseconds&gt;<sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1ab4514c0bc136b535093f5ecefa4f4e12" kindref="member">DrmAtomicCommit::allowedVrrDelay</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="252"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_allowedVrrDelay;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="class_k_win_1_1_drm_atomic_commit_1aa3305c2037d47c9c222e2e5677df6f61" refkind="member"><highlight class="normal">std::optional&lt;std::chrono::steady_clock::time_point&gt;<sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1aa3305c2037d47c9c222e2e5677df6f61" kindref="member">DrmAtomicCommit::targetPageflipTime</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="257"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_targetPageflipTime;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="class_k_win_1_1_drm_atomic_commit_1a9b79795d5d228d9fa02ab040bd445596" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a9b79795d5d228d9fa02ab040bd445596" kindref="member">DrmAtomicCommit::isReadyFor</ref>(std::chrono::steady_clock::time_point<sp/>pageflipTarget)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="262"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s_pageflipSlop<sp/>=<sp/>500us;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(!m_targetPageflipTime<sp/>||<sp/>pageflipTarget<sp/>+<sp/>s_pageflipSlop<sp/>&gt;=<sp/>*m_targetPageflipTime)<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a7870632397e570b758cb68b05e2433c7" kindref="member">areBuffersReadable</ref>();</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="class_k_win_1_1_drm_atomic_commit_1a30919173e3b6b60892cfb7dbf7e040ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_atomic_commit_1a30919173e3b6b60892cfb7dbf7e040ae" kindref="member">DrmAtomicCommit::isTearing</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="268"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_mode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a24aa4117da86c41684ad25742832dfa6" kindref="member">PresentationMode::Async</ref><sp/>||<sp/>m_mode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767abe8b04736227cf3f2ab88320638e9505" kindref="member">PresentationMode::AdaptiveAsync</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="class_k_win_1_1_drm_legacy_commit_1aa60752b71059a8ea6e4a7be75f0cfb7b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_legacy_commit_1aa60752b71059a8ea6e4a7be75f0cfb7b" kindref="member">DrmLegacyCommit::DrmLegacyCommit</ref>(<ref refid="class_k_win_1_1_drm_pipeline" kindref="compound">DrmPipeline</ref><sp/>*pipeline,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DrmFramebuffer&gt;<sp/>&amp;buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_drm_commit_1af8e7719bbb7f0dc2a5ee577a6416857b" kindref="member">DrmCommit</ref>(pipeline-&gt;<ref refid="class_k_win_1_1_drm_commit_1af8a218c85630a9fd793248fea96d568b" kindref="member">gpu</ref>())</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_pipeline(pipeline)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_crtc(m_pipeline-&gt;crtc())</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_buffer(buffer)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_frame(frame)</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="class_k_win_1_1_drm_legacy_commit_1afdd4bf1aa6d5747e58f5bb846c759b05" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_legacy_commit_1afdd4bf1aa6d5747e58f5bb846c759b05" kindref="member">DrmLegacyCommit::doModeset</ref>(<ref refid="class_k_win_1_1_drm_connector" kindref="compound">DrmConnector</ref><sp/>*connector,<sp/><ref refid="class_k_win_1_1_drm_connector_mode" kindref="compound">DrmConnectorMode</ref><sp/>*mode)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>connectorId<sp/>=<sp/>connector-&gt;<ref refid="class_k_win_1_1_drm_object_1a2474d06d22464f17cd51d440232cd249" kindref="member">id</ref>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(drmModeSetCrtc(<ref refid="class_k_win_1_1_drm_commit_1af8a218c85630a9fd793248fea96d568b" kindref="member">gpu</ref>()-&gt;fd(),<sp/>m_crtc-&gt;id(),<sp/>m_buffer-&gt;framebufferId(),<sp/>0,<sp/>0,<sp/>&amp;connectorId,<sp/>1,<sp/>mode-&gt;<ref refid="class_k_win_1_1_drm_connector_mode_1adf315fd3599cd4aabe0e0c18fc6e8262" kindref="member">nativeMode</ref>())<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_crtc-&gt;setCurrent(m_buffer);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="class_k_win_1_1_drm_legacy_commit_1adb66e55ad9b5f409009442d5766244ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_legacy_commit_1adb66e55ad9b5f409009442d5766244ac" kindref="member">DrmLegacyCommit::doPageflip</ref>(<ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>m_mode<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>flags<sp/>=<sp/>DRM_MODE_PAGE_FLIP_EVENT;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a24aa4117da86c41684ad25742832dfa6" kindref="member">PresentationMode::Async</ref><sp/>||<sp/>mode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767abe8b04736227cf3f2ab88320638e9505" kindref="member">PresentationMode::AdaptiveAsync</ref>)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>DRM_MODE_PAGE_FLIP_ASYNC;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>drmModePageFlip(<ref refid="class_k_win_1_1_drm_commit_1af8a218c85630a9fd793248fea96d568b" kindref="member">gpu</ref>()-&gt;fd(),<sp/>m_crtc-&gt;id(),<sp/>m_buffer-&gt;framebufferId(),<sp/>flags,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="class_k_win_1_1_drm_legacy_commit_1a41794d7a8b581f72ffa615018ca6336c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_legacy_commit_1a41794d7a8b581f72ffa615018ca6336c" kindref="member">DrmLegacyCommit::pageFlipped</ref>(std::chrono::nanoseconds<sp/>timestamp)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(QThread::currentThread()<sp/>==<sp/>QCoreApplication::instance()-&gt;thread());</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>m_crtc-&gt;setCurrent(m_buffer);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_commit_1a525e2a227233ff07fe626188e76d4f01" kindref="member">m_defunct</ref>)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_frame)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_frame-&gt;presented(timestamp,<sp/>m_mode);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_frame.reset();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pipeline-&gt;pageFlipped(timestamp);</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/backends/drm/drm_commit.cpp"/>
  </compounddef>
</doxygen>
