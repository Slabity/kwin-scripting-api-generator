<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_input_redirection" kind="class" language="C++" prot="public">
    <compoundname>KWin::InputRedirection</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="input_8h" local="no">input.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a72611536bab50a989d0980f63565182e" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_keyboard_input_redirection" kindref="compound">KeyboardInputRedirection</ref> *</type>
        <definition>KeyboardInputRedirection* KWin::InputRedirection::m_keyboard</definition>
        <argsstring></argsstring>
        <name>m_keyboard</name>
        <qualifiedname>KWin::InputRedirection::m_keyboard</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="265" column="30" bodyfile="kwin/src/input.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a2b4958d161ac16ea846b0abbc3ebfe91" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_pointer_input_redirection" kindref="compound">PointerInputRedirection</ref> *</type>
        <definition>PointerInputRedirection* KWin::InputRedirection::m_pointer</definition>
        <argsstring></argsstring>
        <name>m_pointer</name>
        <qualifiedname>KWin::InputRedirection::m_pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="266" column="29" bodyfile="kwin/src/input.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1ab9ba54df705234d02a3f160fff3ecd71" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_tablet_input_redirection" kindref="compound">TabletInputRedirection</ref> *</type>
        <definition>TabletInputRedirection* KWin::InputRedirection::m_tablet</definition>
        <argsstring></argsstring>
        <name>m_tablet</name>
        <qualifiedname>KWin::InputRedirection::m_tablet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="267" column="28" bodyfile="kwin/src/input.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a0f45e0002e351f3cc57ff6ced3f87739" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_touch_input_redirection" kindref="compound">TouchInputRedirection</ref> *</type>
        <definition>TouchInputRedirection* KWin::InputRedirection::m_touch</definition>
        <argsstring></argsstring>
        <name>m_touch</name>
        <qualifiedname>KWin::InputRedirection::m_touch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="268" column="27" bodyfile="kwin/src/input.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1adc569847bdecbe2d4444840b881c36c5" prot="private" static="no" mutable="no">
        <type>QObject *</type>
        <definition>QObject* KWin::InputRedirection::m_lastInputDevice</definition>
        <argsstring></argsstring>
        <name>m_lastInputDevice</name>
        <qualifiedname>KWin::InputRedirection::m_lastInputDevice</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="269" column="13" bodyfile="kwin/src/input.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a689d64fe771ad7e009e42d7919fc17ac" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_global_shortcuts_manager" kindref="compound">GlobalShortcutsManager</ref> *</type>
        <definition>GlobalShortcutsManager* KWin::InputRedirection::m_shortcuts</definition>
        <argsstring></argsstring>
        <name>m_shortcuts</name>
        <qualifiedname>KWin::InputRedirection::m_shortcuts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="271" column="28" bodyfile="kwin/src/input.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1af78fd76d360214da2e0d741cdbe4afe5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_backend" kindref="compound">InputBackend</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;InputBackend&gt; &gt; KWin::InputRedirection::m_inputBackends</definition>
        <argsstring></argsstring>
        <name>m_inputBackends</name>
        <qualifiedname>KWin::InputRedirection::m_inputBackends</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="273" column="17" bodyfile="kwin/src/input.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a70a4796fd5805a61b32821d070feac17" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> * &gt;</type>
        <definition>QList&lt;InputDevice *&gt; KWin::InputRedirection::m_inputDevices</definition>
        <argsstring></argsstring>
        <name>m_inputDevices</name>
        <qualifiedname>KWin::InputRedirection::m_inputDevices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="274" column="11" bodyfile="kwin/src/input.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1ae88266e65a7df5fe4b75c737cb5d0774" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_idle_detector" kindref="compound">IdleDetector</ref> * &gt;</type>
        <definition>QList&lt;IdleDetector *&gt; KWin::InputRedirection::m_idleDetectors</definition>
        <argsstring></argsstring>
        <name>m_idleDetectors</name>
        <qualifiedname>KWin::InputRedirection::m_idleDetectors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="276" column="11" bodyfile="kwin/src/input.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a4762e5c4b3437235d45bd0d63b0c98da" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt;</type>
        <definition>QList&lt;Window *&gt; KWin::InputRedirection::m_idleInhibitors</definition>
        <argsstring></argsstring>
        <name>m_idleInhibitors</name>
        <qualifiedname>KWin::InputRedirection::m_idleInhibitors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="277" column="11" bodyfile="kwin/src/input.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1ad8c3efd788cca781720111a844b7de7d" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_window_selector_filter" kindref="compound">WindowSelectorFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;WindowSelectorFilter&gt; KWin::InputRedirection::m_windowSelector</definition>
        <argsstring></argsstring>
        <name>m_windowSelector</name>
        <qualifiedname>KWin::InputRedirection::m_windowSelector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="278" column="21" bodyfile="kwin/src/input.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a2a4a65763bdee8c0f4f024a85f1cb23a" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> * &gt;</type>
        <definition>QList&lt;InputEventFilter *&gt; KWin::InputRedirection::m_filters</definition>
        <argsstring></argsstring>
        <name>m_filters</name>
        <qualifiedname>KWin::InputRedirection::m_filters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="280" column="11" bodyfile="kwin/src/input.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a5c7a21f8d9a7319f06fe7413e0c80d6b" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_input_event_spy" kindref="compound">InputEventSpy</ref> * &gt;</type>
        <definition>QList&lt;InputEventSpy *&gt; KWin::InputRedirection::m_spies</definition>
        <argsstring></argsstring>
        <name>m_spies</name>
        <qualifiedname>KWin::InputRedirection::m_spies</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="281" column="11" bodyfile="kwin/src/input.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1abc9a7330fa38b0a10ac45b102994609e" prot="private" static="no" mutable="no">
        <type>KConfigWatcher::Ptr</type>
        <definition>KConfigWatcher::Ptr KWin::InputRedirection::m_inputConfigWatcher</definition>
        <argsstring></argsstring>
        <name>m_inputConfigWatcher</name>
        <qualifiedname>KWin::InputRedirection::m_inputConfigWatcher</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="282" column="25" bodyfile="kwin/src/input.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a1fbff45f5bb4e72521f4fcd5367f223c" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventFilter&gt; KWin::InputRedirection::m_virtualTerminalFilter</definition>
        <argsstring></argsstring>
        <name>m_virtualTerminalFilter</name>
        <qualifiedname>KWin::InputRedirection::m_virtualTerminalFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="284" column="21" bodyfile="kwin/src/input.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a814bf86a1dbaee97da3e37783bac785d" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventFilter&gt; KWin::InputRedirection::m_dragAndDropFilter</definition>
        <argsstring></argsstring>
        <name>m_dragAndDropFilter</name>
        <qualifiedname>KWin::InputRedirection::m_dragAndDropFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="285" column="21" bodyfile="kwin/src/input.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a6844af40f2aebb951dbbbe9f3c8a5956" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventFilter&gt; KWin::InputRedirection::m_screenEdgeFilter</definition>
        <argsstring></argsstring>
        <name>m_screenEdgeFilter</name>
        <qualifiedname>KWin::InputRedirection::m_screenEdgeFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="289" column="21" bodyfile="kwin/src/input.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a8b1810e5038c6b21ad400b29e7659ae1" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventFilter&gt; KWin::InputRedirection::m_tabboxFilter</definition>
        <argsstring></argsstring>
        <name>m_tabboxFilter</name>
        <qualifiedname>KWin::InputRedirection::m_tabboxFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="290" column="21" bodyfile="kwin/src/input.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1aec4059ec63398a2faa9260fa5cf119e0" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventFilter&gt; KWin::InputRedirection::m_globalShortcutFilter</definition>
        <argsstring></argsstring>
        <name>m_globalShortcutFilter</name>
        <qualifiedname>KWin::InputRedirection::m_globalShortcutFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="291" column="21" bodyfile="kwin/src/input.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a2300db1167431db3e38aa4baba8233a2" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventFilter&gt; KWin::InputRedirection::m_effectsFilter</definition>
        <argsstring></argsstring>
        <name>m_effectsFilter</name>
        <qualifiedname>KWin::InputRedirection::m_effectsFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="292" column="21" bodyfile="kwin/src/input.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1ad8ee5374d358e83e388aa49958abd5a0" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventFilter&gt; KWin::InputRedirection::m_interactiveMoveResizeFilter</definition>
        <argsstring></argsstring>
        <name>m_interactiveMoveResizeFilter</name>
        <qualifiedname>KWin::InputRedirection::m_interactiveMoveResizeFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="293" column="21" bodyfile="kwin/src/input.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1aa4c0435d0af61fa5648173a5c7936ccf" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventFilter&gt; KWin::InputRedirection::m_popupFilter</definition>
        <argsstring></argsstring>
        <name>m_popupFilter</name>
        <qualifiedname>KWin::InputRedirection::m_popupFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="294" column="21" bodyfile="kwin/src/input.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a9f0296963fff20ea5fe3d8a422b9b6db" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventFilter&gt; KWin::InputRedirection::m_decorationFilter</definition>
        <argsstring></argsstring>
        <name>m_decorationFilter</name>
        <qualifiedname>KWin::InputRedirection::m_decorationFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="295" column="21" bodyfile="kwin/src/input.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a45d2c73bd861490c4cd30b6d25a37048" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventFilter&gt; KWin::InputRedirection::m_windowActionFilter</definition>
        <argsstring></argsstring>
        <name>m_windowActionFilter</name>
        <qualifiedname>KWin::InputRedirection::m_windowActionFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="296" column="21" bodyfile="kwin/src/input.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a4ab7aeea4ec884c90e6fface9e3c1cc9" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventFilter&gt; KWin::InputRedirection::m_internalWindowFilter</definition>
        <argsstring></argsstring>
        <name>m_internalWindowFilter</name>
        <qualifiedname>KWin::InputRedirection::m_internalWindowFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="297" column="21" bodyfile="kwin/src/input.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a73523229ddc403dd26b62ed217de0cce" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventFilter&gt; KWin::InputRedirection::m_inputKeyboardFilter</definition>
        <argsstring></argsstring>
        <name>m_inputKeyboardFilter</name>
        <qualifiedname>KWin::InputRedirection::m_inputKeyboardFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="298" column="21" bodyfile="kwin/src/input.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1ad9c9087e5f06ebb4e67777a88a0fe429" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventFilter&gt; KWin::InputRedirection::m_forwardFilter</definition>
        <argsstring></argsstring>
        <name>m_forwardFilter</name>
        <qualifiedname>KWin::InputRedirection::m_forwardFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="299" column="21" bodyfile="kwin/src/input.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a11eb8ac9e095c124a21e8e9ff13e6b63" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_spy" kindref="compound">InputEventSpy</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventSpy&gt; KWin::InputRedirection::m_hideCursorSpy</definition>
        <argsstring></argsstring>
        <name>m_hideCursorSpy</name>
        <qualifiedname>KWin::InputRedirection::m_hideCursorSpy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="301" column="21" bodyfile="kwin/src/input.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a2b579029fe72804301861c32f8efd4cc" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_spy" kindref="compound">InputEventSpy</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventSpy&gt; KWin::InputRedirection::m_userActivitySpy</definition>
        <argsstring></argsstring>
        <name>m_userActivitySpy</name>
        <qualifiedname>KWin::InputRedirection::m_userActivitySpy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="302" column="21" bodyfile="kwin/src/input.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a6df350018a55d13fbef72d14048a373f" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_event_spy" kindref="compound">InputEventSpy</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputEventSpy&gt; KWin::InputRedirection::m_windowInteractedSpy</definition>
        <argsstring></argsstring>
        <name>m_windowInteractedSpy</name>
        <qualifiedname>KWin::InputRedirection::m_windowInteractedSpy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="303" column="21" bodyfile="kwin/src/input.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a2def09b76157c77a496352a35f26e92c" prot="private" static="no" mutable="no">
        <type>LEDs</type>
        <definition>LEDs KWin::InputRedirection::m_leds</definition>
        <argsstring></argsstring>
        <name>m_leds</name>
        <qualifiedname>KWin::InputRedirection::m_leds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="305" column="10" bodyfile="kwin/src/input.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a3687dbea380f9bca353dac4e8739208e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::InputRedirection::m_hasKeyboard</definition>
        <argsstring></argsstring>
        <name>m_hasKeyboard</name>
        <qualifiedname>KWin::InputRedirection::m_hasKeyboard</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="306" column="10" bodyfile="kwin/src/input.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a08b221b6ce7a7ebcefcfd1a73f77c538" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::InputRedirection::m_hasPointer</definition>
        <argsstring></argsstring>
        <name>m_hasPointer</name>
        <qualifiedname>KWin::InputRedirection::m_hasPointer</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="307" column="10" bodyfile="kwin/src/input.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1a5f5dce042889e075758621085d218be0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::InputRedirection::m_hasTouch</definition>
        <argsstring></argsstring>
        <name>m_hasTouch</name>
        <qualifiedname>KWin::InputRedirection::m_hasTouch</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="308" column="10" bodyfile="kwin/src/input.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_input_redirection_1ae95f16608d8325278d2dece8ddc7289d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::InputRedirection::m_hasTabletModeSwitch</definition>
        <argsstring></argsstring>
        <name>m_hasTabletModeSwitch</name>
        <qualifiedname>KWin::InputRedirection::m_hasTabletModeSwitch</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="309" column="10" bodyfile="kwin/src/input.h" bodystart="309" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_k_win_1_1_input_redirection_1a70264a97109d9fd0b8611f2d65f10638" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class DecorationEventFilter</definition>
        <argsstring></argsstring>
        <name>DecorationEventFilter</name>
        <qualifiedname>KWin::InputRedirection::DecorationEventFilter</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_decoration_event_filter" kindref="compound">DecorationEventFilter</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="313" column="18" bodyfile="kwin/src/input.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_k_win_1_1_input_redirection_1a68d4684e2bc270508f4921fb26a440ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class InternalWindowEventFilter</definition>
        <argsstring></argsstring>
        <name>InternalWindowEventFilter</name>
        <qualifiedname>KWin::InputRedirection::InternalWindowEventFilter</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_internal_window_event_filter" kindref="compound">InternalWindowEventFilter</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="314" column="18" bodyfile="kwin/src/input.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_k_win_1_1_input_redirection_1a2da48cd8554ff37a33abf8a5889dd92d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class ForwardInputFilter</definition>
        <argsstring></argsstring>
        <name>ForwardInputFilter</name>
        <qualifiedname>KWin::InputRedirection::ForwardInputFilter</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_forward_input_filter" kindref="compound">ForwardInputFilter</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="315" column="18" bodyfile="kwin/src/input.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_k_win_1_1_input_redirection_1afbc0d3ccf7cd746dda8dcf72e5ef6cdc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_input_redirection" kindref="compound">InputRedirection</ref> *</type>
        <definition>InputRedirection * input</definition>
        <argsstring>()</argsstring>
        <name>input</name>
        <qualifiedname>KWin::InputRedirection::input</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="312" column="29" bodyfile="kwin/src/input.h" bodystart="530" bodyend="533"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a8fcc93bb1d10727144819a30a211ead3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::InputRedirection::~InputRedirection</definition>
        <argsstring>() override</argsstring>
        <name>~InputRedirection</name>
        <qualifiedname>KWin::InputRedirection::~InputRedirection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="78" column="5" bodyfile="kwin/src/input.cpp" bodystart="2822" bodyend="2828"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a3d8dd202544d7da4b89474bbeec9d882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>KWin::InputRedirection::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="79" column="10" bodyfile="kwin/src/input.cpp" bodystart="2855" bodyend="2863"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1af79f50358d894b276f36aaf02d386947" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF KWin::InputRedirection::globalPointer</definition>
        <argsstring>() const</argsstring>
        <name>globalPointer</name>
        <qualifiedname>KWin::InputRedirection::globalPointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const QPointF&amp; The current global pointer position </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="84" column="13" bodyfile="kwin/src/input.cpp" bodystart="3479" bodyend="3482"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a7eb995003eabae0a699fe7003179c42b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Qt::MouseButtons</type>
        <definition>Qt::MouseButtons KWin::InputRedirection::qtButtonStates</definition>
        <argsstring>() const</argsstring>
        <name>qtButtonStates</name>
        <qualifiedname>KWin::InputRedirection::qtButtonStates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="85" column="22" bodyfile="kwin/src/input.cpp" bodystart="3319" bodyend="3322"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a95d5ccabfaa4a8cb034bb4e96959e7d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Qt::KeyboardModifiers</type>
        <definition>Qt::KeyboardModifiers KWin::InputRedirection::keyboardModifiers</definition>
        <argsstring>() const</argsstring>
        <name>keyboardModifiers</name>
        <qualifiedname>KWin::InputRedirection::keyboardModifiers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="86" column="27" bodyfile="kwin/src/input.cpp" bodystart="3410" bodyend="3413"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1abbd6b8583398b8c63085b8e1f3deadbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Qt::KeyboardModifiers</type>
        <definition>Qt::KeyboardModifiers KWin::InputRedirection::modifiersRelevantForGlobalShortcuts</definition>
        <argsstring>() const</argsstring>
        <name>modifiersRelevantForGlobalShortcuts</name>
        <qualifiedname>KWin::InputRedirection::modifiersRelevantForGlobalShortcuts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="87" column="27" bodyfile="kwin/src/input.cpp" bodystart="3415" bodyend="3418"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a0560a20eeb52d5fcfaf3f396a87d0dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::registerPointerShortcut</definition>
        <argsstring>(Qt::KeyboardModifiers modifiers, Qt::MouseButton pointerButtons, QAction *action)</argsstring>
        <name>registerPointerShortcut</name>
        <qualifiedname>KWin::InputRedirection::registerPointerShortcut</qualifiedname>
        <param>
          <type>Qt::KeyboardModifiers</type>
          <declname>modifiers</declname>
        </param>
        <param>
          <type>Qt::MouseButton</type>
          <declname>pointerButtons</declname>
        </param>
        <param>
          <type>QAction *</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="89" column="10" bodyfile="kwin/src/input.cpp" bodystart="3420" bodyend="3425"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a5201ae78ff3397c97d658fd659a2c41f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::registerAxisShortcut</definition>
        <argsstring>(Qt::KeyboardModifiers modifiers, PointerAxisDirection axis, QAction *action)</argsstring>
        <name>registerAxisShortcut</name>
        <qualifiedname>KWin::InputRedirection::registerAxisShortcut</qualifiedname>
        <param>
          <type>Qt::KeyboardModifiers</type>
          <declname>modifiers</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a0b8440dc0ffe9aa219e0c0e5fa1137a0" kindref="member">PointerAxisDirection</ref></type>
          <declname>axis</declname>
        </param>
        <param>
          <type>QAction *</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="90" column="10" bodyfile="kwin/src/input.cpp" bodystart="3427" bodyend="3432"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a7caf1163636cc26c9b68285c349f2a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::registerTouchpadSwipeShortcut</definition>
        <argsstring>(SwipeDirection direction, uint32_t fingerCount, QAction *onUp, std::function&lt; void(qreal)&gt; progressCallback={})</argsstring>
        <name>registerTouchpadSwipeShortcut</name>
        <qualifiedname>KWin::InputRedirection::registerTouchpadSwipeShortcut</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>QAction *</type>
          <declname>onUp</declname>
        </param>
        <param>
          <type>std::function&lt; void(qreal)&gt;</type>
          <declname>progressCallback</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="91" column="10" bodyfile="kwin/src/input.cpp" bodystart="3434" bodyend="3439"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a67077fd387ec37d737f536d8b796497e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::registerTouchpadPinchShortcut</definition>
        <argsstring>(PinchDirection direction, uint32_t fingerCount, QAction *onUp, std::function&lt; void(qreal)&gt; progressCallback={})</argsstring>
        <name>registerTouchpadPinchShortcut</name>
        <qualifiedname>KWin::InputRedirection::registerTouchpadPinchShortcut</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a8852f83038eda36bc255d8f5f3baae05" kindref="member">PinchDirection</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>QAction *</type>
          <declname>onUp</declname>
        </param>
        <param>
          <type>std::function&lt; void(qreal)&gt;</type>
          <declname>progressCallback</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="92" column="10" bodyfile="kwin/src/input.cpp" bodystart="3441" bodyend="3446"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a10ceda2362de198cb4e7e14726e300b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::registerTouchscreenSwipeShortcut</definition>
        <argsstring>(SwipeDirection direction, uint32_t fingerCount, QAction *action, std::function&lt; void(qreal)&gt; progressCallback={})</argsstring>
        <name>registerTouchscreenSwipeShortcut</name>
        <qualifiedname>KWin::InputRedirection::registerTouchscreenSwipeShortcut</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>QAction *</type>
          <declname>action</declname>
        </param>
        <param>
          <type>std::function&lt; void(qreal)&gt;</type>
          <declname>progressCallback</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="93" column="10" bodyfile="kwin/src/input.cpp" bodystart="3455" bodyend="3460"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a9bb700ffee83add3dbdef2e71cd5660d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::forceRegisterTouchscreenSwipeShortcut</definition>
        <argsstring>(SwipeDirection direction, uint32_t fingerCount, QAction *action, std::function&lt; void(qreal)&gt; progressCallback={})</argsstring>
        <name>forceRegisterTouchscreenSwipeShortcut</name>
        <qualifiedname>KWin::InputRedirection::forceRegisterTouchscreenSwipeShortcut</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>QAction *</type>
          <declname>action</declname>
        </param>
        <param>
          <type>std::function&lt; void(qreal)&gt;</type>
          <declname>progressCallback</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="94" column="10" bodyfile="kwin/src/input.cpp" bodystart="3462" bodyend="3467"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1ab94715019245ea02da2f675082a53095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::registerGlobalAccel</definition>
        <argsstring>(KGlobalAccelInterface *interface)</argsstring>
        <name>registerGlobalAccel</name>
        <qualifiedname>KWin::InputRedirection::registerGlobalAccel</qualifiedname>
        <param>
          <type>KGlobalAccelInterface *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="95" column="10" bodyfile="kwin/src/input.cpp" bodystart="3448" bodyend="3453"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a37465aaedbe8f64e75a92d760a5bf0af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::InputRedirection::supportsPointerWarping</definition>
        <argsstring>() const</argsstring>
        <name>supportsPointerWarping</name>
        <qualifiedname>KWin::InputRedirection::supportsPointerWarping</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="97" column="10" bodyfile="kwin/src/input.cpp" bodystart="3474" bodyend="3477"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1aa57c43682e0dc7f2fa1f3b0054f9b86a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::warpPointer</definition>
        <argsstring>(const QPointF &amp;pos)</argsstring>
        <name>warpPointer</name>
        <qualifiedname>KWin::InputRedirection::warpPointer</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="98" column="10" bodyfile="kwin/src/input.cpp" bodystart="3469" bodyend="3472"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::installInputEventFilter</definition>
        <argsstring>(InputEventFilter *filter)</argsstring>
        <name>installInputEventFilter</name>
        <qualifiedname>KWin::InputRedirection::installInputEventFilter</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="100" column="10" bodyfile="kwin/src/input.cpp" bodystart="2830" bodyend="2838"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a702b94b4e3746a0ee81c3989a219d891" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::uninstallInputEventFilter</definition>
        <argsstring>(InputEventFilter *filter)</argsstring>
        <name>uninstallInputEventFilter</name>
        <qualifiedname>KWin::InputRedirection::uninstallInputEventFilter</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="101" column="10" bodyfile="kwin/src/input.cpp" bodystart="2840" bodyend="2843"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a120eae6615da47a1bc5b86b7387ababd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::installInputEventSpy</definition>
        <argsstring>(InputEventSpy *spy)</argsstring>
        <name>installInputEventSpy</name>
        <qualifiedname>KWin::InputRedirection::installInputEventSpy</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_input_event_spy" kindref="compound">InputEventSpy</ref> *</type>
          <declname>spy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Installs the <computeroutput>spy</computeroutput> for spying on events. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="106" column="10" bodyfile="kwin/src/input.cpp" bodystart="2845" bodyend="2848"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1ab671ac5694d6b546af8715e047ef3647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::uninstallInputEventSpy</definition>
        <argsstring>(InputEventSpy *spy)</argsstring>
        <name>uninstallInputEventSpy</name>
        <qualifiedname>KWin::InputRedirection::uninstallInputEventSpy</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_input_event_spy" kindref="compound">InputEventSpy</ref> *</type>
          <declname>spy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Uninstalls the <computeroutput>spy</computeroutput>. This happens automatically when deleting an <ref refid="class_k_win_1_1_input_event_spy" kindref="compound">InputEventSpy</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="111" column="10" bodyfile="kwin/src/input.cpp" bodystart="2850" bodyend="2853"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a6779f3140053cb30ee8314c34536e8c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::simulateUserActivity</definition>
        <argsstring>()</argsstring>
        <name>simulateUserActivity</name>
        <qualifiedname>KWin::InputRedirection::simulateUserActivity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="113" column="10" bodyfile="kwin/src/input.cpp" bodystart="3324" bodyend="3330"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a014def7aae023556e9078f7468437146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::addIdleDetector</definition>
        <argsstring>(IdleDetector *detector)</argsstring>
        <name>addIdleDetector</name>
        <qualifiedname>KWin::InputRedirection::addIdleDetector</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_idle_detector" kindref="compound">IdleDetector</ref> *</type>
          <declname>detector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="115" column="10" bodyfile="kwin/src/input.cpp" bodystart="3332" bodyend="3337"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a4714c16eefbfd9ea747ef3d120c59d72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::removeIdleDetector</definition>
        <argsstring>(IdleDetector *detector)</argsstring>
        <name>removeIdleDetector</name>
        <qualifiedname>KWin::InputRedirection::removeIdleDetector</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_idle_detector" kindref="compound">IdleDetector</ref> *</type>
          <declname>detector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="116" column="10" bodyfile="kwin/src/input.cpp" bodystart="3339" bodyend="3342"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a4e039e826153ec53d521c71ea6ab00a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt;</type>
        <definition>QList&lt; Window * &gt; KWin::InputRedirection::idleInhibitors</definition>
        <argsstring>() const</argsstring>
        <name>idleInhibitors</name>
        <qualifiedname>KWin::InputRedirection::idleInhibitors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="118" column="11" bodyfile="kwin/src/input.cpp" bodystart="3344" bodyend="3347"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a3edf4ca9576c5111a5692191e07ce57f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::addIdleInhibitor</definition>
        <argsstring>(Window *inhibitor)</argsstring>
        <name>addIdleInhibitor</name>
        <qualifiedname>KWin::InputRedirection::addIdleInhibitor</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>inhibitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="119" column="10" bodyfile="kwin/src/input.cpp" bodystart="3349" bodyend="3357"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1affa5c5d60c1cd1d296d1e45f7e242d8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::removeIdleInhibitor</definition>
        <argsstring>(Window *inhibitor)</argsstring>
        <name>removeIdleInhibitor</name>
        <qualifiedname>KWin::InputRedirection::removeIdleInhibitor</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>inhibitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="120" column="10" bodyfile="kwin/src/input.cpp" bodystart="3359" bodyend="3366"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1abe58b9b1da907bb38f10ac4eac78f4db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::InputRedirection::findToplevel</definition>
        <argsstring>(const QPointF &amp;pos)</argsstring>
        <name>findToplevel</name>
        <qualifiedname>KWin::InputRedirection::findToplevel</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="122" column="12" bodyfile="kwin/src/input.cpp" bodystart="3368" bodyend="3408"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_global_shortcuts_manager" kindref="compound">GlobalShortcutsManager</ref> *</type>
        <definition>GlobalShortcutsManager * KWin::InputRedirection::shortcuts</definition>
        <argsstring>() const</argsstring>
        <name>shortcuts</name>
        <qualifiedname>KWin::InputRedirection::shortcuts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="123" column="28" bodyfile="kwin/src/input.h" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a725a24b7fb60484bd6ec55a85c845e43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class UnaryPredicate</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void KWin::InputRedirection::processFilters</definition>
        <argsstring>(UnaryPredicate function)</argsstring>
        <name>processFilters</name>
        <qualifiedname>KWin::InputRedirection::processFilters</qualifiedname>
        <param>
          <type>UnaryPredicate</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends an event through all InputFilters. The method <computeroutput>function</computeroutput> is invoked on each input filter. Processing is stopped if a filter returns <computeroutput>true</computeroutput> for <computeroutput>function</computeroutput>.</para>
<para>The signature of the function should be equivalent to the following: <programlisting><codeline><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>function(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputEventFilter<sp/>*spy);</highlight></codeline>
</programlisting></para>
<para>The intended usage is to std::bind the method to invoke on the filter with all arguments bind. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="142" column="10" bodyfile="kwin/src/input.h" bodystart="142" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a51a5e831bd16e20e71dd4c904ef8f450" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class UnaryFunction</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void KWin::InputRedirection::processSpies</definition>
        <argsstring>(UnaryFunction function)</argsstring>
        <name>processSpies</name>
        <qualifiedname>KWin::InputRedirection::processSpies</qualifiedname>
        <param>
          <type>UnaryFunction</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends an event through all input event spies. The <computeroutput>function</computeroutput> is invoked on each <ref refid="class_k_win_1_1_input_event_spy" kindref="compound">InputEventSpy</ref>.</para>
<para>The UnaryFunction is defined like the UnaryFunction of std::for_each. The signature of the function should be equivalent to the following: <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>function(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputEventSpy<sp/>*spy);</highlight></codeline>
</programlisting></para>
<para>The intended usage is to std::bind the method to invoke on the spies with all arguments bind. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="165" column="10" bodyfile="kwin/src/input.h" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a246b282229b36fc27552487cdd3329d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_keyboard_input_redirection" kindref="compound">KeyboardInputRedirection</ref> *</type>
        <definition>KeyboardInputRedirection * KWin::InputRedirection::keyboard</definition>
        <argsstring>() const</argsstring>
        <name>keyboard</name>
        <qualifiedname>KWin::InputRedirection::keyboard</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="170" column="30" bodyfile="kwin/src/input.h" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_pointer_input_redirection" kindref="compound">PointerInputRedirection</ref> *</type>
        <definition>PointerInputRedirection * KWin::InputRedirection::pointer</definition>
        <argsstring>() const</argsstring>
        <name>pointer</name>
        <qualifiedname>KWin::InputRedirection::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="174" column="29" bodyfile="kwin/src/input.h" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a28bdc8ee4d962d43d5d8c31411c0569e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_tablet_input_redirection" kindref="compound">TabletInputRedirection</ref> *</type>
        <definition>TabletInputRedirection * KWin::InputRedirection::tablet</definition>
        <argsstring>() const</argsstring>
        <name>tablet</name>
        <qualifiedname>KWin::InputRedirection::tablet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="178" column="28" bodyfile="kwin/src/input.h" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a4c3552afead055652bc9dbbd47512c85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_touch_input_redirection" kindref="compound">TouchInputRedirection</ref> *</type>
        <definition>TouchInputRedirection * KWin::InputRedirection::touch</definition>
        <argsstring>() const</argsstring>
        <name>touch</name>
        <qualifiedname>KWin::InputRedirection::touch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="182" column="27" bodyfile="kwin/src/input.h" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a9c1edee99ea1079725875074997acf1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::setLastInputHandler</definition>
        <argsstring>(QObject *device)</argsstring>
        <name>setLastInputHandler</name>
        <qualifiedname>KWin::InputRedirection::setLastInputHandler</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies which was the device that triggered the last input event </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="190" column="10" bodyfile="kwin/src/input.cpp" bodystart="2894" bodyend="2897"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a7c1d16860aaa4196eff4188061c6610c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QObject *</type>
        <definition>QObject * KWin::InputRedirection::lastInputHandler</definition>
        <argsstring>() const</argsstring>
        <name>lastInputHandler</name>
        <qualifiedname>KWin::InputRedirection::lastInputHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="191" column="13" bodyfile="kwin/src/input.cpp" bodystart="2889" bodyend="2892"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a1cfcf14e3f1f449851d2b9149c58ee5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> * &gt;</type>
        <definition>QList&lt; InputDevice * &gt; KWin::InputRedirection::devices</definition>
        <argsstring>() const</argsstring>
        <name>devices</name>
        <qualifiedname>KWin::InputRedirection::devices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="193" column="11" bodyfile="kwin/src/input.h" bodystart="535" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a0d68c4460076b0995c009c50baeeffba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::InputRedirection::hasAlphaNumericKeyboard</definition>
        <argsstring>()</argsstring>
        <name>hasAlphaNumericKeyboard</name>
        <qualifiedname>KWin::InputRedirection::hasAlphaNumericKeyboard</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="195" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a986f23cda629c5916b6203642aa7faa0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::InputRedirection::hasPointer</definition>
        <argsstring>() const</argsstring>
        <name>hasPointer</name>
        <qualifiedname>KWin::InputRedirection::hasPointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="196" column="10" bodyfile="kwin/src/input.cpp" bodystart="3304" bodyend="3307"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1adcb3f54996dd1bf70073076c50778769" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::InputRedirection::hasTouch</definition>
        <argsstring>() const</argsstring>
        <name>hasTouch</name>
        <qualifiedname>KWin::InputRedirection::hasTouch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="197" column="10" bodyfile="kwin/src/input.cpp" bodystart="3309" bodyend="3312"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a595aef9d04d9840c88348b8b733933c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::InputRedirection::hasTabletModeSwitch</definition>
        <argsstring>()</argsstring>
        <name>hasTabletModeSwitch</name>
        <qualifiedname>KWin::InputRedirection::hasTabletModeSwitch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="198" column="10" bodyfile="kwin/src/input.cpp" bodystart="3314" bodyend="3317"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1af7002d3d0260d2846e0f613d6d6b7656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::startInteractiveWindowSelection</definition>
        <argsstring>(std::function&lt; void(KWin::Window *)&gt; callback, const QByteArray &amp;cursorName)</argsstring>
        <name>startInteractiveWindowSelection</name>
        <qualifiedname>KWin::InputRedirection::startInteractiveWindowSelection</qualifiedname>
        <param>
          <type>std::function&lt; void(<ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref> *)&gt;</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>const QByteArray &amp;</type>
          <declname>cursorName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="200" column="10" bodyfile="kwin/src/input.cpp" bodystart="3484" bodyend="3492"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1ad4c28557f4e7c7b3d3d7cb0cd1e4323a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::startInteractivePositionSelection</definition>
        <argsstring>(std::function&lt; void(const QPoint &amp;)&gt; callback)</argsstring>
        <name>startInteractivePositionSelection</name>
        <qualifiedname>KWin::InputRedirection::startInteractivePositionSelection</qualifiedname>
        <param>
          <type>std::function&lt; void(const QPoint &amp;)&gt;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="201" column="10" bodyfile="kwin/src/input.cpp" bodystart="3494" bodyend="3502"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1af31ac695fd107e559b4f80cc62261bc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::InputRedirection::isSelectingWindow</definition>
        <argsstring>() const</argsstring>
        <name>isSelectingWindow</name>
        <qualifiedname>KWin::InputRedirection::isSelectingWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="202" column="10" bodyfile="kwin/src/input.cpp" bodystart="3504" bodyend="3507"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a6810724dbe269ec24c28a9abb904e42b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::addInputDevice</definition>
        <argsstring>(InputDevice *device)</argsstring>
        <name>addInputDevice</name>
        <qualifiedname>KWin::InputRedirection::addInputDevice</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="204" column="10" bodyfile="kwin/src/input.cpp" bodystart="3163" bodyend="3237"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a23b8f0260935a76ae54359f801916716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::removeInputDevice</definition>
        <argsstring>(InputDevice *device)</argsstring>
        <name>removeInputDevice</name>
        <qualifiedname>KWin::InputRedirection::removeInputDevice</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="205" column="10" bodyfile="kwin/src/input.cpp" bodystart="3239" bodyend="3245"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1a7dd0de7cdfb0344f7361c4c770c5d973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::addInputBackend</definition>
        <argsstring>(std::unique_ptr&lt; InputBackend &gt; &amp;&amp;inputBackend)</argsstring>
        <name>addInputBackend</name>
        <qualifiedname>KWin::InputRedirection::addInputBackend</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_backend" kindref="compound">InputBackend</ref> &gt; &amp;&amp;</type>
          <declname>inputBackend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="206" column="10" bodyfile="kwin/src/input.cpp" bodystart="3282" bodyend="3291"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_input_redirection_1a17f7b2bbc9947927d26a0c97197e06a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::deviceAdded</definition>
        <argsstring>(InputDevice *device)</argsstring>
        <name>deviceAdded</name>
        <qualifiedname>KWin::InputRedirection::deviceAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="209" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_redirection_1a3e47d4e8b771fa66d335b484290da827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::deviceRemoved</definition>
        <argsstring>(InputDevice *device)</argsstring>
        <name>deviceRemoved</name>
        <qualifiedname>KWin::InputRedirection::deviceRemoved</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="210" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_redirection_1a4bc2b3a7895527356a967792f8a750ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::globalPointerChanged</definition>
        <argsstring>(const QPointF &amp;pos)</argsstring>
        <name>globalPointerChanged</name>
        <qualifiedname>KWin::InputRedirection::globalPointerChanged</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Emitted when the global pointer position changed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The new global pointer position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="216" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_redirection_1af40bc7ced170b3ca4c21cdbee67af7f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::pointerButtonStateChanged</definition>
        <argsstring>(uint32_t button, PointerButtonState state)</argsstring>
        <name>pointerButtonStateChanged</name>
        <qualifiedname>KWin::InputRedirection::pointerButtonStateChanged</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>button</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3" kindref="member">PointerButtonState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Emitted when the state of a pointer button changed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>The button which changed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The new button state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="223" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_redirection_1acd8b6aa5188ed69aab22752437e7ea0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::pointerAxisChanged</definition>
        <argsstring>(PointerAxis axis, qreal delta)</argsstring>
        <name>pointerAxisChanged</name>
        <qualifiedname>KWin::InputRedirection::pointerAxisChanged</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1aec4516626e95b6dc22c614c769a43590" kindref="member">PointerAxis</ref></type>
          <declname>axis</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
<para>Emitted when a pointer axis changed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>The axis on which the even occurred </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delta</parametername>
</parameternamelist>
<parameterdescription>
<para>The delta of the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="230" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_redirection_1a46a9b495e85862c29e63a8ef8eb4e5d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::keyboardModifiersChanged</definition>
        <argsstring>(Qt::KeyboardModifiers newMods, Qt::KeyboardModifiers oldMods)</argsstring>
        <name>keyboardModifiersChanged</name>
        <qualifiedname>KWin::InputRedirection::keyboardModifiersChanged</qualifiedname>
        <param>
          <type>Qt::KeyboardModifiers</type>
          <declname>newMods</declname>
        </param>
        <param>
          <type>Qt::KeyboardModifiers</type>
          <declname>oldMods</declname>
        </param>
        <briefdescription>
<para>Emitted when the modifiers changes. </para>
        </briefdescription>
        <detaileddescription>
<para>Only emitted for the mask which is provided by Qt::KeyboardModifiers, if other modifiers change signal is not emitted</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newMods</parametername>
</parameternamelist>
<parameterdescription>
<para>The new modifiers state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldMods</parametername>
</parameternamelist>
<parameterdescription>
<para>The previous modifiers state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="240" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_redirection_1a57a9fe84b16000ecf0f75003163b3eaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::keyStateChanged</definition>
        <argsstring>(quint32 keyCode, KeyboardKeyState state)</argsstring>
        <name>keyStateChanged</name>
        <qualifiedname>KWin::InputRedirection::keyStateChanged</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>keyCode</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1" kindref="member">KeyboardKeyState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Emitted when the state of a key changed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyCode</parametername>
</parameternamelist>
<parameterdescription>
<para>The keycode of the key which changed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The new key state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="247" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_redirection_1a90e01d369c061da9cf5ccd21204d1f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::hasKeyboardChanged</definition>
        <argsstring>(bool set)</argsstring>
        <name>hasKeyboardChanged</name>
        <qualifiedname>KWin::InputRedirection::hasKeyboardChanged</qualifiedname>
        <param>
          <type>bool</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="249" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_redirection_1ad70744011956bcd5c87f6f6d9f60042c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::hasAlphaNumericKeyboardChanged</definition>
        <argsstring>(bool set)</argsstring>
        <name>hasAlphaNumericKeyboardChanged</name>
        <qualifiedname>KWin::InputRedirection::hasAlphaNumericKeyboardChanged</qualifiedname>
        <param>
          <type>bool</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="250" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_redirection_1a69724b4815b9560d1ce0fde10991dc2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::hasPointerChanged</definition>
        <argsstring>(bool set)</argsstring>
        <name>hasPointerChanged</name>
        <qualifiedname>KWin::InputRedirection::hasPointerChanged</qualifiedname>
        <param>
          <type>bool</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="251" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_redirection_1a901171f39665bf42ea0e003ae0f2046e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::hasTouchChanged</definition>
        <argsstring>(bool set)</argsstring>
        <name>hasTouchChanged</name>
        <qualifiedname>KWin::InputRedirection::hasTouchChanged</qualifiedname>
        <param>
          <type>bool</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="252" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_input_redirection_1a2b7aa4aa7406afd3f67e43ada5dcb5df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::hasTabletModeSwitchChanged</definition>
        <argsstring>(bool set)</argsstring>
        <name>hasTabletModeSwitchChanged</name>
        <qualifiedname>KWin::InputRedirection::hasTabletModeSwitchChanged</qualifiedname>
        <param>
          <type>bool</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="253" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_input_redirection_1a2f68373394534f60650f0c55e35b43a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::handleInputConfigChanged</definition>
        <argsstring>(const KConfigGroup &amp;group)</argsstring>
        <name>handleInputConfigChanged</name>
        <qualifiedname>KWin::InputRedirection::handleInputConfigChanged</qualifiedname>
        <param>
          <type>const KConfigGroup &amp;</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="256" column="10" bodyfile="kwin/src/input.cpp" bodystart="3145" bodyend="3150"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_input_redirection_1a3a54b49511744cbf1873dbe8f8bdfb26" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::updateScreens</definition>
        <argsstring>()</argsstring>
        <name>updateScreens</name>
        <qualifiedname>KWin::InputRedirection::updateScreens</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="257" column="10" bodyfile="kwin/src/input.cpp" bodystart="2882" bodyend="2887"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1ad25bf06bc2ee496d3492ffff10b9def6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::setupInputBackends</definition>
        <argsstring>()</argsstring>
        <name>setupInputBackends</name>
        <qualifiedname>KWin::InputRedirection::setupInputBackends</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="260" column="10" bodyfile="kwin/src/input.cpp" bodystart="3293" bodyend="3302"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1ae7ffdf750e12059b8fa965c066e662ca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::setupWorkspace</definition>
        <argsstring>()</argsstring>
        <name>setupWorkspace</name>
        <qualifiedname>KWin::InputRedirection::setupWorkspace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="261" column="10" bodyfile="kwin/src/input.cpp" bodystart="2865" bodyend="2880"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1aa6fc15cd1ea4eda908c6bd96a903b70f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::setupInputFilters</definition>
        <argsstring>()</argsstring>
        <name>setupInputFilters</name>
        <qualifiedname>KWin::InputRedirection::setupInputFilters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="262" column="10" bodyfile="kwin/src/input.cpp" bodystart="3077" bodyend="3143"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1af4092c2317a0cf0dbcd3bee8d31401d1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::updateLeds</definition>
        <argsstring>(LEDs leds)</argsstring>
        <name>updateLeds</name>
        <qualifiedname>KWin::InputRedirection::updateLeds</qualifiedname>
        <param>
          <type>LEDs</type>
          <declname>leds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="263" column="10" bodyfile="kwin/src/input.cpp" bodystart="3152" bodyend="3161"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_redirection_1ae2e352d088fb6f0e89dcc45fa581c79a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputRedirection::updateAvailableInputDevices</definition>
        <argsstring>()</argsstring>
        <name>updateAvailableInputDevices</name>
        <qualifiedname>KWin::InputRedirection::updateAvailableInputDevices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="264" column="10" bodyfile="kwin/src/input.cpp" bodystart="3247" bodyend="3280"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>This class is responsible for redirecting incoming input to the surface which currently has input or send enter/leave events. </para>
    </briefdescription>
    <detaileddescription>
<para>In addition input is intercepted before passed to the surfaces to have <ref refid="namespace_k_win" kindref="compound">KWin</ref> internal areas getting input first (e.g. screen edges) and filter the input event out if we currently have a full input grab. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::InputRedirection</label>
        <link refid="class_k_win_1_1_input_redirection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::InputRedirection</label>
        <link refid="class_k_win_1_1_input_redirection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/input.h" line="74" column="1" bodyfile="kwin/src/input.h" bodystart="75" bodyend="316"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_input_redirection_1a014def7aae023556e9078f7468437146" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>addIdleDetector</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a3edf4ca9576c5111a5692191e07ce57f" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>addIdleInhibitor</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a7dd0de7cdfb0344f7361c4c770c5d973" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>addInputBackend</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a6810724dbe269ec24c28a9abb904e42b" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>addInputDevice</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a70264a97109d9fd0b8611f2d65f10638" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>DecorationEventFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a17f7b2bbc9947927d26a0c97197e06a0" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>deviceAdded</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a3e47d4e8b771fa66d335b484290da827" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>deviceRemoved</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a1cfcf14e3f1f449851d2b9149c58ee5e" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>devices</name></member>
      <member refid="class_k_win_1_1_input_redirection_1abe58b9b1da907bb38f10ac4eac78f4db" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>findToplevel</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a9bb700ffee83add3dbdef2e71cd5660d" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>forceRegisterTouchscreenSwipeShortcut</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a2da48cd8554ff37a33abf8a5889dd92d" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>ForwardInputFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1af79f50358d894b276f36aaf02d386947" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>globalPointer</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a4bc2b3a7895527356a967792f8a750ba" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>globalPointerChanged</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a2f68373394534f60650f0c55e35b43a1" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>handleInputConfigChanged</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a0d68c4460076b0995c009c50baeeffba" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>hasAlphaNumericKeyboard</name></member>
      <member refid="class_k_win_1_1_input_redirection_1ad70744011956bcd5c87f6f6d9f60042c" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>hasAlphaNumericKeyboardChanged</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a90e01d369c061da9cf5ccd21204d1f2d" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>hasKeyboardChanged</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a986f23cda629c5916b6203642aa7faa0" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>hasPointer</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a69724b4815b9560d1ce0fde10991dc2e" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>hasPointerChanged</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a595aef9d04d9840c88348b8b733933c3" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>hasTabletModeSwitch</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a2b7aa4aa7406afd3f67e43ada5dcb5df" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>hasTabletModeSwitchChanged</name></member>
      <member refid="class_k_win_1_1_input_redirection_1adcb3f54996dd1bf70073076c50778769" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>hasTouch</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a901171f39665bf42ea0e003ae0f2046e" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>hasTouchChanged</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a4e039e826153ec53d521c71ea6ab00a1" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>idleInhibitors</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a3d8dd202544d7da4b89474bbeec9d882" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>init</name></member>
      <member refid="class_k_win_1_1_input_redirection_1afbc0d3ccf7cd746dda8dcf72e5ef6cdc" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>input</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>installInputEventFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a120eae6615da47a1bc5b86b7387ababd" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>installInputEventSpy</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a68d4684e2bc270508f4921fb26a440ad" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>InternalWindowEventFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1af31ac695fd107e559b4f80cc62261bc1" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>isSelectingWindow</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a246b282229b36fc27552487cdd3329d7" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>keyboard</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a95d5ccabfaa4a8cb034bb4e96959e7d8" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>keyboardModifiers</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a46a9b495e85862c29e63a8ef8eb4e5d1" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>keyboardModifiersChanged</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a57a9fe84b16000ecf0f75003163b3eaa" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>keyStateChanged</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a7c1d16860aaa4196eff4188061c6610c" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>lastInputHandler</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a9f0296963fff20ea5fe3d8a422b9b6db" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_decorationFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a814bf86a1dbaee97da3e37783bac785d" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_dragAndDropFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a2300db1167431db3e38aa4baba8233a2" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_effectsFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a2a4a65763bdee8c0f4f024a85f1cb23a" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_filters</name></member>
      <member refid="class_k_win_1_1_input_redirection_1ad9c9087e5f06ebb4e67777a88a0fe429" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_forwardFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1aec4059ec63398a2faa9260fa5cf119e0" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_globalShortcutFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a3687dbea380f9bca353dac4e8739208e" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_hasKeyboard</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a08b221b6ce7a7ebcefcfd1a73f77c538" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_hasPointer</name></member>
      <member refid="class_k_win_1_1_input_redirection_1ae95f16608d8325278d2dece8ddc7289d" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_hasTabletModeSwitch</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a5f5dce042889e075758621085d218be0" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_hasTouch</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a11eb8ac9e095c124a21e8e9ff13e6b63" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_hideCursorSpy</name></member>
      <member refid="class_k_win_1_1_input_redirection_1ae88266e65a7df5fe4b75c737cb5d0774" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_idleDetectors</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a4762e5c4b3437235d45bd0d63b0c98da" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_idleInhibitors</name></member>
      <member refid="class_k_win_1_1_input_redirection_1af78fd76d360214da2e0d741cdbe4afe5" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_inputBackends</name></member>
      <member refid="class_k_win_1_1_input_redirection_1abc9a7330fa38b0a10ac45b102994609e" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_inputConfigWatcher</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a70a4796fd5805a61b32821d070feac17" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_inputDevices</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a73523229ddc403dd26b62ed217de0cce" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_inputKeyboardFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1ad8ee5374d358e83e388aa49958abd5a0" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_interactiveMoveResizeFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a4ab7aeea4ec884c90e6fface9e3c1cc9" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_internalWindowFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a72611536bab50a989d0980f63565182e" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_keyboard</name></member>
      <member refid="class_k_win_1_1_input_redirection_1adc569847bdecbe2d4444840b881c36c5" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_lastInputDevice</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a2def09b76157c77a496352a35f26e92c" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_leds</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a2b4958d161ac16ea846b0abbc3ebfe91" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_pointer</name></member>
      <member refid="class_k_win_1_1_input_redirection_1aa4c0435d0af61fa5648173a5c7936ccf" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_popupFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a6844af40f2aebb951dbbbe9f3c8a5956" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_screenEdgeFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a689d64fe771ad7e009e42d7919fc17ac" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_shortcuts</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a5c7a21f8d9a7319f06fe7413e0c80d6b" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_spies</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a8b1810e5038c6b21ad400b29e7659ae1" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_tabboxFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1ab9ba54df705234d02a3f160fff3ecd71" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_tablet</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a0f45e0002e351f3cc57ff6ced3f87739" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_touch</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a2b579029fe72804301861c32f8efd4cc" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_userActivitySpy</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a1fbff45f5bb4e72521f4fcd5367f223c" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_virtualTerminalFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a45d2c73bd861490c4cd30b6d25a37048" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_windowActionFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a6df350018a55d13fbef72d14048a373f" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_windowInteractedSpy</name></member>
      <member refid="class_k_win_1_1_input_redirection_1ad8c3efd788cca781720111a844b7de7d" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>m_windowSelector</name></member>
      <member refid="class_k_win_1_1_input_redirection_1abbd6b8583398b8c63085b8e1f3deadbc" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>modifiersRelevantForGlobalShortcuts</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>pointer</name></member>
      <member refid="class_k_win_1_1_input_redirection_1acd8b6aa5188ed69aab22752437e7ea0c" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>pointerAxisChanged</name></member>
      <member refid="class_k_win_1_1_input_redirection_1af40bc7ced170b3ca4c21cdbee67af7f5" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>pointerButtonStateChanged</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a725a24b7fb60484bd6ec55a85c845e43" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>processFilters</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a51a5e831bd16e20e71dd4c904ef8f450" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>processSpies</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a7eb995003eabae0a699fe7003179c42b" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>qtButtonStates</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a5201ae78ff3397c97d658fd659a2c41f" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>registerAxisShortcut</name></member>
      <member refid="class_k_win_1_1_input_redirection_1ab94715019245ea02da2f675082a53095" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>registerGlobalAccel</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a0560a20eeb52d5fcfaf3f396a87d0dcb" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>registerPointerShortcut</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a67077fd387ec37d737f536d8b796497e" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>registerTouchpadPinchShortcut</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a7caf1163636cc26c9b68285c349f2a64" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>registerTouchpadSwipeShortcut</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a10ceda2362de198cb4e7e14726e300b0" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>registerTouchscreenSwipeShortcut</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a4714c16eefbfd9ea747ef3d120c59d72" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>removeIdleDetector</name></member>
      <member refid="class_k_win_1_1_input_redirection_1affa5c5d60c1cd1d296d1e45f7e242d8d" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>removeIdleInhibitor</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a23b8f0260935a76ae54359f801916716" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>removeInputDevice</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a9c1edee99ea1079725875074997acf1b" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>setLastInputHandler</name></member>
      <member refid="class_k_win_1_1_input_redirection_1ad25bf06bc2ee496d3492ffff10b9def6" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>setupInputBackends</name></member>
      <member refid="class_k_win_1_1_input_redirection_1aa6fc15cd1ea4eda908c6bd96a903b70f" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>setupInputFilters</name></member>
      <member refid="class_k_win_1_1_input_redirection_1ae7ffdf750e12059b8fa965c066e662ca" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>setupWorkspace</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>shortcuts</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a6779f3140053cb30ee8314c34536e8c8" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>simulateUserActivity</name></member>
      <member refid="class_k_win_1_1_input_redirection_1ad4c28557f4e7c7b3d3d7cb0cd1e4323a" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>startInteractivePositionSelection</name></member>
      <member refid="class_k_win_1_1_input_redirection_1af7002d3d0260d2846e0f613d6d6b7656" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>startInteractiveWindowSelection</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a37465aaedbe8f64e75a92d760a5bf0af" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>supportsPointerWarping</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a28bdc8ee4d962d43d5d8c31411c0569e" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>tablet</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a4c3552afead055652bc9dbbd47512c85" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>touch</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a702b94b4e3746a0ee81c3989a219d891" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>uninstallInputEventFilter</name></member>
      <member refid="class_k_win_1_1_input_redirection_1ab671ac5694d6b546af8715e047ef3647" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>uninstallInputEventSpy</name></member>
      <member refid="class_k_win_1_1_input_redirection_1ae2e352d088fb6f0e89dcc45fa581c79a" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>updateAvailableInputDevices</name></member>
      <member refid="class_k_win_1_1_input_redirection_1af4092c2317a0cf0dbcd3bee8d31401d1" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>updateLeds</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a3a54b49511744cbf1873dbe8f8bdfb26" prot="private" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>updateScreens</name></member>
      <member refid="class_k_win_1_1_input_redirection_1aa57c43682e0dc7f2fa1f3b0054f9b86a" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>warpPointer</name></member>
      <member refid="class_k_win_1_1_input_redirection_1a8fcc93bb1d10727144819a30a211ead3" prot="public" virt="non-virtual"><scope>KWin::InputRedirection</scope><name>~InputRedirection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
