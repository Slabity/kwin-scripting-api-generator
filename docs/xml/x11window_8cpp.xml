<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="x11window_8cpp" kind="file" language="C++">
    <compoundname>x11window.cpp</compoundname>
    <includes refid="x11window_8h" local="yes">x11window.h</includes>
    <includes refid="atoms_8h" local="yes">atoms.h</includes>
    <includes refid="client__machine_8h" local="yes">client_machine.h</includes>
    <includes refid="core_2output_8h" local="yes">core/output.h</includes>
    <includes refid="cursor_8h" local="yes">cursor.h</includes>
    <includes refid="decoratedwindow_8h" local="yes">decorations/decoratedwindow.h</includes>
    <includes refid="decorationbridge_8h" local="yes">decorations/decorationbridge.h</includes>
    <includes refid="focuschain_8h" local="yes">focuschain.h</includes>
    <includes refid="group_8h" local="yes">group.h</includes>
    <includes refid="killprompt_8h" local="yes">killprompt.h</includes>
    <includes refid="netinfo_8h" local="yes">netinfo.h</includes>
    <includes refid="placement_8h" local="yes">placement.h</includes>
    <includes refid="windowitem_8h" local="yes">scene/windowitem.h</includes>
    <includes refid="screenedge_8h" local="yes">screenedge.h</includes>
    <includes refid="shadow_8h" local="yes">shadow.h</includes>
    <includes refid="virtualdesktops_8h" local="yes">virtualdesktops.h</includes>
    <includes refid="surface_8h" local="yes">wayland/surface.h</includes>
    <includes refid="wayland__server_8h" local="yes">wayland_server.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes local="no">KDecoration3/DecoratedWindow</includes>
    <includes local="no">KDecoration3/Decoration</includes>
    <includes local="no">KApplicationTrader</includes>
    <includes local="no">KStartupInfo</includes>
    <includes local="no">KX11Extras</includes>
    <includes local="no">QProcess</includes>
    <includes local="no">xcb/xcb_icccm.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">csignal</includes>
    <includes local="yes">moc_x11window.cpp</includes>
    <incdepgraph>
      <node id="64">
        <label>atoms.h</label>
        <link refid="atoms_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>client_machine.h</label>
        <link refid="client__machine_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>decorations/decoratedwindow.h</label>
        <link refid="decoratedwindow_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>decorations/decorationbridge.h</label>
        <link refid="decorationbridge_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>effect/xcb.h</label>
        <link refid="xcb_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>focuschain.h</label>
        <link refid="focuschain_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>group.h</label>
        <link refid="group_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>killprompt.h</label>
        <link refid="killprompt_8h"/>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>netinfo.h</label>
        <link refid="netinfo_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>placement.h</label>
        <link refid="placement_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>rules.h</label>
        <link refid="rules_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>scene/item.h</label>
        <link refid="item_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>scene/itemgeometry.h</label>
        <link refid="itemgeometry_8h"/>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>scene/windowitem.h</label>
        <link refid="windowitem_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>screenedge.h</label>
        <link refid="screenedge_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>shadow.h</label>
        <link refid="shadow_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>utils/c_ptr.h</label>
        <link refid="c__ptr_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>utils/xcbutils.h</label>
        <link refid="xcbutils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>virtualdesktops.h</label>
        <link refid="virtualdesktops_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>wayland/surface.h</label>
        <link refid="surface_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>wayland_server.h</label>
        <link refid="wayland__server_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>window.h</label>
        <link refid="window_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/x11window.cpp</label>
        <link refid="x11window_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>x11window.h</label>
        <link refid="x11window_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>KApplicationTrader</label>
      </node>
      <node id="91">
        <label>KConfig</label>
      </node>
      <node id="103">
        <label>KConfigGroup</label>
      </node>
      <node id="46">
        <label>KConfigWatcher</label>
      </node>
      <node id="105">
        <label>KDecoration3/DecoratedWindow</label>
      </node>
      <node id="106">
        <label>KDecoration3/Decoration</label>
      </node>
      <node id="67">
        <label>KDecoration3/Private/DecoratedWindowPrivate</label>
      </node>
      <node id="70">
        <label>KDecoration3/Private/DecorationBridge</label>
      </node>
      <node id="40">
        <label>KSharedConfig</label>
      </node>
      <node id="108">
        <label>KStartupInfo</label>
      </node>
      <node id="109">
        <label>KX11Extras</label>
      </node>
      <node id="61">
        <label>NETWM</label>
      </node>
      <node id="43">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="90">
        <label>QAction</label>
      </node>
      <node id="44">
        <label>QApplication</label>
      </node>
      <node id="19">
        <label>QByteArray</label>
      </node>
      <node id="82">
        <label>QColor</label>
      </node>
      <node id="6">
        <label>QCoreApplication</label>
      </node>
      <node id="100">
        <label>QDBusContext</label>
      </node>
      <node id="101">
        <label>QDataStream</label>
      </node>
      <node id="68">
        <label>QDeadlineTimer</label>
      </node>
      <node id="36">
        <label>QDebug</label>
      </node>
      <node id="53">
        <label>QElapsedTimer</label>
      </node>
      <node id="58">
        <label>QFlags</label>
      </node>
      <node id="13">
        <label>QGuiApplication</label>
      </node>
      <node id="39">
        <label>QHash</label>
      </node>
      <node id="54">
        <label>QIcon</label>
      </node>
      <node id="7">
        <label>QImage</label>
      </node>
      <node id="55">
        <label>QKeySequence</label>
      </node>
      <node id="21">
        <label>QList</label>
      </node>
      <node id="50">
        <label>QLoggingCategory</label>
      </node>
      <node id="34">
        <label>QMatrix4x4</label>
      </node>
      <node id="30">
        <label>QObject</label>
      </node>
      <node id="59">
        <label>QPixmap</label>
      </node>
      <node id="8">
        <label>QPoint</label>
      </node>
      <node id="56">
        <label>QPointer</label>
      </node>
      <node id="75">
        <label>QProcess</label>
      </node>
      <node id="45">
        <label>QProcessEnvironment</label>
      </node>
      <node id="22">
        <label>QRect</label>
      </node>
      <node id="48">
        <label>QRectF</label>
      </node>
      <node id="23">
        <label>QRegion</label>
      </node>
      <node id="97">
        <label>QSet</label>
      </node>
      <node id="35">
        <label>QSize</label>
      </node>
      <node id="20">
        <label>QString</label>
      </node>
      <node id="102">
        <label>QStringList</label>
      </node>
      <node id="57">
        <label>QTimer</label>
      </node>
      <node id="86">
        <label>QTransform</label>
      </node>
      <node id="37">
        <label>QUuid</label>
      </node>
      <node id="9">
        <label>QVariant</label>
      </node>
      <node id="10">
        <label>QVector2D</label>
      </node>
      <node id="60">
        <label>QWindow</label>
      </node>
      <node id="51">
        <label>climits</label>
      </node>
      <node id="112">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>config-kwin.h</label>
      </node>
      <node id="113">
        <label>csignal</label>
      </node>
      <node id="83">
        <label>epoxy/gl.h</label>
      </node>
      <node id="52">
        <label>functional</label>
      </node>
      <node id="11">
        <label>kwin_export.h</label>
      </node>
      <node id="15">
        <label>main.h</label>
      </node>
      <node id="17">
        <label>memory</label>
      </node>
      <node id="114">
        <label>moc_x11window.cpp</label>
      </node>
      <node id="73">
        <label>netwm.h</label>
      </node>
      <node id="104">
        <label>netwm_def.h</label>
      </node>
      <node id="33">
        <label>optional</label>
      </node>
      <node id="84">
        <label>ranges</label>
      </node>
      <node id="85">
        <label>span</label>
      </node>
      <node id="111">
        <label>unistd.h</label>
      </node>
      <node id="24">
        <label>xcb/composite.h</label>
      </node>
      <node id="25">
        <label>xcb/randr.h</label>
      </node>
      <node id="62">
        <label>xcb/res.h</label>
      </node>
      <node id="26">
        <label>xcb/shm.h</label>
      </node>
      <node id="63">
        <label>xcb/sync.h</label>
      </node>
      <node id="14">
        <label>xcb/xcb.h</label>
      </node>
      <node id="110">
        <label>xcb/xcb_icccm.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <innernamespace refid="namespace_k_win_1_1_f_s_p">KWin::FSP</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="x11window_8cpp_1ad4753f147978949c87828ecd1bd78dc6" prot="public" static="no">
        <name>ASPECT_CHECK_GROW_W</name>
        <initializer>    if (min_aspect_w * h &gt; min_aspect_h * w) {                                        \
        int delta = int(min_aspect_w * h / min_aspect_h - w) / width_inc * width_inc; \
        if (w + delta &lt;= max_width)                                                   \
            w += delta;                                                               \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11window.cpp" line="3333" column="9"/>
      </memberdef>
      <memberdef kind="define" id="x11window_8cpp_1a2b7301be9487da1029cf8280b4b492e8" prot="public" static="no">
        <name>ASPECT_CHECK_SHRINK_H_GROW_W</name>
        <initializer>    if (min_aspect_w * h &gt; min_aspect_h * w) {                                            \
        int delta = int(h - w * min_aspect_h / min_aspect_w) / height_inc * height_inc;   \
        if (h - delta &gt;= min_height)                                                      \
            h -= delta;                                                                   \
        else {                                                                            \
            int delta = int(min_aspect_w * h / min_aspect_h - w) / width_inc * width_inc; \
            if (w + delta &lt;= max_width)                                                   \
                w += delta;                                                               \
        }                                                                                 \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11window.cpp" line="3339" column="9"/>
      </memberdef>
      <memberdef kind="define" id="x11window_8cpp_1a5dc698de35f4b109415742f2988a9067" prot="public" static="no">
        <name>ASPECT_CHECK_GROW_H</name>
        <initializer>    if (max_aspect_w * h &lt; max_aspect_h * w) {                                          \
        int delta = int(w * max_aspect_h / max_aspect_w - h) / height_inc * height_inc; \
        if (h + delta &lt;= max_height)                                                    \
            h += delta;                                                                 \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11window.cpp" line="3350" column="9"/>
      </memberdef>
      <memberdef kind="define" id="x11window_8cpp_1a8d580471a96fed03fbba48dcc31a1088" prot="public" static="no">
        <name>ASPECT_CHECK_SHRINK_W_GROW_H</name>
        <initializer>    if (max_aspect_w * h &lt; max_aspect_h * w) {                                              \
        int delta = int(w - max_aspect_w * h / max_aspect_h) / width_inc * width_inc;       \
        if (w - delta &gt;= min_width)                                                         \
            w -= delta;                                                                     \
        else {                                                                              \
            int delta = int(w * max_aspect_h / max_aspect_w - h) / height_inc * height_inc; \
            if (h + delta &lt;= max_height)                                                    \
                h += delta;                                                                 \
        }                                                                                   \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11window.cpp" line="3356" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>1999,<sp/>2000<sp/>Matthias<sp/>Ettrich<sp/>&lt;ettrich@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2003<sp/>Lubos<sp/>Lunak<sp/>&lt;l.lunak@kde.org&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>own</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="x11window_8h" kindref="compound">x11window.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>kwin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_ACTIVITIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="activities_8h" kindref="compound">activities.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="atoms_8h" kindref="compound">atoms.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="client__machine_8h" kindref="compound">client_machine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2output_8h" kindref="compound">core/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cursor_8h" kindref="compound">cursor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="decoratedwindow_8h" kindref="compound">decorations/decoratedwindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="decorationbridge_8h" kindref="compound">decorations/decorationbridge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="focuschain_8h" kindref="compound">focuschain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="group_8h" kindref="compound">group.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="killprompt_8h" kindref="compound">killprompt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="netinfo_8h" kindref="compound">netinfo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="placement_8h" kindref="compound">placement.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="windowitem_8h" kindref="compound">scene/windowitem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="screenedge_8h" kindref="compound">screenedge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shadow_8h" kindref="compound">shadow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="virtualdesktops_8h" kindref="compound">virtualdesktops.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface_8h" kindref="compound">wayland/surface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland__server_8h" kindref="compound">wayland_server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KDecoration3/DecoratedWindow&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KDecoration3/Decoration&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KApplicationTrader&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KStartupInfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KX11Extras&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QProcess&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>xcb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xcb/xcb_icccm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>c++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;csignal&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>frameEventMask()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>XCB_EVENT_MASK_FOCUS_CHANGE</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>XCB_EVENT_MASK_STRUCTURE_NOTIFY</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>XCB_EVENT_MASK_SUBSTRUCTURE_REDIRECT</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>XCB_EVENT_MASK_PROPERTY_CHANGE;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>wrapperEventMask()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>XCB_EVENT_MASK_FOCUS_CHANGE</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>XCB_EVENT_MASK_STRUCTURE_NOTIFY</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>XCB_EVENT_MASK_SUBSTRUCTURE_REDIRECT</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>XCB_EVENT_MASK_SUBSTRUCTURE_NOTIFY;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>clientEventMask()</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>XCB_EVENT_MASK_FOCUS_CHANGE</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>XCB_EVENT_MASK_PROPERTY_CHANGE;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>window<sp/>types<sp/>that<sp/>are<sp/>supported<sp/>as<sp/>normal<sp/>windows<sp/>(i.e.<sp/>KWin<sp/>actually<sp/>manages<sp/>them)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="namespace_k_win_1a6bcc184215c97ac5d7d9496e32525b3a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NET::WindowTypes<sp/><ref refid="namespace_k_win_1a6bcc184215c97ac5d7d9496e32525b3a" kindref="member">SUPPORTED_MANAGED_WINDOW_TYPES_MASK</ref><sp/>=<sp/>NET::NormalMask</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::DesktopMask</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::DockMask</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::ToolbarMask</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::MenuMask</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::DialogMask</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*|<sp/>NET::OverrideMask*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::TopMenuMask</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::UtilityMask</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::SplashMask</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::NotificationMask</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::OnScreenDisplayMask</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::CriticalNotificationMask</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::AppletPopupMask;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>window<sp/>types<sp/>that<sp/>are<sp/>supported<sp/>as<sp/>unmanaged<sp/>(mainly<sp/>for<sp/>compositing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="namespace_k_win_1a7f08dbda947a909a716bcbb664666da8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NET::WindowTypes<sp/><ref refid="namespace_k_win_1a7f08dbda947a909a716bcbb664666da8" kindref="member">SUPPORTED_UNMANAGED_WINDOW_TYPES_MASK</ref><sp/>=<sp/>NET::NormalMask</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::DesktopMask</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::DockMask</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::ToolbarMask</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::MenuMask</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::DialogMask</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*|<sp/>NET::OverrideMask*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::TopMenuMask</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::UtilityMask</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::SplashMask</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::DropdownMenuMask</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::PopupMenuMask</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::TooltipMask</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::NotificationMask</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::ComboBoxMask</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::DNDIconMask</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::OnScreenDisplayMask</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>NET::CriticalNotificationMask;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creating<sp/>a<sp/>client:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>-<sp/>only<sp/>by<sp/>calling<sp/>Workspace::createClient()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>it<sp/>creates<sp/>a<sp/>new<sp/>client<sp/>and<sp/>calls<sp/>manage()<sp/>for<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Destroying<sp/>a<sp/>client:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>-<sp/>destroyWindow()<sp/>-<sp/>only<sp/>when<sp/>the<sp/>window<sp/>itself<sp/>has<sp/>been<sp/>destroyed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>releaseWindow()<sp/>-<sp/>the<sp/>window<sp/>is<sp/>kept,<sp/>only<sp/>the<sp/>client<sp/>itself<sp/>is<sp/>destroyed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window::X11Window</ref>()</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_window_1a1f57b5fc7e5ebf9060435cacce04349d" kindref="member">Window</ref>()</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_client()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_wrapper()</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_frame()</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_activityUpdatesBlocked(false)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_blockedActivityUpdatesRequireTransients(false)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_managed(false)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_transientForId(XCB_WINDOW_NONE)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_originalTransientForId(XCB_WINDOW_NONE)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>shade_below(nullptr)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_motif(<ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;motif_wm_hints)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>in_group(nullptr)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>ping_timer(nullptr)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_pingTimestamp(XCB_TIME_CURRENT_TIME)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_userTime(XCB_TIME_CURRENT_TIME)<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>known<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>allowed_actions()</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>shade_geometry_change(false)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>sm_stacking_order(-1)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>activitiesDefined(false)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>sessionActivityOverride(false)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_focusOutTimer(nullptr)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a8018decfe708255ffd09b957dc2d14b8" kindref="member">setOutput</ref>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activeOutput());</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1adbbbb9c3b063b36a448825bc710cb4a8" kindref="member">setMoveResizeOutput</ref>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activeOutput());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Do<sp/>all<sp/>as<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.counter<sp/>=<sp/>m_syncRequest.alarm<sp/>=<sp/>XCB_NONE;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.timeout<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.lastTimestamp<sp/>=<sp/><ref refid="namespace_k_win_1a71cc78d22f170a8c6639a9d83694fb8a" kindref="member">xTime</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.pending<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.acked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.interactiveResize<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>initial<sp/>mapping<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>mapping_state<sp/>=<sp/>Withdrawn;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>info<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fullscreenMode<sp/>=<sp/>FullScreenNone;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>noborder<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>app_noborder<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>ignore_focus_stealing<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>check_active_modal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>max_mode<sp/>=<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a53d04d48a6022c3cdf27d735a3b1de29" kindref="member">MaximizeRestore</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_window_1a595f871763d11ef27b99d4327d5669fd" kindref="member">clientMachine</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_client_machine_1a17972df46f85b900106806c481f924ea" kindref="member">ClientMachine::localhostChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_x11_window_1a15704747d5303018fad70cb9491a9926" kindref="member">X11Window::updateCaption</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_options_1a691bdb46543795846723d115c9595b63" kindref="member">Options::condensedTitleChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_x11_window_1a15704747d5303018fad70cb9491a9926" kindref="member">X11Window::updateCaption</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_x11_window_1af16e4161195204fcd94a93cd6e97088d" kindref="member">X11Window::shapeChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;X11Window::discardShapeRegion);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>m_releaseTimer.setSingleShot(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(&amp;m_releaseTimer,<sp/>&amp;QTimer::timeout,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1ae40e9801befd45d3e0bb13a87427fdd9" kindref="member">releaseWindow</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SELI<sp/>TODO:<sp/>Initialize<sp/>xsizehints??</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="class_k_win_1_1_x11_window_1a5d0eabdd975932fcc54937d3b763df02" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_x11_window_1a5d0eabdd975932fcc54937d3b763df02" kindref="member">X11Window::~X11Window</ref>()</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>info;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_killPrompt)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_killPrompt-&gt;quit();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!<ref refid="class_k_win_1_1_window_1a52812fb30393688827b36f5ff51c1a6d" kindref="member">isInteractiveMoveResize</ref>());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!check_active_modal);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(m_blockGeometryUpdates<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="class_k_win_1_1_x11_window_1ab93c4bce424fac00751dc610977c09ac" refkind="member"><highlight class="normal">std::unique_ptr&lt;WindowItem&gt;<sp/><ref refid="class_k_win_1_1_x11_window_1ab93c4bce424fac00751dc610977c09ac" kindref="member">X11Window::createItem</ref>(<ref refid="class_k_win_1_1_item" kindref="compound">Item</ref><sp/>*parentItem)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;WindowItemX11&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>parentItem);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="class_k_win_1_1_x11_window_1a7ce42f5c44d15f53dbdab7dab49a0b0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a7ce42f5c44d15f53dbdab7dab49a0b0b" kindref="member">X11Window::doSetNextTargetScale</ref>()</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>decoration<sp/>will<sp/>target<sp/>the<sp/>screen&apos;s<sp/>scale,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>may<sp/>not<sp/>be<sp/>the<sp/>same<sp/>as<sp/>Xwayland<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>there<sp/>isn&apos;t<sp/>really<sp/>any<sp/>other<sp/>good<sp/>option<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ade9e5485cc346d37281078debb1badbc" kindref="member">setTargetScale</ref>(<ref refid="class_k_win_1_1_window_1aa37ac55bb7dc545e7109d022b02202a7" kindref="member">nextTargetScale</ref>());</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>destroyWindow()<sp/>or<sp/>releaseWindow(),<sp/>Client<sp/>instances<sp/>cannot<sp/>be<sp/>deleted<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="class_k_win_1_1_x11_window_1a3514798b407fc2a0bd1836916b471736" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a3514798b407fc2a0bd1836916b471736" kindref="member">X11Window::deleteClient</ref>(<ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*c)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="class_k_win_1_1_x11_window_1a550ff35903b0fd0d034c4e109f3f8943" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a550ff35903b0fd0d034c4e109f3f8943" kindref="member">X11Window::hasScheduledRelease</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="224"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_releaseTimer.<ref refid="class_k_win_1_1_window_1a8466be38391212ef29a4c880506eb069" kindref="member">isActive</ref>();</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="class_k_win_1_1_x11_window_1ae40e9801befd45d3e0bb13a87427fdd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1ae40e9801befd45d3e0bb13a87427fdd9" kindref="member">X11Window::releaseWindow</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on_shutdown)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a13609b056f02453c5006ea28d6de94b3" kindref="member">destroyWindowManagementInterface</ref>();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a159ea1bd3bc5d490f99c9b158fbf8fcf" kindref="member">markAsDeleted</ref>();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_1a75b348e50a34a4881ce281e40d1e8f02" kindref="member">closed</ref>();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">isUnmanaged</ref>())<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_releaseTimer.stop();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!findInternalWindow())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>affect<sp/>our<sp/>own<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_xcb_1_1_extensions_1aa3e4e8ce7e28679ae1a562c7a2be81f2" kindref="member">Xcb::Extensions::self</ref>()-&gt;isShapeAvailable())<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_shape_select_input(kwinApp()-&gt;x11Connection(),<sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xcb::selectInput(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>(),<sp/>XCB_EVENT_MASK_NO_EVENT);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;removeUnmanaged(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a64f67f09528b18e4ca30cf6a41fd17cb" kindref="member">cleanTabBox</ref>();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a52812fb30393688827b36f5ff51c1a6d" kindref="member">isInteractiveMoveResize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_1a6e7ab55b455103df20931b548729169a" kindref="member">interactiveMoveResizeFinished</ref>();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aa6d9b69aa8a43a168a1948f23db0d48e" kindref="member">rulebook</ref>()-&gt;<ref refid="class_k_win_1_1_rule_book_1af5755f35e3f0dc90f304cb162510ec03" kindref="member">discardUsed</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>ForceTemporarily<sp/>rules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_stacking_updates_blocker" kindref="compound">StackingUpdatesBlocker</ref><sp/>blocker(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>());</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1af36f8d8979cc3ffb49d244fd04541f0f" kindref="member">stopDelayedInteractiveMoveResize</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a52812fb30393688827b36f5ff51c1a6d" kindref="member">isInteractiveMoveResize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ad31baea5b1b98cc7a01b21e6b527f77a" kindref="member">leaveInteractiveMoveResize</ref>();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1afc19a299627232cd2f497ff1c91772b3" kindref="member">finishWindowRules</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Grab<sp/>X<sp/>during<sp/>the<sp/>release<sp/>to<sp/>make<sp/>removing<sp/>of<sp/>properties,<sp/>setting<sp/>to<sp/>withdrawn<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>repareting<sp/>to<sp/>root<sp/>an<sp/>atomic<sp/>operation<sp/>(https://lists.kde.org/?l=kde-devel&amp;m=116448102901184&amp;w=2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a94fae045fbb1d09b05e20f988ed00f66" kindref="member">grabXServer</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exportMappingState(XCB_ICCCM_WM_STATE_WITHDRAWN);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!on_shutdown)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ab8372aef950cf6ec71fc37e8b5b13d4f" kindref="member">activateNextWindow</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_frame.unmap();<sp/></highlight><highlight class="comment">//<sp/>Destroying<sp/>decoration<sp/>would<sp/>cause<sp/>ugly<sp/>visual<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cleanGrouping();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;removeX11Window(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!on_shutdown)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>when<sp/>the<sp/>window<sp/>is<sp/>being<sp/>unmapped,<sp/>not<sp/>when<sp/>closing<sp/>down<sp/>KWin<sp/>(NETWM<sp/>sections<sp/>5.5,5.7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;setDesktop(0);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;setState(NET::States(),<sp/>info-&gt;state());<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>all<sp/>state<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_win_info" kindref="compound">WinInfo</ref><sp/>*cinfo<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_win_info" kindref="compound">WinInfo</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(info))<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;disable();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_connection_t<sp/>*c<sp/>=<sp/>kwinApp()-&gt;x11Connection();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.deleteProperty(<ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;kde_net_wm_user_creation_time);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.deleteProperty(<ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;net_frame_extents);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.deleteProperty(<ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;kde_net_wm_frame_strut);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>grav<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1aaa1eee010ef24eb77cb4dc7f015ed9a6" kindref="member">calculateGravitation</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.reparent(kwinApp()-&gt;x11RootWindow(),<sp/><ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(grav.x()),<sp/><ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(grav.y()));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_change_save_set(c,<sp/>XCB_SET_MODE_DELETE,<sp/>m_client);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.selectInput(XCB_EVENT_MASK_NO_EVENT);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(on_shutdown)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>the<sp/>window,<sp/>so<sp/>it<sp/>can<sp/>be<sp/>found<sp/>after<sp/>another<sp/>WM<sp/>is<sp/>started</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.map();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Preserve<sp/>minimized,<sp/>shaded<sp/>etc.<sp/>state?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>it&apos;s<sp/>not<sp/>mapped<sp/>if<sp/>the<sp/>app<sp/>unmapped<sp/>it<sp/>(#65279).<sp/>The<sp/>app</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>do<sp/>map+unmap<sp/>before<sp/>we<sp/>initially<sp/>map<sp/>the<sp/>window<sp/>by<sp/>calling<sp/>rawShow()<sp/>from<sp/>manage().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.unmap();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.reset();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wrapper.reset();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_frame.reset();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ae271886202de6f5e3a7330d039fa7b70" kindref="member">ungrabXServer</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_syncRequest.timeout)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.timeout-&gt;stop();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_syncRequest.alarm<sp/>!=<sp/>XCB_NONE)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_sync_destroy_alarm(kwinApp()-&gt;x11Connection(),<sp/>m_syncRequest.alarm);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.alarm<sp/>=<sp/>XCB_NONE;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a212fbc7e400c510205ba9fd3611968d5" kindref="member">unref</ref>();</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="class_k_win_1_1_x11_window_1a7c848abfd1542214c0d8f289d8c76fcb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a7c848abfd1542214c0d8f289d8c76fcb" kindref="member">X11Window::destroyWindow</ref>()</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a13609b056f02453c5006ea28d6de94b3" kindref="member">destroyWindowManagementInterface</ref>();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a159ea1bd3bc5d490f99c9b158fbf8fcf" kindref="member">markAsDeleted</ref>();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_1a75b348e50a34a4881ce281e40d1e8f02" kindref="member">closed</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">isUnmanaged</ref>())<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_releaseTimer.stop();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;removeUnmanaged(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a64f67f09528b18e4ca30cf6a41fd17cb" kindref="member">cleanTabBox</ref>();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a52812fb30393688827b36f5ff51c1a6d" kindref="member">isInteractiveMoveResize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_1a6e7ab55b455103df20931b548729169a" kindref="member">interactiveMoveResizeFinished</ref>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aa6d9b69aa8a43a168a1948f23db0d48e" kindref="member">rulebook</ref>()-&gt;<ref refid="class_k_win_1_1_rule_book_1af5755f35e3f0dc90f304cb162510ec03" kindref="member">discardUsed</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>ForceTemporarily<sp/>rules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_stacking_updates_blocker" kindref="compound">StackingUpdatesBlocker</ref><sp/>blocker(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>());</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1af36f8d8979cc3ffb49d244fd04541f0f" kindref="member">stopDelayedInteractiveMoveResize</ref>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a52812fb30393688827b36f5ff51c1a6d" kindref="member">isInteractiveMoveResize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ad31baea5b1b98cc7a01b21e6b527f77a" kindref="member">leaveInteractiveMoveResize</ref>();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1afc19a299627232cd2f497ff1c91772b3" kindref="member">finishWindowRules</ref>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ab8372aef950cf6ec71fc37e8b5b13d4f" kindref="member">activateNextWindow</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cleanGrouping();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;removeX11Window(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_win_info" kindref="compound">WinInfo</ref><sp/>*cinfo<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_win_info" kindref="compound">WinInfo</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(info))<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;disable();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.reset();<sp/></highlight><highlight class="comment">//<sp/>invalidate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wrapper.reset();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_frame.reset();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_syncRequest.timeout)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.timeout-&gt;stop();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_syncRequest.alarm<sp/>!=<sp/>XCB_NONE)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_sync_destroy_alarm(kwinApp()-&gt;x11Connection(),<sp/>m_syncRequest.alarm);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.alarm<sp/>=<sp/>XCB_NONE;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a212fbc7e400c510205ba9fd3611968d5" kindref="member">unref</ref>();</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="class_k_win_1_1_x11_window_1abeb8d1bcaf6c5295c957832481cd33a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1abeb8d1bcaf6c5295c957832481cd33a4" kindref="member">X11Window::track</ref>(xcb_window_t<sp/>w)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x_server_grabber" kindref="compound">XServerGrabber</ref><sp/>xserverGrabber;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>Xcb::WindowAttributes<sp/>attr(w);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xcb_1_1_window_geometry" kindref="compound">Xcb::WindowGeometry</ref><sp/>geo(w);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr.isNull()<sp/>||<sp/>attr-&gt;map_state<sp/>!=<sp/>XCB_MAP_STATE_VIEWABLE)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr-&gt;_class<sp/>==<sp/>XCB_WINDOW_CLASS_INPUT_ONLY)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geo.<ref refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a3a63032c158d81c214e7d09aa72a2e0f" kindref="member">isNull</ref>())<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>m_unmanaged<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>m_frame.reset(w,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wrapper.reset(w,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>m_client.reset(w,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pidCookie<sp/>=<sp/>fetchPid();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>Xcb::selectInput(w,<sp/>attr-&gt;your_event_mask<sp/>|<sp/>XCB_EVENT_MASK_STRUCTURE_NOTIFY<sp/>|<sp/>XCB_EVENT_MASK_PROPERTY_CHANGE);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a1359c9bf73f8b28bdfe9d5aa19aea1ab" kindref="member">m_bufferGeometry</ref><sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(geo.<ref refid="class_k_win_1_1_xcb_1_1_window_geometry_1abb2b82a05af0f2cf8fc3146c440bf2ce" kindref="member">rect</ref>());</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a59df30651b9d39dc3ee42d5d3b63b400" kindref="member">m_frameGeometry</ref><sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(geo.<ref refid="class_k_win_1_1_xcb_1_1_window_geometry_1abb2b82a05af0f2cf8fc3146c440bf2ce" kindref="member">rect</ref>());</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ade714a7cf13d4ef4d770b5763919e5fa" kindref="member">m_clientGeometry</ref><sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(geo.<ref refid="class_k_win_1_1_xcb_1_1_window_geometry_1abb2b82a05af0f2cf8fc3146c440bf2ce" kindref="member">rect</ref>());</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>checkOutput();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>m_visual<sp/>=<sp/>attr-&gt;visual;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>bit_depth<sp/>=<sp/>geo-&gt;depth;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>info<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>NETWinInfo(kwinApp()-&gt;x11Connection(),<sp/>w,<sp/>kwinApp()-&gt;x11RootWindow(),</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET::WMWindowType,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET::WM2Opacity<sp/>|<sp/>NET::WM2WindowRole<sp/>|<sp/>NET::WM2WindowClass<sp/>|<sp/>NET::WM2OpaqueRegion);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a294f762b7e595263d56cb155330f19fd" kindref="member">setOpacity</ref>(info-&gt;opacityF());</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>readPid(pidCookie);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>getResourceClass();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>getWmClientLeader();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>getWmClientMachine();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_xcb_1_1_extensions_1aa3e4e8ce7e28679ae1a562c7a2be81f2" kindref="member">Xcb::Extensions::self</ref>()-&gt;isShapeAvailable())<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_shape_select_input(kwinApp()-&gt;x11Connection(),<sp/>w,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1afcee480b58ca8d3d4c54218a92243631" kindref="member">detectShape</ref>();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>getWmOpaqueRegion();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>getSkipCloseAnimation();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a5d25daf1a543308b42b9c90d98d7f213" kindref="member">updateShadow</ref>();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a39805264749f963ab793849f002df2cd" kindref="member">setupCompositing</ref>();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QWindow<sp/>*internalWindow<sp/>=<sp/>findInternalWindow())<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_outline<sp/>=<sp/>internalWindow-&gt;property(</highlight><highlight class="stringliteral">&quot;__kwin_outline&quot;</highlight><highlight class="normal">).toBool();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>wayland<sp/>surface<sp/>is<sp/>associated<sp/>with<sp/>the<sp/>override-redirect<sp/>window<sp/>asynchronously.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a379c25dec85d7b0aee3b79676327b9b6" kindref="member">surface</ref>())<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>associate();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_window_1a5ab5cf58669820a49608cb46f3ea3e5b" kindref="member">Window::surfaceChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;X11Window::associate);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="class_k_win_1_1_x11_window_1abbb8a2850677bce88d1a52dd38337dfd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1abbb8a2850677bce88d1a52dd38337dfd" kindref="member">X11Window::manage</ref>(xcb_window_t<sp/>w,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMapped)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_stacking_updates_blocker" kindref="compound">StackingUpdatesBlocker</ref><sp/>stacking_blocker(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>());</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>Xcb::WindowAttributes<sp/>attr(w);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xcb_1_1_window_geometry" kindref="compound">Xcb::WindowGeometry</ref><sp/>windowGeometry(w);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr.isNull()<sp/>||<sp/>windowGeometry.<ref refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a3a63032c158d81c214e7d09aa72a2e0f" kindref="member">isNull</ref>())<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>this<sp/>place<sp/>on,<sp/>manage()<sp/>must<sp/>not<sp/>return<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1ae3e0c34d99ddf77ff1f285845bd57ecf" kindref="member">blockGeometryUpdates</ref>();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>embedClient(w,<sp/>attr-&gt;visual,<sp/>attr-&gt;colormap,<sp/>windowGeometry.<ref refid="class_k_win_1_1_xcb_1_1_window_geometry_1abb2b82a05af0f2cf8fc3146c440bf2ce" kindref="member">rect</ref>(),<sp/>windowGeometry-&gt;depth);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>m_visual<sp/>=<sp/>attr-&gt;visual;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>bit_depth<sp/>=<sp/>windowGeometry-&gt;depth;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SELI<sp/>TODO:<sp/>Order<sp/>all<sp/>these<sp/>things<sp/>in<sp/>some<sp/>sane<sp/>manner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NET::Properties<sp/>properties<sp/>=</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET::WMDesktop<sp/>|<sp/>NET::WMState<sp/>|<sp/>NET::WMWindowType<sp/>|<sp/>NET::WMStrut<sp/>|<sp/>NET::WMName<sp/>|<sp/>NET::WMIcon<sp/>|<sp/>NET::WMIconName;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NET::Properties2<sp/>properties2<sp/>=</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET::WM2WindowClass<sp/>|<sp/>NET::WM2WindowRole<sp/>|<sp/>NET::WM2UserTime<sp/>|<sp/>NET::WM2StartupId<sp/>|<sp/>NET::WM2ExtendedStrut<sp/>|<sp/>NET::WM2Opacity<sp/>|<sp/>NET::WM2FullscreenMonitors<sp/>|<sp/>NET::WM2GroupLeader<sp/>|<sp/>NET::WM2Urgency<sp/>|<sp/>NET::WM2Input<sp/>|<sp/>NET::WM2Protocols<sp/>|<sp/>NET::WM2InitialMappingState<sp/>|<sp/>NET::WM2IconPixmap<sp/>|<sp/>NET::WM2OpaqueRegion<sp/>|<sp/>NET::WM2DesktopFileName<sp/>|<sp/>NET::WM2GTKFrameExtents<sp/>|<sp/>NET::WM2GTKApplicationId;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wmClientLeaderCookie<sp/>=<sp/>fetchWmClientLeader();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>skipCloseAnimationCookie<sp/>=<sp/>fetchSkipCloseAnimation();</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>showOnScreenEdgeCookie<sp/>=<sp/>fetchShowOnScreenEdge();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>colorSchemeCookie<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1afbe8974f7b4627bb6004a590f1e98323" kindref="member">fetchPreferredColorScheme</ref>();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>transientCookie<sp/>=<sp/>fetchTransient();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>activitiesCookie<sp/>=<sp/>fetchActivities();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>applicationMenuServiceNameCookie<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a8d338a701c0f1f6ab4c12c1d656adf74" kindref="member">fetchApplicationMenuServiceName</ref>();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>applicationMenuObjectPathCookie<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a1e877ff3158c82224301f63640e2f80c" kindref="member">fetchApplicationMenuObjectPath</ref>();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pidCookie<sp/>=<sp/>fetchPid();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>m_geometryHints.init(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>());</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>m_motif.init(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>());</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>info<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_win_info" kindref="compound">WinInfo</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>m_client,<sp/>kwinApp()-&gt;x11RootWindow(),<sp/>properties,<sp/>properties2);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1ab56044e6eff0cd7e2a144756834c0751" kindref="member">isDesktop</ref>()<sp/>&amp;&amp;<sp/>bit_depth<sp/>==<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>desktop<sp/>windows<sp/>to<sp/>be<sp/>opaque.<sp/>It&apos;s<sp/>a<sp/>desktop<sp/>after<sp/>all,<sp/>there<sp/>is<sp/>no<sp/>window<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_depth<sp/>=<sp/>24;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>already<sp/>mapped,<sp/>ignore<sp/>hint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>init_minimize<sp/>=<sp/>!isMapped<sp/>&amp;&amp;<sp/>(info-&gt;initialMappingState()<sp/>==<sp/>NET::Iconic);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>readPid(pidCookie);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>getResourceClass();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>readWmClientLeader(wmClientLeaderCookie);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>getWmClientMachine();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>getSyncCounter();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>setCaption(readName());</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sending<sp/>ConfigureNotify<sp/>is<sp/>done<sp/>when<sp/>setting<sp/>mapping<sp/>state<sp/>below,<sp/>getting<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>sync<sp/>response<sp/>means<sp/>window<sp/>is<sp/>ready<sp/>for<sp/>compositing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>sync<sp/>request<sp/>will<sp/>block<sp/>wl_surface<sp/>commits,<sp/>and<sp/>with<sp/>Xwayland,<sp/>it<sp/>is<sp/>really</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>important<sp/>that<sp/>wl_surfaces<sp/>commits<sp/>are<sp/>blocked<sp/>before<sp/>the<sp/>frame<sp/>window<sp/>is<sp/>mapped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>Xwayland<sp/>can<sp/>attach<sp/>a<sp/>buffer<sp/>before<sp/>the<sp/>sync<sp/>request<sp/>is<sp/>acked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>sendSyncRequest();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a91b2a6bd8ffbc9b12bf7e0dd7e93b4dd" kindref="member">setupWindowRules</ref>();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ada6d2b84af63fc37f49fd43da8d8592d" kindref="member">X11Window::windowClassChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_window_1a5cab226e8c1d5f137f85aa3135e959cc" kindref="member">X11Window::evaluateWindowRules</ref>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_xcb_1_1_extensions_1aa3e4e8ce7e28679ae1a562c7a2be81f2" kindref="member">Xcb::Extensions::self</ref>()-&gt;isShapeAvailable())<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_shape_select_input(kwinApp()-&gt;x11Connection(),<sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1afcee480b58ca8d3d4c54218a92243631" kindref="member">detectShape</ref>();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>detectNoBorder();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>fetchIconicName();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>setClientFrameExtents(info-&gt;gtkFrameExtents());</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Needs<sp/>to<sp/>be<sp/>done<sp/>before<sp/>readTransient()<sp/>because<sp/>of<sp/>reading<sp/>the<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a0db74047dfa4074d7af9aa43971d9270" kindref="member">checkGroup</ref>();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>updateUrgency();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>updateAllowedActions();<sp/></highlight><highlight class="comment">//<sp/>Group<sp/>affects<sp/>isMinimizable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a52d0efcfe93dcc8813fddcb813e9120e" kindref="member">setModal</ref>((info-&gt;state()<sp/>&amp;<sp/>NET::Modal)<sp/>!=<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Needs<sp/>to<sp/>be<sp/>valid<sp/>before<sp/>handling<sp/>groups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>readTransientProperty(transientCookie);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_k_win_1_1_window_1a405edf05a731189064fbd7298d06996e" kindref="member">desktopFileName</ref><sp/>=<sp/>QString::fromUtf8(info-&gt;desktopFileName());</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a405edf05a731189064fbd7298d06996e" kindref="member">desktopFileName</ref>.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a405edf05a731189064fbd7298d06996e" kindref="member">desktopFileName</ref><sp/>=<sp/>QString::fromUtf8(info-&gt;gtkApplicationId());</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a405edf05a731189064fbd7298d06996e" kindref="member">desktopFileName</ref>.isEmpty()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_window_1a927f981105a03011681b42d6644834f0" kindref="member">resourceName</ref>().isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fallback<sp/>to<sp/>StartupWMClass<sp/>for<sp/>legacy<sp/>apps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>service<sp/>=<sp/>KApplicationTrader::query([</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KService::Ptr<sp/>&amp;service)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>service-&gt;property&lt;QString&gt;(</highlight><highlight class="stringliteral">&quot;StartupWMClass&quot;</highlight><highlight class="normal">).compare(<ref refid="class_k_win_1_1_window_1a927f981105a03011681b42d6644834f0" kindref="member">resourceName</ref>(),<sp/>Qt::CaseInsensitive)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!service.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a405edf05a731189064fbd7298d06996e" kindref="member">desktopFileName</ref><sp/>=<sp/>service.constFirst()-&gt;desktopEntryName();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a4f8e4a201d469a4bec2646970b1a3f42" kindref="member">setDesktopFileName</ref>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkDesktopFile(<ref refid="class_k_win_1_1_window_1a405edf05a731189064fbd7298d06996e" kindref="member">desktopFileName</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>getIcons();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_window_1aa7c85eca2cfa19d7ea698cd46396c6dc" kindref="member">X11Window::desktopFileNameChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;X11Window::getIcons);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>m_geometryHints.read();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>getMotifHints();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>getWmOpaqueRegion();</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>readSkipCloseAnimation(skipCloseAnimationCookie);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a5d25daf1a543308b42b9c90d98d7f213" kindref="member">updateShadow</ref>();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Try<sp/>to<sp/>obey<sp/>all<sp/>state<sp/>information<sp/>from<sp/>info-&gt;state()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a42e28c55648d7fbd21d164b14d889dea" kindref="member">setOriginalSkipTaskbar</ref>((info-&gt;state()<sp/>&amp;<sp/>NET::SkipTaskbar)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a9511f02ec7549d4520c56cc8e71341ab" kindref="member">setSkipPager</ref>((info-&gt;state()<sp/>&amp;<sp/>NET::SkipPager)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ae740a221f99373e76b5ed57a6edfb5a8" kindref="member">setSkipSwitcher</ref>((info-&gt;state()<sp/>&amp;<sp/>NET::SkipSwitcher)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a39805264749f963ab793849f002df2cd" kindref="member">setupCompositing</ref>();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>KStartupInfoId<sp/>asn_id;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>KStartupInfoData<sp/>asn_data;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>asn_valid<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;checkStartupNotification(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>(),<sp/>asn_id,<sp/>asn_data);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>the<sp/>input<sp/>window<sp/>is<sp/>created<sp/>before<sp/>we<sp/>update<sp/>the<sp/>stacking<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a566fd5756c0cce34ab4f6ac8ba8dd96b" kindref="member">updateLayer</ref>();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_session_info" kindref="compound">SessionInfo</ref><sp/>*session<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1adbf79458e8db9c18b4144a8755d63a47" kindref="member">sessionManager</ref>()-&gt;takeSessionInfo(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(session)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_minimize<sp/>=<sp/>session-&gt;<ref refid="struct_k_win_1_1_session_info_1a191c76e5367a5082add20991ed64b14b" kindref="member">minimized</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noborder<sp/>=<sp/>session-&gt;<ref refid="struct_k_win_1_1_session_info_1a2244ff853c5fb7c4966f71feda22f2c5" kindref="member">noBorder</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ae45b3db3780c6b8ed8eab2b87a1031aa" kindref="member">setShortcut</ref>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkShortcut(session<sp/>?<sp/>session-&gt;<ref refid="struct_k_win_1_1_session_info_1a3ec5181090275774234933a6d1ec214c" kindref="member">shortcut</ref><sp/>:<sp/>QString(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>init_minimize<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;<ref refid="class_k_win_1_1_window_rules_1ab1ecc066865f3279e2aa437545465888" kindref="member">checkMinimize</ref>(init_minimize,<sp/>!isMapped);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>noborder<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;<ref refid="class_k_win_1_1_window_rules_1a3a00bc4799dc001632d55ec73927d74d" kindref="member">checkNoBorder</ref>(noborder,<sp/>!isMapped);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>readActivities(activitiesCookie);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>desktop<sp/>placement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;QList&lt;VirtualDesktop<sp/>*&gt;&gt;<sp/>initialDesktops;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(session)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(session-&gt;<ref refid="struct_k_win_1_1_session_info_1a7a6c18810db7b4456c38d9a106418626" kindref="member">onAllDesktops</ref>)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialDesktops<sp/>=<sp/>QList&lt;VirtualDesktop<sp/>*&gt;{};</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*desktop<sp/>=<sp/>VirtualDesktopManager::self()-&gt;desktopForX11Id(session-&gt;<ref refid="struct_k_win_1_1_session_info_1ad7d94e973dc2bb70bd1beaef7b066c1d" kindref="member">desktop</ref>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desktop)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialDesktops<sp/>=<sp/>QList&lt;VirtualDesktop<sp/>*&gt;{desktop};</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a7e638bc0587a8f3df06238420f94962f" kindref="member">setOnActivities</ref>(session-&gt;<ref refid="struct_k_win_1_1_session_info_1a447c3cc4a11505802c2b5bea62f1a2bf" kindref="member">activities</ref>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>window<sp/>is<sp/>transient,<sp/>ensure<sp/>that<sp/>it<sp/>is<sp/>opened<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>window<sp/>as<sp/>its<sp/>parent.<sp/><sp/>this<sp/>is<sp/>necessary<sp/>when<sp/>an<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>starts<sp/>up<sp/>on<sp/>a<sp/>different<sp/>desktop<sp/>than<sp/>is<sp/>currently<sp/>displayed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a30e74c044caf63f869473d6b8648f506" kindref="member">isTransient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mainwindows<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a0b9273d4b5cbb939568096e8a73db60e" kindref="member">mainWindows</ref>();</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on_current<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on_all<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a1f57b5fc7e5ebf9060435cacce04349d" kindref="member">Window</ref><sp/>*maincl<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>slightly<sp/>duplicated<sp/>from<sp/>Placement::placeOnMainWindow()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>mainwindows.constBegin();<sp/>it<sp/>!=<sp/>mainwindows.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mainwindows.count()<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/></highlight><highlight class="comment">//<sp/>A<sp/>group-transient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;isSpecialWindow()<sp/>&amp;&amp;<sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>consider<sp/>toolbars<sp/>etc<sp/>when<sp/>placing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(info-&gt;state()<sp/>&amp;<sp/>NET::Modal))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>except<sp/>when<sp/>it&apos;s<sp/>modal<sp/>(blocks<sp/>specials<sp/>as<sp/>well)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maincl<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it)-&gt;isOnCurrentDesktop())<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_current<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it)-&gt;isOnAllDesktops())<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_all<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(on_all)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialDesktops<sp/>=<sp/>QList&lt;VirtualDesktop<sp/>*&gt;{};</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(on_current)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialDesktops<sp/>=<sp/>QList&lt;VirtualDesktop<sp/>*&gt;{VirtualDesktopManager::self()-&gt;currentDesktop()};</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maincl)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialDesktops<sp/>=<sp/>maincl-&gt;<ref refid="class_k_win_1_1_window_1a8da79be4e140390a3b61957f927f5210" kindref="member">desktops</ref>();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maincl)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a7e638bc0587a8f3df06238420f94962f" kindref="member">setOnActivities</ref>(maincl-&gt;<ref refid="class_k_win_1_1_window_1aa71dc40a7137f7d9295a5ad7a635b0c7" kindref="member">activities</ref>());</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>a<sp/>transient<sp/>shall<sp/>appear<sp/>on<sp/>its<sp/>leader<sp/>and<sp/>not<sp/>drag<sp/>that<sp/>around</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1ad33086a0fc2f1cd541bec4d5ccb092d8" kindref="member">desktopId</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;desktop())<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1ad33086a0fc2f1cd541bec4d5ccb092d8" kindref="member">desktopId</ref><sp/>=<sp/>info-&gt;desktop();<sp/></highlight><highlight class="comment">//<sp/>Window<sp/>had<sp/>the<sp/>initial<sp/>desktop<sp/>property,<sp/>force<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1ad33086a0fc2f1cd541bec4d5ccb092d8" kindref="member">desktopId</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>asn_valid<sp/>&amp;&amp;<sp/>asn_data.desktop()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1ad33086a0fc2f1cd541bec4d5ccb092d8" kindref="member">desktopId</ref><sp/>=<sp/>asn_data.desktop();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1ad33086a0fc2f1cd541bec4d5ccb092d8" kindref="member">desktopId</ref>)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1ad33086a0fc2f1cd541bec4d5ccb092d8" kindref="member">desktopId</ref><sp/>==<sp/>NET::OnAllDesktops)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialDesktops<sp/>=<sp/>QList&lt;VirtualDesktop<sp/>*&gt;{};</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*desktop<sp/>=<sp/>VirtualDesktopManager::self()-&gt;desktopForX11Id(<ref refid="class_k_win_1_1_x11_window_1ad33086a0fc2f1cd541bec4d5ccb092d8" kindref="member">desktopId</ref>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desktop)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialDesktops<sp/>=<sp/>QList&lt;VirtualDesktop<sp/>*&gt;{desktop};</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_ACTIVITIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_x11_window_1a171645c92c0b24978f9a48630957f791" kindref="member">activities</ref>()<sp/>&amp;&amp;<sp/>!isMapped<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_window_1aff0dcb9257a7c18c075605858ef64ad6" kindref="member">skipTaskbar</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_window_1a03433bdc26094171788332e5edfe66e3" kindref="member">isNormalWindow</ref>()<sp/>&amp;&amp;<sp/>!activitiesDefined)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>new,<sp/>regular<sp/>window,<sp/>when<sp/>we&apos;re<sp/>not<sp/>recovering<sp/>from<sp/>a<sp/>crash,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>it<sp/>hasn&apos;t<sp/>got<sp/>an<sp/>activity.<sp/>let&apos;s<sp/>try<sp/>giving<sp/>it<sp/>the<sp/>current<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>decide<sp/>whether<sp/>to<sp/>keep<sp/>this<sp/>before<sp/>the<sp/>4.6<sp/>release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>if<sp/>we<sp/>are<sp/>keeping<sp/>it<sp/>(at<sp/>least<sp/>as<sp/>an<sp/>option),<sp/>replace<sp/>noborder<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>public<sp/>API<sp/>for<sp/>setting<sp/>windows<sp/>to<sp/>be<sp/>on<sp/>all<sp/>activities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>something<sp/>like<sp/>KWindowSystem::setOnAllActivities<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>KActivityConsumer::setOnAllActivities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a545f116b85dc0d6e66045171aa18fe53" kindref="member">setOnActivity</ref>(<ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_x11_window_1a171645c92c0b24978f9a48630957f791" kindref="member">activities</ref>()-&gt;current(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>initialDesktops<sp/>has<sp/>no<sp/>value,<sp/>it<sp/>means<sp/>that<sp/>the<sp/>client<sp/>doesn&apos;t<sp/>prefer<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>desktop<sp/>so<sp/>place<sp/>it<sp/>on<sp/>the<sp/>current<sp/>virtual<sp/>desktop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialDesktops.has_value())<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1ab56044e6eff0cd7e2a144756834c0751" kindref="member">isDesktop</ref>())<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialDesktops<sp/>=<sp/>QList&lt;VirtualDesktop<sp/>*&gt;{};</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialDesktops<sp/>=<sp/>QList&lt;VirtualDesktop<sp/>*&gt;{VirtualDesktopManager::self()-&gt;currentDesktop()};</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a017d0afde06ff1fac03f4c4ef7cfb6d9" kindref="member">setDesktops</ref>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkDesktops(*initialDesktops,<sp/>!isMapped));</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setDesktop(<ref refid="class_k_win_1_1_x11_window_1ad33086a0fc2f1cd541bec4d5ccb092d8" kindref="member">desktopId</ref>());</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a0ec3b510144155afa123830c35869dd3" kindref="member">updateOnAllDesktopsOfTransients</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>SELI<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>onAllDesktopsChange();<sp/>//<sp/>Decoration<sp/>doesn&apos;t<sp/>exist<sp/>here<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>QStringList<sp/>activitiesList;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>activitiesList<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;<ref refid="class_k_win_1_1_window_rules_1a9b4af063dcf9ffbc39a8217453ac7652" kindref="member">checkActivity</ref>(activitiesList,<sp/>!isMapped);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!activitiesList.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a7e638bc0587a8f3df06238420f94962f" kindref="member">setOnActivities</ref>(activitiesList);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>geom<sp/>=<sp/>session<sp/>?<sp/>session-&gt;<ref refid="struct_k_win_1_1_session_info_1ab6264c6740a8e07ea836c5f780532169" kindref="member">geometry</ref><sp/>:<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(windowGeometry.<ref refid="class_k_win_1_1_xcb_1_1_window_geometry_1abb2b82a05af0f2cf8fc3146c440bf2ce" kindref="member">rect</ref>());</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>placementDone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>area;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>partial_keep_in_area<sp/>=<sp/>isMapped<sp/>||<sp/>session;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isMapped<sp/>||<sp/>session)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22ae101469eee96aace48208a1b5902e380" kindref="member">FullArea</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>geom.center());</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a0b6dba6ec28ac38cae39cc392c735970" kindref="member">checkOffscreenPosition</ref>(&amp;geom,<sp/>area);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*<ref refid="class_k_win_1_1_window_1ae01b40bf580c920be022d66080e0685c" kindref="member">output</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(asn_data.xinerama()<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ae01b40bf580c920be022d66080e0685c" kindref="member">output</ref><sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aef0b408ec096ffd9e3e63d507bfeeca6" kindref="member">xineramaIndexToOutput</ref>(asn_data.xinerama());</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_1ae01b40bf580c920be022d66080e0685c" kindref="member">output</ref>)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ae01b40bf580c920be022d66080e0685c" kindref="member">output</ref><sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a5c706b5fddc7707a36576936450d86b9" kindref="member">activeOutput</ref>();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ae01b40bf580c920be022d66080e0685c" kindref="member">output</ref><sp/>=<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;<ref refid="class_k_win_1_1_window_rules_1a4c717174d4c4c7842e57e3953cbb5c7b" kindref="member">checkOutput</ref>(<ref refid="class_k_win_1_1_window_1ae01b40bf580c920be022d66080e0685c" kindref="member">output</ref>,<sp/>!isMapped);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22a8a4463af95e4961719929955d4eabd0d" kindref="member">PlacementArea</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_window_1ae01b40bf580c920be022d66080e0685c" kindref="member">output</ref>-&gt;geometry().center());</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1ab56044e6eff0cd7e2a144756834c0751" kindref="member">isDesktop</ref>())<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>KWin<sp/>doesn&apos;t<sp/>manage<sp/>desktop<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>placementDone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usePosition<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isMapped<sp/>||<sp/>session<sp/>||<sp/>placementDone)<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>placementDone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>geometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a30e74c044caf63f869473d6b8648f506" kindref="member">isTransient</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_window_1af7a970e5b2da43bc372f9fa79daec492" kindref="member">isUtility</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_window_1a7dd959da7a7a8d50a959684a92d55d65" kindref="member">isDialog</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_window_1aa0179fdd1c6fee664b5401f61f35e493" kindref="member">isSplash</ref>())<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usePosition<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a30e74c044caf63f869473d6b8648f506" kindref="member">isTransient</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_x11_window_1ad81dd123f5387c0508abbb1464f808ee" kindref="member">hasNETSupport</ref>())<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usePosition<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a7dd959da7a7a8d50a959684a92d55d65" kindref="member">isDialog</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_x11_window_1ad81dd123f5387c0508abbb1464f808ee" kindref="member">hasNETSupport</ref>())<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>dialog<sp/>is<sp/>actually<sp/>non-NETWM<sp/>transient<sp/>window,<sp/>don&apos;t<sp/>try<sp/>to<sp/>apply<sp/>placement<sp/>to<sp/>it,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>breaks<sp/>with<sp/>too<sp/>many<sp/>things<sp/>(xmms,<sp/>display)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a0b9273d4b5cbb939568096e8a73db60e" kindref="member">mainWindows</ref>().count()<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#78082<sp/>-<sp/>Ok,<sp/>it<sp/>seems<sp/>there<sp/>are<sp/>after<sp/>all<sp/>some<sp/>cases<sp/>when<sp/>an<sp/>application<sp/>has<sp/>a<sp/>good</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reason<sp/>to<sp/>specify<sp/>a<sp/>position<sp/>for<sp/>its<sp/>dialog.<sp/>Too<sp/>bad<sp/>other<sp/>WMs<sp/>have<sp/>never<sp/>bothered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>placement<sp/>for<sp/>dialogs,<sp/>so<sp/>apps<sp/>always<sp/>specify<sp/>positions<sp/>for<sp/>their<sp/>dialogs,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>including<sp/>such<sp/>silly<sp/>positions<sp/>like<sp/>always<sp/>centered<sp/>on<sp/>the<sp/>screen<sp/>or<sp/>under<sp/>mouse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>ignoring<sp/>requested<sp/>position<sp/>in<sp/>window-specific<sp/>settings<sp/>helps,<sp/>and<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there&apos;s<sp/>also<sp/>_NET_WM_FULL_PLACEMENT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usePosition<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>Force<sp/>using<sp/>placement<sp/>policy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usePosition<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1aa0179fdd1c6fee664b5401f61f35e493" kindref="member">isSplash</ref>())<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>Force<sp/>using<sp/>placement<sp/>policy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usePosition<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkIgnoreGeometry(!usePosition,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_geometryHints.hasPosition())<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>placementDone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disobey<sp/>xinerama<sp/>placement<sp/>option<sp/>for<sp/>now<sp/>(#70943)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22a8a4463af95e4961719929955d4eabd0d" kindref="member">PlacementArea</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>geom.center());</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1af6f8e4a552926fe7968147d02b5ba732" kindref="member">isMovable</ref>()<sp/>&amp;&amp;<sp/>(geom.x()<sp/>&gt;<sp/>area.right()<sp/>||<sp/>geom.y()<sp/>&gt;<sp/>area.bottom()))<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>placementDone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Weird,<sp/>do<sp/>not<sp/>trust.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(placementDone)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPointF<sp/>position<sp/>=<sp/>geom.topLeft();</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Session<sp/>contains<sp/>the<sp/>position<sp/>of<sp/>the<sp/>frame<sp/>geometry<sp/>before<sp/>gravitating.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!session)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a54fae364d539ef6501ae44c2a3a57d55" kindref="member">clientPosToFramePos</ref>(position);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a6dc0bc3b6fedf55e01d0db0ee508b320" kindref="member">move</ref>(position);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>client<sp/>group<sp/>if<sp/>the<sp/>window<sp/>will<sp/>have<sp/>a<sp/>decoration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dontKeepInArea<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a2867cf88dbab9e9101452ff49a44790e" kindref="member">setColorScheme</ref>(<ref refid="class_k_win_1_1_x11_window_1a0578029e113c93a9816a7c11590c8b8c" kindref="member">readPreferredColorScheme</ref>(colorSchemeCookie));</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a68b4cac4c0bafcdaa1b65abdd1698b4e" kindref="member">readApplicationMenuServiceName</ref>(applicationMenuServiceNameCookie);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a0fa9fddfd088d3b8402fe8f3c77bf694" kindref="member">readApplicationMenuObjectPath</ref>(applicationMenuObjectPathCookie);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>updateDecoration(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Also<sp/>gravitates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Is<sp/>CentralGravity<sp/>right<sp/>here,<sp/>when<sp/>resizing<sp/>is<sp/>done<sp/>after<sp/>gravitating?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>constrainedClientSize<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1ad86f89d181510912a5d22dd8809232f8" kindref="member">constrainClientSize</ref>(geom.size());</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a4f9ff78c2b5b8fb2c900869968a9df63" kindref="member">resize</ref>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkSize(<ref refid="class_k_win_1_1_x11_window_1a00a45287c67f885c7ca53be41eb9344e" kindref="member">clientSizeToFrameSize</ref>(constrainedClientSize),<sp/>!isMapped));</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>forced_pos<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;<ref refid="class_k_win_1_1_window_rules_1a0ca12cfdee8377b656e40860b240131e" kindref="member">checkPositionSafe</ref>(<ref refid="namespace_k_win_1a4a39ecf55d45321f21eedbcd045c2206" kindref="member">invalidPoint</ref>,<sp/>!isMapped);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(forced_pos<sp/>!=<sp/><ref refid="namespace_k_win_1a4a39ecf55d45321f21eedbcd045c2206" kindref="member">invalidPoint</ref>)<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a6dc0bc3b6fedf55e01d0db0ee508b320" kindref="member">move</ref>(forced_pos);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>placementDone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>keep<sp/>inside<sp/>workarea<sp/>if<sp/>the<sp/>window<sp/>has<sp/>specially<sp/>configured<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partial_keep_in_area<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22ae101469eee96aace48208a1b5902e380" kindref="member">FullArea</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>geom.center());</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!placementDone)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Placement<sp/>needs<sp/>to<sp/>be<sp/>after<sp/>setting<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a895516d998d121ec543bce0b65cd5ddf" kindref="member">placement</ref>()-&gt;<ref refid="class_k_win_1_1_placement_1a88d130d08a017b3d1dae128f8a1e359b" kindref="member">place</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>area);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>client<sp/>may<sp/>have<sp/>been<sp/>moved<sp/>to<sp/>another<sp/>screen,<sp/>update<sp/>placement<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22a8a4463af95e4961719929955d4eabd0d" kindref="member">PlacementArea</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_window_1ad20775a66b1c93ffb3cd0a8e917cc92b" kindref="member">moveResizeOutput</ref>());</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dontKeepInArea<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>placementDone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bugs<sp/>#285967,<sp/>#286146,<sp/>#183694</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>geometry()<sp/>now<sp/>includes<sp/>the<sp/>requested<sp/>size<sp/>and<sp/>the<sp/>decoration<sp/>and<sp/>is<sp/>at<sp/>the<sp/>correct<sp/>screen/position<sp/>(hopefully)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximization<sp/>for<sp/>oversized<sp/>windows<sp/>must<sp/>happen<sp/>NOW.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>effectively<sp/>pass<sp/>keepInArea(),<sp/>the<sp/>window<sp/>will<sp/>resizeWithChecks()<sp/>-<sp/>i.e.<sp/>constrained</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>combo<sp/>of<sp/>all<sp/>screen<sp/>MINUS<sp/>all<sp/>struts<sp/>on<sp/>the<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>only<sp/>one<sp/>screen<sp/>struts,<sp/>this<sp/>will<sp/>affect<sp/>screens<sp/>as<sp/>a<sp/>side-effect,<sp/>the<sp/>window<sp/>is<sp/>artificailly<sp/>shrinked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>below<sp/>the<sp/>screen<sp/>size<sp/>and<sp/>as<sp/>result<sp/>no<sp/>more<sp/>maximized<sp/>what<sp/>breaks<sp/>KMainWindow&apos;s<sp/>stupid<sp/>width+1,<sp/>height+1<sp/>hack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>get<sp/>KMainWindow<sp/>a<sp/>correct<sp/>state<sp/>storage<sp/>what<sp/>will<sp/>allow<sp/>to<sp/>store<sp/>the<sp/>restore<sp/>size<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!session)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>has<sp/>a<sp/>better<sp/>handling<sp/>of<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a9372354c3330f992f28ca6e6fb22d700" kindref="member">setGeometryRestore</ref>(<ref refid="class_k_win_1_1_window_1a5bd40e38d16c8453af9226579d1865ac" kindref="member">moveResizeGeometry</ref>());<sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>restore<sp/>geometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a1ef7085c0c0cf02938b8bbc1dedb3866" kindref="member">isMaximizable</ref>()<sp/>&amp;&amp;<sp/>(<ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>()<sp/>&gt;=<sp/>area.width()<sp/>||<sp/><ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>()<sp/>&gt;=<sp/>area.height()))<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Window<sp/>is<sp/>too<sp/>large<sp/>for<sp/>the<sp/>screen,<sp/>maximize<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>directions<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>ss<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22a55525774d8c6ed299ad03a68b84c70d6" kindref="member">ScreenArea</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>area.center()).size();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>fsa<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22ae101469eee96aace48208a1b5902e380" kindref="member">FullArea</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>geom.center());</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>cs<sp/>=<sp/><ref refid="class_k_win_1_1_window_1ae5046998639848857380670149aa13d5" kindref="member">clientSize</ref>();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pseudo_max<sp/>=<sp/>((info-&gt;state()<sp/>&amp;<sp/>NET::MaxVert)<sp/>?<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeVertical</ref><sp/>:<sp/>0)<sp/>|<sp/>((info-&gt;state()<sp/>&amp;<sp/>NET::MaxHoriz)<sp/>?<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeHorizontal</ref><sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>()<sp/>&gt;=<sp/>area.width())<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pseudo_max<sp/>|=<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeHorizontal</ref>;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>()<sp/>&gt;=<sp/>area.height())<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pseudo_max<sp/>|=<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeVertical</ref>;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>heuristics:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>decorated<sp/>client<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>entire<sp/>screen,<sp/>the<sp/>user<sp/>might<sp/>want<sp/>to<sp/>move<sp/>it<sp/>around<sp/>(multiscreen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case,<sp/>if<sp/>the<sp/>decorated<sp/>client<sp/>is<sp/>bigger<sp/>than<sp/>the<sp/>screen<sp/>(+1),<sp/>we<sp/>don&apos;t<sp/>take<sp/>this<sp/>as<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attempt<sp/>for<sp/>maximization,<sp/>but<sp/>just<sp/>constrain<sp/>the<sp/>size<sp/>(the<sp/>window<sp/>simply<sp/>wants<sp/>to<sp/>be<sp/>bigger)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i<sp/>intended<sp/>a<sp/>second<sp/>check<sp/>on<sp/>cs<sp/>&lt;<sp/>area.size()<sp/>(&quot;the<sp/>managed<sp/>client<sp/>(&quot;minus<sp/>border&quot;)<sp/>is<sp/>smaller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>the<sp/>workspace&quot;)<sp/>but<sp/>gtk<sp/>/<sp/>gimp<sp/>seems<sp/>to<sp/>store<sp/>it&apos;s<sp/>size<sp/>including<sp/>the<sp/>decoration,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>thus<sp/>a<sp/>former<sp/>maximized<sp/>window<sp/>wil<sp/>become<sp/>non-maximized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepInFsArea<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>()<sp/>&lt;<sp/>fsa.width()<sp/>&amp;&amp;<sp/>(cs.width()<sp/>&gt;<sp/>ss.width()<sp/>+<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pseudo_max<sp/>&amp;=<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">~MaximizeHorizontal</ref>;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keepInFsArea<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>()<sp/>&lt;<sp/>fsa.height()<sp/>&amp;&amp;<sp/>(cs.height()<sp/>&gt;<sp/>ss.height()<sp/>+<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pseudo_max<sp/>&amp;=<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">~MaximizeVertical</ref>;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keepInFsArea<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pseudo_max<sp/>!=<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a53d04d48a6022c3cdf27d735a3b1de29" kindref="member">MaximizeRestore</ref>)<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a4e215498a2a89848ba5b6aa7e4fd56db" kindref="member">maximize</ref>((<ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9" kindref="member">MaximizeMode</ref>)pseudo_max);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>now<sp/>on,<sp/>care<sp/>about<sp/>maxmode,<sp/>since<sp/>the<sp/>maximization<sp/>call<sp/>will<sp/>override<sp/>mode<sp/>for<sp/>fix<sp/>aspects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dontKeepInArea<sp/>|=<sp/>(max_mode<sp/>==<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>savedGeometry;<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>placement<sp/>when<sp/>unmaximizing<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(max_mode<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeVertical</ref>))<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savedGeometry.setY(<ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref>());<sp/></highlight><highlight class="comment">//<sp/>...but<sp/>only<sp/>for<sp/>horizontal<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savedGeometry.setHeight(<ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>());</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(max_mode<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeHorizontal</ref>))<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savedGeometry.setX(<ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref>());<sp/></highlight><highlight class="comment">//<sp/>...but<sp/>only<sp/>for<sp/>vertical<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savedGeometry.setWidth(<ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>());</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a9372354c3330f992f28ca6e6fb22d700" kindref="member">setGeometryRestore</ref>(savedGeometry);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keepInFsArea)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aca6e1f1d8772897c5efbfb3c17fa436e" kindref="member">moveResize</ref>(<ref refid="class_k_win_1_1_window_1a2bc639db4c4a762bc0d58a715136a0ca" kindref="member">keepInArea</ref>(<ref refid="class_k_win_1_1_window_1a5bd40e38d16c8453af9226579d1865ac" kindref="member">moveResizeGeometry</ref>(),<sp/>fsa,<sp/>partial_keep_in_area));</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!<ref refid="class_k_win_1_1_window_1a26bdcce1a00f8b7a1c1401b5bf132874" kindref="member">isSpecialWindow</ref>()<sp/>||<sp/><ref refid="class_k_win_1_1_window_1a5fa248e56c9434f4d7002528b360a092" kindref="member">isToolbar</ref>())<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_x11_window_1af6f8e4a552926fe7968147d02b5ba732" kindref="member">isMovable</ref>()<sp/>&amp;&amp;<sp/>!dontKeepInArea)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aca6e1f1d8772897c5efbfb3c17fa436e" kindref="member">moveResize</ref>(<ref refid="class_k_win_1_1_window_1a2bc639db4c4a762bc0d58a715136a0ca" kindref="member">keepInArea</ref>(<ref refid="class_k_win_1_1_window_1a5bd40e38d16c8453af9226579d1865ac" kindref="member">moveResizeGeometry</ref>(),<sp/>area,<sp/>partial_keep_in_area));</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1aeba379d644f6d23d9967f08e1d4fe462" kindref="member">updateShape</ref>();</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CT:<sp/>Extra<sp/>check<sp/>for<sp/>stupid<sp/>jdk<sp/>1.3.1.<sp/>But<sp/>should<sp/>make<sp/>sense<sp/>in<sp/>general</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>client<sp/>has<sp/>initial<sp/>state<sp/>set<sp/>to<sp/>Iconic<sp/>and<sp/>is<sp/>transient<sp/>with<sp/>a<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>window<sp/>that<sp/>is<sp/>not<sp/>Iconic,<sp/>set<sp/>init_state<sp/>to<sp/>Normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(init_minimize<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_x11_window_1a30e74c044caf63f869473d6b8648f506" kindref="member">isTransient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mainwindows<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a0b9273d4b5cbb939568096e8a73db60e" kindref="member">mainWindows</ref>();</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>mainwindows.constBegin();<sp/>it<sp/>!=<sp/>mainwindows.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it)-&gt;isShown())<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_minimize<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>SELI<sp/>TODO:<sp/>Even<sp/>e.g.<sp/>for<sp/>NET::Utility?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>dialog<sp/>is<sp/>shown<sp/>for<sp/>minimized<sp/>window,<sp/>minimize<sp/>it<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!init_minimize<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_x11_window_1a30e74c044caf63f869473d6b8648f506" kindref="member">isTransient</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_x11_window_1a0b9273d4b5cbb939568096e8a73db60e" kindref="member">mainWindows</ref>().count()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;sessionManager()-&gt;state()<sp/>!=<sp/><ref refid="namespace_k_win_1a416cef954a72080ddb0d040111f008dca4e11db406c6c9f234fe8579cc9bc5ef6" kindref="member">SessionState::Saving</ref>)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible_parent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>allMainWindows(),<sp/>to<sp/>include<sp/>also<sp/>main<sp/>clients<sp/>of<sp/>group<sp/>transients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>been<sp/>optimized<sp/>out<sp/>in<sp/>X11Window::checkGroupTransients()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mainwindows<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a631797f76ba2b3af0cbcbc74b060e8ec" kindref="member">allMainWindows</ref>();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>mainwindows.constBegin();<sp/>it<sp/>!=<sp/>mainwindows.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it)-&gt;isShown())<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visible_parent<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!visible_parent)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_minimize<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a2d638a5cbb6a91a00b5a5c14c9694888" kindref="member">demandAttention</ref>();</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a2020d42e4c3f51da3bcec8cfdc632f86" kindref="member">setMinimized</ref>(init_minimize);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>settings<sp/>from<sp/>the<sp/>previous<sp/>session</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(session)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Session<sp/>restored<sp/>windows<sp/>are<sp/>not<sp/>considered<sp/>to<sp/>be<sp/>new<sp/>windows<sp/>WRT<sp/>rules,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I.e.<sp/>obey<sp/>only<sp/>forcing<sp/>rules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1afc24b8209fd3821a0b706667d7b97847" kindref="member">setKeepAbove</ref>(session-&gt;<ref refid="struct_k_win_1_1_session_info_1ab83779808903e0f8cfffc3b6d6327d1c" kindref="member">keepAbove</ref>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a10220e62a04571d571a0950fb657b2d2" kindref="member">setKeepBelow</ref>(session-&gt;<ref refid="struct_k_win_1_1_session_info_1a538249ffc89263b9fc38a343c6fc91ad" kindref="member">keepBelow</ref>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a42e28c55648d7fbd21d164b14d889dea" kindref="member">setOriginalSkipTaskbar</ref>(session-&gt;<ref refid="struct_k_win_1_1_session_info_1a9946ca608f5eb50e9cc822835960aead" kindref="member">skipTaskbar</ref>);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a9511f02ec7549d4520c56cc8e71341ab" kindref="member">setSkipPager</ref>(session-&gt;<ref refid="struct_k_win_1_1_session_info_1a7b156e596407a933c252c264eb52e3aa" kindref="member">skipPager</ref>);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ae740a221f99373e76b5ed57a6edfb5a8" kindref="member">setSkipSwitcher</ref>(session-&gt;<ref refid="struct_k_win_1_1_session_info_1a34f110ee4fe0f8294ee506025cc19c76" kindref="member">skipSwitcher</ref>);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a14232d4a0703db154fc0f506be5a675a" kindref="member">setShade</ref>(session-&gt;<ref refid="struct_k_win_1_1_session_info_1ab5489d4957357afd622fa0f689aa1bd7" kindref="member">shaded</ref><sp/>?<sp/><ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585faf7edb6b11c2666b2ef0da40d95f12d39" kindref="member">ShadeNormal</ref><sp/>:<sp/><ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585fa96968d2418f89776544aadc16404b6d4" kindref="member">ShadeNone</ref>);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a294f762b7e595263d56cb155330f19fd" kindref="member">setOpacity</ref>(session-&gt;<ref refid="struct_k_win_1_1_session_info_1a2905d4bea172eea3bb5461b37f8b29c7" kindref="member">opacity</ref>);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a9372354c3330f992f28ca6e6fb22d700" kindref="member">setGeometryRestore</ref>(session-&gt;<ref refid="struct_k_win_1_1_session_info_1ab3f0dd438993ae039dc60e1edaf3fee2" kindref="member">restore</ref>);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(session-&gt;<ref refid="struct_k_win_1_1_session_info_1a4f14cb738f97f6d4419e95cf15b20894" kindref="member">maximized</ref><sp/>!=<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a53d04d48a6022c3cdf27d735a3b1de29" kindref="member">MaximizeRestore</ref>)<sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a4e215498a2a89848ba5b6aa7e4fd56db" kindref="member">maximize</ref>(<ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9" kindref="member">MaximizeMode</ref>(session-&gt;<ref refid="struct_k_win_1_1_session_info_1a4f14cb738f97f6d4419e95cf15b20894" kindref="member">maximized</ref>));</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(session-&gt;<ref refid="struct_k_win_1_1_session_info_1adbe48481f117ceaae0422bf01f92bf9a" kindref="member">fullscreen</ref><sp/>!=<sp/>FullScreenNone)<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a2f48fc29406a12f659c62e25709e81a9" kindref="member">setFullScreen</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aa475aaf802327aabba57f3c9404a34d3" kindref="member">setFullscreenGeometryRestore</ref>(session-&gt;<ref refid="struct_k_win_1_1_session_info_1a2a0ea09bcbf79051fc2384bc9577c199" kindref="member">fsrestore</ref>);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>checkedGeometryRestore<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>();</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a0b6dba6ec28ac38cae39cc392c735970" kindref="member">checkOffscreenPosition</ref>(&amp;checkedGeometryRestore,<sp/>area);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a9372354c3330f992f28ca6e6fb22d700" kindref="member">setGeometryRestore</ref>(checkedGeometryRestore);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>checkedFullscreenGeometryRestore<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aafa6825cf1306da791fa827c4ba98006" kindref="member">fullscreenGeometryRestore</ref>();</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a0b6dba6ec28ac38cae39cc392c735970" kindref="member">checkOffscreenPosition</ref>(&amp;checkedFullscreenGeometryRestore,<sp/>area);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aa475aaf802327aabba57f3c9404a34d3" kindref="member">setFullscreenGeometryRestore</ref>(checkedFullscreenGeometryRestore);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Window<sp/>may<sp/>want<sp/>to<sp/>be<sp/>maximized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>done<sp/>after<sp/>checking<sp/>that<sp/>the<sp/>window<sp/>isn&apos;t<sp/>larger<sp/>than<sp/>the<sp/>workarea,<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>restore<sp/>geometry<sp/>from<sp/>the<sp/>checks<sp/>above<sp/>takes<sp/>precedence,<sp/>and<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>isn&apos;t<sp/>restored<sp/>larger<sp/>than<sp/>the<sp/>workarea</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9" kindref="member">MaximizeMode</ref><sp/>maxmode<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9" kindref="member">MaximizeMode</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((info-&gt;state()<sp/>&amp;<sp/>NET::MaxVert)<sp/>?<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeVertical</ref><sp/>:<sp/>0)<sp/>|<sp/>((info-&gt;state()<sp/>&amp;<sp/>NET::MaxHoriz)<sp/>?<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeHorizontal</ref><sp/>:<sp/>0));</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9" kindref="member">MaximizeMode</ref><sp/>forced_maxmode<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;<ref refid="class_k_win_1_1_window_rules_1a9f56fb1b08d9528b03af0298fe0de827" kindref="member">checkMaximize</ref>(maxmode,<sp/>!isMapped);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Either<sp/>hints<sp/>were<sp/>set<sp/>to<sp/>maximize,<sp/>or<sp/>is<sp/>forced<sp/>to<sp/>maximize,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>is<sp/>forced<sp/>to<sp/>non-maximize<sp/>and<sp/>hints<sp/>were<sp/>set<sp/>to<sp/>maximize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(forced_maxmode<sp/>!=<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a53d04d48a6022c3cdf27d735a3b1de29" kindref="member">MaximizeRestore</ref><sp/>||<sp/>maxmode<sp/>!=<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a53d04d48a6022c3cdf27d735a3b1de29" kindref="member">MaximizeRestore</ref>)<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a4e215498a2a89848ba5b6aa7e4fd56db" kindref="member">maximize</ref>(forced_maxmode);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>other<sp/>initial<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a14232d4a0703db154fc0f506be5a675a" kindref="member">setShade</ref>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkShade(info-&gt;state()<sp/>&amp;<sp/>NET::Shaded<sp/>?<sp/><ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585faf7edb6b11c2666b2ef0da40d95f12d39" kindref="member">ShadeNormal</ref><sp/>:<sp/><ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585fa96968d2418f89776544aadc16404b6d4" kindref="member">ShadeNone</ref>,<sp/>!isMapped));</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1afc24b8209fd3821a0b706667d7b97847" kindref="member">setKeepAbove</ref>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkKeepAbove(info-&gt;state()<sp/>&amp;<sp/>NET::KeepAbove,<sp/>!isMapped));</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a10220e62a04571d571a0950fb657b2d2" kindref="member">setKeepBelow</ref>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkKeepBelow(info-&gt;state()<sp/>&amp;<sp/>NET::KeepBelow,<sp/>!isMapped));</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a42e28c55648d7fbd21d164b14d889dea" kindref="member">setOriginalSkipTaskbar</ref>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkSkipTaskbar(info-&gt;state()<sp/>&amp;<sp/>NET::SkipTaskbar,<sp/>!isMapped));</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a9511f02ec7549d4520c56cc8e71341ab" kindref="member">setSkipPager</ref>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkSkipPager(info-&gt;state()<sp/>&amp;<sp/>NET::SkipPager,<sp/>!isMapped));</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ae740a221f99373e76b5ed57a6edfb5a8" kindref="member">setSkipSwitcher</ref>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkSkipSwitcher(info-&gt;state()<sp/>&amp;<sp/>NET::SkipSwitcher,<sp/>!isMapped));</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;state()<sp/>&amp;<sp/>NET::DemandsAttention)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a2d638a5cbb6a91a00b5a5c14c9694888" kindref="member">demandAttention</ref>();</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;state()<sp/>&amp;<sp/>NET::Modal)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a52d0efcfe93dcc8813fddcb813e9120e" kindref="member">setModal</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a294f762b7e595263d56cb155330f19fd" kindref="member">setOpacity</ref>(info-&gt;opacityF());</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a2f48fc29406a12f659c62e25709e81a9" kindref="member">setFullScreen</ref>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkFullScreen(info-&gt;state()<sp/>&amp;<sp/>NET::FullScreen,<sp/>!isMapped));</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>updateAllowedActions(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>initial<sp/>user<sp/>time<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>m_userTime<sp/>=<sp/>readUserTimeMapTimestamp(asn_valid<sp/>?<sp/>&amp;asn_id<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>asn_valid<sp/>?<sp/>&amp;asn_data<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>session);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;<ref refid="class_k_win_1_1_group_1a75b05aba9775db39607e95294e86cc7d" kindref="member">updateUserTime</ref>(m_userTime);<sp/></highlight><highlight class="comment">//<sp/>And<sp/>do<sp/>what<sp/>X11Window::updateUserTime()<sp/>does</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>avoid<sp/>flicker,<sp/>because<sp/>real<sp/>restacking<sp/>is<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>after<sp/>manage()<sp/>finishes<sp/>because<sp/>of<sp/>blocking,<sp/>but<sp/>the<sp/>window<sp/>is<sp/>shown<sp/>sooner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>m_frame.lower();</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(session<sp/>&amp;&amp;<sp/>session-&gt;<ref refid="struct_k_win_1_1_session_info_1a6839278d125f4b27a0772ad713f89b77" kindref="member">stackingOrder</ref><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm_stacking_order<sp/>=<sp/>session-&gt;<ref refid="struct_k_win_1_1_session_info_1a6839278d125f4b27a0772ad713f89b77" kindref="member">stackingOrder</ref>;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;restoreSessionStackingOrder(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1aed48d73c0d33bd1134f6c0b48104030d" kindref="member">isShown</ref>())<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(session)<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allow<sp/>=<sp/>session-&gt;<ref refid="struct_k_win_1_1_session_info_1ab2f3678102ee7bff0a4e14c05fe0fd1d" kindref="member">active</ref><sp/>&amp;&amp;<sp/>(!<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a4d5d4700d08dbc47bb74f740d54e2c9b" kindref="member">wasUserInteraction</ref>()<sp/>||<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a0fcebcde2aaab133120f33d412e34fd6" kindref="member">activeWindow</ref>()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a0fcebcde2aaab133120f33d412e34fd6" kindref="member">activeWindow</ref>()-&gt;<ref refid="class_k_win_1_1_window_1ab56044e6eff0cd7e2a144756834c0751" kindref="member">isDesktop</ref>());</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allow<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1ac4ea0281b6dd47dc2eadc44c5b824b0d" kindref="member">allowWindowActivation</ref>(<ref refid="class_k_win_1_1_x11_window_1ada9945f8884ca782481cb3fbfb8f33ea" kindref="member">userTime</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSessionSaving<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1adbf79458e8db9c18b4144a8755d63a47" kindref="member">sessionManager</ref>()-&gt;<ref refid="class_k_win_1_1_session_manager_1adbae04586126cdaef1d7dc2ad7c90628" kindref="member">state</ref>()<sp/>==<sp/><ref refid="namespace_k_win_1a416cef954a72080ddb0d040111f008dca4e11db406c6c9f234fe8579cc9bc5ef6" kindref="member">SessionState::Saving</ref>;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>session<sp/>saving,<sp/>force<sp/>showing<sp/>new<sp/>windows<sp/>(i.e.<sp/>&quot;save<sp/>file?&quot;<sp/>dialogs<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>force<sp/>if<sp/>activation<sp/>is<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_1aa975d4f4a79a999c827e0a4d7bb5c1dd" kindref="member">isOnCurrentDesktop</ref>()<sp/>&amp;&amp;<sp/>!isMapped<sp/>&amp;&amp;<sp/>!session<sp/>&amp;&amp;<sp/>(allow<sp/>||<sp/>isSessionSaving))<sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VirtualDesktopManager::self()-&gt;setCurrent(<ref refid="class_k_win_1_1_x11_window_1ad33086a0fc2f1cd541bec4d5ccb092d8" kindref="member">desktopId</ref>());</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>window<sp/>is<sp/>on<sp/>an<sp/>inactive<sp/>activity<sp/>during<sp/>session<sp/>saving,<sp/>temporarily<sp/>force<sp/>it<sp/>to<sp/>show.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isMapped<sp/>&amp;&amp;<sp/>!session<sp/>&amp;&amp;<sp/>isSessionSaving<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_window_1a6214074a0338d546c1c97c736f1b1fe6" kindref="member">isOnCurrentActivity</ref>())<sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1ae56e338fd870babf17b618f5f877c134" kindref="member">setSessionActivityOverride</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>windows<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a0b9273d4b5cbb939568096e8a73db60e" kindref="member">mainWindows</ref>();</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a1f57b5fc7e5ebf9060435cacce04349d" kindref="member">Window</ref><sp/>*w<sp/>:<sp/>windows)<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*mw<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(w))<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mw-&gt;setSessionActivityOverride(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1aa975d4f4a79a999c827e0a4d7bb5c1dd" kindref="member">isOnCurrentDesktop</ref>()<sp/>&amp;&amp;<sp/>!isMapped<sp/>&amp;&amp;<sp/>!allow<sp/>&amp;&amp;<sp/>(!session<sp/>||<sp/>session-&gt;<ref refid="struct_k_win_1_1_session_info_1a6839278d125f4b27a0772ad713f89b77" kindref="member">stackingOrder</ref><sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1addfc730c9bf5ef27eb67b927f87c07be" kindref="member">restackWindowUnderActive</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a0455ca5d541dedad3447ba818ff5060f" kindref="member">updateVisibility</ref>();</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isMapped)<sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allow<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_window_1aa975d4f4a79a999c827e0a4d7bb5c1dd" kindref="member">isOnCurrentDesktop</ref>())<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_1a26bdcce1a00f8b7a1c1401b5bf132874" kindref="member">isSpecialWindow</ref>())<sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;focusPolicyIsReasonable()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_window_1ac69f930533a8e570ccc0e002dc077fcb" kindref="member">wantsTabFocus</ref>())<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1abb14aa92b6473b4e8e06388d34460b90" kindref="member">requestFocus</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!session<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_window_1a26bdcce1a00f8b7a1c1401b5bf132874" kindref="member">isSpecialWindow</ref>())<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a2d638a5cbb6a91a00b5a5c14c9694888" kindref="member">demandAttention</ref>();</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a0455ca5d541dedad3447ba818ff5060f" kindref="member">updateVisibility</ref>();</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(mapping_state<sp/>!=<sp/>Withdrawn);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>m_managed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1ae3e0c34d99ddf77ff1f285845bd57ecf" kindref="member">blockGeometryUpdates</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_userTime<sp/>==<sp/>XCB_TIME_CURRENT_TIME<sp/>||<sp/>m_userTime<sp/>==<sp/>-1U)<sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>known<sp/>user<sp/>time,<sp/>set<sp/>something<sp/>old</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_userTime<sp/>=<sp/><ref refid="namespace_k_win_1a71cc78d22f170a8c6639a9d83694fb8a" kindref="member">xTime</ref>()<sp/>-<sp/>1000000;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_userTime<sp/>==<sp/>XCB_TIME_CURRENT_TIME<sp/>||<sp/>m_userTime<sp/>==<sp/>-1U)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>be<sp/>paranoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_userTime<sp/>=<sp/><ref refid="namespace_k_win_1a71cc78d22f170a8c6639a9d83694fb8a" kindref="member">xTime</ref>()<sp/>-<sp/>1000000<sp/>+<sp/>10;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sendSyntheticConfigureNotify();<sp/>//<sp/>Done<sp/>when<sp/>setting<sp/>mapping<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>session;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1abf855a28da219dbab00882f1bf790f99" kindref="member">applyWindowRules</ref>();<sp/></highlight><highlight class="comment">//<sp/>Just<sp/>in<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aa6d9b69aa8a43a168a1948f23db0d48e" kindref="member">rulebook</ref>()-&gt;<ref refid="class_k_win_1_1_rule_book_1af5755f35e3f0dc90f304cb162510ec03" kindref="member">discardUsed</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>ApplyNow<sp/>rules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a596570835e18830ab4d15180190debc5" kindref="member">updateWindowRules</ref>(<ref refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a5f34a4989e40d5351a197908f48c5ab0" kindref="member">Rules::All</ref>);<sp/></highlight><highlight class="comment">//<sp/>Was<sp/>blocked<sp/>while<sp/>!isManaged()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>readShowOnScreenEdge(showOnScreenEdgeCookie);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a0ff6b1fc41b88953d7f641a33492e54d" kindref="member">setupWindowManagementInterface</ref>();</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>wayland<sp/>surface<sp/>is<sp/>associated<sp/>with<sp/>the<sp/>window<sp/>asynchronously.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a379c25dec85d7b0aee3b79676327b9b6" kindref="member">surface</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>associate();</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_window_1a5ab5cf58669820a49608cb46f3ea3e5b" kindref="member">Window::surfaceChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;X11Window::associate);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(kwinApp(),<sp/>&amp;<ref refid="class_k_win_1_1_application_1aa633f877604e4cebe05589081ac5790b" kindref="member">Application::xwaylandScaleChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;X11Window::handleXwaylandScaleChanged);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Called<sp/>only<sp/>from<sp/>manage()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::embedClient(xcb_window_t<sp/>w,<sp/>xcb_visualid_t<sp/>visualid,<sp/>xcb_colormap_t<sp/>colormap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;nativeGeometry,<sp/>uint8_t<sp/>depth)</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(m_client<sp/>==<sp/>XCB_WINDOW_NONE);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_x11_window_1a41fce59f634f8e4f8cbb0cc52cb1dd71" kindref="member">frameId</ref>()<sp/>==<sp/>XCB_WINDOW_NONE);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(m_wrapper<sp/>==<sp/>XCB_WINDOW_NONE);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>m_client.<ref refid="class_k_win_1_1_xcb_1_1_window_1ae8cff9dca8338d9119dff4e8e7c9415f" kindref="member">reset</ref>(w,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>nativeGeometry);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>zero_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_connection_t<sp/>*conn<sp/>=<sp/>kwinApp()-&gt;x11Connection();</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>want<sp/>the<sp/>window<sp/>to<sp/>be<sp/>destroyed<sp/>when<sp/>we<sp/>quit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_change_save_set(conn,<sp/>XCB_SET_MODE_INSERT,<sp/>m_client);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>m_client.<ref refid="class_k_win_1_1_xcb_1_1_window_1a1b64c7bb4def7c186e81c8dd7948bede" kindref="member">selectInput</ref>(zero_value);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>m_client.<ref refid="class_k_win_1_1_xcb_1_1_window_1a86e4cda4a254f41e5b40d907ce789aef" kindref="member">unmap</ref>();</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>m_client.<ref refid="class_k_win_1_1_xcb_1_1_window_1acde5cbe03b108920f6c5cb3bb0197c5a" kindref="member">setBorderWidth</ref>(zero_value);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>These<sp/>values<sp/>must<sp/>match<sp/>the<sp/>order<sp/>in<sp/>the<sp/>xcb_cw_t<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>cw_values[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>back_pixmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>border_pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colormap,<sp/></highlight><highlight class="comment">//<sp/>colormap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_cursors_1a5e43427047cf7663b4d9723fac4c1408" kindref="member">Cursors::self</ref>()-&gt;<ref refid="class_k_win_1_1_cursors_1acf6c2a783e4dec9b50fc15784ce3f167" kindref="member">mouse</ref>()-&gt;<ref refid="class_k_win_1_1_cursor_1a12896f22c313f2fba1a2f440d40ebb60" kindref="member">x11Cursor</ref>(Qt::ArrowCursor)};</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>cw_mask<sp/>=<sp/>XCB_CW_BACK_PIXMAP</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>XCB_CW_BORDER_PIXEL</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>XCB_CW_COLORMAP</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>XCB_CW_CURSOR;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>frame<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_window_t<sp/>frame<sp/>=<sp/>xcb_generate_id(conn);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_create_window(conn,<sp/><ref refid="class_k_win_1_1_x11_window_1aba9a7266b1f4259019315768ba4394a6" kindref="member">depth</ref>,<sp/>frame,<sp/>kwinApp()-&gt;x11RootWindow(),<sp/>0,<sp/>0,<sp/>1,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XCB_WINDOW_CLASS_INPUT_OUTPUT,<sp/>visualid,<sp/>cw_mask,<sp/>cw_values);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>m_frame.<ref refid="class_k_win_1_1_xcb_1_1_window_1ae8cff9dca8338d9119dff4e8e7c9415f" kindref="member">reset</ref>(frame);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>wrapper<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_window_t<sp/><ref refid="class_k_win_1_1_x11_window_1aea04ef1d7bd98b427c4d3f4ac4f72322" kindref="member">wrapperId</ref><sp/>=<sp/>xcb_generate_id(conn);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_create_window(conn,<sp/><ref refid="class_k_win_1_1_x11_window_1aba9a7266b1f4259019315768ba4394a6" kindref="member">depth</ref>,<sp/><ref refid="class_k_win_1_1_x11_window_1aea04ef1d7bd98b427c4d3f4ac4f72322" kindref="member">wrapperId</ref>,<sp/>frame,<sp/>0,<sp/>0,<sp/>1,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XCB_WINDOW_CLASS_INPUT_OUTPUT,<sp/>visualid,<sp/>cw_mask,<sp/>cw_values);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wrapper.<ref refid="class_k_win_1_1_xcb_1_1_window_1ae8cff9dca8338d9119dff4e8e7c9415f" kindref="member">reset</ref>(<ref refid="class_k_win_1_1_x11_window_1aea04ef1d7bd98b427c4d3f4ac4f72322" kindref="member">wrapperId</ref>);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>m_client.<ref refid="class_k_win_1_1_xcb_1_1_window_1ade47ab3f686c841c9761a84c66f9d40f" kindref="member">reparent</ref>(m_wrapper);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>specify<sp/>the<sp/>event<sp/>masks<sp/>when<sp/>we<sp/>create<sp/>the<sp/>windows,<sp/>but<sp/>the<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Xlib<sp/>code<sp/>didn&apos;t.<sp/><sp/>Let&apos;s<sp/>preserve<sp/>that<sp/>behavior<sp/>here<sp/>for<sp/>now<sp/>so<sp/>we<sp/>don&apos;t<sp/>end<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>receiving<sp/>any<sp/>unexpected<sp/>events<sp/>from<sp/>the<sp/>wrapper<sp/>creation<sp/>or<sp/>the<sp/>reparenting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>m_frame.<ref refid="class_k_win_1_1_xcb_1_1_window_1a1b64c7bb4def7c186e81c8dd7948bede" kindref="member">selectInput</ref>(frameEventMask());</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wrapper.<ref refid="class_k_win_1_1_xcb_1_1_window_1a1b64c7bb4def7c186e81c8dd7948bede" kindref="member">selectInput</ref>(wrapperEventMask());</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>m_client.<ref refid="class_k_win_1_1_xcb_1_1_window_1a1b64c7bb4def7c186e81c8dd7948bede" kindref="member">selectInput</ref>(clientEventMask());</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::updateDecoration(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_workspace_pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!force<sp/>&amp;&amp;<sp/>((!<ref refid="class_k_win_1_1_window_1a85199ff20c051bd2738f150f96875b7f" kindref="member">isDecorated</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_x11_window_1a41bb8138b2bf7ce1cd9f62f2d839dce3" kindref="member">noBorder</ref>())<sp/>||<sp/>(<ref refid="class_k_win_1_1_window_1a85199ff20c051bd2738f150f96875b7f" kindref="member">isDecorated</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_x11_window_1a41bb8138b2bf7ce1cd9f62f2d839dce3" kindref="member">noBorder</ref>())))<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>oldgeom<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a5bd40e38d16c8453af9226579d1865ac" kindref="member">moveResizeGeometry</ref>();</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1ae3e0c34d99ddf77ff1f285845bd57ecf" kindref="member">blockGeometryUpdates</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(force)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroyDecoration();</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1a41bb8138b2bf7ce1cd9f62f2d839dce3" kindref="member">noBorder</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDecoration();</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroyDecoration();</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a5d25daf1a543308b42b9c90d98d7f213" kindref="member">updateShadow</ref>();</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_workspace_pos)<sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a39bbb6d7fea7175cb9d9956bb0218064" kindref="member">checkWorkspacePosition</ref>(oldgeom);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1ae3e0c34d99ddf77ff1f285845bd57ecf" kindref="member">blockGeometryUpdates</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>updateFrameExtents();</highlight></codeline>
<codeline lineno="1087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089" refid="class_k_win_1_1_x11_window_1a9ef0042230e05f0829491bbf6f3dd091" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a9ef0042230e05f0829491bbf6f3dd091" kindref="member">X11Window::invalidateDecoration</ref>()</highlight></codeline>
<codeline lineno="1090"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>updateDecoration(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::createDecoration()</highlight></codeline>
<codeline lineno="1095"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;KDecoration3::Decoration&gt;<sp/><ref refid="class_k_win_1_1_window_1aeb9f103fab307fd78c92cef1f14275b2" kindref="member">decoration</ref>(<ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;decorationBridge()-&gt;createDecoration(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1aeb9f103fab307fd78c92cef1f14275b2" kindref="member">decoration</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_window_1aeb9f103fab307fd78c92cef1f14275b2" kindref="member">decoration</ref>.get(),<sp/>&amp;KDecoration3::Decoration::bordersChanged,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isDeleted())<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>oldGeometry<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a5bd40e38d16c8453af9226579d1865ac" kindref="member">moveResizeGeometry</ref>();</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_1a3dfd89167d57f28ebedf72ffddd33191" kindref="member">isShade</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a39bbb6d7fea7175cb9d9956bb0218064" kindref="member">checkWorkspacePosition</ref>(oldGeometry);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateFrameExtents();</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aeb9f103fab307fd78c92cef1f14275b2" kindref="member">decoration</ref>-&gt;apply(<ref refid="class_k_win_1_1_window_1aeb9f103fab307fd78c92cef1f14275b2" kindref="member">decoration</ref>-&gt;nextState()-&gt;clone());</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_window_1aeb9f103fab307fd78c92cef1f14275b2" kindref="member">decoration</ref>.get(),<sp/>&amp;KDecoration3::Decoration::nextStateChanged,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!isDeleted())<sp/>{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_decoration.decoration-&gt;apply(state-&gt;clone());</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>setDecoration(decoration);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>moveResize(QRectF(calculateGravitation(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>clientSizeToFrameSize(clientSize())));</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::destroyDecoration()</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isDecorated())<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPointF<sp/>grav<sp/>=<sp/>calculateGravitation(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDecoration(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveResize(QRectF(grav,<sp/>clientSizeToFrameSize(clientSize())));</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::detectNoBorder()</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_shape)<sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noborder<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app_noborder<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(windowType())<sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WindowType::Desktop:</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WindowType::Dock:</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WindowType::TopMenu:</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WindowType::Splash:</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WindowType::Notification:</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WindowType::OnScreenDisplay:</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WindowType::CriticalNotification:</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WindowType::AppletPopup:</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noborder<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app_noborder<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WindowType::Unknown:</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WindowType::Normal:</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WindowType::Toolbar:</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WindowType::Menu:</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WindowType::Dialog:</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WindowType::Utility:</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noborder<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WindowType::Override<sp/>is<sp/>some<sp/>strange<sp/>beast<sp/>without<sp/>clear<sp/>definition,<sp/>usually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>meaning<sp/>&quot;noborder&quot;,<sp/>so<sp/>let&apos;s<sp/>treat<sp/>it<sp/>only<sp/>as<sp/>such<sp/>flag,<sp/>and<sp/>ignore<sp/>it<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>window<sp/>type<sp/>otherwise<sp/>(SUPPORTED_WINDOW_TYPES_MASK<sp/>doesn&apos;t<sp/>include<sp/>it)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1ad892545facf36d334d4558298117fbc7" kindref="member">WindowType</ref>(info-&gt;windowType(NET::OverrideMask))<sp/>==<sp/>WindowType::Override)<sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noborder<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app_noborder<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::updateFrameExtents()</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>NETStrut<sp/>strut;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>strut.left<sp/>=<sp/>Xcb::toXNative(borderLeft());</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>strut.right<sp/>=<sp/>Xcb::toXNative(borderRight());</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>strut.top<sp/>=<sp/>Xcb::toXNative(borderTop());</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>strut.bottom<sp/>=<sp/>Xcb::toXNative(borderBottom());</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setFrameExtents(strut);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::setClientFrameExtents(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NETStrut<sp/>&amp;strut)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMarginsF<sp/>clientFrameExtents(Xcb::fromXNative(strut.left),</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xcb::fromXNative(strut.top),</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xcb::fromXNative(strut.right),</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xcb::fromXNative(strut.bottom));</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_clientFrameExtents<sp/>==<sp/>clientFrameExtents)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>m_clientFrameExtents<sp/>=<sp/>clientFrameExtents;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>should<sp/>resize<sp/>the<sp/>client<sp/>when<sp/>its<sp/>custom<sp/>frame<sp/>extents<sp/>are<sp/>changed<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>logical<sp/>bounds<sp/>remain<sp/>the<sp/>same.<sp/>This<sp/>however<sp/>means<sp/>that<sp/>we<sp/>will<sp/>send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>several<sp/>configure<sp/>requests<sp/>to<sp/>the<sp/>application<sp/>upon<sp/>restoring<sp/>it<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maximized<sp/>or<sp/>fullscreen<sp/>state.<sp/>Notice<sp/>that<sp/>a<sp/>client-side<sp/>decorated<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cannot<sp/>be<sp/>shaded,<sp/>therefore<sp/>it&apos;s<sp/>okay<sp/>not<sp/>to<sp/>use<sp/>the<sp/>adjusted<sp/>size<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>moveResize(moveResizeGeometry());</highlight></codeline>
<codeline lineno="1197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199" refid="class_k_win_1_1_x11_window_1a51f795b9545f4b2b1c9aaa3bd3ff0fde" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a51f795b9545f4b2b1c9aaa3bd3ff0fde" kindref="member">X11Window::userNoBorder</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1200"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>noborder;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204" refid="class_k_win_1_1_x11_window_1a031295bc7fb1dd7e6752b29cec3c9472" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a031295bc7fb1dd7e6752b29cec3c9472" kindref="member">X11Window::isFullScreenable</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1205"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">isUnmanaged</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkFullScreen(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>check<sp/>size<sp/>constrains<sp/>-<sp/>some<sp/>apps<sp/>request<sp/>fullscreen<sp/>despite<sp/>requesting<sp/>fixed<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1a03433bdc26094171788332e5edfe66e3" kindref="member">isNormalWindow</ref>()<sp/>||<sp/><ref refid="class_k_win_1_1_window_1a7dd959da7a7a8d50a959684a92d55d65" kindref="member">isDialog</ref>();<sp/></highlight><highlight class="comment">//<sp/>also<sp/>better<sp/>disallow<sp/>only<sp/>weird<sp/>types<sp/>to<sp/>go<sp/>fullscreen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216" refid="class_k_win_1_1_x11_window_1a41bb8138b2bf7ce1cd9f62f2d839dce3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a41bb8138b2bf7ce1cd9f62f2d839dce3" kindref="member">X11Window::noBorder</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1217"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a51f795b9545f4b2b1c9aaa3bd3ff0fde" kindref="member">userNoBorder</ref>()<sp/>||<sp/><ref refid="class_k_win_1_1_x11_window_1ae5b462a986c3efa84fa3c566cc9b985e" kindref="member">isFullScreen</ref>();</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221" refid="class_k_win_1_1_x11_window_1a4a2834b58aae2c4a90b9730f99eb1e31" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a4a2834b58aae2c4a90b9730f99eb1e31" kindref="member">X11Window::userCanSetNoBorder</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1222"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">isUnmanaged</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Client-side<sp/>decorations<sp/>and<sp/>server-side<sp/>decorations<sp/>are<sp/>mutually<sp/>exclusive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1aa6f12c894ba2f2a0f1d37dfdeaa6c3ea" kindref="member">isClientSideDecorated</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_k_win_1_1_x11_window_1ae5b462a986c3efa84fa3c566cc9b985e" kindref="member">isFullScreen</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_window_1a3dfd89167d57f28ebedf72ffddd33191" kindref="member">isShade</ref>();</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235" refid="class_k_win_1_1_x11_window_1a4e73f983d63129203de7cdf7cb915826" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a4e73f983d63129203de7cdf7cb915826" kindref="member">X11Window::setNoBorder</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set)</highlight></codeline>
<codeline lineno="1236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1a4a2834b58aae2c4a90b9730f99eb1e31" kindref="member">userCanSetNoBorder</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>set<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkNoBorder(set);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noborder<sp/>==<sp/>set)<sp/>{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>noborder<sp/>=<sp/>set;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>updateDecoration(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a596570835e18830ab4d15180190debc5" kindref="member">updateWindowRules</ref>(<ref refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501afcb5c068c1240d2fc13ef796839d66d2" kindref="member">Rules::NoBorder</ref>);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_1ad800920f411886a60d8a154c1bbb4e1a" kindref="member">noBorderChanged</ref>();</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250" refid="class_k_win_1_1_x11_window_1a188bf6c90ae46ccd1dcba279fc494bb0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a188bf6c90ae46ccd1dcba279fc494bb0" kindref="member">X11Window::checkNoBorder</ref>()</highlight></codeline>
<codeline lineno="1251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a4e73f983d63129203de7cdf7cb915826" kindref="member">setNoBorder</ref>(app_noborder);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255" refid="class_k_win_1_1_x11_window_1afcee480b58ca8d3d4c54218a92243631" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1afcee480b58ca8d3d4c54218a92243631" kindref="member">X11Window::detectShape</ref>()</highlight></codeline>
<codeline lineno="1256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>is_shape<sp/>=<sp/><ref refid="class_k_win_1_1_xcb_1_1_extensions_1aa3e4e8ce7e28679ae1a562c7a2be81f2" kindref="member">Xcb::Extensions::self</ref>()-&gt;hasShape(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>());</highlight></codeline>
<codeline lineno="1258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260" refid="class_k_win_1_1_x11_window_1aeba379d644f6d23d9967f08e1d4fe462" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1aeba379d644f6d23d9967f08e1d4fe462" kindref="member">X11Window::updateShape</ref>()</highlight></codeline>
<codeline lineno="1261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_shape)<sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Workaround<sp/>for<sp/>#19644<sp/>-<sp/>Shaped<sp/>windows<sp/>shouldn&apos;t<sp/>have<sp/>decoration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!app_noborder)<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>when<sp/>shape<sp/>is<sp/>detected<sp/>for<sp/>the<sp/>first<sp/>time,<sp/>still<sp/>let<sp/>the<sp/>user<sp/>to<sp/>override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app_noborder<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noborder<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkNoBorder(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateDecoration(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_1a85199ff20c051bd2738f150f96875b7f" kindref="member">isDecorated</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_shape_combine(kwinApp()-&gt;x11Connection(),</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XCB_SHAPE_SO_SET,</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XCB_SHAPE_SK_BOUNDING,</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XCB_SHAPE_SK_BOUNDING,</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a41fce59f634f8e4f8cbb0cc52cb1dd71" kindref="member">frameId</ref>(),</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wrapper.x(),</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wrapper.y(),</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>());</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(app_noborder)<sp/>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_shape_mask(kwinApp()-&gt;x11Connection(),<sp/>XCB_SHAPE_SO_SET,<sp/>XCB_SHAPE_SK_BOUNDING,<sp/><ref refid="class_k_win_1_1_x11_window_1a41fce59f634f8e4f8cbb0cc52cb1dd71" kindref="member">frameId</ref>(),<sp/>0,<sp/>0,<sp/>XCB_PIXMAP_NONE);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detectNoBorder();</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app_noborder<sp/>=<sp/>noborder;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noborder<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkNoBorder(noborder<sp/>||<sp/>m_motif.noBorder());</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateDecoration(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decoration<sp/>mask<sp/>(i.e.<sp/>&apos;else&apos;<sp/>here)<sp/>setting<sp/>is<sp/>done<sp/>in<sp/>setMask()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>the<sp/>decoration<sp/>calls<sp/>it<sp/>or<sp/>when<sp/>the<sp/>decoration<sp/>is<sp/>created/destroyed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>updateInputShape();</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_x11_window_1af16e4161195204fcd94a93cd6e97088d" kindref="member">shapeChanged</ref>();</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::updateInputShape()</highlight></codeline>
<codeline lineno="1295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hiddenPreview())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>it<sp/>to<sp/>none,<sp/>don&apos;t<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xcb::Extensions::self()-&gt;isShapeInputAvailable())<sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_shape_combine(kwinApp()-&gt;x11Connection(),<sp/>XCB_SHAPE_SO_SET,<sp/>XCB_SHAPE_SK_INPUT,<sp/>XCB_SHAPE_SK_INPUT,<sp/>frameId(),<sp/>0,<sp/>0,<sp/>window());</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307" refid="class_k_win_1_1_x11_window_1a7dafba5edb390a4ff2f8ef2eca77df42" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a7dafba5edb390a4ff2f8ef2eca77df42" kindref="member">X11Window::isMinimizable</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1308"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a26bdcce1a00f8b7a1c1401b5bf132874" kindref="member">isSpecialWindow</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_x11_window_1a30e74c044caf63f869473d6b8648f506" kindref="member">isTransient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a37f5a22919d5ee6f6404ce789c0a71f7" kindref="member">isAppletPopup</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkMinimize(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a30e74c044caf63f869473d6b8648f506" kindref="member">isTransient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#66868<sp/>-<sp/>Let<sp/>other<sp/>xmms<sp/>windows<sp/>be<sp/>minimized<sp/>when<sp/>the<sp/>mainwindow<sp/>is<sp/>minimized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shown_mainwindow<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mainwindows<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a0b9273d4b5cbb939568096e8a73db60e" kindref="member">mainWindows</ref>();</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>mainwindows.constBegin();<sp/>it<sp/>!=<sp/>mainwindows.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it)-&gt;isShown())<sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shown_mainwindow<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shown_mainwindow)<sp/>{</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>here<sp/>because<sp/>kicker&apos;s<sp/>taskbar<sp/>doesn&apos;t<sp/>provide<sp/>separate<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>windows<sp/>with<sp/>an<sp/>explicitly<sp/>given<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>perhaps<sp/>this<sp/>should<sp/>be<sp/>redone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disabled<sp/>for<sp/>now,<sp/>since<sp/>at<sp/>least<sp/>modal<sp/>dialogs<sp/>should<sp/>be<sp/>minimizable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(resulting<sp/>in<sp/>the<sp/>mainwindow<sp/>being<sp/>minimized<sp/>too).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a74ba8e8138736add81114a69c064170a" kindref="member">transientFor</ref>()<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_1ac69f930533a8e570ccc0e002dc077fcb" kindref="member">wantsTabFocus</ref>())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>SELI,<sp/>TODO:<sp/>-<sp/>NET::Utility?<sp/>why<sp/>wantsTabFocus()<sp/>-<sp/>skiptaskbar?<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347" refid="class_k_win_1_1_x11_window_1a3c09d6423fde800b97331f19ce1b41d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a3c09d6423fde800b97331f19ce1b41d1" kindref="member">X11Window::doMinimize</ref>()</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_managed)<sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a7ee9515027aa5076af42776c20b3a4a5" kindref="member">isMinimized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activateNextWindow(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3dfd89167d57f28ebedf72ffddd33191" kindref="member">isShade</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NETWM<sp/>restriction<sp/>-<sp/>KWindowInfo::isMinimized()<sp/>==<sp/>Hidden<sp/>&amp;&amp;<sp/>!Shaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;setState(<ref refid="class_k_win_1_1_window_1a7ee9515027aa5076af42776c20b3a4a5" kindref="member">isMinimized</ref>()<sp/>?<sp/>NET::States()<sp/>:<sp/>NET::Shaded,<sp/>NET::Shaded);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a0455ca5d541dedad3447ba818ff5060f" kindref="member">updateVisibility</ref>();</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>updateAllowedActions();</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;updateMinimizedOfTransients(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363" refid="class_k_win_1_1_x11_window_1a44a0e3ebe485da6063063850e55127c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a44a0e3ebe485da6063063850e55127c0" kindref="member">X11Window::isShadeable</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1364"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_k_win_1_1_window_1a26bdcce1a00f8b7a1c1401b5bf132874" kindref="member">isSpecialWindow</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_window_1a85199ff20c051bd2738f150f96875b7f" kindref="member">isDecorated</ref>()<sp/>&amp;&amp;<sp/>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkShade(<ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585faf7edb6b11c2666b2ef0da40d95f12d39" kindref="member">ShadeNormal</ref>)<sp/>!=<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkShade(<ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585fa96968d2418f89776544aadc16404b6d4" kindref="member">ShadeNone</ref>));</highlight></codeline>
<codeline lineno="1366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368" refid="class_k_win_1_1_x11_window_1a11e2054319bd2f62b5bc58f487c4ce1f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a11e2054319bd2f62b5bc58f487c4ce1f" kindref="member">X11Window::doSetShade</ref>(<ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585f" kindref="member">ShadeMode</ref><sp/>previousShadeMode)</highlight></codeline>
<codeline lineno="1369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>All<sp/>this<sp/>unmapping,<sp/>resizing<sp/>etc.<sp/>feels<sp/>too<sp/>much<sp/>duplicated<sp/>from<sp/>elsewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3dfd89167d57f28ebedf72ffddd33191" kindref="member">isShade</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shade_geometry_change<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSizeF<sp/>s(<ref refid="class_k_win_1_1_x11_window_1a74eb3de413f19ead5d7a4e434ed206ac" kindref="member">implicitSize</ref>());</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.setHeight(<ref refid="class_k_win_1_1_window_1a079dfba93240f19cadab52f478e48e84" kindref="member">borderTop</ref>()<sp/>+<sp/><ref refid="class_k_win_1_1_window_1a7b47bcdf2ffd2ba3113725d2ebfaf822" kindref="member">borderBottom</ref>());</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wrapper.selectInput(wrapperEventMask()<sp/>&amp;<sp/>~XCB_EVENT_MASK_SUBSTRUCTURE_NOTIFY);<sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>getting<sp/>UnmapNotify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wrapper.unmap();</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.unmap();</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wrapper.selectInput(wrapperEventMask());</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exportMappingState(XCB_ICCCM_WM_STATE_ICONIC);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a4f9ff78c2b5b8fb2c900869968a9df63" kindref="member">resize</ref>(s);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shade_geometry_change<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previousShadeMode<sp/>==<sp/><ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585faec9cfe314b9bcc398475c383305a8174" kindref="member">ShadeHover</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shade_below<sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_window_1ab6e14702ae2257cc27f72a8ad1e6f881" kindref="member">stackingOrder</ref>().indexOf(shade_below)<sp/>&gt;<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;stackBelow(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>shade_below);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a8466be38391212ef29a4c880506eb069" kindref="member">isActive</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activateNextWindow(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a8466be38391212ef29a4c880506eb069" kindref="member">isActive</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;focusToNull();</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shade_geometry_change<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1aeebcd9865806bb3e4b74d13b4ed91ded" kindref="member">decoratedWindow</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aeebcd9865806bb3e4b74d13b4ed91ded" kindref="member">decoratedWindow</ref>()-&gt;signalShadeChange();</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSizeF<sp/>s(<ref refid="class_k_win_1_1_x11_window_1a74eb3de413f19ead5d7a4e434ed206ac" kindref="member">implicitSize</ref>());</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shade_geometry_change<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a4f9ff78c2b5b8fb2c900869968a9df63" kindref="member">resize</ref>(s);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a9372354c3330f992f28ca6e6fb22d700" kindref="member">setGeometryRestore</ref>(<ref refid="class_k_win_1_1_window_1a5bd40e38d16c8453af9226579d1865ac" kindref="member">moveResizeGeometry</ref>());</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_k_win_1_1_window_1abfa6caaf2d5624a4cdd2b49d20ed228c" kindref="member">shadeMode</ref>()<sp/>==<sp/><ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585faec9cfe314b9bcc398475c383305a8174" kindref="member">ShadeHover</ref><sp/>||<sp/><ref refid="class_k_win_1_1_window_1abfa6caaf2d5624a4cdd2b49d20ed228c" kindref="member">shadeMode</ref>()<sp/>==<sp/><ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585fa0efe8ab38e5c11c17415dffdf970bda6" kindref="member">ShadeActivated</ref>)<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkAcceptFocus(info-&gt;input()))<sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1afc8d12b9a719a163f5f862a79e515465" kindref="member">setActive</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1abfa6caaf2d5624a4cdd2b49d20ed228c" kindref="member">shadeMode</ref>()<sp/>==<sp/><ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585faec9cfe314b9bcc398475c383305a8174" kindref="member">ShadeHover</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;Window<sp/>*&gt;<sp/>order<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;stackingOrder();</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invalidate,<sp/>since<sp/>&quot;this&quot;<sp/>could<sp/>be<sp/>the<sp/>topmost<sp/>toplevel<sp/>and<sp/>shade_below<sp/>dangeling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shade_below<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>likely<sp/>related<sp/>to<sp/>the<sp/>index<sp/>parameter?!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>order.indexOf(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>+<sp/>1;<sp/>idx<sp/>&lt;<sp/>order.count();<sp/>++idx)<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shade_below<sp/>=<sp/>qobject_cast&lt;X11Window<sp/>*&gt;(order.at(idx));</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shade_below)<sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shade_below<sp/>&amp;&amp;<sp/>shade_below-&gt;isNormalWindow())<sp/>{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;raiseWindow(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shade_below<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wrapper.map();</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.map();</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exportMappingState(XCB_ICCCM_WM_STATE_NORMAL);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a8466be38391212ef29a4c880506eb069" kindref="member">isActive</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;requestFocus(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setState(<ref refid="class_k_win_1_1_window_1a3dfd89167d57f28ebedf72ffddd33191" kindref="member">isShade</ref>()<sp/>?<sp/>NET::Shaded<sp/>:<sp/>NET::States(),<sp/>NET::Shaded);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setState((<ref refid="class_k_win_1_1_window_1a3dfd89167d57f28ebedf72ffddd33191" kindref="member">isShade</ref>()<sp/>||<sp/>!<ref refid="class_k_win_1_1_window_1aed48d73c0d33bd1134f6c0b48104030d" kindref="member">isShown</ref>())<sp/>?<sp/>NET::Hidden<sp/>:<sp/>NET::States(),<sp/>NET::Hidden);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a0455ca5d541dedad3447ba818ff5060f" kindref="member">updateVisibility</ref>();</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>updateAllowedActions();</highlight></codeline>
<codeline lineno="1435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437" refid="class_k_win_1_1_x11_window_1a0455ca5d541dedad3447ba818ff5060f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a0455ca5d541dedad3447ba818ff5060f" kindref="member">X11Window::updateVisibility</ref>()</highlight></codeline>
<codeline lineno="1438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">isUnmanaged</ref>()<sp/>||<sp/><ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a4eb66b6e398d1fecaf5a18adfcd5d621" kindref="member">isHidden</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;setState(NET::Hidden,<sp/>NET::Hidden);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a02ce5273a16265b92513c1d6f5ca16ce" kindref="member">setSkipTaskbar</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Also<sp/>hide<sp/>from<sp/>taskbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internalKeep();</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1ac07f6126d0cbaa1688090ceadefe5ded" kindref="member">isHiddenByShowDesktop</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a02ce5273a16265b92513c1d6f5ca16ce" kindref="member">setSkipTaskbar</ref>(<ref refid="class_k_win_1_1_window_1a05dee36ed06739092162ef6425fe0d84" kindref="member">originalSkipTaskbar</ref>());<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>from<sp/>&apos;hidden&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a7ee9515027aa5076af42776c20b3a4a5" kindref="member">isMinimized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;setState(NET::Hidden,<sp/>NET::Hidden);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internalKeep();</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setState(NET::States(),<sp/>NET::Hidden);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_1aa975d4f4a79a999c827e0a4d7bb5c1dd" kindref="member">isOnCurrentDesktop</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internalKeep();</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_1a6214074a0338d546c1c97c736f1b1fe6" kindref="member">isOnCurrentActivity</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internalKeep();</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>internalShow();</highlight></codeline>
<codeline lineno="1467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::exportMappingState(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)</highlight></codeline>
<codeline lineno="1474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(m_client<sp/>!=<sp/>XCB_WINDOW_NONE);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!isDeleted()<sp/>||<sp/>s<sp/>==<sp/>XCB_ICCCM_WM_STATE_WITHDRAWN);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>XCB_ICCCM_WM_STATE_WITHDRAWN)<sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.deleteProperty(<ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;wm_state);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(s<sp/>==<sp/>XCB_ICCCM_WM_STATE_NORMAL<sp/>||<sp/>s<sp/>==<sp/>XCB_ICCCM_WM_STATE_ICONIC);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>data[2];</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>XCB_NONE;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>m_client.changeProperty(atoms-&gt;<ref refid="class_k_win_1_1_atoms_1a44753ebd00915d4654cff9c71c9e7694" kindref="member">wm_state</ref>,<sp/>atoms-&gt;<ref refid="class_k_win_1_1_atoms_1a44753ebd00915d4654cff9c71c9e7694" kindref="member">wm_state</ref>,<sp/>32,<sp/>2,<sp/>data);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::internalShow()</highlight></codeline>
<codeline lineno="1490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapping_state<sp/>==<sp/>Mapped)<sp/>{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>MappingState<sp/>old<sp/>=<sp/>mapping_state;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/>mapping_state<sp/>=<sp/>Mapped;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old<sp/>==<sp/>Unmapped<sp/>||<sp/>old<sp/>==<sp/>Withdrawn)<sp/>{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map();</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old<sp/>==<sp/>Kept)<sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateHiddenPreview();</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::internalHide()</highlight></codeline>
<codeline lineno="1505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapping_state<sp/>==<sp/>Unmapped)<sp/>{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>MappingState<sp/>old<sp/>=<sp/>mapping_state;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>mapping_state<sp/>=<sp/>Unmapped;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old<sp/>==<sp/>Mapped<sp/>||<sp/>old<sp/>==<sp/>Kept)<sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unmap();</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old<sp/>==<sp/>Kept)<sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateHiddenPreview();</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::internalKeep()</highlight></codeline>
<codeline lineno="1520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapping_state<sp/>==<sp/>Kept)<sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>MappingState<sp/>old<sp/>=<sp/>mapping_state;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>mapping_state<sp/>=<sp/>Kept;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old<sp/>==<sp/>Unmapped<sp/>||<sp/>old<sp/>==<sp/>Withdrawn)<sp/>{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map();</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isActive())<sp/>{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a3c21fc7f0bfcf2ccb5bd7a0b90ba9e54" kindref="member">focusToNull</ref>();<sp/></highlight><highlight class="comment">//<sp/>get<sp/>rid<sp/>of<sp/>input<sp/>focus,<sp/>bug<sp/>#317484</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>updateHiddenPreview();</highlight></codeline>
<codeline lineno="1533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::map()</highlight></codeline>
<codeline lineno="1541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>m_frame.map();</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isShade())<sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wrapper.map();</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.map();</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exportMappingState(XCB_ICCCM_WM_STATE_NORMAL);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exportMappingState(XCB_ICCCM_WM_STATE_ICONIC);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::unmap()</highlight></codeline>
<codeline lineno="1556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>it<sp/>may<sp/>look<sp/>like<sp/>a<sp/>race<sp/>condition,<sp/>as<sp/>some<sp/>other<sp/>client<sp/>might<sp/>try<sp/>to<sp/>unmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>window<sp/>between<sp/>these<sp/>two<sp/>XSelectInput()<sp/>calls.<sp/>However,<sp/>they&apos;re<sp/>supposed<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>XWithdrawWindow(),<sp/>which<sp/>also<sp/>sends<sp/>a<sp/>synthetic<sp/>event<sp/>to<sp/>the<sp/>root<sp/>window,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>won&apos;t<sp/>be<sp/>missed,<sp/>so<sp/>this<sp/>shouldn&apos;t<sp/>be<sp/>a<sp/>problem.<sp/>The<sp/>chance<sp/>the<sp/>real<sp/>UnmapNotify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>missed<sp/>is<sp/>also<sp/>very<sp/>minimal,<sp/>so<sp/>I<sp/>don&apos;t<sp/>think<sp/>it&apos;s<sp/>needed<sp/>to<sp/>grab<sp/>the<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wrapper.selectInput(wrapperEventMask()<sp/>&amp;<sp/>~XCB_EVENT_MASK_SUBSTRUCTURE_NOTIFY);<sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>getting<sp/>UnmapNotify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/>m_frame.unmap();</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wrapper.unmap();</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>m_client.unmap();</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wrapper.selectInput(wrapperEventMask());</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/>exportMappingState(XCB_ICCCM_WM_STATE_ICONIC);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::updateHiddenPreview()</highlight></codeline>
<codeline lineno="1583"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hiddenPreview())<sp/>{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1adb51e7dfaae8284674514d9c85e8e54d" kindref="member">forceRestacking</ref>();</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xcb::Extensions::self()-&gt;isShapeInputAvailable())<sp/>{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_shape_rectangles(kwinApp()-&gt;x11Connection(),<sp/>XCB_SHAPE_SO_SET,<sp/>XCB_SHAPE_SK_INPUT,</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XCB_CLIP_ORDERING_UNSORTED,<sp/>frameId(),<sp/>0,<sp/>0,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1adb51e7dfaae8284674514d9c85e8e54d" kindref="member">forceRestacking</ref>();</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateInputShape();</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::sendClientMessage(xcb_window_t<sp/>w,<sp/>xcb_atom_t<sp/>a,<sp/>xcb_atom_t<sp/>protocol,<sp/>uint32_t<sp/>data1,<sp/>uint32_t<sp/>data2,<sp/>uint32_t<sp/>data3)</highlight></codeline>
<codeline lineno="1597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_client_message_event_t<sp/>ev;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Every<sp/>X11<sp/>event<sp/>is<sp/>32<sp/>bytes<sp/>(see<sp/>man<sp/>xcb_send_event),<sp/>so<sp/>XCB<sp/>will<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>32<sp/>unconditionally.<sp/>Add<sp/>a<sp/>static_assert<sp/>to<sp/>ensure<sp/>we<sp/>don&apos;t<sp/>disclose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ev)<sp/>==<sp/>32,<sp/></highlight><highlight class="stringliteral">&quot;Would<sp/>leak<sp/>stack<sp/>data<sp/>otherwise&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;ev,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ev));</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/>ev.response_type<sp/>=<sp/>XCB_CLIENT_MESSAGE;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/>ev.window<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/>ev.type<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/>ev.format<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>ev.data.data32[0]<sp/>=<sp/>protocol;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/>ev.data.data32[1]<sp/>=<sp/><ref refid="namespace_k_win_1a71cc78d22f170a8c6639a9d83694fb8a" kindref="member">xTime</ref>();</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>ev.data.data32[2]<sp/>=<sp/>data1;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/>ev.data.data32[3]<sp/>=<sp/>data2;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>ev.data.data32[4]<sp/>=<sp/>data3;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>eventMask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>kwinApp()-&gt;x11RootWindow())<sp/>{</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventMask<sp/>=<sp/>XCB_EVENT_MASK_SUBSTRUCTURE_REDIRECT;<sp/></highlight><highlight class="comment">//<sp/>Magic!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_send_event(kwinApp()-&gt;x11Connection(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>w,<sp/>eventMask,<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;ev));</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_flush(kwinApp()-&gt;x11Connection());</highlight></codeline>
<codeline lineno="1619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624" refid="class_k_win_1_1_x11_window_1a5f7b5e65052844f25f1efcc0ebf150d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a5f7b5e65052844f25f1efcc0ebf150d4" kindref="member">X11Window::isCloseable</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1625"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">isUnmanaged</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkCloseable(m_motif.close()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_window_1a26bdcce1a00f8b7a1c1401b5bf132874" kindref="member">isSpecialWindow</ref>());</highlight></codeline>
<codeline lineno="1627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632" refid="class_k_win_1_1_x11_window_1a100d8dcd723787d44cdb0360f18b6e0e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a100d8dcd723787d44cdb0360f18b6e0e" kindref="member">X11Window::closeWindow</ref>()</highlight></codeline>
<codeline lineno="1633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1a5f7b5e65052844f25f1efcc0ebf150d4" kindref="member">isCloseable</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>user<sp/>time,<sp/>because<sp/>the<sp/>window<sp/>may<sp/>create<sp/>a<sp/>confirming<sp/>dialog.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1aa6d818043d5d2f1f757d18f560d9c71e" kindref="member">updateUserTime</ref>();</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;supportsProtocol(NET::DeleteWindowProtocol))<sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendClientMessage(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>(),<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;wm_protocols,<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;wm_delete_window);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pingWindow();</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Client<sp/>will<sp/>not<sp/>react<sp/>on<sp/>wm_delete_window.<sp/>We<sp/>have<sp/>not<sp/>choice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>destroy<sp/>his<sp/>connection<sp/>to<sp/>the<sp/>XServer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1aa4171b66aad9facad7cd60937f8be3d1" kindref="member">killWindow</ref>();</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656" refid="class_k_win_1_1_x11_window_1aa4171b66aad9facad7cd60937f8be3d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1aa4171b66aad9facad7cd60937f8be3d1" kindref="member">X11Window::killWindow</ref>()</highlight></codeline>
<codeline lineno="1657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;X11Window::killWindow():&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>();</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">isUnmanaged</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_kill_client(kwinApp()-&gt;x11Connection(),<sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>());</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>killProcess(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.kill();<sp/></highlight><highlight class="comment">//<sp/>Always<sp/>kill<sp/>this<sp/>client<sp/>at<sp/>the<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a7c848abfd1542214c0d8f289d8c76fcb" kindref="member">destroyWindow</ref>();</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::pingWindow()</highlight></codeline>
<codeline lineno="1673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info-&gt;supportsProtocol(NET::PingProtocol))<sp/>{</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>ping<sp/>:(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options-&gt;<ref refid="class_k_win_1_1_options_1ac2798ddc024d3a39d93b29ed09ec53ef" kindref="member">killPingTimeout</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Turned<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ping_timer<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Pinging<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>ping_timer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QTimer(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(ping_timer,<sp/>&amp;QTimer::timeout,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unresponsive())<sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Final<sp/>ping<sp/>timeout,<sp/>asking<sp/>to<sp/>kill:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>caption();</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ping_timer-&gt;deleteLater();</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ping_timer<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>killProcess(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>m_pingTimestamp);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;First<sp/>ping<sp/>timeout:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>caption();</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setUnresponsive(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ping_timer-&gt;start();</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>ping_timer-&gt;setSingleShot(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;ll<sp/>run<sp/>the<sp/>timer<sp/>twice,<sp/>at<sp/>first<sp/>we&apos;ll<sp/>desaturate<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>second<sp/>time<sp/>we&apos;ll<sp/>show<sp/>the<sp/>&quot;do<sp/>you<sp/>want<sp/>to<sp/>kill&quot;<sp/>prompt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/>ping_timer-&gt;start(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;<ref refid="class_k_win_1_1_options_1ac2798ddc024d3a39d93b29ed09ec53ef" kindref="member">killPingTimeout</ref>()<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pingTimestamp<sp/>=<sp/><ref refid="namespace_k_win_1a71cc78d22f170a8c6639a9d83694fb8a" kindref="member">xTime</ref>();</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a00237bcdba9aaa1c88184bbf87712ae8" kindref="member">rootInfo</ref>()-&gt;sendPing(window(),<sp/>m_pingTimestamp);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706" refid="class_k_win_1_1_x11_window_1a443d3e0d70905641a1f9becb641e157a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a443d3e0d70905641a1f9becb641e157a" kindref="member">X11Window::gotPing</ref>(xcb_timestamp_t<sp/>timestamp)</highlight></codeline>
<codeline lineno="1707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>plain<sp/>compare<sp/>is<sp/>not<sp/>good<sp/>enough<sp/>because<sp/>of<sp/>64bit<sp/>and<sp/>truncating<sp/>and<sp/>whatnot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NET::timestampCompare(timestamp,<sp/>m_pingTimestamp)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ping_timer;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>ping_timer<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aacf6c3ac882bd25beb2777cedd4dbc64" kindref="member">setUnresponsive</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_killPrompt)<sp/>{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_killPrompt-&gt;quit();</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::killProcess(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ask,<sp/>xcb_timestamp_t<sp/>timestamp)</highlight></codeline>
<codeline lineno="1723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_killPrompt<sp/>&amp;&amp;<sp/>m_killPrompt-&gt;isRunning())<sp/>{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!ask<sp/>||<sp/>timestamp<sp/>!=<sp/>XCB_TIME_CURRENT_TIME);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_t<sp/>processId<sp/>=<sp/>pid();</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(processId<sp/>&lt;=<sp/>0<sp/>||<sp/>clientMachine()-&gt;hostName().isEmpty())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Needed<sp/>properties<sp/>missing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Kill<sp/>process:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>processId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>clientMachine()-&gt;hostName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ask)<sp/>{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clientMachine()-&gt;isLocal())<sp/>{</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringList<sp/>lst;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst<sp/>&lt;&lt;<sp/>clientMachine()-&gt;hostName()<sp/>&lt;&lt;<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;kill&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QString::number(processId);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QProcess::startDetached(QStringLiteral(</highlight><highlight class="stringliteral">&quot;xon&quot;</highlight><highlight class="normal">),<sp/>lst);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::kill(processId,<sp/>SIGTERM);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_killPrompt)<sp/>{</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_killPrompt<sp/>=<sp/>std::make_unique&lt;KillPrompt&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_killPrompt-&gt;start(timestamp);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749" refid="class_k_win_1_1_x11_window_1ae94b05487c33de67d84da9933dea483d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1ae94b05487c33de67d84da9933dea483d" kindref="member">X11Window::doSetKeepAbove</ref>()</highlight></codeline>
<codeline lineno="1750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setState(<ref refid="class_k_win_1_1_window_1ade1d7dfe29d1f709eca65af12b076d2b" kindref="member">keepAbove</ref>()<sp/>?<sp/>NET::KeepAbove<sp/>:<sp/>NET::States(),<sp/>NET::KeepAbove);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757" refid="class_k_win_1_1_x11_window_1a447de9e09e0220d08054450e1246cd0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a447de9e09e0220d08054450e1246cd0b" kindref="member">X11Window::doSetKeepBelow</ref>()</highlight></codeline>
<codeline lineno="1758"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setState(<ref refid="class_k_win_1_1_window_1a47ab87d36dc289a8f636f78b048a5b36" kindref="member">keepBelow</ref>()<sp/>?<sp/>NET::KeepBelow<sp/>:<sp/>NET::States(),<sp/>NET::KeepBelow);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765" refid="class_k_win_1_1_x11_window_1a5c78c11f4dd95862340687f15c814811" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a5c78c11f4dd95862340687f15c814811" kindref="member">X11Window::doSetSkipTaskbar</ref>()</highlight></codeline>
<codeline lineno="1766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setState(<ref refid="class_k_win_1_1_window_1aff0dcb9257a7c18c075605858ef64ad6" kindref="member">skipTaskbar</ref>()<sp/>?<sp/>NET::SkipTaskbar<sp/>:<sp/>NET::States(),<sp/>NET::SkipTaskbar);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773" refid="class_k_win_1_1_x11_window_1a4ad23dbc6476b4f95483c5f0ad860106" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a4ad23dbc6476b4f95483c5f0ad860106" kindref="member">X11Window::doSetSkipPager</ref>()</highlight></codeline>
<codeline lineno="1774"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setState(<ref refid="class_k_win_1_1_window_1acab70f6f5c4c1fb524f1616f9cb13e03" kindref="member">skipPager</ref>()<sp/>?<sp/>NET::SkipPager<sp/>:<sp/>NET::States(),<sp/>NET::SkipPager);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781" refid="class_k_win_1_1_x11_window_1a3aca1f96ad4178f21a8810796590277a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a3aca1f96ad4178f21a8810796590277a" kindref="member">X11Window::doSetSkipSwitcher</ref>()</highlight></codeline>
<codeline lineno="1782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setState(<ref refid="class_k_win_1_1_window_1a09ff41ece0cac78c632f0a3218c2602d" kindref="member">skipSwitcher</ref>()<sp/>?<sp/>NET::SkipSwitcher<sp/>:<sp/>NET::States(),<sp/>NET::SkipSwitcher);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789" refid="class_k_win_1_1_x11_window_1a89be160951e8e68c8586d664dfc6b8d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a89be160951e8e68c8586d664dfc6b8d8" kindref="member">X11Window::doSetDesktop</ref>()</highlight></codeline>
<codeline lineno="1790"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setDesktop(<ref refid="class_k_win_1_1_x11_window_1ad33086a0fc2f1cd541bec4d5ccb092d8" kindref="member">desktopId</ref>());</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a0455ca5d541dedad3447ba818ff5060f" kindref="member">updateVisibility</ref>();</highlight></codeline>
<codeline lineno="1796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798" refid="class_k_win_1_1_x11_window_1a3bdcc0a857c8fda2ee05bbc5c47c96c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a3bdcc0a857c8fda2ee05bbc5c47c96c0" kindref="member">X11Window::doSetDemandsAttention</ref>()</highlight></codeline>
<codeline lineno="1799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setState(<ref refid="class_k_win_1_1_window_1a3d04ecc04772333222a02d8ac41856f9" kindref="member">isDemandingAttention</ref>()<sp/>?<sp/>NET::DemandsAttention<sp/>:<sp/>NET::States(),<sp/>NET::DemandsAttention);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806" refid="class_k_win_1_1_x11_window_1a124e9b6187a7437ba1793d49fc930bdd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a124e9b6187a7437ba1793d49fc930bdd" kindref="member">X11Window::doSetHidden</ref>()</highlight></codeline>
<codeline lineno="1807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a0455ca5d541dedad3447ba818ff5060f" kindref="member">updateVisibility</ref>();</highlight></codeline>
<codeline lineno="1812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814" refid="class_k_win_1_1_x11_window_1a8deba3f1d527b47bcb3d515454489c36" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a8deba3f1d527b47bcb3d515454489c36" kindref="member">X11Window::doSetHiddenByShowDesktop</ref>()</highlight></codeline>
<codeline lineno="1815"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a0455ca5d541dedad3447ba818ff5060f" kindref="member">updateVisibility</ref>();</highlight></codeline>
<codeline lineno="1820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822" refid="class_k_win_1_1_x11_window_1a1afbbc09234d7576021ef2712df14356" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a1afbbc09234d7576021ef2712df14356" kindref="member">X11Window::doSetModal</ref>()</highlight></codeline>
<codeline lineno="1823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setState(<ref refid="class_k_win_1_1_window_1ab9a3cecb663e5b45353d210ff5de1195" kindref="member">isModal</ref>()<sp/>?<sp/>NET::Modal<sp/>:<sp/>NET::States(),<sp/>NET::Modal);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830" refid="class_k_win_1_1_x11_window_1a10036002d7b8d3da31ad81aa0d00cea3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a10036002d7b8d3da31ad81aa0d00cea3" kindref="member">X11Window::doSetOnActivities</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>&amp;activityList)</highlight></codeline>
<codeline lineno="1831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_ACTIVITIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(activityList.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>nullUuid<sp/>=<sp/><ref refid="class_k_win_1_1_activities_1a6ccd547e1f038b38c73014940bff1c8e" kindref="member">Activities::nullUuid</ref>().toUtf8();</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.changeProperty(<ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;activities,<sp/>XCB_ATOM_STRING,<sp/>8,<sp/>nullUuid.length(),<sp/>nullUuid.constData());</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QByteArray<sp/>joined<sp/>=<sp/>activityList.join(QStringLiteral(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)).toLatin1();</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.changeProperty(<ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;activities,<sp/>XCB_ATOM_STRING,<sp/>8,<sp/>joined.length(),<sp/>joined.constData());</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846" refid="class_k_win_1_1_x11_window_1a1446cfc31ada2f5e9ea3f0fca4f41084" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a1446cfc31ada2f5e9ea3f0fca4f41084" kindref="member">X11Window::updateActivities</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeTransients)</highlight></codeline>
<codeline lineno="1847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a819092f9968d638a17b8e857e092d0f1" kindref="member">Window::updateActivities</ref>(includeTransients);</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_activityUpdatesBlocked)<sp/>{</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a0455ca5d541dedad3447ba818ff5060f" kindref="member">updateVisibility</ref>();</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859" refid="class_k_win_1_1_x11_window_1a171645c92c0b24978f9a48630957f791" refkind="member"><highlight class="normal">QStringList<sp/><ref refid="class_k_win_1_1_x11_window_1a171645c92c0b24978f9a48630957f791" kindref="member">X11Window::activities</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1860"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sessionActivityOverride)<sp/>{</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QStringList();</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1aa71dc40a7137f7d9295a5ad7a635b0c7" kindref="member">Window::activities</ref>();</highlight></codeline>
<codeline lineno="1865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870" refid="class_k_win_1_1_x11_window_1a704bb98c8ea8645169ca5d9b2588abea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a704bb98c8ea8645169ca5d9b2588abea" kindref="member">X11Window::takeFocus</ref>()</highlight></codeline>
<codeline lineno="1871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>effectiveAcceptFocus<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkAcceptFocus(info-&gt;input());</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>effectiveTakeFocus<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkAcceptFocus(info-&gt;supportsProtocol(NET::TakeFocusProtocol));</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(effectiveAcceptFocus)<sp/>{</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_void_cookie_t<sp/>cookie<sp/>=<sp/>xcb_set_input_focus_checked(kwinApp()-&gt;x11Connection(),</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XCB_INPUT_FOCUS_POINTER_ROOT,</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>(),<sp/>XCB_TIME_CURRENT_TIME);</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1af8087ffc5ee2774d3ec42e3ff2ad9456" kindref="member">UniqueCPtr&lt;xcb_generic_error_t&gt;</ref><sp/>error(xcb_request_check(kwinApp()-&gt;x11Connection(),<sp/>cookie));</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error)<sp/>{</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>focus<sp/>0x%x<sp/>(error<sp/>%d)&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>(),<sp/>error-&gt;error_code);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a2d638a5cbb6a91a00b5a5c14c9694888" kindref="member">demandAttention</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>window<sp/>cannot<sp/>take<sp/>input,<sp/>at<sp/>least<sp/>withdraw<sp/>urgency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(effectiveTakeFocus)<sp/>{</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwinApp()-&gt;updateXTime();</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendClientMessage(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>(),<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;wm_protocols,<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;wm_take_focus);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(effectiveAcceptFocus<sp/>||<sp/>effectiveTakeFocus)<sp/>{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;setShouldGetFocus(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905" refid="class_k_win_1_1_x11_window_1a0534b03d57a37b287fd85abe101a300d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a0534b03d57a37b287fd85abe101a300d" kindref="member">X11Window::providesContextHelp</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1906"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info-&gt;supportsProtocol(NET::ContextHelpProtocol);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916" refid="class_k_win_1_1_x11_window_1a7de22915b48c0b82741aed9ecce4286c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a7de22915b48c0b82741aed9ecce4286c" kindref="member">X11Window::showContextHelp</ref>()</highlight></codeline>
<codeline lineno="1917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;supportsProtocol(NET::ContextHelpProtocol))<sp/>{</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendClientMessage(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>(),<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;wm_protocols,<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;net_wm_context_help);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::fetchName()</highlight></codeline>
<codeline lineno="1928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/>setCaption(readName());</highlight></codeline>
<codeline lineno="1930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>QString<sp/>readNameProperty(xcb_window_t<sp/>w,<sp/>xcb_atom_t<sp/>atom)</highlight></codeline>
<codeline lineno="1933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cookie<sp/>=<sp/>xcb_icccm_get_text_property_unchecked(kwinApp()-&gt;x11Connection(),<sp/>w,<sp/>atom);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_icccm_get_text_property_reply_t<sp/>reply;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xcb_icccm_get_wm_name_reply(kwinApp()-&gt;x11Connection(),<sp/>cookie,<sp/>&amp;reply,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>retVal;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reply.encoding<sp/>==<sp/>atoms-&gt;<ref refid="class_k_win_1_1_atoms_1aae99f28465ea6d9dcc08a991d989a3e0" kindref="member">utf8_string</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>QString::fromUtf8(QByteArray(reply.name,<sp/>reply.name_len));</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reply.encoding<sp/>==<sp/>XCB_ATOM_STRING)<sp/>{</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>QString::fromLatin1(QByteArray(reply.name,<sp/>reply.name_len));</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_icccm_get_text_property_reply_wipe(&amp;reply);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal.simplified();</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString();</highlight></codeline>
<codeline lineno="1947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal">QString<sp/>X11Window::readName()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1950"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;name()<sp/>&amp;&amp;<sp/>info-&gt;name()[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromUtf8(info-&gt;name()).simplified();</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>readNameProperty(window(),<sp/>XCB_ATOM_WM_NAME);</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>list<sp/>is<sp/>taken<sp/>from<sp/>https://www.unicode.org/reports/tr9/<sp/>(#154840)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QChar<sp/>LRM(0x200E);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::setCaption(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;_s,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force)</highlight></codeline>
<codeline lineno="1962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>s(_s);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s.length();)<sp/>{</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s[i].isPrint())<sp/>{</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QChar(s[i]).isHighSurrogate()<sp/>&amp;&amp;<sp/>i<sp/>+<sp/>1<sp/>&lt;<sp/>s.length()<sp/>&amp;&amp;<sp/>QChar(s[i<sp/>+<sp/>1]).isLowSurrogate())<sp/>{</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>uc<sp/>=<sp/>QChar::surrogateToUcs4(s[i],<sp/>s[i<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!QChar::isPrint(uc))<sp/>{</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.remove(i,<sp/>2);</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.remove(i,<sp/>1);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>changed<sp/>=<sp/>(s<sp/>!=<sp/>cap_normal);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!force<sp/>&amp;&amp;<sp/>!changed)<sp/>{</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/>cap_normal<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>was_suffix<sp/>=<sp/>(!cap_suffix.isEmpty());</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/>cap_suffix.clear();</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>machine_suffix;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;<ref refid="class_k_win_1_1_options_1ae54c46926d2a7f8bcf078383122d291e" kindref="member">condensedTitle</ref>())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>machine<sp/>doesn&apos;t<sp/>qualify<sp/>for<sp/>&quot;clean&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clientMachine()-&gt;hostName()<sp/>!=<sp/>ClientMachine::localhost()<sp/>&amp;&amp;<sp/>!clientMachine()-&gt;isLocal())<sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine_suffix<sp/>=<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;<sp/>&lt;@&quot;</highlight><highlight class="normal">)<sp/>+<sp/>clientMachine()-&gt;hostName()<sp/>+<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">)<sp/>+<sp/>LRM;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>shortcut_suffix<sp/>=<sp/>shortcutCaptionSuffix();</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>cap_suffix<sp/>=<sp/>machine_suffix<sp/>+<sp/>shortcut_suffix;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((was_suffix<sp/>&amp;&amp;<sp/>cap_suffix.isEmpty())<sp/>||<sp/>force)<sp/>{</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>was<sp/>new<sp/>window,<sp/>it<sp/>may<sp/>have<sp/>old<sp/>value<sp/>still<sp/>set,<sp/>if<sp/>the<sp/>window<sp/>is<sp/>reused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;setVisibleName(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;setVisibleIconName(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cap_suffix.isEmpty()<sp/>&amp;&amp;<sp/>!cap_iconic.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>the<sp/>same<sp/>suffix<sp/>in<sp/>iconic<sp/>name<sp/>if<sp/>it&apos;s<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;setVisibleIconName(QString(cap_iconic<sp/>+<sp/>cap_suffix).toUtf8().constData());</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(changed)<sp/>{</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>captionNormalChanged();</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/>captionChanged();</highlight></codeline>
<codeline lineno="2009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011" refid="class_k_win_1_1_x11_window_1a15704747d5303018fad70cb9491a9926" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a15704747d5303018fad70cb9491a9926" kindref="member">X11Window::updateCaption</ref>()</highlight></codeline>
<codeline lineno="2012"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/>setCaption(cap_normal,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::fetchIconicName()</highlight></codeline>
<codeline lineno="2017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>s;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;iconName()<sp/>&amp;&amp;<sp/>info-&gt;iconName()[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>QString::fromUtf8(info-&gt;iconName());</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>readNameProperty(window(),<sp/>XCB_ATOM_WM_ICON_NAME);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>!=<sp/>cap_iconic)<sp/>{</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>was_set<sp/>=<sp/>!cap_iconic.isEmpty();</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cap_iconic<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cap_suffix.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cap_iconic.isEmpty())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>the<sp/>same<sp/>suffix<sp/>in<sp/>iconic<sp/>name<sp/>if<sp/>it&apos;s<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;setVisibleIconName(QString(s<sp/>+<sp/>cap_suffix).toUtf8().constData());</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(was_set)<sp/>{</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;setVisibleIconName(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::getMotifHints()</highlight></codeline>
<codeline lineno="2038"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasClosable<sp/>=<sp/>isCloseable();</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasNoBorder<sp/>=<sp/>m_motif.noBorder();</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_managed)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>only<sp/>on<sp/>property<sp/>change,<sp/>initial<sp/>read<sp/>is<sp/>prefetched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_motif.fetch();</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/>m_motif.read();</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_motif.hasDecoration()<sp/>&amp;&amp;<sp/>m_motif.noBorder()<sp/>!=<sp/>wasNoBorder)<sp/>{</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>just<sp/>got<sp/>a<sp/>hint<sp/>telling<sp/>us<sp/>to<sp/>hide<sp/>decorations,<sp/>we<sp/>do<sp/>so.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_motif.noBorder())<sp/>{</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noborder<sp/>=<sp/>rules()-&gt;checkNoBorder(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>Motif<sp/>hint<sp/>is<sp/>now<sp/>telling<sp/>us<sp/>to<sp/>show<sp/>decorations,<sp/>we<sp/>only<sp/>do<sp/>so<sp/>if<sp/>the<sp/>app<sp/>didn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>instruct<sp/>us<sp/>to<sp/>hide<sp/>decorations<sp/>in<sp/>some<sp/>other<sp/>way,<sp/>though.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!app_noborder)<sp/>{</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noborder<sp/>=<sp/>rules()-&gt;checkNoBorder(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mminimize;<sp/>-<sp/>Ignore,<sp/>bogus<sp/>-<sp/>E.g.<sp/>shading<sp/>or<sp/>sending<sp/>to<sp/>another<sp/>desktop<sp/>is<sp/>&quot;minimizing&quot;<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mmaximize;<sp/>-<sp/>Ignore,<sp/>bogus<sp/>-<sp/>Maximizing<sp/>is<sp/>basically<sp/>just<sp/>resizing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closabilityChanged<sp/>=<sp/>wasClosable<sp/>!=<sp/>isCloseable();</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isManaged())<sp/>{</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateDecoration(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>noborder<sp/>state<sp/>has<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closabilityChanged)<sp/>{</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>closeableChanged(isCloseable());</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2065"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::getIcons()</highlight></codeline>
<codeline lineno="2068"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isUnmanaged())<sp/>{</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>read<sp/>icons<sp/>from<sp/>the<sp/>window<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>themedIconName<sp/>=<sp/>iconFromDesktopFile();</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!themedIconName.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIcon(QIcon::fromTheme(themedIconName));</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/>QIcon<sp/>icon;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>readIcon<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;icon](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>pix<sp/>=<sp/>KX11Extras::icon(window(),<sp/>size,<sp/>size,<sp/>scale,<sp/>KX11Extras::NETWM<sp/>|<sp/>KX11Extras::WMHints,<sp/>info);</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pix.isNull())<sp/>{</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icon.addPixmap(pix);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/>readIcon(16);</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/>readIcon(32);</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/>readIcon(48,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/>readIcon(64,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/>readIcon(128,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(icon.isNull())<sp/>{</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>try<sp/>window<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icon<sp/>=<sp/>group()-&gt;icon();</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(icon.isNull()<sp/>&amp;&amp;<sp/>isTransient())<sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>mainwindows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mainwindows<sp/>=<sp/>mainWindows();</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>mainwindows.constBegin();<sp/>it<sp/>!=<sp/>mainwindows.constEnd()<sp/>&amp;&amp;<sp/>icon.isNull();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(*it)-&gt;icon().isNull())<sp/>{</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icon<sp/>=<sp/>(*it)-&gt;icon();</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(icon.isNull())<sp/>{</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>if<sp/>nothing<sp/>else,<sp/>load<sp/>icon<sp/>from<sp/>classhint<sp/>or<sp/>xapp<sp/>icon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icon.addPixmap(KX11Extras::icon(window(),<sp/>32,<sp/>32,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>KX11Extras::ClassHint<sp/>|<sp/>KX11Extras::XApp,<sp/>info));</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icon.addPixmap(KX11Extras::icon(window(),<sp/>16,<sp/>16,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>KX11Extras::ClassHint<sp/>|<sp/>KX11Extras::XApp,<sp/>info));</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icon.addPixmap(KX11Extras::icon(window(),<sp/>64,<sp/>64,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>KX11Extras::ClassHint<sp/>|<sp/>KX11Extras::XApp,<sp/>info));</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icon.addPixmap(KX11Extras::icon(window(),<sp/>128,<sp/>128,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>KX11Extras::ClassHint<sp/>|<sp/>KX11Extras::XApp,<sp/>info));</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/>setIcon(icon);</highlight></codeline>
<codeline lineno="2112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::getSyncCounter()</highlight></codeline>
<codeline lineno="2115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Xcb::Extensions::self()-&gt;isSyncAvailable())<sp/>{</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/>Xcb::Property<sp/>syncProp(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>window(),<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;<ref refid="class_k_win_1_1_atoms_1ad9b9fc88ea1b8560e2a14c484d818c95" kindref="member">net_wm_sync_request_counter</ref>,<sp/>XCB_ATOM_CARDINAL,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xcb_sync_counter_t<sp/>counter<sp/>=<sp/>syncProp.value&lt;xcb_sync_counter_t&gt;(XCB_NONE);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(counter<sp/>!=<sp/>XCB_NONE)<sp/>{</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.counter<sp/>=<sp/>counter;</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.value.hi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.value.lo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*c<sp/>=<sp/>kwinApp()-&gt;x11Connection();</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_sync_set_counter(c,<sp/>m_syncRequest.counter,<sp/>m_syncRequest.value);</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_syncRequest.alarm<sp/>==<sp/>XCB_NONE)<sp/>{</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>mask<sp/>=<sp/>XCB_SYNC_CA_COUNTER<sp/>|<sp/>XCB_SYNC_CA_VALUE_TYPE<sp/>|<sp/>XCB_SYNC_CA_TEST_TYPE<sp/>|<sp/>XCB_SYNC_CA_EVENTS;</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>values[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.counter,</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XCB_SYNC_VALUETYPE_RELATIVE,</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XCB_SYNC_TESTTYPE_POSITIVE_TRANSITION,</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1};</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.alarm<sp/>=<sp/>xcb_generate_id(c);</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cookie<sp/>=<sp/>xcb_sync_create_alarm_checked(c,<sp/>m_syncRequest.alarm,<sp/>mask,<sp/>values);</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UniqueCPtr&lt;xcb_generic_error_t&gt;<sp/>error(xcb_request_check(c,<sp/>cookie));</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error)<sp/>{</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.alarm<sp/>=<sp/>XCB_NONE;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_sync_change_alarm_value_list_t<sp/>value;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;value,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value));</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.value.hi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.value.lo<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.delta.hi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.delta.lo<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_sync_change_alarm_aux(c,<sp/>m_syncRequest.alarm,<sp/>XCB_SYNC_CA_DELTA<sp/>|<sp/>XCB_SYNC_CA_VALUE,<sp/>&amp;value);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::sendSyncRequest()</highlight></codeline>
<codeline lineno="2158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_syncRequest.enabled<sp/>||<sp/>m_syncRequest.pending)<sp/>{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>do<sp/>NOT,<sp/>NEVER<sp/>send<sp/>a<sp/>sync<sp/>request<sp/>when<sp/>there&apos;s<sp/>one<sp/>on<sp/>the<sp/>stack.<sp/>the<sp/>clients<sp/>will<sp/>just<sp/>stop<sp/>respoding.<sp/>FOREVER!<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_syncRequest.timeout)<sp/>{</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.timeout<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QTimer(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.timeout-&gt;setSingleShot(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(m_syncRequest.timeout,<sp/>&amp;QTimer::timeout,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;X11Window::ackSyncTimeout);</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.timeout-&gt;start(ready_for_painting<sp/>?<sp/>10000<sp/>:<sp/>1000);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>increment<sp/>before<sp/>the<sp/>notify<sp/>so<sp/>that<sp/>after<sp/>the<sp/>notify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>syncCounterSerial<sp/>will<sp/>equal<sp/>the<sp/>value<sp/>we<sp/>are<sp/>expecting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>acknowledgement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>oldLo<sp/>=<sp/>m_syncRequest.value.lo;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.value.lo++;</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldLo<sp/>&gt;<sp/>m_syncRequest.value.lo)<sp/>{</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.value.hi++;</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_syncRequest.lastTimestamp<sp/>&gt;=<sp/><ref refid="namespace_k_win_1a71cc78d22f170a8c6639a9d83694fb8a" kindref="member">xTime</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwinApp()-&gt;updateXTime();</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/>setAllowCommits(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/>sendClientMessage(window(),<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;<ref refid="class_k_win_1_1_atoms_1a4615f601d7948e23cc611e3396b25081" kindref="member">wm_protocols</ref>,<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;<ref refid="class_k_win_1_1_atoms_1a387fcff6033470220d31bccfcd5b3801" kindref="member">net_wm_sync_request</ref>,</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.value.lo,<sp/>m_syncRequest.value.hi);</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.pending<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.interactiveResize<sp/>=<sp/>isInteractiveResize();</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.lastTimestamp<sp/>=<sp/><ref refid="namespace_k_win_1a71cc78d22f170a8c6639a9d83694fb8a" kindref="member">xTime</ref>();</highlight></codeline>
<codeline lineno="2188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190" refid="class_k_win_1_1_x11_window_1a1614734f8b904d3507c3e2e746948aca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a1614734f8b904d3507c3e2e746948aca" kindref="member">X11Window::wantsInput</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2191"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkAcceptFocus(<ref refid="class_k_win_1_1_x11_window_1ab4476c8a103a3e93bc655994eece0a4e" kindref="member">acceptsFocus</ref>()<sp/>||<sp/>info-&gt;supportsProtocol(NET::TakeFocusProtocol));</highlight></codeline>
<codeline lineno="2193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight></codeline>
<codeline lineno="2195" refid="class_k_win_1_1_x11_window_1ab4476c8a103a3e93bc655994eece0a4e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1ab4476c8a103a3e93bc655994eece0a4e" kindref="member">X11Window::acceptsFocus</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2196"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info-&gt;input();</highlight></codeline>
<codeline lineno="2198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight></codeline>
<codeline lineno="2200" refid="class_k_win_1_1_x11_window_1ad843fc6a8f011780582ce42211b46050" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1ad843fc6a8f011780582ce42211b46050" kindref="member">X11Window::doSetQuickTileMode</ref>()</highlight></codeline>
<codeline lineno="2201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a02d9a70e899649f5bf05e182c54d9120" kindref="member">commitTile</ref>(<ref refid="class_k_win_1_1_window_1a935782e2939b237ea347b393d34ca27b" kindref="member">requestedTile</ref>());</highlight></codeline>
<codeline lineno="2203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::updateAllowedActions(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force)</highlight></codeline>
<codeline lineno="2206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isManaged()<sp/>&amp;&amp;<sp/>!force)<sp/>{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/>NET::Actions<sp/>old_allowed_actions<sp/>=<sp/>NET::Actions(allowed_actions);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/>allowed_actions<sp/>=<sp/>NET::Actions();</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isMovable())<sp/>{</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowed_actions<sp/>|=<sp/>NET::ActionMove;</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isResizable())<sp/>{</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowed_actions<sp/>|=<sp/>NET::ActionResize;</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isMinimizable())<sp/>{</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowed_actions<sp/>|=<sp/>NET::ActionMinimize;</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isShadeable())<sp/>{</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowed_actions<sp/>|=<sp/>NET::ActionShade;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sticky<sp/>state<sp/>not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isMaximizable())<sp/>{</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowed_actions<sp/>|=<sp/>NET::ActionMax;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isFullScreenable())<sp/>{</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowed_actions<sp/>|=<sp/>NET::ActionFullScreen;</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/>allowed_actions<sp/>|=<sp/>NET::ActionChangeDesktop;<sp/></highlight><highlight class="comment">//<sp/>Always<sp/>(Pagers<sp/>shouldn&apos;t<sp/>show<sp/>Docks<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isCloseable())<sp/>{</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowed_actions<sp/>|=<sp/>NET::ActionClose;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_allowed_actions<sp/>==<sp/>allowed_actions)<sp/>{</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>This<sp/>could<sp/>be<sp/>delayed<sp/>and<sp/>compressed<sp/>-<sp/>It&apos;s<sp/>only<sp/>for<sp/>pagers<sp/>etc.<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setAllowedActions(allowed_actions);</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ONLY<sp/>if<sp/>relevant<sp/>features<sp/>have<sp/>changed<sp/>(and<sp/>the<sp/>window<sp/>didn&apos;t<sp/>just<sp/>get/loose<sp/>moveresize<sp/>for<sp/>maximization<sp/>state<sp/>changes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NET::Actions<sp/>relevant<sp/>=<sp/>~(NET::ActionMove<sp/>|<sp/>NET::ActionResize);</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((allowed_actions<sp/>&amp;<sp/>relevant)<sp/>!=<sp/>(old_allowed_actions<sp/>&amp;<sp/>relevant))<sp/>{</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((allowed_actions<sp/>&amp;<sp/>NET::ActionMinimize)<sp/>!=<sp/>(old_allowed_actions<sp/>&amp;<sp/>NET::ActionMinimize))<sp/>{</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>minimizeableChanged(allowed_actions<sp/>&amp;<sp/>NET::ActionMinimize);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((allowed_actions<sp/>&amp;<sp/>NET::ActionShade)<sp/>!=<sp/>(old_allowed_actions<sp/>&amp;<sp/>NET::ActionShade))<sp/>{</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>shadeableChanged(allowed_actions<sp/>&amp;<sp/>NET::ActionShade);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((allowed_actions<sp/>&amp;<sp/>NET::ActionMax)<sp/>!=<sp/>(old_allowed_actions<sp/>&amp;<sp/>NET::ActionMax))<sp/>{</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>maximizeableChanged(allowed_actions<sp/>&amp;<sp/>NET::ActionMax);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((allowed_actions<sp/>&amp;<sp/>NET::ActionClose)<sp/>!=<sp/>(old_allowed_actions<sp/>&amp;<sp/>NET::ActionClose))<sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>closeableChanged(allowed_actions<sp/>&amp;<sp/>NET::ActionClose);</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal">Xcb::StringProperty<sp/>X11Window::fetchActivities()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2259"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_ACTIVITIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Xcb::StringProperty(window(),<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;<ref refid="class_k_win_1_1_atoms_1ab09e6030496bfaafed511d16b9b146b1" kindref="member">activities</ref>);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Xcb::StringProperty();</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::readActivities(Xcb::StringProperty<sp/>&amp;property)</highlight></codeline>
<codeline lineno="2268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_ACTIVITIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>prop<sp/>=<sp/>QString::fromUtf8(property);</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>activitiesDefined<sp/>=<sp/>!prop.isEmpty();</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prop<sp/>==<sp/>Activities::nullUuid())<sp/>{</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copied<sp/>from<sp/>setOnAllActivities<sp/>to<sp/>avoid<sp/>a<sp/>redundant<sp/>XChangeProperty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_activityList.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_activityList.clear();</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateActivities(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prop.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note:<sp/>this<sp/>makes<sp/>it<sp/>*act*<sp/>like<sp/>it&apos;s<sp/>on<sp/>all<sp/>activities<sp/>but<sp/>doesn&apos;t<sp/>set<sp/>the<sp/>property<sp/>to<sp/>&apos;ALL&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_activityList.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_activityList.clear();</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateActivities(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>newActivitiesList<sp/>=<sp/>prop.split(u</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newActivitiesList<sp/>==<sp/>m_activityList)<sp/>{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>expected<sp/>change,<sp/>it&apos;s<sp/>ok.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/>setOnActivities(newActivitiesList);</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight></codeline>
<codeline lineno="2300" refid="class_k_win_1_1_x11_window_1a11a31f06dd221d1bb1e4c6166ffbeb52" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a11a31f06dd221d1bb1e4c6166ffbeb52" kindref="member">X11Window::checkActivities</ref>()</highlight></codeline>
<codeline lineno="2301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_ACTIVITIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref><sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal"><sp/>=<sp/>fetchActivities();</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>readActivities(property);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight></codeline>
<codeline lineno="2308" refid="class_k_win_1_1_x11_window_1ae56e338fd870babf17b618f5f877c134" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1ae56e338fd870babf17b618f5f877c134" kindref="member">X11Window::setSessionActivityOverride</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needed)</highlight></codeline>
<codeline lineno="2309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/>sessionActivityOverride<sp/>=<sp/>needed;</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a1446cfc31ada2f5e9ea3f0fca4f41084" kindref="member">updateActivities</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight></codeline>
<codeline lineno="2314" refid="class_k_win_1_1_x11_window_1afbe8974f7b4627bb6004a590f1e98323" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref><sp/><ref refid="class_k_win_1_1_x11_window_1afbe8974f7b4627bb6004a590f1e98323" kindref="member">X11Window::fetchPreferredColorScheme</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2315"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref>(m_client,<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;kde_color_sheme);</highlight></codeline>
<codeline lineno="2317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight></codeline>
<codeline lineno="2319" refid="class_k_win_1_1_x11_window_1a0578029e113c93a9816a7c11590c8b8c" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_x11_window_1a0578029e113c93a9816a7c11590c8b8c" kindref="member">X11Window::readPreferredColorScheme</ref>(<ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref><sp/>&amp;property)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2320"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkDecoColor(QString::fromUtf8(property));</highlight></codeline>
<codeline lineno="2322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight></codeline>
<codeline lineno="2324" refid="class_k_win_1_1_x11_window_1a756913ae234b4f7441c9986ca98205b4" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_x11_window_1a756913ae234b4f7441c9986ca98205b4" kindref="member">X11Window::preferredColorScheme</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2325"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref><sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1afbe8974f7b4627bb6004a590f1e98323" kindref="member">fetchPreferredColorScheme</ref>();</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a0578029e113c93a9816a7c11590c8b8c" kindref="member">readPreferredColorScheme</ref>(property);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330" refid="class_k_win_1_1_x11_window_1a852aa374f815f9b1b3ac774dd4ac6d84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a852aa374f815f9b1b3ac774dd4ac6d84" kindref="member">X11Window::isClient</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2331"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!m_unmanaged;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335" refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">X11Window::isUnmanaged</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2336"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_unmanaged;</highlight></codeline>
<codeline lineno="2338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2340" refid="class_k_win_1_1_x11_window_1a6c61081edb155d2aa8672e2ee6a94708" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a6c61081edb155d2aa8672e2ee6a94708" kindref="member">X11Window::isOutline</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2341"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_outline;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight></codeline>
<codeline lineno="2345" refid="class_k_win_1_1_x11_window_1a0ab369f3c39bf8f53453ed0345c3d75d" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1ad892545facf36d334d4558298117fbc7" kindref="member">WindowType</ref><sp/><ref refid="class_k_win_1_1_x11_window_1a0ab369f3c39bf8f53453ed0345c3d75d" kindref="member">X11Window::windowType</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2346"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_unmanaged)<sp/>{</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad892545facf36d334d4558298117fbc7" kindref="member">WindowType</ref>(info-&gt;windowType(<ref refid="namespace_k_win_1a7f08dbda947a909a716bcbb664666da8" kindref="member">SUPPORTED_UNMANAGED_WINDOW_TYPES_MASK</ref>));</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad892545facf36d334d4558298117fbc7" kindref="member">WindowType</ref><sp/>wt<sp/>=<sp/><ref refid="namespace_k_win_1ad892545facf36d334d4558298117fbc7" kindref="member">WindowType</ref>(info-&gt;windowType(<ref refid="namespace_k_win_1a6bcc184215c97ac5d7d9496e32525b3a" kindref="member">SUPPORTED_MANAGED_WINDOW_TYPES_MASK</ref>));</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hacks<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wt<sp/>==<sp/><ref refid="namespace_k_win_1ad892545facf36d334d4558298117fbc7a88183b946cc5f0e8c96b2e66e1c74a7e" kindref="member">WindowType::Unknown</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>more<sp/>or<sp/>less<sp/>suggested<sp/>in<sp/>NETWM<sp/>spec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a30e74c044caf63f869473d6b8648f506" kindref="member">isTransient</ref>()<sp/>?<sp/><ref refid="namespace_k_win_1ad892545facf36d334d4558298117fbc7ad2ab42830caa7a02b36d96a46dd44b8d" kindref="member">WindowType::Dialog</ref><sp/>:<sp/><ref refid="namespace_k_win_1ad892545facf36d334d4558298117fbc7a960b44c579bc2f6818d2daaf9e4c16f0" kindref="member">WindowType::Normal</ref>;</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wt;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2359" refid="class_k_win_1_1_x11_window_1a79a9f667307227a6db1343f080e61ced" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a79a9f667307227a6db1343f080e61ced" kindref="member">X11Window::cancelFocusOutTimer</ref>()</highlight></codeline>
<codeline lineno="2360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_focusOutTimer)<sp/>{</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_focusOutTimer-&gt;stop();</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366" refid="class_k_win_1_1_x11_window_1a41fce59f634f8e4f8cbb0cc52cb1dd71" refkind="member"><highlight class="normal">xcb_window_t<sp/><ref refid="class_k_win_1_1_x11_window_1a41fce59f634f8e4f8cbb0cc52cb1dd71" kindref="member">X11Window::frameId</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2367"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_frame;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2371" refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" refkind="member"><highlight class="normal">xcb_window_t<sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">X11Window::window</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2372"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_client;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight></codeline>
<codeline lineno="2376" refid="class_k_win_1_1_x11_window_1aea04ef1d7bd98b427c4d3f4ac4f72322" refkind="member"><highlight class="normal">xcb_window_t<sp/><ref refid="class_k_win_1_1_x11_window_1aea04ef1d7bd98b427c4d3f4ac4f72322" kindref="member">X11Window::wrapperId</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2377"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wrapper;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight></codeline>
<codeline lineno="2381" refid="class_k_win_1_1_x11_window_1a05c453a3fcf05dad3f5b834a417dd93e" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_x11_window_1a05c453a3fcf05dad3f5b834a417dd93e" kindref="member">X11Window::framePosToClientPos</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;point)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2382"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref><sp/>=<sp/>point.x();</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref><sp/>=<sp/>point.y();</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a85199ff20c051bd2738f150f96875b7f" kindref="member">isDecorated</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref><sp/>+=<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a704f2db4a15f2ca4e6ae0b163e73c708" kindref="member">borderLeft</ref>());</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref><sp/>+=<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a079dfba93240f19cadab52f478e48e84" kindref="member">borderTop</ref>());</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref><sp/>-=<sp/>m_clientFrameExtents.left();</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref><sp/>-=<sp/>m_clientFrameExtents.top();</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(<ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref>,<sp/><ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="2395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight></codeline>
<codeline lineno="2397" refid="class_k_win_1_1_x11_window_1ad04667c236f30d2b04226fb479e54c8b" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_x11_window_1ad04667c236f30d2b04226fb479e54c8b" kindref="member">X11Window::nextFramePosToClientPos</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;point)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2398"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a05c453a3fcf05dad3f5b834a417dd93e" kindref="member">framePosToClientPos</ref>(point);</highlight></codeline>
<codeline lineno="2400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402" refid="class_k_win_1_1_x11_window_1a54fae364d539ef6501ae44c2a3a57d55" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_x11_window_1a54fae364d539ef6501ae44c2a3a57d55" kindref="member">X11Window::clientPosToFramePos</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;point)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2403"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref><sp/>=<sp/>point.x();</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref><sp/>=<sp/>point.y();</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a85199ff20c051bd2738f150f96875b7f" kindref="member">isDecorated</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref><sp/>-=<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a704f2db4a15f2ca4e6ae0b163e73c708" kindref="member">borderLeft</ref>());</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref><sp/>-=<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a079dfba93240f19cadab52f478e48e84" kindref="member">borderTop</ref>());</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref><sp/>+=<sp/>m_clientFrameExtents.left();</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref><sp/>+=<sp/>m_clientFrameExtents.top();</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(<ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref>,<sp/><ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="2416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"></highlight></codeline>
<codeline lineno="2418" refid="class_k_win_1_1_x11_window_1ad58f460d101533c87526ed2ccf3fa1bc" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_x11_window_1ad58f460d101533c87526ed2ccf3fa1bc" kindref="member">X11Window::nextClientPosToFramePos</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;point)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2419"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a54fae364d539ef6501ae44c2a3a57d55" kindref="member">clientPosToFramePos</ref>(point);</highlight></codeline>
<codeline lineno="2421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"></highlight></codeline>
<codeline lineno="2423" refid="class_k_win_1_1_x11_window_1ad52b2f9c90fe952787fdce1107f66024" refkind="member"><highlight class="normal">QSizeF<sp/><ref refid="class_k_win_1_1_x11_window_1ad52b2f9c90fe952787fdce1107f66024" kindref="member">X11Window::frameSizeToClientSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>&amp;<ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2424"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref><sp/>=<sp/><ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>.width();</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref><sp/>=<sp/><ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>.height();</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a85199ff20c051bd2738f150f96875b7f" kindref="member">isDecorated</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Both<sp/>frameSize<sp/>and<sp/>clientSize<sp/>are<sp/>rounded<sp/>to<sp/>integral<sp/>XNative<sp/>units</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>their<sp/>difference<sp/>must<sp/>also<sp/>be<sp/>rounded<sp/>to<sp/>integral<sp/>XNative<sp/>units</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>we<sp/>get<sp/>cycles<sp/>of<sp/>rounding<sp/>that<sp/>can<sp/>cause<sp/>growing<sp/>window<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref><sp/>-=<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a704f2db4a15f2ca4e6ae0b163e73c708" kindref="member">borderLeft</ref>())<sp/>+<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a3309d429b01d3670e9fcf4f54917ce46" kindref="member">borderRight</ref>());</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref><sp/>-=<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a079dfba93240f19cadab52f478e48e84" kindref="member">borderTop</ref>())<sp/>+<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a7b47bcdf2ffd2ba3113725d2ebfaf822" kindref="member">borderBottom</ref>());</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref><sp/>+=<sp/>m_clientFrameExtents.left()<sp/>+<sp/>m_clientFrameExtents.right();</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref><sp/>+=<sp/>m_clientFrameExtents.top()<sp/>+<sp/>m_clientFrameExtents.bottom();</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QSizeF(<ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>,<sp/><ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight></codeline>
<codeline lineno="2442" refid="class_k_win_1_1_x11_window_1a647f36c69b53bde05593b6ab25d728cf" refkind="member"><highlight class="normal">QSizeF<sp/><ref refid="class_k_win_1_1_x11_window_1a647f36c69b53bde05593b6ab25d728cf" kindref="member">X11Window::nextFrameSizeToClientSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>&amp;<ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2443"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1ad52b2f9c90fe952787fdce1107f66024" kindref="member">frameSizeToClientSize</ref>(<ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447" refid="class_k_win_1_1_x11_window_1a00a45287c67f885c7ca53be41eb9344e" refkind="member"><highlight class="normal">QSizeF<sp/><ref refid="class_k_win_1_1_x11_window_1a00a45287c67f885c7ca53be41eb9344e" kindref="member">X11Window::clientSizeToFrameSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>&amp;<ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2448"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref><sp/>=<sp/><ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>.width();</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref><sp/>=<sp/><ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>.height();</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a85199ff20c051bd2738f150f96875b7f" kindref="member">isDecorated</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Both<sp/>frameSize<sp/>and<sp/>clientSize<sp/>are<sp/>rounded<sp/>to<sp/>integral<sp/>XNative<sp/>units</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>their<sp/>difference<sp/>must<sp/>also<sp/>be<sp/>rounded<sp/>to<sp/>integral<sp/>XNative<sp/>units</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>we<sp/>get<sp/>cycles<sp/>of<sp/>rounding<sp/>that<sp/>can<sp/>cause<sp/>growing<sp/>window<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref><sp/>+=<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a704f2db4a15f2ca4e6ae0b163e73c708" kindref="member">borderLeft</ref>())<sp/>+<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a3309d429b01d3670e9fcf4f54917ce46" kindref="member">borderRight</ref>());</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref><sp/>+=<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a079dfba93240f19cadab52f478e48e84" kindref="member">borderTop</ref>())<sp/>+<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a7b47bcdf2ffd2ba3113725d2ebfaf822" kindref="member">borderBottom</ref>());</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref><sp/>-=<sp/>m_clientFrameExtents.left()<sp/>+<sp/>m_clientFrameExtents.right();</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref><sp/>-=<sp/>m_clientFrameExtents.top()<sp/>+<sp/>m_clientFrameExtents.bottom();</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QSizeF(<ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>,<sp/><ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="2464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight></codeline>
<codeline lineno="2466" refid="class_k_win_1_1_x11_window_1a983d242e42480e725fe01005f240d0a2" refkind="member"><highlight class="normal">QSizeF<sp/><ref refid="class_k_win_1_1_x11_window_1a983d242e42480e725fe01005f240d0a2" kindref="member">X11Window::nextClientSizeToFrameSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>&amp;<ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2467"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a00a45287c67f885c7ca53be41eb9344e" kindref="member">clientSizeToFrameSize</ref>(<ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight></codeline>
<codeline lineno="2471" refid="class_k_win_1_1_x11_window_1a0698f17c5d52ecb88f88580fd73b4fd7" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_x11_window_1a0698f17c5d52ecb88f88580fd73b4fd7" kindref="member">X11Window::nextFrameRectToBufferRect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;<ref refid="class_k_win_1_1_window_1aa9a98858e1f184f24e2bfa6cf9362b5f" kindref="member">rect</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2472"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1a609229e1420ffc3f9d584ea7834fdb73" kindref="member">nextFrameRectToClientRect</ref>(<ref refid="class_k_win_1_1_window_1aa9a98858e1f184f24e2bfa6cf9362b5f" kindref="member">rect</ref>);</highlight></codeline>
<codeline lineno="2474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2480" refid="class_k_win_1_1_x11_window_1a74eb3de413f19ead5d7a4e434ed206ac" refkind="member"><highlight class="normal">QSizeF<sp/><ref refid="class_k_win_1_1_x11_window_1a74eb3de413f19ead5d7a4e434ed206ac" kindref="member">X11Window::implicitSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2481"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a00a45287c67f885c7ca53be41eb9344e" kindref="member">clientSizeToFrameSize</ref>(<ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(m_client.geometry().size()));</highlight></codeline>
<codeline lineno="2483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485" refid="class_k_win_1_1_x11_window_1a974270608d37bc8817c9421d7ca8e60e" refkind="member"><highlight class="normal">pid_t<sp/><ref refid="class_k_win_1_1_x11_window_1a974270608d37bc8817c9421d7ca8e60e" kindref="member">X11Window::pid</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2486"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pid;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight></codeline>
<codeline lineno="2490" refid="class_k_win_1_1_x11_window_1ae2e6e971b045b7eb896cd0e037ccdf3d" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_x11_window_1ae2e6e971b045b7eb896cd0e037ccdf3d" kindref="member">X11Window::windowRole</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2491"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromLatin1(info-&gt;windowRole());</highlight></codeline>
<codeline lineno="2493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><ref refid="class_k_win_1_1_xcb_1_1_property" kindref="compound">Xcb::Property</ref><sp/>X11Window::fetchShowOnScreenEdge()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2496"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xcb_1_1_property" kindref="compound">Xcb::Property</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>window(),<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;kde_screen_edge_show,<sp/>XCB_ATOM_CARDINAL,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="2498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::readShowOnScreenEdge(Xcb::Property<sp/>&amp;property)</highlight></codeline>
<codeline lineno="2501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>value<sp/>=<sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal">.value&lt;uint32_t&gt;(ElectricNone);</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/>ElectricBorder<sp/>border<sp/>=<sp/>ElectricNone;</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(value<sp/>&amp;<sp/>0xFF)<sp/>{</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>border<sp/>=<sp/>ElectricTop;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>border<sp/>=<sp/>ElectricRight;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>border<sp/>=<sp/>ElectricBottom;</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>border<sp/>=<sp/>ElectricLeft;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(border<sp/>!=<sp/>ElectricNone)<sp/>{</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(m_edgeGeometryTrackingConnection);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reserveScreenEdge<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>border]()<sp/>{</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;screenEdges()-&gt;reserve(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>border))<sp/>{</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setHidden(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reserveScreenEdge();</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_edgeGeometryTrackingConnection<sp/>=<sp/>connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;X11Window::frameGeometryChanged,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>reserveScreenEdge);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!property.isNull()<sp/>&amp;&amp;<sp/>property-&gt;type<sp/>!=<sp/>XCB_ATOM_NONE)<sp/>{</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>value<sp/>is<sp/>incorrect,<sp/>delete<sp/>the<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>the<sp/>client<sp/>knows<sp/>that<sp/>it<sp/>is<sp/>not<sp/>hidden</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_delete_property(kwinApp()-&gt;x11Connection(),<sp/>window(),<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;<ref refid="class_k_win_1_1_atoms_1af3484f931bc77cb4a7d11915806c7932" kindref="member">kde_screen_edge_show</ref>);</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(m_edgeGeometryTrackingConnection);</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1a26e8b8046e90de4811253d87de67477d" kindref="member">reserve</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ElectricNone);</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::updateShowOnScreenEdge()</highlight></codeline>
<codeline lineno="2546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/>Xcb::Property<sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal"><sp/>=<sp/>fetchShowOnScreenEdge();</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/>readShowOnScreenEdge(property);</highlight></codeline>
<codeline lineno="2549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight></codeline>
<codeline lineno="2551" refid="class_k_win_1_1_x11_window_1a014911fefc34d2f424b4438e130b5aad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a014911fefc34d2f424b4438e130b5aad" kindref="member">X11Window::showOnScreenEdge</ref>()</highlight></codeline>
<codeline lineno="2552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a5af4007f99eb32f7091d32d3331b0e7e" kindref="member">setHidden</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_delete_property(kwinApp()-&gt;x11Connection(),<sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>(),<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;kde_screen_edge_show);</highlight></codeline>
<codeline lineno="2555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight></codeline>
<codeline lineno="2557" refid="class_k_win_1_1_x11_window_1a7edf1d1b28b1cc4671453865e584838e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a7edf1d1b28b1cc4671453865e584838e" kindref="member">X11Window::belongsToSameApplication</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1a1f57b5fc7e5ebf9060435cacce04349d" kindref="member">Window</ref><sp/>*other,<sp/>SameApplicationChecks<sp/>checks)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2558"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*c2<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(other);</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c2)<sp/>{</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1ad978568ef3760787e04fcd1198f05845" kindref="member">X11Window::belongToSameApplication</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>c2,<sp/>checks);</highlight></codeline>
<codeline lineno="2564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"></highlight></codeline>
<codeline lineno="2566" refid="class_k_win_1_1_x11_window_1a95a7ebb34d5d7127053c50e64415d164" refkind="member"><highlight class="normal">QSizeF<sp/><ref refid="class_k_win_1_1_x11_window_1a95a7ebb34d5d7127053c50e64415d164" kindref="member">X11Window::resizeIncrements</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2567"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(m_geometryHints.resizeIncrements());</highlight></codeline>
<codeline lineno="2569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"></highlight></codeline>
<codeline lineno="2571" refid="class_k_win_1_1_x11_window_1a8d338a701c0f1f6ab4c12c1d656adf74" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref><sp/><ref refid="class_k_win_1_1_x11_window_1a8d338a701c0f1f6ab4c12c1d656adf74" kindref="member">X11Window::fetchApplicationMenuServiceName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2572"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref>(m_client,<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;kde_net_wm_appmenu_service_name);</highlight></codeline>
<codeline lineno="2574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight></codeline>
<codeline lineno="2576" refid="class_k_win_1_1_x11_window_1a68b4cac4c0bafcdaa1b65abdd1698b4e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a68b4cac4c0bafcdaa1b65abdd1698b4e" kindref="member">X11Window::readApplicationMenuServiceName</ref>(<ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref><sp/>&amp;property)</highlight></codeline>
<codeline lineno="2577"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aa6855ec71b01961008ef688291652965" kindref="member">updateApplicationMenuServiceName</ref>(QString::fromUtf8(property));</highlight></codeline>
<codeline lineno="2579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight></codeline>
<codeline lineno="2581" refid="class_k_win_1_1_x11_window_1a83c3971ad7bd97a47b428285cc900402" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a83c3971ad7bd97a47b428285cc900402" kindref="member">X11Window::checkApplicationMenuServiceName</ref>()</highlight></codeline>
<codeline lineno="2582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref><sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a8d338a701c0f1f6ab4c12c1d656adf74" kindref="member">fetchApplicationMenuServiceName</ref>();</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a68b4cac4c0bafcdaa1b65abdd1698b4e" kindref="member">readApplicationMenuServiceName</ref>(property);</highlight></codeline>
<codeline lineno="2585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight></codeline>
<codeline lineno="2587" refid="class_k_win_1_1_x11_window_1a1e877ff3158c82224301f63640e2f80c" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref><sp/><ref refid="class_k_win_1_1_x11_window_1a1e877ff3158c82224301f63640e2f80c" kindref="member">X11Window::fetchApplicationMenuObjectPath</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2588"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref>(m_client,<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;kde_net_wm_appmenu_object_path);</highlight></codeline>
<codeline lineno="2590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"></highlight></codeline>
<codeline lineno="2592" refid="class_k_win_1_1_x11_window_1a0fa9fddfd088d3b8402fe8f3c77bf694" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a0fa9fddfd088d3b8402fe8f3c77bf694" kindref="member">X11Window::readApplicationMenuObjectPath</ref>(<ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref><sp/>&amp;property)</highlight></codeline>
<codeline lineno="2593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1acbf43400025a9c526cf446f35e0ad6d8" kindref="member">updateApplicationMenuObjectPath</ref>(QString::fromUtf8(property));</highlight></codeline>
<codeline lineno="2595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"></highlight></codeline>
<codeline lineno="2597" refid="class_k_win_1_1_x11_window_1a1d1ecbf363011f72ea936436a0814a7a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a1d1ecbf363011f72ea936436a0814a7a" kindref="member">X11Window::checkApplicationMenuObjectPath</ref>()</highlight></codeline>
<codeline lineno="2598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref><sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a1e877ff3158c82224301f63640e2f80c" kindref="member">fetchApplicationMenuObjectPath</ref>();</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a0fa9fddfd088d3b8402fe8f3c77bf694" kindref="member">readApplicationMenuObjectPath</ref>(property);</highlight></codeline>
<codeline lineno="2601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight></codeline>
<codeline lineno="2603" refid="class_k_win_1_1_x11_window_1aa18bcf738f457ed150e5d309f086b018" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1aa18bcf738f457ed150e5d309f086b018" kindref="member">X11Window::ackSync</ref>()</highlight></codeline>
<codeline lineno="2604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>a<sp/>sync<sp/>request<sp/>can<sp/>be<sp/>ack&apos;ed<sp/>after<sp/>the<sp/>timeout.<sp/>If<sp/>that<sp/>happens,<sp/>just<sp/>re-enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XSync<sp/>back<sp/>and<sp/>do<sp/>nothing<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.pending<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_syncRequest.enabled)<sp/>{</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.acked<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_syncRequest.timeout)<sp/>{</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.timeout-&gt;stop();</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/>setAllowCommits(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight></codeline>
<codeline lineno="2621" refid="class_k_win_1_1_x11_window_1acf438337522deafccf8127f32c305918" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1acf438337522deafccf8127f32c305918" kindref="member">X11Window::ackSyncTimeout</ref>()</highlight></codeline>
<codeline lineno="2622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>sync<sp/>request<sp/>times<sp/>out,<sp/>disable<sp/>XSync<sp/>temporarily<sp/>until<sp/>the<sp/>client<sp/>comes<sp/>back<sp/>to<sp/>its<sp/>senses.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a182332ca660202f8f8dbbe2c95e64832" kindref="member">finishSync</ref>();</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/>setAllowCommits(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"></highlight></codeline>
<codeline lineno="2630" refid="class_k_win_1_1_x11_window_1a182332ca660202f8f8dbbe2c95e64832" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a182332ca660202f8f8dbbe2c95e64832" kindref="member">X11Window::finishSync</ref>()</highlight></codeline>
<codeline lineno="2631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a595f38fca83c2083b11039c4679983c5" kindref="member">setReadyForPainting</ref>();</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_syncRequest.interactiveResize)<sp/>{</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syncRequest.interactiveResize<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aca6e1f1d8772897c5efbfb3c17fa436e" kindref="member">moveResize</ref>(<ref refid="class_k_win_1_1_window_1a5bd40e38d16c8453af9226579d1865ac" kindref="member">moveResizeGeometry</ref>());</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/>m_syncRequest.acked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"></highlight></codeline>
<codeline lineno="2643" refid="class_k_win_1_1_x11_window_1ad978568ef3760787e04fcd1198f05845" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1ad978568ef3760787e04fcd1198f05845" kindref="member">X11Window::belongToSameApplication</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*c1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*c2,<sp/>SameApplicationChecks<sp/>checks)</highlight></codeline>
<codeline lineno="2644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>same_app<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tests<sp/>that<sp/>definitely<sp/>mean<sp/>they<sp/>belong<sp/>together</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1<sp/>==<sp/>c2)<sp/>{</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>same_app<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1-&gt;<ref refid="class_k_win_1_1_x11_window_1a30e74c044caf63f869473d6b8648f506" kindref="member">isTransient</ref>()<sp/>&amp;&amp;<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1a07961b2f4f6ecf9840d8d748b5cfa120" kindref="member">hasTransient</ref>(c1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>same_app<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>c1<sp/>has<sp/>c2<sp/>as<sp/>mainwindow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c2-&gt;<ref refid="class_k_win_1_1_x11_window_1a30e74c044caf63f869473d6b8648f506" kindref="member">isTransient</ref>()<sp/>&amp;&amp;<sp/>c1-&gt;<ref refid="class_k_win_1_1_x11_window_1a07961b2f4f6ecf9840d8d748b5cfa120" kindref="member">hasTransient</ref>(c2,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>same_app<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>c2<sp/>has<sp/>c1<sp/>as<sp/>mainwindow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1-&gt;<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()<sp/>==<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>same_app<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>same<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1-&gt;<ref refid="class_k_win_1_1_x11_window_1ac8f91f3f06cbfe41d1f61204c9aa6a39" kindref="member">wmClientLeader</ref>()<sp/>==<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1ac8f91f3f06cbfe41d1f61204c9aa6a39" kindref="member">wmClientLeader</ref>()</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>c1-&gt;<ref refid="class_k_win_1_1_x11_window_1ac8f91f3f06cbfe41d1f61204c9aa6a39" kindref="member">wmClientLeader</ref>()<sp/>!=<sp/>c1-&gt;<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>()<sp/></highlight><highlight class="comment">//<sp/>if<sp/>WM_CLIENT_LEADER<sp/>is<sp/>not<sp/>set,<sp/>it<sp/>returns<sp/>window(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1ac8f91f3f06cbfe41d1f61204c9aa6a39" kindref="member">wmClientLeader</ref>()<sp/>!=<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>use<sp/>in<sp/>this<sp/>test<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>same_app<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>same<sp/>client<sp/>leader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"></highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tests<sp/>that<sp/>mean<sp/>they<sp/>most<sp/>probably<sp/>don&apos;t<sp/>belong<sp/>together</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c1-&gt;<ref refid="class_k_win_1_1_x11_window_1a974270608d37bc8817c9421d7ca8e60e" kindref="member">pid</ref>()<sp/>!=<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1a974270608d37bc8817c9421d7ca8e60e" kindref="member">pid</ref>()<sp/>&amp;&amp;<sp/>!checks.testFlag(<ref refid="class_k_win_1_1_window_1a70e1b60416c67a488268d17dba135ecaa6f4457bf1caf8f10b38c5d575603e22e" kindref="member">SameApplicationCheck::AllowCrossProcesses</ref>))</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>c1-&gt;<ref refid="class_k_win_1_1_window_1a65fa8eaf5936ace6355431d739438a3e" kindref="member">wmClientMachine</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>!=<sp/>c2-&gt;<ref refid="class_k_win_1_1_window_1a65fa8eaf5936ace6355431d739438a3e" kindref="member">wmClientMachine</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>different<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1-&gt;<ref refid="class_k_win_1_1_x11_window_1ac8f91f3f06cbfe41d1f61204c9aa6a39" kindref="member">wmClientLeader</ref>()<sp/>!=<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1ac8f91f3f06cbfe41d1f61204c9aa6a39" kindref="member">wmClientLeader</ref>()</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>c1-&gt;<ref refid="class_k_win_1_1_x11_window_1ac8f91f3f06cbfe41d1f61204c9aa6a39" kindref="member">wmClientLeader</ref>()<sp/>!=<sp/>c1-&gt;<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>()<sp/></highlight><highlight class="comment">//<sp/>if<sp/>WM_CLIENT_LEADER<sp/>is<sp/>not<sp/>set,<sp/>it<sp/>returns<sp/>window(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1ac8f91f3f06cbfe41d1f61204c9aa6a39" kindref="member">wmClientLeader</ref>()<sp/>!=<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>()<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>use<sp/>in<sp/>this<sp/>test<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!checks.testFlag(<ref refid="class_k_win_1_1_window_1a70e1b60416c67a488268d17dba135ecaa6f4457bf1caf8f10b38c5d575603e22e" kindref="member">SameApplicationCheck::AllowCrossProcesses</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>different<sp/>client<sp/>leader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1-&gt;<ref refid="class_k_win_1_1_window_1a825429c1c8c6f5b6721752eac7da370d" kindref="member">resourceClass</ref>()<sp/>!=<sp/>c2-&gt;<ref refid="class_k_win_1_1_window_1a825429c1c8c6f5b6721752eac7da370d" kindref="member">resourceClass</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>different<sp/>apps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1a1552f36cc01da626a1a6de4d76e94d50" kindref="member">sameAppWindowRoleMatch</ref>(c1,<sp/>c2,<sp/>checks.testFlag(<ref refid="class_k_win_1_1_window_1a70e1b60416c67a488268d17dba135ecaa3852083c5b74bec23d5e3ff0964693be" kindref="member">SameApplicationCheck::RelaxedForActive</ref>))</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!checks.testFlag(<ref refid="class_k_win_1_1_window_1a70e1b60416c67a488268d17dba135ecaa6f4457bf1caf8f10b38c5d575603e22e" kindref="member">SameApplicationCheck::AllowCrossProcesses</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>&quot;different&quot;<sp/>apps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1-&gt;<ref refid="class_k_win_1_1_x11_window_1a974270608d37bc8817c9421d7ca8e60e" kindref="member">pid</ref>()<sp/>==<sp/>0<sp/>||<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1a974270608d37bc8817c9421d7ca8e60e" kindref="member">pid</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>old<sp/>apps<sp/>that<sp/>don&apos;t<sp/>have<sp/>_NET_WM_PID,<sp/>consider<sp/>them<sp/>different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>they<sp/>weren&apos;t<sp/>found<sp/>to<sp/>match<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>same_app<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>looks<sp/>like<sp/>it&apos;s<sp/>the<sp/>same<sp/>app</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>same_app;</highlight></codeline>
<codeline lineno="2683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Non-transient<sp/>windows<sp/>with<sp/>window<sp/>role<sp/>containing<sp/>&apos;#&apos;<sp/>are<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"></highlight><highlight class="comment">//<sp/>considered<sp/>belonging<sp/>to<sp/>different<sp/>applications<sp/>(unless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>window<sp/>role<sp/>is<sp/>exactly<sp/>the<sp/>same).<sp/>KMainWindow<sp/>sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight><highlight class="comment">//<sp/>window<sp/>role<sp/>this<sp/>way<sp/>by<sp/>default,<sp/>and<sp/>different<sp/>KMainWindow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"></highlight><highlight class="comment">//<sp/>usually<sp/>&quot;are&quot;<sp/>different<sp/>application<sp/>from<sp/>user&apos;s<sp/>point<sp/>of<sp/>view.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>help<sp/>with<sp/>no-focus-stealing<sp/>for<sp/>e.g.<sp/>konqy<sp/>reusing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>the<sp/>other<sp/>hand,<sp/>if<sp/>one<sp/>of<sp/>the<sp/>windows<sp/>is<sp/>active,<sp/>they<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight><highlight class="comment">//<sp/>considered<sp/>belonging<sp/>to<sp/>the<sp/>same<sp/>application.<sp/>This<sp/>is<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>cases<sp/>when<sp/>opening<sp/>new<sp/>mainwindow<sp/>directly<sp/>from<sp/>the<sp/>application,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight><highlight class="comment">//<sp/>e.g.<sp/>&apos;Open<sp/>New<sp/>Window&apos;<sp/>in<sp/>konqy<sp/>(<sp/>active_hack<sp/>==<sp/>true<sp/>).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2695" refid="class_k_win_1_1_x11_window_1a1552f36cc01da626a1a6de4d76e94d50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a1552f36cc01da626a1a6de4d76e94d50" kindref="member">X11Window::sameAppWindowRoleMatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*c1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*c2,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active_hack)</highlight></codeline>
<codeline lineno="2696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1-&gt;<ref refid="class_k_win_1_1_x11_window_1a30e74c044caf63f869473d6b8648f506" kindref="member">isTransient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*t<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c1-&gt;<ref refid="class_k_win_1_1_window_1a74ba8e8138736add81114a69c064170a" kindref="member">transientFor</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1-&gt;<ref refid="class_k_win_1_1_x11_window_1afe2f971d0d4593a63edb75220cf48c02" kindref="member">groupTransient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c1-&gt;<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()<sp/>==<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>();</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>a<sp/>group<sp/>transient<sp/>is<sp/>in<sp/>its<sp/>own<sp/>group,<sp/>it<sp/>didn&apos;t<sp/>possibly<sp/>have<sp/>a<sp/>group,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>therefore<sp/>should<sp/>be<sp/>considered<sp/>belonging<sp/>to<sp/>the<sp/>same<sp/>app<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>other<sp/>windows<sp/>from<sp/>the<sp/>same<sp/>app</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>c1-&gt;<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;<ref refid="class_k_win_1_1_group_1acfbe31198e1912db170f492e78d01149" kindref="member">leaderClient</ref>()<sp/>==<sp/>c1<sp/>||<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;<ref refid="class_k_win_1_1_group_1acfbe31198e1912db170f492e78d01149" kindref="member">leaderClient</ref>()<sp/>==<sp/>c2;</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c2-&gt;<ref refid="class_k_win_1_1_x11_window_1a30e74c044caf63f869473d6b8648f506" kindref="member">isTransient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*t<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c2-&gt;<ref refid="class_k_win_1_1_window_1a74ba8e8138736add81114a69c064170a" kindref="member">transientFor</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c2-&gt;<ref refid="class_k_win_1_1_x11_window_1afe2f971d0d4593a63edb75220cf48c02" kindref="member">groupTransient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c1-&gt;<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()<sp/>==<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>();</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>c1-&gt;<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;<ref refid="class_k_win_1_1_group_1acfbe31198e1912db170f492e78d01149" kindref="member">leaderClient</ref>()<sp/>==<sp/>c1<sp/>||<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;<ref refid="class_k_win_1_1_group_1acfbe31198e1912db170f492e78d01149" kindref="member">leaderClient</ref>()<sp/>==<sp/>c2;</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos1<sp/>=<sp/>c1-&gt;<ref refid="class_k_win_1_1_x11_window_1ae2e6e971b045b7eb896cd0e037ccdf3d" kindref="member">windowRole</ref>().indexOf(</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos2<sp/>=<sp/>c2-&gt;<ref refid="class_k_win_1_1_x11_window_1ae2e6e971b045b7eb896cd0e037ccdf3d" kindref="member">windowRole</ref>().indexOf(</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pos1<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>pos2<sp/>&gt;=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!active_hack)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>without<sp/>the<sp/>active<sp/>hack<sp/>for<sp/>focus<sp/>stealing<sp/>prevention,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c1<sp/>==<sp/>c2;<sp/></highlight><highlight class="comment">//<sp/>different<sp/>mainwindows<sp/>are<sp/>always<sp/>different<sp/>apps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c1-&gt;<ref refid="class_k_win_1_1_window_1a8466be38391212ef29a4c880506eb069" kindref="member">isActive</ref>()<sp/>&amp;&amp;<sp/>!c2-&gt;<ref refid="class_k_win_1_1_window_1a8466be38391212ef29a4c880506eb069" kindref="member">isActive</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c1<sp/>==<sp/>c2;</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2738"><highlight class="comment"></highlight></codeline>
<codeline lineno="2739"><highlight class="comment"><sp/>Transiency<sp/>stuff:<sp/>ICCCM<sp/>4.1.2.6,<sp/>NETWM<sp/>7.3</highlight></codeline>
<codeline lineno="2740"><highlight class="comment"></highlight></codeline>
<codeline lineno="2741"><highlight class="comment"><sp/>WM_TRANSIENT_FOR<sp/>is<sp/>basically<sp/>means<sp/>&quot;this<sp/>is<sp/>my<sp/>mainwindow&quot;.</highlight></codeline>
<codeline lineno="2742"><highlight class="comment"><sp/>For<sp/>NET::Unknown<sp/>windows,<sp/>transient<sp/>windows<sp/>are<sp/>considered<sp/>to<sp/>be<sp/>NET::Dialog</highlight></codeline>
<codeline lineno="2743"><highlight class="comment"><sp/>windows,<sp/>for<sp/>compatibility<sp/>with<sp/>non-NETWM<sp/>clients.<sp/>KWin<sp/>may<sp/>adjust<sp/>the<sp/>value</highlight></codeline>
<codeline lineno="2744"><highlight class="comment"><sp/>of<sp/>this<sp/>property<sp/>in<sp/>some<sp/>cases<sp/>(window<sp/>pointing<sp/>to<sp/>itself<sp/>or<sp/>creating<sp/>a<sp/>loop,</highlight></codeline>
<codeline lineno="2745"><highlight class="comment"><sp/>keeping<sp/>NET::Splash<sp/>windows<sp/>above<sp/>other<sp/>windows<sp/>from<sp/>the<sp/>same<sp/>app,<sp/>etc.).</highlight></codeline>
<codeline lineno="2746"><highlight class="comment"></highlight></codeline>
<codeline lineno="2747"><highlight class="comment"><sp/>X11Window::transient_for_id<sp/>is<sp/>the<sp/>value<sp/>of<sp/>the<sp/>WM_TRANSIENT_FOR<sp/>property,<sp/>after</highlight></codeline>
<codeline lineno="2748"><highlight class="comment"><sp/>possibly<sp/>being<sp/>adjusted<sp/>by<sp/>KWin.<sp/>X11Window::transient_for<sp/>points<sp/>to<sp/>the<sp/>Client</highlight></codeline>
<codeline lineno="2749"><highlight class="comment"><sp/>this<sp/>Client<sp/>is<sp/>transient<sp/>for,<sp/>or<sp/>is<sp/>NULL.<sp/>If<sp/>X11Window::transient_for_id<sp/>is</highlight></codeline>
<codeline lineno="2750"><highlight class="comment"><sp/>poiting<sp/>to<sp/>the<sp/>root<sp/>window,<sp/>the<sp/>window<sp/>is<sp/>considered<sp/>to<sp/>be<sp/>transient</highlight></codeline>
<codeline lineno="2751"><highlight class="comment"><sp/>for<sp/>the<sp/>whole<sp/>window<sp/>group,<sp/>as<sp/>suggested<sp/>in<sp/>NETWM<sp/>7.3.</highlight></codeline>
<codeline lineno="2752"><highlight class="comment"></highlight></codeline>
<codeline lineno="2753"><highlight class="comment"><sp/>In<sp/>the<sp/>case<sp/>of<sp/>group<sp/>transient<sp/>window,<sp/>X11Window::transient_for<sp/>is<sp/>NULL,</highlight></codeline>
<codeline lineno="2754"><highlight class="comment"><sp/>and<sp/>X11Window::groupTransient()<sp/>returns<sp/>true.<sp/>Such<sp/>window<sp/>is<sp/>treated<sp/>as</highlight></codeline>
<codeline lineno="2755"><highlight class="comment"><sp/>if<sp/>it<sp/>were<sp/>transient<sp/>for<sp/>every<sp/>window<sp/>in<sp/>its<sp/>window<sp/>group<sp/>that<sp/>has<sp/>been</highlight></codeline>
<codeline lineno="2756"><highlight class="comment"><sp/>mapped<sp/>_before_<sp/>it<sp/>(or,<sp/>to<sp/>be<sp/>exact,<sp/>was<sp/>added<sp/>to<sp/>the<sp/>same<sp/>group<sp/>before<sp/>it).</highlight></codeline>
<codeline lineno="2757"><highlight class="comment"><sp/>Otherwise<sp/>two<sp/>group<sp/>transients<sp/>can<sp/>create<sp/>loops,<sp/>which<sp/>can<sp/>lead<sp/>very<sp/>very</highlight></codeline>
<codeline lineno="2758"><highlight class="comment"><sp/>nasty<sp/>things<sp/>(bug<sp/>#67914<sp/>and<sp/>all<sp/>its<sp/>dupes).</highlight></codeline>
<codeline lineno="2759"><highlight class="comment"></highlight></codeline>
<codeline lineno="2760"><highlight class="comment"><sp/>X11Window::original_transient_for_id<sp/>is<sp/>the<sp/>value<sp/>of<sp/>the<sp/>property,<sp/>which</highlight></codeline>
<codeline lineno="2761"><highlight class="comment"><sp/>may<sp/>be<sp/>different<sp/>if<sp/>X11Window::transient_for_id<sp/>if<sp/>e.g.<sp/>forcing<sp/>NET::Splash</highlight></codeline>
<codeline lineno="2762"><highlight class="comment"><sp/>to<sp/>be<sp/>kept<sp/>on<sp/>top<sp/>of<sp/>its<sp/>window<sp/>group,<sp/>or<sp/>when<sp/>the<sp/>mainwindow<sp/>is<sp/>not<sp/>mapped</highlight></codeline>
<codeline lineno="2763"><highlight class="comment"><sp/>yet,<sp/>in<sp/>which<sp/>case<sp/>the<sp/>window<sp/>is<sp/>temporarily<sp/>made<sp/>group<sp/>transient,</highlight></codeline>
<codeline lineno="2764"><highlight class="comment"><sp/>and<sp/>when<sp/>the<sp/>mainwindow<sp/>is<sp/>mapped,<sp/>transiency<sp/>is<sp/>re-evaluated.</highlight></codeline>
<codeline lineno="2765"><highlight class="comment"></highlight></codeline>
<codeline lineno="2766"><highlight class="comment"><sp/>This<sp/>can<sp/>get<sp/>a<sp/>bit<sp/>complicated<sp/>with<sp/>with<sp/>e.g.<sp/>two<sp/>Konqueror<sp/>windows<sp/>created</highlight></codeline>
<codeline lineno="2767"><highlight class="comment"><sp/>by<sp/>the<sp/>same<sp/>process.<sp/>They<sp/>should<sp/>ideally<sp/>appear<sp/>like<sp/>two<sp/>independent<sp/>applications</highlight></codeline>
<codeline lineno="2768"><highlight class="comment"><sp/>to<sp/>the<sp/>user.<sp/>This<sp/>should<sp/>be<sp/>accomplished<sp/>by<sp/>all<sp/>windows<sp/>in<sp/>the<sp/>same<sp/>process</highlight></codeline>
<codeline lineno="2769"><highlight class="comment"><sp/>having<sp/>the<sp/>same<sp/>window<sp/>group<sp/>(needs<sp/>to<sp/>be<sp/>changed<sp/>in<sp/>Qt<sp/>at<sp/>the<sp/>moment),<sp/>and</highlight></codeline>
<codeline lineno="2770"><highlight class="comment"><sp/>using<sp/>non-group<sp/>transients<sp/>poiting<sp/>to<sp/>their<sp/>relevant<sp/>mainwindow<sp/>for<sp/>toolwindows</highlight></codeline>
<codeline lineno="2771"><highlight class="comment"><sp/>etc.<sp/>KWin<sp/>should<sp/>handle<sp/>both<sp/>group<sp/>and<sp/>non-group<sp/>transient<sp/>dialogs<sp/>well.</highlight></codeline>
<codeline lineno="2772"><highlight class="comment"></highlight></codeline>
<codeline lineno="2773"><highlight class="comment"><sp/>In<sp/>other<sp/>words:</highlight></codeline>
<codeline lineno="2774"><highlight class="comment"><sp/>-<sp/>non-transient<sp/>windows<sp/><sp/><sp/><sp/><sp/>:<sp/>isTransient()<sp/>==<sp/>false</highlight></codeline>
<codeline lineno="2775"><highlight class="comment"><sp/>-<sp/>normal<sp/>transients<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>transientFor()<sp/>!=<sp/>NULL</highlight></codeline>
<codeline lineno="2776"><highlight class="comment"><sp/>-<sp/>group<sp/>transients<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>groupTransient()<sp/>==<sp/>true</highlight></codeline>
<codeline lineno="2777"><highlight class="comment"></highlight></codeline>
<codeline lineno="2778"><highlight class="comment"><sp/>-<sp/>list<sp/>of<sp/>mainwindows<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mainClients()<sp/><sp/>(call<sp/>once<sp/>and<sp/>loop<sp/>over<sp/>the<sp/>result)</highlight></codeline>
<codeline lineno="2779"><highlight class="comment"><sp/>-<sp/>list<sp/>of<sp/>transients<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>transients()</highlight></codeline>
<codeline lineno="2780"><highlight class="comment"><sp/>-<sp/>every<sp/>window<sp/>in<sp/>the<sp/>group<sp/>:<sp/>group()-&gt;members()</highlight></codeline>
<codeline lineno="2781"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><ref refid="class_k_win_1_1_xcb_1_1_transient_for" kindref="compound">Xcb::TransientFor</ref><sp/>X11Window::fetchTransient()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2784"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_xcb_1_1_transient_for" kindref="compound">Xcb::TransientFor</ref>(window());</highlight></codeline>
<codeline lineno="2786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::readTransientProperty(Xcb::TransientFor<sp/>&amp;transientFor)</highlight></codeline>
<codeline lineno="2789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_window_t<sp/>new_transient_for_id<sp/>=<sp/>XCB_WINDOW_NONE;</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transientFor.getTransientFor(&amp;new_transient_for_id))<sp/>{</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_originalTransientForId<sp/>=<sp/>new_transient_for_id;</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_transient_for_id<sp/>=<sp/>verifyTransientFor(new_transient_for_id,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_originalTransientForId<sp/>=<sp/>XCB_WINDOW_NONE;</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_transient_for_id<sp/>=<sp/>verifyTransientFor(XCB_WINDOW_NONE,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/>setTransient(new_transient_for_id);</highlight></codeline>
<codeline lineno="2799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::readTransient()</highlight></codeline>
<codeline lineno="2802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isUnmanaged())<sp/>{</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/>Xcb::TransientFor<sp/>transientFor<sp/>=<sp/>fetchTransient();</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/>readTransientProperty(transientFor);</highlight></codeline>
<codeline lineno="2808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::setTransient(xcb_window_t<sp/>new_transient_for_id)</highlight></codeline>
<codeline lineno="2811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_transient_for_id<sp/>!=<sp/>m_transientForId)<sp/>{</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removeFromMainClients();</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X11Window<sp/>*transient_for<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_transientForId<sp/>=<sp/>new_transient_for_id;</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_transientForId<sp/>!=<sp/>XCB_WINDOW_NONE<sp/>&amp;&amp;<sp/>!groupTransient())<sp/>{</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transient_for<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;findClient(Predicate::WindowMatch,<sp/>m_transientForId);</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(transient_for<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>verifyTransient()<sp/>had<sp/>to<sp/>check<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transient_for-&gt;addTransient(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>checkGroup()<sp/>will<sp/>check<sp/>&apos;check_active_modal&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setTransientFor(transient_for);</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkGroup(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>force,<sp/>because<sp/>transiency<sp/>has<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateLayer();</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>transientChanged();</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"></highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::removeFromMainClients()</highlight></codeline>
<codeline lineno="2829"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transientFor())<sp/>{</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transientFor()-&gt;removeTransient(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(groupTransient())<sp/>{</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>group()-&gt;members().constBegin();<sp/>it<sp/>!=<sp/>group()-&gt;members().constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;removeTransient(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*sigh*<sp/>this<sp/>transiency<sp/>handling<sp/>is<sp/>madness<sp/>:(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>one<sp/>is<sp/>called<sp/>when<sp/>destroying/releasing<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>makes<sp/>sure<sp/>this<sp/>client<sp/>is<sp/>removed<sp/>from<sp/>all<sp/>grouping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight><highlight class="comment">//<sp/>related<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::cleanGrouping()</highlight></codeline>
<codeline lineno="2845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>want<sp/>to<sp/>break<sp/>parent-child<sp/>relationships,<sp/>but<sp/>preserve<sp/>stacking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>order<sp/>constraints<sp/>at<sp/>the<sp/>same<sp/>time<sp/>for<sp/>window<sp/>closing<sp/>animations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"></highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transientFor())<sp/>{</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transientFor()-&gt;removeTransientFromList(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setTransientFor(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(groupTransient())<sp/>{</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>members<sp/>=<sp/>group()-&gt;members();</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Window<sp/>*member<sp/>:<sp/>members)<sp/>{</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>member-&gt;removeTransientFromList(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>children<sp/>=<sp/>transients();</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Window<sp/>*transient<sp/>:<sp/>children)<sp/>{</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removeTransientFromList(transient);</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transient-&gt;setTransientFor(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/>group()-&gt;removeMember(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/>in_group<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/>m_transientForId<sp/>=<sp/>XCB_WINDOW_NONE;</highlight></codeline>
<codeline lineno="2870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>no<sp/>group<sp/>transient<sp/>is<sp/>considered<sp/>transient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2873"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>a<sp/>window<sp/>that<sp/>is<sp/>(directly<sp/>or<sp/>indirectly)<sp/>transient<sp/>for<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(including<sp/>another<sp/>group<sp/>transients).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Non-group<sp/>transients<sp/>not<sp/>causing<sp/>loops<sp/>are<sp/>checked<sp/>in<sp/>verifyTransientFor().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::checkGroupTransients()</highlight></codeline>
<codeline lineno="2877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it1<sp/>=<sp/>group()-&gt;members().constBegin();<sp/>it1<sp/>!=<sp/>group()-&gt;members().constEnd();<sp/>++it1)<sp/>{</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(*it1)-&gt;groupTransient())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>check<sp/>all<sp/>group<sp/>transients<sp/>in<sp/>the<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>optimize<sp/>to<sp/>check<sp/>only<sp/>the<sp/>changed<sp/>ones?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it2<sp/>=<sp/>group()-&gt;members().constBegin();<sp/>it2<sp/>!=<sp/>group()-&gt;members().constEnd();<sp/>++it2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>group<sp/>transients<sp/>can<sp/>be<sp/>transient<sp/>only<sp/>for<sp/>others<sp/>in<sp/>the<sp/>group,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>don&apos;t<sp/>make<sp/>them<sp/>transient<sp/>for<sp/>the<sp/>ones<sp/>that<sp/>are<sp/>transient<sp/>for<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*it1<sp/>==<sp/>*it2)<sp/>{</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Window<sp/>*cl<sp/>=<sp/>(*it2)-&gt;transientFor();<sp/>cl<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>cl<sp/>=<sp/>cl-&gt;transientFor())<sp/>{</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cl<sp/>==<sp/>*it1)<sp/>{</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>use<sp/>removeTransient(),<sp/>that<sp/>would<sp/>modify<sp/>*it2<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it2)-&gt;removeTransientFromList(*it1);</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>*it1<sp/>and<sp/>*it2<sp/>are<sp/>both<sp/>group<sp/>transients,<sp/>and<sp/>are<sp/>transient<sp/>for<sp/>each<sp/>other,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>only<sp/>*it2<sp/>transient<sp/>for<sp/>*it1<sp/>(i.e.<sp/>subwindow),<sp/>as<sp/>*it2<sp/>came<sp/>later,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>should<sp/>be<sp/>therefore<sp/>on<sp/>top<sp/>of<sp/>*it1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>This<sp/>could<sp/>possibly<sp/>be<sp/>optimized,<sp/>it<sp/>also<sp/>requires<sp/>hasTransient()<sp/>to<sp/>check<sp/>for<sp/>loops.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it2)-&gt;groupTransient()<sp/>&amp;&amp;<sp/>(*it1)-&gt;hasTransient(*it2,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(*it2)-&gt;hasTransient(*it1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it2)-&gt;removeTransientFromList(*it1);</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>already<sp/>windows<sp/>W1<sp/>and<sp/>W2,<sp/>W2<sp/>being<sp/>transient<sp/>for<sp/>W1,<sp/>and<sp/>group<sp/>transient<sp/>W3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>added,<sp/>make<sp/>it<sp/>transient<sp/>only<sp/>for<sp/>W2,<sp/>not<sp/>for<sp/>W1,<sp/>because<sp/>it&apos;s<sp/>already<sp/>indirectly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transient<sp/>for<sp/>it<sp/>-<sp/>the<sp/>indirect<sp/>transiency<sp/>actually<sp/>shouldn&apos;t<sp/>break<sp/>anything,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>it<sp/>can<sp/>lead<sp/>to<sp/>exponentially<sp/>expensive<sp/>operations<sp/>(#95231)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>this<sp/>is<sp/>pretty<sp/>slow<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it3<sp/>=<sp/>group()-&gt;members().constBegin();<sp/>it3<sp/>!=<sp/>group()-&gt;members().constEnd();<sp/>++it3)<sp/>{</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*it1<sp/>==<sp/>*it2<sp/>||<sp/>*it2<sp/>==<sp/>*it3<sp/>||<sp/>*it1<sp/>==<sp/>*it3)<sp/>{</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it2)-&gt;hasTransient(*it1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(*it3)-&gt;hasTransient(*it1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it2)-&gt;hasTransient(*it3,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it2)-&gt;removeTransientFromList(*it1);</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it3)-&gt;hasTransient(*it2,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it3)-&gt;removeTransientFromList(*it1);</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"></highlight></codeline>
<codeline lineno="2926"><highlight class="normal">xcb_window_t<sp/>X11Window::verifyTransientFor(xcb_window_t<sp/>new_transient_for,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set)</highlight></codeline>
<codeline lineno="2927"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_window_t<sp/>new_property_value<sp/>=<sp/>new_transient_for;</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>splashscreens<sp/>are<sp/>shown<sp/>above<sp/>all<sp/>their<sp/>app&apos;s<sp/>windows,<sp/>even<sp/>though</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>they&apos;re<sp/>in<sp/>Normal<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSplash()<sp/>&amp;&amp;<sp/>new_transient_for<sp/>==<sp/>XCB_WINDOW_NONE)<sp/>{</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_transient_for<sp/>=<sp/>kwinApp()-&gt;x11RootWindow();</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_transient_for<sp/>==<sp/>XCB_WINDOW_NONE)<sp/>{</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>sometimes<sp/>WM_TRANSIENT_FOR<sp/>is<sp/>set<sp/>to<sp/>None,<sp/>instead<sp/>of<sp/>root<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_property_value<sp/>=<sp/>new_transient_for<sp/>=<sp/>kwinApp()-&gt;x11RootWindow();</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>XCB_WINDOW_NONE;</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_transient_for<sp/>==<sp/>window())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>pointing<sp/>to<sp/>self</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>fix<sp/>the<sp/>property<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Client<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>has<sp/>WM_TRANSIENT_FOR<sp/>poiting<sp/>to<sp/>itself.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_property_value<sp/>=<sp/>new_transient_for<sp/>=<sp/>kwinApp()-&gt;x11RootWindow();</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>The<sp/>transient_for<sp/>window<sp/>may<sp/>be<sp/>embedded<sp/>in<sp/>another<sp/>application,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>so<sp/>kwin<sp/>cannot<sp/>see<sp/>it.<sp/>Try<sp/>to<sp/>find<sp/>the<sp/>managed<sp/>client<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>window<sp/>and<sp/>fix<sp/>the<sp/>transient_for<sp/>property<sp/>if<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_window_t<sp/>before_search<sp/>=<sp/>new_transient_for;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(new_transient_for<sp/>!=<sp/>XCB_WINDOW_NONE</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>new_transient_for<sp/>!=<sp/>kwinApp()-&gt;x11RootWindow()</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;findClient(Predicate::WindowMatch,<sp/>new_transient_for))<sp/>{</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xcb::Tree<sp/>tree(new_transient_for);</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tree.isNull())<sp/>{</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_transient_for<sp/>=<sp/>tree-&gt;parent;</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(X11Window<sp/>*new_transient_for_client<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;findClient(Predicate::WindowMatch,<sp/>new_transient_for))<sp/>{</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_transient_for<sp/>!=<sp/>before_search)<sp/>{</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Client<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>has<sp/>WM_TRANSIENT_FOR<sp/>poiting<sp/>to<sp/>non-toplevel<sp/>window<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>before_search<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>child<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>new_transient_for_client<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>adjusting.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_property_value<sp/>=<sp/>new_transient_for;<sp/></highlight><highlight class="comment">//<sp/>also<sp/>fix<sp/>the<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_transient_for<sp/>=<sp/>before_search;<sp/></highlight><highlight class="comment">//<sp/>nice<sp/>try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>group<sp/>transients<sp/>cannot<sp/>cause<sp/>loops,<sp/>because<sp/>they&apos;re<sp/>considered<sp/>transient<sp/>only<sp/>for<sp/>non-transient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>windows<sp/>in<sp/>the<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_window_t<sp/>loop_pos<sp/>=<sp/>new_transient_for;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(loop_pos<sp/>!=<sp/>XCB_WINDOW_NONE<sp/>&amp;&amp;<sp/>loop_pos<sp/>!=<sp/>kwinApp()-&gt;x11RootWindow())<sp/>{</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X11Window<sp/>*pos<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;findClient(Predicate::WindowMatch,<sp/>loop_pos);</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop_pos<sp/>=<sp/>pos-&gt;m_transientForId;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--count<sp/>==<sp/>0<sp/>||<sp/>pos<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Client<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>caused<sp/>WM_TRANSIENT_FOR<sp/>loop.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_transient_for<sp/>=<sp/>kwinApp()-&gt;x11RootWindow();</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_transient_for<sp/>!=<sp/>kwinApp()-&gt;x11RootWindow()</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;findClient(Predicate::WindowMatch,<sp/>new_transient_for)<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>transient<sp/>for<sp/>a<sp/>specific<sp/>window,<sp/>but<sp/>that<sp/>window<sp/>is<sp/>not<sp/>mapped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_transient_for<sp/>=<sp/>kwinApp()-&gt;x11RootWindow();</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_property_value<sp/>!=<sp/>m_originalTransientForId)<sp/>{</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xcb::setTransientFor(window(),<sp/>new_property_value);</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_transient_for;</highlight></codeline>
<codeline lineno="2993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::addTransient(Window<sp/>*cl)</highlight></codeline>
<codeline lineno="2996"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/>Window::addTransient(cl);</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;mostRecentlyActivatedWindow()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>cl-&gt;isModal())<sp/>{</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_active_modal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>new<sp/>window<sp/>has<sp/>been<sp/>mapped.<sp/>Check<sp/>if<sp/>it&apos;s<sp/>not<sp/>a<sp/>mainwindow<sp/>for<sp/>this<sp/>already<sp/>existing<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3004" refid="class_k_win_1_1_x11_window_1a924bca8c6e8fa1e6d3c9bdf0fe3e9979" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a924bca8c6e8fa1e6d3c9bdf0fe3e9979" kindref="member">X11Window::checkTransient</ref>(xcb_window_t<sp/>w)</highlight></codeline>
<codeline lineno="3005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_originalTransientForId<sp/>!=<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>verifyTransientFor(w,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/>setTransient(w);</highlight></codeline>
<codeline lineno="3011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"></highlight></codeline>
<codeline lineno="3013"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>cl<sp/>is<sp/>the<sp/>transient_for<sp/>window<sp/>for<sp/>this<sp/>client,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3014"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>recursively<sp/>the<sp/>transient_for<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3015" refid="class_k_win_1_1_x11_window_1a07961b2f4f6ecf9840d8d748b5cfa120" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a07961b2f4f6ecf9840d8d748b5cfa120" kindref="member">X11Window::hasTransient</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1a1f57b5fc7e5ebf9060435cacce04349d" kindref="member">Window</ref><sp/>*cl,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>indirect)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3016"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*c<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cl))<sp/>{</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>checkGroupTransients()<sp/>uses<sp/>this<sp/>to<sp/>break<sp/>loops,<sp/>so<sp/>hasTransient()<sp/>must<sp/>detect<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;const<sp/>X11Window<sp/>*&gt;<sp/>set;</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hasTransientInternal(c,<sp/>indirect,<sp/>set);</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>X11Window::hasTransientInternal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window" kindref="compound">X11Window</ref><sp/>*cl,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>indirect,<sp/>QList&lt;const<sp/>X11Window<sp/>*&gt;<sp/>&amp;set)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3026"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window" kindref="compound">X11Window</ref><sp/>*t<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_x11_window" kindref="compound">X11Window</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cl-&gt;<ref refid="class_k_win_1_1_window_1a74ba8e8138736add81114a69c064170a" kindref="member">transientFor</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!indirect)<sp/>{</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set.contains(cl))<sp/>{</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set.append(cl);</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hasTransientInternal(t,<sp/>indirect,<sp/>set);</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cl-&gt;<ref refid="class_k_win_1_1_x11_window_1a30e74c044caf63f869473d6b8648f506" kindref="member">isTransient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(group()<sp/>!=<sp/>cl-&gt;<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cl<sp/>is<sp/>group<sp/>transient,<sp/>search<sp/>from<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transients().contains(cl))<sp/>{</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!indirect)<sp/>{</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set.contains(</highlight><highlight class="keyword">this</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/>set.append(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>transients().constBegin();<sp/>it<sp/>!=<sp/>transients().constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X11Window<sp/>*c<sp/>=<sp/>qobject_cast&lt;const<sp/>X11Window<sp/>*&gt;(*it);</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c)<sp/>{</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;hasTransientInternal(cl,<sp/>indirect,<sp/>set))<sp/>{</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"></highlight></codeline>
<codeline lineno="3069" refid="class_k_win_1_1_x11_window_1a0b9273d4b5cbb939568096e8a73db60e" refkind="member"><highlight class="normal">QList&lt;Window<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_x11_window_1a0b9273d4b5cbb939568096e8a73db60e" kindref="member">X11Window::mainWindows</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3070"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1a30e74c044caf63f869473d6b8648f506" kindref="member">isTransient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QList&lt;Window<sp/>*&gt;();</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1a1f57b5fc7e5ebf9060435cacce04349d" kindref="member">Window</ref><sp/>*t<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a74ba8e8138736add81114a69c064170a" kindref="member">transientFor</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QList&lt;Window<sp/>*&gt;{</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_window_1a1f57b5fc7e5ebf9060435cacce04349d" kindref="member">Window</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(t)};</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;Window<sp/>*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>());</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;members().constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;members().constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it)-&gt;hasTransient(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(*it);</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"></highlight><highlight class="comment">//<sp/>X11Window::window_group<sp/>only<sp/>holds<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>hint,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3088"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>it<sp/>should<sp/>be<sp/>used<sp/>only<sp/>to<sp/>find<sp/>the<sp/>group,<sp/>not<sp/>for<sp/>anything<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Argument<sp/>is<sp/>only<sp/>when<sp/>some<sp/>specific<sp/>group<sp/>needs<sp/>to<sp/>be<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3090" refid="class_k_win_1_1_x11_window_1a0db74047dfa4074d7af9aa43971d9270" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a0db74047dfa4074d7af9aa43971d9270" kindref="member">X11Window::checkGroup</ref>(<ref refid="class_k_win_1_1_group" kindref="compound">Group</ref><sp/>*set_group,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force)</highlight></codeline>
<codeline lineno="3091"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_group" kindref="compound">Group</ref><sp/>*old_group<sp/>=<sp/>in_group;</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_group<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_group-&gt;<ref refid="class_k_win_1_1_group_1a134be494af2ad831a0ee744caf9b191a" kindref="member">ref</ref>();<sp/></highlight><highlight class="comment">//<sp/>turn<sp/>off<sp/>automatic<sp/>deleting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set_group<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set_group<sp/>!=<sp/>in_group)<sp/>{</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in_group<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group-&gt;removeMember(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group<sp/>=<sp/>set_group;</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group-&gt;<ref refid="class_k_win_1_1_group_1a94df223d2d8caba49f9d8d84c6f1b510" kindref="member">addMember</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;groupLeader()<sp/>!=<sp/>XCB_WINDOW_NONE)<sp/>{</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_group" kindref="compound">Group</ref><sp/>*new_group<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;findGroup(info-&gt;groupLeader());</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*t<sp/>=<sp/>qobject_cast&lt;X11Window<sp/>*&gt;(<ref refid="class_k_win_1_1_window_1a74ba8e8138736add81114a69c064170a" kindref="member">transientFor</ref>());</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>t-&gt;<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()<sp/>!=<sp/>new_group)<sp/>{</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>the<sp/>window<sp/>to<sp/>the<sp/>right<sp/>group<sp/>(e.g.<sp/>a<sp/>dialog<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>different<sp/>app,<sp/>but<sp/>transient<sp/>for<sp/>this<sp/>one,<sp/>so<sp/>make<sp/>it<sp/>part<sp/>of<sp/>that<sp/>group)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_group<sp/>=<sp/>t-&gt;<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>();</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_group<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>exist<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_group<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_group" kindref="compound">Group</ref>(info-&gt;groupLeader());</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_group<sp/>!=<sp/>in_group)<sp/>{</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in_group<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group-&gt;removeMember(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group<sp/>=<sp/>new_group;</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group-&gt;<ref refid="class_k_win_1_1_group_1a94df223d2d8caba49f9d8d84c6f1b510" kindref="member">addMember</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*t<sp/>=<sp/>qobject_cast&lt;X11Window<sp/>*&gt;(<ref refid="class_k_win_1_1_window_1a74ba8e8138736add81114a69c064170a" kindref="member">transientFor</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>have<sp/>window<sp/>group<sp/>set,<sp/>but<sp/>is<sp/>transient<sp/>for<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>make<sp/>it<sp/>part<sp/>of<sp/>that<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_group" kindref="compound">Group</ref><sp/>*new_group<sp/>=<sp/>t-&gt;group();</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_group<sp/>!=<sp/>in_group)<sp/>{</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in_group<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group-&gt;removeMember(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group<sp/>=<sp/>t-&gt;group();</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group-&gt;addMember(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1afe2f971d0d4593a63edb75220cf48c02" kindref="member">groupTransient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>group<sp/>transient<sp/>which<sp/>actually<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>group<sp/>:(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>creating<sp/>group<sp/>with<sp/>other<sp/>windows<sp/>with<sp/>the<sp/>same<sp/>client<sp/>leader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_group" kindref="compound">Group</ref><sp/>*new_group<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;findClientLeaderGroup(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_group<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_group<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_group" kindref="compound">Group</ref>(XCB_WINDOW_NONE);</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_group<sp/>!=<sp/>in_group)<sp/>{</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in_group<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group-&gt;removeMember(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group<sp/>=<sp/>new_group;</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group-&gt;<ref refid="class_k_win_1_1_group_1a94df223d2d8caba49f9d8d84c6f1b510" kindref="member">addMember</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>transient<sp/>without<sp/>a<sp/>group,<sp/>put<sp/>it<sp/>in<sp/>its<sp/>client<sp/>leader<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>might<sp/>be<sp/>stupid<sp/>if<sp/>grouping<sp/>was<sp/>used<sp/>for<sp/>e.g.<sp/>taskbar<sp/>grouping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>minimizing<sp/>together<sp/>the<sp/>whole<sp/>group,<sp/>but<sp/>as<sp/>long<sp/>as<sp/>it<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>for<sp/>dialogs<sp/>it&apos;s<sp/>better<sp/>to<sp/>keep<sp/>windows<sp/>from<sp/>one<sp/>app<sp/>in<sp/>one<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_group" kindref="compound">Group</ref><sp/>*new_group<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;findClientLeaderGroup(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in_group<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>in_group<sp/>!=<sp/>new_group)<sp/>{</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group-&gt;removeMember(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_group<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_group<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_group" kindref="compound">Group</ref>(XCB_WINDOW_NONE);</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in_group<sp/>!=<sp/>new_group)<sp/>{</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group<sp/>=<sp/>new_group;</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_group-&gt;<ref refid="class_k_win_1_1_group_1a94df223d2d8caba49f9d8d84c6f1b510" kindref="member">addMember</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in_group<sp/>!=<sp/>old_group<sp/>||<sp/>force)<sp/>{</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_window_1afb0480dda58c4c07e6bf7d2100b7b29e" kindref="member">transients</ref>().constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_window_1afb0480dda58c4c07e6bf7d2100b7b29e" kindref="member">transients</ref>().constEnd();)<sp/>{</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*c<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>group<sp/>transients<sp/>in<sp/>the<sp/>old<sp/>group<sp/>are<sp/>no<sp/>longer<sp/>transient<sp/>for<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;groupTransient()<sp/>&amp;&amp;<sp/>c-&gt;group()<sp/>!=<sp/><ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a35e79a166a5640473b24800e1a7e13cd" kindref="member">removeTransientFromList</ref>(c);</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_window_1afb0480dda58c4c07e6bf7d2100b7b29e" kindref="member">transients</ref>().constBegin();<sp/></highlight><highlight class="comment">//<sp/>restart,<sp/>just<sp/>in<sp/>case<sp/>something<sp/>more<sp/>has<sp/>changed<sp/>with<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1afe2f971d0d4593a63edb75220cf48c02" kindref="member">groupTransient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>longer<sp/>transient<sp/>for<sp/>ones<sp/>in<sp/>the<sp/>old<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_group<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>old_group-&gt;<ref refid="class_k_win_1_1_group_1ac5577fc405fdb1dabe92f54ed7fca353" kindref="member">members</ref>().constBegin();<sp/>it<sp/>!=<sp/>old_group-&gt;<ref refid="class_k_win_1_1_group_1ac5577fc405fdb1dabe92f54ed7fca353" kindref="member">members</ref>().constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;removeTransient(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>make<sp/>transient<sp/>for<sp/>all<sp/>in<sp/>the<sp/>new<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;members().constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;members().constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*it<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>means<sp/>the<sp/>window<sp/>is<sp/>only<sp/>transient<sp/>for<sp/>windows<sp/>mapped<sp/>before<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;addTransient(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>group<sp/>transient<sp/>splashscreens<sp/>should<sp/>be<sp/>transient<sp/>even<sp/>for<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>group<sp/>mapped<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;members().constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;members().constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(*it)-&gt;isSplash())<sp/>{</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(*it)-&gt;groupTransient())<sp/>{</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*it<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>||<sp/><ref refid="class_k_win_1_1_x11_window_1a07961b2f4f6ecf9840d8d748b5cfa120" kindref="member">hasTransient</ref>(*it,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>indirect?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addTransient(*it);</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_group<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_group-&gt;<ref refid="class_k_win_1_1_group_1a9bfdae26fd33e28fe43f07d31869fb6f" kindref="member">deref</ref>();<sp/></highlight><highlight class="comment">//<sp/>can<sp/>be<sp/>now<sp/>deleted<sp/>if<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/>checkGroupTransients();</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1aebfddaceb1026381401b70b7984af92f" kindref="member">checkActiveModal</ref>();</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a566fd5756c0cce34ab4f6ac8ba8dd96b" kindref="member">updateLayer</ref>();</highlight></codeline>
<codeline lineno="3213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>used<sp/>by<sp/>Workspace::findClientLeaderGroup()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3216" refid="class_k_win_1_1_x11_window_1ac1310097efa2d4aa74c054248f06e594" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1ac1310097efa2d4aa74c054248f06e594" kindref="member">X11Window::changeClientLeaderGroup</ref>(<ref refid="class_k_win_1_1_group" kindref="compound">Group</ref><sp/>*gr)</highlight></codeline>
<codeline lineno="3217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transientFor()<sp/>!=<sp/>NULL<sp/>are<sp/>in<sp/>the<sp/>group<sp/>of<sp/>their<sp/>mainwindow,<sp/>so<sp/>keep<sp/>them<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a74ba8e8138736add81114a69c064170a" kindref="member">transientFor</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>don&apos;t<sp/>change<sp/>the<sp/>group<sp/>for<sp/>window<sp/>which<sp/>have<sp/>group<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;groupLeader())<sp/>{</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a0db74047dfa4074d7af9aa43971d9270" kindref="member">checkGroup</ref>(gr);<sp/></highlight><highlight class="comment">//<sp/>change<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>X11Window::check_active_modal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight></codeline>
<codeline lineno="3231" refid="class_k_win_1_1_x11_window_1aebfddaceb1026381401b70b7984af92f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1aebfddaceb1026381401b70b7984af92f" kindref="member">X11Window::checkActiveModal</ref>()</highlight></codeline>
<codeline lineno="3232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>active<sp/>window<sp/>got<sp/>new<sp/>modal<sp/>transient,<sp/>activate<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cannot<sp/>be<sp/>done<sp/>in<sp/>AddTransient(),<sp/>because<sp/>there<sp/>may<sp/>temporarily</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exist<sp/>loops,<sp/>breaking<sp/>findModal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*check_modal<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;mostRecentlyActivatedWindow());</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_modal<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>check_modal-&gt;check_active_modal)<sp/>{</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*new_modal<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(check_modal-&gt;<ref refid="class_k_win_1_1_window_1ac49252173ad8460fec752ffb4f74824d" kindref="member">findModal</ref>());</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_modal<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>new_modal<sp/>!=<sp/>check_modal)<sp/>{</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!new_modal-&gt;isManaged())<sp/>{</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>postpone<sp/>check<sp/>until<sp/>end<sp/>of<sp/>manage()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activateWindow(new_modal);</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_modal-&gt;check_active_modal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"></highlight></codeline>
<codeline lineno="3249" refid="class_k_win_1_1_x11_window_1ad86f89d181510912a5d22dd8809232f8" refkind="member"><highlight class="normal">QSizeF<sp/><ref refid="class_k_win_1_1_x11_window_1ad86f89d181510912a5d22dd8809232f8" kindref="member">X11Window::constrainClientSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>&amp;<ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>,<sp/><ref refid="class_k_win_1_1_window_1a96727035a8ba0a709cc464483d1d7b3e" kindref="member">SizeMode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3250"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>w<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>.width();</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>h<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>.height();</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>basesize,<sp/>minsize,<sp/>maxsize,<sp/>paspect<sp/>and<sp/>resizeinc<sp/>have<sp/>all<sp/>values<sp/>defined,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>if<sp/>they&apos;re<sp/>not<sp/>set<sp/>in<sp/>flags<sp/>-<sp/>see<sp/>getWmNormalHints()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/>QSizeF<sp/>min_size<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a789e45e8dda7a6db82df10a93024772a" kindref="member">minSize</ref>();</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/>QSizeF<sp/>max_size<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a3693e777b97ae236b95db854e3257078" kindref="member">maxSize</ref>();</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a85199ff20c051bd2738f150f96875b7f" kindref="member">isDecorated</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSizeF<sp/>decominsize(0,<sp/>0);</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSizeF<sp/>border_size(<ref refid="class_k_win_1_1_window_1a704f2db4a15f2ca4e6ae0b163e73c708" kindref="member">borderLeft</ref>()<sp/>+<sp/><ref refid="class_k_win_1_1_window_1a3309d429b01d3670e9fcf4f54917ce46" kindref="member">borderRight</ref>(),<sp/><ref refid="class_k_win_1_1_window_1a079dfba93240f19cadab52f478e48e84" kindref="member">borderTop</ref>()<sp/>+<sp/><ref refid="class_k_win_1_1_window_1a7b47bcdf2ffd2ba3113725d2ebfaf822" kindref="member">borderBottom</ref>());</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(border_size.width()<sp/>&gt;<sp/>decominsize.width())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>just<sp/>in<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decominsize.setWidth(border_size.width());</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(border_size.height()<sp/>&gt;<sp/>decominsize.height())<sp/>{</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decominsize.setHeight(border_size.height());</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decominsize.width()<sp/>&gt;<sp/>min_size.width())<sp/>{</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_size.setWidth(decominsize.width());</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decominsize.height()<sp/>&gt;<sp/>min_size.height())<sp/>{</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_size.setHeight(decominsize.height());</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>std::min(max_size.width(),<sp/>w);</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>std::min(max_size.height(),<sp/>h);</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>std::max(min_size.width(),<sp/>w);</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>std::max(min_size.height(),<sp/>h);</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkStrictGeometry(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disobey<sp/>increments<sp/>and<sp/>aspect<sp/>by<sp/>explicit<sp/>rule.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QSizeF(w,<sp/>h);</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"></highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>width_inc<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(m_geometryHints.resizeIncrements()).width();</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>height_inc<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(m_geometryHints.resizeIncrements()).height();</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>basew_inc<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(m_geometryHints.baseSize()).width();</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>baseh_inc<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(m_geometryHints.baseSize()).height();</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_geometryHints.hasBaseSize())<sp/>{</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basew_inc<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(m_geometryHints.minSize()).width();</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseh_inc<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(m_geometryHints.minSize()).height();</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>std::floor((w<sp/>-<sp/>basew_inc)<sp/>/<sp/>width_inc)<sp/>*<sp/>width_inc<sp/>+<sp/>basew_inc;</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>std::floor((h<sp/>-<sp/>baseh_inc)<sp/>/<sp/>height_inc)<sp/>*<sp/>height_inc<sp/>+<sp/>baseh_inc;</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>code<sp/>for<sp/>aspect<sp/>ratios<sp/>based<sp/>on<sp/>code<sp/>from<sp/>FVWM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>math<sp/>looks<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="3306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>minAspectX<sp/><sp/><sp/><sp/>dwidth<sp/><sp/><sp/><sp/><sp/>maxAspectX</highlight></codeline>
<codeline lineno="3308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>----------<sp/>&lt;=<sp/>-------<sp/>&lt;=<sp/>----------</highlight></codeline>
<codeline lineno="3309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>minAspectY<sp/><sp/><sp/><sp/>dheight<sp/><sp/><sp/><sp/>maxAspectY</highlight></codeline>
<codeline lineno="3310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>that<sp/>is<sp/>multiplied<sp/>out,<sp/>then<sp/>the<sp/>width<sp/>and<sp/>height<sp/>are</highlight></codeline>
<codeline lineno="3312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>invalid<sp/>in<sp/>the<sp/>following<sp/>situations:</highlight></codeline>
<codeline lineno="3313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>minAspectX<sp/>*<sp/>dheight<sp/>&gt;<sp/>minAspectY<sp/>*<sp/>dwidth</highlight></codeline>
<codeline lineno="3315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>maxAspectX<sp/>*<sp/>dheight<sp/>&lt;<sp/>maxAspectY<sp/>*<sp/>dwidth</highlight></codeline>
<codeline lineno="3316"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3317"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_geometryHints.hasAspect())<sp/>{</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_aspect_w<sp/>=<sp/>m_geometryHints.minAspect().width();<sp/></highlight><highlight class="comment">//<sp/>use<sp/>doubles,<sp/>because<sp/>the<sp/>values<sp/>can<sp/>be<sp/>MAX_INT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_aspect_h<sp/>=<sp/>m_geometryHints.minAspect().height();<sp/></highlight><highlight class="comment">//<sp/>and<sp/>multiplying<sp/>would<sp/>go<sp/>wrong<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_aspect_w<sp/>=<sp/>m_geometryHints.maxAspect().width();</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_aspect_h<sp/>=<sp/>m_geometryHints.maxAspect().height();</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>According<sp/>to<sp/>ICCCM<sp/>4.1.2.3<sp/>PMinSize<sp/>should<sp/>be<sp/>a<sp/>fallback<sp/>for<sp/>PBaseSize<sp/>for<sp/>size<sp/>increments,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>not<sp/>for<sp/>aspect<sp/>ratio.<sp/>Since<sp/>this<sp/>code<sp/>comes<sp/>from<sp/>FVWM,<sp/>handles<sp/>both<sp/>at<sp/>the<sp/>same<sp/>time,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>I<sp/>have<sp/>no<sp/>idea<sp/>how<sp/>it<sp/>works,<sp/>let&apos;s<sp/>hope<sp/>nobody<sp/>relies<sp/>on<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>baseSize<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(m_geometryHints.baseSize());</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>-=<sp/>baseSize.width();</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>-=<sp/>baseSize.height();</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>max_width<sp/>=<sp/>max_size.width()<sp/>-<sp/>baseSize.width();</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>min_width<sp/>=<sp/>min_size.width()<sp/>-<sp/>baseSize.width();</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>max_height<sp/>=<sp/>max_size.height()<sp/>-<sp/>baseSize.height();</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>min_height<sp/>=<sp/>min_size.height()<sp/>-<sp/>baseSize.height();</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASPECT_CHECK_GROW_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3334"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(min_aspect_w<sp/>*<sp/>h<sp/>&gt;<sp/>min_aspect_h<sp/>*<sp/>w)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>delta<sp/>=<sp/>int(min_aspect_w<sp/>*<sp/>h<sp/>/<sp/>min_aspect_h<sp/>-<sp/>w)<sp/>/<sp/>width_inc<sp/>*<sp/>width_inc;<sp/>\</highlight></codeline>
<codeline lineno="3336"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(w<sp/>+<sp/>delta<sp/>&lt;=<sp/>max_width)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3337"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3339"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASPECT_CHECK_SHRINK_H_GROW_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(min_aspect_w<sp/>*<sp/>h<sp/>&gt;<sp/>min_aspect_h<sp/>*<sp/>w)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>delta<sp/>=<sp/>int(h<sp/>-<sp/>w<sp/>*<sp/>min_aspect_h<sp/>/<sp/>min_aspect_w)<sp/>/<sp/>height_inc<sp/>*<sp/>height_inc;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(h<sp/>-<sp/>delta<sp/>&gt;=<sp/>min_height)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3343"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>-=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3344"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3345"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>delta<sp/>=<sp/>int(min_aspect_w<sp/>*<sp/>h<sp/>/<sp/>min_aspect_h<sp/>-<sp/>w)<sp/>/<sp/>width_inc<sp/>*<sp/>width_inc;<sp/>\</highlight></codeline>
<codeline lineno="3346"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(w<sp/>+<sp/>delta<sp/>&lt;=<sp/>max_width)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3347"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3348"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3349"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3350"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASPECT_CHECK_GROW_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3351"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(max_aspect_w<sp/>*<sp/>h<sp/>&lt;<sp/>max_aspect_h<sp/>*<sp/>w)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3352"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>delta<sp/>=<sp/>int(w<sp/>*<sp/>max_aspect_h<sp/>/<sp/>max_aspect_w<sp/>-<sp/>h)<sp/>/<sp/>height_inc<sp/>*<sp/>height_inc;<sp/>\</highlight></codeline>
<codeline lineno="3353"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(h<sp/>+<sp/>delta<sp/>&lt;=<sp/>max_height)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3354"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3355"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASPECT_CHECK_SHRINK_W_GROW_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3357"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(max_aspect_w<sp/>*<sp/>h<sp/>&lt;<sp/>max_aspect_h<sp/>*<sp/>w)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3358"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>delta<sp/>=<sp/>int(w<sp/>-<sp/>max_aspect_w<sp/>*<sp/>h<sp/>/<sp/>max_aspect_h)<sp/>/<sp/>width_inc<sp/>*<sp/>width_inc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3359"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(w<sp/>-<sp/>delta<sp/>&gt;=<sp/>min_width)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3360"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>-=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>delta<sp/>=<sp/>int(w<sp/>*<sp/>max_aspect_h<sp/>/<sp/>max_aspect_w<sp/>-<sp/>h)<sp/>/<sp/>height_inc<sp/>*<sp/>height_inc;<sp/>\</highlight></codeline>
<codeline lineno="3363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(h<sp/>+<sp/>delta<sp/>&lt;=<sp/>max_height)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3365"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="3366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1a96727035a8ba0a709cc464483d1d7b3eac26ddc87899c79d31f6f90bcd11b85ba" kindref="member">SizeModeAny</ref>:</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/></highlight><highlight class="comment">//<sp/>make<sp/>SizeModeAny<sp/>equal<sp/>to<sp/>SizeModeFixedW<sp/>-<sp/>prefer<sp/>keeping<sp/>fixed<sp/>width,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>changing<sp/>aspect<sp/>ratio<sp/>to<sp/>a<sp/>different<sp/>value<sp/>and<sp/>back<sp/>keeps<sp/>the<sp/>same<sp/>size<sp/>(#87298)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1a2b7301be9487da1029cf8280b4b492e8" kindref="member">ASPECT_CHECK_SHRINK_H_GROW_W</ref></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1a8d580471a96fed03fbba48dcc31a1088" kindref="member">ASPECT_CHECK_SHRINK_W_GROW_H</ref></highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1a5dc698de35f4b109415742f2988a9067" kindref="member">ASPECT_CHECK_GROW_H</ref></highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1ad4753f147978949c87828ecd1bd78dc6" kindref="member">ASPECT_CHECK_GROW_W</ref></highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1a96727035a8ba0a709cc464483d1d7b3eaa2888bb87f22c92391588c28ec2a5f18" kindref="member">SizeModeFixedW</ref>:<sp/>{</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>checks<sp/>are<sp/>order<sp/>so<sp/>that<sp/>attempts<sp/>to<sp/>modify<sp/>height<sp/>are<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1a5dc698de35f4b109415742f2988a9067" kindref="member">ASPECT_CHECK_GROW_H</ref></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1a2b7301be9487da1029cf8280b4b492e8" kindref="member">ASPECT_CHECK_SHRINK_H_GROW_W</ref></highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1a8d580471a96fed03fbba48dcc31a1088" kindref="member">ASPECT_CHECK_SHRINK_W_GROW_H</ref></highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1ad4753f147978949c87828ecd1bd78dc6" kindref="member">ASPECT_CHECK_GROW_W</ref></highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1a96727035a8ba0a709cc464483d1d7b3eaac1c9b8c41a4ac9f828a6506ca5c0772" kindref="member">SizeModeFixedH</ref>:<sp/>{</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1ad4753f147978949c87828ecd1bd78dc6" kindref="member">ASPECT_CHECK_GROW_W</ref></highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1a8d580471a96fed03fbba48dcc31a1088" kindref="member">ASPECT_CHECK_SHRINK_W_GROW_H</ref></highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1a2b7301be9487da1029cf8280b4b492e8" kindref="member">ASPECT_CHECK_SHRINK_H_GROW_W</ref></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1a5dc698de35f4b109415742f2988a9067" kindref="member">ASPECT_CHECK_GROW_H</ref></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1a96727035a8ba0a709cc464483d1d7b3ea7e60bdb999d87d3a0596e4e8bfdb415b" kindref="member">SizeModeMax</ref>:<sp/>{</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>checks<sp/>that<sp/>try<sp/>to<sp/>shrink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1a2b7301be9487da1029cf8280b4b492e8" kindref="member">ASPECT_CHECK_SHRINK_H_GROW_W</ref></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1a8d580471a96fed03fbba48dcc31a1088" kindref="member">ASPECT_CHECK_SHRINK_W_GROW_H</ref></highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1ad4753f147978949c87828ecd1bd78dc6" kindref="member">ASPECT_CHECK_GROW_W</ref></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x11window_8cpp_1a5dc698de35f4b109415742f2988a9067" kindref="member">ASPECT_CHECK_GROW_H</ref></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ASPECT_CHECK_SHRINK_H_GROW_W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ASPECT_CHECK_SHRINK_W_GROW_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ASPECT_CHECK_GROW_W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ASPECT_CHECK_GROW_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>+=<sp/>baseSize.width();</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>+=<sp/>baseSize.height();</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QSizeF(w,<sp/>h);</highlight></codeline>
<codeline lineno="3412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"></highlight></codeline>
<codeline lineno="3414"><highlight class="normal">xcb_res_query_client_ids_cookie_t<sp/>X11Window::fetchPid()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3415"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_res_query_client_ids_cookie_t<sp/>cookie{</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sequence<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"></highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xcb::Extensions::self()-&gt;hasRes())<sp/>{</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xcb_res_client_id_spec_t<sp/>spec{</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.client<sp/>=<sp/>m_client,</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mask<sp/>=<sp/>XCB_RES_CLIENT_ID_MASK_LOCAL_CLIENT_PID,</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cookie<sp/>=<sp/>xcb_res_query_client_ids(kwinApp()-&gt;x11Connection(),<sp/>1,<sp/>&amp;spec);</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cookie;</highlight></codeline>
<codeline lineno="3429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"></highlight></codeline>
<codeline lineno="3431"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::readPid(xcb_res_query_client_ids_cookie_t<sp/>cookie)</highlight></codeline>
<codeline lineno="3432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cookie.sequence)<sp/>{</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"></highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>clientIds<sp/>=<sp/>xcb_res_query_client_ids_reply(kwinApp()-&gt;x11Connection(),<sp/>cookie,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_res_client_id_value_iterator_t<sp/>it<sp/>=<sp/>xcb_res_query_client_ids_ids_iterator(clientIds);</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it.rem<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it.data-&gt;spec.mask<sp/>&amp;<sp/>XCB_RES_CLIENT_ID_MASK_LOCAL_CLIENT_PID)<sp/>&amp;&amp;<sp/>xcb_res_client_id_value_value_length(it.data)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pid<sp/>=<sp/>*xcb_res_client_id_value_value(it.data);</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(clientIds);</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"></highlight></codeline>
<codeline lineno="3449"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::getResourceClass()</highlight></codeline>
<codeline lineno="3450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/>setResourceClass(QString::fromLatin1(info-&gt;windowClassName()),<sp/>QString::fromLatin1(info-&gt;windowClassClass()));</highlight></codeline>
<codeline lineno="3452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::getWmNormalHints()</highlight></codeline>
<codeline lineno="3458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isUnmanaged())<sp/>{</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hadFixedAspect<sp/>=<sp/>m_geometryHints.hasAspect();</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>roundtrip<sp/>to<sp/>X<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/>m_geometryHints.fetch();</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/>m_geometryHints.read();</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hadFixedAspect<sp/>&amp;&amp;<sp/>m_geometryHints.hasAspect())<sp/>{</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>align<sp/>to<sp/>eventual<sp/>new<sp/>constraints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maximize(max_mode);</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isManaged())<sp/>{</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>to<sp/>match<sp/>restrictions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSizeF<sp/>new_size<sp/>=<sp/>clientSizeToFrameSize(constrainClientSize(clientSize()));</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_size<sp/>!=<sp/>size()<sp/>&amp;&amp;<sp/>!isFullScreen())<sp/>{</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>origClientGeometry<sp/>=<sp/>m_clientGeometry;</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveResize(resizeWithChecks(moveResizeGeometry(),<sp/>new_size));</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!isSpecialWindow()<sp/>||<sp/>isToolbar())<sp/>&amp;&amp;<sp/>!isFullScreen())<sp/>{</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>keep<sp/>the<sp/>window<sp/>in<sp/>its<sp/>xinerama<sp/>screen<sp/>if<sp/>possible,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>that<sp/>fails<sp/>at<sp/>least<sp/>keep<sp/>it<sp/>visible<sp/>somewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>area<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(MovementArea,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>moveResizeOutput());</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(area.contains(origClientGeometry))<sp/>{</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveResize(keepInArea(moveResizeGeometry(),<sp/>area));</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(WorkArea,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>moveResizeOutput());</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(area.contains(origClientGeometry))<sp/>{</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveResize(keepInArea(moveResizeGeometry(),<sp/>area));</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/>updateAllowedActions();<sp/></highlight><highlight class="comment">//<sp/>affects<sp/>isResizeable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"></highlight></codeline>
<codeline lineno="3494" refid="class_k_win_1_1_x11_window_1a789e45e8dda7a6db82df10a93024772a" refkind="member"><highlight class="normal">QSizeF<sp/><ref refid="class_k_win_1_1_x11_window_1a789e45e8dda7a6db82df10a93024772a" kindref="member">X11Window::minSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3495"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkMinSize(<ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(m_geometryHints.minSize()));</highlight></codeline>
<codeline lineno="3497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"></highlight></codeline>
<codeline lineno="3499" refid="class_k_win_1_1_x11_window_1a3693e777b97ae236b95db854e3257078" refkind="member"><highlight class="normal">QSizeF<sp/><ref refid="class_k_win_1_1_x11_window_1a3693e777b97ae236b95db854e3257078" kindref="member">X11Window::maxSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3500"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkMaxSize(<ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(m_geometryHints.maxSize()));</highlight></codeline>
<codeline lineno="3502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"></highlight></codeline>
<codeline lineno="3504" refid="class_k_win_1_1_x11_window_1ae682c484348a8b95638bcbec7d73c32f" refkind="member"><highlight class="normal">QSizeF<sp/><ref refid="class_k_win_1_1_x11_window_1ae682c484348a8b95638bcbec7d73c32f" kindref="member">X11Window::basicUnit</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3505"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QSize(1,<sp/>1);</highlight></codeline>
<codeline lineno="3507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"></highlight></codeline>
<codeline lineno="3513"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::sendSyntheticConfigureNotify()</highlight></codeline>
<codeline lineno="3514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Every<sp/>X11<sp/>event<sp/>is<sp/>32<sp/>bytes<sp/>(see<sp/>man<sp/>xcb_send_event),<sp/>so<sp/>XCB<sp/>will<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>32<sp/>unconditionally.<sp/>Use<sp/>a<sp/>union<sp/>to<sp/>ensure<sp/>we<sp/>don&apos;t<sp/>disclose<sp/>stack<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_configure_notify_event_t<sp/>event;</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[32];</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>u;</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(u.event)<sp/>&lt;<sp/>32,<sp/></highlight><highlight class="stringliteral">&quot;wouldn&apos;t<sp/>need<sp/>the<sp/>union<sp/>otherwise&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;u,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(u));</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_configure_notify_event_t<sp/>&amp;c<sp/>=<sp/>u.event;</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/>u.event.response_type<sp/>=<sp/>XCB_CONFIGURE_NOTIFY;</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/>u.event.event<sp/>=<sp/>window();</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/>u.event.window<sp/>=<sp/>window();</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/>u.event.x<sp/>=<sp/>m_frame.x()<sp/>+<sp/>m_wrapper.x()<sp/>+<sp/>m_client.x();</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/>u.event.y<sp/>=<sp/>m_frame.y()<sp/>+<sp/>m_wrapper.y()<sp/>+<sp/>m_client.y();</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/>u.event.width<sp/>=<sp/>m_client.width();</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/>u.event.height<sp/>=<sp/>m_client.height();</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/>u.event.border_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/>u.event.above_sibling<sp/>=<sp/>XCB_WINDOW_NONE;</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/>u.event.override_redirect<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_send_event(kwinApp()-&gt;x11Connection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>c.event,<sp/>XCB_EVENT_MASK_STRUCTURE_NOTIFY,<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;u));</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_flush(kwinApp()-&gt;x11Connection());</highlight></codeline>
<codeline lineno="3536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::handleXwaylandScaleChanged()</highlight></codeline>
<codeline lineno="3539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>while<sp/>KWin<sp/>implicitly<sp/>considers<sp/>the<sp/>window<sp/>already<sp/>resized<sp/>when<sp/>the<sp/>scale<sp/>changes,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>needed<sp/>to<sp/>make<sp/>Xwayland<sp/>actually<sp/>resize<sp/>it<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/>resize(moveResizeGeometry().size());</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/>getWmOpaqueRegion();</highlight></codeline>
<codeline lineno="3544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"></highlight></codeline>
<codeline lineno="3546"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::handleCommitted()</highlight></codeline>
<codeline lineno="3547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surface()-&gt;isMapped())<sp/>{</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_syncRequest.acked)<sp/>{</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finishSync();</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"></highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_syncRequest.enabled)<sp/>{</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setReadyForPainting();</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"></highlight></codeline>
<codeline lineno="3559"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::setAllowCommits(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow)</highlight></codeline>
<codeline lineno="3560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>disabled<sp/>=<sp/>qEnvironmentVariableIntValue(</highlight><highlight class="stringliteral">&quot;KWIN_NO_XWAYLAND_ALLOW_COMMITS&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disabled)<sp/>{</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>value<sp/>=<sp/>allow;</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_change_property(kwinApp()-&gt;x11Connection(),<sp/>XCB_PROP_MODE_REPLACE,<sp/>frameId(),</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;<ref refid="class_k_win_1_1_atoms_1a4fdd5e93ec6354ffb6d70ecd513505eb" kindref="member">xwayland_allow_commits</ref>,<sp/>XCB_ATOM_CARDINAL,<sp/>32,<sp/>1,<sp/>&amp;value);</highlight></codeline>
<codeline lineno="3569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"></highlight></codeline>
<codeline lineno="3571" refid="class_k_win_1_1_x11_window_1ae020484bc7335a2691fd19eac6a1056c" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_x11_window_1ae020484bc7335a2691fd19eac6a1056c" kindref="member">X11Window::gravityAdjustment</ref>(xcb_gravity_t<sp/><ref refid="class_k_win_1_1_window_1abb26f86fb723e81f43e0a27e8ffa0aa8" kindref="member">gravity</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3572"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>dx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>dy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"></highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dx,<sp/>dy<sp/>specify<sp/>how<sp/>the<sp/>client<sp/>window<sp/>moves<sp/>to<sp/>make<sp/>space<sp/>for<sp/>the<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>general<sp/>we<sp/>have<sp/>to<sp/>compute<sp/>the<sp/>reference<sp/>point<sp/>and<sp/>from<sp/>that<sp/>figure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out<sp/>how<sp/>much<sp/>we<sp/>need<sp/>to<sp/>shift<sp/>the<sp/>client,<sp/>however<sp/>given<sp/>that<sp/>we<sp/>ignore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>border<sp/>width<sp/>attribute<sp/>and<sp/>the<sp/>extents<sp/>of<sp/>the<sp/>server-side<sp/>decoration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>known<sp/>in<sp/>advance,<sp/>we<sp/>can<sp/>simplify<sp/>the<sp/>math<sp/>quite<sp/>a<sp/>bit<sp/>and<sp/>express</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>required<sp/>window<sp/>gravity<sp/>adjustment<sp/>in<sp/>terms<sp/>of<sp/>border<sp/>sizes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1abb26f86fb723e81f43e0a27e8ffa0aa8" kindref="member">gravity</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_NORTH_WEST:<sp/></highlight><highlight class="comment">//<sp/>move<sp/>down<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a704f2db4a15f2ca4e6ae0b163e73c708" kindref="member">borderLeft</ref>());</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a079dfba93240f19cadab52f478e48e84" kindref="member">borderTop</ref>());</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_NORTH:<sp/></highlight><highlight class="comment">//<sp/>move<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a079dfba93240f19cadab52f478e48e84" kindref="member">borderTop</ref>());</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_NORTH_EAST:<sp/></highlight><highlight class="comment">//<sp/>move<sp/>down<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>-<ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a3309d429b01d3670e9fcf4f54917ce46" kindref="member">borderRight</ref>());</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a079dfba93240f19cadab52f478e48e84" kindref="member">borderTop</ref>());</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_WEST:<sp/></highlight><highlight class="comment">//<sp/>move<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a704f2db4a15f2ca4e6ae0b163e73c708" kindref="member">borderLeft</ref>();</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_CENTER:</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(<ref refid="class_k_win_1_1_window_1a704f2db4a15f2ca4e6ae0b163e73c708" kindref="member">borderLeft</ref>()))<sp/>-<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(<ref refid="class_k_win_1_1_window_1a3309d429b01d3670e9fcf4f54917ce46" kindref="member">borderRight</ref>())))<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(<ref refid="class_k_win_1_1_window_1a079dfba93240f19cadab52f478e48e84" kindref="member">borderTop</ref>()))<sp/>-<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(<ref refid="class_k_win_1_1_window_1a7b47bcdf2ffd2ba3113725d2ebfaf822" kindref="member">borderBottom</ref>())))<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_STATIC:<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_EAST:<sp/></highlight><highlight class="comment">//<sp/>move<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>-<ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a3309d429b01d3670e9fcf4f54917ce46" kindref="member">borderRight</ref>());</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_SOUTH_WEST:<sp/></highlight><highlight class="comment">//<sp/>move<sp/>up<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a704f2db4a15f2ca4e6ae0b163e73c708" kindref="member">borderLeft</ref>());</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>-<ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a7b47bcdf2ffd2ba3113725d2ebfaf822" kindref="member">borderBottom</ref>());</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_SOUTH:<sp/></highlight><highlight class="comment">//<sp/>move<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>-<ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a7b47bcdf2ffd2ba3113725d2ebfaf822" kindref="member">borderBottom</ref>());</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_SOUTH_EAST:<sp/></highlight><highlight class="comment">//<sp/>move<sp/>up<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>-<ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a3309d429b01d3670e9fcf4f54917ce46" kindref="member">borderRight</ref>());</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>-<ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a7b47bcdf2ffd2ba3113725d2ebfaf822" kindref="member">borderBottom</ref>());</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"></highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(dx,<sp/>dy);</highlight></codeline>
<codeline lineno="3627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"></highlight></codeline>
<codeline lineno="3629" refid="class_k_win_1_1_x11_window_1aaa1eee010ef24eb77cb4dc7f015ed9a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/><ref refid="class_k_win_1_1_x11_window_1aaa1eee010ef24eb77cb4dc7f015ed9a6" kindref="member">X11Window::calculateGravitation</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invert)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3630"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>adjustment<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1ae020484bc7335a2691fd19eac6a1056c" kindref="member">gravityAdjustment</ref>(m_geometryHints.windowGravity());</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>translate<sp/>from<sp/>client<sp/>movement<sp/>to<sp/>frame<sp/>movement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>dx<sp/>=<sp/>adjustment.x()<sp/>-<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a704f2db4a15f2ca4e6ae0b163e73c708" kindref="member">borderLeft</ref>());</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>dy<sp/>=<sp/>adjustment.y()<sp/>-<sp/><ref refid="namespace_k_win_1_1_xcb_1a55df0d770f71a743b614c6a3173567a5" kindref="member">Xcb::nativeRound</ref>(<ref refid="class_k_win_1_1_window_1a079dfba93240f19cadab52f478e48e84" kindref="member">borderTop</ref>());</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!invert)<sp/>{</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(<ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref>()<sp/>+<sp/>dx,<sp/><ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref>()<sp/>+<sp/>dy);</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(<ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref>()<sp/>-<sp/>dx,<sp/><ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref>()<sp/>-<sp/>dy);</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"></highlight></codeline>
<codeline lineno="3644"><highlight class="normal"></highlight><highlight class="comment">//<sp/>co-ordinate<sp/>are<sp/>in<sp/>kwin<sp/>logical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3645"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::configureRequest(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_mask,<sp/>qreal<sp/>rx,<sp/>qreal<sp/>ry,<sp/>qreal<sp/>rw,<sp/>qreal<sp/>rh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gravity,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>from_tool)</highlight></codeline>
<codeline lineno="3646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>configurePositionMask<sp/>=<sp/>XCB_CONFIG_WINDOW_X<sp/>|<sp/>XCB_CONFIG_WINDOW_Y;</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>configureSizeMask<sp/>=<sp/>XCB_CONFIG_WINDOW_WIDTH<sp/>|<sp/>XCB_CONFIG_WINDOW_HEIGHT;</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>configureGeometryMask<sp/>=<sp/>configurePositionMask<sp/>|<sp/>configureSizeMask;</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"></highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;maximized&quot;<sp/>is<sp/>a<sp/>user<sp/>setting<sp/>-&gt;<sp/>we<sp/>do<sp/>not<sp/>allow<sp/>the<sp/>client<sp/>to<sp/>resize<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>away<sp/>from<sp/>this<sp/>&amp;<sp/>against<sp/>the<sp/>users<sp/>explicit<sp/>wish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bool(value_mask<sp/>&amp;<sp/>configureGeometryMask)<sp/>&lt;&lt;<sp/>bool(requestedMaximizeMode()<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeVertical</ref>)<sp/>&lt;&lt;<sp/>bool(requestedMaximizeMode()<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeHorizontal</ref>);</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"></highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>want<sp/>to<sp/>(partially)<sp/>ignore<sp/>the<sp/>request<sp/>when<sp/>the<sp/>window<sp/>is<sp/>somehow<sp/>maximized<sp/>or<sp/>quicktiled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignore<sp/>=<sp/>!app_noborder<sp/>&amp;&amp;<sp/>(requestedQuickTileMode()<sp/>!=<sp/>QuickTileMode(<ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa6adf97f83acf6453d4a6a4b1070f3754" kindref="member">QuickTileFlag::None</ref>)<sp/>||<sp/>requestedMaximizeMode()<sp/>!=<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a53d04d48a6022c3cdf27d735a3b1de29" kindref="member">MaximizeRestore</ref>);</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>however,<sp/>the<sp/>user<sp/>shall<sp/>be<sp/>able<sp/>to<sp/>force<sp/>obedience<sp/>despite<sp/>and<sp/>also<sp/>disobedience<sp/>in<sp/>general</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/>ignore<sp/>=<sp/>rules()-&gt;checkIgnoreGeometry(ignore);</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ignore)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>either<sp/>we&apos;re<sp/>not<sp/>max&apos;d<sp/>/<sp/>q&apos;tiled<sp/>or<sp/>the<sp/>user<sp/>allowed<sp/>the<sp/>client<sp/>to<sp/>break<sp/>that<sp/>-<sp/>so<sp/>break<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exitQuickTileMode();</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!app_noborder<sp/>&amp;&amp;<sp/>requestedQuickTileMode()<sp/>==<sp/>QuickTileMode(QuickTileFlag::None)<sp/>&amp;&amp;<sp/>(requestedMaximizeMode()<sp/>==<sp/>MaximizeVertical<sp/>||<sp/>requestedMaximizeMode()<sp/>==<sp/>MaximizeHorizontal))<sp/>{</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignoring<sp/>can<sp/>be,<sp/>because<sp/>either<sp/>we<sp/>do,<sp/>or<sp/>the<sp/>user<sp/>does<sp/>explicitly<sp/>not<sp/>want<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>partially<sp/>maximized<sp/>windows<sp/>we<sp/>want<sp/>to<sp/>allow<sp/>configures<sp/>in<sp/>the<sp/>other<sp/>dimension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we&apos;ve<sp/>to<sp/>ask<sp/>the<sp/>user<sp/>again<sp/>-<sp/>to<sp/>know<sp/>whether<sp/>we<sp/>just<sp/>ignored<sp/>for<sp/>the<sp/>partial<sp/>maximization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>problem<sp/>here<sp/>is,<sp/>that<sp/>the<sp/>user<sp/>can<sp/>explicitly<sp/>permit<sp/>configure<sp/>requests<sp/>-<sp/>even<sp/>for<sp/>maximized<sp/>windows!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>cannot<sp/>distinguish<sp/>that<sp/>from<sp/>passing<sp/>&quot;false&quot;<sp/>for<sp/>partially<sp/>maximized<sp/>windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ignore<sp/>=<sp/>rules()-&gt;checkIgnoreGeometry(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ignore)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>user<sp/>is<sp/>not<sp/>interested,<sp/>so<sp/>we<sp/>fix<sp/>up<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(requestedMaximizeMode()<sp/>==<sp/>MaximizeVertical)<sp/>{</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_mask<sp/>&amp;=<sp/>~(XCB_CONFIG_WINDOW_Y<sp/>|<sp/>XCB_CONFIG_WINDOW_HEIGHT);</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(requestedMaximizeMode()<sp/>==<sp/>MaximizeHorizontal)<sp/>{</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_mask<sp/>&amp;=<sp/>~(XCB_CONFIG_WINDOW_X<sp/>|<sp/>XCB_CONFIG_WINDOW_WIDTH);</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(value_mask<sp/>&amp;<sp/>configureGeometryMask))<sp/>{</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ignore<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>modification<sp/>turned<sp/>the<sp/>request<sp/>void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"></highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ignore)<sp/>{</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DENIED&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>(left)<sp/>to<sp/>do<sp/>for<sp/>use<sp/>-<sp/>bugs<sp/>#158974,<sp/>#252314,<sp/>#321491</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"></highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PERMITTED&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bool(value_mask<sp/>&amp;<sp/>configureGeometryMask);</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gravity<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>default<sp/>(nonsense)<sp/>value<sp/>for<sp/>the<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gravity<sp/>=<sp/>m_geometryHints.windowGravity();</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_mask<sp/>&amp;<sp/>configurePositionMask)<sp/>{</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPointF<sp/>new_pos<sp/>=<sp/>framePosToClientPos(pos());</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_pos<sp/>-=<sp/>gravityAdjustment(xcb_gravity_t(gravity));</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_mask<sp/>&amp;<sp/>XCB_CONFIG_WINDOW_X)<sp/>{</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_pos.setX(rx);</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_mask<sp/>&amp;<sp/>XCB_CONFIG_WINDOW_Y)<sp/>{</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_pos.setY(ry);</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_pos<sp/>+=<sp/>gravityAdjustment(xcb_gravity_t(gravity));</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_pos<sp/>=<sp/>clientPosToFramePos(new_pos);</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"></highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>nw<sp/>=<sp/>clientSize().width();</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>nh<sp/>=<sp/>clientSize().height();</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_mask<sp/>&amp;<sp/>XCB_CONFIG_WINDOW_WIDTH)<sp/>{</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nw<sp/>=<sp/>rw;</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_mask<sp/>&amp;<sp/>XCB_CONFIG_WINDOW_HEIGHT)<sp/>{</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nh<sp/>=<sp/>rh;</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>requestedClientSize<sp/>=<sp/>constrainClientSize(QSizeF(nw,<sp/>nh));</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSizeF<sp/>requestedFrameSize<sp/>=<sp/>clientSizeToFrameSize(requestedClientSize);</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedFrameSize<sp/>=<sp/>rules()-&gt;checkSize(requestedFrameSize);</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_pos<sp/>=<sp/>rules()-&gt;checkPosition(new_pos);</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output<sp/>*newOutput<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1acaee43b5ca7a189e5f84b6361da672c3" kindref="member">outputAt</ref>(QRectF(new_pos,<sp/>requestedFrameSize).center());</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newOutput<sp/>!=<sp/>rules()-&gt;checkOutput(newOutput))<sp/>{</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>allowed<sp/>by<sp/>rule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>geometry<sp/>=<sp/>QRectF(new_pos,<sp/>requestedFrameSize);</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>area<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(WorkArea,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>geometry.center());</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from_tool<sp/>&amp;&amp;<sp/>(!isSpecialWindow()<sp/>||<sp/>isToolbar())<sp/>&amp;&amp;<sp/>!isFullScreen()<sp/>&amp;&amp;<sp/>area.contains(clientGeometry()))<sp/>{</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry<sp/>=<sp/>keepInArea(geometry,<sp/>area);</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveResize(geometry);</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"></highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>part<sp/>of<sp/>the<sp/>kicker-xinerama-hack...<sp/>it<sp/>should<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>safe<sp/>to<sp/>remove<sp/>when<sp/>kicker<sp/>gets<sp/>proper<sp/>ExtendedStrut<sp/>support;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>Workspace::rearrange()<sp/>and<sp/>X11Window::adjustedClientArea()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasStrut())<sp/>{</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a2f699b6a656b4136992bc050b8470fed" kindref="member">rearrange</ref>();</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_mask<sp/>&amp;<sp/>configureSizeMask<sp/>&amp;&amp;<sp/>!(value_mask<sp/>&amp;<sp/>configurePositionMask))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>pure<sp/>resize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>nw<sp/>=<sp/>clientSize().width();</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>nh<sp/>=<sp/>clientSize().height();</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_mask<sp/>&amp;<sp/>XCB_CONFIG_WINDOW_WIDTH)<sp/>{</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nw<sp/>=<sp/>rw;</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_mask<sp/>&amp;<sp/>XCB_CONFIG_WINDOW_HEIGHT)<sp/>{</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nh<sp/>=<sp/>rh;</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>requestedClientSize<sp/>=<sp/>constrainClientSize(QSizeF(nw,<sp/>nh));</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>requestedFrameSize<sp/>=<sp/>rules()-&gt;checkSize(clientSizeToFrameSize(requestedClientSize));</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(requestedFrameSize<sp/>!=<sp/>size())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>restore<sp/>if<sp/>some<sp/>app<sp/>sets<sp/>its<sp/>own<sp/>size<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>geometry<sp/>=<sp/>resizeWithChecks(moveResizeGeometry(),<sp/>requestedFrameSize,<sp/>xcb_gravity_t(gravity));</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from_tool<sp/>&amp;&amp;<sp/>(!isSpecialWindow()<sp/>||<sp/>isToolbar())<sp/>&amp;&amp;<sp/>!isFullScreen())<sp/>{</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>keep<sp/>the<sp/>window<sp/>in<sp/>its<sp/>xinerama<sp/>screen<sp/>if<sp/>possible,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>that<sp/>fails<sp/>at<sp/>least<sp/>keep<sp/>it<sp/>visible<sp/>somewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>area<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(MovementArea,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>geometry.center());</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(area.contains(clientGeometry()))<sp/>{</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry<sp/>=<sp/>keepInArea(geometry,<sp/>area);</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(WorkArea,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>geometry.center());</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(area.contains(clientGeometry()))<sp/>{</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry<sp/>=<sp/>keepInArea(geometry,<sp/>area);</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveResize(geometry);</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>need<sp/>to<sp/>send<sp/>synthetic<sp/>configure<sp/>notify<sp/>event<sp/>here,<sp/>either<sp/>it&apos;s<sp/>sent<sp/>together</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>geometry<sp/>change,<sp/>or<sp/>there&apos;s<sp/>no<sp/>need<sp/>to<sp/>send<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handling<sp/>of<sp/>the<sp/>real<sp/>ConfigureRequest<sp/>event<sp/>forces<sp/>sending<sp/>it,<sp/>as<sp/>there<sp/>it&apos;s<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"></highlight></codeline>
<codeline lineno="3772" refid="class_k_win_1_1_x11_window_1a5871fc2a918eb9a92cd610d4a7aa454e" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_x11_window_1a6c03fc2e4e471167af05d58866f4ab23" kindref="member">X11Window::resizeWithChecks</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;geometry,<sp/>qreal<sp/>w,<sp/>qreal<sp/>h,<sp/>xcb_gravity_t<sp/><ref refid="class_k_win_1_1_window_1abb26f86fb723e81f43e0a27e8ffa0aa8" kindref="member">gravity</ref>)</highlight></codeline>
<codeline lineno="3773"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!shade_geometry_change);</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3dfd89167d57f28ebedf72ffddd33191" kindref="member">isShade</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="class_k_win_1_1_window_1a079dfba93240f19cadab52f478e48e84" kindref="member">borderTop</ref>()<sp/>+<sp/><ref refid="class_k_win_1_1_window_1a7b47bcdf2ffd2ba3113725d2ebfaf822" kindref="member">borderBottom</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Shaded<sp/>geometry<sp/>passed<sp/>for<sp/>size:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>newx<sp/>=<sp/>geometry.x();</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>newy<sp/>=<sp/>geometry.y();</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>area<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;clientArea(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22af0d9b81a7df9288de5507e7eb1651297" kindref="member">WorkArea</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>geometry.center());</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>growing<sp/>larger<sp/>than<sp/>workarea</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&gt;<sp/>area.width())<sp/>{</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>area.width();</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>&gt;<sp/>area.height())<sp/>{</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>area.height();</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/>QSizeF<sp/>tmp<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aba7fd5b92a9da565aecf8ae559f4af69" kindref="member">constrainFrameSize</ref>(QSizeF(w,<sp/>h));<sp/></highlight><highlight class="comment">//<sp/>checks<sp/>size<sp/>constraints,<sp/>including<sp/>min/max<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>tmp.width();</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>tmp.height();</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1abb26f86fb723e81f43e0a27e8ffa0aa8" kindref="member">gravity</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1abb26f86fb723e81f43e0a27e8ffa0aa8" kindref="member">gravity</ref><sp/>=<sp/>m_geometryHints.windowGravity();</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1abb26f86fb723e81f43e0a27e8ffa0aa8" kindref="member">gravity</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_NORTH_WEST:<sp/></highlight><highlight class="comment">//<sp/>top<sp/>left<sp/>corner<sp/>doesn&apos;t<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_NORTH:<sp/></highlight><highlight class="comment">//<sp/>middle<sp/>of<sp/>top<sp/>border<sp/>doesn&apos;t<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newx<sp/>=<sp/>(newx<sp/>+<sp/>geometry.width()<sp/>/<sp/>2)<sp/>-<sp/>(w<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_NORTH_EAST:<sp/></highlight><highlight class="comment">//<sp/>top<sp/>right<sp/>corner<sp/>doesn&apos;t<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newx<sp/>=<sp/>newx<sp/>+<sp/>geometry.width()<sp/>-<sp/>w;</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_WEST:<sp/></highlight><highlight class="comment">//<sp/>middle<sp/>of<sp/>left<sp/>border<sp/>doesn&apos;t<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newy<sp/>=<sp/>(newy<sp/>+<sp/>geometry.height()<sp/>/<sp/>2)<sp/>-<sp/>(h<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_CENTER:<sp/></highlight><highlight class="comment">//<sp/>middle<sp/>point<sp/>doesn&apos;t<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newx<sp/>=<sp/>(newx<sp/>+<sp/>geometry.width()<sp/>/<sp/>2)<sp/>-<sp/>(w<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newy<sp/>=<sp/>(newy<sp/>+<sp/>geometry.height()<sp/>/<sp/>2)<sp/>-<sp/>(h<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_STATIC:<sp/></highlight><highlight class="comment">//<sp/>top<sp/>left<sp/>corner<sp/>of<sp/>_client_<sp/>window<sp/>doesn&apos;t<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>decoration<sp/>doesn&apos;t<sp/>change,<sp/>equal<sp/>to<sp/>NorthWestGravity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_EAST:<sp/></highlight><highlight class="comment">//<sp/>//<sp/>middle<sp/>of<sp/>right<sp/>border<sp/>doesn&apos;t<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newx<sp/>=<sp/>newx<sp/>+<sp/>geometry.width()<sp/>-<sp/>w;</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newy<sp/>=<sp/>(newy<sp/>+<sp/>geometry.height()<sp/>/<sp/>2)<sp/>-<sp/>(h<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_SOUTH_WEST:<sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>left<sp/>corner<sp/>doesn&apos;t<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newy<sp/>=<sp/>newy<sp/>+<sp/>geometry.height()<sp/>-<sp/>h;</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_SOUTH:<sp/></highlight><highlight class="comment">//<sp/>middle<sp/>of<sp/>bottom<sp/>border<sp/>doesn&apos;t<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newx<sp/>=<sp/>(newx<sp/>+<sp/>geometry.width()<sp/>/<sp/>2)<sp/>-<sp/>(w<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newy<sp/>=<sp/>newy<sp/>+<sp/>geometry.height()<sp/>-<sp/>h;</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XCB_GRAVITY_SOUTH_EAST:<sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>right<sp/>corner<sp/>doesn&apos;t<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newx<sp/>=<sp/>newx<sp/>+<sp/>geometry.width()<sp/>-<sp/>w;</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newy<sp/>=<sp/>newy<sp/>+<sp/>geometry.height()<sp/>-<sp/>h;</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRectF{newx,<sp/>newy,<sp/>w,<sp/>h};</highlight></codeline>
<codeline lineno="3833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"></highlight></codeline>
<codeline lineno="3835"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_NET_MOVERESIZE_WINDOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3836"><highlight class="normal"></highlight><highlight class="comment">//<sp/>note<sp/>co-ordinates<sp/>are<sp/>kwin<sp/>logical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3837" refid="class_k_win_1_1_x11_window_1a0a3956dd63bae633d3c5ae43d719f536" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a0a3956dd63bae633d3c5ae43d719f536" kindref="member">X11Window::NETMoveResizeWindow</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/>qreal<sp/><ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref>,<sp/>qreal<sp/><ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref>,<sp/>qreal<sp/><ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>,<sp/>qreal<sp/><ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>)</highlight></codeline>
<codeline lineno="3838"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1abb26f86fb723e81f43e0a27e8ffa0aa8" kindref="member">gravity</ref><sp/>=<sp/>flags<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>8))<sp/>{</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_mask<sp/>|=<sp/>XCB_CONFIG_WINDOW_X;</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>9))<sp/>{</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_mask<sp/>|=<sp/>XCB_CONFIG_WINDOW_Y;</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>10))<sp/>{</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_mask<sp/>|=<sp/>XCB_CONFIG_WINDOW_WIDTH;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>11))<sp/>{</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_mask<sp/>|=<sp/>XCB_CONFIG_WINDOW_HEIGHT;</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/>configureRequest(value_mask,<sp/><ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref>,<sp/><ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref>,<sp/><ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>,<sp/><ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>,<sp/><ref refid="class_k_win_1_1_window_1abb26f86fb723e81f43e0a27e8ffa0aa8" kindref="member">gravity</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"></highlight></codeline>
<codeline lineno="3856"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_GTK_SHOW_WINDOW_MENU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3857" refid="class_k_win_1_1_x11_window_1a21869cb8fb78f45c4f64286c98af4ed3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a21869cb8fb78f45c4f64286c98af4ed3" kindref="member">X11Window::GTKShowWindowMenu</ref>(qreal<sp/>x_root,<sp/>qreal<sp/>y_root)</highlight></codeline>
<codeline lineno="3858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/>QPoint<sp/>globalPos(x_root,<sp/>y_root);</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;showWindowMenu(QRect(globalPos,<sp/>globalPos),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"></highlight></codeline>
<codeline lineno="3863" refid="class_k_win_1_1_x11_window_1af6f8e4a552926fe7968147d02b5ba732" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1af6f8e4a552926fe7968147d02b5ba732" kindref="member">X11Window::isMovable</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3864"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">isUnmanaged</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1ad81dd123f5387c0508abbb1464f808ee" kindref="member">hasNETSupport</ref>()<sp/>&amp;&amp;<sp/>!m_motif.move())<sp/>{</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1ae5b462a986c3efa84fa3c566cc9b985e" kindref="member">isFullScreen</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a26bdcce1a00f8b7a1c1401b5bf132874" kindref="member">isSpecialWindow</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_window_1aa0179fdd1c6fee664b5401f61f35e493" kindref="member">isSplash</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_window_1a5fa248e56c9434f4d7002528b360a092" kindref="member">isToolbar</ref>())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>allow<sp/>moving<sp/>of<sp/>splashscreens<sp/>:)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkPosition(<ref refid="namespace_k_win_1a4a39ecf55d45321f21eedbcd045c2206" kindref="member">invalidPoint</ref>)<sp/>!=<sp/><ref refid="namespace_k_win_1a4a39ecf55d45321f21eedbcd045c2206" kindref="member">invalidPoint</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>forced<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;interactiveWindowMoveEnabled())<sp/>{</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"></highlight></codeline>
<codeline lineno="3886" refid="class_k_win_1_1_x11_window_1a01dc71b0fcf03387727e17aa70fbed15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a01dc71b0fcf03387727e17aa70fbed15" kindref="member">X11Window::isMovableAcrossScreens</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3887"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">isUnmanaged</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1ad81dd123f5387c0508abbb1464f808ee" kindref="member">hasNETSupport</ref>()<sp/>&amp;&amp;<sp/>!m_motif.move())<sp/>{</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a26bdcce1a00f8b7a1c1401b5bf132874" kindref="member">isSpecialWindow</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_window_1aa0179fdd1c6fee664b5401f61f35e493" kindref="member">isSplash</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_window_1a5fa248e56c9434f4d7002528b360a092" kindref="member">isToolbar</ref>())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>allow<sp/>moving<sp/>of<sp/>splashscreens<sp/>:)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkPosition(<ref refid="namespace_k_win_1a4a39ecf55d45321f21eedbcd045c2206" kindref="member">invalidPoint</ref>)<sp/>!=<sp/><ref refid="namespace_k_win_1a4a39ecf55d45321f21eedbcd045c2206" kindref="member">invalidPoint</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>forced<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;interactiveWindowMoveEnabled())<sp/>{</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3904"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"></highlight></codeline>
<codeline lineno="3906" refid="class_k_win_1_1_x11_window_1ad26ea1c81f61a38f6652edc5212f32e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1ad26ea1c81f61a38f6652edc5212f32e5" kindref="member">X11Window::isResizable</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3907"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">isUnmanaged</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1ad81dd123f5387c0508abbb1464f808ee" kindref="member">hasNETSupport</ref>()<sp/>&amp;&amp;<sp/>!m_motif.resize())<sp/>{</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1ae5b462a986c3efa84fa3c566cc9b985e" kindref="member">isFullScreen</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a26bdcce1a00f8b7a1c1401b5bf132874" kindref="member">isSpecialWindow</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_window_1a37f5a22919d5ee6f6404ce789c0a71f7" kindref="member">isAppletPopup</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkSize(QSize()).isValid())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>forced<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a09aef7c112a8b0cdfb6e27a081d50dc8" kindref="member">Gravity</ref><sp/><ref refid="class_k_win_1_1_window_1abb26f86fb723e81f43e0a27e8ffa0aa8" kindref="member">gravity</ref><sp/>=<sp/><ref refid="class_k_win_1_1_window_1aeb3ff3e9e2c5fe0b4816948a52cb58a6" kindref="member">interactiveMoveResizeGravity</ref>();</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_k_win_1_1_window_1abb26f86fb723e81f43e0a27e8ffa0aa8" kindref="member">gravity</ref><sp/>==<sp/><ref refid="namespace_k_win_1a09aef7c112a8b0cdfb6e27a081d50dc8aa4ffdcf0dc1f31b9acaf295d75b51d00" kindref="member">Gravity::Top</ref><sp/>||<sp/><ref refid="class_k_win_1_1_window_1abb26f86fb723e81f43e0a27e8ffa0aa8" kindref="member">gravity</ref><sp/>==<sp/><ref refid="namespace_k_win_1a09aef7c112a8b0cdfb6e27a081d50dc8ab32beb056fbfe36afbabc6c88c81ab36" kindref="member">Gravity::TopLeft</ref><sp/>||<sp/><ref refid="class_k_win_1_1_window_1abb26f86fb723e81f43e0a27e8ffa0aa8" kindref="member">gravity</ref><sp/>==<sp/><ref refid="namespace_k_win_1a09aef7c112a8b0cdfb6e27a081d50dc8a1d85a557894c340c318493f33bfa8efb" kindref="member">Gravity::TopRight</ref><sp/>||<sp/><ref refid="class_k_win_1_1_window_1abb26f86fb723e81f43e0a27e8ffa0aa8" kindref="member">gravity</ref><sp/>==<sp/><ref refid="namespace_k_win_1a09aef7c112a8b0cdfb6e27a081d50dc8a945d5e233cf7d6240f6b783b36a374ff" kindref="member">Gravity::Left</ref><sp/>||<sp/><ref refid="class_k_win_1_1_window_1abb26f86fb723e81f43e0a27e8ffa0aa8" kindref="member">gravity</ref><sp/>==<sp/><ref refid="namespace_k_win_1a09aef7c112a8b0cdfb6e27a081d50dc8a98e5a1c44509157ebcaf46c515c78875" kindref="member">Gravity::BottomLeft</ref>)<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkPosition(<ref refid="namespace_k_win_1a4a39ecf55d45321f21eedbcd045c2206" kindref="member">invalidPoint</ref>)<sp/>!=<sp/><ref refid="namespace_k_win_1a4a39ecf55d45321f21eedbcd045c2206" kindref="member">invalidPoint</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"></highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/>QSizeF<sp/>min<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a789e45e8dda7a6db82df10a93024772a" kindref="member">minSize</ref>();</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/>QSizeF<sp/>max<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a3693e777b97ae236b95db854e3257078" kindref="member">maxSize</ref>();</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min.width()<sp/>&lt;<sp/>max.width()<sp/>||<sp/>min.height()<sp/>&lt;<sp/>max.height();</highlight></codeline>
<codeline lineno="3931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"></highlight></codeline>
<codeline lineno="3933" refid="class_k_win_1_1_x11_window_1a1ef7085c0c0cf02938b8bbc1dedb3866" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a1ef7085c0c0cf02938b8bbc1dedb3866" kindref="member">X11Window::isMaximizable</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3934"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">isUnmanaged</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1ad26ea1c81f61a38f6652edc5212f32e5" kindref="member">isResizable</ref>()<sp/>||<sp/><ref refid="class_k_win_1_1_window_1a5fa248e56c9434f4d7002528b360a092" kindref="member">isToolbar</ref>())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>SELI<sp/>isToolbar()<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a37f5a22919d5ee6f6404ce789c0a71f7" kindref="member">isAppletPopup</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkMaximize(<ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a53d04d48a6022c3cdf27d735a3b1de29" kindref="member">MaximizeRestore</ref>)<sp/>==<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a53d04d48a6022c3cdf27d735a3b1de29" kindref="member">MaximizeRestore</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkMaximize(<ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>)<sp/>!=<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a53d04d48a6022c3cdf27d735a3b1de29" kindref="member">MaximizeRestore</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"></highlight></codeline>
<codeline lineno="3950" refid="class_k_win_1_1_x11_window_1a36df52d4458adb16003f64ce41afb137" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a36df52d4458adb16003f64ce41afb137" kindref="member">X11Window::blockGeometryUpdates</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>block)</highlight></codeline>
<codeline lineno="3951"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block)<sp/>{</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_blockGeometryUpdates;</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--m_blockGeometryUpdates<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>nativeFrameGeometry<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(<ref refid="class_k_win_1_1_window_1a1359c9bf73f8b28bdfe9d5aa19aea1ab" kindref="member">m_bufferGeometry</ref>);</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>nativeWrapperGeometry<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(<ref refid="class_k_win_1_1_window_1ade714a7cf13d4ef4d770b5763919e5fa" kindref="member">m_clientGeometry</ref>.translated(-<ref refid="class_k_win_1_1_window_1a1359c9bf73f8b28bdfe9d5aa19aea1ab" kindref="member">m_bufferGeometry</ref>.topLeft()));</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>nativeClientGeometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>nativeWrapperGeometry.width(),<sp/>nativeWrapperGeometry.height());</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configure(nativeFrameGeometry,<sp/>nativeWrapperGeometry,<sp/>nativeClientGeometry);</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"></highlight></codeline>
<codeline lineno="3967" refid="class_k_win_1_1_x11_window_1ab85e615def62c1eb2728972d090b5bf5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1ab85e615def62c1eb2728972d090b5bf5" kindref="member">X11Window::moveResizeInternal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;<ref refid="class_k_win_1_1_window_1aa9a98858e1f184f24e2bfa6cf9362b5f" kindref="member">rect</ref>,<sp/><ref refid="class_k_win_1_1_window_1a412b316294522eb307c31fb2155e82e9" kindref="member">MoveResizeMode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="3968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ok,<sp/>the<sp/>shading<sp/>geometry<sp/>stuff.<sp/>Generally,<sp/>code<sp/>doesn&apos;t<sp/>care<sp/>about<sp/>shaded<sp/>geometry,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simply<sp/>because<sp/>there<sp/>are<sp/>too<sp/>many<sp/>places<sp/>dealing<sp/>with<sp/>geometry.<sp/>Those<sp/>places</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>shaded<sp/>state<sp/>and<sp/>use<sp/>normal<sp/>geometry,<sp/>which<sp/>they<sp/>usually<sp/>should<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>adjustedSize().<sp/>Such<sp/>geometry<sp/>comes<sp/>here,<sp/>and<sp/>if<sp/>the<sp/>window<sp/>is<sp/>shaded,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>geometry<sp/>is<sp/>used<sp/>only<sp/>for<sp/>client_size,<sp/>since<sp/>that<sp/>one<sp/>is<sp/>not<sp/>used<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shading.<sp/>Then<sp/>the<sp/>frame<sp/>geometry<sp/>is<sp/>adjusted<sp/>for<sp/>the<sp/>shaded<sp/>geometry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>gets<sp/>more<sp/>complicated<sp/>in<sp/>the<sp/>case<sp/>the<sp/>code<sp/>does<sp/>only<sp/>something<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setGeometry(<sp/>geometry())<sp/>-<sp/>geometry()<sp/>will<sp/>return<sp/>the<sp/>shaded<sp/>frame<sp/>geometry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Such<sp/>code<sp/>is<sp/>wrong<sp/>and<sp/>should<sp/>be<sp/>changed<sp/>to<sp/>handle<sp/>the<sp/>case<sp/>when<sp/>the<sp/>window<sp/>is<sp/>shaded,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>example<sp/>using<sp/>X11Window::clientSize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3979"><highlight class="normal"></highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">isUnmanaged</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>move<sp/>or<sp/>resize<sp/>unmanaged<sp/>window&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"></highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/><ref refid="class_k_win_1_1_window_1a0cd1f979061accdf5d743f3089360132" kindref="member">frameGeometry</ref><sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(<ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(<ref refid="class_k_win_1_1_window_1aa9a98858e1f184f24e2bfa6cf9362b5f" kindref="member">rect</ref>));</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/><ref refid="class_k_win_1_1_window_1ae65385d8659203d561a91aa7c0af9d8b" kindref="member">clientGeometry</ref><sp/>=<sp/><ref refid="class_k_win_1_1_window_1ade714a7cf13d4ef4d770b5763919e5fa" kindref="member">m_clientGeometry</ref>;</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shade_geometry_change)<sp/>{</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3dfd89167d57f28ebedf72ffddd33191" kindref="member">isShade</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a0cd1f979061accdf5d743f3089360132" kindref="member">frameGeometry</ref>.height()<sp/>==<sp/><ref refid="class_k_win_1_1_window_1a079dfba93240f19cadab52f478e48e84" kindref="member">borderTop</ref>()<sp/>+<sp/><ref refid="class_k_win_1_1_window_1a7b47bcdf2ffd2ba3113725d2ebfaf822" kindref="member">borderBottom</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Shaded<sp/>geometry<sp/>passed<sp/>for<sp/>size:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ae65385d8659203d561a91aa7c0af9d8b" kindref="member">clientGeometry</ref><sp/>=<sp/><ref refid="class_k_win_1_1_window_1a609229e1420ffc3f9d584ea7834fdb73" kindref="member">nextFrameRectToClientRect</ref>(<ref refid="class_k_win_1_1_window_1a0cd1f979061accdf5d743f3089360132" kindref="member">frameGeometry</ref>);</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a0cd1f979061accdf5d743f3089360132" kindref="member">frameGeometry</ref>.setHeight(<ref refid="class_k_win_1_1_window_1a079dfba93240f19cadab52f478e48e84" kindref="member">borderTop</ref>()<sp/>+<sp/><ref refid="class_k_win_1_1_window_1a7b47bcdf2ffd2ba3113725d2ebfaf822" kindref="member">borderBottom</ref>());</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ae65385d8659203d561a91aa7c0af9d8b" kindref="member">clientGeometry</ref><sp/>=<sp/><ref refid="class_k_win_1_1_window_1a609229e1420ffc3f9d584ea7834fdb73" kindref="member">nextFrameRectToClientRect</ref>(<ref refid="class_k_win_1_1_window_1a0cd1f979061accdf5d743f3089360132" kindref="member">frameGeometry</ref>);</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/><ref refid="class_k_win_1_1_window_1a205c4e3d11f4c4cd184e767829e2afc0" kindref="member">bufferGeometry</ref><sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a0698f17c5d52ecb88f88580fd73b4fd7" kindref="member">nextFrameRectToBufferRect</ref>(<ref refid="class_k_win_1_1_window_1a0cd1f979061accdf5d743f3089360132" kindref="member">frameGeometry</ref>);</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>bufferScale<sp/>=<sp/>kwinApp()-&gt;xwaylandScale();</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"></highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a1359c9bf73f8b28bdfe9d5aa19aea1ab" kindref="member">m_bufferGeometry</ref><sp/>==<sp/><ref refid="class_k_win_1_1_window_1a205c4e3d11f4c4cd184e767829e2afc0" kindref="member">bufferGeometry</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_window_1ade714a7cf13d4ef4d770b5763919e5fa" kindref="member">m_clientGeometry</ref><sp/>==<sp/><ref refid="class_k_win_1_1_window_1ae65385d8659203d561a91aa7c0af9d8b" kindref="member">clientGeometry</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_window_1a59df30651b9d39dc3ee42d5d3b63b400" kindref="member">m_frameGeometry</ref><sp/>==<sp/><ref refid="class_k_win_1_1_window_1a0cd1f979061accdf5d743f3089360132" kindref="member">frameGeometry</ref><sp/>&amp;&amp;<sp/>m_bufferScale<sp/>==<sp/>bufferScale)<sp/>{</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"></highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_1a0dac69707ab89d7d943100312fbec7c7" kindref="member">frameGeometryAboutToChange</ref>();</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"></highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>oldBufferGeometry<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a1359c9bf73f8b28bdfe9d5aa19aea1ab" kindref="member">m_bufferGeometry</ref>;</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>oldFrameGeometry<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a59df30651b9d39dc3ee42d5d3b63b400" kindref="member">m_frameGeometry</ref>;</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>oldClientGeometry<sp/>=<sp/><ref refid="class_k_win_1_1_window_1ade714a7cf13d4ef4d770b5763919e5fa" kindref="member">m_clientGeometry</ref>;</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*oldOutput<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a87aebec66b33eebf680520b5eb66fbd4" kindref="member">m_output</ref>;</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"></highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a59df30651b9d39dc3ee42d5d3b63b400" kindref="member">m_frameGeometry</ref><sp/>=<sp/><ref refid="class_k_win_1_1_window_1a0cd1f979061accdf5d743f3089360132" kindref="member">frameGeometry</ref>;</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ade714a7cf13d4ef4d770b5763919e5fa" kindref="member">m_clientGeometry</ref><sp/>=<sp/><ref refid="class_k_win_1_1_window_1ae65385d8659203d561a91aa7c0af9d8b" kindref="member">clientGeometry</ref>;</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a1359c9bf73f8b28bdfe9d5aa19aea1ab" kindref="member">m_bufferGeometry</ref><sp/>=<sp/><ref refid="class_k_win_1_1_window_1a205c4e3d11f4c4cd184e767829e2afc0" kindref="member">bufferGeometry</ref>;</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bufferScale<sp/>=<sp/>bufferScale;</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a87aebec66b33eebf680520b5eb66fbd4" kindref="member">m_output</ref><sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;outputAt(<ref refid="class_k_win_1_1_window_1a0cd1f979061accdf5d743f3089360132" kindref="member">frameGeometry</ref>.center());</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"></highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1aa33a16f171c29e61cdf0a9a038ded108" kindref="member">areGeometryUpdatesBlocked</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>nativeFrameGeometry<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(<ref refid="class_k_win_1_1_window_1a1359c9bf73f8b28bdfe9d5aa19aea1ab" kindref="member">m_bufferGeometry</ref>);</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>nativeWrapperGeometry<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(<ref refid="class_k_win_1_1_window_1ade714a7cf13d4ef4d770b5763919e5fa" kindref="member">m_clientGeometry</ref>.translated(-<ref refid="class_k_win_1_1_window_1a1359c9bf73f8b28bdfe9d5aa19aea1ab" kindref="member">m_bufferGeometry</ref>.topLeft()));</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>nativeClientGeometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>nativeWrapperGeometry.width(),<sp/>nativeWrapperGeometry.height());</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configure(nativeFrameGeometry,<sp/>nativeWrapperGeometry,<sp/>nativeClientGeometry);</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"></highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a596570835e18830ab4d15180190debc5" kindref="member">updateWindowRules</ref>(<ref refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ae8e82741545bf75f43f5f971d62ffbd6" kindref="member">Rules::Position</ref><sp/>|<sp/><ref refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a98872c479ff663adf89c4656b46506a2" kindref="member">Rules::Size</ref>);</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"></highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a8466be38391212ef29a4c880506eb069" kindref="member">isActive</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;setActiveOutput(<ref refid="class_k_win_1_1_window_1ae01b40bf580c920be022d66080e0685c" kindref="member">output</ref>());</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;updateStackingOrder();</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"></highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldBufferGeometry<sp/>!=<sp/><ref refid="class_k_win_1_1_window_1a1359c9bf73f8b28bdfe9d5aa19aea1ab" kindref="member">m_bufferGeometry</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_1aaa748e21e5fd562e204c3ce1e7410e4c" kindref="member">bufferGeometryChanged</ref>(oldBufferGeometry);</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldClientGeometry<sp/>!=<sp/><ref refid="class_k_win_1_1_window_1ade714a7cf13d4ef4d770b5763919e5fa" kindref="member">m_clientGeometry</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_1a5fad289b49f846a6fc1c0cb72e91ec78" kindref="member">clientGeometryChanged</ref>(oldClientGeometry);</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldFrameGeometry<sp/>!=<sp/><ref refid="class_k_win_1_1_window_1a59df30651b9d39dc3ee42d5d3b63b400" kindref="member">m_frameGeometry</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">frameGeometryChanged</ref>(oldFrameGeometry);</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldOutput<sp/>!=<sp/><ref refid="class_k_win_1_1_window_1a87aebec66b33eebf680520b5eb66fbd4" kindref="member">m_output</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_1a7dbccaac47d2333da22ab4acb4897381" kindref="member">outputChanged</ref>();</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_x11_window_1af16e4161195204fcd94a93cd6e97088d" kindref="member">shapeChanged</ref>();</highlight></codeline>
<codeline lineno="4046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"></highlight></codeline>
<codeline lineno="4048"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::configure(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;nativeFrame,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;nativeWrapper,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;nativeClient)</highlight></codeline>
<codeline lineno="4049"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_frame.size()<sp/>!=<sp/>nativeFrame.size()<sp/>||<sp/>m_wrapper.geometry()<sp/>!=<sp/>nativeWrapper)<sp/>{</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_frame.geometry()<sp/>!=<sp/>nativeFrame)<sp/>{</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_frame.setGeometry(nativeFrame);</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isShade())<sp/>{</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resized<sp/>=<sp/>m_client.size()<sp/>!=<sp/>nativeClient.size();</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_wrapper.geometry()<sp/>!=<sp/>nativeWrapper)<sp/>{</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wrapper.setGeometry(nativeWrapper);</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_client.geometry()<sp/>!=<sp/>nativeClient)<sp/>{</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client.setGeometry(nativeClient);</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"></highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>synthetic<sp/>configure<sp/>notify<sp/>event<sp/>has<sp/>to<sp/>be<sp/>sent<sp/>if<sp/>the<sp/>client<sp/>window<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resized<sp/>to<sp/>let<sp/>the<sp/>client<sp/>know<sp/>about<sp/>the<sp/>new<sp/>position.<sp/>See<sp/>ICCCM<sp/>4.1.5.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!resized)<sp/>{</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendSyntheticConfigureNotify();</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"></highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateInputShape();</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_frame.position()<sp/>!=<sp/>nativeFrame.topLeft())<sp/>{</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_frame.move(nativeFrame.topLeft());</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendSyntheticConfigureNotify();</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"></highlight></codeline>
<codeline lineno="4077"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>changeMaximizeRecursion<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4078" refid="class_k_win_1_1_x11_window_1a4e215498a2a89848ba5b6aa7e4fd56db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a4e215498a2a89848ba5b6aa7e4fd56db" kindref="member">X11Window::maximize</ref>(<ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9" kindref="member">MaximizeMode</ref><sp/>mode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;restore)</highlight></codeline>
<codeline lineno="4079"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">isUnmanaged</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>change<sp/>maximized<sp/>state<sp/>of<sp/>unmanaged<sp/>window&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"></highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(changeMaximizeRecursion)<sp/>{</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"></highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1ad26ea1c81f61a38f6652edc5212f32e5" kindref="member">isResizable</ref>()<sp/>||<sp/><ref refid="class_k_win_1_1_window_1a5fa248e56c9434f4d7002528b360a092" kindref="member">isToolbar</ref>())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>SELI<sp/>isToolbar()<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1a1ef7085c0c0cf02938b8bbc1dedb3866" kindref="member">isMaximizable</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"></highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>clientArea;</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1ac0833d8fcb7badada14ec1ab9a1a7729" kindref="member">isElectricBorderMaximizing</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clientArea<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;clientArea(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22a445c2e99842dbf1b3870807ebbd11f23" kindref="member">MaximizeArea</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_window_1a028d288109b39cb174d34fb8b2b44345" kindref="member">interactiveMoveResizeAnchor</ref>());</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clientArea<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;clientArea(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22a445c2e99842dbf1b3870807ebbd11f23" kindref="member">MaximizeArea</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_window_1ad20775a66b1c93ffb3cd0a8e917cc92b" kindref="member">moveResizeOutput</ref>());</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"></highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9" kindref="member">MaximizeMode</ref><sp/>old_mode<sp/>=<sp/>max_mode;</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"></highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/>mode<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkMaximize(mode);</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_mode<sp/>==<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"></highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a36df52d4458adb16003f64ce41afb137" kindref="member">blockGeometryUpdates</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"></highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maximing<sp/>one<sp/>way<sp/>and<sp/>unmaximizing<sp/>the<sp/>other<sp/>way<sp/>shouldn&apos;t<sp/>happen,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>restore<sp/>first<sp/>and<sp/>then<sp/>maximize<sp/>the<sp/>other<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((old_mode<sp/>==<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeVertical</ref><sp/>&amp;&amp;<sp/>mode<sp/>==<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeHorizontal</ref>)</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(old_mode<sp/>==<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeHorizontal</ref><sp/>&amp;&amp;<sp/>mode<sp/>==<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeVertical</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a4e215498a2a89848ba5b6aa7e4fd56db" kindref="member">maximize</ref>(<ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a53d04d48a6022c3cdf27d735a3b1de29" kindref="member">MaximizeRestore</ref>);<sp/></highlight><highlight class="comment">//<sp/>restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_1aab14ea30d0ecc3db40ba4abe981defc8" kindref="member">maximizedAboutToChange</ref>(mode);</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/>max_mode<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"></highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>sizes<sp/>for<sp/>restoring,<sp/>if<sp/>maximalizing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/>QSizeF<sp/>sz;</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3dfd89167d57f28ebedf72ffddd33191" kindref="member">isShade</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sz<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a74eb3de413f19ead5d7a4e434ed206ac" kindref="member">implicitSize</ref>();</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sz<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"></highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!restore.isNull())<sp/>{</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a9372354c3330f992f28ca6e6fb22d700" kindref="member">setGeometryRestore</ref>(restore);</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a1ffaa1f6015de331667110a987922089" kindref="member">requestedQuickTileMode</ref>()<sp/>==<sp/>QuickTileMode(<ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa6adf97f83acf6453d4a6a4b1070f3754" kindref="member">QuickTileFlag::None</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>savedGeometry<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>();</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(old_mode<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeVertical</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savedGeometry.setTop(<ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref>());</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savedGeometry.setHeight(sz.height());</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(old_mode<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeHorizontal</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savedGeometry.setLeft(<ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref>());</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savedGeometry.setWidth(sz.width());</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a9372354c3330f992f28ca6e6fb22d700" kindref="member">setGeometryRestore</ref>(savedGeometry);</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"></highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>into<sp/>decoration<sp/>update<sp/>borders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a85199ff20c051bd2738f150f96875b7f" kindref="member">isDecorated</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_window_1aeb9f103fab307fd78c92cef1f14275b2" kindref="member">decoration</ref>()-&gt;<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>()<sp/>&amp;&amp;<sp/>!(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;borderlessMaximizedWindows()<sp/>&amp;&amp;<sp/>max_mode<sp/>==<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">KWin::MaximizeFull</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeMaximizeRecursion<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aeb9f103fab307fd78c92cef1f14275b2" kindref="member">decoration</ref>()-&gt;window();</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((max_mode<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeVertical</ref>)<sp/>!=<sp/>(old_mode<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeVertical</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>c-&gt;maximizedVerticallyChanged(max_mode<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeVertical</ref>);</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((max_mode<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeHorizontal</ref>)<sp/>!=<sp/>(old_mode<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeHorizontal</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>c-&gt;maximizedHorizontallyChanged(max_mode<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeHorizontal</ref>);</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((max_mode<sp/>==<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>)<sp/>!=<sp/>(old_mode<sp/>==<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>c-&gt;maximizedChanged(max_mode<sp/>==<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeMaximizeRecursion<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"></highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;borderlessMaximizedWindows())<sp/>{</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>triggers<sp/>a<sp/>maximize<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>setNoBorder<sp/>interation<sp/>will<sp/>exit<sp/>since<sp/>there&apos;s<sp/>no<sp/>change<sp/>but<sp/>the<sp/>first<sp/>recursion<sp/>pullutes<sp/>the<sp/>restore<sp/>geometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeMaximizeRecursion<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a4e73f983d63129203de7cdf7cb915826" kindref="member">setNoBorder</ref>(<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;<ref refid="class_k_win_1_1_x11_window_1a188bf6c90ae46ccd1dcba279fc494bb0" kindref="member">checkNoBorder</ref>(app_noborder<sp/>||<sp/>(m_motif.hasDecoration()<sp/>&amp;&amp;<sp/>m_motif.noBorder())<sp/>||<sp/>max_mode<sp/>==<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>));</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeMaximizeRecursion<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(max_mode)<sp/>{</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"></highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeVertical</ref>:<sp/>{</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_mode<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeHorizontal</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>actually<sp/>restoring<sp/>from<sp/>MaximizeFull</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().<ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>placement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>constraintedSize<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aba7fd5b92a9da565aecf8ae559f4af69" kindref="member">constrainFrameSize</ref>(QSizeF(<ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>()<sp/>*<sp/>2<sp/>/<sp/>3,<sp/>clientArea.height()),<sp/><ref refid="class_k_win_1_1_window_1a96727035a8ba0a709cc464483d1d7b3eaac1c9b8c41a4ac9f828a6506ca5c0772" kindref="member">SizeModeFixedH</ref>);</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a4f9ff78c2b5b8fb2c900869968a9df63" kindref="member">resize</ref>(QSizeF(constraintedSize.width(),<sp/>clientArea.height()));</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;placement()-&gt;placeSmart(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>clientArea);</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aca6e1f1d8772897c5efbfb3c17fa436e" kindref="member">moveResize</ref>(QRectF(QPointF(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().<ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref>(),<sp/>clientArea.top()),</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSize(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().<ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>(),<sp/>clientArea.height())));</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aca6e1f1d8772897c5efbfb3c17fa436e" kindref="member">moveResize</ref>(QRectF(<ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref>(),<sp/>clientArea.top(),<sp/><ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>(),<sp/>clientArea.height()));</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ae3e09a76bdd4d8b7faea845fd8a37e7f" kindref="member">exitQuickTileMode</ref>();</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;setState(NET::MaxVert,<sp/>NET::Max);</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"></highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeHorizontal</ref>:<sp/>{</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_mode<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeVertical</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>actually<sp/>restoring<sp/>from<sp/>MaximizeFull</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().<ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>placement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>constraintedSize<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aba7fd5b92a9da565aecf8ae559f4af69" kindref="member">constrainFrameSize</ref>(QSizeF(clientArea.width(),<sp/><ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>()<sp/>*<sp/>2<sp/>/<sp/>3),<sp/><ref refid="class_k_win_1_1_window_1a96727035a8ba0a709cc464483d1d7b3eaa2888bb87f22c92391588c28ec2a5f18" kindref="member">SizeModeFixedW</ref>);</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a4f9ff78c2b5b8fb2c900869968a9df63" kindref="member">resize</ref>(QSizeF(clientArea.width(),<sp/>constraintedSize.height()));</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;placement()-&gt;placeSmart(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>clientArea);</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aca6e1f1d8772897c5efbfb3c17fa436e" kindref="member">moveResize</ref>(QRectF(QPoint(clientArea.left(),<sp/><ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().<ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref>()),</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSize(clientArea.width(),<sp/><ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().<ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>())));</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aca6e1f1d8772897c5efbfb3c17fa436e" kindref="member">moveResize</ref>(QRectF(clientArea.left(),<sp/><ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref>(),<sp/>clientArea.width(),<sp/><ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>()));</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ae3e09a76bdd4d8b7faea845fd8a37e7f" kindref="member">exitQuickTileMode</ref>();</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;setState(NET::MaxHoriz,<sp/>NET::Max);</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"></highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a53d04d48a6022c3cdf27d735a3b1de29" kindref="member">MaximizeRestore</ref>:<sp/>{</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>restore<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a5bd40e38d16c8453af9226579d1865ac" kindref="member">moveResizeGeometry</ref>();</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>only<sp/>partially<sp/>maximized,<sp/>geom_restore<sp/>may<sp/>not<sp/>have<sp/>the<sp/>other<sp/>dimension<sp/>remembered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_mode<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeVertical</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore.setTop(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().top());</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore.setBottom(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().bottom());</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_mode<sp/>&amp;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeHorizontal</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore.setLeft(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().left());</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore.setRight(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().right());</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!restore.isValid())<sp/>{</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSize<sp/>s<sp/>=<sp/>QSize(clientArea.width()<sp/>*<sp/>2<sp/>/<sp/>3,<sp/>clientArea.height()<sp/>*<sp/>2<sp/>/<sp/>3);</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().<ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.setWidth(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().<ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>());</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().<ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.setHeight(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().<ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>());</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a4f9ff78c2b5b8fb2c900869968a9df63" kindref="member">resize</ref>(<ref refid="class_k_win_1_1_window_1aba7fd5b92a9da565aecf8ae559f4af69" kindref="member">constrainFrameSize</ref>(s));</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;placement()-&gt;placeSmart(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>clientArea);</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a5bd40e38d16c8453af9226579d1865ac" kindref="member">moveResizeGeometry</ref>();</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().<ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore.moveLeft(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().<ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref>());</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().<ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore.moveTop(<ref refid="class_k_win_1_1_window_1a5f94086b4bce785556425c530c59dbaf" kindref="member">geometryRestore</ref>().<ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref>());</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a9372354c3330f992f28ca6e6fb22d700" kindref="member">setGeometryRestore</ref>(restore);<sp/></highlight><highlight class="comment">//<sp/>relevant<sp/>for<sp/>mouse<sp/>pos<sp/>calculation,<sp/>bug<sp/>#298646</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"></highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore.setSize(<ref refid="class_k_win_1_1_window_1aba7fd5b92a9da565aecf8ae559f4af69" kindref="member">constrainFrameSize</ref>(restore.size(),<sp/><ref refid="class_k_win_1_1_window_1a96727035a8ba0a709cc464483d1d7b3eac26ddc87899c79d31f6f90bcd11b85ba" kindref="member">SizeModeAny</ref>));</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a1b63155365b80df09ad34dc75f15102d" kindref="member">isInteractiveMove</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1ae5b462a986c3efa84fa3c566cc9b985e" kindref="member">isFullScreen</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/><ref refid="class_k_win_1_1_window_1a59bcf5b3c635478120afa53945ee8b75" kindref="member">anchor</ref><sp/>=<sp/><ref refid="class_k_win_1_1_window_1a028d288109b39cb174d34fb8b2b44345" kindref="member">interactiveMoveResizeAnchor</ref>();</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/><ref refid="class_k_win_1_1_window_1a140e419a5274b750fd8a6b3789c8f6af" kindref="member">offset</ref><sp/>=<sp/><ref refid="class_k_win_1_1_window_1a087ebcf075b63c7581b7bf3c55fab2ef" kindref="member">interactiveMoveOffset</ref>();</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore.moveTopLeft(QPointF(<ref refid="class_k_win_1_1_window_1a59bcf5b3c635478120afa53945ee8b75" kindref="member">anchor</ref>.x()<sp/>-<sp/><ref refid="class_k_win_1_1_window_1a140e419a5274b750fd8a6b3789c8f6af" kindref="member">offset</ref>.x()<sp/>*<sp/>restore.width(),</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a59bcf5b3c635478120afa53945ee8b75" kindref="member">anchor</ref>.y()<sp/>-<sp/><ref refid="class_k_win_1_1_window_1a140e419a5274b750fd8a6b3789c8f6af" kindref="member">offset</ref>.y()<sp/>*<sp/>restore.height()));</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"></highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aca6e1f1d8772897c5efbfb3c17fa436e" kindref="member">moveResize</ref>(restore);</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;setState(NET::States(),<sp/>NET::Max);</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"></highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>:<sp/>{</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aca6e1f1d8772897c5efbfb3c17fa436e" kindref="member">moveResize</ref>(clientArea);</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1ae3e09a76bdd4d8b7faea845fd8a37e7f" kindref="member">exitQuickTileMode</ref>();</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;setState(NET::Max,<sp/>NET::Max);</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"></highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a36df52d4458adb16003f64ce41afb137" kindref="member">blockGeometryUpdates</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/>updateAllowedActions();</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a596570835e18830ab4d15180190debc5" kindref="member">updateWindowRules</ref>(<ref refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ae5557c83671660f0caedbda58b2f1f60" kindref="member">Rules::MaximizeVert</ref><sp/>|<sp/><ref refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a8b1181910f884f7d16f6e3fe061edc1f" kindref="member">Rules::MaximizeHoriz</ref><sp/>|<sp/><ref refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ae8e82741545bf75f43f5f971d62ffbd6" kindref="member">Rules::Position</ref><sp/>|<sp/><ref refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a98872c479ff663adf89c4656b46506a2" kindref="member">Rules::Size</ref>);</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"></highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_mode<sp/>!=<sp/>old_mode)<sp/>{</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_1a08cad7d21d3195ccc0829c2c0f1f9c95" kindref="member">maximizedChanged</ref>();</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"></highlight></codeline>
<codeline lineno="4276" refid="class_k_win_1_1_x11_window_1a2f48fc29406a12f659c62e25709e81a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a2f48fc29406a12f659c62e25709e81a9" kindref="member">X11Window::setFullScreen</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set)</highlight></codeline>
<codeline lineno="4277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/>set<sp/>=<sp/><ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;checkFullScreen(set);</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"></highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasFullscreen<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1ae5b462a986c3efa84fa3c566cc9b985e" kindref="member">isFullScreen</ref>();</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasFullscreen<sp/>==<sp/>set)<sp/>{</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1a031295bc7fb1dd7e6752b29cec3c9472" kindref="member">isFullScreenable</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"></highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a14232d4a0703db154fc0f506be5a675a" kindref="member">setShade</ref>(<ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585fa96968d2418f89776544aadc16404b6d4" kindref="member">ShadeNone</ref>);</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"></highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasFullscreen)<sp/>{</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;updateFocusMousePosition(<ref refid="class_k_win_1_1_cursors_1a5e43427047cf7663b4d9723fac4c1408" kindref="member">Cursors::self</ref>()-&gt;mouse()-&gt;<ref refid="class_k_win_1_1_window_1a090c42b4c18c700d15ff1822a2044c0f" kindref="member">pos</ref>());<sp/></highlight><highlight class="comment">//<sp/>may<sp/>cause<sp/>leave<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aa475aaf802327aabba57f3c9404a34d3" kindref="member">setFullscreenGeometryRestore</ref>(<ref refid="class_k_win_1_1_window_1a5bd40e38d16c8453af9226579d1865ac" kindref="member">moveResizeGeometry</ref>());</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"></highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set)<sp/>{</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fullscreenMode<sp/>=<sp/>FullScreenNormal;</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;raiseWindow(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fullscreenMode<sp/>=<sp/>FullScreenNone;</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"></highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_stacking_updates_blocker" kindref="compound">StackingUpdatesBlocker</ref><sp/>blocker1(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>());</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_geometry_updates_blocker" kindref="compound">X11GeometryUpdatesBlocker</ref><sp/>blocker2(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"></highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>active<sp/>fullscreens<sp/>get<sp/>different<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a566fd5756c0cce34ab4f6ac8ba8dd96b" kindref="member">updateLayer</ref>();</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"></highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setState(<ref refid="class_k_win_1_1_x11_window_1ae5b462a986c3efa84fa3c566cc9b985e" kindref="member">isFullScreen</ref>()<sp/>?<sp/>NET::FullScreen<sp/>:<sp/>NET::States(),<sp/>NET::FullScreen);</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/>updateDecoration(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"></highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set)<sp/>{</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;fullscreenMonitors().isSet())<sp/>{</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aca6e1f1d8772897c5efbfb3c17fa436e" kindref="member">moveResize</ref>(fullscreenMonitorsArea(info-&gt;fullscreenMonitors()));</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aca6e1f1d8772897c5efbfb3c17fa436e" kindref="member">moveResize</ref>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;clientArea(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22a2563a6e9cbb4da3bfb726a990f05895c" kindref="member">FullScreenArea</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_window_1ad20775a66b1c93ffb3cd0a8e917cc92b" kindref="member">moveResizeOutput</ref>()));</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(!<ref refid="class_k_win_1_1_window_1aafa6825cf1306da791fa827c4ba98006" kindref="member">fullscreenGeometryRestore</ref>().isNull());</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aca6e1f1d8772897c5efbfb3c17fa436e" kindref="member">moveResize</ref>(QRectF(<ref refid="class_k_win_1_1_window_1aafa6825cf1306da791fa827c4ba98006" kindref="member">fullscreenGeometryRestore</ref>().topLeft(),<sp/><ref refid="class_k_win_1_1_window_1aba7fd5b92a9da565aecf8ae559f4af69" kindref="member">constrainFrameSize</ref>(<ref refid="class_k_win_1_1_window_1aafa6825cf1306da791fa827c4ba98006" kindref="member">fullscreenGeometryRestore</ref>().<ref refid="class_k_win_1_1_window_1a3d66832f7a462d332759451c3633851d" kindref="member">size</ref>())));</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"></highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a596570835e18830ab4d15180190debc5" kindref="member">updateWindowRules</ref>(<ref refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ae48a0a07682a4ff7d16fd3f828840ddb" kindref="member">Rules::Fullscreen</ref><sp/>|<sp/><ref refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ae8e82741545bf75f43f5f971d62ffbd6" kindref="member">Rules::Position</ref><sp/>|<sp/><ref refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a98872c479ff663adf89c4656b46506a2" kindref="member">Rules::Size</ref>);</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/><sp/><sp/>updateAllowedActions(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_1a469e95b9f51c551643a0e4bdf46e0203" kindref="member">fullScreenChanged</ref>();</highlight></codeline>
<codeline lineno="4326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"></highlight></codeline>
<codeline lineno="4328" refid="class_k_win_1_1_x11_window_1a63e4b163df670b2138b014ecdb946cb1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a63e4b163df670b2138b014ecdb946cb1" kindref="member">X11Window::updateFullscreenMonitors</ref>(NETFullscreenMonitors<sp/>topology)</highlight></codeline>
<codeline lineno="4329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputCount<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;outputs().count();</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"></highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>&quot;incoming<sp/>request<sp/>with<sp/>top:<sp/>&quot;<sp/>&lt;&lt;<sp/>topology.top<sp/>&lt;&lt;<sp/>&quot;<sp/>bottom:<sp/>&quot;<sp/>&lt;&lt;<sp/>topology.bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>left:<sp/>&quot;<sp/>&lt;&lt;<sp/>topology.left<sp/>&lt;&lt;<sp/>&quot;<sp/>right:<sp/>&quot;<sp/>&lt;&lt;<sp/>topology.right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;,<sp/>we<sp/>have:<sp/>&quot;<sp/>&lt;&lt;<sp/>nscreens<sp/>&lt;&lt;<sp/>&quot;<sp/>screens.&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4335"><highlight class="normal"></highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topology.top<sp/>&gt;=<sp/>outputCount<sp/>||<sp/>topology.bottom<sp/>&gt;=<sp/>outputCount<sp/>||<sp/>topology.left<sp/>&gt;=<sp/>outputCount<sp/>||<sp/>topology.right<sp/>&gt;=<sp/>outputCount)<sp/>{</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fullscreenMonitors<sp/>update<sp/>failed.<sp/>request<sp/>higher<sp/>than<sp/>number<sp/>of<sp/>screens.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"></highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setFullscreenMonitors(topology);</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1ae5b462a986c3efa84fa3c566cc9b985e" kindref="member">isFullScreen</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aca6e1f1d8772897c5efbfb3c17fa436e" kindref="member">moveResize</ref>(fullscreenMonitorsArea(topology));</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal">QRect<sp/>X11Window::fullscreenMonitorsArea(NETFullscreenMonitors<sp/>requestedTopology)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4352"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/>total;</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"></highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;xineramaIndexToOutput(requestedTopology.top))<sp/>{</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>=<sp/>total.united(output-&gt;geometry());</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output<sp/>=<sp/>workspace()-&gt;xineramaIndexToOutput(requestedTopology.bottom))<sp/>{</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>=<sp/>total.united(output-&gt;geometry());</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;xineramaIndexToOutput(requestedTopology.left))<sp/>{</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>=<sp/>total.united(output-&gt;geometry());</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;xineramaIndexToOutput(requestedTopology.right))<sp/>{</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>=<sp/>total.united(output-&gt;geometry());</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"></highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total;</highlight></codeline>
<codeline lineno="4369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"></highlight></codeline>
<codeline lineno="4371" refid="class_k_win_1_1_x11_window_1a665e5bdd8f2e9a9f11dc1fb05c679913" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a665e5bdd8f2e9a9f11dc1fb05c679913" kindref="member">X11Window::isWaitingForInteractiveResizeSync</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4372"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_syncRequest.enabled<sp/>&amp;&amp;<sp/>(m_syncRequest.pending<sp/>||<sp/>m_syncRequest.acked);</highlight></codeline>
<codeline lineno="4374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"></highlight></codeline>
<codeline lineno="4376" refid="class_k_win_1_1_x11_window_1a48fff76cf728cffc9101af2bcdb2dd93" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a48fff76cf728cffc9101af2bcdb2dd93" kindref="member">X11Window::doInteractiveResizeSync</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;<ref refid="class_k_win_1_1_window_1aa9a98858e1f184f24e2bfa6cf9362b5f" kindref="member">rect</ref>)</highlight></codeline>
<codeline lineno="4377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>moveResizeFrameGeometry<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(<ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(<ref refid="class_k_win_1_1_window_1aa9a98858e1f184f24e2bfa6cf9362b5f" kindref="member">rect</ref>));</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>moveResizeClientGeometry<sp/>=<sp/><ref refid="class_k_win_1_1_window_1a609229e1420ffc3f9d584ea7834fdb73" kindref="member">nextFrameRectToClientRect</ref>(moveResizeFrameGeometry);</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>moveResizeBufferGeometry<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1a0698f17c5d52ecb88f88580fd73b4fd7" kindref="member">nextFrameRectToBufferRect</ref>(moveResizeFrameGeometry);</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"></highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>nativeFrameGeometry<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(moveResizeBufferGeometry);</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>nativeWrapperGeometry<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(moveResizeClientGeometry.translated(-moveResizeBufferGeometry.topLeft()));</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>nativeClientGeometry<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a94a1b7cf6d73356ceed53c027f58adf5" kindref="member">Xcb::toXNative</ref>(QRectF(QPointF(0,<sp/>0),<sp/>moveResizeClientGeometry.size()));</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"></highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_frame.geometry()<sp/>==<sp/>nativeFrameGeometry<sp/>&amp;&amp;<sp/>m_wrapper.geometry()<sp/>==<sp/>nativeWrapperGeometry<sp/>&amp;&amp;<sp/>m_client.geometry()<sp/>==<sp/>nativeClientGeometry)<sp/>{</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"></highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_syncRequest.enabled)<sp/>{</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1aca6e1f1d8772897c5efbfb3c17fa436e" kindref="member">moveResize</ref>(<ref refid="class_k_win_1_1_window_1aa9a98858e1f184f24e2bfa6cf9362b5f" kindref="member">rect</ref>);</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a8653343fc420debd4ffb00938488a736" kindref="member">setMoveResizeGeometry</ref>(moveResizeFrameGeometry);</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendSyncRequest();</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configure(nativeFrameGeometry,<sp/>nativeWrapperGeometry,<sp/>nativeClientGeometry);</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"></highlight></codeline>
<codeline lineno="4399"><highlight class="normal">NETExtendedStrut<sp/>X11Window::strut()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4400"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/>NETExtendedStrut<sp/>ext<sp/>=<sp/>info-&gt;extendedStrut();</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><sp/>NETStrut<sp/>str<sp/>=<sp/>info-&gt;strut();</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>displaySize<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;geometry().size();</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ext.left_width<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>ext.right_width<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>ext.top_width<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>ext.bottom_width<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(str.left<sp/>!=<sp/>0<sp/>||<sp/>str.right<sp/>!=<sp/>0<sp/>||<sp/>str.top<sp/>!=<sp/>0<sp/>||<sp/>str.bottom<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>extended<sp/>from<sp/>simple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str.left<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext.left_width<sp/>=<sp/>str.left;</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext.left_start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext.left_end<sp/>=<sp/>displaySize.height();</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str.right<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext.right_width<sp/>=<sp/>str.right;</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext.right_start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext.right_end<sp/>=<sp/>displaySize.height();</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str.top<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext.top_width<sp/>=<sp/>str.top;</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext.top_start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext.top_end<sp/>=<sp/>displaySize.width();</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str.bottom<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext.bottom_width<sp/>=<sp/>str.bottom;</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext.bottom_start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext.bottom_end<sp/>=<sp/>displaySize.width();</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ext;</highlight></codeline>
<codeline lineno="4429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"></highlight></codeline>
<codeline lineno="4431" refid="class_k_win_1_1_x11_window_1ab99047488d85c85c666ddb2ecab244ac" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_strut_rect" kindref="compound">StrutRect</ref><sp/><ref refid="class_k_win_1_1_x11_window_1ab99047488d85c85c666ddb2ecab244ac" kindref="member">X11Window::strutRect</ref>(<ref refid="namespace_k_win_1a5e1f12b4f6fe1e98672dabf86c00fd1f" kindref="member">StrutArea</ref><sp/>area)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4432"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(area<sp/>!=<sp/><ref refid="namespace_k_win_1a5e1f12b4f6fe1e98672dabf86c00fd1faeb2d1af5e7d3993721032b60c90ee565" kindref="member">StrutAreaAll</ref>);<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>displaySize<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;geometry().size();</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/>NETExtendedStrut<sp/>strutArea<sp/>=<sp/>strut();</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(area)<sp/>{</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a5e1f12b4f6fe1e98672dabf86c00fd1faaf851dfa7690117100f930e8976a2e39" kindref="member">StrutAreaTop</ref>:</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strutArea.top_width<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_strut_rect" kindref="compound">StrutRect</ref>(QRect(</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strutArea.top_start,<sp/>0,</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strutArea.top_end<sp/>-<sp/>strutArea.top_start,<sp/>strutArea.top_width),</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a5e1f12b4f6fe1e98672dabf86c00fd1faaf851dfa7690117100f930e8976a2e39" kindref="member">StrutAreaTop</ref>);</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a5e1f12b4f6fe1e98672dabf86c00fd1fa72eb7170aba4e9ea52c4f9ac5b2d353b" kindref="member">StrutAreaRight</ref>:</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strutArea.right_width<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_strut_rect" kindref="compound">StrutRect</ref>(QRect(</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displaySize.width()<sp/>-<sp/>strutArea.right_width,<sp/>strutArea.right_start,</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strutArea.right_width,<sp/>strutArea.right_end<sp/>-<sp/>strutArea.right_start),</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a5e1f12b4f6fe1e98672dabf86c00fd1fa72eb7170aba4e9ea52c4f9ac5b2d353b" kindref="member">StrutAreaRight</ref>);</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a5e1f12b4f6fe1e98672dabf86c00fd1fa8a19680a6a57ccd911f098df7ebc09ee" kindref="member">StrutAreaBottom</ref>:</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strutArea.bottom_width<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_strut_rect" kindref="compound">StrutRect</ref>(QRect(</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strutArea.bottom_start,<sp/>displaySize.height()<sp/>-<sp/>strutArea.bottom_width,</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strutArea.bottom_end<sp/>-<sp/>strutArea.bottom_start,<sp/>strutArea.bottom_width),</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a5e1f12b4f6fe1e98672dabf86c00fd1fa8a19680a6a57ccd911f098df7ebc09ee" kindref="member">StrutAreaBottom</ref>);</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a5e1f12b4f6fe1e98672dabf86c00fd1fae563c9d36d4b08112f58bb8374d1a12b" kindref="member">StrutAreaLeft</ref>:</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strutArea.left_width<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_strut_rect" kindref="compound">StrutRect</ref>(QRect(</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>strutArea.left_start,</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strutArea.left_width,<sp/>strutArea.left_end<sp/>-<sp/>strutArea.left_start),</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a5e1f12b4f6fe1e98672dabf86c00fd1fae563c9d36d4b08112f58bb8374d1a12b" kindref="member">StrutAreaLeft</ref>);</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_strut_rect" kindref="compound">StrutRect</ref>();<sp/></highlight><highlight class="comment">//<sp/>Null<sp/>rect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"></highlight></codeline>
<codeline lineno="4475" refid="class_k_win_1_1_x11_window_1a0705718e853e8dc77e99fcf3a7e446e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a0705718e853e8dc77e99fcf3a7e446e0" kindref="member">X11Window::hasStrut</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4476"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/>NETExtendedStrut<sp/>ext<sp/>=<sp/>strut();</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ext.left_width<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>ext.right_width<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>ext.top_width<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>ext.bottom_width<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"></highlight></codeline>
<codeline lineno="4484" refid="class_k_win_1_1_x11_window_1abf855a28da219dbab00882f1bf790f99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1abf855a28da219dbab00882f1bf790f99" kindref="member">X11Window::applyWindowRules</ref>()</highlight></codeline>
<codeline lineno="4485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a6ef20caeaf3db7a7bfc594b2b59e5797" kindref="member">Window::applyWindowRules</ref>();</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/>updateAllowedActions();</highlight></codeline>
<codeline lineno="4488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"></highlight></codeline>
<codeline lineno="4490" refid="class_k_win_1_1_x11_window_1aa5523cb6190e79111935d776fa833f38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1aa5523cb6190e79111935d776fa833f38" kindref="member">X11Window::supportsWindowRules</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4491"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_k_win_1_1_x11_window_1a96c7a60b05aadbc537329ae7f90c817a" kindref="member">isUnmanaged</ref>();</highlight></codeline>
<codeline lineno="4493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"></highlight></codeline>
<codeline lineno="4495" refid="class_k_win_1_1_x11_window_1a596570835e18830ab4d15180190debc5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a596570835e18830ab4d15180190debc5" kindref="member">X11Window::updateWindowRules</ref>(Rules::Types<sp/>selection)</highlight></codeline>
<codeline lineno="4496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isManaged())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>not<sp/>fully<sp/>setup<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a6ee345225d453923e318c8344b86217f" kindref="member">Window::updateWindowRules</ref>(selection);</highlight></codeline>
<codeline lineno="4501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"></highlight></codeline>
<codeline lineno="4503"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::associate()</highlight></codeline>
<codeline lineno="4504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surface()-&gt;isMapped())<sp/>{</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_syncRequest.acked)<sp/>{</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finishSync();</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"></highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_syncRequest.enabled)<sp/>{</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setReadyForPainting();</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"></highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(surface(),<sp/>&amp;SurfaceInterface::committed,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;X11Window::handleCommitted);</highlight></codeline>
<codeline lineno="4516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"></highlight></codeline>
<codeline lineno="4518"><highlight class="normal">QWindow<sp/>*X11Window::findInternalWindow()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4519"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QWindowList<sp/>windows<sp/>=<sp/>kwinApp()-&gt;topLevelWindows();</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QWindow<sp/>*w<sp/>:<sp/>windows)<sp/>{</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w-&gt;handle()<sp/>&amp;&amp;<sp/>w-&gt;winId()<sp/>==<sp/>window())<sp/>{</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w;</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"></highlight></codeline>
<codeline lineno="4529"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::checkOutput()</highlight></codeline>
<codeline lineno="4530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/>setOutput(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;outputAt(frameGeometry().center()));</highlight></codeline>
<codeline lineno="4532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"></highlight></codeline>
<codeline lineno="4534"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::getWmOpaqueRegion()</highlight></codeline>
<codeline lineno="4535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rects<sp/>=<sp/>info-&gt;opaqueRegion();</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/>QRegion<sp/>new_opaque_region;</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;r<sp/>:<sp/>rects)<sp/>{</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_opaque_region<sp/>+=<sp/>Xcb::fromXNative(QRect(r.pos.x,<sp/>r.pos.y,<sp/>r.size.width,<sp/>r.size.height)).toRect();</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/>opaque_region<sp/>=<sp/>new_opaque_region;</highlight></codeline>
<codeline lineno="4542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"></highlight></codeline>
<codeline lineno="4544" refid="class_k_win_1_1_x11_window_1ad790784904671e41c5dd7f7542dd07ba" refkind="member"><highlight class="normal">QList&lt;QRectF&gt;<sp/><ref refid="class_k_win_1_1_x11_window_1ad790784904671e41c5dd7f7542dd07ba" kindref="member">X11Window::shapeRegion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4545"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_shapeRegionIsValid)<sp/>{</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_shapeRegion;</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"></highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/><ref refid="class_k_win_1_1_window_1a205c4e3d11f4c4cd184e767829e2afc0" kindref="member">bufferGeometry</ref><sp/>=<sp/>this-&gt;bufferGeometry();</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"></highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_shape)<sp/>{</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cookie<sp/>=<sp/>xcb_shape_get_rectangles_unchecked(kwinApp()-&gt;x11Connection(),<sp/><ref refid="class_k_win_1_1_x11_window_1a41fce59f634f8e4f8cbb0cc52cb1dd71" kindref="member">frameId</ref>(),<sp/>XCB_SHAPE_SK_BOUNDING);</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1af8087ffc5ee2774d3ec42e3ff2ad9456" kindref="member">UniqueCPtr&lt;xcb_shape_get_rectangles_reply_t&gt;</ref><sp/>reply(xcb_shape_get_rectangles_reply(kwinApp()-&gt;x11Connection(),<sp/>cookie,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reply)<sp/>{</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_shapeRegion.clear();</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xcb_rectangle_t<sp/>*rects<sp/>=<sp/>xcb_shape_get_rectangles_rectangles(reply.get());</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rectCount<sp/>=<sp/>xcb_shape_get_rectangles_rectangles_length(reply.get());</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rectCount;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>region<sp/>=<sp/><ref refid="namespace_k_win_1_1_xcb_1a4d1af9f492e75996f743eb22037b85b4" kindref="member">Xcb::fromXNative</ref>(QRect(rects[i].<ref refid="class_k_win_1_1_window_1a8ca7699b2ae5cef0dcf3755f55f68fb7" kindref="member">x</ref>,<sp/>rects[i].<ref refid="class_k_win_1_1_window_1a82df990348a6c4a0696ef5e1f8aea78d" kindref="member">y</ref>,<sp/>rects[i].<ref refid="class_k_win_1_1_window_1a2cd647ee6dfed59b1dc820162e4acd9f" kindref="member">width</ref>,<sp/>rects[i].<ref refid="class_k_win_1_1_window_1ab18c68ce7b55201a2c3052994f80362b" kindref="member">height</ref>)).toAlignedRect();</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>the<sp/>shape<sp/>is<sp/>sane<sp/>(X<sp/>is<sp/>async,<sp/>maybe<sp/>even<sp/>XShape<sp/>is<sp/>broken)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region<sp/>=<sp/>region.intersected(QRectF(QPointF(0,<sp/>0),<sp/><ref refid="class_k_win_1_1_window_1a205c4e3d11f4c4cd184e767829e2afc0" kindref="member">bufferGeometry</ref>.size()));</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"></highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_shapeRegion<sp/>+=<sp/>region;</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_shapeRegion.clear();</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_shapeRegion<sp/>=<sp/>{QRectF(0,<sp/>0,<sp/><ref refid="class_k_win_1_1_window_1a205c4e3d11f4c4cd184e767829e2afc0" kindref="member">bufferGeometry</ref>.width(),<sp/><ref refid="class_k_win_1_1_window_1a205c4e3d11f4c4cd184e767829e2afc0" kindref="member">bufferGeometry</ref>.height())};</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"></highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shapeRegionIsValid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_shapeRegion;</highlight></codeline>
<codeline lineno="4575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"></highlight></codeline>
<codeline lineno="4577"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::discardShapeRegion()</highlight></codeline>
<codeline lineno="4578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shapeRegionIsValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shapeRegion.clear();</highlight></codeline>
<codeline lineno="4581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"></highlight></codeline>
<codeline lineno="4583"><highlight class="normal">Xcb::Property<sp/>X11Window::fetchWmClientLeader()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4584"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Xcb::Property(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>window(),<sp/>atoms-&gt;<ref refid="class_k_win_1_1_atoms_1a61a557f5ac649f08a1824dd011fdf6ed" kindref="member">wm_client_leader</ref>,<sp/>XCB_ATOM_WINDOW,<sp/>0,<sp/>10000);</highlight></codeline>
<codeline lineno="4586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"></highlight></codeline>
<codeline lineno="4588"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::readWmClientLeader(Xcb::Property<sp/>&amp;prop)</highlight></codeline>
<codeline lineno="4589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wmClientLeader<sp/>=<sp/>prop.value&lt;xcb_window_t&gt;(window());</highlight></codeline>
<codeline lineno="4591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"></highlight></codeline>
<codeline lineno="4593"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::getWmClientLeader()</highlight></codeline>
<codeline lineno="4594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isUnmanaged())<sp/>{</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prop<sp/>=<sp/>fetchWmClientLeader();</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/>readWmClientLeader(prop);</highlight></codeline>
<codeline lineno="4600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"></highlight></codeline>
<codeline lineno="4602" refid="class_k_win_1_1_x11_window_1ad33086a0fc2f1cd541bec4d5ccb092d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1ad33086a0fc2f1cd541bec4d5ccb092d8" kindref="member">X11Window::desktopId</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4603"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_1a11f83e606efc5d90143b2d396e39e3ec" kindref="member">m_desktops</ref>.isEmpty()<sp/>?<sp/>-1<sp/>:<sp/><ref refid="class_k_win_1_1_window_1a11f83e606efc5d90143b2d396e39e3ec" kindref="member">m_desktops</ref>.last()-&gt;x11DesktopNumber();</highlight></codeline>
<codeline lineno="4605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"></highlight></codeline>
<codeline lineno="4611" refid="class_k_win_1_1_x11_window_1ac6dee2b4e4c8688dcf37ca08c16a0090" refkind="member"><highlight class="normal">QByteArray<sp/><ref refid="class_k_win_1_1_x11_window_1ac6dee2b4e4c8688dcf37ca08c16a0090" kindref="member">X11Window::sessionId</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4612"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>result<sp/>=<sp/><ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref>(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>(),<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;sm_client_id);</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.isEmpty()<sp/>&amp;&amp;<sp/>m_wmClientLeader<sp/>&amp;&amp;<sp/>m_wmClientLeader<sp/>!=<sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref>(m_wmClientLeader,<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;sm_client_id);</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"></highlight></codeline>
<codeline lineno="4624" refid="class_k_win_1_1_x11_window_1a02c63caa6bc293c149df845967c743a4" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_x11_window_1a02c63caa6bc293c149df845967c743a4" kindref="member">X11Window::wmCommand</ref>()</highlight></codeline>
<codeline lineno="4625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>result<sp/>=<sp/><ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref>(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>(),<sp/>XCB_ATOM_WM_COMMAND);</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.isEmpty()<sp/>&amp;&amp;<sp/>m_wmClientLeader<sp/>&amp;&amp;<sp/>m_wmClientLeader<sp/>!=<sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_k_win_1_1_xcb_1_1_string_property" kindref="compound">Xcb::StringProperty</ref>(m_wmClientLeader,<sp/>XCB_ATOM_WM_COMMAND);</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/>result.replace(0,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"></highlight></codeline>
<codeline lineno="4638" refid="class_k_win_1_1_x11_window_1ac8f91f3f06cbfe41d1f61204c9aa6a39" refkind="member"><highlight class="normal">xcb_window_t<sp/><ref refid="class_k_win_1_1_x11_window_1ac8f91f3f06cbfe41d1f61204c9aa6a39" kindref="member">X11Window::wmClientLeader</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4639"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_wmClientLeader<sp/>!=<sp/>XCB_WINDOW_NONE)<sp/>{</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wmClientLeader;</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>();</highlight></codeline>
<codeline lineno="4644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"></highlight></codeline>
<codeline lineno="4646"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::getWmClientMachine()</highlight></codeline>
<codeline lineno="4647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/>clientMachine()-&gt;resolve(window(),<sp/>wmClientLeader());</highlight></codeline>
<codeline lineno="4649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"></highlight></codeline>
<codeline lineno="4651"><highlight class="normal">Xcb::Property<sp/>X11Window::fetchSkipCloseAnimation()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4652"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Xcb::Property(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>window(),<sp/>atoms-&gt;<ref refid="class_k_win_1_1_atoms_1a0056fba382aa5f7dde3f02e5a0aac8c5" kindref="member">kde_skip_close_animation</ref>,<sp/>XCB_ATOM_CARDINAL,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="4654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"></highlight></codeline>
<codeline lineno="4656"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::readSkipCloseAnimation(Xcb::Property<sp/>&amp;property)</highlight></codeline>
<codeline lineno="4657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/>setSkipCloseAnimation(property.toBool());</highlight></codeline>
<codeline lineno="4659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"></highlight></codeline>
<codeline lineno="4661"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::getSkipCloseAnimation()</highlight></codeline>
<codeline lineno="4662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/>Xcb::Property<sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal"><sp/>=<sp/>fetchSkipCloseAnimation();</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/>readSkipCloseAnimation(property);</highlight></codeline>
<codeline lineno="4665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"></highlight></codeline>
<codeline lineno="4667"><highlight class="normal"></highlight><highlight class="comment">//********************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4668"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4669"><highlight class="normal"></highlight><highlight class="comment">//********************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4670"><highlight class="normal"></highlight></codeline>
<codeline lineno="4671" refid="class_k_win_1_1_x11_window_1aa6d818043d5d2f1f757d18f560d9c71e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1aa6d818043d5d2f1f757d18f560d9c71e" kindref="member">X11Window::updateUserTime</ref>(xcb_timestamp_t<sp/>time)</highlight></codeline>
<codeline lineno="4672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copied<sp/>in<sp/>Group::updateUserTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>==<sp/>XCB_TIME_CURRENT_TIME)<sp/>{</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwinApp()-&gt;updateXTime();</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><ref refid="namespace_k_win_1a71cc78d22f170a8c6639a9d83694fb8a" kindref="member">xTime</ref>();</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>!=<sp/>-1U</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(m_userTime<sp/>==<sp/>XCB_TIME_CURRENT_TIME</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>NET::timestampCompare(time,<sp/>m_userTime)<sp/>&gt;<sp/>0))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>time<sp/>&gt;<sp/>user_time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_userTime<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shade_below<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>hover<sp/>re-shade<sp/>a<sp/>window<sp/>after<sp/>it<sp/>got<sp/>interaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;updateUserTime(m_userTime);</highlight></codeline>
<codeline lineno="4685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"></highlight></codeline>
<codeline lineno="4687"><highlight class="normal">xcb_timestamp_t<sp/>X11Window::readUserCreationTime()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4688"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xcb_1_1_property" kindref="compound">Xcb::Property</ref><sp/>prop(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>window(),<sp/><ref refid="namespace_k_win_1a1d99bcde3a1a935984180c0f6a367886" kindref="member">atoms</ref>-&gt;kde_net_wm_user_creation_time,<sp/>XCB_ATOM_CARDINAL,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prop.value&lt;xcb_timestamp_t&gt;(-1);</highlight></codeline>
<codeline lineno="4691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"></highlight></codeline>
<codeline lineno="4693"><highlight class="normal">xcb_timestamp_t<sp/>X11Window::readUserTimeMapTimestamp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KStartupInfoId<sp/>*asn_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KStartupInfoData<sp/>*asn_data,</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>session)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4695"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_timestamp_t<sp/>time<sp/>=<sp/>info-&gt;userTime();</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>qDebug()<sp/>&lt;&lt;<sp/>&quot;User<sp/>timestamp,<sp/>initial:&quot;<sp/>&lt;&lt;<sp/>time;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//^^<sp/>this<sp/>deadlocks<sp/>kwin<sp/>--replace<sp/>sometimes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4699"><highlight class="normal"></highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>newer<sp/>ASN<sp/>timestamp<sp/>always<sp/>replaces<sp/>user<sp/>timestamp,<sp/>unless<sp/>user<sp/>timestamp<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>helps<sp/>e.g.<sp/>with<sp/>konqy<sp/>reusing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(asn_data<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>time<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(asn_id-&gt;timestamp()<sp/>!=<sp/>0</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(time<sp/>==<sp/>-1U<sp/>||<sp/>NET::timestampCompare(asn_id-&gt;timestamp(),<sp/>time)<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>asn_id-&gt;timestamp();</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>timestamp,<sp/>ASN:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>time;</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>==<sp/>-1U)<sp/>{</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>doesn&apos;t<sp/>have<sp/>any<sp/>timestamp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>the<sp/>first<sp/>window<sp/>for<sp/>its<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(i.e.<sp/>there&apos;s<sp/>no<sp/>other<sp/>window<sp/>from<sp/>the<sp/>same<sp/>app),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>_KDE_NET_WM_USER_CREATION_TIME<sp/>trick.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>refuse<sp/>activation<sp/>of<sp/>a<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>already<sp/>running<sp/>application<sp/>if<sp/>this<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>not<sp/>the<sp/>active<sp/>one<sp/>(unless<sp/>focus<sp/>stealing<sp/>prevention<sp/>is<sp/>turned<sp/>off).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X11Window<sp/>*act<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">X11Window<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a0a94c694f53fc655c0a257c0e17a7db3" kindref="member">mostRecentlyActivatedWindow</ref>());</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(act<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!belongToSameApplication(act,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SameApplicationCheck::RelaxedForActive))<sp/>{</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first_window<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sameApplicationActiveHackPredicate<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X11Window<sp/>*cl)<sp/>{</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>already<sp/>existing<sp/>splashes,<sp/>toolbars,<sp/>utilities<sp/>and<sp/>menus,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>the<sp/>app<sp/>may<sp/>show<sp/>those<sp/>before<sp/>the<sp/>main<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!cl-&gt;<ref refid="class_k_win_1_1_window_1aa0179fdd1c6fee664b5401f61f35e493" kindref="member">isSplash</ref>()<sp/>&amp;&amp;<sp/>!cl-&gt;<ref refid="class_k_win_1_1_window_1a5fa248e56c9434f4d7002528b360a092" kindref="member">isToolbar</ref>()<sp/>&amp;&amp;<sp/>!cl-&gt;<ref refid="class_k_win_1_1_window_1af7a970e5b2da43bc372f9fa79daec492" kindref="member">isUtility</ref>()<sp/>&amp;&amp;<sp/>!cl-&gt;<ref refid="class_k_win_1_1_window_1a80fbfd7990c3c58f2b61a00e0f94b87d" kindref="member">isMenu</ref>()</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>cl<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>X11Window::belongToSameApplication(cl,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SameApplicationCheck::RelaxedForActive);</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isTransient())<sp/>{</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>clientMainClients<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;X11Window<sp/>*&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mcs<sp/>=<sp/>mainWindows();</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mc<sp/>:<sp/>mcs)<sp/>{</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(X11Window<sp/>*c<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">X11Window<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mc))<sp/>{</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>&lt;&lt;<sp/>c;</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(act-&gt;hasTransient(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>is<sp/>transient<sp/>for<sp/>currently<sp/>active<sp/>window,<sp/>even<sp/>though<sp/>it&apos;s<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>same<sp/>app<sp/>(e.g.<sp/>kcookiejar<sp/>dialog)<sp/>-&gt;<sp/>allow<sp/>activation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(groupTransient()<sp/>&amp;&amp;<sp/>findInList&lt;X11Window,<sp/>X11Window&gt;(clientMainClients(),<sp/>sameApplicationActiveHackPredicate)<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>standalone<sp/>transient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_window<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;findClient(sameApplicationActiveHackPredicate))<sp/>{</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_window<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>refuse<sp/>if<sp/>focus<sp/>stealing<sp/>prevention<sp/>is<sp/>turned<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first_window<sp/>&amp;&amp;<sp/>rules()-&gt;checkFSP(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;<ref refid="class_k_win_1_1_options_1a130368bda57abc3d49fedda58fc03f8e" kindref="member">focusStealingPreventionLevel</ref>())<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>timestamp,<sp/>already<sp/>exists:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>0;</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>refuse<sp/>activation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Creation<sp/>time<sp/>would<sp/>just<sp/>mess<sp/>things<sp/>up<sp/>during<sp/>session<sp/>startup,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>possibly<sp/>many<sp/>apps<sp/>are<sp/>started<sp/>up<sp/>at<sp/>the<sp/>same<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there&apos;s<sp/>no<sp/>active<sp/>window<sp/>yet,<sp/>no<sp/>timestamp<sp/>will<sp/>be<sp/>needed,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>plain<sp/>Workspace::allowWindowActivation()<sp/>will<sp/>return<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>such<sp/>case.<sp/>And<sp/>if<sp/>there&apos;s<sp/>already<sp/>active<sp/>window,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>better<sp/>not<sp/>to<sp/>activate<sp/>the<sp/>new<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unless<sp/>it<sp/>was<sp/>the<sp/>active<sp/>window<sp/>at<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>session<sp/>saving<sp/>and<sp/>there<sp/>was<sp/>no<sp/>user<sp/>interaction<sp/>yet,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>check<sp/>will<sp/>be<sp/>done<sp/>in<sp/>manage().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(session)<sp/>{</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1U;</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>readUserCreationTime();</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>timestamp,<sp/>final:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>time;</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time;</highlight></codeline>
<codeline lineno="4774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"></highlight></codeline>
<codeline lineno="4776" refid="class_k_win_1_1_x11_window_1ada9945f8884ca782481cb3fbfb8f33ea" refkind="member"><highlight class="normal">xcb_timestamp_t<sp/><ref refid="class_k_win_1_1_x11_window_1ada9945f8884ca782481cb3fbfb8f33ea" kindref="member">X11Window::userTime</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4777"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_timestamp_t<sp/>time<sp/>=<sp/>m_userTime;</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>want<sp/>focus<sp/>after<sp/>showing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>==<sp/>-1U</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;<ref refid="class_k_win_1_1_x11_window_1ada9945f8884ca782481cb3fbfb8f33ea" kindref="member">userTime</ref>()<sp/>!=<sp/>-1U</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>NET::timestampCompare(<ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;<ref refid="class_k_win_1_1_x11_window_1ada9945f8884ca782481cb3fbfb8f33ea" kindref="member">userTime</ref>(),<sp/>time)<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;userTime();</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time;</highlight></codeline>
<codeline lineno="4789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"></highlight></codeline>
<codeline lineno="4791" refid="class_k_win_1_1_x11_window_1a4fa8ec1c4db212569b556385ecb1ee01" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a4fa8ec1c4db212569b556385ecb1ee01" kindref="member">X11Window::doSetActive</ref>()</highlight></codeline>
<codeline lineno="4792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/>updateUrgency();<sp/></highlight><highlight class="comment">//<sp/>demand<sp/>attention<sp/>again<sp/>if<sp/>it&apos;s<sp/>still<sp/>urgent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;setState(<ref refid="class_k_win_1_1_window_1a8466be38391212ef29a4c880506eb069" kindref="member">isActive</ref>()<sp/>?<sp/>NET::Focused<sp/>:<sp/>NET::States(),<sp/>NET::Focused);</highlight></codeline>
<codeline lineno="4798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"></highlight></codeline>
<codeline lineno="4800"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::startupIdChanged()</highlight></codeline>
<codeline lineno="4801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/>KStartupInfoId<sp/>asn_id;</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/>KStartupInfoData<sp/>asn_data;</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>asn_valid<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;checkStartupNotification(window(),<sp/>asn_id,<sp/>asn_data);</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!asn_valid)<sp/>{</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>ASN<sp/>contains<sp/>desktop,<sp/>move<sp/>it<sp/>to<sp/>the<sp/>desktop,<sp/>otherwise<sp/>move<sp/>it<sp/>to<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>desktop<sp/>(since<sp/>the<sp/>new<sp/>ASN<sp/>should<sp/>make<sp/>the<sp/>window<sp/>act<sp/>like<sp/>if<sp/>it&apos;s<sp/>a<sp/>new<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>launched).<sp/>However<sp/>don&apos;t<sp/>affect<sp/>the<sp/>window&apos;s<sp/>desktop<sp/>if<sp/>it&apos;s<sp/>set<sp/>to<sp/>be<sp/>on<sp/>all<sp/>desktops.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4811"><highlight class="normal"></highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(asn_data.desktop()<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>!isOnAllDesktops())<sp/>{</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(asn_data.desktop()<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workspace()-&gt;<ref refid="class_k_win_1_1_workspace_1aafd74ab8d80e9d862429bcbab25838e3" kindref="member">sendWindowToDesktops</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>{},<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(VirtualDesktop<sp/>*desktop<sp/>=<sp/>VirtualDesktopManager::self()-&gt;desktopForX11Id(asn_data.desktop()))<sp/>{</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aafd74ab8d80e9d862429bcbab25838e3" kindref="member">sendWindowToDesktops</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>{desktop},<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"></highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(asn_data.xinerama()<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output<sp/>*output<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aef0b408ec096ffd9e3e63d507bfeeca6" kindref="member">xineramaIndexToOutput</ref>(asn_data.xinerama());</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output)<sp/>{</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendToOutput(output);</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xcb_timestamp_t<sp/>timestamp<sp/>=<sp/>asn_id.timestamp();</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timestamp<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>activate<sp/>=<sp/>allowWindowActivation(timestamp);</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(activate)<sp/>{</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" kindref="member">activateWindow</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>demandAttention();</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"></highlight></codeline>
<codeline lineno="4839"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::updateUrgency()</highlight></codeline>
<codeline lineno="4840"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;urgency())<sp/>{</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>demandAttention();</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"></highlight></codeline>
<codeline lineno="4846" refid="namespace_k_win_1_1_f_s_p" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1_1_f_s_p" kindref="compound">FSP</ref></highlight></codeline>
<codeline lineno="4847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4848" refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cf" kindref="member">Level</ref><sp/>{</highlight></codeline>
<codeline lineno="4849" refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfab69dce4112fccda0d2d09cfeb3fe3a55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfab69dce4112fccda0d2d09cfeb3fe3a55" kindref="member">None</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="4850" refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfafa213bb13da614d60badda74cd418c0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfafa213bb13da614d60badda74cd418c0b" kindref="member">Low</ref>,</highlight></codeline>
<codeline lineno="4851" refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfa7eb19f58f9eb4ed5931e8de9d025bbaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfa7eb19f58f9eb4ed5931e8de9d025bbaa" kindref="member">Medium</ref>,</highlight></codeline>
<codeline lineno="4852" refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfa00274e620d2c91a1e36fba097594ca6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfa00274e620d2c91a1e36fba097594ca6a" kindref="member">High</ref>,</highlight></codeline>
<codeline lineno="4853" refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfa672ba423f258e07b168d4f33f4b04484" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfa672ba423f258e07b168d4f33f4b04484" kindref="member">Extreme</ref>,</highlight></codeline>
<codeline lineno="4854"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"></highlight></codeline>
<codeline lineno="4857"><highlight class="normal"></highlight><highlight class="comment">//<sp/>focus_in<sp/>-&gt;<sp/>the<sp/>window<sp/>got<sp/>FocusIn<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4858" refid="class_k_win_1_1_x11_window_1ac4ea0281b6dd47dc2eadc44c5b824b0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1ac4ea0281b6dd47dc2eadc44c5b824b0d" kindref="member">X11Window::allowWindowActivation</ref>(xcb_timestamp_t<sp/>time,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>focus_in)</highlight></codeline>
<codeline lineno="4859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>options-&gt;focusStealingPreventionLevel<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>-<sp/>none<sp/><sp/><sp/><sp/>-<sp/>old<sp/>KWin<sp/>behaviour,<sp/>new<sp/>windows<sp/>always<sp/>get<sp/>focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/>low<sp/><sp/><sp/><sp/><sp/>-<sp/>focus<sp/>stealing<sp/>prevention<sp/>is<sp/>applied<sp/>normally,<sp/>when<sp/>unsure,<sp/>activation<sp/>is<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/>normal<sp/><sp/>-<sp/>focus<sp/>stealing<sp/>prevention<sp/>is<sp/>applied<sp/>normally,<sp/>when<sp/>unsure,<sp/>activation<sp/>is<sp/>not<sp/>allowed,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>is<sp/>the<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/>high<sp/><sp/><sp/><sp/>-<sp/>new<sp/>window<sp/>gets<sp/>focus<sp/>only<sp/>if<sp/>it<sp/>belongs<sp/>to<sp/>the<sp/>active<sp/>application,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>when<sp/>no<sp/>window<sp/>is<sp/>currently<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4<sp/>-<sp/>extreme<sp/>-<sp/>no<sp/>window<sp/>gets<sp/>focus<sp/>without<sp/>user<sp/>intervention</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>==<sp/>-1U)<sp/>{</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>-&gt;userTime();</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cf" kindref="member">FSP::Level</ref><sp/>level<sp/>=<sp/>(<ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cf" kindref="member">FSP::Level</ref>)<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>-&gt;rules()-&gt;checkFSP(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;focusStealingPreventionLevel());</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;sessionManager()-&gt;state()<sp/>==<sp/><ref refid="namespace_k_win_1a416cef954a72080ddb0d040111f008dca4e11db406c6c9f234fe8579cc9bc5ef6" kindref="member">SessionState::Saving</ref><sp/>&amp;&amp;<sp/>level<sp/>&lt;=<sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfa7eb19f58f9eb4ed5931e8de9d025bbaa" kindref="member">FSP::Medium</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>&lt;=<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_1a1f57b5fc7e5ebf9060435cacce04349d" kindref="member">Window</ref><sp/>*ac<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;mostRecentlyActivatedWindow();</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focus_in)<sp/>{</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;inShouldGetFocus(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>FocusIn<sp/>was<sp/>result<sp/>of<sp/>KWin&apos;s<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>getting<sp/>FocusIn,<sp/>the<sp/>active<sp/>Client<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>got<sp/>FocusOut,<sp/>and<sp/>therefore<sp/>got<sp/>deactivated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ac<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;lastActiveWindow();</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>explicitly<sp/>asked<sp/>not<sp/>to<sp/>get<sp/>focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>-&gt;rules()-&gt;checkAcceptFocus(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cf" kindref="member">FSP::Level</ref><sp/>protection<sp/>=<sp/>(<ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cf" kindref="member">FSP::Level</ref>)(ac<sp/>?<sp/>ac-&gt;<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;<ref refid="class_k_win_1_1_window_rules_1a7d783ee0776131c6956b916ab0dca29f" kindref="member">checkFPP</ref>(2)<sp/>:<sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfab69dce4112fccda0d2d09cfeb3fe3a55" kindref="member">FSP::None</ref>);</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"></highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stealing<sp/>is<sp/>unconditionally<sp/>allowed<sp/>(NETWM<sp/>behavior)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfab69dce4112fccda0d2d09cfeb3fe3a55" kindref="member">FSP::None</ref><sp/>||<sp/>protection<sp/>==<sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfab69dce4112fccda0d2d09cfeb3fe3a55" kindref="member">FSP::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"></highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>active<sp/>window<sp/>&quot;grabs&quot;<sp/>the<sp/>focus<sp/>or<sp/>stealing<sp/>is<sp/>generally<sp/>forbidden</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfa672ba423f258e07b168d4f33f4b04484" kindref="member">FSP::Extreme</ref><sp/>||<sp/>protection<sp/>==<sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfa672ba423f258e07b168d4f33f4b04484" kindref="member">FSP::Extreme</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"></highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>active<sp/>window,<sp/>it&apos;s<sp/>ok<sp/>to<sp/>pass<sp/>focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTICE<sp/>that<sp/>extreme<sp/>protection<sp/>needs<sp/>to<sp/>be<sp/>handled<sp/>before<sp/>to<sp/>allow<sp/>protection<sp/>on<sp/>unmanged<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ac<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>ac-&gt;<ref refid="class_k_win_1_1_window_1ab56044e6eff0cd7e2a144756834c0751" kindref="member">isDesktop</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Activation:<sp/>No<sp/>window<sp/>active,<sp/>allowing&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>active<sp/>window<sp/>-&gt;<sp/>always<sp/>allow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"></highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>window<sp/>urgency<sp/><sp/>-&gt;<sp/>return<sp/>true?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4910"><highlight class="normal"></highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unconditionally<sp/>allow<sp/>intra-window<sp/>passing<sp/>around<sp/>for<sp/>lower<sp/>stealing<sp/>protections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unless<sp/>the<sp/>active<sp/>window<sp/>has<sp/>High<sp/>interest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1af6b077eadf47fd68373d43f94eef23ad" kindref="member">Window::belongToSameApplication</ref>(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>,<sp/>ac,<sp/><ref refid="class_k_win_1_1_window_1a70e1b60416c67a488268d17dba135ecaa3852083c5b74bec23d5e3ff0964693be" kindref="member">Window::SameApplicationCheck::RelaxedForActive</ref>)<sp/>&amp;&amp;<sp/>protection<sp/>&lt;<sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfa00274e620d2c91a1e36fba097594ca6a" kindref="member">FSP::High</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Activation:<sp/>Belongs<sp/>to<sp/>active<sp/>application&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"></highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>High<sp/>FPS,<sp/>not<sp/>intr-window<sp/>change.<sp/>Only<sp/>allow<sp/>if<sp/>the<sp/>active<sp/>window<sp/>has<sp/>only<sp/>minor<sp/>interest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>&gt;<sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfa7eb19f58f9eb4ed5931e8de9d025bbaa" kindref="member">FSP::Medium</ref><sp/>&amp;&amp;<sp/>protection<sp/>&gt;<sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfafa213bb13da614d60badda74cd418c0b" kindref="member">FSP::Low</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"></highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>==<sp/>-1U)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>no<sp/>time<sp/>known</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Activation:<sp/>No<sp/>timestamp<sp/>at<sp/>all&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>allow<sp/>for<sp/>Low<sp/>protection<sp/>unless<sp/>active<sp/>window<sp/>has<sp/>High<sp/>interest<sp/>in<sp/>focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>&lt;<sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfa7eb19f58f9eb4ed5931e8de9d025bbaa" kindref="member">FSP::Medium</ref><sp/>&amp;&amp;<sp/>protection<sp/>&lt;<sp/><ref refid="namespace_k_win_1_1_f_s_p_1a5728725922e6a43f6542c49699d7a3cfa00274e620d2c91a1e36fba097594ca6a" kindref="member">FSP::High</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>timestamp<sp/>at<sp/>all,<sp/>don&apos;t<sp/>activate<sp/>-<sp/>because<sp/>there&apos;s<sp/>also<sp/>creation<sp/>timestamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>done<sp/>on<sp/>CreateNotify,<sp/>this<sp/>case<sp/>should<sp/>happen<sp/>only<sp/>in<sp/>case<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maps<sp/>again<sp/>already<sp/>used<sp/>window,<sp/>i.e.<sp/>this<sp/>won&apos;t<sp/>happen<sp/>after<sp/>app<sp/>startup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"></highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Low<sp/>or<sp/>medium<sp/>FSP,<sp/>usertime<sp/>comparism<sp/>is<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xcb_timestamp_t<sp/>user_time<sp/>=<sp/>ac-&gt;<ref refid="class_k_win_1_1_window_1a24616d29b6a97cb4b9146cd8dac3f5f8" kindref="member">userTime</ref>();</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Activation,<sp/>compared:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>time<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>user_time</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(NET::timestampCompare(time,<sp/>user_time)<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NET::timestampCompare(time,<sp/>user_time)<sp/>&gt;=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>time<sp/>&gt;=<sp/>user_time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"></highlight></codeline>
<codeline lineno="4942" refid="class_k_win_1_1_x11_window_1a1dee043d082cfa70ef4bd172c5e7db40" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a1dee043d082cfa70ef4bd172c5e7db40" kindref="member">X11Window::restackWindow</ref>(xcb_window_t<sp/>above,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>detail,<sp/>NET::RequestSource<sp/>src,<sp/>xcb_timestamp_t<sp/>timestamp)</highlight></codeline>
<codeline lineno="4943"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*other<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;findClient(<ref refid="namespace_k_win_1aef6c3d1a0fcb5309953ca3229d42378daeea59f1acf581bd67c4ce7b102f5b48d" kindref="member">Predicate::WindowMatch</ref>,<sp/>above);</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(detail<sp/>==<sp/>XCB_STACK_MODE_OPPOSITE)<sp/>{</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!other)<sp/>{</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;raiseOrLowerWindow(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stack<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;stackingOrder();</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1a1f57b5fc7e5ebf9060435cacce04349d" kindref="member">Window</ref><sp/>*<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref><sp/>:<sp/>stack)<sp/>{</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref><sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail<sp/>=<sp/>XCB_STACK_MODE_ABOVE;</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref><sp/>==<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail<sp/>=<sp/>XCB_STACK_MODE_BELOW;</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(detail<sp/>==<sp/>XCB_STACK_MODE_TOP_IF)<sp/>{</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other<sp/>&amp;&amp;<sp/>other-&gt;<ref refid="class_k_win_1_1_window_1a0cd1f979061accdf5d743f3089360132" kindref="member">frameGeometry</ref>().intersects(<ref refid="class_k_win_1_1_window_1a0cd1f979061accdf5d743f3089360132" kindref="member">frameGeometry</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;raiseWindowRequest(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>src,<sp/>timestamp);</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(detail<sp/>==<sp/>XCB_STACK_MODE_BOTTOM_IF)<sp/>{</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other<sp/>&amp;&amp;<sp/>other-&gt;<ref refid="class_k_win_1_1_window_1a0cd1f979061accdf5d743f3089360132" kindref="member">frameGeometry</ref>().intersects(<ref refid="class_k_win_1_1_window_1a0cd1f979061accdf5d743f3089360132" kindref="member">frameGeometry</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;lowerWindowRequest(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>src,<sp/>timestamp);</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"></highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(detail<sp/>==<sp/>XCB_STACK_MODE_ABOVE)<sp/>{</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other)<sp/>{</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;stackAbove(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>other);</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;raiseWindowRequest(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>src,<sp/>timestamp);</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(detail<sp/>==<sp/>XCB_STACK_MODE_BELOW)<sp/>{</highlight></codeline>
<codeline lineno="4979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other)<sp/>{</highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;stackBelow(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>other);</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;lowerWindowRequest(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>src,<sp/>timestamp);</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"></highlight></codeline>
<codeline lineno="4987" refid="class_k_win_1_1_x11_window_1a8720a4715ab6ba47d1e1b1269990353c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a8720a4715ab6ba47d1e1b1269990353c" kindref="member">X11Window::belongsToDesktop</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4988"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>members<sp/>=<sp/><ref refid="class_k_win_1_1_x11_window_1ad00fe111dfb7ae782ad657eb684e8633" kindref="member">group</ref>()-&gt;members();</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window_1a21436db429ad1b82c39b129b44a285ac" kindref="member">X11Window</ref><sp/>*<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref><sp/>:<sp/>members)<sp/>{</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window_1abb09d9e05765e00997b34c4906e2d8b0" kindref="member">window</ref>-&gt;isDesktop())<sp/>{</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"></highlight></codeline>
<codeline lineno="4998"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X11Window::setShortcutInternal()</highlight></codeline>
<codeline lineno="4999"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/>updateCaption();</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;windowShortcutUpdated(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Workaround<sp/>for<sp/>kwin&lt;-&gt;kglobalaccel<sp/>deadlock,<sp/>when<sp/>KWin<sp/>has<sp/>X<sp/>grab<sp/>and<sp/>the<sp/>kded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kglobalaccel<sp/>module<sp/>tries<sp/>to<sp/>create<sp/>the<sp/>key<sp/>grab.<sp/>KWin<sp/>should<sp/>preferably<sp/>grab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>they<sp/>keys<sp/>itself<sp/>anyway<sp/>:(.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/>QTimer::singleShot(0,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::bind(&amp;<ref refid="class_k_win_1_1_workspace_1a1eaf4d87030b43f87e63161e3a5edc64" kindref="member">Workspace::windowShortcutUpdated</ref>,<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>(),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"></highlight></codeline>
<codeline lineno="5011"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5012"><highlight class="normal"></highlight></codeline>
<codeline lineno="5013"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_x11window.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/x11window.cpp"/>
  </compounddef>
</doxygen>
