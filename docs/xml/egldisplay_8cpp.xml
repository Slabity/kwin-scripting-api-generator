<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="egldisplay_8cpp" kind="file" language="C++">
    <compoundname>egldisplay.cpp</compoundname>
    <includes refid="egldisplay_8h" local="yes">egldisplay.h</includes>
    <includes refid="drmdevice_8h" local="yes">core/drmdevice.h</includes>
    <includes refid="graphicsbuffer_8h" local="yes">core/graphicsbuffer.h</includes>
    <includes refid="eglutils__p_8h" local="yes">opengl/eglutils_p.h</includes>
    <includes refid="glutils_8h" local="yes">opengl/glutils.h</includes>
    <includes refid="common_8h" local="yes">utils/common.h</includes>
    <includes local="no">QOpenGLContext</includes>
    <includes local="no">drm_fourcc.h</includes>
    <includes refid="drm__format__helper_8h" local="no">utils/drm_format_helper.h</includes>
    <incdepgraph>
      <node id="20">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>core/drmdevice.h</label>
        <link refid="drmdevice_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>graphicsbufferallocator.h</label>
        <link refid="graphicsbufferallocator_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>opengl/eglcontext.h</label>
        <link refid="eglcontext_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/opengl/egldisplay.cpp</label>
        <link refid="egldisplay_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>egldisplay.h</label>
        <link refid="egldisplay_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>opengl/eglutils_p.h</label>
        <link refid="eglutils__p_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>opengl/glframebuffer.h</label>
        <link refid="glframebuffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>opengl/glshader.h</label>
        <link refid="glshader_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>opengl/glshadermanager.h</label>
        <link refid="glshadermanager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>opengl/gltexture.h</label>
        <link refid="gltexture_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>opengl/glutils.h</label>
        <link refid="glutils_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>utils/drm_format_helper.h</label>
        <link refid="drm__format__helper_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>QByteArray</label>
      </node>
      <node id="45">
        <label>QColor</label>
      </node>
      <node id="30">
        <label>QCoreApplication</label>
      </node>
      <node id="35">
        <label>QDebug</label>
      </node>
      <node id="38">
        <label>QExplicitlySharedDataPointer</label>
      </node>
      <node id="49">
        <label>QFlags</label>
      </node>
      <node id="5">
        <label>QHash</label>
      </node>
      <node id="31">
        <label>QImage</label>
      </node>
      <node id="6">
        <label>QList</label>
      </node>
      <node id="57">
        <label>QLoggingCategory</label>
      </node>
      <node id="46">
        <label>QMatrix3x3</label>
      </node>
      <node id="22">
        <label>QMatrix4x4</label>
      </node>
      <node id="15">
        <label>QObject</label>
      </node>
      <node id="18">
        <label>QOpenGLContext</label>
      </node>
      <node id="32">
        <label>QPoint</label>
      </node>
      <node id="36">
        <label>QRect</label>
      </node>
      <node id="39">
        <label>QRegion</label>
      </node>
      <node id="7">
        <label>QSize</label>
      </node>
      <node id="42">
        <label>QStack</label>
      </node>
      <node id="11">
        <label>QString</label>
      </node>
      <node id="37">
        <label>QUuid</label>
      </node>
      <node id="33">
        <label>QVariant</label>
      </node>
      <node id="23">
        <label>QVector2D</label>
      </node>
      <node id="47">
        <label>QVector3D</label>
      </node>
      <node id="58">
        <label>climits</label>
      </node>
      <node id="29">
        <label>config-kwin.h</label>
      </node>
      <node id="59">
        <label>drm_fourcc.h</label>
      </node>
      <node id="8">
        <label>epoxy/egl.h</label>
      </node>
      <node id="40">
        <label>epoxy/gl.h</label>
      </node>
      <node id="55">
        <label>functional</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
      <node id="61">
        <label>libdrm/drm_fourcc.h</label>
      </node>
      <node id="50">
        <label>map</label>
      </node>
      <node id="51">
        <label>memory</label>
      </node>
      <node id="21">
        <label>optional</label>
      </node>
      <node id="53">
        <label>ranges</label>
      </node>
      <node id="54">
        <label>span</label>
      </node>
      <node id="62">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>sys/types.h</label>
      </node>
      <node id="16">
        <label>utility</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="egldisplay_8cpp_1a5e3f14a21b42b67995336a0850f18e00" prot="public" static="no">
        <name>EGL_DRM_RENDER_NODE_FILE_EXT</name>
        <initializer>0x3377</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.cpp" line="21" column="9" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="egldisplay_8h" kindref="compound">egldisplay.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drmdevice_8h" kindref="compound">core/drmdevice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graphicsbuffer_8h" kindref="compound">core/graphicsbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eglutils__p_8h" kindref="compound">opengl/eglutils_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glutils_8h" kindref="compound">opengl/glutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">utils/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QOpenGLContext&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drm_fourcc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="drm__format__helper_8h" kindref="compound">utils/drm_format_helper.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EGL_DRM_RENDER_NODE_FILE_EXT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="egldisplay_8cpp_1a5e3f14a21b42b67995336a0850f18e00" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EGL_DRM_RENDER_NODE_FILE_EXT<sp/>0x3377</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_k_win_1_1_egl_display_1a48f9f20fa49507f68cd791d6de1acc96" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_display_1a48f9f20fa49507f68cd791d6de1acc96" kindref="member">EglDisplay::shouldUseOpenGLES</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qstrcmp(qgetenv(</highlight><highlight class="stringliteral">&quot;KWIN_COMPOSE&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;O2ES&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QOpenGLContext::openGLModuleType()<sp/>==<sp/>QOpenGLContext::LibGLES;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_k_win_1_1_egl_display_1a4074b80fc73f62e385c3d8f3101e9358" refkind="member"><highlight class="normal">std::unique_ptr&lt;EglDisplay&gt;<sp/><ref refid="class_k_win_1_1_egl_display_1a4074b80fc73f62e385c3d8f3101e9358" kindref="member">EglDisplay::create</ref>(::EGLDisplay<sp/>display,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>owning)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!display)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>EGLint<sp/>major,<sp/>minor;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eglInitialize(display,<sp/>&amp;major,<sp/>&amp;minor)<sp/>==<sp/>EGL_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;eglInitialize<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EGLint<sp/>error<sp/>=<sp/>eglGetError();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>EGL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>during<sp/>eglInitialize<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>error;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>EGLint<sp/>error<sp/>=<sp/>eglGetError();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>EGL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>during<sp/>eglInitialize<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>error;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Egl<sp/>Initialize<sp/>succeeded&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eglBindAPI(<ref refid="class_k_win_1_1_egl_display_1a48f9f20fa49507f68cd791d6de1acc96" kindref="member">shouldUseOpenGLES</ref>()<sp/>?<sp/>EGL_OPENGL_ES_API<sp/>:<sp/>EGL_OPENGL_API)<sp/>==<sp/>EGL_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;bind<sp/>OpenGL<sp/>API<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EGL<sp/>version:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>major<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>minor;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_display_1a3cfe40748ace42291d3b093eb99f670e" kindref="member">extensions</ref><sp/>=<sp/>QByteArray(eglQueryString(display,<sp/>EGL_EXTENSIONS)).split(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>requiredExtensions[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;EGL_KHR_no_config_context&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;EGL_KHR_surfaceless_context&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;extensionName<sp/>:<sp/>requiredExtensions)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_egl_display_1a3cfe40748ace42291d3b093eb99f670e" kindref="member">extensions</ref>.contains(extensionName))<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_OPENGL)<sp/>&lt;&lt;<sp/>extensionName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;extension<sp/>is<sp/>unsupported&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;EglDisplay&gt;(display,<sp/><ref refid="class_k_win_1_1_egl_display_1a3cfe40748ace42291d3b093eb99f670e" kindref="member">extensions</ref>,<sp/>owning);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::optional&lt;dev_t&gt;<sp/>devIdForFileName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;path)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>device<sp/>=<sp/><ref refid="class_k_win_1_1_drm_device_1a355652b4cd9ca9f9bf15e22d88b53345" kindref="member">DrmDevice::open</ref>(path);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>device-&gt;deviceId();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_OPENGL,<sp/></highlight><highlight class="stringliteral">&quot;couldn&apos;t<sp/>find<sp/>dev<sp/>node<sp/>for<sp/>drm<sp/>device<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>qPrintable(path));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_k_win_1_1_egl_display_1a0cb516eadbafe796c74c80c2a47d3bfd" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_egl_display_1a0cb516eadbafe796c74c80c2a47d3bfd" kindref="member">EglDisplay::EglDisplay</ref>(::EGLDisplay<sp/>display,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QByteArray&gt;<sp/>&amp;<ref refid="class_k_win_1_1_egl_display_1a3cfe40748ace42291d3b093eb99f670e" kindref="member">extensions</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>owning)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_handle(display)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_extensions(<ref refid="class_k_win_1_1_egl_display_1a3cfe40748ace42291d3b093eb99f670e" kindref="member">extensions</ref>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_owning(owning)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_renderNode(determineRenderNode())</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_renderDevNode(devIdForFileName(m_renderNode))</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsBufferAge(<ref refid="class_k_win_1_1_egl_display_1a3cfe40748ace42291d3b093eb99f670e" kindref="member">extensions</ref>.contains(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;EGL_EXT_buffer_age&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>qgetenv(</highlight><highlight class="stringliteral">&quot;KWIN_USE_BUFFER_AGE&quot;</highlight><highlight class="normal">)<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsNativeFence(<ref refid="class_k_win_1_1_egl_display_1a3cfe40748ace42291d3b093eb99f670e" kindref="member">extensions</ref>.contains(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;EGL_ANDROID_native_fence_sync&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_egl_display_1a3cfe40748ace42291d3b093eb99f670e" kindref="member">extensions</ref>.contains(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;EGL_KHR_wait_sync&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>m_functions.createImageKHR<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">PFNEGLCREATEIMAGEKHRPROC</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(eglGetProcAddress(</highlight><highlight class="stringliteral">&quot;eglCreateImageKHR&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>m_functions.destroyImageKHR<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">PFNEGLDESTROYIMAGEKHRPROC</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(eglGetProcAddress(</highlight><highlight class="stringliteral">&quot;eglDestroyImageKHR&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>m_functions.queryDmaBufFormatsEXT<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">PFNEGLQUERYDMABUFFORMATSEXTPROC</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(eglGetProcAddress(</highlight><highlight class="stringliteral">&quot;eglQueryDmaBufFormatsEXT&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>m_functions.queryDmaBufModifiersEXT<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">PFNEGLQUERYDMABUFMODIFIERSEXTPROC</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(eglGetProcAddress(</highlight><highlight class="stringliteral">&quot;eglQueryDmaBufModifiersEXT&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>m_importFormats<sp/>=<sp/>queryImportFormats();</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="class_k_win_1_1_egl_display_1a8155d3010e256d357a22b52f7d73ad14" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_egl_display_1a8155d3010e256d357a22b52f7d73ad14" kindref="member">EglDisplay::~EglDisplay</ref>()</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_owning)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eglTerminate(m_handle);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_k_win_1_1_egl_display_1a3cfe40748ace42291d3b093eb99f670e" refkind="member"><highlight class="normal">QList&lt;QByteArray&gt;<sp/><ref refid="class_k_win_1_1_egl_display_1a3cfe40748ace42291d3b093eb99f670e" kindref="member">EglDisplay::extensions</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="114"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_extensions;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_k_win_1_1_egl_display_1ac973be65040c0fd4bf08c77d65d2b96d" refkind="member"><highlight class="normal">::EGLDisplay<sp/><ref refid="class_k_win_1_1_egl_display_1ac973be65040c0fd4bf08c77d65d2b96d" kindref="member">EglDisplay::handle</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="119"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_handle;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_k_win_1_1_egl_display_1a08f9eed27e9e5b8b10547e467b5615cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_display_1a08f9eed27e9e5b8b10547e467b5615cc" kindref="member">EglDisplay::hasExtension</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="124"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_extensions.contains(name);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkExtension(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArrayView<sp/>extensions,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArrayView<sp/>extension)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>extensions.size();)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extensions[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next<sp/>=<sp/>extensions.indexOf(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/>extensions.size();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>next<sp/>-<sp/>i;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension.size()<sp/>==<sp/>size<sp/>&amp;&amp;<sp/>extensions.sliced(i,<sp/>size)<sp/>==<sp/>extension)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="class_k_win_1_1_egl_display_1a1189de407467f922eaa2b4f6b4bbab65" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_egl_display_1a1189de407467f922eaa2b4f6b4bbab65" kindref="member">EglDisplay::renderNode</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="152"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_renderNode;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_k_win_1_1_egl_display_1a6ea572460cebcafa1e634e34844e39cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_display_1a6ea572460cebcafa1e634e34844e39cc" kindref="member">EglDisplay::supportsBufferAge</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="157"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_supportsBufferAge;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="class_k_win_1_1_egl_display_1a21c5f8a9b5554d323d4792caddfc5ea3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_display_1a21c5f8a9b5554d323d4792caddfc5ea3" kindref="member">EglDisplay::supportsNativeFence</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="162"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_supportsNativeFence;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="class_k_win_1_1_egl_display_1a3d41aff8e18846ccbb69fe563e681ffc" refkind="member"><highlight class="normal"><ref refid="eglimagetexture_8h_1ac56f71530c81ade3ddaab91f45696909" kindref="member">EGLImageKHR</ref><sp/><ref refid="class_k_win_1_1_egl_display_1a3d41aff8e18846ccbb69fe563e681ffc" kindref="member">EglDisplay::importDmaBufAsImage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_dma_buf_attributes" kindref="compound">DmaBufAttributes</ref><sp/>&amp;dmabuf)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="167"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;EGLint&gt;<sp/>attribs;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>attribs.reserve(6<sp/>+<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a15ba47bf6d50be34dc01fa524675dee6" kindref="member">planeCount</ref><sp/>*<sp/>10<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>attribs<sp/>&lt;&lt;<sp/>EGL_WIDTH<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1ad5e82b69d910a1180ab274332664c88c" kindref="member">width</ref></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_HEIGHT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1ad574e4be854c8ae0f7a1b32944726ebb" kindref="member">height</ref></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_LINUX_DRM_FOURCC_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1aa8ab574dc34b0c719d7545e55806039a" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>attribs<sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE0_FD_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1ab08504d7f6b7b4d362538b0ec2c5a70b" kindref="member">fd</ref>[0].get()</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE0_OFFSET_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a58942c624074cec2f255a93d8c339a05" kindref="member">offset</ref>[0]</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE0_PITCH_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a5eb6e58a329aa242bfa64cda33eafc99" kindref="member">pitch</ref>[0];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>!=<sp/>DRM_FORMAT_MOD_INVALID)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribs<sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE0_MODIFIER_LO_EXT<sp/>&lt;&lt;<sp/>EGLint(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>&amp;<sp/>0xffffffff)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE0_MODIFIER_HI_EXT<sp/>&lt;&lt;<sp/>EGLint(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>&gt;&gt;<sp/>32);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a15ba47bf6d50be34dc01fa524675dee6" kindref="member">planeCount</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribs<sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE1_FD_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1ab08504d7f6b7b4d362538b0ec2c5a70b" kindref="member">fd</ref>[1].get()</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE1_OFFSET_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a58942c624074cec2f255a93d8c339a05" kindref="member">offset</ref>[1]</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE1_PITCH_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a5eb6e58a329aa242bfa64cda33eafc99" kindref="member">pitch</ref>[1];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>!=<sp/>DRM_FORMAT_MOD_INVALID)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribs<sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE1_MODIFIER_LO_EXT<sp/>&lt;&lt;<sp/>EGLint(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>&amp;<sp/>0xffffffff)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE1_MODIFIER_HI_EXT<sp/>&lt;&lt;<sp/>EGLint(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>&gt;&gt;<sp/>32);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a15ba47bf6d50be34dc01fa524675dee6" kindref="member">planeCount</ref><sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribs<sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE2_FD_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1ab08504d7f6b7b4d362538b0ec2c5a70b" kindref="member">fd</ref>[2].get()</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE2_OFFSET_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a58942c624074cec2f255a93d8c339a05" kindref="member">offset</ref>[2]</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE2_PITCH_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a5eb6e58a329aa242bfa64cda33eafc99" kindref="member">pitch</ref>[2];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>!=<sp/>DRM_FORMAT_MOD_INVALID)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribs<sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE2_MODIFIER_LO_EXT<sp/>&lt;&lt;<sp/>EGLint(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>&amp;<sp/>0xffffffff)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE2_MODIFIER_HI_EXT<sp/>&lt;&lt;<sp/>EGLint(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>&gt;&gt;<sp/>32);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a15ba47bf6d50be34dc01fa524675dee6" kindref="member">planeCount</ref><sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribs<sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE3_FD_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1ab08504d7f6b7b4d362538b0ec2c5a70b" kindref="member">fd</ref>[3].get()</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE3_OFFSET_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a58942c624074cec2f255a93d8c339a05" kindref="member">offset</ref>[3]</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE3_PITCH_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a5eb6e58a329aa242bfa64cda33eafc99" kindref="member">pitch</ref>[3];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>!=<sp/>DRM_FORMAT_MOD_INVALID)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribs<sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE3_MODIFIER_LO_EXT<sp/>&lt;&lt;<sp/>EGLint(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>&amp;<sp/>0xffffffff)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE3_MODIFIER_HI_EXT<sp/>&lt;&lt;<sp/>EGLint(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>&gt;&gt;<sp/>32);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>attribs<sp/>&lt;&lt;<sp/>EGL_NONE;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_display_1a8fbc5c44d4a42b51e6c1c8396e3eae58" kindref="member">createImage</ref>(EGL_NO_CONTEXT,<sp/>EGL_LINUX_DMA_BUF_EXT,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>attribs.data());</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="class_k_win_1_1_egl_display_1a46b99d6a28069bb4e18557a8ea917fc1" refkind="member"><highlight class="normal"><ref refid="eglimagetexture_8h_1ac56f71530c81ade3ddaab91f45696909" kindref="member">EGLImageKHR</ref><sp/><ref refid="class_k_win_1_1_egl_display_1a3d41aff8e18846ccbb69fe563e681ffc" kindref="member">EglDisplay::importDmaBufAsImage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_dma_buf_attributes" kindref="compound">DmaBufAttributes</ref><sp/>&amp;dmabuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>plane,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="219"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;EGLint&gt;<sp/>attribs;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>attribs.reserve(6<sp/>+<sp/>1<sp/>*<sp/>10<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>attribs<sp/>&lt;&lt;<sp/>EGL_WIDTH<sp/>&lt;&lt;<sp/>size.width()</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_HEIGHT<sp/>&lt;&lt;<sp/>size.height()</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_LINUX_DRM_FOURCC_EXT<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>attribs<sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE0_FD_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1ab08504d7f6b7b4d362538b0ec2c5a70b" kindref="member">fd</ref>[plane].get()</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE0_OFFSET_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a58942c624074cec2f255a93d8c339a05" kindref="member">offset</ref>[plane]</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE0_PITCH_EXT<sp/>&lt;&lt;<sp/>dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a5eb6e58a329aa242bfa64cda33eafc99" kindref="member">pitch</ref>[plane];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>!=<sp/>DRM_FORMAT_MOD_INVALID)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribs<sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE0_MODIFIER_LO_EXT<sp/>&lt;&lt;<sp/>EGLint(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>&amp;<sp/>0xffffffff)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>EGL_DMA_BUF_PLANE0_MODIFIER_HI_EXT<sp/>&lt;&lt;<sp/>EGLint(dmabuf.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref><sp/>&gt;&gt;<sp/>32);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>attribs<sp/>&lt;&lt;<sp/>EGL_NONE;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_display_1a8fbc5c44d4a42b51e6c1c8396e3eae58" kindref="member">createImage</ref>(EGL_NO_CONTEXT,<sp/>EGL_LINUX_DMA_BUF_EXT,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>attribs.data());</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="class_k_win_1_1_egl_display_1a684090a64e8ecadef9c5b333e2412121" refkind="member"><highlight class="normal">QHash&lt;uint32_t,<sp/>EglDisplay::DrmFormatInfo&gt;<sp/><ref refid="class_k_win_1_1_egl_display_1a684090a64e8ecadef9c5b333e2412121" kindref="member">EglDisplay::allSupportedDrmFormats</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="240"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_importFormats;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="class_k_win_1_1_egl_display_1a53a180b260d16568ae4f11d4d69f010c" refkind="member"><highlight class="normal">QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/><ref refid="class_k_win_1_1_egl_display_1a53a180b260d16568ae4f11d4d69f010c" kindref="member">EglDisplay::nonExternalOnlySupportedDrmFormats</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="245"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.reserve(m_importFormats.size());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_importFormats.constBegin(),<sp/>itEnd<sp/>=<sp/>m_importFormats.constEnd();<sp/>it<sp/>!=<sp/>itEnd;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret[it.key()]<sp/>=<sp/>it-&gt;nonExternalOnlyModifiers;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="class_k_win_1_1_egl_display_1a7254a3a49bfaa289afc16ce97536d481" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_display_1a7254a3a49bfaa289afc16ce97536d481" kindref="member">EglDisplay::isExternalOnly</ref>(uint32_t<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>uint64_t<sp/>modifier)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="255"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_importFormats.find(<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>);<sp/>it<sp/>!=<sp/>m_importFormats.end())<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;externalOnlyModifiers.contains(modifier);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">QHash&lt;uint32_t,<sp/>EglDisplay::DrmFormatInfo&gt;<sp/>EglDisplay::queryImportFormats()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="264"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_egl_display_1a08f9eed27e9e5b8b10547e467b5615cc" kindref="member">hasExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;EGL_EXT_image_dma_buf_import&quot;</highlight><highlight class="normal">))<sp/>||<sp/>!<ref refid="class_k_win_1_1_egl_display_1a08f9eed27e9e5b8b10547e467b5615cc" kindref="member">hasExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;EGL_EXT_image_dma_buf_import_modifiers&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_functions.queryDmaBufFormatsEXT<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>EGLint<sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>EGLBoolean<sp/>success<sp/>=<sp/>m_functions.queryDmaBufFormatsEXT(m_handle,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;count);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success<sp/>||<sp/>count<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;eglQueryDmaBufFormatsEXT<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>getEglErrorString();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;uint32_t&gt;<sp/>formats(count);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_functions.queryDmaBufFormatsEXT(m_handle,<sp/>count,<sp/>(EGLint<sp/>*)formats.data(),<sp/>&amp;count))<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;eglQueryDmaBufFormatsEXT<sp/>with<sp/>count&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>count<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;failed!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>getEglErrorString();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;uint32_t,<sp/>DrmFormatInfo&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>:<sp/>std::as_const(formats))<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_functions.queryDmaBufModifiersEXT<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EGLint<sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EGLBoolean<sp/>success<sp/>=<sp/>m_functions.queryDmaBufModifiersEXT(m_handle,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;count);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success<sp/>&amp;&amp;<sp/>count<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_egl_display_1_1_drm_format_info" kindref="compound">DrmFormatInfo</ref><sp/>drmFormatInfo;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drmFormatInfo.<ref refid="struct_k_win_1_1_egl_display_1_1_drm_format_info_1a4f18835e5ea76c91c505b39bdd1800d3" kindref="member">allModifiers</ref>.resize(count);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;EGLBoolean&gt;<sp/>externalOnly(count);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_functions.queryDmaBufModifiersEXT(m_handle,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>count,<sp/>drmFormatInfo.allModifiers.data(),<sp/>externalOnly.data(),<sp/>&amp;count))<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drmFormatInfo.externalOnlyModifiers<sp/>=<sp/>drmFormatInfo.allModifiers;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drmFormatInfo.nonExternalOnlyModifiers<sp/>=<sp/>drmFormatInfo.allModifiers;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>drmFormatInfo.allModifiers.size()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(externalOnly[i])<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drmFormatInfo.nonExternalOnlyModifiers.removeAll(drmFormatInfo.allModifiers[i]);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drmFormatInfo.externalOnlyModifiers.removeAll(drmFormatInfo.allModifiers[i]);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!drmFormatInfo.allModifiers.empty())<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!drmFormatInfo.allModifiers.contains(DRM_FORMAT_MOD_INVALID))<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drmFormatInfo.allModifiers.push_back(DRM_FORMAT_MOD_INVALID);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!drmFormatInfo.nonExternalOnlyModifiers.empty())<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drmFormatInfo.nonExternalOnlyModifiers.push_back(DRM_FORMAT_MOD_INVALID);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drmFormatInfo.externalOnlyModifiers.push_back(DRM_FORMAT_MOD_INVALID);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.insert(<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>drmFormatInfo);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_egl_display_1_1_drm_format_info" kindref="compound">DrmFormatInfo</ref><sp/><ref refid="namespace_k_win_1aa8297de791eb0879ff22abaaff9920e5" kindref="member">drmFormat</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1aa8297de791eb0879ff22abaaff9920e5" kindref="member">drmFormat</ref>.<ref refid="struct_k_win_1_1_egl_display_1_1_drm_format_info_1a4f18835e5ea76c91c505b39bdd1800d3" kindref="member">allModifiers</ref><sp/>=<sp/>{DRM_FORMAT_MOD_INVALID,<sp/>DRM_FORMAT_MOD_LINEAR};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1aa8297de791eb0879ff22abaaff9920e5" kindref="member">drmFormat</ref>.nonExternalOnlyModifiers<sp/>=<sp/>{DRM_FORMAT_MOD_INVALID,<sp/>DRM_FORMAT_MOD_LINEAR};</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.insert(<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/><ref refid="namespace_k_win_1aa8297de791eb0879ff22abaaff9920e5" kindref="member">drmFormat</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal">QString<sp/>EglDisplay::determineRenderNode()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="327"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*clientExtensions<sp/>=<sp/>eglQueryString(EGL_NO_DISPLAY,<sp/>EGL_EXTENSIONS);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkExtension(clientExtensions,<sp/></highlight><highlight class="stringliteral">&quot;EGL_EXT_device_query&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EGLAttrib<sp/>eglDeviceAttrib;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eglQueryDisplayAttribEXT(m_handle,<sp/>EGL_DEVICE_EXT,<sp/>&amp;eglDeviceAttrib))<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EGLDeviceEXT<sp/>eglDevice<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">EGLDeviceEXT</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(eglDeviceAttrib);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*deviceExtensions<sp/>=<sp/>eglQueryDeviceStringEXT(eglDevice,<sp/>EGL_EXTENSIONS);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkExtension(deviceExtensions,<sp/></highlight><highlight class="stringliteral">&quot;EGL_EXT_device_drm_render_node&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*node<sp/>=<sp/>eglQueryDeviceStringEXT(eglDevice,<sp/><ref refid="egldisplay_8cpp_1a5e3f14a21b42b67995336a0850f18e00" kindref="member">EGL_DRM_RENDER_NODE_FILE_EXT</ref>))<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromLocal8Bit(node);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkExtension(deviceExtensions,<sp/></highlight><highlight class="stringliteral">&quot;EGL_EXT_device_drm&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fallback<sp/>to<sp/>display<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*node<sp/>=<sp/>eglQueryDeviceStringEXT(eglDevice,<sp/>EGL_DRM_DEVICE_FILE_EXT))<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromLocal8Bit(node);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString();</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="class_k_win_1_1_egl_display_1a6d45e17d2c1031cfe6a5d8de5439bb82" refkind="member"><highlight class="normal">std::optional&lt;dev_t&gt;<sp/><ref refid="class_k_win_1_1_egl_display_1a6d45e17d2c1031cfe6a5d8de5439bb82" kindref="member">EglDisplay::renderDevNode</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="352"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_renderDevNode;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="class_k_win_1_1_egl_display_1a8fbc5c44d4a42b51e6c1c8396e3eae58" refkind="member"><highlight class="normal"><ref refid="eglimagetexture_8h_1ac56f71530c81ade3ddaab91f45696909" kindref="member">EGLImageKHR</ref><sp/><ref refid="class_k_win_1_1_egl_display_1a8fbc5c44d4a42b51e6c1c8396e3eae58" kindref="member">EglDisplay::createImage</ref>(EGLContext<sp/>ctx,<sp/>EGLenum<sp/>target,<sp/><ref refid="eglimagetexture_8h_1a4a53a4e69067cc93c962ce152545e614" kindref="member">EGLClientBuffer</ref><sp/>buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EGLint<sp/>*attrib_list)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="357"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(m_functions.createImageKHR);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_functions.createImageKHR(m_handle,<sp/>ctx,<sp/>target,<sp/>buffer,<sp/>attrib_list);</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="class_k_win_1_1_egl_display_1af5607fd402f9179446882c1f366554ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_display_1af5607fd402f9179446882c1f366554ed" kindref="member">EglDisplay::destroyImage</ref>(<ref refid="eglimagetexture_8h_1ac56f71530c81ade3ddaab91f45696909" kindref="member">EGLImageKHR</ref><sp/>image)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="363"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(m_functions.destroyImageKHR);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>m_functions.destroyImageKHR(m_handle,<sp/>image);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/opengl/egldisplay.cpp"/>
  </compounddef>
</doxygen>
