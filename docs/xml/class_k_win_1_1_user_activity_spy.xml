<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_user_activity_spy" kind="class" language="C++" prot="public">
    <compoundname>KWin::UserActivitySpy</compoundname>
    <basecompoundref refid="class_k_win_1_1_input_event_spy" prot="public" virt="non-virtual">KWin::InputEventSpy</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a492fe7d3be57ec0104f80d42cda1dbf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::pointerMotion</definition>
        <argsstring>(PointerMotionEvent *event) override</argsstring>
        <name>pointerMotion</name>
        <qualifiedname>KWin::UserActivitySpy::pointerMotion</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a3ccfe3b095e67c4a0a3aff7827de86ed">pointerMotion</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_pointer_motion_event" kindref="compound">PointerMotionEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="2961" column="10" bodyfile="kwin/src/input.cpp" bodystart="2961" bodyend="2966"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a33da27553708afc527e5cbf48fecc560" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::pointerButton</definition>
        <argsstring>(PointerButtonEvent *event) override</argsstring>
        <name>pointerButton</name>
        <qualifiedname>KWin::UserActivitySpy::pointerButton</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a5f9efdef8191faa288b3fc6ee2a4c43b">pointerButton</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="2967" column="10" bodyfile="kwin/src/input.cpp" bodystart="2967" bodyend="2970"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a059cf6ae6dc9ea2d45fef466155e8358" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::pointerAxis</definition>
        <argsstring>(PointerAxisEvent *event) override</argsstring>
        <name>pointerAxis</name>
        <qualifiedname>KWin::UserActivitySpy::pointerAxis</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1affd755ad4b5017dc625f10377b152fb8">pointerAxis</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event spy for pointer axis events.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event information about the axis event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="2971" column="10" bodyfile="kwin/src/input.cpp" bodystart="2971" bodyend="2974"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a88de03219ae05e99a3c8516977845a87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::keyboardKey</definition>
        <argsstring>(KeyboardKeyEvent *event) override</argsstring>
        <name>keyboardKey</name>
        <qualifiedname>KWin::UserActivitySpy::keyboardKey</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1ad6fe36c33c15628757cf73b201402554">keyboardKey</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event spy for keyboard events.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event information about the key event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="2976" column="10" bodyfile="kwin/src/input.cpp" bodystart="2976" bodyend="2979"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a2a22306d2d29b46db89c1502a2ba360c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::touchDown</definition>
        <argsstring>(qint32 id, const QPointF &amp;pos, std::chrono::microseconds time) override</argsstring>
        <name>touchDown</name>
        <qualifiedname>KWin::UserActivitySpy::touchDown</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a507ecbd332c0511d81d88c135f676ec0">touchDown</reimplements>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="2981" column="10" bodyfile="kwin/src/input.cpp" bodystart="2981" bodyend="2984"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a996e22d9f196bf48434349be2e127449" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::touchMotion</definition>
        <argsstring>(qint32 id, const QPointF &amp;pos, std::chrono::microseconds time) override</argsstring>
        <name>touchMotion</name>
        <qualifiedname>KWin::UserActivitySpy::touchMotion</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a045ff5dafa2b5893cf128a899aab3a59">touchMotion</reimplements>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="2985" column="10" bodyfile="kwin/src/input.cpp" bodystart="2985" bodyend="2988"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a2baf5ce70245cd29e7602122c80ac8a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::touchUp</definition>
        <argsstring>(qint32 id, std::chrono::microseconds time) override</argsstring>
        <name>touchUp</name>
        <qualifiedname>KWin::UserActivitySpy::touchUp</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1ac3ddba7aa87645ba3945c4b32b5da39c">touchUp</reimplements>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="2989" column="10" bodyfile="kwin/src/input.cpp" bodystart="2989" bodyend="2992"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a4d23735c6a444d6842bc391ad02d76d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::pinchGestureBegin</definition>
        <argsstring>(int fingerCount, std::chrono::microseconds time) override</argsstring>
        <name>pinchGestureBegin</name>
        <qualifiedname>KWin::UserActivitySpy::pinchGestureBegin</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a80fc99dbbd1abb780319e9e6a732dd7b">pinchGestureBegin</reimplements>
        <param>
          <type>int</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="2994" column="10" bodyfile="kwin/src/input.cpp" bodystart="2994" bodyend="2997"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1aa921ac4f1caa4171427106a72606aa1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::pinchGestureUpdate</definition>
        <argsstring>(qreal scale, qreal angleDelta, const QPointF &amp;delta, std::chrono::microseconds time) override</argsstring>
        <name>pinchGestureUpdate</name>
        <qualifiedname>KWin::UserActivitySpy::pinchGestureUpdate</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1aec624bc6f49a7718c9afd404b2413ba6">pinchGestureUpdate</reimplements>
        <param>
          <type>qreal</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>angleDelta</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="2998" column="10" bodyfile="kwin/src/input.cpp" bodystart="2998" bodyend="3001"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1aae5dc8b96c132e73e86b8271723dcad7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::pinchGestureEnd</definition>
        <argsstring>(std::chrono::microseconds time) override</argsstring>
        <name>pinchGestureEnd</name>
        <qualifiedname>KWin::UserActivitySpy::pinchGestureEnd</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1ac4ab13f55c14149aac8bb09a14047e04">pinchGestureEnd</reimplements>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3002" column="10" bodyfile="kwin/src/input.cpp" bodystart="3002" bodyend="3005"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1aa5f71754a630b2ee1c416345407c353c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::pinchGestureCancelled</definition>
        <argsstring>(std::chrono::microseconds time) override</argsstring>
        <name>pinchGestureCancelled</name>
        <qualifiedname>KWin::UserActivitySpy::pinchGestureCancelled</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1ab74da6eea7a3ebf4c5f9ca091d49ce02">pinchGestureCancelled</reimplements>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3006" column="10" bodyfile="kwin/src/input.cpp" bodystart="3006" bodyend="3009"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1aed88f331f1b14c06023ed8c4be5158cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::swipeGestureBegin</definition>
        <argsstring>(int fingerCount, std::chrono::microseconds time) override</argsstring>
        <name>swipeGestureBegin</name>
        <qualifiedname>KWin::UserActivitySpy::swipeGestureBegin</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a6912fab5acc5b46764b393587cfc5bcd">swipeGestureBegin</reimplements>
        <param>
          <type>int</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3011" column="10" bodyfile="kwin/src/input.cpp" bodystart="3011" bodyend="3014"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1aa6879a23ce681aeb7745663e3e2d9525" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::swipeGestureUpdate</definition>
        <argsstring>(const QPointF &amp;delta, std::chrono::microseconds time) override</argsstring>
        <name>swipeGestureUpdate</name>
        <qualifiedname>KWin::UserActivitySpy::swipeGestureUpdate</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a72923e161c7fd5839f88e0a7f67b90b1">swipeGestureUpdate</reimplements>
        <param>
          <type>const QPointF &amp;</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3015" column="10" bodyfile="kwin/src/input.cpp" bodystart="3015" bodyend="3018"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a9d39690f59aff6a70a5c001f96727978" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::swipeGestureEnd</definition>
        <argsstring>(std::chrono::microseconds time) override</argsstring>
        <name>swipeGestureEnd</name>
        <qualifiedname>KWin::UserActivitySpy::swipeGestureEnd</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a29dd3aad67fa704e0455b8fc65327a3c">swipeGestureEnd</reimplements>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3019" column="10" bodyfile="kwin/src/input.cpp" bodystart="3019" bodyend="3022"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a7e01101f01d3eb8fc4c8f73e3da20d3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::swipeGestureCancelled</definition>
        <argsstring>(std::chrono::microseconds time) override</argsstring>
        <name>swipeGestureCancelled</name>
        <qualifiedname>KWin::UserActivitySpy::swipeGestureCancelled</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a81f598f6133ea0e38d5382371d247108">swipeGestureCancelled</reimplements>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3023" column="10" bodyfile="kwin/src/input.cpp" bodystart="3023" bodyend="3026"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a10aa070b2b2f0def83e9a17062519a5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::holdGestureBegin</definition>
        <argsstring>(int fingerCount, std::chrono::microseconds time) override</argsstring>
        <name>holdGestureBegin</name>
        <qualifiedname>KWin::UserActivitySpy::holdGestureBegin</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a6d5503fce973f4dc475b694e457e8af8">holdGestureBegin</reimplements>
        <param>
          <type>int</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3028" column="10" bodyfile="kwin/src/input.cpp" bodystart="3028" bodyend="3031"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a379bcc364c93f4d16ed05fe43371f48f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::holdGestureEnd</definition>
        <argsstring>(std::chrono::microseconds time) override</argsstring>
        <name>holdGestureEnd</name>
        <qualifiedname>KWin::UserActivitySpy::holdGestureEnd</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a3a41cc57de2a013e5d665fb297106f63">holdGestureEnd</reimplements>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3032" column="10" bodyfile="kwin/src/input.cpp" bodystart="3032" bodyend="3035"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a2465e7212e27a5d1b92cc99faddc56f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::holdGestureCancelled</definition>
        <argsstring>(std::chrono::microseconds time) override</argsstring>
        <name>holdGestureCancelled</name>
        <qualifiedname>KWin::UserActivitySpy::holdGestureCancelled</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a30b4f89aae399402cdf72c480990f1dd">holdGestureCancelled</reimplements>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3036" column="10" bodyfile="kwin/src/input.cpp" bodystart="3036" bodyend="3039"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a3d5aacc6790f369e3b516e91deb34efb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::tabletToolProximityEvent</definition>
        <argsstring>(TabletToolProximityEvent *event) override</argsstring>
        <name>tabletToolProximityEvent</name>
        <qualifiedname>KWin::UserActivitySpy::tabletToolProximityEvent</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a71ac2c509ad154dd53fbc6eb67634c23">tabletToolProximityEvent</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_tool_proximity_event" kindref="compound">TabletToolProximityEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3041" column="10" bodyfile="kwin/src/input.cpp" bodystart="3041" bodyend="3044"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a4837e1d54780ce293d4be847dbba2bfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::tabletToolAxisEvent</definition>
        <argsstring>(TabletToolAxisEvent *event) override</argsstring>
        <name>tabletToolAxisEvent</name>
        <qualifiedname>KWin::UserActivitySpy::tabletToolAxisEvent</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a9dc8eee8245438767e2b51a4daccd554">tabletToolAxisEvent</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_tool_axis_event" kindref="compound">TabletToolAxisEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3045" column="10" bodyfile="kwin/src/input.cpp" bodystart="3045" bodyend="3048"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1aa0228a6daf85e6ddfe626112b96c2746" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::tabletToolTipEvent</definition>
        <argsstring>(TabletToolTipEvent *event) override</argsstring>
        <name>tabletToolTipEvent</name>
        <qualifiedname>KWin::UserActivitySpy::tabletToolTipEvent</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a4a6dbc01b4a0809a7ffd1d9012478187">tabletToolTipEvent</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3049" column="10" bodyfile="kwin/src/input.cpp" bodystart="3049" bodyend="3052"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a4b4c64d616c323ad6a51b6674b37449c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::tabletToolButtonEvent</definition>
        <argsstring>(TabletToolButtonEvent *event) override</argsstring>
        <name>tabletToolButtonEvent</name>
        <qualifiedname>KWin::UserActivitySpy::tabletToolButtonEvent</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a41541ccc5d9d7b80b9c30210213f341f">tabletToolButtonEvent</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_tool_button_event" kindref="compound">TabletToolButtonEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3053" column="10" bodyfile="kwin/src/input.cpp" bodystart="3053" bodyend="3056"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a024992c41fa98fdc2e29698943b91407" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::tabletPadButtonEvent</definition>
        <argsstring>(TabletPadButtonEvent *event) override</argsstring>
        <name>tabletPadButtonEvent</name>
        <qualifiedname>KWin::UserActivitySpy::tabletPadButtonEvent</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1a9cf667727e6bc064baaa387167c149d0">tabletPadButtonEvent</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_pad_button_event" kindref="compound">TabletPadButtonEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3057" column="10" bodyfile="kwin/src/input.cpp" bodystart="3057" bodyend="3060"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a4f6ca7c0b1a9216c3154b8a6bc243759" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::tabletPadStripEvent</definition>
        <argsstring>(TabletPadStripEvent *event) override</argsstring>
        <name>tabletPadStripEvent</name>
        <qualifiedname>KWin::UserActivitySpy::tabletPadStripEvent</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1ac7eba23b7d72733f8d13e523396ab31c">tabletPadStripEvent</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_pad_strip_event" kindref="compound">TabletPadStripEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3061" column="10" bodyfile="kwin/src/input.cpp" bodystart="3061" bodyend="3064"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a26d477e73ca50bad6eaff48fec49867e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::tabletPadRingEvent</definition>
        <argsstring>(TabletPadRingEvent *event) override</argsstring>
        <name>tabletPadRingEvent</name>
        <qualifiedname>KWin::UserActivitySpy::tabletPadRingEvent</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_event_spy_1abc90adebce1923ae01a2267dc476a072">tabletPadRingEvent</reimplements>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_pad_ring_event" kindref="compound">TabletPadRingEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3065" column="10" bodyfile="kwin/src/input.cpp" bodystart="3065" bodyend="3068"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_user_activity_spy_1a2c71e3f5f12d0cfa13b144c2dd6238a6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::UserActivitySpy::notifyActivity</definition>
        <argsstring>()</argsstring>
        <name>notifyActivity</name>
        <qualifiedname>KWin::UserActivitySpy::notifyActivity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.cpp" line="3071" column="10" bodyfile="kwin/src/input.cpp" bodystart="3071" bodyend="3074"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::InputEventSpy</label>
        <link refid="class_k_win_1_1_input_event_spy"/>
      </node>
      <node id="1">
        <label>KWin::UserActivitySpy</label>
        <link refid="class_k_win_1_1_user_activity_spy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::InputEventSpy</label>
        <link refid="class_k_win_1_1_input_event_spy"/>
      </node>
      <node id="1">
        <label>KWin::UserActivitySpy</label>
        <link refid="class_k_win_1_1_user_activity_spy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/src/input.cpp" line="2958" column="1" bodyfile="kwin/src/input.cpp" bodystart="2959" bodyend="3075"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_user_activity_spy_1a10aa070b2b2f0def83e9a17062519a5f" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>holdGestureBegin</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a2465e7212e27a5d1b92cc99faddc56f2" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>holdGestureCancelled</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a379bcc364c93f4d16ed05fe43371f48f" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>holdGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_event_spy_1a57ca2c40b812786fd52212bab1b2ec1c" prot="public" virt="non-virtual"><scope>KWin::UserActivitySpy</scope><name>InputEventSpy</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a88de03219ae05e99a3c8516977845a87" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>keyboardKey</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a2c71e3f5f12d0cfa13b144c2dd6238a6" prot="private" virt="non-virtual"><scope>KWin::UserActivitySpy</scope><name>notifyActivity</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a4d23735c6a444d6842bc391ad02d76d3" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>pinchGestureBegin</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1aa5f71754a630b2ee1c416345407c353c" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>pinchGestureCancelled</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1aae5dc8b96c132e73e86b8271723dcad7" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>pinchGestureEnd</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1aa921ac4f1caa4171427106a72606aa1d" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>pinchGestureUpdate</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a059cf6ae6dc9ea2d45fef466155e8358" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>pointerAxis</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a33da27553708afc527e5cbf48fecc560" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>pointerButton</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a492fe7d3be57ec0104f80d42cda1dbf7" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>pointerMotion</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1aed88f331f1b14c06023ed8c4be5158cd" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>swipeGestureBegin</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a7e01101f01d3eb8fc4c8f73e3da20d3c" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>swipeGestureCancelled</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a9d39690f59aff6a70a5c001f96727978" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>swipeGestureEnd</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1aa6879a23ce681aeb7745663e3e2d9525" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>swipeGestureUpdate</name></member>
      <member refid="class_k_win_1_1_input_event_spy_1aad8e1b6c2c9a12e0886fe59300196ac3" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>switchEvent</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a024992c41fa98fdc2e29698943b91407" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>tabletPadButtonEvent</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a26d477e73ca50bad6eaff48fec49867e" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>tabletPadRingEvent</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a4f6ca7c0b1a9216c3154b8a6bc243759" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>tabletPadStripEvent</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a4837e1d54780ce293d4be847dbba2bfe" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>tabletToolAxisEvent</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a4b4c64d616c323ad6a51b6674b37449c" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>tabletToolButtonEvent</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a3d5aacc6790f369e3b516e91deb34efb" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>tabletToolProximityEvent</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1aa0228a6daf85e6ddfe626112b96c2746" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>tabletToolTipEvent</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a2a22306d2d29b46db89c1502a2ba360c" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>touchDown</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a996e22d9f196bf48434349be2e127449" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>touchMotion</name></member>
      <member refid="class_k_win_1_1_user_activity_spy_1a2baf5ce70245cd29e7602122c80ac8a0" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>touchUp</name></member>
      <member refid="class_k_win_1_1_input_event_spy_1a6e84ba72ddfb5f7f4555ed716e8408be" prot="public" virt="virtual"><scope>KWin::UserActivitySpy</scope><name>~InputEventSpy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
