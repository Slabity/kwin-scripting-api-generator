<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_shadow" kind="class" language="C++" prot="public">
    <compoundname>KWin::Shadow</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="shadow_8h" local="no">shadow.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831" prot="public" static="no" strong="no">
        <type></type>
        <name>ShadowElements</name>
        <qualifiedname>KWin::Shadow::ShadowElements</qualifiedname>
        <enumvalue id="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831adf6d4cf94e94501f18efe800939cd5f5" prot="public">
          <name>ShadowElementTop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a3ccfa5250e10706982ba8d23c960ce57" prot="public">
          <name>ShadowElementTopRight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a9042c7ebc60e2d179a7adb5214098d14" prot="public">
          <name>ShadowElementRight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a671716b1a7650293de1a7cc23c89d03d" prot="public">
          <name>ShadowElementBottomRight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831aeb4bdea8506dbc2aa86a2212e81ff0db" prot="public">
          <name>ShadowElementBottom</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a63e6898faf6db63e22671774e01a105b" prot="public">
          <name>ShadowElementBottomLeft</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a1a5fe1c0bbccc5c840ba7fb03e2e5f92" prot="public">
          <name>ShadowElementLeft</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a8f679b453d9c274d86c8bff56aaf8eeb" prot="public">
          <name>ShadowElementTopLeft</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831af7a922d98f7a9ff410c9fec5ad108bab" prot="public">
          <name>ShadowElementsCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="90" column="5" bodyfile="kwin/src/shadow.h" bodystart="90" bodyend="100"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_shadow_1a2a47aad049798d814f9d1725c5a710b6" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window* KWin::Shadow::m_window</definition>
        <argsstring></argsstring>
        <name>m_window</name>
        <qualifiedname>KWin::Shadow::m_window</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="134" column="12" bodyfile="kwin/src/shadow.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_shadow_1a9273f92d52fcabc259f62565205bd149" prot="private" static="no" mutable="no">
        <type>QImage</type>
        <definition>QImage KWin::Shadow::m_shadowElements[ShadowElementsCount]</definition>
        <argsstring>[ShadowElementsCount]</argsstring>
        <name>m_shadowElements</name>
        <qualifiedname>KWin::Shadow::m_shadowElements</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="136" column="12" bodyfile="kwin/src/shadow.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_shadow_1a64be834393f06b386fad962175818998" prot="private" static="no" mutable="no">
        <type>QMarginsF</type>
        <definition>QMarginsF KWin::Shadow::m_offset</definition>
        <argsstring></argsstring>
        <name>m_offset</name>
        <qualifiedname>KWin::Shadow::m_offset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="138" column="15" bodyfile="kwin/src/shadow.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_shadow_1a80b12d0e03fb1bea7330d3f562612556" prot="private" static="no" mutable="no">
        <type>QSizeF</type>
        <definition>QSizeF KWin::Shadow::m_cachedSize</definition>
        <argsstring></argsstring>
        <name>m_cachedSize</name>
        <qualifiedname>KWin::Shadow::m_cachedSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="140" column="12" bodyfile="kwin/src/shadow.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_shadow_1a81261dc103977c911397d94fff795285" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; KDecoration3::DecorationShadow &gt;</type>
        <definition>std::shared_ptr&lt;KDecoration3::DecorationShadow&gt; KWin::Shadow::m_decorationShadow</definition>
        <argsstring></argsstring>
        <name>m_decorationShadow</name>
        <qualifiedname>KWin::Shadow::m_decorationShadow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="142" column="21" bodyfile="kwin/src/shadow.h" bodystart="142" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a6935ff159b11b02dcaca21e2af1f57c8" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Shadow::Shadow</definition>
        <argsstring>(Window *window)</argsstring>
        <name>Shadow</name>
        <qualifiedname>KWin::Shadow::Shadow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="51" column="14" bodyfile="kwin/src/shadow.cpp" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1ad6b2be9f1bac6edee005caefdca0c894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Shadow::~Shadow</definition>
        <argsstring>() override</argsstring>
        <name>~Shadow</name>
        <qualifiedname>KWin::Shadow::~Shadow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="52" column="5" bodyfile="kwin/src/shadow.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a9f6b306253c6eca31127137899ec831d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Shadow::updateShadow</definition>
        <argsstring>()</argsstring>
        <name>updateShadow</name>
        <qualifiedname>KWin::Shadow::updateShadow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method updates the <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> when the property has been changed. It is the responsibility of the owner of the <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> to call this method whenever the owner receives a PropertyNotify event. This method will invoke a re-read of the Property. In case the Property has been withdrawn the method returns <computeroutput>false</computeroutput>. In that case the owner should delete the <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref>. <simplesect kind="return"><para><computeroutput>true</computeroutput> when the shadow has been updated, <computeroutput>false</computeroutput> if the property is not set anymore. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="63" column="10" bodyfile="kwin/src/shadow.cpp" bodystart="276" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a7657474db8dc5deb99e392eb82aceca0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::Shadow::window</definition>
        <argsstring>() const</argsstring>
        <name>window</name>
        <qualifiedname>KWin::Shadow::window</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="77" column="12" bodyfile="kwin/src/shadow.cpp" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a172a36c5f51d4f11331b854f28585eee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Shadow::hasDecorationShadow</definition>
        <argsstring>() const</argsstring>
        <name>hasDecorationShadow</name>
        <qualifiedname>KWin::Shadow::hasDecorationShadow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="79" column="10" bodyfile="kwin/src/shadow.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a88ba712743d4e1430c62991d89e95aad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QImage</type>
        <definition>QImage KWin::Shadow::decorationShadowImage</definition>
        <argsstring>() const</argsstring>
        <name>decorationShadowImage</name>
        <qualifiedname>KWin::Shadow::decorationShadowImage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="83" column="12" bodyfile="kwin/src/shadow.cpp" bodystart="336" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a51f41f1562946ef2c13407a6b98b843e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::weak_ptr&lt; KDecoration3::DecorationShadow &gt;</type>
        <definition>std::weak_ptr&lt; KDecoration3::DecorationShadow &gt; KWin::Shadow::decorationShadow</definition>
        <argsstring>() const</argsstring>
        <name>decorationShadow</name>
        <qualifiedname>KWin::Shadow::decorationShadow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="85" column="19" bodyfile="kwin/src/shadow.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a75bff26d293dc62a44ac5b0fd54601e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF KWin::Shadow::elementSize</definition>
        <argsstring>(ShadowElements element) const</argsstring>
        <name>elementSize</name>
        <qualifiedname>KWin::Shadow::elementSize</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831" kindref="member">ShadowElements</ref></type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="101" column="12" bodyfile="kwin/src/shadow.cpp" bodystart="344" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a054064163d85fecb250fca585b534e69" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Shadow::rect</definition>
        <argsstring>() const</argsstring>
        <name>rect</name>
        <qualifiedname>KWin::Shadow::rect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="103" column="12" bodyfile="kwin/src/shadow.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1ac1e01c6794723cee09a2d3da7af2807c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QMarginsF</type>
        <definition>QMarginsF KWin::Shadow::offset</definition>
        <argsstring>() const</argsstring>
        <name>offset</name>
        <qualifiedname>KWin::Shadow::offset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="107" column="15" bodyfile="kwin/src/shadow.h" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a75d8af8e4ecf95bbdbaa2ff5a47ab5c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QImage &amp;</type>
        <definition>const QImage &amp; KWin::Shadow::shadowElement</definition>
        <argsstring>(ShadowElements element) const</argsstring>
        <name>shadowElement</name>
        <qualifiedname>KWin::Shadow::shadowElement</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831" kindref="member">ShadowElements</ref></type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="111" column="25" bodyfile="kwin/src/shadow.h" bodystart="111" bodyend="114"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a3ed5d25255ef7024a47cdf936ce55d54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Shadow &gt; KWin::Shadow::createShadow</definition>
        <argsstring>(Window *window)</argsstring>
        <name>createShadow</name>
        <qualifiedname>KWin::Shadow::createShadow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Factory Method to create the shadow from the property. This method takes care of creating an instance of the <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> class for the current Compositing Backend.</para>
<para>If there is no shadow defined for <computeroutput>window</computeroutput> this method will return <computeroutput>NULL</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> for which the shadow should be created </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> or <computeroutput>NULL</computeroutput> in case there is no shadow defined. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="75" column="28" bodyfile="kwin/src/shadow.cpp" bodystart="45" bodyend="60"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_shadow_1abf462b1f35a3343ebada81185e2ae1c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Shadow::offsetChanged</definition>
        <argsstring>()</argsstring>
        <name>offsetChanged</name>
        <qualifiedname>KWin::Shadow::offsetChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="117" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_shadow_1a9f74ec796bb63752ed36fed1b551f2da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Shadow::rectChanged</definition>
        <argsstring>()</argsstring>
        <name>rectChanged</name>
        <qualifiedname>KWin::Shadow::rectChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="118" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_shadow_1a288716f59c12053e2b802890b579e105" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Shadow::textureChanged</definition>
        <argsstring>()</argsstring>
        <name>textureChanged</name>
        <qualifiedname>KWin::Shadow::textureChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="119" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_k_win_1_1_shadow_1a93c63c20f749f9d9719d6041f8ad32fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Shadow::geometryChanged</definition>
        <argsstring>()</argsstring>
        <name>geometryChanged</name>
        <qualifiedname>KWin::Shadow::geometryChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="122" column="10" bodyfile="kwin/src/shadow.cpp" bodystart="327" bodyend="334"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_k_win_1_1_shadow_1aa3e83ea9e6fdb37d5113c8419bd90991" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> &gt;</type>
        <definition>static std::unique_ptr&lt; Shadow &gt; KWin::Shadow::createShadowFromX11</definition>
        <argsstring>(Window *window)</argsstring>
        <name>createShadowFromX11</name>
        <qualifiedname>KWin::Shadow::createShadowFromX11</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="125" column="28"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a236ea2d148aa6ed184530559914a6f3c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Shadow &gt; KWin::Shadow::createShadowFromDecoration</definition>
        <argsstring>(Window *window)</argsstring>
        <name>createShadowFromDecoration</name>
        <qualifiedname>KWin::Shadow::createShadowFromDecoration</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="126" column="28" bodyfile="kwin/src/shadow.cpp" bodystart="82" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1acd2bb089f005f0448485a2a60950f9ed" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Shadow &gt; KWin::Shadow::createShadowFromWayland</definition>
        <argsstring>(Window *window)</argsstring>
        <name>createShadowFromWayland</name>
        <qualifiedname>KWin::Shadow::createShadowFromWayland</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="127" column="28" bodyfile="kwin/src/shadow.cpp" bodystart="94" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a9b58fc9017463acc4bb1a22fcd697edd" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Shadow &gt; KWin::Shadow::createShadowFromInternalWindow</definition>
        <argsstring>(Window *window)</argsstring>
        <name>createShadowFromInternalWindow</name>
        <qualifiedname>KWin::Shadow::createShadowFromInternalWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="128" column="28" bodyfile="kwin/src/shadow.cpp" bodystart="111" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1ab5ec90d4331ffa99aa57db5b3f981eaf" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; uint32_t &gt;</type>
        <definition>static QList&lt; uint32_t &gt; KWin::Shadow::readX11ShadowProperty</definition>
        <argsstring>(xcb_window_t id)</argsstring>
        <name>readX11ShadowProperty</name>
        <qualifiedname>KWin::Shadow::readX11ShadowProperty</qualifiedname>
        <param>
          <type>xcb_window_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="129" column="18"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a57dc237e53e89d91ed5b787b337269ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Shadow::init</definition>
        <argsstring>(const QList&lt; uint32_t &gt; &amp;data)</argsstring>
        <name>init</name>
        <qualifiedname>KWin::Shadow::init</qualifiedname>
        <param>
          <type>const QList&lt; uint32_t &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="130" column="10" bodyfile="kwin/src/shadow.cpp" bodystart="146" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1ac524c84d72886b88450039fe8f726d21" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Shadow::init</definition>
        <argsstring>(KDecoration3::Decoration *decoration)</argsstring>
        <name>init</name>
        <qualifiedname>KWin::Shadow::init</qualifiedname>
        <param>
          <type>KDecoration3::Decoration *</type>
          <declname>decoration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="131" column="10" bodyfile="kwin/src/shadow.cpp" bodystart="190" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a7288b5831256ddab7723d2bd206d2f5c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Shadow::init</definition>
        <argsstring>(const QPointer&lt; ShadowInterface &gt; &amp;shadow)</argsstring>
        <name>init</name>
        <qualifiedname>KWin::Shadow::init</qualifiedname>
        <param>
          <type>const QPointer&lt; <ref refid="class_k_win_1_1_shadow_interface" kindref="compound">ShadowInterface</ref> &gt; &amp;</type>
          <declname>shadow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="132" column="10" bodyfile="kwin/src/shadow.cpp" bodystart="224" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_shadow_1a5b77ef07bef8df6dfbc46d7deefe9ca3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Shadow::init</definition>
        <argsstring>(const QWindow *window)</argsstring>
        <name>init</name>
        <qualifiedname>KWin::Shadow::init</qualifiedname>
        <param>
          <type>const QWindow *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/shadow.h" line="133" column="10" bodyfile="kwin/src/shadow.cpp" bodystart="245" bodyend="274"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class representing a <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref>&apos;s <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> to be rendered by the <ref refid="class_k_win_1_1_compositor" kindref="compound">Compositor</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>This class holds all information about the <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> to be rendered together with the window during the Compositing stage. The <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> consists of several pixmaps and offsets. For a complete description please refer to <ulink url="https://community.kde.org/KWin/Shadow">https://community.kde.org/KWin/Shadow</ulink></para>
<para>To create a <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> instance use the static factory method createShadow which will create an instance for the currently used Compositing Backend. It will read the X11 Property and create the <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> and all required data (such as WindowQuads). If there is no <ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref> defined for the <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> the factory method returns <computeroutput>NULL</computeroutput>.</para>
<para><simplesect kind="author"><para>Martin Gräßlin <ulink url="mailto:mgraesslin@kde.org">mgraesslin@kde.org</ulink> </para>
</simplesect>
<xrefsect id="todo_1_todo000004"><xreftitle>Todo</xreftitle><xrefdescription><para>React on <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> size changes. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::Shadow</label>
        <link refid="class_k_win_1_1_shadow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::Shadow</label>
        <link refid="class_k_win_1_1_shadow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/shadow.h" line="47" column="1" bodyfile="kwin/src/shadow.h" bodystart="48" bodyend="143"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_shadow_1a3ed5d25255ef7024a47cdf936ce55d54" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>createShadow</name></member>
      <member refid="class_k_win_1_1_shadow_1a236ea2d148aa6ed184530559914a6f3c" prot="private" virt="non-virtual"><scope>KWin::Shadow</scope><name>createShadowFromDecoration</name></member>
      <member refid="class_k_win_1_1_shadow_1a9b58fc9017463acc4bb1a22fcd697edd" prot="private" virt="non-virtual"><scope>KWin::Shadow</scope><name>createShadowFromInternalWindow</name></member>
      <member refid="class_k_win_1_1_shadow_1acd2bb089f005f0448485a2a60950f9ed" prot="private" virt="non-virtual"><scope>KWin::Shadow</scope><name>createShadowFromWayland</name></member>
      <member refid="class_k_win_1_1_shadow_1aa3e83ea9e6fdb37d5113c8419bd90991" prot="private" virt="non-virtual"><scope>KWin::Shadow</scope><name>createShadowFromX11</name></member>
      <member refid="class_k_win_1_1_shadow_1a51f41f1562946ef2c13407a6b98b843e" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>decorationShadow</name></member>
      <member refid="class_k_win_1_1_shadow_1a88ba712743d4e1430c62991d89e95aad" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>decorationShadowImage</name></member>
      <member refid="class_k_win_1_1_shadow_1a75bff26d293dc62a44ac5b0fd54601e9" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>elementSize</name></member>
      <member refid="class_k_win_1_1_shadow_1a93c63c20f749f9d9719d6041f8ad32fa" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>geometryChanged</name></member>
      <member refid="class_k_win_1_1_shadow_1a172a36c5f51d4f11331b854f28585eee" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>hasDecorationShadow</name></member>
      <member refid="class_k_win_1_1_shadow_1a57dc237e53e89d91ed5b787b337269ec" prot="private" virt="non-virtual"><scope>KWin::Shadow</scope><name>init</name></member>
      <member refid="class_k_win_1_1_shadow_1ac524c84d72886b88450039fe8f726d21" prot="private" virt="non-virtual"><scope>KWin::Shadow</scope><name>init</name></member>
      <member refid="class_k_win_1_1_shadow_1a7288b5831256ddab7723d2bd206d2f5c" prot="private" virt="non-virtual"><scope>KWin::Shadow</scope><name>init</name></member>
      <member refid="class_k_win_1_1_shadow_1a5b77ef07bef8df6dfbc46d7deefe9ca3" prot="private" virt="non-virtual"><scope>KWin::Shadow</scope><name>init</name></member>
      <member refid="class_k_win_1_1_shadow_1a80b12d0e03fb1bea7330d3f562612556" prot="private" virt="non-virtual"><scope>KWin::Shadow</scope><name>m_cachedSize</name></member>
      <member refid="class_k_win_1_1_shadow_1a81261dc103977c911397d94fff795285" prot="private" virt="non-virtual"><scope>KWin::Shadow</scope><name>m_decorationShadow</name></member>
      <member refid="class_k_win_1_1_shadow_1a64be834393f06b386fad962175818998" prot="private" virt="non-virtual"><scope>KWin::Shadow</scope><name>m_offset</name></member>
      <member refid="class_k_win_1_1_shadow_1a9273f92d52fcabc259f62565205bd149" prot="private" virt="non-virtual"><scope>KWin::Shadow</scope><name>m_shadowElements</name></member>
      <member refid="class_k_win_1_1_shadow_1a2a47aad049798d814f9d1725c5a710b6" prot="private" virt="non-virtual"><scope>KWin::Shadow</scope><name>m_window</name></member>
      <member refid="class_k_win_1_1_shadow_1ac1e01c6794723cee09a2d3da7af2807c" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>offset</name></member>
      <member refid="class_k_win_1_1_shadow_1abf462b1f35a3343ebada81185e2ae1c7" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>offsetChanged</name></member>
      <member refid="class_k_win_1_1_shadow_1ab5ec90d4331ffa99aa57db5b3f981eaf" prot="private" virt="non-virtual"><scope>KWin::Shadow</scope><name>readX11ShadowProperty</name></member>
      <member refid="class_k_win_1_1_shadow_1a054064163d85fecb250fca585b534e69" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>rect</name></member>
      <member refid="class_k_win_1_1_shadow_1a9f74ec796bb63752ed36fed1b551f2da" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>rectChanged</name></member>
      <member refid="class_k_win_1_1_shadow_1a6935ff159b11b02dcaca21e2af1f57c8" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>Shadow</name></member>
      <member refid="class_k_win_1_1_shadow_1a75d8af8e4ecf95bbdbaa2ff5a47ab5c1" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>shadowElement</name></member>
      <member refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831aeb4bdea8506dbc2aa86a2212e81ff0db" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>ShadowElementBottom</name></member>
      <member refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a63e6898faf6db63e22671774e01a105b" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>ShadowElementBottomLeft</name></member>
      <member refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a671716b1a7650293de1a7cc23c89d03d" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>ShadowElementBottomRight</name></member>
      <member refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a1a5fe1c0bbccc5c840ba7fb03e2e5f92" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>ShadowElementLeft</name></member>
      <member refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a9042c7ebc60e2d179a7adb5214098d14" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>ShadowElementRight</name></member>
      <member refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>ShadowElements</name></member>
      <member refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831af7a922d98f7a9ff410c9fec5ad108bab" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>ShadowElementsCount</name></member>
      <member refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831adf6d4cf94e94501f18efe800939cd5f5" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>ShadowElementTop</name></member>
      <member refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a8f679b453d9c274d86c8bff56aaf8eeb" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>ShadowElementTopLeft</name></member>
      <member refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a3ccfa5250e10706982ba8d23c960ce57" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>ShadowElementTopRight</name></member>
      <member refid="class_k_win_1_1_shadow_1a288716f59c12053e2b802890b579e105" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>textureChanged</name></member>
      <member refid="class_k_win_1_1_shadow_1a9f6b306253c6eca31127137899ec831d" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>updateShadow</name></member>
      <member refid="class_k_win_1_1_shadow_1a7657474db8dc5deb99e392eb82aceca0" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>window</name></member>
      <member refid="class_k_win_1_1_shadow_1ad6b2be9f1bac6edee005caefdca0c894" prot="public" virt="non-virtual"><scope>KWin::Shadow</scope><name>~Shadow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
