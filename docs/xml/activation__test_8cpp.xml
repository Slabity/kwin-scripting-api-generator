<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="activation__test_8cpp" kind="file" language="C++">
    <compoundname>activation_test.cpp</compoundname>
    <includes refid="kwin__wayland__test_8h" local="yes">kwin_wayland_test.h</includes>
    <includes refid="core_2output_8h" local="yes">core/output.h</includes>
    <includes refid="pointer__input_8h" local="yes">pointer_input.h</includes>
    <includes refid="wayland__server_8h" local="yes">wayland_server.h</includes>
    <includes local="yes">window.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes refid="x11window_8h" local="yes">x11window.h</includes>
    <includes local="no">KWayland/Client/surface.h</includes>
    <includes local="no">netwm.h</includes>
    <includes local="no">xcb/xcb_icccm.h</includes>
    <includes local="yes">activation_test.moc</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/autotests/integration/activation_test.cpp</label>
        <link refid="activation__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kwin_wayland_test.h</label>
        <link refid="kwin__wayland__test_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>effect/xcb.h</label>
        <link refid="xcb_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>input.h</label>
        <link refid="input_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>pointer_input.h</label>
        <link refid="pointer__input_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>rules.h</label>
        <link refid="rules_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>utils/c_ptr.h</label>
        <link refid="c__ptr_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>utils/cursortheme.h</label>
        <link refid="cursortheme_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>utils/xcbutils.h</label>
        <link refid="xcbutils_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>wayland_server.h</label>
        <link refid="wayland__server_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>window.h</label>
        <link refid="window_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>x11window.h</label>
        <link refid="x11window_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>KConfigGroup</label>
      </node>
      <node id="53">
        <label>KConfigWatcher</label>
      </node>
      <node id="49">
        <label>KSharedConfig</label>
      </node>
      <node id="17">
        <label>KWayland/Client/surface.h</label>
      </node>
      <node id="98">
        <label>NETWM</label>
      </node>
      <node id="66">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="67">
        <label>QApplication</label>
      </node>
      <node id="40">
        <label>QByteArray</label>
      </node>
      <node id="6">
        <label>QCoreApplication</label>
      </node>
      <node id="70">
        <label>QDBusContext</label>
      </node>
      <node id="71">
        <label>QDataStream</label>
      </node>
      <node id="43">
        <label>QDebug</label>
      </node>
      <node id="59">
        <label>QElapsedTimer</label>
      </node>
      <node id="95">
        <label>QFlags</label>
      </node>
      <node id="84">
        <label>QGuiApplication</label>
      </node>
      <node id="48">
        <label>QHash</label>
      </node>
      <node id="93">
        <label>QIcon</label>
      </node>
      <node id="7">
        <label>QImage</label>
      </node>
      <node id="94">
        <label>QKeySequence</label>
      </node>
      <node id="41">
        <label>QList</label>
      </node>
      <node id="78">
        <label>QLoggingCategory</label>
      </node>
      <node id="39">
        <label>QMatrix4x4</label>
      </node>
      <node id="12">
        <label>QObject</label>
      </node>
      <node id="96">
        <label>QPixmap</label>
      </node>
      <node id="8">
        <label>QPoint</label>
      </node>
      <node id="60">
        <label>QPointF</label>
      </node>
      <node id="52">
        <label>QPointer</label>
      </node>
      <node id="68">
        <label>QProcessEnvironment</label>
      </node>
      <node id="44">
        <label>QRect</label>
      </node>
      <node id="92">
        <label>QRectF</label>
      </node>
      <node id="86">
        <label>QRegion</label>
      </node>
      <node id="54">
        <label>QSet</label>
      </node>
      <node id="57">
        <label>QSharedDataPointer</label>
      </node>
      <node id="15">
        <label>QSignalSpy</label>
      </node>
      <node id="42">
        <label>QSize</label>
      </node>
      <node id="77">
        <label>QString</label>
      </node>
      <node id="72">
        <label>QStringList</label>
      </node>
      <node id="16">
        <label>QTest</label>
      </node>
      <node id="73">
        <label>QTimer</label>
      </node>
      <node id="45">
        <label>QUuid</label>
      </node>
      <node id="9">
        <label>QVariant</label>
      </node>
      <node id="10">
        <label>QVector2D</label>
      </node>
      <node id="97">
        <label>QWindow</label>
      </node>
      <node id="103">
        <label>activation_test.moc</label>
      </node>
      <node id="58">
        <label>chrono</label>
      </node>
      <node id="79">
        <label>climits</label>
      </node>
      <node id="5">
        <label>config-kwin.h</label>
      </node>
      <node id="55">
        <label>functional</label>
      </node>
      <node id="11">
        <label>kwin_export.h</label>
      </node>
      <node id="13">
        <label>main.h</label>
      </node>
      <node id="65">
        <label>memory</label>
      </node>
      <node id="101">
        <label>netwm.h</label>
      </node>
      <node id="80">
        <label>netwm_def.h</label>
      </node>
      <node id="18">
        <label>optional</label>
      </node>
      <node id="19">
        <label>qwayland-color-management-v1.h</label>
      </node>
      <node id="20">
        <label>qwayland-cursor-shape-v1.h</label>
      </node>
      <node id="21">
        <label>qwayland-fake-input.h</label>
      </node>
      <node id="22">
        <label>qwayland-fractional-scale-v1.h</label>
      </node>
      <node id="23">
        <label>qwayland-idle-inhibit-unstable-v1.h</label>
      </node>
      <node id="24">
        <label>qwayland-input-method-unstable-v1.h</label>
      </node>
      <node id="25">
        <label>qwayland-kde-output-device-v2.h</label>
      </node>
      <node id="26">
        <label>qwayland-kde-output-management-v2.h</label>
      </node>
      <node id="27">
        <label>qwayland-kde-screen-edge-v1.h</label>
      </node>
      <node id="28">
        <label>qwayland-security-context-v1.h</label>
      </node>
      <node id="29">
        <label>qwayland-text-input-unstable-v3.h</label>
      </node>
      <node id="30">
        <label>qwayland-wlr-layer-shell-unstable-v1.h</label>
      </node>
      <node id="31">
        <label>qwayland-xdg-decoration-unstable-v1.h</label>
      </node>
      <node id="32">
        <label>qwayland-xdg-dialog-v1.h</label>
      </node>
      <node id="33">
        <label>qwayland-xdg-shell.h</label>
      </node>
      <node id="34">
        <label>qwayland-zkde-screencast-unstable-v1.h</label>
      </node>
      <node id="14">
        <label>window.h</label>
      </node>
      <node id="87">
        <label>xcb/composite.h</label>
      </node>
      <node id="88">
        <label>xcb/randr.h</label>
      </node>
      <node id="99">
        <label>xcb/res.h</label>
      </node>
      <node id="89">
        <label>xcb/shm.h</label>
      </node>
      <node id="100">
        <label>xcb/sync.h</label>
      </node>
      <node id="50">
        <label>xcb/xcb.h</label>
      </node>
      <node id="102">
        <label>xcb/xcb_icccm.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_k_win_1_1_activation_test" prot="public">KWin::ActivationTest</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2019<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kwin__wayland__test_8h" kindref="compound">kwin_wayland_test.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2output_8h" kindref="compound">core/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer__input_8h" kindref="compound">pointer_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland__server_8h" kindref="compound">wayland_server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="x11window_8h" kindref="compound">x11window.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/surface.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netwm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xcb/xcb_icccm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="namespace_k_win" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>s_socketName<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;wayland_test_activation-0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_k_win_1_1_activation_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_activation_test" kindref="compound">ActivationTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Q_SLOTS:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cleanup();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwitchToWindowToLeft();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwitchToWindowToRight();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwitchToWindowAbove();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwitchToWindowBelow();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwitchToWindowMaximized();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSwitchToWindowFullScreen();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testActiveFullscreen();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stackScreensHorizontally();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stackScreensVertically();</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ActivationTest::initTestCase()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;Window<sp/>*&gt;();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;init(s_socketName));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(1280,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>kwinApp()-&gt;start();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aaee7f44422f40ea8256b2f54e83a2b37" kindref="member">outputs</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputs.count(),<sp/>2);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputs[0]-&gt;geometry(),<sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputs[1]-&gt;geometry(),<sp/>QRect(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ActivationTest::init()</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1a36c6e87757c3c97858c55b650c9d304c" kindref="member">Test::setupWaylandConnection</ref>());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1abe694aeb41eaff7b515070ad0c11dba4" kindref="member">setActiveOutput</ref>(QPoint(640,<sp/>512));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(QPoint(640,<sp/>512));</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ActivationTest::cleanup()</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a12755bae9118cb958baf0efbd222d7c8" kindref="member">Test::destroyWaylandConnection</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>stackScreensHorizontally();</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ActivationTest::testSwitchToWindowToLeft()</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>&quot;Switch<sp/>to<sp/>Window<sp/>to<sp/>the<sp/>Left&quot;<sp/>shortcut<sp/>works.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>the<sp/>test<sp/>environment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>stackScreensHorizontally();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>several<sp/>windows<sp/>on<sp/>the<sp/>left<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface1(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface1(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface1.get()));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window1<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface1.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1-&gt;isActive());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface2(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface2(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface2.get()));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window2<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface2.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2-&gt;isActive());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>window1-&gt;move(QPoint(300,<sp/>200));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>window2-&gt;move(QPoint(500,<sp/>200));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>several<sp/>windows<sp/>on<sp/>the<sp/>right<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface3(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface3(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface3.get()));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window3<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface3.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3-&gt;isActive());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface4(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface4(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface4.get()));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window4<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface4.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4-&gt;isActive());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>window3-&gt;move(QPoint(1380,<sp/>200));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>window4-&gt;move(QPoint(1580,<sp/>200));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>to<sp/>the<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69abbe324899c853ba3b231f973f844c426" kindref="member">Workspace::DirectionWest</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3-&gt;isActive());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>to<sp/>the<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69abbe324899c853ba3b231f973f844c426" kindref="member">Workspace::DirectionWest</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2-&gt;isActive());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>to<sp/>the<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69abbe324899c853ba3b231f973f844c426" kindref="member">Workspace::DirectionWest</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1-&gt;isActive());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>to<sp/>the<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69abbe324899c853ba3b231f973f844c426" kindref="member">Workspace::DirectionWest</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4-&gt;isActive());</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroy<sp/>all<sp/>windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface1.reset();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window1));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface2.reset();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window2));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface3.reset();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window3));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface4.reset();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window4));</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ActivationTest::testSwitchToWindowToRight()</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>&quot;Switch<sp/>to<sp/>Window<sp/>to<sp/>the<sp/>Right&quot;<sp/>shortcut<sp/>works.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>the<sp/>test<sp/>environment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>stackScreensHorizontally();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>several<sp/>windows<sp/>on<sp/>the<sp/>left<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface1(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface1(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface1.get()));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window1<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface1.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1-&gt;isActive());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface2(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface2(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface2.get()));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window2<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface2.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2-&gt;isActive());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>window1-&gt;move(QPoint(300,<sp/>200));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>window2-&gt;move(QPoint(500,<sp/>200));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>several<sp/>windows<sp/>on<sp/>the<sp/>right<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface3(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface3(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface3.get()));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window3<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface3.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3-&gt;isActive());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface4(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface4(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface4.get()));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window4<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface4.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4-&gt;isActive());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>window3-&gt;move(QPoint(1380,<sp/>200));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>window4-&gt;move(QPoint(1580,<sp/>200));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a15f4c5efa2b0812013442472b1c3a8a8" kindref="member">Workspace::DirectionEast</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1-&gt;isActive());</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a15f4c5efa2b0812013442472b1c3a8a8" kindref="member">Workspace::DirectionEast</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2-&gt;isActive());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a15f4c5efa2b0812013442472b1c3a8a8" kindref="member">Workspace::DirectionEast</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3-&gt;isActive());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a15f4c5efa2b0812013442472b1c3a8a8" kindref="member">Workspace::DirectionEast</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4-&gt;isActive());</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroy<sp/>all<sp/>windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface1.reset();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window1));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface2.reset();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window2));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface3.reset();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window3));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface4.reset();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window4));</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ActivationTest::testSwitchToWindowAbove()</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>&quot;Switch<sp/>to<sp/>Window<sp/>Above&quot;<sp/>shortcut<sp/>works.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>the<sp/>test<sp/>environment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>stackScreensVertically();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>several<sp/>windows<sp/>on<sp/>the<sp/>top<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface1(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface1(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface1.get()));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window1<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface1.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1-&gt;isActive());</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface2(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface2(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface2.get()));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window2<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface2.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2-&gt;isActive());</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>window1-&gt;move(QPoint(200,<sp/>300));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>window2-&gt;move(QPoint(200,<sp/>500));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>several<sp/>windows<sp/>on<sp/>the<sp/>bottom<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface3(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface3(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface3.get()));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window3<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface3.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3-&gt;isActive());</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface4(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface4(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface4.get()));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window4<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface4.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4-&gt;isActive());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>window3-&gt;move(QPoint(200,<sp/>1224));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>window4-&gt;move(QPoint(200,<sp/>1424));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a0addddb327e68da424c9afac55b41355" kindref="member">Workspace::DirectionNorth</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3-&gt;isActive());</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a0addddb327e68da424c9afac55b41355" kindref="member">Workspace::DirectionNorth</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2-&gt;isActive());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a0addddb327e68da424c9afac55b41355" kindref="member">Workspace::DirectionNorth</ref>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1-&gt;isActive());</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a0addddb327e68da424c9afac55b41355" kindref="member">Workspace::DirectionNorth</ref>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4-&gt;isActive());</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroy<sp/>all<sp/>windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface1.reset();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window1));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface2.reset();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window2));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface3.reset();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window3));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface4.reset();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window4));</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ActivationTest::testSwitchToWindowBelow()</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>&quot;Switch<sp/>to<sp/>Window<sp/>Bottom&quot;<sp/>shortcut<sp/>works.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>the<sp/>test<sp/>environment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>stackScreensVertically();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>several<sp/>windows<sp/>on<sp/>the<sp/>top<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface1(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface1(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface1.get()));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window1<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface1.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1-&gt;isActive());</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface2(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface2(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface2.get()));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window2<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface2.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2-&gt;isActive());</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>window1-&gt;move(QPoint(200,<sp/>300));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>window2-&gt;move(QPoint(200,<sp/>500));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>several<sp/>windows<sp/>on<sp/>the<sp/>bottom<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface3(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface3(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface3.get()));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window3<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface3.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3-&gt;isActive());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface4(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface4(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface4.get()));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window4<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface4.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4-&gt;isActive());</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>window3-&gt;move(QPoint(200,<sp/>1224));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>window4-&gt;move(QPoint(200,<sp/>1424));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69ab47c69147e9db336d33919ba7f6b7407" kindref="member">Workspace::DirectionSouth</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1-&gt;isActive());</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69ab47c69147e9db336d33919ba7f6b7407" kindref="member">Workspace::DirectionSouth</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2-&gt;isActive());</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69ab47c69147e9db336d33919ba7f6b7407" kindref="member">Workspace::DirectionSouth</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3-&gt;isActive());</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69ab47c69147e9db336d33919ba7f6b7407" kindref="member">Workspace::DirectionSouth</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4-&gt;isActive());</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroy<sp/>all<sp/>windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface1.reset();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window1));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface2.reset();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window2));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface3.reset();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window3));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface4.reset();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window4));</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ActivationTest::testSwitchToWindowMaximized()</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>we<sp/>switch<sp/>to<sp/>the<sp/>top-most<sp/>maximized<sp/>window,<sp/>i.e.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>one<sp/>that<sp/>user<sp/>sees<sp/>at<sp/>the<sp/>moment.<sp/>See<sp/>bug<sp/>411356.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>the<sp/>test<sp/>environment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>stackScreensHorizontally();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>several<sp/>maximized<sp/>windows<sp/>on<sp/>the<sp/>left<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface1(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface1(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface1.get()));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>toplevelConfigureRequestedSpy1(shellSurface1.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1acd9bde0a055bcdbb4623d0d97525a0c9" kindref="member">Test::XdgToplevel::configureRequested</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceConfigureRequestedSpy1(shellSurface1-&gt;xdgSurface(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">Test::XdgSurface::configureRequested</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window1<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface1.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1-&gt;isActive());</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy1.wait());<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>configure<sp/>event<sp/>with<sp/>the<sp/>activated<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a6275eab1e7d8c5270d6d1d526b6a505c" kindref="member">slotWindowMaximize</ref>();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy1.wait());</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>frameGeometryChangedSpy1(window1,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface1-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy1.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface1.get(),<sp/>toplevelConfigureRequestedSpy1.last().at(0).toSize(),<sp/>Qt::red);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy1.wait());</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface2(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface2(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface2.get()));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>toplevelConfigureRequestedSpy2(shellSurface2.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1acd9bde0a055bcdbb4623d0d97525a0c9" kindref="member">Test::XdgToplevel::configureRequested</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceConfigureRequestedSpy2(shellSurface2-&gt;xdgSurface(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">Test::XdgSurface::configureRequested</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window2<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface2.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2-&gt;isActive());</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy2.wait());<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>configure<sp/>event<sp/>with<sp/>the<sp/>activated<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a6275eab1e7d8c5270d6d1d526b6a505c" kindref="member">slotWindowMaximize</ref>();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy2.wait());</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>frameGeometryChangedSpy2(window2,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface2-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy2.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface2.get(),<sp/>toplevelConfigureRequestedSpy2.last().at(0).toSize(),<sp/>Qt::red);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy2.wait());</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Window<sp/>*&gt;<sp/>stackingOrder<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a376b811ccbcdce840e1a9838d62f802e" kindref="member">stackingOrder</ref>();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(stackingOrder.indexOf(window1)<sp/>&lt;<sp/>stackingOrder.indexOf(window2));</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window1-&gt;maximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window2-&gt;maximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>several<sp/>windows<sp/>on<sp/>the<sp/>right<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface3(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface3(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface3.get()));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window3<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface3.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3-&gt;isActive());</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface4(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface4(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface4.get()));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window4<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface4.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4-&gt;isActive());</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>window3-&gt;move(QPoint(1380,<sp/>200));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>window4-&gt;move(QPoint(1580,<sp/>200));</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>to<sp/>the<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69abbe324899c853ba3b231f973f844c426" kindref="member">Workspace::DirectionWest</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3-&gt;isActive());</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>to<sp/>the<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69abbe324899c853ba3b231f973f844c426" kindref="member">Workspace::DirectionWest</ref>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2-&gt;isActive());</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>to<sp/>the<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69abbe324899c853ba3b231f973f844c426" kindref="member">Workspace::DirectionWest</ref>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4-&gt;isActive());</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroy<sp/>all<sp/>windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface1.reset();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window1));</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface2.reset();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window2));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface3.reset();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window3));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface4.reset();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window4));</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ActivationTest::testSwitchToWindowFullScreen()</highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>we<sp/>switch<sp/>to<sp/>the<sp/>top-most<sp/>fullscreen<sp/>window,<sp/>i.e.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>one<sp/>that<sp/>user<sp/>sees<sp/>at<sp/>the<sp/>moment.<sp/>See<sp/>bug<sp/>411356.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>the<sp/>test<sp/>environment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>stackScreensVertically();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>several<sp/>maximized<sp/>windows<sp/>on<sp/>the<sp/>top<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface1(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface1(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface1.get()));</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>toplevelConfigureRequestedSpy1(shellSurface1.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1acd9bde0a055bcdbb4623d0d97525a0c9" kindref="member">Test::XdgToplevel::configureRequested</ref>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceConfigureRequestedSpy1(shellSurface1-&gt;xdgSurface(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">Test::XdgSurface::configureRequested</ref>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window1<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface1.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1-&gt;isActive());</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy1.wait());<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>configure<sp/>event<sp/>with<sp/>the<sp/>activated<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a9995140fe55894b5085c5cfb84243caa" kindref="member">slotWindowFullScreen</ref>();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy1.wait());</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>frameGeometryChangedSpy1(window1,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface1-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy1.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface1.get(),<sp/>toplevelConfigureRequestedSpy1.last().at(0).toSize(),<sp/>Qt::red);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy1.wait());</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface2(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface2(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface2.get()));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>toplevelConfigureRequestedSpy2(shellSurface2.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1acd9bde0a055bcdbb4623d0d97525a0c9" kindref="member">Test::XdgToplevel::configureRequested</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceConfigureRequestedSpy2(shellSurface2-&gt;xdgSurface(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">Test::XdgSurface::configureRequested</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window2<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface2.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2-&gt;isActive());</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy2.wait());<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>configure<sp/>event<sp/>with<sp/>the<sp/>activated<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a9995140fe55894b5085c5cfb84243caa" kindref="member">slotWindowFullScreen</ref>();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy2.wait());</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>frameGeometryChangedSpy2(window2,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface2-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy2.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface2.get(),<sp/>toplevelConfigureRequestedSpy2.last().at(0).toSize(),<sp/>Qt::red);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy2.wait());</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Window<sp/>*&gt;<sp/>stackingOrder<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a376b811ccbcdce840e1a9838d62f802e" kindref="member">stackingOrder</ref>();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(stackingOrder.indexOf(window1)<sp/>&lt;<sp/>stackingOrder.indexOf(window2));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window1-&gt;isFullScreen());</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2-&gt;isFullScreen());</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>several<sp/>windows<sp/>on<sp/>the<sp/>bottom<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface3(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface3(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface3.get()));</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window3<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface3.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3-&gt;isActive());</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface4(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface4(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface4.get()));</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*window4<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface4.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4-&gt;isActive());</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>window3-&gt;move(QPoint(200,<sp/>1224));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>window4-&gt;move(QPoint(200,<sp/>1424));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a0addddb327e68da424c9afac55b41355" kindref="member">Workspace::DirectionNorth</ref>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window3-&gt;isActive());</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a0addddb327e68da424c9afac55b41355" kindref="member">Workspace::DirectionNorth</ref>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window2-&gt;isActive());</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>window<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" kindref="member">switchWindow</ref>(<ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a0addddb327e68da424c9afac55b41355" kindref="member">Workspace::DirectionNorth</ref>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window4-&gt;isActive());</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroy<sp/>all<sp/>windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface1.reset();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window1));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface2.reset();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window2));</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface3.reset();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window3));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface4.reset();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(window4));</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ActivationTest::stackScreensHorizontally()</highlight></codeline>
<codeline lineno="512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>pending<sp/>wl_output<sp/>bind<sp/>requests<sp/>before<sp/>destroying<sp/>all<sp/>outputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::qWait(1);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QRect&gt;<sp/>screenGeometries{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(1280,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>(screenGeometries);</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ActivationTest::stackScreensVertically()</highlight></codeline>
<codeline lineno="524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>pending<sp/>wl_output<sp/>bind<sp/>requests<sp/>before<sp/>destroying<sp/>all<sp/>outputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::qWait(1);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QRect&gt;<sp/>screenGeometries{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(0,<sp/>1024,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>(screenGeometries);</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window" kindref="compound">X11Window</ref><sp/>*createX11Window(xcb_connection_t<sp/>*<ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;geometry,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(xcb_window_t)&gt;<sp/>setup<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_window_t<sp/>windowId<sp/>=<sp/>xcb_generate_id(<ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_create_window(<ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>,<sp/>XCB_COPY_FROM_PARENT,<sp/>windowId,<sp/><ref refid="namespace_k_win_1a1c718478bc9788d32a9614c371aa754b" kindref="member">rootWindow</ref>(),</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry.x(),</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry.y(),</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry.width(),</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry.height(),</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>XCB_WINDOW_CLASS_INPUT_OUTPUT,<sp/>XCB_COPY_FROM_PARENT,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_size_hints_t<sp/>hints;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;hints,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hints));</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_icccm_size_hints_set_position(&amp;hints,<sp/>1,<sp/>geometry.x(),<sp/>geometry.y());</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_icccm_size_hints_set_size(&amp;hints,<sp/>1,<sp/>geometry.width(),<sp/>geometry.height());</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_icccm_set_wm_normal_hints(<ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>,<sp/>windowId,<sp/>&amp;hints);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setup)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup(windowId);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_map_window(<ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>,<sp/>windowId);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_flush(<ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>windowCreatedSpy(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a8f82a0ac5517ddb86629fa3f8243e388" kindref="member">Workspace::windowAdded</ref>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!windowCreatedSpy.wait())<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>windowCreatedSpy.last().first().value&lt;<ref refid="class_k_win_1_1_x11_window" kindref="compound">X11Window</ref><sp/>*&gt;();</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ActivationTest::testActiveFullscreen()</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tests<sp/>that<sp/>an<sp/>active<sp/>X11<sp/>fullscreen<sp/>window<sp/>gets<sp/>removed<sp/>from<sp/>the<sp/>active<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>activating<sp/>a<sp/>Wayland<sp/>window,<sp/>even<sp/>if<sp/>there&apos;s<sp/>a<sp/>pending<sp/>activation<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>X11<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({QRect(0,<sp/>0,<sp/>1280,<sp/>1024)});</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>Test::XcbConnectionPtr<sp/>c<sp/>=<sp/>Test::createX11Connection();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!xcb_connection_has_error(c.get()));</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>X11Window<sp/>*x11Window<sp/>=<sp/>createX11Window(c.get(),<sp/>QRect(0,<sp/>0,<sp/>100,<sp/>200));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>it<sp/>fullscreen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>x11Window-&gt;setFullScreen(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(x11Window-&gt;isFullScreen());</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(x11Window-&gt;layer(),<sp/><ref refid="namespace_k_win_1ad43bbfea407edd7454680404fd8f3a7ba72d87368e7eece861abf32b4d9cd5db0" kindref="member">Layer::ActiveLayer</ref>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now,<sp/>activate<sp/>it<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" kindref="member">activateWindow</ref>(x11Window);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now,<sp/>create<sp/>and<sp/>activate<sp/>a<sp/>Wayland<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>waylandWindow<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(500,<sp/>300),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(waylandWindow);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>Wayland<sp/>window<sp/>should<sp/>become<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>X11<sp/>window<sp/>should<sp/>not<sp/>be<sp/>in<sp/>the<sp/>active<sp/>layer<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>stackingOrder(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a47f5cff26f9f97c938e9adb15c8f643b" kindref="member">Workspace::stackingOrderChanged</ref>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" kindref="member">activateWindow</ref>(waylandWindow);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activeWindow(),<sp/>waylandWindow);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(x11Window-&gt;layer(),<sp/><ref refid="namespace_k_win_1ad43bbfea407edd7454680404fd8f3a7bae433b31a6f103cf33c75a7b84b999116" kindref="member">Layer::NormalLayer</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><ref refid="kwin__wayland__test_8h_1a105fcd0c1d5eb52370ab30db8ad37c4c" kindref="member">WAYLANDTEST_MAIN</ref>(<ref refid="class_k_win_1_1_activation_test" kindref="compound">KWin::ActivationTest</ref>)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;activation_test.moc&quot;</highlight></codeline>
    </programlisting>
    <location file="kwin/autotests/integration/activation_test.cpp"/>
  </compounddef>
</doxygen>
