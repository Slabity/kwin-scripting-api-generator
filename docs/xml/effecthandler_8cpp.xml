<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="effecthandler_8cpp" kind="file" language="C++">
    <compoundname>effecthandler.cpp</compoundname>
    <includes refid="effecthandler_8h" local="yes">effect/effecthandler.h</includes>
    <includes local="yes">config-kwin.h</includes>
    <includes local="yes">compositor.h</includes>
    <includes refid="inputdevice_8h" local="yes">core/inputdevice.h</includes>
    <includes refid="core_2output_8h" local="yes">core/output.h</includes>
    <includes refid="renderbackend_8h" local="yes">core/renderbackend.h</includes>
    <includes refid="rendertarget_8h" local="yes">core/rendertarget.h</includes>
    <includes refid="renderviewport_8h" local="yes">core/renderviewport.h</includes>
    <includes refid="decorationbridge_8h" local="yes">decorations/decorationbridge.h</includes>
    <includes refid="effectloader_8h" local="yes">effect/effectloader.h</includes>
    <includes refid="offscreenquickview_8h" local="yes">effect/offscreenquickview.h</includes>
    <includes local="yes">effectsadaptor.h</includes>
    <includes refid="input_8h" local="yes">input.h</includes>
    <includes refid="input__event_8h" local="yes">input_event.h</includes>
    <includes refid="inputmethod_8h" local="yes">inputmethod.h</includes>
    <includes refid="inputpanelv1window_8h" local="yes">inputpanelv1window.h</includes>
    <includes refid="keyboard__input_8h" local="yes">keyboard_input.h</includes>
    <includes refid="glshader_8h" local="yes">opengl/glshader.h</includes>
    <includes refid="glshadermanager_8h" local="yes">opengl/glshadermanager.h</includes>
    <includes refid="gltexture_8h" local="yes">opengl/gltexture.h</includes>
    <includes refid="osd_8h" local="yes">osd.h</includes>
    <includes refid="pointer__input_8h" local="yes">pointer_input.h</includes>
    <includes refid="itemrenderer_8h" local="yes">scene/itemrenderer.h</includes>
    <includes refid="windowitem_8h" local="yes">scene/windowitem.h</includes>
    <includes refid="workspacescene_8h" local="yes">scene/workspacescene.h</includes>
    <includes refid="screenedge_8h" local="yes">screenedge.h</includes>
    <includes refid="scripting_8h" local="yes">scripting/scripting.h</includes>
    <includes refid="sm_8h" local="yes">sm.h</includes>
    <includes local="yes">virtualdesktops.h</includes>
    <includes refid="wayland__server_8h" local="yes">wayland_server.h</includes>
    <includes refid="window__property__notify__x11__filter_8h" local="yes">window_property_notify_x11_filter.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes local="no">KDecoration3/Decoration</includes>
    <includes local="no">KDecoration3/DecorationSettings</includes>
    <includes local="no">QFontMetrics</includes>
    <includes local="no">QMatrix4x4</includes>
    <includes local="no">QMouseEvent</includes>
    <includes local="no">QPainter</includes>
    <includes local="no">QPixmap</includes>
    <includes local="no">QTimeLine</includes>
    <includes local="no">QVariant</includes>
    <includes local="no">QWindow</includes>
    <includes local="no">QtMath</includes>
    <includes local="yes">moc_effecthandler.cpp</includes>
    <includes local="yes">moc_globals.cpp</includes>
    <incdepgraph>
      <node id="20">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>core/renderlayerdelegate.h</label>
        <link refid="renderlayerdelegate_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>core/renderviewport.h</label>
        <link refid="renderviewport_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>decorations/decorationbridge.h</label>
        <link refid="decorationbridge_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>effect/effect.h</label>
        <link refid="effect_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/effect/effecthandler.cpp</label>
        <link refid="effecthandler_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>effect/effecthandler.h</label>
        <link refid="effecthandler_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>effect/effectloader.h</label>
        <link refid="effectloader_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>effect/effectwindow.h</label>
        <link refid="effectwindow_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>effect/offscreenquickview.h</label>
        <link refid="offscreenquickview_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>input.h</label>
        <link refid="input_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>input_event.h</label>
        <link refid="input__event_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>input_event_spy.h</label>
        <link refid="input__event__spy_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>inputmethod.h</label>
        <link refid="inputmethod_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>inputpanelv1window.h</label>
        <link refid="inputpanelv1window_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>keyboard_input.h</label>
        <link refid="keyboard__input_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>opengl/glshader.h</label>
        <link refid="glshader_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>opengl/glshadermanager.h</label>
        <link refid="glshadermanager_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>opengl/gltexture.h</label>
        <link refid="gltexture_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>osd.h</label>
        <link refid="osd_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>pointer_input.h</label>
        <link refid="pointer__input_8h"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>rules.h</label>
        <link refid="rules_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>scene/item.h</label>
        <link refid="item_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>scene/itemgeometry.h</label>
        <link refid="itemgeometry_8h"/>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>scene/itemrenderer.h</label>
        <link refid="itemrenderer_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>scene/scene.h</label>
        <link refid="scene_8h"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>scene/windowitem.h</label>
        <link refid="windowitem_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>scene/workspacescene.h</label>
        <link refid="workspacescene_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>screenedge.h</label>
        <link refid="screenedge_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>scripting/scripting.h</label>
        <link refid="scripting_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>utils/cursortheme.h</label>
        <link refid="cursortheme_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>wayland/inputmethod_v1.h</label>
        <link refid="inputmethod__v1_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>textinput.h</label>
        <link refid="textinput_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>wayland/textinput_v2.h</label>
        <link refid="textinput__v2_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>wayland_server.h</label>
        <link refid="wayland__server_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>waylandwindow.h</label>
        <link refid="waylandwindow_8h"/>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>window.h</label>
        <link refid="window_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>window_property_notify_x11_filter.h</label>
        <link refid="window__property__notify__x11__filter_8h"/>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>x11eventfilter.h</label>
        <link refid="x11eventfilter_8h"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>KConfigGroup</label>
      </node>
      <node id="59">
        <label>KConfigWatcher</label>
      </node>
      <node id="131">
        <label>KDecoration3/Decoration</label>
      </node>
      <node id="132">
        <label>KDecoration3/DecorationSettings</label>
      </node>
      <node id="48">
        <label>KDecoration3/Private/DecorationBridge</label>
      </node>
      <node id="13">
        <label>KPluginFactory</label>
      </node>
      <node id="50">
        <label>KPluginMetaData</label>
      </node>
      <node id="14">
        <label>KSharedConfig</label>
      </node>
      <node id="79">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="80">
        <label>QApplication</label>
      </node>
      <node id="23">
        <label>QByteArray</label>
      </node>
      <node id="92">
        <label>QColor</label>
      </node>
      <node id="6">
        <label>QCoreApplication</label>
      </node>
      <node id="120">
        <label>QDBusContext</label>
      </node>
      <node id="121">
        <label>QDBusMessage</label>
      </node>
      <node id="123">
        <label>QDataStream</label>
      </node>
      <node id="26">
        <label>QDebug</label>
      </node>
      <node id="30">
        <label>QEasingCurve</label>
      </node>
      <node id="87">
        <label>QElapsedTimer</label>
      </node>
      <node id="99">
        <label>QExplicitlySharedDataPointer</label>
      </node>
      <node id="51">
        <label>QFlags</label>
      </node>
      <node id="133">
        <label>QFontMetrics</label>
      </node>
      <node id="34">
        <label>QHash</label>
      </node>
      <node id="31">
        <label>QIcon</label>
      </node>
      <node id="7">
        <label>QImage</label>
      </node>
      <node id="117">
        <label>QJSEngine</label>
      </node>
      <node id="118">
        <label>QJSValue</label>
      </node>
      <node id="88">
        <label>QKeySequence</label>
      </node>
      <node id="24">
        <label>QList</label>
      </node>
      <node id="35">
        <label>QLoggingCategory</label>
      </node>
      <node id="52">
        <label>QMap</label>
      </node>
      <node id="93">
        <label>QMatrix3x3</label>
      </node>
      <node id="22">
        <label>QMatrix4x4</label>
      </node>
      <node id="65">
        <label>QMetaType</label>
      </node>
      <node id="134">
        <label>QMouseEvent</label>
      </node>
      <node id="18">
        <label>QObject</label>
      </node>
      <node id="135">
        <label>QPainter</label>
      </node>
      <node id="32">
        <label>QPair</label>
      </node>
      <node id="136">
        <label>QPixmap</label>
      </node>
      <node id="8">
        <label>QPoint</label>
      </node>
      <node id="90">
        <label>QPointF</label>
      </node>
      <node id="43">
        <label>QPointer</label>
      </node>
      <node id="81">
        <label>QProcessEnvironment</label>
      </node>
      <node id="53">
        <label>QQueue</label>
      </node>
      <node id="27">
        <label>QRect</label>
      </node>
      <node id="46">
        <label>QRectF</label>
      </node>
      <node id="12">
        <label>QRegion</label>
      </node>
      <node id="33">
        <label>QSet</label>
      </node>
      <node id="103">
        <label>QSharedDataPointer</label>
      </node>
      <node id="25">
        <label>QSize</label>
      </node>
      <node id="36">
        <label>QStack</label>
      </node>
      <node id="54">
        <label>QStaticPlugin</label>
      </node>
      <node id="85">
        <label>QString</label>
      </node>
      <node id="119">
        <label>QStringList</label>
      </node>
      <node id="137">
        <label>QTimeLine</label>
      </node>
      <node id="70">
        <label>QTimer</label>
      </node>
      <node id="111">
        <label>QTransform</label>
      </node>
      <node id="56">
        <label>QUrl</label>
      </node>
      <node id="28">
        <label>QUuid</label>
      </node>
      <node id="9">
        <label>QVariant</label>
      </node>
      <node id="10">
        <label>QVector2D</label>
      </node>
      <node id="94">
        <label>QVector3D</label>
      </node>
      <node id="29">
        <label>QWindow</label>
      </node>
      <node id="66">
        <label>QtGlobal</label>
      </node>
      <node id="138">
        <label>QtMath</label>
      </node>
      <node id="61">
        <label>chrono</label>
      </node>
      <node id="86">
        <label>climits</label>
      </node>
      <node id="38">
        <label>compositor.h</label>
      </node>
      <node id="3">
        <label>config-kwin.h</label>
      </node>
      <node id="57">
        <label>effectsadaptor.h</label>
      </node>
      <node id="95">
        <label>epoxy/gl.h</label>
      </node>
      <node id="37">
        <label>functional</label>
      </node>
      <node id="11">
        <label>kwin_export.h</label>
      </node>
      <node id="97">
        <label>map</label>
      </node>
      <node id="44">
        <label>memory</label>
      </node>
      <node id="139">
        <label>moc_effecthandler.cpp</label>
      </node>
      <node id="140">
        <label>moc_globals.cpp</label>
      </node>
      <node id="130">
        <label>netwm_def.h</label>
      </node>
      <node id="21">
        <label>optional</label>
      </node>
      <node id="109">
        <label>ranges</label>
      </node>
      <node id="110">
        <label>span</label>
      </node>
      <node id="67">
        <label>utility</label>
      </node>
      <node id="68">
        <label>vector</label>
      </node>
      <node id="125">
        <label>virtualdesktops.h</label>
      </node>
      <node id="76">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2006<sp/>Lubos<sp/>Lunak<sp/>&lt;l.lunak@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2009<sp/>Lucas<sp/>Murray<sp/>&lt;lmurray@undefinedfire.com&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2018<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="effecthandler_8h" kindref="compound">effect/effecthandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config-kwin.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compositor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inputdevice_8h" kindref="compound">core/inputdevice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2output_8h" kindref="compound">core/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderbackend_8h" kindref="compound">core/renderbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rendertarget_8h" kindref="compound">core/rendertarget.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderviewport_8h" kindref="compound">core/renderviewport.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="decorationbridge_8h" kindref="compound">decorations/decorationbridge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="effectloader_8h" kindref="compound">effect/effectloader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="offscreenquickview_8h" kindref="compound">effect/offscreenquickview.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;effectsadaptor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input_8h" kindref="compound">input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input__event_8h" kindref="compound">input_event.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inputmethod_8h" kindref="compound">inputmethod.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inputpanelv1window_8h" kindref="compound">inputpanelv1window.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keyboard__input_8h" kindref="compound">keyboard_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glshader_8h" kindref="compound">opengl/glshader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glshadermanager_8h" kindref="compound">opengl/glshadermanager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gltexture_8h" kindref="compound">opengl/gltexture.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="osd_8h" kindref="compound">osd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer__input_8h" kindref="compound">pointer_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="itemrenderer_8h" kindref="compound">scene/itemrenderer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="windowitem_8h" kindref="compound">scene/windowitem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspacescene_8h" kindref="compound">scene/workspacescene.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="screenedge_8h" kindref="compound">screenedge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scripting_8h" kindref="compound">scripting/scripting.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sm_8h" kindref="compound">sm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;virtualdesktops.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland__server_8h" kindref="compound">wayland_server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="window__property__notify__x11__filter_8h" kindref="compound">window_property_notify_x11_filter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="x11window_8h" kindref="compound">x11window.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_ACTIVITIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="activities_8h" kindref="compound">activities.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_TABBOX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tabbox_8h" kindref="compound">tabbox/tabbox.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_SCREENLOCKER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="screenlockerwatcher_8h" kindref="compound">screenlockerwatcher.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KDecoration3/Decoration&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KDecoration3/DecorationSettings&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QFontMetrics&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QMatrix4x4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QMouseEvent&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPainter&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPixmap&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTimeLine&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QVariant&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QWindow&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtMath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QByteArray<sp/>readWindowProperty(xcb_window_t<sp/>win,<sp/>xcb_atom_t<sp/>atom,<sp/>xcb_atom_t<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(win<sp/>==<sp/>XCB_WINDOW_NONE)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QByteArray();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>len<sp/>=<sp/>32768;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xcb_1_1_property" kindref="compound">Xcb::Property</ref><sp/>prop(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>win,<sp/>atom,<sp/>XCB_ATOM_ANY,<sp/>0,<sp/>len);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prop.isNull())<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>property<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QByteArray();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prop-&gt;bytes_after<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prop.toByteArray(<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>xcb_atom_t<sp/>registerSupportProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;propertyName)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>kwinApp()-&gt;x11Connection();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>XCB_ATOM_NONE;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>atom<sp/>for<sp/>the<sp/>propertyName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1af8087ffc5ee2774d3ec42e3ff2ad9456" kindref="member">UniqueCPtr&lt;xcb_intern_atom_reply_t&gt;</ref><sp/>atomReply(xcb_intern_atom_reply(c,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcb_intern_atom_unchecked(c,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>propertyName.size(),<sp/>propertyName.constData()),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!atomReply)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>XCB_ATOM_NONE;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>announce<sp/>property<sp/>on<sp/>root<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dummy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_change_property(c,<sp/>XCB_PROP_MODE_REPLACE,<sp/>kwinApp()-&gt;x11RootWindow(),<sp/>atomReply-&gt;atom,<sp/>atomReply-&gt;atom,<sp/>8,<sp/>1,<sp/>&amp;dummy);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>add<sp/>to<sp/>_NET_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atomReply-&gt;atom;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unregisterSupportProperty(xcb_atom_t<sp/>atom)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>kwinApp()-&gt;x11Connection();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_delete_property(c,<sp/>kwinApp()-&gt;x11RootWindow(),<sp/>atom);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//****************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectsHandler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//****************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_k_win_1_1_effects_handler_1abbeccbfc8813c73f1915fdd164969a28" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_effects_handler_1abbeccbfc8813c73f1915fdd164969a28" kindref="member">EffectsHandler::EffectsHandler</ref>(<ref refid="class_k_win_1_1_compositor" kindref="compound">Compositor</ref><sp/>*compositor,<sp/><ref refid="class_k_win_1_1_workspace_scene" kindref="compound">WorkspaceScene</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1ae9387e5aced8ad8a45d661e7137ed4ce" kindref="member">scene</ref>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_effects_handler_1ae1e1f59c67718d9a7ec2c97540d83568" kindref="member">keyboard_grab_effect</ref>(nullptr)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_effects_handler_1a3eaef43498d3d1008491ed2716347576" kindref="member">fullscreen_effect</ref>(nullptr)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_effects_handler_1a1517b585d33791a3e46492ae6d659584" kindref="member">compositing_type</ref>(compositor-&gt;backend()-&gt;<ref refid="class_k_win_1_1_effects_handler_1a53ad442150183d254eca227ddd5571e1" kindref="member">compositingType</ref>())</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_effects_handler_1a4291b830d7c09b02ed712c3d22fd6aa4" kindref="member">m_compositor</ref>(compositor)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_effects_handler_1ab85de72d7501ab7654b5f702441c5814" kindref="member">m_scene</ref>(<ref refid="class_k_win_1_1_effects_handler_1ae9387e5aced8ad8a45d661e7137ed4ce" kindref="member">scene</ref>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_effects_handler_1a423b07a48fa38374dda8a22e827185af" kindref="member">m_effectLoader</ref>(new<sp/><ref refid="class_k_win_1_1_effect_loader" kindref="compound">EffectLoader</ref>(this))</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a1517b585d33791a3e46492ae6d659584" kindref="member">compositing_type</ref><sp/>==<sp/><ref refid="namespace_k_win_1aa1e33474a7077a13169f350a5949a79aa28e3e1a5f320d10fe0aeea04c5d3871f" kindref="member">NoCompositing</ref>)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">KWin::effects</ref><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;QList&lt;KWin::EffectWindow<sp/>*&gt;&gt;();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;KWin::SessionState&gt;();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_effects_handler_1a423b07a48fa38374dda8a22e827185af" kindref="member">m_effectLoader</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_abstract_effect_loader_1a4a431e11259b47ecb9ba3346b8012e63" kindref="member">AbstractEffectLoader::effectLoaded</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*effect,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1abf08ae922efe0dea4102c158cebece79" kindref="member">effect_order</ref>.insert(effect-&gt;<ref refid="group__kwineffects_1ga120531588e58691a5a18028158d2947a" kindref="member">requestedEffectChainPosition</ref>(),<sp/><ref refid="namespace_k_win_1ace229504290a828dece325a748e290c9" kindref="member">EffectPair</ref>(name,<sp/>effect));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1ace229504290a828dece325a748e290c9" kindref="member">EffectPair</ref>(name,<sp/>effect);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a9917d33d0b1bcf131b7fd6bac9e85d3f" kindref="member">effectsChanged</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a423b07a48fa38374dda8a22e827185af" kindref="member">m_effectLoader</ref>-&gt;setConfig(kwinApp()-&gt;<ref refid="class_k_win_1_1_effects_handler_1ae57baacdc4a49cc4f1093c1e318a86cd" kindref="member">config</ref>());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>EffectsAdaptor(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>QDBusConnection<sp/>dbus<sp/>=<sp/>QDBusConnection::sessionBus();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>dbus.registerObject(QStringLiteral(</highlight><highlight class="stringliteral">&quot;/Effects&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_options_1a842b8aa598332cc09b678b2feb297f4e" kindref="member">Options::animationSpeedChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1a54ff1538e8794a6f81f271a7ff0d75f6" kindref="member">EffectsHandler::reconfigureEffects</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace" kindref="compound">Workspace</ref><sp/>*ws<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_virtual_desktop_manager" kindref="compound">VirtualDesktopManager</ref><sp/>*vds<sp/>=<sp/>VirtualDesktopManager::self();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(ws,<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a683e1ce1a2cb1301a7096a323e2111e2" kindref="member">Workspace::showingDesktopChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>showing,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>animated)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(animated)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1a001c56813196665854334eb774d765ad" kindref="member">showingDesktopChanged</ref>(showing);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(ws,<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a6b3280a21aab25e4b281825ac80cc03c" kindref="member">Workspace::currentDesktopChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*old,<sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*newDesktop<sp/>=<sp/>VirtualDesktopManager::self()-&gt;currentDesktop();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1ac71df72597202eed23f6211d8fa80c50" kindref="member">desktopChanged</ref>(old,<sp/>newDesktop,<sp/>window<sp/>?<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a680b520607df91ff2ee91be0c33c8736" kindref="member">effectWindow</ref>()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(ws,<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a7862ecb48b5771a771a8bd49ccc446c2" kindref="member">Workspace::currentDesktopChanging</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a722658571850786bb4516ae98247479f" kindref="member">currentDesktop</ref>,<sp/>QPointF<sp/>offset,<sp/><ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref><sp/>*window)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1a2c7e78f36bc49937eb4de56521fcda5b" kindref="member">desktopChanging</ref>(<ref refid="class_k_win_1_1_effects_handler_1a722658571850786bb4516ae98247479f" kindref="member">currentDesktop</ref>,<sp/>offset,<sp/>window<sp/>?<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a680b520607df91ff2ee91be0c33c8736" kindref="member">effectWindow</ref>()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(ws,<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a313825797f477b7a9f6f427a8c4b8b0f" kindref="member">Workspace::currentDesktopChangingCancelled</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1ade940098c549fce05980843a04d30414" kindref="member">desktopChangingCancelled</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(ws,<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a8f82a0ac5517ddb86629fa3f8243e388" kindref="member">Workspace::windowAdded</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a0949e36da2f02fdb23c37185cdbe3a5f" kindref="member">setupWindowConnections</ref>(window);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1af265803a52b130d505ab9f8f66a30eb0" kindref="member">windowAdded</ref>(window-&gt;<ref refid="class_k_win_1_1_window_1a680b520607df91ff2ee91be0c33c8736" kindref="member">effectWindow</ref>());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(ws,<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a7b90a95e89c3140a7af30e853e5359c6" kindref="member">Workspace::windowActivated</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1a3ea23595f9c9f41f2ea0a63072e80852" kindref="member">windowActivated</ref>(window<sp/>?<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a680b520607df91ff2ee91be0c33c8736" kindref="member">effectWindow</ref>()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(ws,<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1ae10af479c806f190fb52cc434eef9fb5" kindref="member">Workspace::deletedRemoved</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref><sp/>*d)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1a13c385b70a4984545ba1f8ed8204871c" kindref="member">windowDeleted</ref>(d-&gt;<ref refid="class_k_win_1_1_window_1a680b520607df91ff2ee91be0c33c8736" kindref="member">effectWindow</ref>());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(ws-&gt;<ref refid="class_k_win_1_1_workspace_1adbf79458e8db9c18b4144a8755d63a47" kindref="member">sessionManager</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_session_manager_1aafda065245edffd7169ff958f7943dc7" kindref="member">SessionManager::stateChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1a42c5a8a1ef62297efe3dac1db56eae27" kindref="member">KWin::EffectsHandler::sessionStateChanged</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(vds,<sp/>&amp;<ref refid="class_k_win_1_1_virtual_desktop_manager_1a4446f0f03e6b5123d740dafe27078e59" kindref="member">VirtualDesktopManager::layoutChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1a0e612c2b8c76eb5c101ab888b374640d" kindref="member">desktopGridSizeChanged</ref>(QSize(width,<sp/>height));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1a99ce8955558745618a24aad250b7861a" kindref="member">desktopGridWidthChanged</ref>(width);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1acd265f3c8b9f78c6291e6c2f73ea95a0" kindref="member">desktopGridHeightChanged</ref>(height);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(vds,<sp/>&amp;<ref refid="class_k_win_1_1_virtual_desktop_manager_1a77985fc2aa2d269ca937055ef6f82980" kindref="member">VirtualDesktopManager::desktopAdded</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1a766f0b484b03e847d42bbe6513b65211" kindref="member">EffectsHandler::desktopAdded</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(vds,<sp/>&amp;<ref refid="class_k_win_1_1_virtual_desktop_manager_1ae4653e9f1b10c56eb1421e073ed73cec" kindref="member">VirtualDesktopManager::desktopRemoved</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1a649beb5237e8e56d972bec153ee5099d" kindref="member">EffectsHandler::desktopRemoved</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(ws,<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1acd184adfbb27f515c16e899192fbfe40" kindref="member">Workspace::geometryChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1afe0cedc1f3130eba803aa1ff8474c0da" kindref="member">EffectsHandler::virtualScreenSizeChanged</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(ws,<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1acd184adfbb27f515c16e899192fbfe40" kindref="member">Workspace::geometryChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1a7c1de7dad6da165bee9963bb8ea79765" kindref="member">EffectsHandler::virtualScreenGeometryChanged</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_ACTIVITIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_activities" kindref="compound">Activities</ref><sp/>*activities<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;activities())<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(activities,<sp/>&amp;<ref refid="class_k_win_1_1_activities_1a267014089566a7f4f341700b0060cb85" kindref="member">Activities::added</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1af8d871c87ed14f414499776ee6f8cfc6" kindref="member">EffectsHandler::activityAdded</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(activities,<sp/>&amp;<ref refid="class_k_win_1_1_activities_1ac53de229e4e17c7b58d1e4cb7f6af0de" kindref="member">Activities::removed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1abcffea0410b087f0fc63b611495b4966" kindref="member">EffectsHandler::activityRemoved</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(activities,<sp/>&amp;<ref refid="class_k_win_1_1_activities_1ac215eabb1825ffb8f3c8fcc8013380fb" kindref="member">Activities::currentChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1a2a62645ebf6d5fc075be76e5545da8f2" kindref="member">EffectsHandler::currentActivityChanged</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(activities,<sp/>&amp;<ref refid="class_k_win_1_1_activities_1a29f01f30a29f445c1bdcda246270fa2d" kindref="member">Activities::currentAboutToChange</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1ae74f59704706fe4ae364853a466513d3" kindref="member">EffectsHandler::currentActivityAboutToChange</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(ws,<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a47f5cff26f9f97c938e9adb15c8f643b" kindref="member">Workspace::stackingOrderChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1a6c05d0ac5ccfd76b8832cc77fb9085ac" kindref="member">EffectsHandler::stackingOrderChanged</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_TABBOX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box" kindref="compound">TabBox::TabBox</ref><sp/>*<ref refid="namespace_k_win_1_1_tab_box_1ab8e1cbfa02924a1537b961051b1a4038" kindref="member">tabBox</ref><sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1_1_tab_box_1ab8e1cbfa02924a1537b961051b1a4038" kindref="member">tabBox</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a022015d159ec1731e56daa8da6f40ea1" kindref="member">TabBox::TabBox::tabBoxAdded</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1afdd37c120cdf7956a779085df023df32" kindref="member">EffectsHandler::tabBoxAdded</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1_1_tab_box_1ab8e1cbfa02924a1537b961051b1a4038" kindref="member">tabBox</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a72049c4cc4a44a9bc6309aa23be46e18" kindref="member">TabBox::TabBox::tabBoxUpdated</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1a4523d2f45730341547249aca8d60756e" kindref="member">EffectsHandler::tabBoxUpdated</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1_1_tab_box_1ab8e1cbfa02924a1537b961051b1a4038" kindref="member">tabBox</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9430e324f64ad9450044173df6d2d50e" kindref="member">TabBox::TabBox::tabBoxClosed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1aa237f092ce7ff9a89d9894f0f4a6a2e1" kindref="member">EffectsHandler::tabBoxClosed</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1_1_tab_box_1ab8e1cbfa02924a1537b961051b1a4038" kindref="member">tabBox</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae9d066878e968c9aa360d40ad52a0638" kindref="member">TabBox::TabBox::tabBoxKeyEvent</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1a509a05a602542a209519076059e50b40" kindref="member">EffectsHandler::tabBoxKeyEvent</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;screenEdges(),<sp/>&amp;<ref refid="class_k_win_1_1_screen_edges_1a04aa6440e7ee09f13b55057b1941d174" kindref="member">ScreenEdges::approaching</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1acadff1f45281ea7be68317114e653097" kindref="member">EffectsHandler::screenEdgeApproaching</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_SCREENLOCKER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(kwinApp()-&gt;screenLockerWatcher(),<sp/>&amp;<ref refid="class_k_win_1_1_screen_locker_watcher_1ae21a00302ccc4de7fe370159bf982c62" kindref="member">ScreenLockerWatcher::locked</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1a1222f73b36c35bb0c3145a0f579aa8a7" kindref="member">EffectsHandler::screenLockingChanged</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(kwinApp()-&gt;screenLockerWatcher(),<sp/>&amp;<ref refid="class_k_win_1_1_screen_locker_watcher_1a3a69dfe8a2f6294aa54338b7f7e2b644" kindref="member">ScreenLockerWatcher::aboutToLock</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1ac89554f16ab6a7eb23b4fcaf7ce3de84" kindref="member">EffectsHandler::screenAboutToLock</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.position<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1af79f50358d894b276f36aaf02d386947" kindref="member">globalPointer</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.buttons<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a7eb995003eabae0a699fe7003179c42b" kindref="member">qtButtonStates</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.modifiers<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a95d5ccabfaa4a8cb034bb4e96959e7d8" kindref="member">keyboardModifiers</ref>();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_input_redirection_1a4bc2b3a7895527356a967792f8a750ba" kindref="member">InputRedirection::globalPointerChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>oldPos<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.position;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.position<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1af79f50358d894b276f36aaf02d386947" kindref="member">globalPointer</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1ace7df1c309d2c4a64e324d6a52c680ca" kindref="member">mouseChanged</ref>(<ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.position,<sp/>oldPos,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.buttons,<sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.buttons,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.modifiers,<sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.modifiers);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_input_redirection_1af40bc7ced170b3ca4c21cdbee67af7f5" kindref="member">InputRedirection::pointerButtonStateChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Qt::MouseButtons<sp/>oldButtons<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.buttons;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.buttons<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a7eb995003eabae0a699fe7003179c42b" kindref="member">qtButtonStates</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1ace7df1c309d2c4a64e324d6a52c680ca" kindref="member">mouseChanged</ref>(<ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.position,<sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.position,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.buttons,<sp/>oldButtons,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.modifiers,<sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.modifiers);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_input_redirection_1a46a9b495e85862c29e63a8ef8eb4e5d1" kindref="member">InputRedirection::keyboardModifiersChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Qt::KeyboardModifiers<sp/>oldModifiers<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.modifiers;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.modifiers<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a95d5ccabfaa4a8cb034bb4e96959e7d8" kindref="member">keyboardModifiers</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1ace7df1c309d2c4a64e324d6a52c680ca" kindref="member">mouseChanged</ref>(<ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.position,<sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.position,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.buttons,<sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.buttons,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4c4d65f746ac05b1e127af82df42941e" kindref="member">m_cursor</ref>.modifiers,<sp/>oldModifiers);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(kwinApp(),<sp/>&amp;<ref refid="class_k_win_1_1_application_1ae9cc413a79aa2fe73cf1f348ab39a2bb" kindref="member">Application::x11ConnectionChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registered_atoms.clear();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_propertiesForEffects.keyBegin();<sp/>it<sp/>!=<sp/>m_propertiesForEffects.keyEnd();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>atom<sp/>=<sp/>registerSupportProperty(*it);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atom<sp/>==<sp/>XCB_ATOM_NONE)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a8977f4e67c8cea40eb0d5a56431db5e1" kindref="member">m_managedProperties</ref>.insert(*it,<sp/>atom);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1ad8300908e943ff0bb7163230617f68d2" kindref="member">registerPropertyType</ref>(atom,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwinApp()-&gt;x11Connection())<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a0326732b7509687116673d3ea6c761b4" kindref="member">m_x11WindowPropertyNotify</ref><sp/>=<sp/>std::make_unique&lt;WindowPropertyNotifyX11Filter&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a0326732b7509687116673d3ea6c761b4" kindref="member">m_x11WindowPropertyNotify</ref>.reset();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>xcbConnectionChanged();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwinApp()-&gt;x11Connection())<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a0326732b7509687116673d3ea6c761b4" kindref="member">m_x11WindowPropertyNotify</ref><sp/>=<sp/>std::make_unique&lt;WindowPropertyNotifyX11Filter&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>connect<sp/>all<sp/>clients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>:<sp/>ws-&gt;<ref refid="class_k_win_1_1_workspace_1a56ba55626239671625164a73ef19f775" kindref="member">windows</ref>())<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a0949e36da2f02fdb23c37185cdbe3a5f" kindref="member">setupWindowConnections</ref>(window);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(ws,<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a2ca59e0d2a0634945e4c160547a20f72" kindref="member">Workspace::outputAdded</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1a03c9bd1b03408dd71463f1bcc4c4ec82" kindref="member">EffectsHandler::screenAdded</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(ws,<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1acb430f5b2b96c6386636d80a89e33f81" kindref="member">Workspace::outputRemoved</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1a2aaa46342fafd4d0b09fb7497a0a7401" kindref="member">EffectsHandler::screenRemoved</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>inputMethod<sp/>=<sp/>kwinApp()-&gt;inputMethod())<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(inputMethod,<sp/>&amp;<ref refid="class_k_win_1_1_input_method_1a08db3d6588a4aaf2752f6f6ec42fdfd0" kindref="member">InputMethod::panelChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1ab5a661fdaf15efce0dd0d268cdb6441b" kindref="member">EffectsHandler::inputPanelChanged</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_cursors_1a5e43427047cf7663b4d9723fac4c1408" kindref="member">Cursors::self</ref>()-&gt;mouse(),<sp/>&amp;<ref refid="class_k_win_1_1_cursor_1ac5eb726bcd21b3f464b5d5969607cf09" kindref="member">Cursor::cursorChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1aa92530fc11fbd4b12f8d3791b1ffb92c" kindref="member">EffectsHandler::cursorShapeChanged</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a5dd867dd5c0ce8a24466faf1142dde61" kindref="member">reconfigure</ref>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="class_k_win_1_1_effects_handler_1ae89ac212c4a51c494c972c4cbb06a861" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_effects_handler_1ae89ac212c4a51c494c972c4cbb06a861" kindref="member">EffectsHandler::~EffectsHandler</ref>()</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a8a7da3ec9a422779b8d3b83f92306327" kindref="member">unloadAllEffects</ref>();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">KWin::effects</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">xcb_window_t<sp/>EffectsHandler::x11RootWindow()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="295"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kwinApp()-&gt;x11RootWindow();</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">xcb_connection_t<sp/>*EffectsHandler::xcbConnection()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="300"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kwinApp()-&gt;x11Connection();</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="class_k_win_1_1_effects_handler_1a87a49a5f918913876412e346eb3a1a56" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1aa1e33474a7077a13169f350a5949a79a" kindref="member">CompositingType</ref><sp/><ref refid="class_k_win_1_1_effects_handler_1a53ad442150183d254eca227ddd5571e1" kindref="member">EffectsHandler::compositingType</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="306"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a1517b585d33791a3e46492ae6d659584" kindref="member">compositing_type</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="class_k_win_1_1_effects_handler_1aa8a3368f17c08de910a182b1666bf610" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1aa8a3368f17c08de910a182b1666bf610" kindref="member">EffectsHandler::isOpenGLCompositing</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="311"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a1517b585d33791a3e46492ae6d659584" kindref="member">compositing_type</ref><sp/>&amp;<sp/><ref refid="namespace_k_win_1aa1e33474a7077a13169f350a5949a79aa9d91b030a3a42dc544de4de6f0d46b1d" kindref="member">OpenGLCompositing</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="class_k_win_1_1_effects_handler_1ade0f5183637ef9ef74750bed8203d0ac" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_egl_context" kindref="compound">EglContext</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1ade0f5183637ef9ef74750bed8203d0ac" kindref="member">EffectsHandler::openglContext</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="316"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ab85de72d7501ab7654b5f702441c5814" kindref="member">m_scene</ref>-&gt;openglContext();</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="class_k_win_1_1_effects_handler_1a8a7da3ec9a422779b8d3b83f92306327" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a8a7da3ec9a422779b8d3b83f92306327" kindref="member">EffectsHandler::unloadAllEffects</ref>()</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.clear();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1abf08ae922efe0dea4102c158cebece79" kindref="member">effect_order</ref>.clear();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a423b07a48fa38374dda8a22e827185af" kindref="member">m_effectLoader</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loaded<sp/>=<sp/>std::move(<ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ace229504290a828dece325a748e290c9" kindref="member">EffectPair</ref><sp/>&amp;pair<sp/>:<sp/>loaded)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a36b0efbbbf0c50633286eb22f0759c0d" kindref="member">destroyEffect</ref>(pair.second);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a9917d33d0b1bcf131b7fd6bac9e85d3f" kindref="member">effectsChanged</ref>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="class_k_win_1_1_effects_handler_1a0949e36da2f02fdb23c37185cdbe3a5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a0949e36da2f02fdb23c37185cdbe3a5f" kindref="member">EffectsHandler::setupWindowConnections</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1a75b348e50a34a4881ce281e40d1e8f02" kindref="member">Window::closed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>window]()<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;<ref refid="class_k_win_1_1_window_1a680b520607df91ff2ee91be0c33c8736" kindref="member">effectWindow</ref>())<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1a25652fb190ebfb2d9c95b67eb9a3291d" kindref="member">windowClosed</ref>(window-&gt;<ref refid="class_k_win_1_1_window_1a680b520607df91ff2ee91be0c33c8736" kindref="member">effectWindow</ref>());</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="class_k_win_1_1_effects_handler_1a5dd867dd5c0ce8a24466faf1142dde61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a5dd867dd5c0ce8a24466faf1142dde61" kindref="member">EffectsHandler::reconfigure</ref>()</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a423b07a48fa38374dda8a22e827185af" kindref="member">m_effectLoader</ref>-&gt;queryAndLoadAll();</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>idea<sp/>is<sp/>that<sp/>effects<sp/>call<sp/>this<sp/>function<sp/>again<sp/>which<sp/>calls<sp/>the<sp/>next<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="class_k_win_1_1_effects_handler_1a8cf7297931ee6fa6c957eb3f464a2368" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a8cf7297931ee6fa6c957eb3f464a2368" kindref="member">EffectsHandler::prePaintScreen</ref>(<ref refid="class_k_win_1_1_screen_pre_paint_data" kindref="compound">ScreenPrePaintData</ref><sp/>&amp;data,<sp/>std::chrono::milliseconds<sp/>presentTime)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a33ef50504479d7de0455c75b8863006f" kindref="member">m_currentPaintScreenIterator</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constEnd())<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_k_win_1_1_effects_handler_1a33ef50504479d7de0455c75b8863006f" kindref="member">m_currentPaintScreenIterator</ref>++)-&gt;<ref refid="class_k_win_1_1_effects_handler_1a8cf7297931ee6fa6c957eb3f464a2368" kindref="member">prePaintScreen</ref>(data,<sp/>presentTime);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="class_k_win_1_1_effects_handler_1a33ef50504479d7de0455c75b8863006f" kindref="member">m_currentPaintScreenIterator</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>special<sp/>final<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="class_k_win_1_1_effects_handler_1a26fc71e0f799df4a72349d62a633f74d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a26fc71e0f799df4a72349d62a633f74d" kindref="member">EffectsHandler::paintScreen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref><sp/>&amp;renderTarget,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref><sp/>&amp;viewport,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region,<sp/><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*screen)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a33ef50504479d7de0455c75b8863006f" kindref="member">m_currentPaintScreenIterator</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constEnd())<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_k_win_1_1_effects_handler_1a33ef50504479d7de0455c75b8863006f" kindref="member">m_currentPaintScreenIterator</ref>++)-&gt;<ref refid="class_k_win_1_1_effects_handler_1a26fc71e0f799df4a72349d62a633f74d" kindref="member">paintScreen</ref>(renderTarget,<sp/>viewport,<sp/>mask,<sp/>region,<sp/>screen);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="class_k_win_1_1_effects_handler_1a33ef50504479d7de0455c75b8863006f" kindref="member">m_currentPaintScreenIterator</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1ab85de72d7501ab7654b5f702441c5814" kindref="member">m_scene</ref>-&gt;finalPaintScreen(renderTarget,<sp/>viewport,<sp/>mask,<sp/>region,<sp/>screen);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="class_k_win_1_1_effects_handler_1a72ed97f0e53631a0820417c90e22766d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a72ed97f0e53631a0820417c90e22766d" kindref="member">EffectsHandler::postPaintScreen</ref>()</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a33ef50504479d7de0455c75b8863006f" kindref="member">m_currentPaintScreenIterator</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constEnd())<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_k_win_1_1_effects_handler_1a33ef50504479d7de0455c75b8863006f" kindref="member">m_currentPaintScreenIterator</ref>++)-&gt;<ref refid="class_k_win_1_1_effects_handler_1a72ed97f0e53631a0820417c90e22766d" kindref="member">postPaintScreen</ref>();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="class_k_win_1_1_effects_handler_1a33ef50504479d7de0455c75b8863006f" kindref="member">m_currentPaintScreenIterator</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>special<sp/>final<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="class_k_win_1_1_effects_handler_1ab302687d5b4e485443ac69334645ebae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ab302687d5b4e485443ac69334645ebae" kindref="member">EffectsHandler::prePaintWindow</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/><ref refid="class_k_win_1_1_window_pre_paint_data" kindref="compound">WindowPrePaintData</ref><sp/>&amp;data,<sp/>std::chrono::milliseconds<sp/>presentTime)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a0ec7dd727c793c6e0e394070959e3058" kindref="member">m_currentPaintWindowIterator</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constEnd())<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_k_win_1_1_effects_handler_1a0ec7dd727c793c6e0e394070959e3058" kindref="member">m_currentPaintWindowIterator</ref>++)-&gt;<ref refid="class_k_win_1_1_effects_handler_1ab302687d5b4e485443ac69334645ebae" kindref="member">prePaintWindow</ref>(w,<sp/>data,<sp/>presentTime);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="class_k_win_1_1_effects_handler_1a0ec7dd727c793c6e0e394070959e3058" kindref="member">m_currentPaintWindowIterator</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>special<sp/>final<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="class_k_win_1_1_effects_handler_1a70ffbe2f01d2265699d8043728059e53" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a70ffbe2f01d2265699d8043728059e53" kindref="member">EffectsHandler::paintWindow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref><sp/>&amp;renderTarget,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref><sp/>&amp;viewport,<sp/><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region,<sp/><ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref><sp/>&amp;data)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a0ec7dd727c793c6e0e394070959e3058" kindref="member">m_currentPaintWindowIterator</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constEnd())<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_k_win_1_1_effects_handler_1a0ec7dd727c793c6e0e394070959e3058" kindref="member">m_currentPaintWindowIterator</ref>++)-&gt;<ref refid="class_k_win_1_1_effects_handler_1a70ffbe2f01d2265699d8043728059e53" kindref="member">paintWindow</ref>(renderTarget,<sp/>viewport,<sp/>w,<sp/>mask,<sp/>region,<sp/>data);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="class_k_win_1_1_effects_handler_1a0ec7dd727c793c6e0e394070959e3058" kindref="member">m_currentPaintWindowIterator</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1ab85de72d7501ab7654b5f702441c5814" kindref="member">m_scene</ref>-&gt;finalPaintWindow(renderTarget,<sp/>viewport,<sp/>w,<sp/>mask,<sp/>region,<sp/>data);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="class_k_win_1_1_effects_handler_1afb838563295d5c9726feec2b283c676a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1afb838563295d5c9726feec2b283c676a" kindref="member">EffectsHandler::postPaintWindow</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a0ec7dd727c793c6e0e394070959e3058" kindref="member">m_currentPaintWindowIterator</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constEnd())<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_k_win_1_1_effects_handler_1a0ec7dd727c793c6e0e394070959e3058" kindref="member">m_currentPaintWindowIterator</ref>++)-&gt;<ref refid="class_k_win_1_1_effects_handler_1afb838563295d5c9726feec2b283c676a" kindref="member">postPaintWindow</ref>(w);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="class_k_win_1_1_effects_handler_1a0ec7dd727c793c6e0e394070959e3058" kindref="member">m_currentPaintWindowIterator</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>special<sp/>final<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="class_k_win_1_1_effects_handler_1a3c55f9c15c69fffd19f3ae412ba4aa56" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a3c55f9c15c69fffd19f3ae412ba4aa56" kindref="member">EffectsHandler::provides</ref>(<ref refid="group__kwineffects_1ga6337b2a9b5aadfbb6b696119144b56ae" kindref="member">Effect::Feature</ref><sp/>ef)</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.at(i).second-&gt;provides(ef))<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.at(i).second;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="class_k_win_1_1_effects_handler_1a0e7042451513fdb2fa98c3f2b0caa473" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a0e7042451513fdb2fa98c3f2b0caa473" kindref="member">EffectsHandler::drawWindow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref><sp/>&amp;renderTarget,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref><sp/>&amp;viewport,<sp/><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region,<sp/><ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref><sp/>&amp;data)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a8f19e1636e6b98a6ab42c1d290fae672" kindref="member">m_currentDrawWindowIterator</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constEnd())<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_k_win_1_1_effects_handler_1a8f19e1636e6b98a6ab42c1d290fae672" kindref="member">m_currentDrawWindowIterator</ref>++)-&gt;<ref refid="class_k_win_1_1_effects_handler_1a0e7042451513fdb2fa98c3f2b0caa473" kindref="member">drawWindow</ref>(renderTarget,<sp/>viewport,<sp/>w,<sp/>mask,<sp/>region,<sp/>data);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="class_k_win_1_1_effects_handler_1a8f19e1636e6b98a6ab42c1d290fae672" kindref="member">m_currentDrawWindowIterator</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1ab85de72d7501ab7654b5f702441c5814" kindref="member">m_scene</ref>-&gt;finalDrawWindow(renderTarget,<sp/>viewport,<sp/>w,<sp/>mask,<sp/>region,<sp/>data);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="class_k_win_1_1_effects_handler_1af2aa9519f7c6cd192b2168cbf60a46f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1af2aa9519f7c6cd192b2168cbf60a46f6" kindref="member">EffectsHandler::renderWindow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref><sp/>&amp;renderTarget,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref><sp/>&amp;viewport,<sp/><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region,<sp/><ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref><sp/>&amp;data)</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1ab85de72d7501ab7654b5f702441c5814" kindref="member">m_scene</ref>-&gt;finalDrawWindow(renderTarget,<sp/>viewport,<sp/>w,<sp/>mask,<sp/>region,<sp/>data);</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="class_k_win_1_1_effects_handler_1a8cfa5fecc8e31e32c18fb5aed4862cc2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a8cfa5fecc8e31e32c18fb5aed4862cc2" kindref="member">EffectsHandler::hasDecorationShadows</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="431"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="class_k_win_1_1_effects_handler_1a39cd15fbba425ec1887b8dfe2735d557" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ad0affb062069cceead6205efe6a4f49c" kindref="member">EffectsHandler::decorationsHaveAlpha</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="436"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>start<sp/>another<sp/>painting<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="class_k_win_1_1_effects_handler_1a723d140619af3ed4e4fcded38d610340" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a723d140619af3ed4e4fcded38d610340" kindref="member">EffectsHandler::startPaint</ref>()</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.clear();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.reserve(<ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.count());</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QList&lt;KWin::EffectPair&gt;::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;isActive())<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref><sp/>&lt;&lt;<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a8f19e1636e6b98a6ab42c1d290fae672" kindref="member">m_currentDrawWindowIterator</ref><sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constBegin();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a0ec7dd727c793c6e0e394070959e3058" kindref="member">m_currentPaintWindowIterator</ref><sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constBegin();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a33ef50504479d7de0455c75b8863006f" kindref="member">m_currentPaintScreenIterator</ref><sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constBegin();</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="class_k_win_1_1_effects_handler_1a5daccf0d58882b9c642fc4036cafea4f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a5daccf0d58882b9c642fc4036cafea4f" kindref="member">EffectsHandler::setActiveFullScreenEffect</ref>(<ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*e)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a3eaef43498d3d1008491ed2716347576" kindref="member">fullscreen_effect</ref><sp/>==<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>activeChanged<sp/>=<sp/>(e<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/><ref refid="class_k_win_1_1_effects_handler_1a3eaef43498d3d1008491ed2716347576" kindref="member">fullscreen_effect</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a3eaef43498d3d1008491ed2716347576" kindref="member">fullscreen_effect</ref><sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1af7e6be37b43602e76272b671cec0bb1b" kindref="member">activeFullScreenEffectChanged</ref>();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(activeChanged)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_effects_handler_1ae45c8d2112db0ed5c84ba4b9cf66fd4b" kindref="member">hasActiveFullScreenEffectChanged</ref>();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a7391524e5ebfd9ed180b74f1296a93d4" kindref="member">setShowingDesktop</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1a3916c0b17e5f50d15654dc4e577323e4" kindref="member">checkBlocking</ref>();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="class_k_win_1_1_effects_handler_1af480b35c69116a1becba5cdb45c44014" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1af480b35c69116a1becba5cdb45c44014" kindref="member">EffectsHandler::activeFullScreenEffect</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="472"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a3eaef43498d3d1008491ed2716347576" kindref="member">fullscreen_effect</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="class_k_win_1_1_effects_handler_1a081b07fa37f076c1d686ad4ac8709c2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a3aa7ef6f0231387000df1204e4db9ec4" kindref="member">EffectsHandler::hasActiveFullScreenEffect</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="477"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a3eaef43498d3d1008491ed2716347576" kindref="member">fullscreen_effect</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="class_k_win_1_1_effects_handler_1ace89088efcad8c8ad356f9ba1fc63f3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ace89088efcad8c8ad356f9ba1fc63f3d" kindref="member">EffectsHandler::isColorPickerActive</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="482"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1af6acb0cb90259486c0bf484f6a53e65c" kindref="member">isEffectActive</ref>(QStringLiteral(</highlight><highlight class="stringliteral">&quot;colorpicker&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="class_k_win_1_1_effects_handler_1a71144931a2568c69935180b2ec096758" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a71144931a2568c69935180b2ec096758" kindref="member">EffectsHandler::grabKeyboard</ref>(<ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*effect)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1ae1e1f59c67718d9a7ec2c97540d83568" kindref="member">keyboard_grab_effect</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1ae1e1f59c67718d9a7ec2c97540d83568" kindref="member">keyboard_grab_effect</ref><sp/>=<sp/>effect;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="class_k_win_1_1_effects_handler_1a35bf262b8ab11f42ae6b2b1987142d70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a35bf262b8ab11f42ae6b2b1987142d70" kindref="member">EffectsHandler::ungrabKeyboard</ref>()</highlight></codeline>
<codeline lineno="496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_effects_handler_1ae1e1f59c67718d9a7ec2c97540d83568" kindref="member">keyboard_grab_effect</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1ae1e1f59c67718d9a7ec2c97540d83568" kindref="member">keyboard_grab_effect</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a246b282229b36fc27552487cdd3329d7" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_input_redirection_1a6761bebc602f211e72216e4abd5b71b5" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="class_k_win_1_1_effects_handler_1a45004bb7f62e19a70efa112cd82f0e27" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a45004bb7f62e19a70efa112cd82f0e27" kindref="member">EffectsHandler::grabbedKeyboardEvent</ref>(QKeyEvent<sp/>*e)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1ae1e1f59c67718d9a7ec2c97540d83568" kindref="member">keyboard_grab_effect</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1ae1e1f59c67718d9a7ec2c97540d83568" kindref="member">keyboard_grab_effect</ref>-&gt;grabbedKeyboardEvent(e);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="class_k_win_1_1_effects_handler_1a63a4e07ddffc088ca8f96b354ca8f172" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a63a4e07ddffc088ca8f96b354ca8f172" kindref="member">EffectsHandler::startMouseInterception</ref>(<ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*effect,<sp/>Qt::CursorShape<sp/>shape)</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a316d3ca024679a2bf76dbdb5c39aabd8" kindref="member">m_grabbedMouseEffects</ref>.contains(effect))<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a316d3ca024679a2bf76dbdb5c39aabd8" kindref="member">m_grabbedMouseEffects</ref>.append(effect);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a316d3ca024679a2bf76dbdb5c39aabd8" kindref="member">m_grabbedMouseEffects</ref>.size()<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1a61d65ae696edf89301acca2eeba401dc" kindref="member">setEffectsOverrideCursor</ref>(shape);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>want<sp/>to<sp/>allow<sp/>global<sp/>shortcuts<sp/>to<sp/>be<sp/>triggered<sp/>when<sp/>moving<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>window<sp/>so<sp/>it<sp/>is<sp/>possible<sp/>to<sp/>pick<sp/>up<sp/>a<sp/>window<sp/>and<sp/>then<sp/>move<sp/>it<sp/>to<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>different<sp/>desktop<sp/>by<sp/>using<sp/>the<sp/>global<sp/>shortcut<sp/>to<sp/>switch<sp/>desktop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>that<sp/>means<sp/>that<sp/>some<sp/>other<sp/>things<sp/>can<sp/>also<sp/>be<sp/>triggered.<sp/>If</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>effect<sp/>that<sp/>fill<sp/>the<sp/>screen<sp/>gets<sp/>triggered<sp/>that<sp/>way,<sp/>we<sp/>end<sp/>up<sp/>in<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>weird<sp/>state<sp/>where<sp/>the<sp/>move<sp/>will<sp/>restart<sp/>after<sp/>the<sp/>effect<sp/>closes.<sp/>So<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>that,<sp/>abort<sp/>move/resize<sp/>if<sp/>a<sp/>full<sp/>screen<sp/>effect<sp/>starts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;moveResizeWindow())<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a68fb368cbc7f8a07e490bde1b8b05f86" kindref="member">moveResizeWindow</ref>()-&gt;<ref refid="class_k_win_1_1_window_1a3bb6bb26cb4a8e13525c376ac9bbd3b2" kindref="member">endInteractiveMoveResize</ref>();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="class_k_win_1_1_effects_handler_1a1516352991da7784110135a5119c602f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a1516352991da7784110135a5119c602f" kindref="member">EffectsHandler::stopMouseInterception</ref>(<ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*effect)</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_effects_handler_1a316d3ca024679a2bf76dbdb5c39aabd8" kindref="member">m_grabbedMouseEffects</ref>.contains(effect))<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a316d3ca024679a2bf76dbdb5c39aabd8" kindref="member">m_grabbedMouseEffects</ref>.removeAll(effect);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a316d3ca024679a2bf76dbdb5c39aabd8" kindref="member">m_grabbedMouseEffects</ref>.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1a01ef5dfd9dadfb5d5ab7a0ed0a9ee25a" kindref="member">removeEffectsOverrideCursor</ref>();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="class_k_win_1_1_effects_handler_1a3b898a3f49f8720832df74c20e98abbe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a3b898a3f49f8720832df74c20e98abbe" kindref="member">EffectsHandler::isMouseInterception</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="545"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a316d3ca024679a2bf76dbdb5c39aabd8" kindref="member">m_grabbedMouseEffects</ref>.count()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="class_k_win_1_1_effects_handler_1ae0a9fa2171bba1e8ea5159031f048a9a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ae0a9fa2171bba1e8ea5159031f048a9a" kindref="member">EffectsHandler::touchDown</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>reverse<sp/>call<sp/>order?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;touchDown(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos,<sp/>time))<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="class_k_win_1_1_effects_handler_1a861bdf3663501497a64d53c43a0118c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a861bdf3663501497a64d53c43a0118c7" kindref="member">EffectsHandler::touchMotion</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>reverse<sp/>call<sp/>order?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;touchMotion(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos,<sp/>time))<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="class_k_win_1_1_effects_handler_1a9422927aa5b871de8b6634c6c5de3db0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a9422927aa5b871de8b6634c6c5de3db0" kindref="member">EffectsHandler::touchUp</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>reverse<sp/>call<sp/>order?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;touchUp(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>time))<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="class_k_win_1_1_effects_handler_1af7191b0f8b8125d8a6d007902098e331" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1af7191b0f8b8125d8a6d007902098e331" kindref="member">EffectsHandler::touchCancel</ref>()</highlight></codeline>
<codeline lineno="583"><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[name,<sp/>effect]<sp/>:<sp/>std::as_const(<ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>))<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>effect-&gt;touchCancel();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="class_k_win_1_1_effects_handler_1ade6da8f7a9767de92a090d3004413429" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ade6da8f7a9767de92a090d3004413429" kindref="member">EffectsHandler::tabletToolProximityEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_proximity_event" kindref="compound">TabletToolProximityEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>reverse<sp/>call<sp/>order?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;tabletToolProximity(event))<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="class_k_win_1_1_effects_handler_1a184ed44a37205e87f4c599a80f6db488" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a184ed44a37205e87f4c599a80f6db488" kindref="member">EffectsHandler::tabletToolAxisEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_axis_event" kindref="compound">TabletToolAxisEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>reverse<sp/>call<sp/>order?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;tabletToolAxis(event))<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="class_k_win_1_1_effects_handler_1a630858c42fd10ae82eb4914c0a99fab2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a630858c42fd10ae82eb4914c0a99fab2" kindref="member">EffectsHandler::tabletToolTipEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>reverse<sp/>call<sp/>order?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;tabletToolTip(event))<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622" refid="class_k_win_1_1_effects_handler_1ad86d42db9f0ad751824df6ecae97f379" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ad86d42db9f0ad751824df6ecae97f379" kindref="member">EffectsHandler::tabletToolButtonEvent</ref>(uint<sp/>button,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed,<sp/><ref refid="class_k_win_1_1_input_device_tablet_tool" kindref="compound">InputDeviceTabletTool</ref><sp/>*tool,<sp/>std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>reverse<sp/>call<sp/>order?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;tabletToolButtonEvent(button,<sp/>pressed,<sp/>tool-&gt;<ref refid="class_k_win_1_1_input_device_tablet_tool_1a2ba6649a9514f41d1fa20b951f948dfd" kindref="member">uniqueId</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="class_k_win_1_1_effects_handler_1ac4f8c390e1dfb26ab441fec0bc911939" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ac4f8c390e1dfb26ab441fec0bc911939" kindref="member">EffectsHandler::tabletPadButtonEvent</ref>(uint<sp/>button,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed,<sp/>std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref><sp/>*device)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>reverse<sp/>call<sp/>order?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;tabletPadButtonEvent(button,<sp/>pressed,<sp/>device))<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="class_k_win_1_1_effects_handler_1a14f19b1a6d50f4ac08cf2fc257953cac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a14f19b1a6d50f4ac08cf2fc257953cac" kindref="member">EffectsHandler::tabletPadStripEvent</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a47055a9e0d3d0c4798dbd946a2f90615" kindref="member">position</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFinger,<sp/>std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref><sp/>*device)</highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>reverse<sp/>call<sp/>order?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;tabletPadStripEvent(number,<sp/><ref refid="class_k_win_1_1_effects_handler_1a47055a9e0d3d0c4798dbd946a2f90615" kindref="member">position</ref>,<sp/>isFinger,<sp/>device))<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655" refid="class_k_win_1_1_effects_handler_1a06027bd9d632346f3b8e24887f6b8fdf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a06027bd9d632346f3b8e24887f6b8fdf" kindref="member">EffectsHandler::tabletPadRingEvent</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a47055a9e0d3d0c4798dbd946a2f90615" kindref="member">position</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFinger,<sp/>std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref><sp/>*device)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>reverse<sp/>call<sp/>order?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;tabletPadRingEvent(number,<sp/><ref refid="class_k_win_1_1_effects_handler_1a47055a9e0d3d0c4798dbd946a2f90615" kindref="member">position</ref>,<sp/>isFinger,<sp/>device))<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666" refid="class_k_win_1_1_effects_handler_1a56187bf9d8edc1aaaa72580f8de30fa5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a56187bf9d8edc1aaaa72580f8de30fa5" kindref="member">EffectsHandler::registerPointerShortcut</ref>(Qt::KeyboardModifiers<sp/><ref refid="class_k_win_1_1_effects_handler_1aee134f5a82234293371ed3c7c73b1a4c" kindref="member">modifiers</ref>,<sp/>Qt::MouseButton<sp/>pointerButtons,<sp/>QAction<sp/>*action)</highlight></codeline>
<codeline lineno="667"><highlight class="normal">{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a0560a20eeb52d5fcfaf3f396a87d0dcb" kindref="member">registerPointerShortcut</ref>(<ref refid="class_k_win_1_1_effects_handler_1aee134f5a82234293371ed3c7c73b1a4c" kindref="member">modifiers</ref>,<sp/>pointerButtons,<sp/>action);</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="class_k_win_1_1_effects_handler_1a76a6b1b8e36d38a65552259e2d8562d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a76a6b1b8e36d38a65552259e2d8562d6" kindref="member">EffectsHandler::registerAxisShortcut</ref>(Qt::KeyboardModifiers<sp/><ref refid="class_k_win_1_1_effects_handler_1aee134f5a82234293371ed3c7c73b1a4c" kindref="member">modifiers</ref>,<sp/><ref refid="namespace_k_win_1a0b8440dc0ffe9aa219e0c0e5fa1137a0" kindref="member">PointerAxisDirection</ref><sp/>axis,<sp/>QAction<sp/>*action)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a5201ae78ff3397c97d658fd659a2c41f" kindref="member">registerAxisShortcut</ref>(<ref refid="class_k_win_1_1_effects_handler_1aee134f5a82234293371ed3c7c73b1a4c" kindref="member">modifiers</ref>,<sp/>axis,<sp/>action);</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="class_k_win_1_1_effects_handler_1a9060b42c8a30efae7e2036088604aa4e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a9060b42c8a30efae7e2036088604aa4e" kindref="member">EffectsHandler::registerTouchpadSwipeShortcut</ref>(<ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref><sp/>dir,<sp/>uint<sp/>fingerCount,<sp/>QAction<sp/>*onUp,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(qreal)&gt;<sp/>progressCallback)</highlight></codeline>
<codeline lineno="677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a7caf1163636cc26c9b68285c349f2a64" kindref="member">registerTouchpadSwipeShortcut</ref>(dir,<sp/>fingerCount,<sp/>onUp,<sp/>progressCallback);</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="class_k_win_1_1_effects_handler_1a8e966f681a1a097f784bd149b5e07cf4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a8e966f681a1a097f784bd149b5e07cf4" kindref="member">EffectsHandler::registerTouchpadPinchShortcut</ref>(<ref refid="namespace_k_win_1a8852f83038eda36bc255d8f5f3baae05" kindref="member">PinchDirection</ref><sp/>dir,<sp/>uint<sp/>fingerCount,<sp/>QAction<sp/>*onUp,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(qreal)&gt;<sp/>progressCallback)</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a67077fd387ec37d737f536d8b796497e" kindref="member">registerTouchpadPinchShortcut</ref>(dir,<sp/>fingerCount,<sp/>onUp,<sp/>progressCallback);</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="class_k_win_1_1_effects_handler_1aae43eb00a3f8819c35423ff5f53b46d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1aae43eb00a3f8819c35423ff5f53b46d1" kindref="member">EffectsHandler::registerTouchscreenSwipeShortcut</ref>(<ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref><sp/>direction,<sp/>uint<sp/>fingerCount,<sp/>QAction<sp/>*action,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(qreal)&gt;<sp/>progressCallback)</highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a10ceda2362de198cb4e7e14726e300b0" kindref="member">registerTouchscreenSwipeShortcut</ref>(direction,<sp/>fingerCount,<sp/>action,<sp/>progressCallback);</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="class_k_win_1_1_effects_handler_1a0a54647ffaaae7f98e91acfda2159098" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a0a54647ffaaae7f98e91acfda2159098" kindref="member">EffectsHandler::hasKeyboardGrab</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="692"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ae1e1f59c67718d9a7ec2c97540d83568" kindref="member">keyboard_grab_effect</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ad8300908e943ff0bb7163230617f68d2" kindref="member">EffectsHandler::registerPropertyType</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>atom,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reg)</highlight></codeline>
<codeline lineno="698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++registered_atoms[atom];<sp/></highlight><highlight class="comment">//<sp/>initialized<sp/>to<sp/>0<sp/>if<sp/>not<sp/>present<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--registered_atoms[atom]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registered_atoms.remove(atom);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal">xcb_atom_t<sp/>EffectsHandler::announceSupportProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;propertyName,<sp/><ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref><sp/>*effect)</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyEffectMap::iterator<sp/>it<sp/>=<sp/>m_propertiesForEffects.find(propertyName);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>m_propertiesForEffects.end())<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>has<sp/>already<sp/>been<sp/>registered<sp/>for<sp/>an<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>append<sp/>Effect<sp/>and<sp/>return<sp/>the<sp/>atom<sp/>stored<sp/>in<sp/>m_managedProperties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it.value().contains(effect))<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.value().append(effect);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a8977f4e67c8cea40eb0d5a56431db5e1" kindref="member">m_managedProperties</ref>.value(propertyName,<sp/>XCB_ATOM_NONE);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>m_propertiesForEffects.insert(propertyName,<sp/>QList&lt;Effect<sp/>*&gt;()<sp/>&lt;&lt;<sp/>effect);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>atom<sp/>=<sp/>registerSupportProperty(propertyName);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atom<sp/>==<sp/>XCB_ATOM_NONE)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atom;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a8977f4e67c8cea40eb0d5a56431db5e1" kindref="member">m_managedProperties</ref>.insert(propertyName,<sp/>atom);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1ad8300908e943ff0bb7163230617f68d2" kindref="member">registerPropertyType</ref>(atom,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atom;</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectsHandler::removeSupportProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;propertyName,<sp/><ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref><sp/>*effect)</highlight></codeline>
<codeline lineno="730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyEffectMap::iterator<sp/>it<sp/>=<sp/>m_propertiesForEffects.find(propertyName);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>m_propertiesForEffects.end())<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>is<sp/>not<sp/>registered<sp/>-<sp/>nothing<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it.value().contains(effect))<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>is<sp/>not<sp/>registered<sp/>for<sp/>given<sp/>effect<sp/>-<sp/>nothing<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>it.value().removeAll(effect);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it.value().isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>still<sp/>registered<sp/>for<sp/>another<sp/>effect<sp/>-<sp/>nothing<sp/>further<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xcb_atom_t<sp/>atom<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8977f4e67c8cea40eb0d5a56431db5e1" kindref="member">m_managedProperties</ref>.take(propertyName);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1ad8300908e943ff0bb7163230617f68d2" kindref="member">registerPropertyType</ref>(atom,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>m_propertiesForEffects.remove(propertyName);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>unregisterSupportProperty(atom);</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752" refid="class_k_win_1_1_effects_handler_1a5b7c3a34acbce4baed8657ebe04a04b6" refkind="member"><highlight class="normal">QByteArray<sp/><ref refid="class_k_win_1_1_effects_handler_1a5b7c3a34acbce4baed8657ebe04a04b6" kindref="member">EffectsHandler::readRootProperty</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>atom,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="753"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!kwinApp()-&gt;x11Connection())<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QByteArray();</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>readWindowProperty(kwinApp()-&gt;x11RootWindow(),<sp/>atom,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764" refid="class_k_win_1_1_effects_handler_1a3bfb75fe1af69602acddcbf07044875b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a3bfb75fe1af69602acddcbf07044875b" kindref="member">EffectsHandler::activateWindow</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*effectWindow)</highlight></codeline>
<codeline lineno="765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/>effectWindow-&gt;<ref refid="class_k_win_1_1_effect_window_1a624548a53ed00a646e7b89cb898a74a8" kindref="member">window</ref>();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;isClient())<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" kindref="member">activateWindow</ref>(window,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772" refid="class_k_win_1_1_effects_handler_1a43589bc557ae87f6603b8d42f893d036" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a73aa722f6c5ffec5e50555109dee09ab" kindref="member">EffectsHandler::activeWindow</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="773"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a0fcebcde2aaab133120f33d412e34fd6" kindref="member">activeWindow</ref>()<sp/>?<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a0fcebcde2aaab133120f33d412e34fd6" kindref="member">activeWindow</ref>()-&gt;<ref refid="class_k_win_1_1_window_1a680b520607df91ff2ee91be0c33c8736" kindref="member">effectWindow</ref>()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777" refid="class_k_win_1_1_effects_handler_1a60dcef8af17250d4968ae4ac2c512305" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a60dcef8af17250d4968ae4ac2c512305" kindref="member">EffectsHandler::moveWindow</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>snap,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>snapAdjust)</highlight></codeline>
<codeline lineno="778"><highlight class="normal">{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1a624548a53ed00a646e7b89cb898a74a8" kindref="member">window</ref>();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;isClient()<sp/>||<sp/>!window-&gt;isMovable())<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snap)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;move(<ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;adjustWindowPosition(window,<sp/>pos,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>snapAdjust));</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;move(pos);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791" refid="class_k_win_1_1_effects_handler_1a27bf6f965d0d342caa3b1bea82469493" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a27bf6f965d0d342caa3b1bea82469493" kindref="member">EffectsHandler::windowToDesktops</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;VirtualDesktop<sp/>*&gt;<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1ae2c39f07cf91ab8c1e6fc7ec7528ed38" kindref="member">desktops</ref>)</highlight></codeline>
<codeline lineno="792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1a624548a53ed00a646e7b89cb898a74a8" kindref="member">window</ref>();</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;isClient()<sp/>||<sp/>window-&gt;isDesktop()<sp/>||<sp/>window-&gt;isDock())<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a017d0afde06ff1fac03f4c4ef7cfb6d9" kindref="member">setDesktops</ref>(<ref refid="class_k_win_1_1_effects_handler_1ae2c39f07cf91ab8c1e6fc7ec7528ed38" kindref="member">desktops</ref>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800" refid="class_k_win_1_1_effects_handler_1a9d851e6b387cee346faa33d9c84cc768" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a9d851e6b387cee346faa33d9c84cc768" kindref="member">EffectsHandler::windowToScreen</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*screen)</highlight></codeline>
<codeline lineno="801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1a624548a53ed00a646e7b89cb898a74a8" kindref="member">window</ref>();</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;isClient()<sp/>&amp;&amp;<sp/>!window-&gt;isDesktop()<sp/>&amp;&amp;<sp/>!window-&gt;isDock())<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;sendToOutput(screen);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808" refid="class_k_win_1_1_effects_handler_1a7391524e5ebfd9ed180b74f1296a93d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a7391524e5ebfd9ed180b74f1296a93d4" kindref="member">EffectsHandler::setShowingDesktop</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>showing)</highlight></codeline>
<codeline lineno="809"><highlight class="normal">{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ac6fe3f106ae7cdbb81d38ecf31e2ba54" kindref="member">setShowingDesktop</ref>(showing);</highlight></codeline>
<codeline lineno="811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813" refid="class_k_win_1_1_effects_handler_1a029f3fa131c03029a3a32989ad211be8" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_effects_handler_1aab5633ab9152a3514d8c443f3c52e3f4" kindref="member">EffectsHandler::currentActivity</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="814"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_ACTIVITIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;activities())<sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString();</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;activities()-&gt;current();</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825" refid="class_k_win_1_1_effects_handler_1ab2bc33163638728e6a51281b0e07bdcf" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a722658571850786bb4516ae98247479f" kindref="member">EffectsHandler::currentDesktop</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="826"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VirtualDesktopManager::self()-&gt;currentDesktop();</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830" refid="class_k_win_1_1_effects_handler_1a24078f73ece72e4825a50e47ada97e9f" refkind="member"><highlight class="normal">QList&lt;VirtualDesktop<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_effects_handler_1ae2c39f07cf91ab8c1e6fc7ec7528ed38" kindref="member">EffectsHandler::desktops</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="831"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VirtualDesktopManager::self()-&gt;desktops();</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835" refid="class_k_win_1_1_effects_handler_1a9edefda57a6a4f7548985ee40403cc2c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a9edefda57a6a4f7548985ee40403cc2c" kindref="member">EffectsHandler::setCurrentDesktop</ref>(<ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*desktop)</highlight></codeline>
<codeline lineno="836"><highlight class="normal">{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>VirtualDesktopManager::self()-&gt;setCurrent(desktop);</highlight></codeline>
<codeline lineno="838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840" refid="class_k_win_1_1_effects_handler_1ab783e37c4b860809759d448ee87e3754" refkind="member"><highlight class="normal">QSize<sp/><ref refid="class_k_win_1_1_effects_handler_1aa97258a5b11d2ca1443d57a42e17ee1f" kindref="member">EffectsHandler::desktopGridSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="841"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VirtualDesktopManager::self()-&gt;grid().size();</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845" refid="class_k_win_1_1_effects_handler_1a8425aec549c668b897162b3e410bbb33" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1aa0a072eb188008f628b533b2db26f670" kindref="member">EffectsHandler::desktopGridWidth</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="846"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1aa97258a5b11d2ca1443d57a42e17ee1f" kindref="member">desktopGridSize</ref>().width();</highlight></codeline>
<codeline lineno="848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="class_k_win_1_1_effects_handler_1aee24c0866e5e7a3b623c507d46de72c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a5db11d2431e86ba3d2bbd29656dc2a92" kindref="member">EffectsHandler::desktopGridHeight</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="851"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1aa97258a5b11d2ca1443d57a42e17ee1f" kindref="member">desktopGridSize</ref>().height();</highlight></codeline>
<codeline lineno="853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855" refid="class_k_win_1_1_effects_handler_1a96ddc385c684024766678eea6c74ee1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a23954c6a5181bfc401a3a916841a26b9" kindref="member">EffectsHandler::workspaceWidth</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="856"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1aa0a072eb188008f628b533b2db26f670" kindref="member">desktopGridWidth</ref>()<sp/>*<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aca2679a62471e374db5227ae4491b4a8" kindref="member">geometry</ref>().width();</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860" refid="class_k_win_1_1_effects_handler_1ae8dea3fe89cff9566677ee7bf741d944" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a400258bd3928481b30db16866914f249" kindref="member">EffectsHandler::workspaceHeight</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="861"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a5db11d2431e86ba3d2bbd29656dc2a92" kindref="member">desktopGridHeight</ref>()<sp/>*<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aca2679a62471e374db5227ae4491b4a8" kindref="member">geometry</ref>().height();</highlight></codeline>
<codeline lineno="863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865" refid="class_k_win_1_1_effects_handler_1af47f89b180a84636be495c610f95ad95" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1af47f89b180a84636be495c610f95ad95" kindref="member">EffectsHandler::desktopAtCoords</ref>(QPoint<sp/>coords)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="866"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VirtualDesktopManager::self()-&gt;grid().at(coords);</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870" refid="class_k_win_1_1_effects_handler_1a18e5d37ec471fbad046660ecba2eb0ed" refkind="member"><highlight class="normal">QPoint<sp/><ref refid="class_k_win_1_1_effects_handler_1a18e5d37ec471fbad046660ecba2eb0ed" kindref="member">EffectsHandler::desktopGridCoords</ref>(<ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*desktop)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="871"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VirtualDesktopManager::self()-&gt;grid().gridCoords(desktop);</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875" refid="class_k_win_1_1_effects_handler_1a609ca6c612b03978a51add2d5a24642a" refkind="member"><highlight class="normal">QPoint<sp/><ref refid="class_k_win_1_1_effects_handler_1a609ca6c612b03978a51add2d5a24642a" kindref="member">EffectsHandler::desktopCoords</ref>(<ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*desktop)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="876"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>QPoint<sp/>coords<sp/>=<sp/>VirtualDesktopManager::self()-&gt;grid().gridCoords(desktop);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coords.x()<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPoint(-1,<sp/>-1);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>displaySize<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aca2679a62471e374db5227ae4491b4a8" kindref="member">geometry</ref>().size();</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPoint(coords.x()<sp/>*<sp/>displaySize.width(),<sp/>coords.y()<sp/>*<sp/>displaySize.height());</highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885" refid="class_k_win_1_1_effects_handler_1a183eeeb7398e8595cad89a92eda8746b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a183eeeb7398e8595cad89a92eda8746b" kindref="member">EffectsHandler::desktopAbove</ref>(<ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*desktop,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wrap)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="886"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VirtualDesktopManager::self()-&gt;inDirection(desktop,<sp/><ref refid="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29a258f49887ef8d14ac268c92b02503aaa" kindref="member">VirtualDesktopManager::Direction::Up</ref>,<sp/>wrap);</highlight></codeline>
<codeline lineno="888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890" refid="class_k_win_1_1_effects_handler_1aa9bfb3d6996ed5f9b97678f6d3b7b036" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1aa9bfb3d6996ed5f9b97678f6d3b7b036" kindref="member">EffectsHandler::desktopToRight</ref>(<ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*desktop,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wrap)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="891"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VirtualDesktopManager::self()-&gt;inDirection(desktop,<sp/><ref refid="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29a92b09c7c48c520c3c55e497875da437c" kindref="member">VirtualDesktopManager::Direction::Right</ref>,<sp/>wrap);</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895" refid="class_k_win_1_1_effects_handler_1a2b9905c457461e7bb1c5be1114678e7d" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a2b9905c457461e7bb1c5be1114678e7d" kindref="member">EffectsHandler::desktopBelow</ref>(<ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*desktop,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wrap)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="896"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VirtualDesktopManager::self()-&gt;inDirection(desktop,<sp/><ref refid="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29a08a38277b0309070706f6652eeae9a53" kindref="member">VirtualDesktopManager::Direction::Down</ref>,<sp/>wrap);</highlight></codeline>
<codeline lineno="898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900" refid="class_k_win_1_1_effects_handler_1ad5ee6e38a7b9c70d11ee5e1720c82664" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1ad5ee6e38a7b9c70d11ee5e1720c82664" kindref="member">EffectsHandler::desktopToLeft</ref>(<ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*desktop,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wrap)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="901"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VirtualDesktopManager::self()-&gt;inDirection(desktop,<sp/><ref refid="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29a945d5e233cf7d6240f6b783b36a374ff" kindref="member">VirtualDesktopManager::Direction::Left</ref>,<sp/>wrap);</highlight></codeline>
<codeline lineno="903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905" refid="class_k_win_1_1_effects_handler_1a3d4ee743ebb9adacc7866f3d915cc7ed" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_effects_handler_1a3d4ee743ebb9adacc7866f3d915cc7ed" kindref="member">EffectsHandler::desktopName</ref>(<ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*desktop)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="906"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desktop-&gt;<ref refid="class_k_win_1_1_virtual_desktop_1a769a78271899df6a0b9f79feec7468ee" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910" refid="class_k_win_1_1_effects_handler_1adb18893112254b44f684fbd8e6bad9d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a840615298f9f98325cd73661e5ca4abc" kindref="member">EffectsHandler::optionRollOverDesktops</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="911"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;isRollOverDesktops();</highlight></codeline>
<codeline lineno="913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915" refid="class_k_win_1_1_effects_handler_1a1f0b56fdf429b42e37987e5169dfd697" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1aec06e259fdd169f6fca3f531d742cdaa" kindref="member">EffectsHandler::animationTimeFactor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="916"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;animationTimeFactor();</highlight></codeline>
<codeline lineno="918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920" refid="class_k_win_1_1_effects_handler_1a186244bfb2efd0873286e4b81c8b9652" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a186244bfb2efd0873286e4b81c8b9652" kindref="member">EffectsHandler::findWindow</ref>(WId<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="921"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window" kindref="compound">X11Window</ref><sp/>*w<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;findClient(<ref refid="namespace_k_win_1aef6c3d1a0fcb5309953ca3229d42378daeea59f1acf581bd67c4ce7b102f5b48d" kindref="member">Predicate::WindowMatch</ref>,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w-&gt;effectWindow();</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window" kindref="compound">X11Window</ref><sp/>*w<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;findUnmanaged(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w-&gt;effectWindow();</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="932" refid="class_k_win_1_1_effects_handler_1ad5e34a1d16be9d688b04364da2f1ef89" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a186244bfb2efd0873286e4b81c8b9652" kindref="member">EffectsHandler::findWindow</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surf)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="933"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*w<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_effects_handler_1a186244bfb2efd0873286e4b81c8b9652" kindref="member">findWindow</ref>(surf))<sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w-&gt;effectWindow();</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942" refid="class_k_win_1_1_effects_handler_1aed2afd9e7c47abaf2b63385d4d3a1d65" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a186244bfb2efd0873286e4b81c8b9652" kindref="member">EffectsHandler::findWindow</ref>(QWindow<sp/>*w)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="943"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;findInternal(w))<sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>window-&gt;effectWindow();</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950" refid="class_k_win_1_1_effects_handler_1a3696b73d3064b2cbb15043dfc314e5ec" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a186244bfb2efd0873286e4b81c8b9652" kindref="member">EffectsHandler::findWindow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QUuid<sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="951"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_effects_handler_1a186244bfb2efd0873286e4b81c8b9652" kindref="member">findWindow</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>window-&gt;effectWindow();</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958" refid="class_k_win_1_1_effects_handler_1a546b16a5901d103007f2c4886859e295" refkind="member"><highlight class="normal">QList&lt;EffectWindow<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_effects_handler_1a3eeaa4210c5eb168ded7ba0198fa0d32" kindref="member">EffectsHandler::stackingOrder</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="959"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;Window<sp/>*&gt;<sp/>list<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a376b811ccbcdce840e1a9838d62f802e" kindref="member">stackingOrder</ref>();</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;EffectWindow<sp/>*&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*t<sp/>:<sp/>list)<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w<sp/>=<sp/>t-&gt;effectWindow())<sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.append(w);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970" refid="class_k_win_1_1_effects_handler_1a5a5e3987a203417f59fc4d0ba7d9d505" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a5a5e3987a203417f59fc4d0ba7d9d505" kindref="member">EffectsHandler::setElevatedWindow</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref><sp/>*w,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set)</highlight></codeline>
<codeline lineno="971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_item" kindref="compound">WindowItem</ref><sp/>*item<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1a4ea826c4e0ce5b195e428ec9766bc2f1" kindref="member">windowItem</ref>();</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set)<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;<ref refid="class_k_win_1_1_window_item_1a15146d67a8272c540ebedcaac1de945e" kindref="member">elevate</ref>();</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;<ref refid="class_k_win_1_1_window_item_1a719e3e58a9c7203d37b9a05362099297" kindref="member">deelevate</ref>();</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981" refid="class_k_win_1_1_effects_handler_1a6f82de3946c8b5db50a64dd674fb5557" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a6f82de3946c8b5db50a64dd674fb5557" kindref="member">EffectsHandler::setTabBoxWindow</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w)</highlight></codeline>
<codeline lineno="982"><highlight class="normal">{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_TABBOX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1a624548a53ed00a646e7b89cb898a74a8" kindref="member">window</ref>();</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;isClient())<sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;setCurrentClient(window);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991" refid="class_k_win_1_1_effects_handler_1a8359adb3d939ac296524e0250b328483" refkind="member"><highlight class="normal">QList&lt;EffectWindow<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_effects_handler_1a8359adb3d939ac296524e0250b328483" kindref="member">EffectsHandler::currentTabBoxWindowList</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="992"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_TABBOX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>clients<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;currentClientList();</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;EffectWindow<sp/>*&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.reserve(clients.size());</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>std::transform(std::cbegin(clients),<sp/>std::cend(clients),</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::back_inserter(ret),</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>client)<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>client-&gt;effectWindow();</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QList&lt;EffectWindow<sp/>*&gt;();</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008" refid="class_k_win_1_1_effects_handler_1a0265bfefab98f107c7e20c6acabe10ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a0265bfefab98f107c7e20c6acabe10ae" kindref="member">EffectsHandler::refTabBox</ref>()</highlight></codeline>
<codeline lineno="1009"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_TABBOX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;reference();</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015" refid="class_k_win_1_1_effects_handler_1af8fd9402ad8a3d2964947a724084fdad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1af8fd9402ad8a3d2964947a724084fdad" kindref="member">EffectsHandler::unrefTabBox</ref>()</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_TABBOX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;unreference();</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022" refid="class_k_win_1_1_effects_handler_1a7be83b2010b4c005672584cb89c4e879" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a7be83b2010b4c005672584cb89c4e879" kindref="member">EffectsHandler::closeTabBox</ref>()</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_TABBOX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;close();</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029" refid="class_k_win_1_1_effects_handler_1aa15ea6a4a8dcc0c98956e093666d0b46" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1aa15ea6a4a8dcc0c98956e093666d0b46" kindref="member">EffectsHandler::currentTabBoxWindow</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1030"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_TABBOX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;currentClient())<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c-&gt;effectWindow();</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039" refid="class_k_win_1_1_effects_handler_1af3f4b9a57fd81eabe5c19d6e9e4a76c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1af3f4b9a57fd81eabe5c19d6e9e4a76c6" kindref="member">EffectsHandler::addRepaintFull</ref>()</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4291b830d7c09b02ed712c3d22fd6aa4" kindref="member">m_compositor</ref>-&gt;scene()-&gt;addRepaintFull();</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044" refid="class_k_win_1_1_effects_handler_1a5d9bc7b3c475d3244309997c8b9fcffd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a424c34eb4c6c98d766f16159488465a2" kindref="member">EffectsHandler::addRepaint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;r)</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4291b830d7c09b02ed712c3d22fd6aa4" kindref="member">m_compositor</ref>-&gt;scene()-&gt;addRepaint(r);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049" refid="class_k_win_1_1_effects_handler_1a424c34eb4c6c98d766f16159488465a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a424c34eb4c6c98d766f16159488465a2" kindref="member">EffectsHandler::addRepaint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;r)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4291b830d7c09b02ed712c3d22fd6aa4" kindref="member">m_compositor</ref>-&gt;scene()-&gt;addRepaint(r.toAlignedRect());</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054" refid="class_k_win_1_1_effects_handler_1afeb4b9d2789390de5a528acf50507787" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a424c34eb4c6c98d766f16159488465a2" kindref="member">EffectsHandler::addRepaint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;r)</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4291b830d7c09b02ed712c3d22fd6aa4" kindref="member">m_compositor</ref>-&gt;scene()-&gt;addRepaint(r);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059" refid="class_k_win_1_1_effects_handler_1af69d5e0fa0111198cd0206618bf2586a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a424c34eb4c6c98d766f16159488465a2" kindref="member">EffectsHandler::addRepaint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4291b830d7c09b02ed712c3d22fd6aa4" kindref="member">m_compositor</ref>-&gt;scene()-&gt;addRepaint(x,<sp/>y,<sp/>w,<sp/>h);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064" refid="class_k_win_1_1_effects_handler_1a8f9564215cafc6939e4172fa66bdb85b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1aebd988f34fb170c9b1c5a6752ee695c1" kindref="member">EffectsHandler::activeScreen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1065"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a5c706b5fddc7707a36576936450d86b9" kindref="member">activeOutput</ref>();</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069" refid="class_k_win_1_1_effects_handler_1ad7c5dbc6178025906beb67d0a2153250" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_effects_handler_1ad7c5dbc6178025906beb67d0a2153250" kindref="member">EffectsHandler::clientArea</ref>(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22" kindref="member">clientAreaOption</ref><sp/>opt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*screen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*desktop)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1070"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(opt,<sp/>screen,<sp/>desktop);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074" refid="class_k_win_1_1_effects_handler_1a55551a567f8a12cb6daa48bc679dab03" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_effects_handler_1ad7c5dbc6178025906beb67d0a2153250" kindref="member">EffectsHandler::clientArea</ref>(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22" kindref="member">clientAreaOption</ref><sp/>opt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*effectWindow)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1075"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/>effectWindow-&gt;<ref refid="class_k_win_1_1_effect_window_1a624548a53ed00a646e7b89cb898a74a8" kindref="member">window</ref>();</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(opt,<sp/>window);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080" refid="class_k_win_1_1_effects_handler_1a7e2364b352969429943966b4ebfb89cf" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_effects_handler_1ad7c5dbc6178025906beb67d0a2153250" kindref="member">EffectsHandler::clientArea</ref>(<ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22" kindref="member">clientAreaOption</ref><sp/>opt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*desktop)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1081"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1acaee43b5ca7a189e5f84b6361da672c3" kindref="member">outputAt</ref>(p);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea</ref>(opt,<sp/>output,<sp/>desktop);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086" refid="class_k_win_1_1_effects_handler_1ada3d563403409671443da24b4f17fc34" refkind="member"><highlight class="normal">QRect<sp/><ref refid="class_k_win_1_1_effects_handler_1a7f34a25364c7923d76eb5ad42a8c898f" kindref="member">EffectsHandler::virtualScreenGeometry</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1087"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aca2679a62471e374db5227ae4491b4a8" kindref="member">geometry</ref>();</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091" refid="class_k_win_1_1_effects_handler_1af4a7c87503e3d4fc3c595058e0e3ba28" refkind="member"><highlight class="normal">QSize<sp/><ref refid="class_k_win_1_1_effects_handler_1aebb65bfab7dca8095ded3906b1bca282" kindref="member">EffectsHandler::virtualScreenSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1092"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aca2679a62471e374db5227ae4491b4a8" kindref="member">geometry</ref>().size();</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096" refid="class_k_win_1_1_effects_handler_1a5c0e09968cdaed9974cfa062f9db2bec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a5c0e09968cdaed9974cfa062f9db2bec" kindref="member">EffectsHandler::defineCursor</ref>(Qt::CursorShape<sp/>shape)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1a61d65ae696edf89301acca2eeba401dc" kindref="member">setEffectsOverrideCursor</ref>(shape);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101" refid="class_k_win_1_1_effects_handler_1a79cc3c1ebfb23df5acb8233357b1ad8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a79cc3c1ebfb23df5acb8233357b1ad8b" kindref="member">EffectsHandler::checkInputWindowEvent</ref>(QMouseEvent<sp/>*e)</highlight></codeline>
<codeline lineno="1102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a316d3ca024679a2bf76dbdb5c39aabd8" kindref="member">m_grabbedMouseEffects</ref>.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*effect<sp/>:<sp/>std::as_const(<ref refid="class_k_win_1_1_effects_handler_1a316d3ca024679a2bf76dbdb5c39aabd8" kindref="member">m_grabbedMouseEffects</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>effect-&gt;windowInputMouseEvent(e);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112" refid="class_k_win_1_1_effects_handler_1a9bffa1b30bf1a5a03b02673925c76b8e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a79cc3c1ebfb23df5acb8233357b1ad8b" kindref="member">EffectsHandler::checkInputWindowEvent</ref>(QWheelEvent<sp/>*e)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a316d3ca024679a2bf76dbdb5c39aabd8" kindref="member">m_grabbedMouseEffects</ref>.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*effect<sp/>:<sp/>std::as_const(<ref refid="class_k_win_1_1_effects_handler_1a316d3ca024679a2bf76dbdb5c39aabd8" kindref="member">m_grabbedMouseEffects</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>effect-&gt;windowInputMouseEvent(e);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123" refid="class_k_win_1_1_effects_handler_1a6598ac6e4ad7dfc2c028514106806c12" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_effects_handler_1af20aeb5fb6f87bf9bbaa52a97fd80478" kindref="member">EffectsHandler::cursorPos</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1124"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_cursors_1a5e43427047cf7663b4d9723fac4c1408" kindref="member">Cursors::self</ref>()-&gt;<ref refid="class_k_win_1_1_cursors_1acf6c2a783e4dec9b50fc15784ce3f167" kindref="member">mouse</ref>()-&gt;<ref refid="class_k_win_1_1_cursor_1a072173549f79b150251d835dc02515ba" kindref="member">pos</ref>();</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128" refid="class_k_win_1_1_effects_handler_1a754a4033fda15bb19b0374f21b443bdb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a754a4033fda15bb19b0374f21b443bdb" kindref="member">EffectsHandler::reserveElectricBorder</ref>(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref><sp/>border,<sp/><ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*effect)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1a26e8b8046e90de4811253d87de67477d" kindref="member">reserve</ref>(border,<sp/>effect,<sp/></highlight><highlight class="stringliteral">&quot;borderActivated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133" refid="class_k_win_1_1_effects_handler_1ad3aec41564b7d90550ff5517a650b6c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ad3aec41564b7d90550ff5517a650b6c0" kindref="member">EffectsHandler::unreserveElectricBorder</ref>(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref><sp/>border,<sp/><ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*effect)</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1aaee4026fa795568ea3217b1d70cd4234" kindref="member">unreserve</ref>(border,<sp/>effect);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138" refid="class_k_win_1_1_effects_handler_1af4a142bebff417b0a3b9fce9eacaaa2e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1af4a142bebff417b0a3b9fce9eacaaa2e" kindref="member">EffectsHandler::registerTouchBorder</ref>(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref><sp/>border,<sp/>QAction<sp/>*action)</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1abdd24d5b332b226ad4b3b84d79979721" kindref="member">reserveTouch</ref>(border,<sp/>action);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143" refid="class_k_win_1_1_effects_handler_1ad5992a5df8772934e70a869581b6d8b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ad5992a5df8772934e70a869581b6d8b8" kindref="member">EffectsHandler::registerRealtimeTouchBorder</ref>(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref><sp/>border,<sp/>QAction<sp/>*action,<sp/><ref refid="class_k_win_1_1_effects_handler_1ad4c025e3c2d3c8b5da25e6d16ba6257f" kindref="member">EffectsHandler::TouchBorderCallback</ref><sp/>progressCallback)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1abdd24d5b332b226ad4b3b84d79979721" kindref="member">reserveTouch</ref>(border,<sp/>action,<sp/>progressCallback);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148" refid="class_k_win_1_1_effects_handler_1a5218f145be4674b91530ef574868230e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a5218f145be4674b91530ef574868230e" kindref="member">EffectsHandler::unregisterTouchBorder</ref>(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref><sp/>border,<sp/>QAction<sp/>*action)</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1a013549bda3a4da212b74b5e4bc017529" kindref="member">unreserveTouch</ref>(border,<sp/>action);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153" refid="class_k_win_1_1_effects_handler_1af4b34b4b53242b752b7673c6f9e0022c" refkind="member"><highlight class="normal">QPainter<sp/>*<ref refid="class_k_win_1_1_effects_handler_1af4b34b4b53242b752b7673c6f9e0022c" kindref="member">EffectsHandler::scenePainter</ref>()</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ab85de72d7501ab7654b5f702441c5814" kindref="member">m_scene</ref>-&gt;renderer()-&gt;painter();</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158" refid="class_k_win_1_1_effects_handler_1a7cb6e8fe52d7163de7ee50bd0a61caf4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a7cb6e8fe52d7163de7ee50bd0a61caf4" kindref="member">EffectsHandler::toggleEffect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a9c0910a356943c986b07e4b0cfea4e59" kindref="member">isEffectLoaded</ref>(name))<sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a11e5d52fc3a6ca59ff571f20d219bad2" kindref="member">unloadEffect</ref>(name);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4ecab9172fb71c47df1e2beaa66ace9d" kindref="member">loadEffect</ref>(name);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167" refid="class_k_win_1_1_effects_handler_1a7b0c2a8ca6a07f8ac471c306fc0c2e57" refkind="member"><highlight class="normal">QStringList<sp/><ref refid="class_k_win_1_1_effects_handler_1a3f48b5529766947c2342cf3f5f1899dc" kindref="member">EffectsHandler::loadedEffects</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1168"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>QStringList<sp/>listModules;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>listModules.reserve(<ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.count());</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>std::transform(<ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin(),<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd(),</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::back_inserter(listModules),</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ace229504290a828dece325a748e290c9" kindref="member">EffectPair</ref><sp/>&amp;pair)<sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>pair.first;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>listModules;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179" refid="class_k_win_1_1_effects_handler_1a436c0cabd97bd6780fb1d8ecc7824643" refkind="member"><highlight class="normal">QStringList<sp/><ref refid="class_k_win_1_1_effects_handler_1aa845c78cd710dadd98da204a3d935fab" kindref="member">EffectsHandler::listOfEffects</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1180"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a423b07a48fa38374dda8a22e827185af" kindref="member">m_effectLoader</ref>-&gt;listOfKnownEffects();</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184" refid="class_k_win_1_1_effects_handler_1a4ecab9172fb71c47df1e2beaa66ace9d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a4ecab9172fb71c47df1e2beaa66ace9d" kindref="member">EffectsHandler::loadEffect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a5374d885eb19ec21dece4326968da3d4" kindref="member">makeOpenGLContextCurrent</ref>();</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4291b830d7c09b02ed712c3d22fd6aa4" kindref="member">m_compositor</ref>-&gt;scene()-&gt;addRepaintFull();</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a423b07a48fa38374dda8a22e827185af" kindref="member">m_effectLoader</ref>-&gt;loadEffect(name);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192" refid="class_k_win_1_1_effects_handler_1a11e5d52fc3a6ca59ff571f20d219bad2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a11e5d52fc3a6ca59ff571f20d219bad2" kindref="member">EffectsHandler::unloadEffect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::find_if(<ref refid="class_k_win_1_1_effects_handler_1abf08ae922efe0dea4102c158cebece79" kindref="member">effect_order</ref>.begin(),<sp/><ref refid="class_k_win_1_1_effects_handler_1abf08ae922efe0dea4102c158cebece79" kindref="member">effect_order</ref>.end(),</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[name](<ref refid="namespace_k_win_1ace229504290a828dece325a748e290c9" kindref="member">EffectPair</ref><sp/>&amp;pair)<sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>pair.first<sp/>==<sp/>name;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_k_win_1_1_effects_handler_1abf08ae922efe0dea4102c158cebece79" kindref="member">effect_order</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EffectsHandler::unloadEffect<sp/>:<sp/>Effect<sp/>not<sp/>loaded<sp/>:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EffectsHandler::unloadEffect<sp/>:<sp/>Unloading<sp/>Effect<sp/>:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a36b0efbbbf0c50633286eb22f0759c0d" kindref="member">destroyEffect</ref>((*it).second);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1abf08ae922efe0dea4102c158cebece79" kindref="member">effect_order</ref>.erase(it);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a9917d33d0b1bcf131b7fd6bac9e85d3f" kindref="member">effectsChanged</ref>();</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a4291b830d7c09b02ed712c3d22fd6aa4" kindref="member">m_compositor</ref>-&gt;scene()-&gt;addRepaintFull();</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211" refid="class_k_win_1_1_effects_handler_1a36b0efbbbf0c50633286eb22f0759c0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a36b0efbbbf0c50633286eb22f0759c0d" kindref="member">EffectsHandler::destroyEffect</ref>(<ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*effect)</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a5374d885eb19ec21dece4326968da3d4" kindref="member">makeOpenGLContextCurrent</ref>();</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a3eaef43498d3d1008491ed2716347576" kindref="member">fullscreen_effect</ref><sp/>==<sp/>effect)<sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a5daccf0d58882b9c642fc4036cafea4f" kindref="member">setActiveFullScreenEffect</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1ae1e1f59c67718d9a7ec2c97540d83568" kindref="member">keyboard_grab_effect</ref><sp/>==<sp/>effect)<sp/>{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a35bf262b8ab11f42ae6b2b1987142d70" kindref="member">ungrabKeyboard</ref>();</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a1516352991da7784110135a5119c602f" kindref="member">stopMouseInterception</ref>(effect);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QByteArray&gt;<sp/>properties<sp/>=<sp/>m_propertiesForEffects.keys();</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;property<sp/>:<sp/>properties)<sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removeSupportProperty(property,<sp/>effect);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>effect;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235" refid="class_k_win_1_1_effects_handler_1a54ff1538e8794a6f81f271a7ff0d75f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a54ff1538e8794a6f81f271a7ff0d75f6" kindref="member">EffectsHandler::reconfigureEffects</ref>()</highlight></codeline>
<codeline lineno="1236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a5374d885eb19ec21dece4326968da3d4" kindref="member">makeOpenGLContextCurrent</ref>();</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ace229504290a828dece325a748e290c9" kindref="member">EffectPair</ref><sp/>&amp;pair<sp/>:<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair.second-&gt;reconfigure(<ref refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" kindref="member">Effect::ReconfigureAll</ref>);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243" refid="class_k_win_1_1_effects_handler_1a71c9adc5dae2250dffdfb19ee06656dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a71c9adc5dae2250dffdfb19ee06656dc" kindref="member">EffectsHandler::reconfigureEffect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight></codeline>
<codeline lineno="1244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QList&lt;EffectPair&gt;::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it).first<sp/>==<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwinApp()-&gt;config()-&gt;reparseConfiguration();</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a5374d885eb19ec21dece4326968da3d4" kindref="member">makeOpenGLContextCurrent</ref>();</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it).second-&gt;reconfigure(<ref refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" kindref="member">Effect::ReconfigureAll</ref>);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255" refid="class_k_win_1_1_effects_handler_1a9c0910a356943c986b07e4b0cfea4e59" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a9c0910a356943c986b07e4b0cfea4e59" kindref="member">EffectsHandler::isEffectLoaded</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1256"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::find_if(<ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin(),<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd(),</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;name](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ace229504290a828dece325a748e290c9" kindref="member">EffectPair</ref><sp/>&amp;pair)<sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>pair.first<sp/>==<sp/>name;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264" refid="class_k_win_1_1_effects_handler_1a0cf2cca491f1e6a8180a917d59d36b96" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a0cf2cca491f1e6a8180a917d59d36b96" kindref="member">EffectsHandler::isEffectSupported</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight></codeline>
<codeline lineno="1265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>effect<sp/>is<sp/>loaded,<sp/>it<sp/>is<sp/>obviously<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a9c0910a356943c986b07e4b0cfea4e59" kindref="member">isEffectLoaded</ref>(name))<sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>checks<sp/>might<sp/>require<sp/>a<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a5374d885eb19ec21dece4326968da3d4" kindref="member">makeOpenGLContextCurrent</ref>();</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a423b07a48fa38374dda8a22e827185af" kindref="member">m_effectLoader</ref>-&gt;isEffectSupported(name);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277" refid="class_k_win_1_1_effects_handler_1a8c590c5d30d4251519fffd228ca251a5" refkind="member"><highlight class="normal">QList&lt;bool&gt;<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c590c5d30d4251519fffd228ca251a5" kindref="member">EffectsHandler::areEffectsSupported</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>&amp;names)</highlight></codeline>
<codeline lineno="1278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;bool&gt;<sp/>retList;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>retList.reserve(names.count());</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>std::transform(names.constBegin(),<sp/>names.constEnd(),</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::back_inserter(retList),</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)<sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>isEffectSupported(name);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retList;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289" refid="class_k_win_1_1_effects_handler_1a2aaccce69b649b1bf7063009763dcb45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a2aaccce69b649b1bf7063009763dcb45" kindref="member">EffectsHandler::reloadEffect</ref>(<ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*effect)</highlight></codeline>
<codeline lineno="1290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>effectName;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QList&lt;EffectPair&gt;::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it).second<sp/>==<sp/>effect)<sp/>{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>effectName<sp/>=<sp/>(*it).first;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!effectName.isNull())<sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a11e5d52fc3a6ca59ff571f20d219bad2" kindref="member">unloadEffect</ref>(effectName);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a423b07a48fa38374dda8a22e827185af" kindref="member">m_effectLoader</ref>-&gt;loadEffect(effectName);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304" refid="class_k_win_1_1_effects_handler_1a9917d33d0b1bcf131b7fd6bac9e85d3f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a9917d33d0b1bcf131b7fd6bac9e85d3f" kindref="member">EffectsHandler::effectsChanged</ref>()</highlight></codeline>
<codeline lineno="1305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.clear();</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.clear();<sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>possible<sp/>to<sp/>have<sp/>a<sp/>reconfigure<sp/>and<sp/>a<sp/>quad<sp/>rebuild<sp/>between<sp/>two<sp/>paint<sp/>cycles<sp/>-<sp/>bug<sp/>#308201</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.reserve(<ref refid="class_k_win_1_1_effects_handler_1abf08ae922efe0dea4102c158cebece79" kindref="member">effect_order</ref>.count());</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(<ref refid="class_k_win_1_1_effects_handler_1abf08ae922efe0dea4102c158cebece79" kindref="member">effect_order</ref>.constBegin(),<sp/><ref refid="class_k_win_1_1_effects_handler_1abf08ae922efe0dea4102c158cebece79" kindref="member">effect_order</ref>.constEnd(),</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::back_inserter(<ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>));</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.reserve(<ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.count());</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a33ef50504479d7de0455c75b8863006f" kindref="member">m_currentPaintScreenIterator</ref><sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constBegin();</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a0ec7dd727c793c6e0e394070959e3058" kindref="member">m_currentPaintWindowIterator</ref><sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constBegin();</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1a8f19e1636e6b98a6ab42c1d290fae672" kindref="member">m_currentDrawWindowIterator</ref><sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constBegin();</highlight></codeline>
<codeline lineno="1318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320" refid="class_k_win_1_1_effects_handler_1ae69935124b6ac51c1812398aa8c446f0" refkind="member"><highlight class="normal">QStringList<sp/><ref refid="class_k_win_1_1_effects_handler_1ae776ded0800eff674090c7502486605f" kindref="member">EffectsHandler::activeEffects</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1321"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>QStringList<sp/>ret;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QList&lt;KWin::EffectPair&gt;::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin(),</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>end;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;isActive())<sp/>{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>&lt;&lt;<sp/>it-&gt;first;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333" refid="class_k_win_1_1_effects_handler_1af6acb0cb90259486c0bf484f6a53e65c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1af6acb0cb90259486c0bf484f6a53e65c" kindref="member">EffectsHandler::isEffectActive</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;pluginId)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1334"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::find_if(<ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.cbegin(),<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.cend(),<sp/>[&amp;pluginId](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ace229504290a828dece325a748e290c9" kindref="member">EffectPair</ref><sp/>&amp;p)<sp/>{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>p.first<sp/>==<sp/>pluginId;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.cend())<sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second-&gt;isActive();</highlight></codeline>
<codeline lineno="1342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344" refid="class_k_win_1_1_effects_handler_1a37991a5d3c5176bc90e133e9df81bf51" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a37991a5d3c5176bc90e133e9df81bf51" kindref="member">EffectsHandler::blocksDirectScanout</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1345"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::any_of(<ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constBegin(),<sp/><ref refid="class_k_win_1_1_effects_handler_1a991cd17b9a365d9db4d68ddf3f36da0d" kindref="member">m_activeEffects</ref>.constEnd(),<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*effect)<sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>effect-&gt;blocksDirectScanout();</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351" refid="class_k_win_1_1_effects_handler_1a0b127bfb56ec9dd3ae9f948fe455acc0" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a0b127bfb56ec9dd3ae9f948fe455acc0" kindref="member">EffectsHandler::waylandDisplay</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1352"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a86c30976bd1f0d56f359f9d25160e1f6" kindref="member">display</ref>();</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359" refid="class_k_win_1_1_effects_handler_1a76ace5389ceeafea8b0c55f62b0c67f6" refkind="member"><highlight class="normal">QVariant<sp/><ref refid="class_k_win_1_1_effects_handler_1a76ace5389ceeafea8b0c55f62b0c67f6" kindref="member">EffectsHandler::kwinOption</ref>(<ref refid="namespace_k_win_1a54093b7df57905a541686cce26a8f67b" kindref="member">KWinOption</ref><sp/>kwopt)</highlight></codeline>
<codeline lineno="1360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(kwopt)<sp/>{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a54093b7df57905a541686cce26a8f67ba437c077256af1e1ca278828cdd0c526b" kindref="member">CloseButtonCorner</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>this<sp/>could<sp/>become<sp/>per<sp/>window<sp/>and<sp/>be<sp/>derived<sp/>from<sp/>the<sp/>actual<sp/>position<sp/>in<sp/>the<sp/>deco</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>settings<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a83a4d2853a17494f680716e42f2d9799" kindref="member">decorationBridge</ref>()-&gt;<ref refid="class_k_win_1_1_decoration_1_1_decoration_bridge_1a9bad6843806bfe113511debe7e2808c3" kindref="member">settings</ref>();</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>settings<sp/>&amp;&amp;<sp/>settings-&gt;decorationButtonsLeft().contains(KDecoration3::DecorationButtonType::Close)<sp/>?<sp/>Qt::TopLeftCorner<sp/>:<sp/>Qt::TopRightCorner;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a54093b7df57905a541686cce26a8f67bad7c0dd65bea1b777c31f3f10d967de0f" kindref="member">SwitchDesktopOnScreenEdge</ref>:</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1ae49bba58e718a90d166445f33eff36d0" kindref="member">isDesktopSwitching</ref>();</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a54093b7df57905a541686cce26a8f67ba6f638683e5f42c73169b94006e8810a6" kindref="member">SwitchDesktopOnScreenEdgeMovingWindows</ref>:</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1a390f8ec665d1bfb5a5cff97f6227854d" kindref="member">isDesktopSwitchingMovingClients</ref>();</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QVariant();<sp/></highlight><highlight class="comment">//<sp/>an<sp/>invalid<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376" refid="class_k_win_1_1_effects_handler_1a83ea4fb438c2cbbbde040e8cb03bf705" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_effects_handler_1a83ea4fb438c2cbbbde040e8cb03bf705" kindref="member">EffectsHandler::supportInformation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1377"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::find_if(<ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin(),<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd(),</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[name](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ace229504290a828dece325a748e290c9" kindref="member">EffectPair</ref><sp/>&amp;pair)<sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>pair.first<sp/>==<sp/>name;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd())<sp/>{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString();</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>support((*it).first<sp/>+<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;:\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*metaOptions<sp/>=<sp/>(*it).second-&gt;metaObject();</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>metaOptions-&gt;propertyCount();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaProperty<sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal"><sp/>=<sp/>metaOptions-&gt;property(i);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qstrcmp(property.name(),<sp/></highlight><highlight class="stringliteral">&quot;objectName&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>support<sp/>+=<sp/>QString::fromUtf8(property.name())<sp/>+<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>(*it).second-&gt;property(property.name()).toString()<sp/>+<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>support;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399" refid="class_k_win_1_1_effects_handler_1a6e12b706dea38499a8cd78e6d749149b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a6e12b706dea38499a8cd78e6d749149b" kindref="member">EffectsHandler::isScreenLocked</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1400"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_SCREENLOCKER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kwinApp()-&gt;screenLockerWatcher()-&gt;isLocked();</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408" refid="class_k_win_1_1_effects_handler_1a557d7f7af833946dfb8cb2770ded8541" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_effects_handler_1a557d7f7af833946dfb8cb2770ded8541" kindref="member">EffectsHandler::debug</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;parameter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1409"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>internalName<sp/>=<sp/>name.toLower();</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QList&lt;EffectPair&gt;::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it).first<sp/>==<sp/>internalName)<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second-&gt;debug(parameter);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString();</highlight></codeline>
<codeline lineno="1417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419" refid="class_k_win_1_1_effects_handler_1a5374d885eb19ec21dece4326968da3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a5374d885eb19ec21dece4326968da3d4" kindref="member">EffectsHandler::makeOpenGLContextCurrent</ref>()</highlight></codeline>
<codeline lineno="1420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ab85de72d7501ab7654b5f702441c5814" kindref="member">m_scene</ref>-&gt;makeOpenGLContextCurrent();</highlight></codeline>
<codeline lineno="1422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424" refid="class_k_win_1_1_effects_handler_1a73310f2b58993037e25247ed54c54720" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a73310f2b58993037e25247ed54c54720" kindref="member">EffectsHandler::doneOpenGLContextCurrent</ref>()</highlight></codeline>
<codeline lineno="1425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1ab85de72d7501ab7654b5f702441c5814" kindref="member">m_scene</ref>-&gt;doneOpenGLContextCurrent();</highlight></codeline>
<codeline lineno="1427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429" refid="class_k_win_1_1_effects_handler_1a1748cac7be8008e100751281c10c097a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a1748cac7be8008e100751281c10c097a" kindref="member">EffectsHandler::animationsSupported</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1430"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>forceEnvVar<sp/>=<sp/>qgetenv(</highlight><highlight class="stringliteral">&quot;KWIN_EFFECTS_FORCE_ANIMATIONS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!forceEnvVar.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>forceValue<sp/>=<sp/>forceEnvVar.toInt();</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forceValue<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ab85de72d7501ab7654b5f702441c5814" kindref="member">m_scene</ref>-&gt;animationsSupported();</highlight></codeline>
<codeline lineno="1437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439" refid="class_k_win_1_1_effects_handler_1a41a696e4b5bc914e8ece8e0ab8f8ff8c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a41a696e4b5bc914e8ece8e0ab8f8ff8c" kindref="member">EffectsHandler::highlightWindows</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;EffectWindow<sp/>*&gt;<sp/>&amp;windows)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*e<sp/>=<sp/><ref refid="class_k_win_1_1_effects_handler_1a3c55f9c15c69fffd19f3ae412ba4aa56" kindref="member">provides</ref>(<ref refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aeaecbb77ad241419970ece3d45296c4838" kindref="member">Effect::HighlightWindows</ref>);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!e)<sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;<ref refid="group__kwineffects_1ga5fb1bc87ff54dcc2cfe87b070816ab00" kindref="member">perform</ref>(<ref refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aeaecbb77ad241419970ece3d45296c4838" kindref="member">Effect::HighlightWindows</ref>,<sp/>QVariantList{QVariant::fromValue(windows)});</highlight></codeline>
<codeline lineno="1446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448" refid="class_k_win_1_1_effects_handler_1ad3fdde61a77c376e5618e4494ce274d9" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_platform_cursor_image" kindref="compound">PlatformCursorImage</ref><sp/><ref refid="class_k_win_1_1_effects_handler_1ad3fdde61a77c376e5618e4494ce274d9" kindref="member">EffectsHandler::cursorImage</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1449"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kwinApp()-&gt;cursorImage();</highlight></codeline>
<codeline lineno="1451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453" refid="class_k_win_1_1_effects_handler_1af1683f65536d052a2a3693ce62f4894b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1af1683f65536d052a2a3693ce62f4894b" kindref="member">EffectsHandler::hideCursor</ref>()</highlight></codeline>
<codeline lineno="1454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_cursors_1a5e43427047cf7663b4d9723fac4c1408" kindref="member">Cursors::self</ref>()-&gt;<ref refid="class_k_win_1_1_cursors_1a2f867432b592ef942f77542db7e3eeed" kindref="member">hideCursor</ref>();</highlight></codeline>
<codeline lineno="1456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458" refid="class_k_win_1_1_effects_handler_1a78167bfe2f963caba0142ac5842618a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a78167bfe2f963caba0142ac5842618a0" kindref="member">EffectsHandler::showCursor</ref>()</highlight></codeline>
<codeline lineno="1459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_cursors_1a5e43427047cf7663b4d9723fac4c1408" kindref="member">Cursors::self</ref>()-&gt;<ref refid="class_k_win_1_1_cursors_1a9995b6bf176267db832300bd602c979f" kindref="member">showCursor</ref>();</highlight></codeline>
<codeline lineno="1461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463" refid="class_k_win_1_1_effects_handler_1abefd9be111d4af51392ebbe1078840c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1abefd9be111d4af51392ebbe1078840c2" kindref="member">EffectsHandler::startInteractiveWindowSelection</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(<ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref><sp/>*)&gt;<sp/>callback)</highlight></codeline>
<codeline lineno="1464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>kwinApp()-&gt;startInteractiveWindowSelection([callback](<ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref><sp/>*window)<sp/>{</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>&amp;&amp;<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a680b520607df91ff2ee91be0c33c8736" kindref="member">effectWindow</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback(window-&gt;<ref refid="class_k_win_1_1_window_1a680b520607df91ff2ee91be0c33c8736" kindref="member">effectWindow</ref>());</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474" refid="class_k_win_1_1_effects_handler_1a40b73cfa1b04e9f5faa4f727f3d460aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a40b73cfa1b04e9f5faa4f727f3d460aa" kindref="member">EffectsHandler::startInteractivePositionSelection</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;)&gt;<sp/>callback)</highlight></codeline>
<codeline lineno="1475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/>kwinApp()-&gt;startInteractivePositionSelection(callback);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479" refid="class_k_win_1_1_effects_handler_1a4f3937264019252e88536a06b858a539" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a4f3937264019252e88536a06b858a539" kindref="member">EffectsHandler::showOnScreenMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;iconName)</highlight></codeline>
<codeline lineno="1480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_o_s_d_1ad9bf32b8e07b607da8f7976f9dd98719" kindref="member">OSD::show</ref>(message,<sp/>iconName);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484" refid="class_k_win_1_1_effects_handler_1ad0420267c8d74bcd8f97ec49705ed68c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ad0420267c8d74bcd8f97ec49705ed68c" kindref="member">EffectsHandler::hideOnScreenMessage</ref>(OnScreenMessageHideFlags<sp/>flags)</highlight></codeline>
<codeline lineno="1485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>OSD::HideFlags<sp/>osdFlags;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags.testFlag(<ref refid="class_k_win_1_1_effects_handler_1a0eea36dec1b6beb304b1fb55ccdd1e47aacb12f9fb80caca46d68870e9d904d19" kindref="member">OnScreenMessageHideFlag::SkipsCloseAnimation</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osdFlags<sp/>|=<sp/><ref refid="namespace_k_win_1_1_o_s_d_1a5a244bc014f369a85121e950bc15c296a239a01fdde871f0a54199dcb56eca3b3" kindref="member">OSD::HideFlag::SkipCloseAnimation</ref>;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_o_s_d_1afaf8017e3721a0e69b950ea812e89716" kindref="member">OSD::hide</ref>(osdFlags);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493" refid="class_k_win_1_1_effects_handler_1ae57baacdc4a49cc4f1093c1e318a86cd" refkind="member"><highlight class="normal">KSharedConfigPtr<sp/><ref refid="class_k_win_1_1_effects_handler_1ae57baacdc4a49cc4f1093c1e318a86cd" kindref="member">EffectsHandler::config</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1494"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kwinApp()-&gt;config();</highlight></codeline>
<codeline lineno="1496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498" refid="class_k_win_1_1_effects_handler_1a6fe044ab2e6fc28262a8701c1f10933c" refkind="member"><highlight class="normal">KSharedConfigPtr<sp/><ref refid="class_k_win_1_1_effects_handler_1a6fe044ab2e6fc28262a8701c1f10933c" kindref="member">EffectsHandler::inputConfig</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1499"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kwinApp()-&gt;inputConfig();</highlight></codeline>
<codeline lineno="1501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503" refid="class_k_win_1_1_effects_handler_1a8b11dcce0b962be31d2db4a72ddae38d" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_effects_handler_1ac8649272bb0576cc72f2486439664efe" kindref="member">Effect</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a8b11dcce0b962be31d2db4a72ddae38d" kindref="member">EffectsHandler::findEffect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1504"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::find_if(<ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constBegin(),<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd(),<sp/>[name](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ace229504290a828dece325a748e290c9" kindref="member">EffectPair</ref><sp/>&amp;pair)<sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>pair.first<sp/>==<sp/>name;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_k_win_1_1_effects_handler_1a8c68577f9c9a9ad8b169dae1b77582ad" kindref="member">loaded_effects</ref>.constEnd())<sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*it).second;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514" refid="class_k_win_1_1_effects_handler_1aaef0446f00d6e9b13fc872acfc366ad3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1aaef0446f00d6e9b13fc872acfc366ad3" kindref="member">EffectsHandler::renderOffscreenQuickView</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref><sp/>&amp;renderTarget,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref><sp/>&amp;viewport,<sp/><ref refid="class_k_win_1_1_offscreen_quick_view" kindref="compound">OffscreenQuickView</ref><sp/>*w)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1515"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!w-&gt;<ref refid="class_k_win_1_1_offscreen_quick_view_1add6d46aba0287678d788a0437690abbb" kindref="member">isVisible</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a53ad442150183d254eca227ddd5571e1" kindref="member">compositingType</ref>()<sp/>==<sp/><ref refid="namespace_k_win_1aa1e33474a7077a13169f350a5949a79aa9d91b030a3a42dc544de4de6f0d46b1d" kindref="member">OpenGLCompositing</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref><sp/>*t<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_offscreen_quick_view_1ac8701d3c7fe1d692a56c783cd87be482" kindref="member">bufferAsTexture</ref>();</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!t)<sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShaderTraits<sp/>traits<sp/>=<sp/><ref refid="namespace_k_win_1a5ea35b6d898ef92e1904522c66efa184a85736ea5bc8da56c443818dfff6ef91f" kindref="member">ShaderTrait::MapTexture</ref><sp/>|<sp/><ref refid="namespace_k_win_1a5ea35b6d898ef92e1904522c66efa184aa8f7aca3a49bf1645d089a470202154e" kindref="member">ShaderTrait::TransformColorspace</ref>;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>a<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_offscreen_quick_view_1a55acfd2892f1a821d0df4937e8ad610c" kindref="member">opacity</ref>();</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>!=<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traits<sp/>|=<sp/><ref refid="namespace_k_win_1a5ea35b6d898ef92e1904522c66efa184ac870e2fca2609e8077de9470fbb9ab43" kindref="member">ShaderTrait::Modulate</ref>;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader" kindref="compound">GLShader</ref><sp/>*shader<sp/>=<sp/><ref refid="class_k_win_1_1_shader_manager_1aaf9c40a0a4f2e72ad6e30fa967dd073c" kindref="member">ShaderManager::instance</ref>()-&gt;<ref refid="class_k_win_1_1_shader_manager_1aedd0dd423df032415b439a08c6f70fed" kindref="member">pushShader</ref>(traits);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>rect<sp/>=<sp/><ref refid="namespace_k_win_1ad2cb4485a63133f92ea417a626f28b6e" kindref="member">scaledRect</ref>(w-&gt;<ref refid="class_k_win_1_1_offscreen_quick_view_1a2ced237198e9291262f52aec4e656f6b" kindref="member">geometry</ref>(),<sp/>viewport.<ref refid="class_k_win_1_1_render_viewport_1aa06db1277771d5021b3e7be43de747f3" kindref="member">scale</ref>());</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>mvp(viewport.<ref refid="class_k_win_1_1_render_viewport_1a57942b073324499fae7848baf801d9a5" kindref="member">projectionMatrix</ref>());</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvp.translate(rect.x(),<sp/>rect.y());</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;<ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a45f966892aa9712b434b27ea5513b63a" kindref="member">GLShader::Mat4Uniform::ModelViewProjectionMatrix</ref>,<sp/>mvp);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>!=<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;<ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a6d59cea8f85957921c86729db6a84b9bac15ccc71e5767ba4f8614983965a26aa" kindref="member">GLShader::Vec4Uniform::ModulationConstant</ref>,<sp/>QVector4D(a,<sp/>a,<sp/>a,<sp/>a));</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;<ref refid="class_k_win_1_1_g_l_shader_1a2b37e53875c769255092205692d85ea6" kindref="member">setColorspaceUniforms</ref>(<ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref>,<sp/>renderTarget.<ref refid="class_k_win_1_1_render_target_1abaa872511189a9e21f351c6a423a362d" kindref="member">colorDescription</ref>(),<sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9a09ab3095e9b2d0a7773cc3d2f0f879cd" kindref="member">RenderingIntent::Perceptual</ref>);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alphaBlending<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_offscreen_quick_view_1aeb469972f4b185000ebd182f10fc610e" kindref="member">hasAlphaChannel</ref>()<sp/>||<sp/>(a<sp/>!=<sp/>1.0);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alphaBlending)<sp/>{</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnable(GL_BLEND);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBlendFunc(GL_ONE,<sp/>GL_ONE_MINUS_SRC_ALPHA);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_k_win_1_1_g_l_texture_1ae171f72388c70d1e30af3da712def893" kindref="member">render</ref>(rect.size());</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alphaBlending)<sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDisable(GL_BLEND);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_shader_manager_1aaf9c40a0a4f2e72ad6e30fa967dd073c" kindref="member">ShaderManager::instance</ref>()-&gt;<ref refid="class_k_win_1_1_shader_manager_1a51d84e1d8c0d651b4968afdb3fba96c6" kindref="member">popShader</ref>();</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effects_handler_1a53ad442150183d254eca227ddd5571e1" kindref="member">compositingType</ref>()<sp/>==<sp/><ref refid="namespace_k_win_1aa1e33474a7077a13169f350a5949a79aa07ed99a9a85ecf1289dbf0ba42b92ed1" kindref="member">QPainterCompositing</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPainter<sp/>*painter<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;scenePainter();</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage<sp/>buffer<sp/>=<sp/>w-&gt;<ref refid="class_k_win_1_1_offscreen_quick_view_1a438b1f877f14263e27ed492891b9a263" kindref="member">bufferAsImage</ref>();</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer.isNull())<sp/>{</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;save();</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setOpacity(w-&gt;<ref refid="class_k_win_1_1_offscreen_quick_view_1a55acfd2892f1a821d0df4937e8ad610c" kindref="member">opacity</ref>());</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawImage(w-&gt;<ref refid="class_k_win_1_1_offscreen_quick_view_1a2ced237198e9291262f52aec4e656f6b" kindref="member">geometry</ref>(),<sp/>buffer);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;restore();</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569" refid="class_k_win_1_1_effects_handler_1a5ea305c04226a1522542224e7428dc87" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1a416cef954a72080ddb0d040111f008dc" kindref="member">SessionState</ref><sp/><ref refid="class_k_win_1_1_effects_handler_1ab1027be6b6a2700ab61c62086b5e1a37" kindref="member">EffectsHandler::sessionState</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1570"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1adbf79458e8db9c18b4144a8755d63a47" kindref="member">sessionManager</ref>()-&gt;<ref refid="class_k_win_1_1_session_manager_1adbae04586126cdaef1d7dc2ad7c90628" kindref="member">state</ref>();</highlight></codeline>
<codeline lineno="1572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574" refid="class_k_win_1_1_effects_handler_1aa103ea22c2fcc317e101867aa7d7a8e2" refkind="member"><highlight class="normal">QList&lt;Output<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_effects_handler_1aa103ea22c2fcc317e101867aa7d7a8e2" kindref="member">EffectsHandler::screens</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1575"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aaee7f44422f40ea8256b2f54e83a2b37" kindref="member">outputs</ref>();</highlight></codeline>
<codeline lineno="1577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579" refid="class_k_win_1_1_effects_handler_1a6d9a281e11699dcac7ea4974f37dfb7f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a6d9a281e11699dcac7ea4974f37dfb7f" kindref="member">EffectsHandler::screenAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;point)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1580"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1acaee43b5ca7a189e5f84b6361da672c3" kindref="member">outputAt</ref>(point);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584" refid="class_k_win_1_1_effects_handler_1a70e7ea2623c1ed2595d5cac76fa722d2" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a70e7ea2623c1ed2595d5cac76fa722d2" kindref="member">EffectsHandler::findScreen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1585"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aaee7f44422f40ea8256b2f54e83a2b37" kindref="member">outputs</ref>();</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*screen<sp/>:<sp/>outputs)<sp/>{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(screen-&gt;name()<sp/>==<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>screen;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595" refid="class_k_win_1_1_effects_handler_1a9bb2a29e9d576f71add51d791d32050f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a70e7ea2623c1ed2595d5cac76fa722d2" kindref="member">EffectsHandler::findScreen</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screenId)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1596"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aaee7f44422f40ea8256b2f54e83a2b37" kindref="member">outputs</ref>().value(screenId);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600" refid="class_k_win_1_1_effects_handler_1a4864c3b356ffa23c8200e0109127f32b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1a4864c3b356ffa23c8200e0109127f32b" kindref="member">EffectsHandler::isCursorHidden</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1601"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_cursors_1a5e43427047cf7663b4d9723fac4c1408" kindref="member">Cursors::self</ref>()-&gt;<ref refid="class_k_win_1_1_cursors_1a8aeaa6300533089e371027a00d4cbc03" kindref="member">isCursorHidden</ref>();</highlight></codeline>
<codeline lineno="1603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605" refid="class_k_win_1_1_effects_handler_1a2533f2c2458ffa1f20ae402a5f80af12" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref><sp/>*<ref refid="class_k_win_1_1_effects_handler_1a781ac041fcb37f38a48a2c8aae0efb60" kindref="member">EffectsHandler::inputPanel</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1606"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!kwinApp()-&gt;inputMethod()<sp/>||<sp/>!kwinApp()-&gt;inputMethod()-&gt;isEnabled())<sp/>{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>panel<sp/>=<sp/>kwinApp()-&gt;inputMethod()-&gt;panel();</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(panel)<sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>panel-&gt;effectWindow();</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618" refid="class_k_win_1_1_effects_handler_1ad947da637dd6a96b8c8a5126b4561b43" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_handler_1ad947da637dd6a96b8c8a5126b4561b43" kindref="member">EffectsHandler::isInputPanelOverlay</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1619"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!kwinApp()-&gt;inputMethod()<sp/>||<sp/>!kwinApp()-&gt;inputMethod()-&gt;isEnabled())<sp/>{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>panel<sp/>=<sp/>kwinApp()-&gt;inputMethod()-&gt;panel();</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(panel)<sp/>{</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>panel-&gt;mode()<sp/>==<sp/><ref refid="class_k_win_1_1_input_panel_v1_window_1aa745c274731904785b415fbec60fdb60a6b551379c3c0b59326abdaf3b4395bd3" kindref="member">InputPanelV1Window::Mode::Overlay</ref>;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631" refid="class_k_win_1_1_effects_handler_1a3bc2b7f6fc0ec0be58ce9f3cca44480a" refkind="member"><highlight class="normal">QQmlEngine<sp/>*<ref refid="class_k_win_1_1_effects_handler_1a3bc2b7f6fc0ec0be58ce9f3cca44480a" kindref="member">EffectsHandler::qmlEngine</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1632"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;<ref refid="class_k_win_1_1_scripting_1af0aae189e407eacc5c0d56961817444a" kindref="member">qmlEngine</ref>();</highlight></codeline>
<codeline lineno="1634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636" refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_effects_handler" kindref="compound">EffectsHandler</ref><sp/>*<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_effecthandler.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_globals.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/effect/effecthandler.cpp"/>
  </compounddef>
</doxygen>
