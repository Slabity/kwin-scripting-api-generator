<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="pointergestures__v1_8cpp" kind="file" language="C++">
    <compoundname>pointergestures_v1.cpp</compoundname>
    <includes refid="pointergestures__v1_8h" local="yes">pointergestures_v1.h</includes>
    <includes refid="clientconnection_8h" local="yes">clientconnection.h</includes>
    <includes refid="display_8h" local="yes">display.h</includes>
    <includes refid="pointer__p_8h" local="yes">pointer_p.h</includes>
    <includes refid="pointergestures__v1__p_8h" local="yes">pointergestures_v1_p.h</includes>
    <includes refid="seat_8h" local="yes">seat.h</includes>
    <includes refid="surface_8h" local="yes">surface.h</includes>
    <includes local="yes">moc_pointergestures_v1.cpp</includes>
    <incdepgraph>
      <node id="28">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>clientconnection.h</label>
        <link refid="clientconnection_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>display.h</label>
        <link refid="display_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>pointer.h</label>
        <link refid="pointer_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>pointer_p.h</label>
        <link refid="pointer__p_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/pointergestures_v1.cpp</label>
        <link refid="pointergestures__v1_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pointergestures_v1.h</label>
        <link refid="pointergestures__v1_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>pointergestures_v1_p.h</label>
        <link refid="pointergestures__v1__p_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>seat.h</label>
        <link refid="seat_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>surface.h</label>
        <link refid="surface_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>QByteArray</label>
      </node>
      <node id="15">
        <label>QCoreApplication</label>
      </node>
      <node id="35">
        <label>QDebug</label>
      </node>
      <node id="16">
        <label>QImage</label>
      </node>
      <node id="9">
        <label>QList</label>
      </node>
      <node id="26">
        <label>QMatrix4x4</label>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="17">
        <label>QPoint</label>
      </node>
      <node id="20">
        <label>QPointF</label>
      </node>
      <node id="21">
        <label>QPointer</label>
      </node>
      <node id="36">
        <label>QRect</label>
      </node>
      <node id="41">
        <label>QRegion</label>
      </node>
      <node id="34">
        <label>QSize</label>
      </node>
      <node id="37">
        <label>QUuid</label>
      </node>
      <node id="18">
        <label>QVariant</label>
      </node>
      <node id="19">
        <label>QVector2D</label>
      </node>
      <node id="14">
        <label>config-kwin.h</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="42">
        <label>moc_pointergestures_v1.cpp</label>
      </node>
      <node id="29">
        <label>optional</label>
      </node>
      <node id="24">
        <label>qwayland-server-pointer-gestures-unstable-v1.h</label>
      </node>
      <node id="22">
        <label>qwayland-server-wayland.h</label>
      </node>
      <node id="7">
        <label>sys/types.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2016<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointergestures__v1_8h" kindref="compound">pointergestures_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="clientconnection_8h" kindref="compound">clientconnection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer__p_8h" kindref="compound">pointer_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointergestures__v1__p_8h" kindref="compound">pointergestures_v1_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="seat_8h" kindref="compound">seat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface_8h" kindref="compound">surface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_version<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1a02645a695ed67253bb6ab3ba04a358f8" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1a02645a695ed67253bb6ab3ba04a358f8" kindref="member">PointerGesturesV1InterfacePrivate::PointerGesturesV1InterfacePrivate</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QtWaylandServer::zwp_pointer_gestures_v1(*display,<sp/>s_version)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1aa217b522d59cb11602f571dadf73053e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1aa217b522d59cb11602f571dadf73053e" kindref="member">PointerGesturesV1InterfacePrivate::zwp_pointer_gestures_v1_get_swipe_gesture</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>struct<sp/>::wl_resource<sp/>*pointer_resource)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_interface_1adb41bec900d6203bc4e19641e48a35b6" kindref="member">PointerInterface::get</ref>(pointer_resource);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pointer)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>WL_DISPLAY_ERROR_INVALID_OBJECT,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>pointer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface" kindref="compound">PointerSwipeGestureV1Interface</ref><sp/>*swipeGesture<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a4f89ebf9f6a0ce2fbb50341c430b09b5" kindref="member">PointerSwipeGestureV1Interface::get</ref>(pointer);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>swipeGesture-&gt;add(resource-&gt;client(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>resource-&gt;version());</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1a36e633b748466cb21f76fe1e362806c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1a36e633b748466cb21f76fe1e362806c9" kindref="member">PointerGesturesV1InterfacePrivate::zwp_pointer_gestures_v1_get_pinch_gesture</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>struct<sp/>::wl_resource<sp/>*pointer_resource)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_interface_1adb41bec900d6203bc4e19641e48a35b6" kindref="member">PointerInterface::get</ref>(pointer_resource);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pointer)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>WL_DISPLAY_ERROR_INVALID_OBJECT,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>pointer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface" kindref="compound">PointerPinchGestureV1Interface</ref><sp/>*pinchGesture<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a3bb1458c78e8b4e1e9df6e1967b7ac86" kindref="member">PointerPinchGestureV1Interface::get</ref>(pointer);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>pinchGesture-&gt;add(resource-&gt;client(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>resource-&gt;version());</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1ad3c8a42f1ca95143b6159331789c21a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1ad3c8a42f1ca95143b6159331789c21a6" kindref="member">PointerGesturesV1InterfacePrivate::zwp_pointer_gestures_v1_get_hold_gesture</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>struct<sp/>::wl_resource<sp/>*pointer_resource)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_interface_1adb41bec900d6203bc4e19641e48a35b6" kindref="member">PointerInterface::get</ref>(pointer_resource);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pointer)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>WL_DISPLAY_ERROR_INVALID_OBJECT,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>pointer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface" kindref="compound">PointerHoldGestureV1Interface</ref><sp/>*holdGesture<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a7968e746a56eea8df0d7d851172d6600" kindref="member">PointerHoldGestureV1Interface::get</ref>(pointer);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>holdGesture-&gt;add(resource-&gt;client(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>resource-&gt;version());</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1ab6c8c7c9b014f74dfbc24fe2771c6820" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1ab6c8c7c9b014f74dfbc24fe2771c6820" kindref="member">PointerGesturesV1InterfacePrivate::zwp_pointer_gestures_v1_release</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="class_k_win_1_1_pointer_gestures_v1_interface_1adce7e5cdbe6ac894a3ee11a597801605" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_gestures_v1_interface_1adce7e5cdbe6ac894a3ee11a597801605" kindref="member">PointerGesturesV1Interface::PointerGesturesV1Interface</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display,<sp/>QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>d(new<sp/><ref refid="class_k_win_1_1_pointer_gestures_v1_interface_private" kindref="compound">PointerGesturesV1InterfacePrivate</ref>(display))</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_k_win_1_1_pointer_gestures_v1_interface_1ab574cf5f320cf005c9f0ced620360ea9" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_gestures_v1_interface_1ab574cf5f320cf005c9f0ced620360ea9" kindref="member">PointerGesturesV1Interface::~PointerGesturesV1Interface</ref>()</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a138e59852657ea4b9c62bc4456e0bc48" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a138e59852657ea4b9c62bc4456e0bc48" kindref="member">PointerSwipeGestureV1Interface::PointerSwipeGestureV1Interface</ref>(<ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>pointer(pointer)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a4f89ebf9f6a0ce2fbb50341c430b09b5" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a138e59852657ea4b9c62bc4456e0bc48" kindref="member">PointerSwipeGestureV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a4f89ebf9f6a0ce2fbb50341c430b09b5" kindref="member">PointerSwipeGestureV1Interface::get</ref>(<ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointer)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_interface_private" kindref="compound">PointerInterfacePrivate</ref><sp/>*pointerPrivate<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1acd1dec82f581dd8d9ccc055ae380548f" kindref="member">PointerInterfacePrivate::get</ref>(pointer);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointerPrivate-&gt;<ref refid="class_k_win_1_1_pointer_interface_private_1a1c0e41e3b6bc5ad998a4448f799bd8ce" kindref="member">swipeGesturesV1</ref>.get();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1ac163817892d5d95d567a84572455c416" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1ac163817892d5d95d567a84572455c416" kindref="member">PointerSwipeGestureV1Interface::zwp_pointer_gesture_swipe_v1_destroy</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a22abae7f730a48d61867fb66c7545a16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a22abae7f730a48d61867fb66c7545a16" kindref="member">PointerSwipeGestureV1Interface::sendBegin</ref>(quint32<sp/>serial,<sp/>quint32<sp/>fingerCount)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusedClient)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pointer-&gt;focusedSurface())<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*focusedSurface<sp/>=<sp/>pointer-&gt;focusedSurface();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>focusedClient<sp/>=<sp/>focusedSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat<sp/>=<sp/>pointer-&gt;seat();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>swipeResources<sp/>=<sp/>resourceMap().values(focusedClient-&gt;client());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*swipeResource<sp/>:<sp/>swipeResources)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_begin(swipeResource-&gt;handle,<sp/>serial,<sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" kindref="member">timestamp</ref>().count(),<sp/>focusedSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">resource</ref>(),<sp/>fingerCount);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a44eb7d129fd0df10d5a19cc12079a8ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a44eb7d129fd0df10d5a19cc12079a8ba" kindref="member">PointerSwipeGestureV1Interface::sendUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!focusedClient)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat<sp/>=<sp/>pointer-&gt;seat();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>swipeResources<sp/>=<sp/>resourceMap().values(focusedClient-&gt;client());</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*swipeResource<sp/>:<sp/>swipeResources)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_update(swipeResource-&gt;handle,<sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" kindref="member">timestamp</ref>().count(),<sp/>wl_fixed_from_double(delta.x()),<sp/>wl_fixed_from_double(delta.y()));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a459d4d8cecf1a7a83f78ccf8a75f8372" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a459d4d8cecf1a7a83f78ccf8a75f8372" kindref="member">PointerSwipeGestureV1Interface::sendEnd</ref>(quint32<sp/>serial)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!focusedClient)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat<sp/>=<sp/>pointer-&gt;seat();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>swipeResources<sp/>=<sp/>resourceMap().values(focusedClient-&gt;client());</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*swipeResource<sp/>:<sp/>swipeResources)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_end(swipeResource-&gt;handle,<sp/>serial,<sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" kindref="member">timestamp</ref>().count(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>gesture<sp/>session<sp/>has<sp/>been<sp/>just<sp/>finished,<sp/>reset<sp/>the<sp/>cached<sp/>focused<sp/>client.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>focusedClient<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a1b54ffc349d27c19503bd6f60f7165ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a1b54ffc349d27c19503bd6f60f7165ea" kindref="member">PointerSwipeGestureV1Interface::sendCancel</ref>(quint32<sp/>serial)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!focusedClient)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat<sp/>=<sp/>pointer-&gt;seat();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>swipeResources<sp/>=<sp/>resourceMap().values(focusedClient-&gt;client());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*swipeResource<sp/>:<sp/>swipeResources)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_end(swipeResource-&gt;handle,<sp/>serial,<sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" kindref="member">timestamp</ref>().count(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>gesture<sp/>session<sp/>has<sp/>been<sp/>just<sp/>finished,<sp/>reset<sp/>the<sp/>cached<sp/>focused<sp/>client.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>focusedClient<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a946d5b69c5656e9182141a7945e7d8f3" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a946d5b69c5656e9182141a7945e7d8f3" kindref="member">PointerPinchGestureV1Interface::PointerPinchGestureV1Interface</ref>(<ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>pointer(pointer)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a3bb1458c78e8b4e1e9df6e1967b7ac86" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a946d5b69c5656e9182141a7945e7d8f3" kindref="member">PointerPinchGestureV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a3bb1458c78e8b4e1e9df6e1967b7ac86" kindref="member">PointerPinchGestureV1Interface::get</ref>(<ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointer)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_interface_private" kindref="compound">PointerInterfacePrivate</ref><sp/>*pointerPrivate<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1acd1dec82f581dd8d9ccc055ae380548f" kindref="member">PointerInterfacePrivate::get</ref>(pointer);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointerPrivate-&gt;<ref refid="class_k_win_1_1_pointer_interface_private_1a53e679ddc9f5562c36b3cd342cc9f15b" kindref="member">pinchGesturesV1</ref>.get();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a735f7bf19d7b7cd33c781794ee66380d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a735f7bf19d7b7cd33c781794ee66380d" kindref="member">PointerPinchGestureV1Interface::zwp_pointer_gesture_pinch_v1_destroy</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1acc1cf84166568fd3e01f5ca31c9cdd1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1acc1cf84166568fd3e01f5ca31c9cdd1a" kindref="member">PointerPinchGestureV1Interface::sendBegin</ref>(quint32<sp/>serial,<sp/>quint32<sp/>fingerCount)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusedClient)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>gesture<sp/>is<sp/>already<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pointer-&gt;focusedSurface())<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*focusedSurface<sp/>=<sp/>pointer-&gt;focusedSurface();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>focusedClient<sp/>=<sp/>focusedSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat<sp/>=<sp/>pointer-&gt;seat();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>pinchResources<sp/>=<sp/>resourceMap().values(*focusedClient);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*pinchResource<sp/>:<sp/>pinchResources)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_begin(pinchResource-&gt;handle,<sp/>serial,<sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" kindref="member">timestamp</ref>().count(),<sp/>focusedSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">resource</ref>(),<sp/>fingerCount);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1ab8c12f6b5dbfcba3610e22a8cdbb9f01" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1ab8c12f6b5dbfcba3610e22a8cdbb9f01" kindref="member">PointerPinchGestureV1Interface::sendUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>qreal<sp/>scale,<sp/>qreal<sp/>rotation)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!focusedClient)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat<sp/>=<sp/>pointer-&gt;seat();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>pinchResources<sp/>=<sp/>resourceMap().values(*focusedClient);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*pinchResource<sp/>:<sp/>pinchResources)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_update(pinchResource-&gt;handle,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" kindref="member">timestamp</ref>().count(),</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_double(delta.x()),</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_double(delta.y()),</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_double(scale),</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_double(rotation));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a343e4dbd4b211f755d9e7cfada9ff523" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a343e4dbd4b211f755d9e7cfada9ff523" kindref="member">PointerPinchGestureV1Interface::sendEnd</ref>(quint32<sp/>serial)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!focusedClient)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat<sp/>=<sp/>pointer-&gt;seat();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>pinchResources<sp/>=<sp/>resourceMap().values(*focusedClient);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*pinchResource<sp/>:<sp/>pinchResources)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_end(pinchResource-&gt;handle,<sp/>serial,<sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" kindref="member">timestamp</ref>().count(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>gesture<sp/>session<sp/>has<sp/>been<sp/>just<sp/>finished,<sp/>reset<sp/>the<sp/>cached<sp/>focused<sp/>client.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>focusedClient<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a8ba5c3d5cfb677e7056d1495a26b371f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a8ba5c3d5cfb677e7056d1495a26b371f" kindref="member">PointerPinchGestureV1Interface::sendCancel</ref>(quint32<sp/>serial)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!focusedClient)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat<sp/>=<sp/>pointer-&gt;seat();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>pinchResources<sp/>=<sp/>resourceMap().values(*focusedClient);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*pinchResource<sp/>:<sp/>pinchResources)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_end(pinchResource-&gt;handle,<sp/>serial,<sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" kindref="member">timestamp</ref>().count(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>gesture<sp/>session<sp/>has<sp/>been<sp/>just<sp/>finished,<sp/>reset<sp/>the<sp/>cached<sp/>focused<sp/>client.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>focusedClient<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1ae0c60fe91e5d5004712741a8a988ada2" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1ae0c60fe91e5d5004712741a8a988ada2" kindref="member">PointerHoldGestureV1Interface::PointerHoldGestureV1Interface</ref>(<ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>pointer(pointer)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a7968e746a56eea8df0d7d851172d6600" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1ae0c60fe91e5d5004712741a8a988ada2" kindref="member">PointerHoldGestureV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a7968e746a56eea8df0d7d851172d6600" kindref="member">PointerHoldGestureV1Interface::get</ref>(<ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointer)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_interface_private" kindref="compound">PointerInterfacePrivate</ref><sp/>*pointerPrivate<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1acd1dec82f581dd8d9ccc055ae380548f" kindref="member">PointerInterfacePrivate::get</ref>(pointer);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointerPrivate-&gt;<ref refid="class_k_win_1_1_pointer_interface_private_1a12ee3f18f0e4df9fea02c549680b53cc" kindref="member">holdGesturesV1</ref>.get();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a8697d4c2ec47f45e3d215d5997f82b30" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a8697d4c2ec47f45e3d215d5997f82b30" kindref="member">PointerHoldGestureV1Interface::zwp_pointer_gesture_hold_v1_destroy</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a0b0849b9220e9dd0bd7d8c47a2635704" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a0b0849b9220e9dd0bd7d8c47a2635704" kindref="member">PointerHoldGestureV1Interface::sendBegin</ref>(quint32<sp/>serial,<sp/>quint32<sp/>fingerCount)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusedClient)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>gesture<sp/>is<sp/>already<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pointer-&gt;focusedSurface())<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*focusedSurface<sp/>=<sp/>pointer-&gt;focusedSurface();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>focusedClient<sp/>=<sp/>focusedSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat<sp/>=<sp/>pointer-&gt;seat();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>holdResources<sp/>=<sp/>resourceMap().values(*focusedClient);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*holdResource<sp/>:<sp/>holdResources)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_begin(holdResource-&gt;handle,<sp/>serial,<sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" kindref="member">timestamp</ref>().count(),<sp/>focusedSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">resource</ref>(),<sp/>fingerCount);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a3a3002db0b773226c09276da596a18bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a3a3002db0b773226c09276da596a18bd" kindref="member">PointerHoldGestureV1Interface::sendEnd</ref>(quint32<sp/>serial)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!focusedClient)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat<sp/>=<sp/>pointer-&gt;seat();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>holdResources<sp/>=<sp/>resourceMap().values(*focusedClient);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*holdResource<sp/>:<sp/>holdResources)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_end(holdResource-&gt;handle,<sp/>serial,<sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" kindref="member">timestamp</ref>().count(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>gesture<sp/>session<sp/>has<sp/>been<sp/>just<sp/>finished,<sp/>reset<sp/>the<sp/>cached<sp/>focused<sp/>client.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>focusedClient<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a4476049a4c609b1fa6fc317234eec239" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a4476049a4c609b1fa6fc317234eec239" kindref="member">PointerHoldGestureV1Interface::sendCancel</ref>(quint32<sp/>serial)</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!focusedClient)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat<sp/>=<sp/>pointer-&gt;seat();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>holdResources<sp/>=<sp/>resourceMap().values(*focusedClient);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*holdResource<sp/>:<sp/>holdResources)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_end(holdResource-&gt;handle,<sp/>serial,<sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" kindref="member">timestamp</ref>().count(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>gesture<sp/>session<sp/>has<sp/>been<sp/>just<sp/>finished,<sp/>reset<sp/>the<sp/>cached<sp/>focused<sp/>client.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>focusedClient<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_pointergestures_v1.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/pointergestures_v1.cpp"/>
  </compounddef>
</doxygen>
