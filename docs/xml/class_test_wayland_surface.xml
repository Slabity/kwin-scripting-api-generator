<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_test_wayland_surface" kind="class" language="C++" prot="public">
    <compoundname>TestWaylandSurface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_test_wayland_surface_1a0691119c7858833844142f530f553e21" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_display" kindref="compound">KWin::Display</ref> *</type>
        <definition>KWin::Display* TestWaylandSurface::m_display</definition>
        <argsstring></argsstring>
        <name>m_display</name>
        <qualifiedname>TestWaylandSurface::m_display</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="61" column="19" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_surface_1a0dd2e36f6efaf5a67f61ed3049c63156" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_compositor_interface" kindref="compound">KWin::CompositorInterface</ref> *</type>
        <definition>KWin::CompositorInterface* TestWaylandSurface::m_compositorInterface</definition>
        <argsstring></argsstring>
        <name>m_compositorInterface</name>
        <qualifiedname>TestWaylandSurface::m_compositorInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="62" column="31" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_surface_1ab6691e8fba6e231b4bf61114f12d6e0e" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_idle_inhibit_manager_v1_interface" kindref="compound">KWin::IdleInhibitManagerV1Interface</ref> *</type>
        <definition>KWin::IdleInhibitManagerV1Interface* TestWaylandSurface::m_idleInhibitInterface</definition>
        <argsstring></argsstring>
        <name>m_idleInhibitInterface</name>
        <qualifiedname>TestWaylandSurface::m_idleInhibitInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="63" column="41" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_surface_1a627d974181b445784d171b45e1145cc1" prot="private" static="no" mutable="no">
        <type>KWayland::Client::ConnectionThread *</type>
        <definition>KWayland::Client::ConnectionThread* TestWaylandSurface::m_connection</definition>
        <argsstring></argsstring>
        <name>m_connection</name>
        <qualifiedname>TestWaylandSurface::m_connection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="64" column="40" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_surface_1a0b388be53ef6daa968e968a3409c681f" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Compositor *</type>
        <definition>KWayland::Client::Compositor* TestWaylandSurface::m_compositor</definition>
        <argsstring></argsstring>
        <name>m_compositor</name>
        <qualifiedname>TestWaylandSurface::m_compositor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="65" column="34" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_surface_1a5b73a9de603dd80e89d8f44318bb34e4" prot="private" static="no" mutable="no">
        <type>KWayland::Client::ShmPool *</type>
        <definition>KWayland::Client::ShmPool* TestWaylandSurface::m_shm</definition>
        <argsstring></argsstring>
        <name>m_shm</name>
        <qualifiedname>TestWaylandSurface::m_shm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="66" column="31" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_surface_1a96201437d9858399e0a4895388f96a36" prot="private" static="no" mutable="no">
        <type>KWayland::Client::EventQueue *</type>
        <definition>KWayland::Client::EventQueue* TestWaylandSurface::m_queue</definition>
        <argsstring></argsstring>
        <name>m_queue</name>
        <qualifiedname>TestWaylandSurface::m_queue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="67" column="34" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_surface_1ac0abee79a2a13f4bdcb6fd8cde0ecc87" prot="private" static="no" mutable="no">
        <type>KWayland::Client::IdleInhibitManager *</type>
        <definition>KWayland::Client::IdleInhibitManager* TestWaylandSurface::m_idleInhibitManager</definition>
        <argsstring></argsstring>
        <name>m_idleInhibitManager</name>
        <qualifiedname>TestWaylandSurface::m_idleInhibitManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="68" column="42" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_surface_1a5fe2ae2ef4897e130da3c369376db4c5" prot="private" static="no" mutable="no">
        <type>QThread *</type>
        <definition>QThread* TestWaylandSurface::m_thread</definition>
        <argsstring></argsstring>
        <name>m_thread</name>
        <qualifiedname>TestWaylandSurface::m_thread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="69" column="13" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_test_wayland_surface_1a40652bfb62e3687ac059622dde51e642" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestWaylandSurface::TestWaylandSurface</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>TestWaylandSurface</name>
        <qualifiedname>TestWaylandSurface::TestWaylandSurface</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="40" column="14" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="74" bodyend="82"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_test_wayland_surface_1af39370f4bc67a37f54602f6037e26d87" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>TestWaylandSurface::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="42" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="84" bodyend="146"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1a7d6e80928973f39fcbc17c9930f950e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>TestWaylandSurface::cleanup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="43" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="148" bodyend="181"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1a9f27f80f345913236f8252d8fe20bb78" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::testStaticAccessor</definition>
        <argsstring>()</argsstring>
        <name>testStaticAccessor</name>
        <qualifiedname>TestWaylandSurface::testStaticAccessor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="45" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="183" bodyend="244"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1a89c5f0c621a99044eb1c97f26cf84c3f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::testDamage</definition>
        <argsstring>()</argsstring>
        <name>testDamage</name>
        <qualifiedname>TestWaylandSurface::testDamage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="46" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="246" bodyend="340"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1af293aa60676d0ce7ce3be5f1835c43f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::testFrameCallback</definition>
        <argsstring>()</argsstring>
        <name>testFrameCallback</name>
        <qualifiedname>TestWaylandSurface::testFrameCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="47" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="342" bodyend="364"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1aacf3294719e17b1df140972945031960" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::testAttachBuffer</definition>
        <argsstring>()</argsstring>
        <name>testAttachBuffer</name>
        <qualifiedname>TestWaylandSurface::testAttachBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="48" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="366" bodyend="513"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1a4ffb0441798fd9e49851c8227d14c1a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::testOpaque</definition>
        <argsstring>()</argsstring>
        <name>testOpaque</name>
        <qualifiedname>TestWaylandSurface::testOpaque</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="49" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="515" bodyend="569"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1acc22a27cbbd0b3a0a2da5ef3f541e008" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::testInput</definition>
        <argsstring>()</argsstring>
        <name>testInput</name>
        <qualifiedname>TestWaylandSurface::testInput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="50" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="571" bodyend="632"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1a1cf404c9ddd90d11e3839df273e182a3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::testScale</definition>
        <argsstring>()</argsstring>
        <name>testScale</name>
        <qualifiedname>TestWaylandSurface::testScale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="51" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="634" bodyend="679"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1af03c2023076bdcc47bf602990868dd49" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::testUnmapOfNotMappedSurface</definition>
        <argsstring>()</argsstring>
        <name>testUnmapOfNotMappedSurface</name>
        <qualifiedname>TestWaylandSurface::testUnmapOfNotMappedSurface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="52" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="681" bodyend="700"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1a42e4783a44d462bf478afe16f2f94787" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::testSurfaceAt</definition>
        <argsstring>()</argsstring>
        <name>testSurfaceAt</name>
        <qualifiedname>TestWaylandSurface::testSurfaceAt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="53" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="702" bodyend="732"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1ad2aa0a76b45c00b555b9ee6931d63689" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::testDestroyAttachedBuffer</definition>
        <argsstring>()</argsstring>
        <name>testDestroyAttachedBuffer</name>
        <qualifiedname>TestWaylandSurface::testDestroyAttachedBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="54" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="734" bodyend="763"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1a3f6fee44b6bab846b66561f560d2644a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::testDestroyWithPendingCallback</definition>
        <argsstring>()</argsstring>
        <name>testDestroyWithPendingCallback</name>
        <qualifiedname>TestWaylandSurface::testDestroyWithPendingCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="55" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="765" bodyend="796"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1ac165c43c00133c31956b3e6b65e8d3d9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::testOutput</definition>
        <argsstring>()</argsstring>
        <name>testOutput</name>
        <qualifiedname>TestWaylandSurface::testOutput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="56" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="831" bodyend="904"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1ab846a6672fe45f508b5062a6a15eb1c3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::testDisconnect</definition>
        <argsstring>()</argsstring>
        <name>testDisconnect</name>
        <qualifiedname>TestWaylandSurface::testDisconnect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="57" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="798" bodyend="829"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_surface_1abe9920c7542248a72b4b9edbf0459ffb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandSurface::testInhibit</definition>
        <argsstring>()</argsstring>
        <name>testInhibit</name>
        <qualifiedname>TestWaylandSurface::testInhibit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="58" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="906" bodyend="949"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestWaylandSurface</label>
        <link refid="class_test_wayland_surface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestWaylandSurface</label>
        <link refid="class_test_wayland_surface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/wayland/client/test_wayland_surface.cpp" line="36" column="1" bodyfile="kwin/autotests/wayland/client/test_wayland_surface.cpp" bodystart="37" bodyend="70"/>
    <listofallmembers>
      <member refid="class_test_wayland_surface_1a7d6e80928973f39fcbc17c9930f950e0" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>cleanup</name></member>
      <member refid="class_test_wayland_surface_1af39370f4bc67a37f54602f6037e26d87" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>init</name></member>
      <member refid="class_test_wayland_surface_1a0b388be53ef6daa968e968a3409c681f" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>m_compositor</name></member>
      <member refid="class_test_wayland_surface_1a0dd2e36f6efaf5a67f61ed3049c63156" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>m_compositorInterface</name></member>
      <member refid="class_test_wayland_surface_1a627d974181b445784d171b45e1145cc1" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>m_connection</name></member>
      <member refid="class_test_wayland_surface_1a0691119c7858833844142f530f553e21" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>m_display</name></member>
      <member refid="class_test_wayland_surface_1ab6691e8fba6e231b4bf61114f12d6e0e" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>m_idleInhibitInterface</name></member>
      <member refid="class_test_wayland_surface_1ac0abee79a2a13f4bdcb6fd8cde0ecc87" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>m_idleInhibitManager</name></member>
      <member refid="class_test_wayland_surface_1a96201437d9858399e0a4895388f96a36" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>m_queue</name></member>
      <member refid="class_test_wayland_surface_1a5b73a9de603dd80e89d8f44318bb34e4" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>m_shm</name></member>
      <member refid="class_test_wayland_surface_1a5fe2ae2ef4897e130da3c369376db4c5" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>m_thread</name></member>
      <member refid="class_test_wayland_surface_1aacf3294719e17b1df140972945031960" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>testAttachBuffer</name></member>
      <member refid="class_test_wayland_surface_1a89c5f0c621a99044eb1c97f26cf84c3f" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>testDamage</name></member>
      <member refid="class_test_wayland_surface_1ad2aa0a76b45c00b555b9ee6931d63689" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>testDestroyAttachedBuffer</name></member>
      <member refid="class_test_wayland_surface_1a3f6fee44b6bab846b66561f560d2644a" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>testDestroyWithPendingCallback</name></member>
      <member refid="class_test_wayland_surface_1ab846a6672fe45f508b5062a6a15eb1c3" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>testDisconnect</name></member>
      <member refid="class_test_wayland_surface_1af293aa60676d0ce7ce3be5f1835c43f5" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>testFrameCallback</name></member>
      <member refid="class_test_wayland_surface_1abe9920c7542248a72b4b9edbf0459ffb" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>testInhibit</name></member>
      <member refid="class_test_wayland_surface_1acc22a27cbbd0b3a0a2da5ef3f541e008" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>testInput</name></member>
      <member refid="class_test_wayland_surface_1a4ffb0441798fd9e49851c8227d14c1a9" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>testOpaque</name></member>
      <member refid="class_test_wayland_surface_1ac165c43c00133c31956b3e6b65e8d3d9" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>testOutput</name></member>
      <member refid="class_test_wayland_surface_1a1cf404c9ddd90d11e3839df273e182a3" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>testScale</name></member>
      <member refid="class_test_wayland_surface_1a9f27f80f345913236f8252d8fe20bb78" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>testStaticAccessor</name></member>
      <member refid="class_test_wayland_surface_1a42e4783a44d462bf478afe16f2f94787" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>testSurfaceAt</name></member>
      <member refid="class_test_wayland_surface_1af03c2023076bdcc47bf602990868dd49" prot="private" virt="non-virtual"><scope>TestWaylandSurface</scope><name>testUnmapOfNotMappedSurface</name></member>
      <member refid="class_test_wayland_surface_1a40652bfb62e3687ac059622dde51e642" prot="public" virt="non-virtual"><scope>TestWaylandSurface</scope><name>TestWaylandSurface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
