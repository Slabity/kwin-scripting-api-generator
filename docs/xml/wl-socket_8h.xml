<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="wl-socket_8h" kind="file" language="C++">
    <compoundname>wl-socket.h</compoundname>
    <includedby refid="kwin__wrapper_8cpp" local="yes">kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp</includedby>
    <invincdepgraph>
      <node id="2">
        <label>kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp</label>
        <link refid="kwin__wrapper_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/src/helpers/wayland_wrapper/wl-socket.h</label>
        <link refid="wl-socket_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="wl-socket_8h_1a304316f1e5543c0b09d86f022ba40d97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
        <definition>struct wl_socket * wl_socket_create</definition>
        <argsstring>()</argsstring>
        <name>wl_socket_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate and create a socket It is bound and accepted </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/wl-socket.h" line="20" column="16" bodyfile="kwin/src/helpers/wayland_wrapper/wl-socket.c" bodystart="123" bodyend="172" declfile="kwin/src/helpers/wayland_wrapper/wl-socket.h" declline="20" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="wl-socket_8h_1a55095debc2f6bf5d7d59bd6c25527044" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_socket_get_fd</definition>
        <argsstring>(struct wl_socket *)</argsstring>
        <name>wl_socket_get_fd</name>
        <param>
          <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the file descriptor for the socket </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/wl-socket.h" line="25" column="5" bodyfile="kwin/src/helpers/wayland_wrapper/wl-socket.c" bodystart="118" bodyend="121" declfile="kwin/src/helpers/wayland_wrapper/wl-socket.h" declline="25" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="wl-socket_8h_1af8d4c5bd78082a9a47f345cece820553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * wl_socket_get_display_name</definition>
        <argsstring>(struct wl_socket *)</argsstring>
        <name>wl_socket_get_display_name</name>
        <param>
          <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the name of the socket, i.e &quot;wayland-0&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/wl-socket.h" line="30" column="6" bodyfile="kwin/src/helpers/wayland_wrapper/wl-socket.c" bodystart="113" bodyend="116" declfile="kwin/src/helpers/wayland_wrapper/wl-socket.h" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="wl-socket_8h_1a39d9c8eb7e61ac53e7924095e554791e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_socket_destroy</definition>
        <argsstring>(struct wl_socket *socket)</argsstring>
        <name>wl_socket_destroy</name>
        <param>
          <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
          <declname>socket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cleanup resources and close the FD </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/wl-socket.h" line="35" column="6" bodyfile="kwin/src/helpers/wayland_wrapper/wl-socket.c" bodystart="99" bodyend="111" declfile="kwin/src/helpers/wayland_wrapper/wl-socket.h" declline="35" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>&lt;davidedmundson@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*<ref refid="wl-socket_8h_1a304316f1e5543c0b09d86f022ba40d97" kindref="member">wl_socket_create</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wl-socket_8h_1a55095debc2f6bf5d7d59bd6c25527044" kindref="member">wl_socket_get_fd</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="wl-socket_8h_1af8d4c5bd78082a9a47f345cece820553" kindref="member">wl_socket_get_display_name</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wl-socket_8h_1a39d9c8eb7e61ac53e7924095e554791e" kindref="member">wl_socket_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*socket);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="kwin/src/helpers/wayland_wrapper/wl-socket.h"/>
  </compounddef>
</doxygen>
