<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_output_layer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>KWin::OutputLayer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <derivedcompoundref refid="class_k_win_1_1_drm_output_layer" prot="public" virt="non-virtual">KWin::DrmOutputLayer</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_virtual_egl_layer" prot="public" virt="non-virtual">KWin::VirtualEglLayer</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_virtual_q_painter_layer" prot="public" virt="non-virtual">KWin::VirtualQPainterLayer</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_wayland_1_1_wayland_egl_cursor_layer" prot="public" virt="non-virtual">KWin::Wayland::WaylandEglCursorLayer</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_wayland_1_1_wayland_egl_primary_layer" prot="public" virt="non-virtual">KWin::Wayland::WaylandEglPrimaryLayer</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer" prot="public" virt="non-virtual">KWin::Wayland::WaylandQPainterCursorLayer</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer" prot="public" virt="non-virtual">KWin::Wayland::WaylandQPainterPrimaryLayer</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_x11_windowed_egl_cursor_layer" prot="public" virt="non-virtual">KWin::X11WindowedEglCursorLayer</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_x11_windowed_egl_primary_layer" prot="public" virt="non-virtual">KWin::X11WindowedEglPrimaryLayer</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_x11_windowed_q_painter_cursor_layer" prot="public" virt="non-virtual">KWin::X11WindowedQPainterCursorLayer</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_x11_windowed_q_painter_primary_layer" prot="public" virt="non-virtual">KWin::X11WindowedQPainterPrimaryLayer</derivedcompoundref>
    <includes refid="outputlayer_8h" local="no">outputlayer.h</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_output_layer_1a55f0b76d433dc0f1dcbb41ca834e5d00" prot="protected" static="no" mutable="no">
        <type>QRegion</type>
        <definition>QRegion KWin::OutputLayer::m_repaints</definition>
        <argsstring></argsstring>
        <name>m_repaints</name>
        <qualifiedname>KWin::OutputLayer::m_repaints</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="103" column="13" bodyfile="kwin/src/core/outputlayer.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_layer_1a30b570aaca0b11d2a9d395703dedfa2e" prot="protected" static="no" mutable="no">
        <type>QPointF</type>
        <definition>QPointF KWin::OutputLayer::m_hotspot</definition>
        <argsstring></argsstring>
        <name>m_hotspot</name>
        <qualifiedname>KWin::OutputLayer::m_hotspot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="104" column="13" bodyfile="kwin/src/core/outputlayer.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_layer_1a81b53e2bbdca8faeb1fe25f53da077e6" prot="protected" static="no" mutable="no">
        <type>QRectF</type>
        <definition>QRectF KWin::OutputLayer::m_sourceRect</definition>
        <argsstring></argsstring>
        <name>m_sourceRect</name>
        <qualifiedname>KWin::OutputLayer::m_sourceRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="105" column="12" bodyfile="kwin/src/core/outputlayer.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_layer_1abf7d3cc9dff1017d98b72640f3a775f0" prot="protected" static="no" mutable="no">
        <type>QRect</type>
        <definition>QRect KWin::OutputLayer::m_targetRect</definition>
        <argsstring></argsstring>
        <name>m_targetRect</name>
        <qualifiedname>KWin::OutputLayer::m_targetRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="106" column="11" bodyfile="kwin/src/core/outputlayer.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_layer_1a00e5d48f76d5f74421c89655a66824b7" prot="protected" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::OutputLayer::m_scale</definition>
        <argsstring></argsstring>
        <name>m_scale</name>
        <qualifiedname>KWin::OutputLayer::m_scale</qualifiedname>
        <initializer>= 1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="107" column="11" bodyfile="kwin/src/core/outputlayer.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_layer_1a8b34de14c7ce7f8f60fbb0899afd9d42" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::OutputLayer::m_enabled</definition>
        <argsstring></argsstring>
        <name>m_enabled</name>
        <qualifiedname>KWin::OutputLayer::m_enabled</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="108" column="10" bodyfile="kwin/src/core/outputlayer.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_layer_1abe5864edf1b1412b7a922151b603907d" prot="protected" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref></type>
        <definition>OutputTransform KWin::OutputLayer::m_offloadTransform</definition>
        <argsstring></argsstring>
        <name>m_offloadTransform</name>
        <qualifiedname>KWin::OutputLayer::m_offloadTransform</qualifiedname>
        <initializer>= <ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Kind::Normal</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="109" column="21" bodyfile="kwin/src/core/outputlayer.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_layer_1ae5b61066054d6f2f817700a2ad38c338" prot="protected" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref></type>
        <definition>OutputTransform KWin::OutputLayer::m_bufferTransform</definition>
        <argsstring></argsstring>
        <name>m_bufferTransform</name>
        <qualifiedname>KWin::OutputLayer::m_bufferTransform</qualifiedname>
        <initializer>= <ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Kind::Normal</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="110" column="21" bodyfile="kwin/src/core/outputlayer.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_layer_1a008ca7b899cf515c4483c3f45f543b9a" prot="protected" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_k_win_1_1_surface_item" kindref="compound">SurfaceItem</ref> &gt;</type>
        <definition>QPointer&lt;SurfaceItem&gt; KWin::OutputLayer::m_scanoutCandidate</definition>
        <argsstring></argsstring>
        <name>m_scanoutCandidate</name>
        <qualifiedname>KWin::OutputLayer::m_scanoutCandidate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="111" column="14" bodyfile="kwin/src/core/outputlayer.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_layer_1a9b035f27d0ea567a73bf27f9ef82f744" prot="protected" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *const</type>
        <definition>Output* const KWin::OutputLayer::m_output</definition>
        <argsstring></argsstring>
        <name>m_output</name>
        <qualifiedname>KWin::OutputLayer::m_output</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="112" column="18" bodyfile="kwin/src/core/outputlayer.h" bodystart="112" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a9ee261bca4012bac914df29d5ebf4117" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::OutputLayer::OutputLayer</definition>
        <argsstring>(Output *output)</argsstring>
        <name>OutputLayer</name>
        <qualifiedname>KWin::OutputLayer::OutputLayer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="36" column="14" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a75cc900617e49a9125da7bf26f3ab986" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::OutputLayer::scale</definition>
        <argsstring>() const</argsstring>
        <name>scale</name>
        <qualifiedname>KWin::OutputLayer::scale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="38" column="11" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a4dfcbf3650f97a4f072008773c981a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputLayer::setScale</definition>
        <argsstring>(qreal scale)</argsstring>
        <name>setScale</name>
        <qualifiedname>KWin::OutputLayer::setScale</qualifiedname>
        <param>
          <type>qreal</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="39" column="10" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1ab5b0f0faaea0c7e881db718a64658dc0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF KWin::OutputLayer::hotspot</definition>
        <argsstring>() const</argsstring>
        <name>hotspot</name>
        <qualifiedname>KWin::OutputLayer::hotspot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="41" column="13" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1af15fe575d7268641fccc72b1f91b96aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputLayer::setHotspot</definition>
        <argsstring>(const QPointF &amp;hotspot)</argsstring>
        <name>setHotspot</name>
        <qualifiedname>KWin::OutputLayer::setHotspot</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>hotspot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="42" column="10" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1ac9ce2d0a04165b7d23f4229c0ed8e0e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QList&lt; QSize &gt;</type>
        <definition>QList&lt; QSize &gt; KWin::OutputLayer::recommendedSizes</definition>
        <argsstring>() const</argsstring>
        <name>recommendedSizes</name>
        <qualifiedname>KWin::OutputLayer::recommendedSizes</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_q_painter_layer_1a397525d4c7a350ece84d126feb50e735">recommendedSizes</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_egl_gbm_layer_1a63f1a90652e9688ad505e419c71db8be">recommendedSizes</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For some layers it can be beneficial to use specific sizes only. This returns those specific sizes, if present </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="48" column="19" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a213d86c0f4be0c717d5e734d43224d01" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRegion</type>
        <definition>QRegion KWin::OutputLayer::repaints</definition>
        <argsstring>() const</argsstring>
        <name>repaints</name>
        <qualifiedname>KWin::OutputLayer::repaints</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="50" column="13" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a7e9983dfc6583b829e85961112a76646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputLayer::resetRepaints</definition>
        <argsstring>()</argsstring>
        <name>resetRepaints</name>
        <qualifiedname>KWin::OutputLayer::resetRepaints</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="51" column="10" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a2f2b3779acdac137f313af1b1d19aa57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputLayer::addRepaint</definition>
        <argsstring>(const QRegion &amp;region)</argsstring>
        <name>addRepaint</name>
        <qualifiedname>KWin::OutputLayer::addRepaint</qualifiedname>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="52" column="10" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1ab44b7af337ba615f5e5550586b99ecc9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::OutputLayer::needsRepaint</definition>
        <argsstring>() const</argsstring>
        <name>needsRepaint</name>
        <qualifiedname>KWin::OutputLayer::needsRepaint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="53" column="10" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a44ada592a0855658e6e5fa96b5b67c04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputLayer::setEnabled</definition>
        <argsstring>(bool enable)</argsstring>
        <name>setEnabled</name>
        <qualifiedname>KWin::OutputLayer::setEnabled</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enables or disables this layer. Note that disabling the primary layer will cause problems </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="58" column="10" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1ade038d52e72b155d6ee023524d066d7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::OutputLayer::isEnabled</definition>
        <argsstring>() const</argsstring>
        <name>isEnabled</name>
        <qualifiedname>KWin::OutputLayer::isEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="59" column="10" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a0c35fab74670dc55d6778c0ba83f65b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="struct_k_win_1_1_output_layer_begin_frame_info" kindref="compound">OutputLayerBeginFrameInfo</ref> &gt;</type>
        <definition>std::optional&lt; OutputLayerBeginFrameInfo &gt; KWin::OutputLayer::beginFrame</definition>
        <argsstring>()</argsstring>
        <name>beginFrame</name>
        <qualifiedname>KWin::OutputLayer::beginFrame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="61" column="19" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="107" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a742e96adf296b32a4f1efaca57d602fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::OutputLayer::endFrame</definition>
        <argsstring>(const QRegion &amp;renderedRegion, const QRegion &amp;damagedRegion, OutputFrame *frame)</argsstring>
        <name>endFrame</name>
        <qualifiedname>KWin::OutputLayer::endFrame</qualifiedname>
        <param>
          <type>const QRegion &amp;</type>
          <declname>renderedRegion</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>damagedRegion</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="62" column="10" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a54ee1bcc42a4346ddce4860b37339203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::OutputLayer::importScanoutBuffer</definition>
        <argsstring>(SurfaceItem *item, const std::shared_ptr&lt; OutputFrame &gt; &amp;frame)</argsstring>
        <name>importScanoutBuffer</name>
        <qualifiedname>KWin::OutputLayer::importScanoutBuffer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_item" kindref="compound">SurfaceItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> &gt; &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tries to import the newest buffer of the surface for direct scanout and does some early checks for whether or not direct scanout <emphasis>could</emphasis> be successful A presentation request on the output must however be used afterwards to find out if it&apos;s actually successful! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="69" column="10" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="71" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1accd1ac89381d7761a47ba22f94200000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputLayer::notifyNoScanoutCandidate</definition>
        <argsstring>()</argsstring>
        <name>notifyNoScanoutCandidate</name>
        <qualifiedname>KWin::OutputLayer::notifyNoScanoutCandidate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notify that there&apos;s no scanout candidate this frame </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="74" column="10" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1ab43b39c7559453fd517bc4f1ee726784" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref> *</type>
        <definition>virtual DrmDevice * KWin::OutputLayer::scanoutDevice</definition>
        <argsstring>() const =0</argsstring>
        <name>scanoutDevice</name>
        <qualifiedname>KWin::OutputLayer::scanoutDevice</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_q_painter_layer_1a8b750dfbe83ad5a7831821c13d8d5251">scanoutDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_drm_virtual_q_painter_layer_1ae21ddefdcc1660ac5ac71b81a16e7f6e">scanoutDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_egl_gbm_layer_1a55468e7ab1ec75eb1d68492394c15a39">scanoutDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_egl_gbm_layer_1a173d8787f18d58c95c5e39ff21dde54c">scanoutDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_egl_layer_1af0c6b5b194ff17c518620cdf978c6982">scanoutDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_q_painter_layer_1a6532146fa2f466691badc4fb6406a3a1">scanoutDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_egl_cursor_layer_1a65e8ec09b76542b43a60981059cc0035">scanoutDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_egl_primary_layer_1a3fb415a94d6143888a842471fb1fa596">scanoutDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer_1a5ac103e6eacebfd85c121d07ee76e27d">scanoutDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1a2df80abaa96ecfae0d8bede10926883b">scanoutDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1ae56100f1789afc72f2a94bd3f5a86d6e">scanoutDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1afda73bbe0512963c1715e6537d6a154c">scanoutDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_q_painter_cursor_layer_1a60e9564888feaa0cd77b4932bcf76225">scanoutDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_q_painter_primary_layer_1a98deb10984d5c1a2a6fc1c547179c5b3">scanoutDevice</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="76" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1ace0c0e616f28f53a53498291526ff62d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt;</type>
        <definition>virtual QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt; KWin::OutputLayer::supportedDrmFormats</definition>
        <argsstring>() const =0</argsstring>
        <name>supportedDrmFormats</name>
        <qualifiedname>KWin::OutputLayer::supportedDrmFormats</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_q_painter_layer_1a4a37c0d5a374dfaa2c9b03499330d846">supportedDrmFormats</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_drm_virtual_q_painter_layer_1a0eb8458d37766c4a2ba8e5cec855c7aa">supportedDrmFormats</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_egl_gbm_layer_1af453bb637fd75ebc6a8b3c663cc08920">supportedDrmFormats</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_egl_gbm_layer_1a783aa4641940a686030ad6587629ad13">supportedDrmFormats</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_egl_layer_1a4a0cd005c19ea6a8935dbe704a6b7375">supportedDrmFormats</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_q_painter_layer_1abedc90b160c3f2a19a4595321b31992a">supportedDrmFormats</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_egl_cursor_layer_1a99cfd617de85f23e34de7592dc5cb156">supportedDrmFormats</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_egl_primary_layer_1a3ee009d14b35836dc525b8d3e4e79cef">supportedDrmFormats</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer_1a057f3ca5070aaa1e62e653f0f0f08251">supportedDrmFormats</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1a04fc92e3f2eeec67e4e213818b86b3c2">supportedDrmFormats</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1a6712414ff53cb45cefa583d055304799">supportedDrmFormats</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1a23193f5a75de26fb09d2a6a075ccf853">supportedDrmFormats</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_q_painter_cursor_layer_1af517c74e6bcec53b1ec07af203795de2">supportedDrmFormats</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_q_painter_primary_layer_1a40e7ae4593288a4cb8ef51c63060f00d">supportedDrmFormats</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="77" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a2ae106b6b52ad73ff92ae9f0aa667461" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::OutputLayer::sourceRect</definition>
        <argsstring>() const</argsstring>
        <name>sourceRect</name>
        <qualifiedname>KWin::OutputLayer::sourceRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the source rect this output layer should sample from, in buffer local coordinates </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="82" column="12" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a4836d5c759356c56eb085f9d51f6b9df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputLayer::setSourceRect</definition>
        <argsstring>(const QRectF &amp;rect)</argsstring>
        <name>setSourceRect</name>
        <qualifiedname>KWin::OutputLayer::setSourceRect</qualifiedname>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="83" column="10" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a55b2e80edaf7ad94832884608aca8042" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRect</type>
        <definition>QRect KWin::OutputLayer::targetRect</definition>
        <argsstring>() const</argsstring>
        <name>targetRect</name>
        <qualifiedname>KWin::OutputLayer::targetRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the target rect this output layer should be shown at, in device coordinates </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="87" column="11" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a85709e6e7f9019c3a16a362d041a8569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputLayer::setTargetRect</definition>
        <argsstring>(const QRect &amp;rect)</argsstring>
        <name>setTargetRect</name>
        <qualifiedname>KWin::OutputLayer::setTargetRect</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="88" column="10" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1abcbc86757c8850d18529bddc3d537160" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref></type>
        <definition>OutputTransform KWin::OutputLayer::offloadTransform</definition>
        <argsstring>() const</argsstring>
        <name>offloadTransform</name>
        <qualifiedname>KWin::OutputLayer::offloadTransform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the transform this layer will apply to content passed to it </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="92" column="21" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1abcd7fbb2032b11fdd392da6b6247c725" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref></type>
        <definition>OutputTransform KWin::OutputLayer::bufferTransform</definition>
        <argsstring>() const</argsstring>
        <name>bufferTransform</name>
        <qualifiedname>KWin::OutputLayer::bufferTransform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the transform a buffer passed into this layer already has </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="96" column="21" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="153" bodyend="156"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a1843ff1def5379cfad784d76df2b5bbb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::OutputLayer::doImportScanoutBuffer</definition>
        <argsstring>(GraphicsBuffer *buffer, const ColorDescription &amp;color, RenderingIntent intent, const std::shared_ptr&lt; OutputFrame &gt; &amp;frame)</argsstring>
        <name>doImportScanoutBuffer</name>
        <qualifiedname>KWin::OutputLayer::doImportScanoutBuffer</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_egl_gbm_layer_1a2b54d39347148ed0894c2a71e6567c13">doImportScanoutBuffer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_egl_gbm_layer_1a8a78acd37d066d1ace3f58f5d4db6408">doImportScanoutBuffer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_egl_primary_layer_1a71b7b32b3c75bf3c1581aee948a9ea22">doImportScanoutBuffer</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9" kindref="member">RenderingIntent</ref></type>
          <declname>intent</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> &gt; &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="99" column="18" bodyfile="kwin/src/core/outputlayer.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1aa468802d01855b8978b27bbc03be0c5b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::optional&lt; <ref refid="struct_k_win_1_1_output_layer_begin_frame_info" kindref="compound">OutputLayerBeginFrameInfo</ref> &gt;</type>
        <definition>virtual std::optional&lt; OutputLayerBeginFrameInfo &gt; KWin::OutputLayer::doBeginFrame</definition>
        <argsstring>()=0</argsstring>
        <name>doBeginFrame</name>
        <qualifiedname>KWin::OutputLayer::doBeginFrame</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_q_painter_layer_1a162e750c739fa22e2194a9c310ca7311">doBeginFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_drm_virtual_q_painter_layer_1a13b498d328bd8036b5da7e92151470e4">doBeginFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_egl_gbm_layer_1afd052103a42c7121fbd21f16dbab92c0">doBeginFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_egl_gbm_layer_1acceff2d3a46d3348ff9001595f83b0a9">doBeginFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_egl_layer_1ac90790075eaae995d772de1bc82d79d9">doBeginFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_q_painter_layer_1a2f6ab1129e20e74aeb663eeaad96a910">doBeginFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_egl_cursor_layer_1aa554397583f9489ffaed62a4aa3c0cc8">doBeginFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_egl_primary_layer_1aac0e1b5f37b5c7e661f97b7b749500cf">doBeginFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer_1af40a33c0ac973d90b68d699fdd10f77b">doBeginFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1ae8e5e56033d0b2eb99b3389f19176e05">doBeginFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1a77b9b09d1a8dc6fde2715232b328e4ba">doBeginFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1af4bba28b372bbb48f0bcc8e1f31660c9">doBeginFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_q_painter_cursor_layer_1ac7b3cb45d96c98ef8b1c4f98b2d711de">doBeginFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_q_painter_primary_layer_1afd0c529534c20f9babb5ed59890c011d">doBeginFrame</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="100" column="27"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_layer_1a693ed0b18329db5416bab2c60b00304b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::OutputLayer::doEndFrame</definition>
        <argsstring>(const QRegion &amp;renderedRegion, const QRegion &amp;damagedRegion, OutputFrame *frame)=0</argsstring>
        <name>doEndFrame</name>
        <qualifiedname>KWin::OutputLayer::doEndFrame</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_q_painter_layer_1aadccd2bd988317e2ba78dad27b35231f">doEndFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_drm_virtual_q_painter_layer_1a135f4ee8a43a912af7a45b07cb6a99ba">doEndFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_egl_gbm_layer_1abf71c2fe40b26d24c2644309a197aed0">doEndFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_egl_gbm_layer_1ac49c6c2c4e193debc057eff7e37f7a2f">doEndFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_egl_layer_1a75ee5e50ce1e9bd2aad38d18e33a2d68">doEndFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_q_painter_layer_1a6300a2297927d1de4934ef51e1c938d3">doEndFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_egl_cursor_layer_1a9fb780528e7a2853398d43c7a0764777">doEndFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_egl_primary_layer_1af7e0236acfac72aa38c51db893643c63">doEndFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer_1a479ffc8dab2b545d4c00324a820f5b77">doEndFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1ab0b5a981b36019aa242ecaef8accadfb">doEndFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_egl_cursor_layer_1ad8fa56591147e0da725354cff7120821">doEndFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_egl_primary_layer_1a7b485dd6bba6de5b7505466c79ce9127">doEndFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_q_painter_cursor_layer_1a2f0b4d3559e8d5450c53dd84d6e0aca4">doEndFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_q_painter_primary_layer_1a1c21ea9c6568e84f37753a2d8d444669">doEndFrame</reimplementedby>
        <param>
          <type>const QRegion &amp;</type>
          <declname>renderedRegion</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>damagedRegion</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputlayer.h" line="101" column="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>KWin::DrmOutputLayer</label>
        <link refid="class_k_win_1_1_drm_output_layer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>KWin::DrmPipelineLayer</label>
        <link refid="class_k_win_1_1_drm_pipeline_layer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>KWin::DrmQPainterLayer</label>
        <link refid="class_k_win_1_1_drm_q_painter_layer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>KWin::DrmVirtualQPainterLayer</label>
        <link refid="class_k_win_1_1_drm_virtual_q_painter_layer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>KWin::EglGbmLayer</label>
        <link refid="class_k_win_1_1_egl_gbm_layer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::OutputLayer</label>
        <link refid="class_k_win_1_1_output_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>KWin::VirtualEglGbmLayer</label>
        <link refid="class_k_win_1_1_virtual_egl_gbm_layer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>KWin::VirtualEglLayer</label>
        <link refid="class_k_win_1_1_virtual_egl_layer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>KWin::VirtualQPainterLayer</label>
        <link refid="class_k_win_1_1_virtual_q_painter_layer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>KWin::Wayland::WaylandEglCursorLayer</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_egl_cursor_layer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>KWin::Wayland::WaylandEglPrimaryLayer</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_egl_primary_layer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>KWin::Wayland::WaylandQPainterCursorLayer</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>KWin::Wayland::WaylandQPainterPrimaryLayer</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>KWin::X11WindowedEglCursorLayer</label>
        <link refid="class_k_win_1_1_x11_windowed_egl_cursor_layer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>KWin::X11WindowedEglPrimaryLayer</label>
        <link refid="class_k_win_1_1_x11_windowed_egl_primary_layer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>KWin::X11WindowedQPainterCursorLayer</label>
        <link refid="class_k_win_1_1_x11_windowed_q_painter_cursor_layer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>KWin::X11WindowedQPainterPrimaryLayer</label>
        <link refid="class_k_win_1_1_x11_windowed_q_painter_primary_layer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>KWin::BrightnessDevice</label>
        <link refid="class_k_win_1_1_brightness_device"/>
      </node>
      <node id="6">
        <label>KWin::ColorDescription</label>
        <link refid="class_k_win_1_1_color_description"/>
        <childnode refid="6" relation="usage">
          <edgelabel>sRGB</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>KWin::Edid</label>
        <link refid="class_k_win_1_1_edid"/>
      </node>
      <node id="4">
        <label>KWin::Output</label>
        <link refid="class_k_win_1_1_output"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_state</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_information</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_brightnessDevice</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>KWin::Output::Information</label>
        <link refid="struct_k_win_1_1_output_1_1_information"/>
        <childnode refid="8" relation="usage">
          <edgelabel>edid</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>panelOrientation</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>KWin::Output::State</label>
        <link refid="struct_k_win_1_1_output_1_1_state"/>
        <childnode refid="3" relation="usage">
          <edgelabel>manualTransform</edgelabel>
          <edgelabel>transform</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>colorDescription</edgelabel>
          <edgelabel>originalColorDescription</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>KWin::OutputLayer</label>
        <link refid="class_k_win_1_1_output_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_bufferTransform</edgelabel>
          <edgelabel>m_offloadTransform</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_output</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KWin::OutputTransform</label>
        <link refid="class_k_win_1_1_output_transform"/>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/core/outputlayer.h" line="32" column="1" bodyfile="kwin/src/core/outputlayer.h" bodystart="33" bodyend="113"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_output_layer_1a2f2b3779acdac137f313af1b1d19aa57" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>addRepaint</name></member>
      <member refid="class_k_win_1_1_output_layer_1a0c35fab74670dc55d6778c0ba83f65b3" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>beginFrame</name></member>
      <member refid="class_k_win_1_1_output_layer_1abcd7fbb2032b11fdd392da6b6247c725" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>bufferTransform</name></member>
      <member refid="class_k_win_1_1_output_layer_1aa468802d01855b8978b27bbc03be0c5b" prot="protected" virt="pure-virtual"><scope>KWin::OutputLayer</scope><name>doBeginFrame</name></member>
      <member refid="class_k_win_1_1_output_layer_1a693ed0b18329db5416bab2c60b00304b" prot="protected" virt="pure-virtual"><scope>KWin::OutputLayer</scope><name>doEndFrame</name></member>
      <member refid="class_k_win_1_1_output_layer_1a1843ff1def5379cfad784d76df2b5bbb" prot="protected" virt="virtual"><scope>KWin::OutputLayer</scope><name>doImportScanoutBuffer</name></member>
      <member refid="class_k_win_1_1_output_layer_1a742e96adf296b32a4f1efaca57d602fe" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>endFrame</name></member>
      <member refid="class_k_win_1_1_output_layer_1ab5b0f0faaea0c7e881db718a64658dc0" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>hotspot</name></member>
      <member refid="class_k_win_1_1_output_layer_1a54ee1bcc42a4346ddce4860b37339203" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>importScanoutBuffer</name></member>
      <member refid="class_k_win_1_1_output_layer_1ade038d52e72b155d6ee023524d066d7d" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>isEnabled</name></member>
      <member refid="class_k_win_1_1_output_layer_1ae5b61066054d6f2f817700a2ad38c338" prot="protected" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>m_bufferTransform</name></member>
      <member refid="class_k_win_1_1_output_layer_1a8b34de14c7ce7f8f60fbb0899afd9d42" prot="protected" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>m_enabled</name></member>
      <member refid="class_k_win_1_1_output_layer_1a30b570aaca0b11d2a9d395703dedfa2e" prot="protected" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>m_hotspot</name></member>
      <member refid="class_k_win_1_1_output_layer_1abe5864edf1b1412b7a922151b603907d" prot="protected" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>m_offloadTransform</name></member>
      <member refid="class_k_win_1_1_output_layer_1a9b035f27d0ea567a73bf27f9ef82f744" prot="protected" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>m_output</name></member>
      <member refid="class_k_win_1_1_output_layer_1a55f0b76d433dc0f1dcbb41ca834e5d00" prot="protected" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>m_repaints</name></member>
      <member refid="class_k_win_1_1_output_layer_1a00e5d48f76d5f74421c89655a66824b7" prot="protected" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>m_scale</name></member>
      <member refid="class_k_win_1_1_output_layer_1a008ca7b899cf515c4483c3f45f543b9a" prot="protected" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>m_scanoutCandidate</name></member>
      <member refid="class_k_win_1_1_output_layer_1a81b53e2bbdca8faeb1fe25f53da077e6" prot="protected" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>m_sourceRect</name></member>
      <member refid="class_k_win_1_1_output_layer_1abf7d3cc9dff1017d98b72640f3a775f0" prot="protected" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>m_targetRect</name></member>
      <member refid="class_k_win_1_1_output_layer_1ab44b7af337ba615f5e5550586b99ecc9" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>needsRepaint</name></member>
      <member refid="class_k_win_1_1_output_layer_1accd1ac89381d7761a47ba22f94200000" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>notifyNoScanoutCandidate</name></member>
      <member refid="class_k_win_1_1_output_layer_1abcbc86757c8850d18529bddc3d537160" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>offloadTransform</name></member>
      <member refid="class_k_win_1_1_output_layer_1a9ee261bca4012bac914df29d5ebf4117" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>OutputLayer</name></member>
      <member refid="class_k_win_1_1_output_layer_1ac9ce2d0a04165b7d23f4229c0ed8e0e0" prot="public" virt="virtual"><scope>KWin::OutputLayer</scope><name>recommendedSizes</name></member>
      <member refid="class_k_win_1_1_output_layer_1a213d86c0f4be0c717d5e734d43224d01" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>repaints</name></member>
      <member refid="class_k_win_1_1_output_layer_1a7e9983dfc6583b829e85961112a76646" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>resetRepaints</name></member>
      <member refid="class_k_win_1_1_output_layer_1a75cc900617e49a9125da7bf26f3ab986" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>scale</name></member>
      <member refid="class_k_win_1_1_output_layer_1ab43b39c7559453fd517bc4f1ee726784" prot="public" virt="pure-virtual"><scope>KWin::OutputLayer</scope><name>scanoutDevice</name></member>
      <member refid="class_k_win_1_1_output_layer_1a44ada592a0855658e6e5fa96b5b67c04" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>setEnabled</name></member>
      <member refid="class_k_win_1_1_output_layer_1af15fe575d7268641fccc72b1f91b96aa" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>setHotspot</name></member>
      <member refid="class_k_win_1_1_output_layer_1a4dfcbf3650f97a4f072008773c981a03" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>setScale</name></member>
      <member refid="class_k_win_1_1_output_layer_1a4836d5c759356c56eb085f9d51f6b9df" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>setSourceRect</name></member>
      <member refid="class_k_win_1_1_output_layer_1a85709e6e7f9019c3a16a362d041a8569" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>setTargetRect</name></member>
      <member refid="class_k_win_1_1_output_layer_1a2ae106b6b52ad73ff92ae9f0aa667461" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>sourceRect</name></member>
      <member refid="class_k_win_1_1_output_layer_1ace0c0e616f28f53a53498291526ff62d" prot="public" virt="pure-virtual"><scope>KWin::OutputLayer</scope><name>supportedDrmFormats</name></member>
      <member refid="class_k_win_1_1_output_layer_1a55b2e80edaf7ad94832884608aca8042" prot="public" virt="non-virtual"><scope>KWin::OutputLayer</scope><name>targetRect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
