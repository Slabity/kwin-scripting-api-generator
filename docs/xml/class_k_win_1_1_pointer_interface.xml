<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_pointer_interface" kind="class" language="C++" prot="public">
    <compoundname>KWin::PointerInterface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="pointer_8h" local="no">pointer.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_pointer_interface_1a4cc407326e5799357088673f4277a7fc" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_pointer_interface_private" kindref="compound">PointerInterfacePrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;PointerInterfacePrivate&gt; KWin::PointerInterface::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::PointerInterface::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="78" column="21" bodyfile="kwin/src/wayland/pointer.h" bodystart="78" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_k_win_1_1_pointer_interface_1a16d024c3158e5383ab63231b9a4eff14" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class SeatInterfacePrivate</definition>
        <argsstring></argsstring>
        <name>SeatInterfacePrivate</name>
        <qualifiedname>KWin::PointerInterface::SeatInterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_seat_interface_private" kindref="compound">SeatInterfacePrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="80" column="18" bodyfile="kwin/src/wayland/pointer.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_k_win_1_1_pointer_interface_1a4ca4749b5170ace1bf3762526a322800" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class PointerInterfacePrivate</definition>
        <argsstring></argsstring>
        <name>PointerInterfacePrivate</name>
        <qualifiedname>KWin::PointerInterface::PointerInterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_pointer_interface_private" kindref="compound">PointerInterfacePrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="81" column="18" bodyfile="kwin/src/wayland/pointer.h" bodystart="81" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_1a44f29f6a67987519d8d5be69256bb205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::PointerInterface::~PointerInterface</definition>
        <argsstring>() override</argsstring>
        <name>~PointerInterface</name>
        <qualifiedname>KWin::PointerInterface::~PointerInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="37" column="5" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_1a525c28fbabc77a62f71ee2335206fc07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
        <definition>SurfaceInterface * KWin::PointerInterface::focusedSurface</definition>
        <argsstring>() const</argsstring>
        <name>focusedSurface</name>
        <qualifiedname>KWin::PointerInterface::focusedSurface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the focused pointer surface. Note that the returned value may be different from SurfaceInterface::focusedSurfacePointerSurface() because this function returns the effective focused surface. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="44" column="22" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_1a0ae76fd33d0441a23f72fff2d708affc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>quint32</type>
        <definition>quint32 KWin::PointerInterface::focusedSerial</definition>
        <argsstring>() const</argsstring>
        <name>focusedSerial</name>
        <qualifiedname>KWin::PointerInterface::focusedSerial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="45" column="13" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_1a2710b3ac09cbe72ef975c458dfe778f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref> *</type>
        <definition>SeatInterface * KWin::PointerInterface::seat</definition>
        <argsstring>() const</argsstring>
        <name>seat</name>
        <qualifiedname>KWin::PointerInterface::seat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the seat to which this pointer belongs to. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="50" column="19" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="388" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_1a640527f6247d2b43aa07e436d5001285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterface::sendEnter</definition>
        <argsstring>(SurfaceInterface *surface, const QPointF &amp;position, quint32 serial)</argsstring>
        <name>sendEnter</name>
        <qualifiedname>KWin::PointerInterface::sendEnter</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="57" column="10" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="168" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_1a31c4334d7f1fc95d8800c0175bdf366e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterface::sendLeave</definition>
        <argsstring>(quint32 serial)</argsstring>
        <name>sendLeave</name>
        <qualifiedname>KWin::PointerInterface::sendLeave</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="58" column="10" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="198" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_1a21c88824cd0322fbd6acf515db0e4a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterface::sendButton</definition>
        <argsstring>(quint32 button, PointerButtonState state, quint32 serial)</argsstring>
        <name>sendButton</name>
        <qualifiedname>KWin::PointerInterface::sendButton</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>button</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3" kindref="member">PointerButtonState</ref></type>
          <declname>state</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="59" column="10" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="225" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_1a8956fc494af462297f2d12f68e962fe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterface::sendButton</definition>
        <argsstring>(quint32 button, PointerButtonState state, ClientConnection *client)</argsstring>
        <name>sendButton</name>
        <qualifiedname>KWin::PointerInterface::sendButton</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>button</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3" kindref="member">PointerButtonState</ref></type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="60" column="10" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="238" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_1ad3a3e0d49fe6f62bb896daf07a57ff80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterface::sendAxis</definition>
        <argsstring>(Qt::Orientation orientation, qreal delta, qint32 deltaV120, PointerAxisSource source, bool inverted)</argsstring>
        <name>sendAxis</name>
        <qualifiedname>KWin::PointerInterface::sendAxis</qualifiedname>
        <param>
          <type>Qt::Orientation</type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>qint32</type>
          <declname>deltaV120</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a143704533be3f7be8a43b2b962600248" kindref="member">PointerAxisSource</ref></type>
          <declname>source</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inverted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="61" column="10" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="281" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_1a9f1e0f0fbb663e59b4b7c64b6b6ccc2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterface::sendMotion</definition>
        <argsstring>(const QPointF &amp;position)</argsstring>
        <name>sendMotion</name>
        <qualifiedname>KWin::PointerInterface::sendMotion</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="62" column="10" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="365" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_1a4c07d977613e383947c3f64b2bed5fd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterface::sendFrame</definition>
        <argsstring>()</argsstring>
        <name>sendFrame</name>
        <qualifiedname>KWin::PointerInterface::sendFrame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="63" column="10" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="381" bodyend="386"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_1adb41bec900d6203bc4e19641e48a35b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref> *</type>
        <definition>PointerInterface * KWin::PointerInterface::get</definition>
        <argsstring>(wl_resource *native)</argsstring>
        <name>get</name>
        <qualifiedname>KWin::PointerInterface::get</qualifiedname>
        <param>
          <type>wl_resource *</type>
          <declname>native</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref> for the <computeroutput>native</computeroutput> resource. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="55" column="29" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="393" bodyend="399"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_pointer_interface_1a5a388d7054832ddc2c728fc8579794bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterface::cursorChanged</definition>
        <argsstring>(const PointerCursor &amp;cursor)</argsstring>
        <name>cursorChanged</name>
        <qualifiedname>KWin::PointerInterface::cursorChanged</qualifiedname>
        <param>
          <type>const <ref refid="namespace_k_win_1a1f59b09426418b14e99ede98c6a021f6" kindref="member">PointerCursor</ref> &amp;</type>
          <declname>cursor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted whenever the cursor surface changes. As long as there is no any focused surface, the cursor cannot be changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="70" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_pointer_interface_1acd310095194b7a3a2720856e37481e45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterface::focusedSurfaceChanged</definition>
        <argsstring>()</argsstring>
        <name>focusedSurfaceChanged</name>
        <qualifiedname>KWin::PointerInterface::focusedSurfaceChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted whenever the focused pointer surface changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="74" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_1a2e7b4c3deb05a0864bd66a2e12fb8f95" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::PointerInterface::PointerInterface</definition>
        <argsstring>(SeatInterface *seat)</argsstring>
        <name>PointerInterface</name>
        <qualifiedname>KWin::PointerInterface::PointerInterface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer.h" line="77" column="14" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref> class represents one or more input devices such as mice, which control the pointer location. It corresponds to the <ref refid="namespace_k_win_1_1_wayland" kindref="compound">Wayland</ref> interface <computeroutput>wl_pointer</computeroutput>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::PointerInterface</label>
        <link refid="class_k_win_1_1_pointer_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::PointerInterface</label>
        <link refid="class_k_win_1_1_pointer_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/pointer.h" line="32" column="1" bodyfile="kwin/src/wayland/pointer.h" bodystart="33" bodyend="82"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_pointer_interface_1a5a388d7054832ddc2c728fc8579794bc" prot="public" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>cursorChanged</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1a4cc407326e5799357088673f4277a7fc" prot="private" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>d</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1a0ae76fd33d0441a23f72fff2d708affc" prot="public" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>focusedSerial</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1a525c28fbabc77a62f71ee2335206fc07" prot="public" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>focusedSurface</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1acd310095194b7a3a2720856e37481e45" prot="public" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>focusedSurfaceChanged</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1adb41bec900d6203bc4e19641e48a35b6" prot="public" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>get</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1a2e7b4c3deb05a0864bd66a2e12fb8f95" prot="private" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>PointerInterface</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1a4ca4749b5170ace1bf3762526a322800" prot="private" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>PointerInterfacePrivate</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1a2710b3ac09cbe72ef975c458dfe778f5" prot="public" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>seat</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1a16d024c3158e5383ab63231b9a4eff14" prot="private" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>SeatInterfacePrivate</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1ad3a3e0d49fe6f62bb896daf07a57ff80" prot="public" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>sendAxis</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1a21c88824cd0322fbd6acf515db0e4a13" prot="public" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>sendButton</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1a8956fc494af462297f2d12f68e962fe7" prot="public" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>sendButton</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1a640527f6247d2b43aa07e436d5001285" prot="public" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>sendEnter</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1a4c07d977613e383947c3f64b2bed5fd9" prot="public" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>sendFrame</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1a31c4334d7f1fc95d8800c0175bdf366e" prot="public" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>sendLeave</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1a9f1e0f0fbb663e59b4b7c64b6b6ccc2f" prot="public" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>sendMotion</name></member>
      <member refid="class_k_win_1_1_pointer_interface_1a44f29f6a67987519d8d5be69256bb205" prot="public" virt="non-virtual"><scope>KWin::PointerInterface</scope><name>~PointerInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
