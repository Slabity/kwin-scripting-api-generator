<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_keyboard_layout_switching_1_1_policy" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>KWin::KeyboardLayoutSwitching::Policy</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <derivedcompoundref refid="class_k_win_1_1_keyboard_layout_switching_1_1_application_policy" prot="public" virt="non-virtual">KWin::KeyboardLayoutSwitching::ApplicationPolicy</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy" prot="public" virt="non-virtual">KWin::KeyboardLayoutSwitching::GlobalPolicy</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_keyboard_layout_switching_1_1_virtual_desktop_policy" prot="public" virt="non-virtual">KWin::KeyboardLayoutSwitching::VirtualDesktopPolicy</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_keyboard_layout_switching_1_1_window_policy" prot="public" virt="non-virtual">KWin::KeyboardLayoutSwitching::WindowPolicy</derivedcompoundref>
    <includes refid="keyboard__layout__switching_8h" local="no">keyboard_layout_switching.h</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a621b6d0b024fe25a34a56540511403ef" prot="protected" static="no" mutable="no">
        <type>KConfigGroup</type>
        <definition>KConfigGroup KWin::KeyboardLayoutSwitching::Policy::m_config</definition>
        <argsstring></argsstring>
        <name>m_config</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::Policy::m_config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="44" column="18" bodyfile="kwin/src/keyboard_layout_switching.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a523d4f1e8e9207ab26560a7a616a7d3e" prot="protected" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_xkb" kindref="compound">Xkb</ref> *</type>
        <definition>Xkb* KWin::KeyboardLayoutSwitching::Policy::m_xkb</definition>
        <argsstring></argsstring>
        <name>m_xkb</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::Policy::m_xkb</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="49" column="9" bodyfile="kwin/src/keyboard_layout_switching.h" bodystart="49" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a5e658cfdb0039e487c853c4f4a04c040" prot="protected" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char KWin::KeyboardLayoutSwitching::Policy::defaultLayoutEntryKeyPrefix</definition>
        <argsstring>[]</argsstring>
        <name>defaultLayoutEntryKeyPrefix</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::Policy::defaultLayoutEntryKeyPrefix</qualifiedname>
        <initializer>= &quot;LayoutDefault&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="48" column="23" bodyfile="kwin/src/keyboard_layout_switching.h" bodystart="48" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1ae4a1bb3e03399c92c818745088c47b99" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_keyboard_layout" kindref="compound">KeyboardLayout</ref> *</type>
        <definition>KeyboardLayout* KWin::KeyboardLayoutSwitching::Policy::m_layout</definition>
        <argsstring></argsstring>
        <name>m_layout</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::Policy::m_layout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="52" column="20" bodyfile="kwin/src/keyboard_layout_switching.h" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1aea0de5e73d88c2a526eaa28b74d6748c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::KeyboardLayoutSwitching::Policy::~Policy</definition>
        <argsstring>() override</argsstring>
        <name>~Policy</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::Policy::~Policy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1af5e81496b1f3fa30558445b566b407cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QString</type>
        <definition>virtual QString KWin::KeyboardLayoutSwitching::Policy::name</definition>
        <argsstring>() const =0</argsstring>
        <name>name</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::Policy::name</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_keyboard_layout_switching_1_1_application_policy_1ab979bb51ea2f4c5ff8ea78284c8b398e">name</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1ae13d825748749addc6452c20af0032d3">name</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_keyboard_layout_switching_1_1_virtual_desktop_policy_1a73dae83bdf0c42dc0ecb345b68d5b0e0">name</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_keyboard_layout_switching_1_1_window_policy_1a05f75b52e90f0925a1c40267ee446dc7">name</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="33" column="21"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a6fc44581338efb0f4883331cbce43a98" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy" kindref="compound">Policy</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Policy &gt; KWin::KeyboardLayoutSwitching::Policy::create</definition>
        <argsstring>(Xkb *xkb, KeyboardLayout *layout, const KConfigGroup &amp;config, const QString &amp;policy)</argsstring>
        <name>create</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::Policy::create</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_xkb" kindref="compound">Xkb</ref> *</type>
          <declname>xkb</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_keyboard_layout" kindref="compound">KeyboardLayout</ref> *</type>
          <declname>layout</declname>
        </param>
        <param>
          <type>const KConfigGroup &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="35" column="28" bodyfile="kwin/src/keyboard_layout_switching.cpp" bodystart="44" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1ad22846fe71cca26b4df109e4671ba97b" prot="protected" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::KeyboardLayoutSwitching::Policy::Policy</definition>
        <argsstring>(Xkb *xkb, KeyboardLayout *layout, const KConfigGroup &amp;config=KConfigGroup())</argsstring>
        <name>Policy</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::Policy::Policy</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_xkb" kindref="compound">Xkb</ref> *</type>
          <declname>xkb</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_keyboard_layout" kindref="compound">KeyboardLayout</ref> *</type>
          <declname>layout</declname>
        </param>
        <param>
          <type>const KConfigGroup &amp;</type>
          <declname>config</declname>
          <defval>KConfigGroup()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="38" column="14" bodyfile="kwin/src/keyboard_layout_switching.cpp" bodystart="22" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1af7c7506336bf9e88a42bbb4f446a3d43" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void KWin::KeyboardLayoutSwitching::Policy::clearCache</definition>
        <argsstring>()=0</argsstring>
        <name>clearCache</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::Policy::clearCache</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_keyboard_layout_switching_1_1_application_policy_1a124ff06942c57620b28ba4ee48a5cfc6">clearCache</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1a9669b4ce683f3a34166d6ba805b4e2b5">clearCache</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_keyboard_layout_switching_1_1_virtual_desktop_policy_1a327b4b04eb5da3d9764732ef1c846618">clearCache</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_keyboard_layout_switching_1_1_window_policy_1a0aad55907f07aa30c494a33ca36b9912">clearCache</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="39" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1ae4467d7a1b0fe4c8b387e903a98844b6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void KWin::KeyboardLayoutSwitching::Policy::layoutChanged</definition>
        <argsstring>(uint index)=0</argsstring>
        <name>layoutChanged</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::Policy::layoutChanged</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_keyboard_layout_switching_1_1_application_policy_1ac23c320895f596c64c9fcf58c397c6c7">layoutChanged</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1a6bf207eeb332b251a2b13335a063b1d5">layoutChanged</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_keyboard_layout_switching_1_1_virtual_desktop_policy_1a4d0bd7d20a04d1534cc39033edba062e">layoutChanged</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_keyboard_layout_switching_1_1_window_policy_1a4fb7d2bd1900dcbae58ff446d4209a78">layoutChanged</reimplementedby>
        <param>
          <type>uint</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="40" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1af02b75505bb271b68358ce7744f7e034" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::KeyboardLayoutSwitching::Policy::setLayout</definition>
        <argsstring>(uint index)</argsstring>
        <name>setLayout</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::Policy::setLayout</qualifiedname>
        <param>
          <type>uint</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="42" column="10" bodyfile="kwin/src/keyboard_layout_switching.cpp" bodystart="34" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a3be072333c0175a01e397f22ad953433" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const QString</type>
        <definition>const QString KWin::KeyboardLayoutSwitching::Policy::defaultLayoutEntryKey</definition>
        <argsstring>() const</argsstring>
        <name>defaultLayoutEntryKey</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::Policy::defaultLayoutEntryKey</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1a3a9ed6d9c39fea46aba162692f62aed1">defaultLayoutEntryKey</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="45" column="27" bodyfile="kwin/src/keyboard_layout_switching.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a0c7b497b7b1f5a2dccba5edae9daac2f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::KeyboardLayoutSwitching::Policy::clearLayouts</definition>
        <argsstring>()</argsstring>
        <name>clearLayouts</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::Policy::clearLayouts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="46" column="10" bodyfile="kwin/src/keyboard_layout_switching.cpp" bodystart="64" bodyend="70"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>KWin::KeyboardLayoutSwitching::ApplicationPolicy</label>
        <link refid="class_k_win_1_1_keyboard_layout_switching_1_1_application_policy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>KWin::KeyboardLayoutSwitching::GlobalPolicy</label>
        <link refid="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::KeyboardLayoutSwitching::Policy</label>
        <link refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>KWin::KeyboardLayoutSwitching::VirtualDesktopPolicy</label>
        <link refid="class_k_win_1_1_keyboard_layout_switching_1_1_virtual_desktop_policy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>KWin::KeyboardLayoutSwitching::WindowPolicy</label>
        <link refid="class_k_win_1_1_keyboard_layout_switching_1_1_window_policy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::KeyboardLayoutSwitching::Policy</label>
        <link refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_xkb</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KWin::Xkb</label>
        <link refid="class_k_win_1_1_xkb"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/keyboard_layout_switching.h" line="27" column="1" bodyfile="kwin/src/keyboard_layout_switching.h" bodystart="28" bodyend="53"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1af7c7506336bf9e88a42bbb4f446a3d43" prot="protected" virt="pure-virtual"><scope>KWin::KeyboardLayoutSwitching::Policy</scope><name>clearCache</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a0c7b497b7b1f5a2dccba5edae9daac2f" prot="protected" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::Policy</scope><name>clearLayouts</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a6fc44581338efb0f4883331cbce43a98" prot="public" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::Policy</scope><name>create</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a3be072333c0175a01e397f22ad953433" prot="protected" virt="virtual"><scope>KWin::KeyboardLayoutSwitching::Policy</scope><name>defaultLayoutEntryKey</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a5e658cfdb0039e487c853c4f4a04c040" prot="protected" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::Policy</scope><name>defaultLayoutEntryKeyPrefix</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1ae4467d7a1b0fe4c8b387e903a98844b6" prot="protected" virt="pure-virtual"><scope>KWin::KeyboardLayoutSwitching::Policy</scope><name>layoutChanged</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a621b6d0b024fe25a34a56540511403ef" prot="protected" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::Policy</scope><name>m_config</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1ae4a1bb3e03399c92c818745088c47b99" prot="private" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::Policy</scope><name>m_layout</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a523d4f1e8e9207ab26560a7a616a7d3e" prot="protected" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::Policy</scope><name>m_xkb</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1af5e81496b1f3fa30558445b566b407cc" prot="public" virt="pure-virtual"><scope>KWin::KeyboardLayoutSwitching::Policy</scope><name>name</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1ad22846fe71cca26b4df109e4671ba97b" prot="protected" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::Policy</scope><name>Policy</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1af02b75505bb271b68358ce7744f7e034" prot="protected" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::Policy</scope><name>setLayout</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1aea0de5e73d88c2a526eaa28b74d6748c" prot="public" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::Policy</scope><name>~Policy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
