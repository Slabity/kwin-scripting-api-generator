<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_item_renderer_open_g_l" kind="class" language="C++" prot="public">
    <compoundname>KWin::ItemRendererOpenGL</compoundname>
    <basecompoundref refid="class_k_win_1_1_item_renderer" prot="public" virt="non-virtual">KWin::ItemRenderer</basecompoundref>
    <includes refid="itemrenderer__opengl_8h" local="no">itemrenderer_opengl.h</includes>
    <innerclass refid="struct_k_win_1_1_item_renderer_open_g_l_1_1_render_context" prot="public">KWin::ItemRendererOpenGL::RenderContext</innerclass>
    <innerclass refid="struct_k_win_1_1_item_renderer_open_g_l_1_1_render_node" prot="public">KWin::ItemRendererOpenGL::RenderNode</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_item_renderer_open_g_l_1a6e97f3c9fbf4fd2b7c636e759523a7c6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::ItemRendererOpenGL::m_blendingEnabled</definition>
        <argsstring></argsstring>
        <name>m_blendingEnabled</name>
        <qualifiedname>KWin::ItemRendererOpenGL::m_blendingEnabled</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="65" column="10" bodyfile="kwin/src/scene/itemrenderer_opengl.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_item_renderer_open_g_l_1aa2c49dd84b0dc29f0e190e0d05b692ae" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref> *const</type>
        <definition>EglDisplay* const KWin::ItemRendererOpenGL::m_eglDisplay</definition>
        <argsstring></argsstring>
        <name>m_eglDisplay</name>
        <qualifiedname>KWin::ItemRendererOpenGL::m_eglDisplay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="66" column="22" bodyfile="kwin/src/scene/itemrenderer_opengl.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_item_renderer_open_g_l_1ae1722db0ed22297a7642ea5e6664abf4" prot="private" static="no" mutable="no">
        <type>std::unordered_set&lt; std::shared_ptr&lt; <ref refid="class_k_win_1_1_sync_release_point" kindref="compound">SyncReleasePoint</ref> &gt; &gt;</type>
        <definition>std::unordered_set&lt;std::shared_ptr&lt;SyncReleasePoint&gt; &gt; KWin::ItemRendererOpenGL::m_releasePoints</definition>
        <argsstring></argsstring>
        <name>m_releasePoints</name>
        <qualifiedname>KWin::ItemRendererOpenGL::m_releasePoints</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="67" column="24" bodyfile="kwin/src/scene/itemrenderer_opengl.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_item_renderer_open_g_l_1af195fcf273e67f941ce79b4f83a8a62b" prot="private" static="no" mutable="no">
        <type>struct <ref refid="class_k_win_1_1_item_renderer_open_g_l" kindref="compound">KWin::ItemRendererOpenGL</ref></type>
        <definition>struct KWin::ItemRendererOpenGL KWin::ItemRendererOpenGL::m_debug</definition>
        <argsstring></argsstring>
        <name>m_debug</name>
        <qualifiedname>KWin::ItemRendererOpenGL::m_debug</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="73" column="13"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_item_renderer_open_g_l_1a311f75034b4ecbec29bdd8d94966564d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::ItemRendererOpenGL::fractionalEnabled</definition>
        <argsstring></argsstring>
        <name>fractionalEnabled</name>
        <qualifiedname>KWin::ItemRendererOpenGL::fractionalEnabled</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="71" column="14" bodyfile="kwin/src/scene/itemrenderer_opengl.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_item_renderer_open_g_l_1ac5bf3ce0eb25f130ce526179ad64f9dd" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_g_l_shader" kindref="compound">GLShader</ref> &gt;</type>
        <definition>std::unique_ptr&lt;GLShader&gt; KWin::ItemRendererOpenGL::fractionalShader</definition>
        <argsstring></argsstring>
        <name>fractionalShader</name>
        <qualifiedname>KWin::ItemRendererOpenGL::fractionalShader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="72" column="25" bodyfile="kwin/src/scene/itemrenderer_opengl.h" bodystart="72" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_item_renderer_open_g_l_1a3164169528e71ec3b29db94598e2ba0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ItemRendererOpenGL::ItemRendererOpenGL</definition>
        <argsstring>(EglDisplay *eglDisplay)</argsstring>
        <name>ItemRendererOpenGL</name>
        <qualifiedname>KWin::ItemRendererOpenGL::ItemRendererOpenGL</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref> *</type>
          <declname>eglDisplay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="49" column="5" bodyfile="kwin/src/scene/itemrenderer_opengl.cpp" bodystart="26" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_item_renderer_open_g_l_1a5d10edf2bc0ab28e73ca023004509b69" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::ItemRendererOpenGL::beginFrame</definition>
        <argsstring>(const RenderTarget &amp;renderTarget, const RenderViewport &amp;viewport) override</argsstring>
        <name>beginFrame</name>
        <qualifiedname>KWin::ItemRendererOpenGL::beginFrame</qualifiedname>
        <reimplements refid="class_k_win_1_1_item_renderer_1ad8a8dad3d6d22dff98d3313a1b28c79f">beginFrame</reimplements>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="51" column="10" bodyfile="kwin/src/scene/itemrenderer_opengl.cpp" bodystart="41" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_item_renderer_open_g_l_1a62ead1a0876cc9f9138c9b38bfa8ccb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::ItemRendererOpenGL::endFrame</definition>
        <argsstring>() override</argsstring>
        <name>endFrame</name>
        <qualifiedname>KWin::ItemRendererOpenGL::endFrame</qualifiedname>
        <reimplements refid="class_k_win_1_1_item_renderer_1a91e0dc5ed2914850f81ab1f466f6e4b4">endFrame</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="52" column="10" bodyfile="kwin/src/scene/itemrenderer_opengl.cpp" bodystart="49" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_item_renderer_open_g_l_1aa40b69432bf90cb33a3e97c280723218" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::ItemRendererOpenGL::renderBackground</definition>
        <argsstring>(const RenderTarget &amp;renderTarget, const RenderViewport &amp;viewport, const QRegion &amp;region) override</argsstring>
        <name>renderBackground</name>
        <qualifiedname>KWin::ItemRendererOpenGL::renderBackground</qualifiedname>
        <reimplements refid="class_k_win_1_1_item_renderer_1a75efa47e127605e5f81d2cce7b5a8ae5">renderBackground</reimplements>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="54" column="10" bodyfile="kwin/src/scene/itemrenderer_opengl.cpp" bodystart="231" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_item_renderer_open_g_l_1a76daebc154e50910f346e08bfdaf208f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::ItemRendererOpenGL::renderItem</definition>
        <argsstring>(const RenderTarget &amp;renderTarget, const RenderViewport &amp;viewport, Item *item, int mask, const QRegion &amp;region, const WindowPaintData &amp;data) override</argsstring>
        <name>renderItem</name>
        <qualifiedname>KWin::ItemRendererOpenGL::renderItem</qualifiedname>
        <reimplements refid="class_k_win_1_1_item_renderer_1ab9c99d20822bb966d02f42937fd7b784">renderItem</reimplements>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_item" kindref="compound">Item</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="55" column="10" bodyfile="kwin/src/scene/itemrenderer_opengl.cpp" bodystart="251" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_item_renderer_open_g_l_1ae3533a395f19850aa94fcab0f10d4410" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_image_item" kindref="compound">ImageItem</ref> &gt;</type>
        <definition>std::unique_ptr&lt; ImageItem &gt; KWin::ItemRendererOpenGL::createImageItem</definition>
        <argsstring>(Item *parent=nullptr) override</argsstring>
        <name>createImageItem</name>
        <qualifiedname>KWin::ItemRendererOpenGL::createImageItem</qualifiedname>
        <reimplements refid="class_k_win_1_1_item_renderer_1a365b6cdc03dd1a927c08899118ef44f9">createImageItem</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_item" kindref="compound">Item</ref> *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="57" column="21" bodyfile="kwin/src/scene/itemrenderer_opengl.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_item_renderer_open_g_l_1a1ebfbe1bbdfa57eea1d6a8a91f2ec43e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVector4D</type>
        <definition>QVector4D KWin::ItemRendererOpenGL::modulate</definition>
        <argsstring>(float opacity, float brightness) const</argsstring>
        <name>modulate</name>
        <qualifiedname>KWin::ItemRendererOpenGL::modulate</qualifiedname>
        <param>
          <type>float</type>
          <declname>opacity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>brightness</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="60" column="15" bodyfile="kwin/src/scene/itemrenderer_opengl.cpp" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_item_renderer_open_g_l_1a14008cbfe9be0df777f8fe98dcee3a53" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ItemRendererOpenGL::setBlendEnabled</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setBlendEnabled</name>
        <qualifiedname>KWin::ItemRendererOpenGL::setBlendEnabled</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="61" column="10" bodyfile="kwin/src/scene/itemrenderer_opengl.cpp" bodystart="74" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_item_renderer_open_g_l_1a4e6448cafc919df34474de2c9c5c0c7e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ItemRendererOpenGL::createRenderNode</definition>
        <argsstring>(Item *item, RenderContext *context)</argsstring>
        <name>createRenderNode</name>
        <qualifiedname>KWin::ItemRendererOpenGL::createRenderNode</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_item" kindref="compound">Item</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="struct_k_win_1_1_item_renderer_open_g_l_1_1_render_context" kindref="compound">RenderContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="62" column="10" bodyfile="kwin/src/scene/itemrenderer_opengl.cpp" bodystart="124" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_item_renderer_open_g_l_1a50157f1c588d459bc3b8779f4207270f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ItemRendererOpenGL::visualizeFractional</definition>
        <argsstring>(const RenderViewport &amp;viewport, const QRegion &amp;region, const RenderContext &amp;renderContext)</argsstring>
        <name>visualizeFractional</name>
        <qualifiedname>KWin::ItemRendererOpenGL::visualizeFractional</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type>const <ref refid="struct_k_win_1_1_item_renderer_open_g_l_1_1_render_context" kindref="compound">RenderContext</ref> &amp;</type>
          <declname>renderContext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemrenderer_opengl.h" line="63" column="10" bodyfile="kwin/src/scene/itemrenderer_opengl.cpp" bodystart="439" bodyend="483"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::ItemRenderer</label>
        <link refid="class_k_win_1_1_item_renderer"/>
      </node>
      <node id="1">
        <label>KWin::ItemRendererOpenGL</label>
        <link refid="class_k_win_1_1_item_renderer_open_g_l"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::ItemRenderer</label>
        <link refid="class_k_win_1_1_item_renderer"/>
      </node>
      <node id="1">
        <label>KWin::ItemRendererOpenGL</label>
        <link refid="class_k_win_1_1_item_renderer_open_g_l"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/src/scene/itemrenderer_opengl.h" line="20" column="1" bodyfile="kwin/src/scene/itemrenderer_opengl.h" bodystart="21" bodyend="74"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1a5d10edf2bc0ab28e73ca023004509b69" prot="public" virt="virtual"><scope>KWin::ItemRendererOpenGL</scope><name>beginFrame</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1ae3533a395f19850aa94fcab0f10d4410" prot="public" virt="virtual"><scope>KWin::ItemRendererOpenGL</scope><name>createImageItem</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1a4e6448cafc919df34474de2c9c5c0c7e" prot="private" virt="non-virtual"><scope>KWin::ItemRendererOpenGL</scope><name>createRenderNode</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1a62ead1a0876cc9f9138c9b38bfa8ccb6" prot="public" virt="virtual"><scope>KWin::ItemRendererOpenGL</scope><name>endFrame</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1a311f75034b4ecbec29bdd8d94966564d" prot="public" virt="non-virtual"><scope>KWin::ItemRendererOpenGL</scope><name>fractionalEnabled</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1ac5bf3ce0eb25f130ce526179ad64f9dd" prot="public" virt="non-virtual"><scope>KWin::ItemRendererOpenGL</scope><name>fractionalShader</name></member>
      <member refid="class_k_win_1_1_item_renderer_1a182039c353b2fd50996bfd675b1d4505" prot="public" virt="non-virtual"><scope>KWin::ItemRendererOpenGL</scope><name>ItemRenderer</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1a3164169528e71ec3b29db94598e2ba0a" prot="public" virt="non-virtual"><scope>KWin::ItemRendererOpenGL</scope><name>ItemRendererOpenGL</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1a6e97f3c9fbf4fd2b7c636e759523a7c6" prot="private" virt="non-virtual"><scope>KWin::ItemRendererOpenGL</scope><name>m_blendingEnabled</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1af195fcf273e67f941ce79b4f83a8a62b" prot="private" virt="non-virtual"><scope>KWin::ItemRendererOpenGL</scope><name>m_debug</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1aa2c49dd84b0dc29f0e190e0d05b692ae" prot="private" virt="non-virtual"><scope>KWin::ItemRendererOpenGL</scope><name>m_eglDisplay</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1ae1722db0ed22297a7642ea5e6664abf4" prot="private" virt="non-virtual"><scope>KWin::ItemRendererOpenGL</scope><name>m_releasePoints</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1a1ebfbe1bbdfa57eea1d6a8a91f2ec43e" prot="private" virt="non-virtual"><scope>KWin::ItemRendererOpenGL</scope><name>modulate</name></member>
      <member refid="class_k_win_1_1_item_renderer_1a5f8dcec538abbaf17788d5ee2a1b61a3" prot="public" virt="virtual"><scope>KWin::ItemRendererOpenGL</scope><name>painter</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1aa40b69432bf90cb33a3e97c280723218" prot="public" virt="virtual"><scope>KWin::ItemRendererOpenGL</scope><name>renderBackground</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1a76daebc154e50910f346e08bfdaf208f" prot="public" virt="virtual"><scope>KWin::ItemRendererOpenGL</scope><name>renderItem</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1a14008cbfe9be0df777f8fe98dcee3a53" prot="private" virt="non-virtual"><scope>KWin::ItemRendererOpenGL</scope><name>setBlendEnabled</name></member>
      <member refid="class_k_win_1_1_item_renderer_open_g_l_1a50157f1c588d459bc3b8779f4207270f" prot="private" virt="non-virtual"><scope>KWin::ItemRendererOpenGL</scope><name>visualizeFractional</name></member>
      <member refid="class_k_win_1_1_item_renderer_1a5c83d09986676fbd687c8df04049860f" prot="public" virt="virtual"><scope>KWin::ItemRendererOpenGL</scope><name>~ItemRenderer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
