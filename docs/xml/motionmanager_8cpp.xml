<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="motionmanager_8cpp" kind="file" language="C++">
    <compoundname>motionmanager.cpp</compoundname>
    <includes refid="motionmanager_8h" local="yes">plugins/slideback/motionmanager.h</includes>
    <incdepgraph>
      <node id="21">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>effect/effect.h</label>
        <link refid="effect_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>effect/effecthandler.h</label>
        <link refid="effecthandler_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>effect/effectwindow.h</label>
        <link refid="effectwindow_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/plugins/slideback/motionmanager.cpp</label>
        <link refid="motionmanager_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>plugins/slideback/motionmanager.h</label>
        <link refid="motionmanager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>KPluginFactory</label>
      </node>
      <node id="15">
        <label>KSharedConfig</label>
      </node>
      <node id="24">
        <label>QByteArray</label>
      </node>
      <node id="7">
        <label>QCoreApplication</label>
      </node>
      <node id="27">
        <label>QDebug</label>
      </node>
      <node id="31">
        <label>QEasingCurve</label>
      </node>
      <node id="35">
        <label>QHash</label>
      </node>
      <node id="32">
        <label>QIcon</label>
      </node>
      <node id="8">
        <label>QImage</label>
      </node>
      <node id="25">
        <label>QList</label>
      </node>
      <node id="36">
        <label>QLoggingCategory</label>
      </node>
      <node id="23">
        <label>QMatrix4x4</label>
      </node>
      <node id="19">
        <label>QObject</label>
      </node>
      <node id="33">
        <label>QPair</label>
      </node>
      <node id="9">
        <label>QPoint</label>
      </node>
      <node id="28">
        <label>QRect</label>
      </node>
      <node id="13">
        <label>QRegion</label>
      </node>
      <node id="34">
        <label>QSet</label>
      </node>
      <node id="26">
        <label>QSize</label>
      </node>
      <node id="37">
        <label>QStack</label>
      </node>
      <node id="29">
        <label>QUuid</label>
      </node>
      <node id="10">
        <label>QVariant</label>
      </node>
      <node id="11">
        <label>QVector2D</label>
      </node>
      <node id="30">
        <label>QWindow</label>
      </node>
      <node id="4">
        <label>config-kwin.h</label>
      </node>
      <node id="38">
        <label>functional</label>
      </node>
      <node id="12">
        <label>kwin_export.h</label>
      </node>
      <node id="22">
        <label>optional</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2006<sp/>Lubos<sp/>Lunak<sp/>&lt;l.lunak@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2009<sp/>Lucas<sp/>Murray<sp/>&lt;lmurray@undefinedfire.com&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2010,<sp/>2011<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="motionmanager_8h" kindref="compound">plugins/slideback/motionmanager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>Motion1D</highlight></codeline>
<codeline lineno="16"><highlight class="comment">***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_k_win_1_1_motion1_d_1afaa8fcc55bb214b8fe8ab9c009e7379a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_motion1_d_1afaa8fcc55bb214b8fe8ab9c009e7379a" kindref="member">Motion1D::Motion1D</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initial,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_motion_1a1308009231c0df372be5d61c7ada9fe9" kindref="member">strength</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_motion_1a15cdf561e0c480b2cdec1457122ffd71" kindref="member">smoothness</ref>)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_motion_1a70f0e4c8029caa7958a6132cfce0f86b" kindref="member">Motion</ref>&lt;double&gt;(initial,<sp/><ref refid="class_k_win_1_1_motion_1a1308009231c0df372be5d61c7ada9fe9" kindref="member">strength</ref>,<sp/><ref refid="class_k_win_1_1_motion_1a15cdf561e0c480b2cdec1457122ffd71" kindref="member">smoothness</ref>)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_k_win_1_1_motion1_d_1a5f85c31cd16621c4a2bb6b3c6799fcce" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_motion1_d_1afaa8fcc55bb214b8fe8ab9c009e7379a" kindref="member">Motion1D::Motion1D</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_motion1_d_1afaa8fcc55bb214b8fe8ab9c009e7379a" kindref="member">Motion1D</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_motion_1a70f0e4c8029caa7958a6132cfce0f86b" kindref="member">Motion</ref>&lt;double&gt;(other)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_k_win_1_1_motion1_d_1a989880dd3b18cfbe16a9066368fed2f7" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_motion1_d_1a989880dd3b18cfbe16a9066368fed2f7" kindref="member">Motion1D::~Motion1D</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>Motion2D</highlight></codeline>
<codeline lineno="34"><highlight class="comment">***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_k_win_1_1_motion2_d_1a1bf3d71be01d5e632f93660727febd1d" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_motion2_d_1a1bf3d71be01d5e632f93660727febd1d" kindref="member">Motion2D::Motion2D</ref>(QPointF<sp/>initial,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_motion_1a1308009231c0df372be5d61c7ada9fe9" kindref="member">strength</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_motion_1a15cdf561e0c480b2cdec1457122ffd71" kindref="member">smoothness</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_motion_1a70f0e4c8029caa7958a6132cfce0f86b" kindref="member">Motion</ref>&lt;QPointF&gt;(initial,<sp/><ref refid="class_k_win_1_1_motion_1a1308009231c0df372be5d61c7ada9fe9" kindref="member">strength</ref>,<sp/><ref refid="class_k_win_1_1_motion_1a15cdf561e0c480b2cdec1457122ffd71" kindref="member">smoothness</ref>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_k_win_1_1_motion2_d_1aa53c08d74dacae123b7da65d625d070e" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_motion2_d_1a1bf3d71be01d5e632f93660727febd1d" kindref="member">Motion2D::Motion2D</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_motion2_d_1a1bf3d71be01d5e632f93660727febd1d" kindref="member">Motion2D</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_motion_1a70f0e4c8029caa7958a6132cfce0f86b" kindref="member">Motion</ref>&lt;QPointF&gt;(other)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_k_win_1_1_motion2_d_1a4f32873057dd5c41167304f35c0c3d41" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_motion2_d_1a4f32873057dd5c41167304f35c0c3d41" kindref="member">Motion2D::~Motion2D</ref>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>WindowMotionManager</highlight></codeline>
<codeline lineno="52"><highlight class="comment">***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_k_win_1_1_window_motion_manager_1a16fd9c1740ea753b35b5c3ecd867d153" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window_motion_manager_1a16fd9c1740ea753b35b5c3ecd867d153" kindref="member">WindowMotionManager::WindowMotionManager</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useGlobalAnimationModifier)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_useGlobalAnimationModifier(useGlobalAnimationModifier)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Allow<sp/>developer<sp/>to<sp/>modify<sp/>motion<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>What<sp/>happens<sp/>when<sp/>the<sp/>window<sp/>moves<sp/>by<sp/>an<sp/>external<sp/>force?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_k_win_1_1_window_motion_manager_1a56800ac9f076bca9e84527f3189aa0ff" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window_motion_manager_1a56800ac9f076bca9e84527f3189aa0ff" kindref="member">WindowMotionManager::~WindowMotionManager</ref>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_k_win_1_1_window_motion_manager_1a430d3fa789182b3683ad709d63ee8aad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_motion_manager_1a430d3fa789182b3683ad709d63ee8aad" kindref="member">WindowMotionManager::manage</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_managedWindows.contains(w))<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>strength<sp/>=<sp/>0.12;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>smoothness<sp/>=<sp/>4.0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_useGlobalAnimationModifier<sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;animationTimeFactor())<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>factor<sp/>is<sp/>==<sp/>0<sp/>then<sp/>we<sp/>just<sp/>skip<sp/>the<sp/>calculation<sp/>completely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strength<sp/>=<sp/>0.12<sp/>/<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;animationTimeFactor();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smoothness<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;animationTimeFactor()<sp/>*<sp/>4.0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>WindowMotion<sp/>&amp;motion<sp/>=<sp/>m_managedWindows[w];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>motion.translation.<ref refid="class_k_win_1_1_motion_1a720043fc8da7a74b4662dd63d91272b6" kindref="member">setStrength</ref>(strength);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>motion.translation.<ref refid="class_k_win_1_1_motion_1a49168bb8d075cb804a402fb9f1fa3e94" kindref="member">setSmoothness</ref>(smoothness);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>motion.scale.<ref refid="class_k_win_1_1_motion_1a720043fc8da7a74b4662dd63d91272b6" kindref="member">setStrength</ref>(strength<sp/>*<sp/>1.33);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>motion.scale.<ref refid="class_k_win_1_1_motion_1a49168bb8d075cb804a402fb9f1fa3e94" kindref="member">setSmoothness</ref>(smoothness<sp/>/<sp/>2.0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>motion.translation.<ref refid="class_k_win_1_1_motion_1a9d6baf928fd5da675b4448aea0d81f8c" kindref="member">setValue</ref>(w-&gt;<ref refid="class_k_win_1_1_effect_window_1a33bb014b90ec9da18fa7259b44a98d27" kindref="member">pos</ref>());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>motion.scale.<ref refid="class_k_win_1_1_motion_1a9d6baf928fd5da675b4448aea0d81f8c" kindref="member">setValue</ref>(QPointF(1.0,<sp/>1.0));</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_k_win_1_1_window_motion_manager_1a2075a34b4d2ccb85bcf89d50b5eb6167" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_motion_manager_1a2075a34b4d2ccb85bcf89d50b5eb6167" kindref="member">WindowMotionManager::unmanage</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>m_movingWindowsSet.remove(w);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>m_managedWindows.remove(w);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_k_win_1_1_window_motion_manager_1a2d51b7695ffc094857902fc60912a943" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_motion_manager_1a2d51b7695ffc094857902fc60912a943" kindref="member">WindowMotionManager::unmanageAll</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>m_managedWindows.clear();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>m_movingWindowsSet.clear();</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_k_win_1_1_window_motion_manager_1a0ce73ac2c6604049200b7b567e3acd24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_motion_manager_1a0ce73ac2c6604049200b7b567e3acd24" kindref="member">WindowMotionManager::calculate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;animationTimeFactor())<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>skip<sp/>it<sp/>completely<sp/>if<sp/>the<sp/>user<sp/>wants<sp/>no<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_movingWindowsSet.clear();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QHash&lt;EffectWindow<sp/>*,<sp/>WindowMotion&gt;::iterator<sp/>it<sp/>=<sp/>m_managedWindows.begin();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>it<sp/>!=<sp/>m_managedWindows.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowMotion<sp/>*motion<sp/>=<sp/>&amp;it.value();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motion-&gt;translation.<ref refid="class_k_win_1_1_motion_1ac8360cd4c17451831a10b335ae9c5d6c" kindref="member">finish</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motion-&gt;scale.<ref refid="class_k_win_1_1_motion_1ac8360cd4c17451831a10b335ae9c5d6c" kindref="member">finish</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;EffectWindow<sp/>*,<sp/>WindowMotion&gt;::iterator<sp/>it<sp/>=<sp/>m_managedWindows.begin();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>it<sp/>!=<sp/>m_managedWindows.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowMotion<sp/>*motion<sp/>=<sp/>&amp;it.value();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stopped<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>What<sp/>happens<sp/>when<sp/>distance()<sp/>==<sp/>0<sp/>but<sp/>we<sp/>are<sp/>still<sp/>moving<sp/>fast?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Motion<sp/>needs<sp/>to<sp/>be<sp/>calculated<sp/>from<sp/>the<sp/>window&apos;s<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_motion2_d" kindref="compound">Motion2D</ref><sp/>*trans<sp/>=<sp/>&amp;motion-&gt;translation;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trans-&gt;<ref refid="class_k_win_1_1_motion_1ae5cd777467a0aafb3d9012d94c39d58b" kindref="member">distance</ref>().isNull())<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++stopped;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Still<sp/>moving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trans-&gt;<ref refid="class_k_win_1_1_motion_1a68ee12748639bed87973b0c885a56b03" kindref="member">calculate</ref>(time);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>fx<sp/>=<sp/>trans-&gt;<ref refid="class_k_win_1_1_motion_1a700a15033b3ce6aac241f8aa54e08051" kindref="member">target</ref>().x()<sp/>&lt;=<sp/>trans-&gt;<ref refid="class_k_win_1_1_motion_1ae2f4e34905373002751ea3ed1f2dc17e" kindref="member">startValue</ref>().x()<sp/>?<sp/>-1<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>fy<sp/>=<sp/>trans-&gt;<ref refid="class_k_win_1_1_motion_1a700a15033b3ce6aac241f8aa54e08051" kindref="member">target</ref>().y()<sp/>&lt;=<sp/>trans-&gt;<ref refid="class_k_win_1_1_motion_1ae2f4e34905373002751ea3ed1f2dc17e" kindref="member">startValue</ref>().y()<sp/>?<sp/>-1<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trans-&gt;<ref refid="class_k_win_1_1_motion_1ae5cd777467a0aafb3d9012d94c39d58b" kindref="member">distance</ref>().x()<sp/>*<sp/>fx<sp/>/<sp/>0.5<sp/>&lt;<sp/>1.0<sp/>&amp;&amp;<sp/>trans-&gt;<ref refid="class_k_win_1_1_motion_1a1df2f2dc1d491da040a7e3f2a0f545df" kindref="member">velocity</ref>().x()<sp/>*<sp/>fx<sp/>/<sp/>0.2<sp/>&lt;<sp/>1.0</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>trans-&gt;<ref refid="class_k_win_1_1_motion_1ae5cd777467a0aafb3d9012d94c39d58b" kindref="member">distance</ref>().y()<sp/>*<sp/>fy<sp/>/<sp/>0.5<sp/>&lt;<sp/>1.0<sp/>&amp;&amp;<sp/>trans-&gt;<ref refid="class_k_win_1_1_motion_1a1df2f2dc1d491da040a7e3f2a0f545df" kindref="member">velocity</ref>().y()<sp/>*<sp/>fy<sp/>/<sp/>0.2<sp/>&lt;<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hide<sp/>tiny<sp/>oscillations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motion-&gt;translation.<ref refid="class_k_win_1_1_motion_1ac8360cd4c17451831a10b335ae9c5d6c" kindref="member">finish</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++stopped;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_motion2_d" kindref="compound">Motion2D</ref><sp/>*scale<sp/>=<sp/>&amp;motion-&gt;scale;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale-&gt;<ref refid="class_k_win_1_1_motion_1ae5cd777467a0aafb3d9012d94c39d58b" kindref="member">distance</ref>().isNull())<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++stopped;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Still<sp/>scaling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale-&gt;<ref refid="class_k_win_1_1_motion_1a68ee12748639bed87973b0c885a56b03" kindref="member">calculate</ref>(time);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>fx<sp/>=<sp/>scale-&gt;<ref refid="class_k_win_1_1_motion_1a700a15033b3ce6aac241f8aa54e08051" kindref="member">target</ref>().x()<sp/>&lt;<sp/>1.0<sp/>?<sp/>-1<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>fy<sp/>=<sp/>scale-&gt;<ref refid="class_k_win_1_1_motion_1a700a15033b3ce6aac241f8aa54e08051" kindref="member">target</ref>().y()<sp/>&lt;<sp/>1.0<sp/>?<sp/>-1<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale-&gt;<ref refid="class_k_win_1_1_motion_1ae5cd777467a0aafb3d9012d94c39d58b" kindref="member">distance</ref>().x()<sp/>*<sp/>fx<sp/>/<sp/>0.001<sp/>&lt;<sp/>1.0<sp/>&amp;&amp;<sp/>scale-&gt;<ref refid="class_k_win_1_1_motion_1a1df2f2dc1d491da040a7e3f2a0f545df" kindref="member">velocity</ref>().x()<sp/>*<sp/>fx<sp/>/<sp/>0.05<sp/>&lt;<sp/>1.0</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>scale-&gt;<ref refid="class_k_win_1_1_motion_1ae5cd777467a0aafb3d9012d94c39d58b" kindref="member">distance</ref>().y()<sp/>*<sp/>fy<sp/>/<sp/>0.001<sp/>&lt;<sp/>1.0<sp/>&amp;&amp;<sp/>scale-&gt;<ref refid="class_k_win_1_1_motion_1a1df2f2dc1d491da040a7e3f2a0f545df" kindref="member">velocity</ref>().y()<sp/>*<sp/>fy<sp/>/<sp/>0.05<sp/>&lt;<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hide<sp/>tiny<sp/>oscillations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motion-&gt;scale.<ref refid="class_k_win_1_1_motion_1ac8360cd4c17451831a10b335ae9c5d6c" kindref="member">finish</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++stopped;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>just<sp/>finished<sp/>this<sp/>window&apos;s<sp/>motion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopped<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_movingWindowsSet.remove(it.key());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="class_k_win_1_1_window_motion_manager_1a9fd450d2edbe345708ebcef3405c7835" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_motion_manager_1a9fd450d2edbe345708ebcef3405c7835" kindref="member">WindowMotionManager::reset</ref>()</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;EffectWindow<sp/>*,<sp/>WindowMotion&gt;::iterator<sp/>it<sp/>=<sp/>m_managedWindows.begin();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>it<sp/>!=<sp/>m_managedWindows.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowMotion<sp/>*motion<sp/>=<sp/>&amp;it.value();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*window<sp/>=<sp/>it.key();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motion-&gt;translation.<ref refid="class_k_win_1_1_motion_1a35c6c013407155f74dbf6477b99bcb46" kindref="member">setTarget</ref>(window-&gt;<ref refid="class_k_win_1_1_effect_window_1a33bb014b90ec9da18fa7259b44a98d27" kindref="member">pos</ref>());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motion-&gt;translation.<ref refid="class_k_win_1_1_motion_1ac8360cd4c17451831a10b335ae9c5d6c" kindref="member">finish</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motion-&gt;scale.<ref refid="class_k_win_1_1_motion_1a35c6c013407155f74dbf6477b99bcb46" kindref="member">setTarget</ref>(QPointF(1.0,<sp/>1.0));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motion-&gt;scale.<ref refid="class_k_win_1_1_motion_1ac8360cd4c17451831a10b335ae9c5d6c" kindref="member">finish</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="class_k_win_1_1_window_motion_manager_1ab2c88e872d710e2e5797c345fdc09259" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_motion_manager_1a9fd450d2edbe345708ebcef3405c7835" kindref="member">WindowMotionManager::reset</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;EffectWindow<sp/>*,<sp/>WindowMotion&gt;::iterator<sp/>it<sp/>=<sp/>m_managedWindows.find(w);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>m_managedWindows.end())<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>WindowMotion<sp/>*motion<sp/>=<sp/>&amp;it.value();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>motion-&gt;translation.<ref refid="class_k_win_1_1_motion_1a35c6c013407155f74dbf6477b99bcb46" kindref="member">setTarget</ref>(w-&gt;<ref refid="class_k_win_1_1_effect_window_1a33bb014b90ec9da18fa7259b44a98d27" kindref="member">pos</ref>());</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>motion-&gt;translation.<ref refid="class_k_win_1_1_motion_1ac8360cd4c17451831a10b335ae9c5d6c" kindref="member">finish</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>motion-&gt;scale.<ref refid="class_k_win_1_1_motion_1a35c6c013407155f74dbf6477b99bcb46" kindref="member">setTarget</ref>(QPointF(1.0,<sp/>1.0));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>motion-&gt;scale.<ref refid="class_k_win_1_1_motion_1ac8360cd4c17451831a10b335ae9c5d6c" kindref="member">finish</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_k_win_1_1_window_motion_manager_1a94c581e7ac7746410b5d34f626b1acc3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_motion_manager_1a94c581e7ac7746410b5d34f626b1acc3" kindref="member">WindowMotionManager::apply</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/><ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref><sp/>&amp;data)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;EffectWindow<sp/>*,<sp/>WindowMotion&gt;::iterator<sp/>it<sp/>=<sp/>m_managedWindows.find(w);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>m_managedWindows.end())<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Take<sp/>into<sp/>account<sp/>existing<sp/>scale<sp/>so<sp/>that<sp/>we<sp/>can<sp/>work<sp/>with<sp/>multiple<sp/>managers<sp/>(E.g.<sp/>Present<sp/>windows<sp/>+<sp/>grid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>WindowMotion<sp/>*motion<sp/>=<sp/>&amp;it.value();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>+=<sp/>(motion-&gt;translation.<ref refid="class_k_win_1_1_motion_1a831ff809a6648091fa19818ac732a168" kindref="member">value</ref>()<sp/>-<sp/>QPointF(w-&gt;<ref refid="class_k_win_1_1_effect_window_1aac1f4a263e23a9ddcbb6e14f325923b9" kindref="member">x</ref>(),<sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1aca622a1be68a6c6e02290b6b3e8d2f54" kindref="member">y</ref>()));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>*=<sp/>QVector2D(motion-&gt;scale.<ref refid="class_k_win_1_1_motion_1a831ff809a6648091fa19818ac732a168" kindref="member">value</ref>());</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="class_k_win_1_1_window_motion_manager_1ab47386e107ba762cc9b67b77fe11984e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_motion_manager_1ab47386e107ba762cc9b67b77fe11984e" kindref="member">WindowMotionManager::moveWindow</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/>QPoint<sp/>target,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yScale)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;EffectWindow<sp/>*,<sp/>WindowMotion&gt;::iterator<sp/>it<sp/>=<sp/>m_managedWindows.find(w);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(it<sp/>!=<sp/>m_managedWindows.end());<sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>the<sp/>effect<sp/>author<sp/>that<sp/>they<sp/>did<sp/>something<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>WindowMotion<sp/>*motion<sp/>=<sp/>&amp;it.value();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yScale<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yScale<sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>scalePoint(scale,<sp/>yScale);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(motion-&gt;translation.<ref refid="class_k_win_1_1_motion_1a831ff809a6648091fa19818ac732a168" kindref="member">value</ref>()<sp/>==<sp/>target<sp/>&amp;&amp;<sp/>motion-&gt;scale.<ref refid="class_k_win_1_1_motion_1a831ff809a6648091fa19818ac732a168" kindref="member">value</ref>()<sp/>==<sp/>scalePoint)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Window<sp/>already<sp/>at<sp/>that<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>motion-&gt;translation.<ref refid="class_k_win_1_1_motion_1a35c6c013407155f74dbf6477b99bcb46" kindref="member">setTarget</ref>(target);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>motion-&gt;scale.<ref refid="class_k_win_1_1_motion_1a35c6c013407155f74dbf6477b99bcb46" kindref="member">setTarget</ref>(scalePoint);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>m_movingWindowsSet<sp/>&lt;&lt;<sp/>w;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="class_k_win_1_1_window_motion_manager_1acf7afde36dac4357ddd68d23d8f6791e" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_window_motion_manager_1acf7afde36dac4357ddd68d23d8f6791e" kindref="member">WindowMotionManager::transformedGeometry</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="224"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;EffectWindow<sp/>*,<sp/>WindowMotion&gt;::const_iterator<sp/>it<sp/>=<sp/>m_managedWindows.constFind(w);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>m_managedWindows.end())<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WindowMotion<sp/>*motion<sp/>=<sp/>&amp;it.value();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>geometry(w-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>());</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Take<sp/>into<sp/>account<sp/>existing<sp/>scale<sp/>so<sp/>that<sp/>we<sp/>can<sp/>work<sp/>with<sp/>multiple<sp/>managers<sp/>(E.g.<sp/>Present<sp/>windows<sp/>+<sp/>grid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry.moveTo(motion-&gt;translation.<ref refid="class_k_win_1_1_motion_1a831ff809a6648091fa19818ac732a168" kindref="member">value</ref>());</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry.setWidth(geometry.width()<sp/>*<sp/>motion-&gt;scale.<ref refid="class_k_win_1_1_motion_1a831ff809a6648091fa19818ac732a168" kindref="member">value</ref>().x());</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry.setHeight(geometry.height()<sp/>*<sp/>motion-&gt;scale.<ref refid="class_k_win_1_1_motion_1a831ff809a6648091fa19818ac732a168" kindref="member">value</ref>().y());</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>geometry;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="class_k_win_1_1_window_motion_manager_1afd87d0c0333e33b1c230cda32957c36b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_motion_manager_1afd87d0c0333e33b1c230cda32957c36b" kindref="member">WindowMotionManager::setTransformedGeometry</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;geometry)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;EffectWindow<sp/>*,<sp/>WindowMotion&gt;::iterator<sp/>it<sp/>=<sp/>m_managedWindows.find(w);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>m_managedWindows.end())<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>WindowMotion<sp/>*motion<sp/>=<sp/>&amp;it.value();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>motion-&gt;translation.<ref refid="class_k_win_1_1_motion_1a9d6baf928fd5da675b4448aea0d81f8c" kindref="member">setValue</ref>(geometry.topLeft());</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>motion-&gt;scale.<ref refid="class_k_win_1_1_motion_1a9d6baf928fd5da675b4448aea0d81f8c" kindref="member">setValue</ref>(QPointF(geometry.width()<sp/>/<sp/>qreal(w-&gt;<ref refid="class_k_win_1_1_effect_window_1ac402e4ce70089b1478511e451c4a2623" kindref="member">width</ref>()),<sp/>geometry.height()<sp/>/<sp/>qreal(w-&gt;<ref refid="class_k_win_1_1_effect_window_1a12d7c8207faa0369e920652ee2e25bfc" kindref="member">height</ref>())));</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="class_k_win_1_1_window_motion_manager_1a478bb1ce7e3fe0280222a25512f64787" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_window_motion_manager_1a478bb1ce7e3fe0280222a25512f64787" kindref="member">WindowMotionManager::targetGeometry</ref>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="253"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;EffectWindow<sp/>*,<sp/>WindowMotion&gt;::const_iterator<sp/>it<sp/>=<sp/>m_managedWindows.constFind(w);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>m_managedWindows.end())<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WindowMotion<sp/>*motion<sp/>=<sp/>&amp;it.value();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>geometry(w-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>());</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Take<sp/>into<sp/>account<sp/>existing<sp/>scale<sp/>so<sp/>that<sp/>we<sp/>can<sp/>work<sp/>with<sp/>multiple<sp/>managers<sp/>(E.g.<sp/>Present<sp/>windows<sp/>+<sp/>grid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry.moveTo(motion-&gt;translation.<ref refid="class_k_win_1_1_motion_1a700a15033b3ce6aac241f8aa54e08051" kindref="member">target</ref>());</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry.setWidth(geometry.width()<sp/>*<sp/>motion-&gt;scale.<ref refid="class_k_win_1_1_motion_1a700a15033b3ce6aac241f8aa54e08051" kindref="member">target</ref>().x());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry.setHeight(geometry.height()<sp/>*<sp/>motion-&gt;scale.<ref refid="class_k_win_1_1_motion_1a700a15033b3ce6aac241f8aa54e08051" kindref="member">target</ref>().y());</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>geometry;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="class_k_win_1_1_window_motion_manager_1a10bb546a230f0617aa053d3d6b647d13" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*<ref refid="class_k_win_1_1_window_motion_manager_1a10bb546a230f0617aa053d3d6b647d13" kindref="member">WindowMotionManager::windowAtPoint</ref>(QPoint<sp/>point,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useStackingOrder)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="271"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Stacking<sp/>order<sp/>uses<sp/>EffectsHandler::stackingOrder()<sp/>then<sp/>filters<sp/>by<sp/>m_managedWindows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;EffectWindow<sp/>*,<sp/>WindowMotion&gt;::ConstIterator<sp/>it<sp/>=<sp/>m_managedWindows.constBegin();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>m_managedWindows.constEnd())<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exclusiveContains(<ref refid="class_k_win_1_1_window_motion_manager_1acf7afde36dac4357ddd68d23d8f6791e" kindref="member">transformedGeometry</ref>(it.key()),<sp/>point))<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it.key();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/plugins/slideback/motionmanager.cpp"/>
  </compounddef>
</doxygen>
