<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_server_side_decoration_interface" kind="class" language="C++" prot="public">
    <compoundname>KWin::ServerSideDecorationInterface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="server__decoration_8h" local="no">server_decoration.h</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_k_win_1_1_server_side_decoration_interface_1a39dfb555be6ae86281203638c20d33cc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class ServerSideDecorationManagerInterfacePrivate</definition>
        <argsstring></argsstring>
        <name>ServerSideDecorationManagerInterfacePrivate</name>
        <qualifiedname>KWin::ServerSideDecorationInterface::ServerSideDecorationManagerInterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_server_side_decoration_manager_interface_private" kindref="compound">ServerSideDecorationManagerInterfacePrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration.h" line="124" column="18" bodyfile="kwin/src/wayland/server_decoration.h" bodystart="124" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_server_side_decoration_interface_1af28c4fa7b2d7ea3058cd835c8a6f362e" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_server_side_decoration_interface_private" kindref="compound">ServerSideDecorationInterfacePrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ServerSideDecorationInterfacePrivate&gt; KWin::ServerSideDecorationInterface::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::ServerSideDecorationInterface::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration.h" line="126" column="21" bodyfile="kwin/src/wayland/server_decoration.h" bodystart="126" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_server_side_decoration_interface_1a8e5869b2c6178a2a3131412458258e83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ServerSideDecorationInterface::~ServerSideDecorationInterface</definition>
        <argsstring>() override</argsstring>
        <name>~ServerSideDecorationInterface</name>
        <qualifiedname>KWin::ServerSideDecorationInterface::~ServerSideDecorationInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration.h" line="83" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_server_side_decoration_interface_1a507ebbb39d7949a64c82a6e31bd73e03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ServerSideDecorationInterface::setMode</definition>
        <argsstring>(ServerSideDecorationManagerInterface::Mode mode)</argsstring>
        <name>setMode</name>
        <qualifiedname>KWin::ServerSideDecorationInterface::setMode</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_server_side_decoration_manager_interface_1ae26c5e1140d632fc583126a157ba8947" kindref="member">ServerSideDecorationManagerInterface::Mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the <computeroutput>mode</computeroutput> on the <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref>. A client might refuse the provided <computeroutput>mode</computeroutput>, in that case modeRequested will be emitted. <simplesect kind="see"><para><ref refid="class_k_win_1_1_server_side_decoration_interface_1a0ea2db233343efb55dc04a609adf538a" kindref="member">mode</ref> </para>
</simplesect>
<simplesect kind="see"><para>modeRequested </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration.h" line="91" column="10" bodyfile="kwin/src/wayland/server_decoration.cpp" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_server_side_decoration_interface_1a0ea2db233343efb55dc04a609adf538a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_server_side_decoration_manager_interface_1ae26c5e1140d632fc583126a157ba8947" kindref="member">ServerSideDecorationManagerInterface::Mode</ref></type>
        <definition>ServerSideDecorationManagerInterface::Mode KWin::ServerSideDecorationInterface::mode</definition>
        <argsstring>() const</argsstring>
        <name>mode</name>
        <qualifiedname>KWin::ServerSideDecorationInterface::mode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the currently set mode, not the requested mode. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_server_side_decoration_interface_1a507ebbb39d7949a64c82a6e31bd73e03" kindref="member">setMode</ref> </para>
</simplesect>
<simplesect kind="see"><para>modeRequested </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration.h" line="97" column="48" bodyfile="kwin/src/wayland/server_decoration.cpp" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_server_side_decoration_interface_1aa06b695faceca5f7f0db6e9e9ebeb6c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_server_side_decoration_manager_interface_1ae26c5e1140d632fc583126a157ba8947" kindref="member">ServerSideDecorationManagerInterface::Mode</ref></type>
        <definition>ServerSideDecorationManagerInterface::Mode KWin::ServerSideDecorationInterface::preferredMode</definition>
        <argsstring>() const</argsstring>
        <name>preferredMode</name>
        <qualifiedname>KWin::ServerSideDecorationInterface::preferredMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the preferred decoration mode as specified by the client. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration.h" line="101" column="48" bodyfile="kwin/src/wayland/server_decoration.cpp" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_server_side_decoration_interface_1ae8bed07cee0bbe709861d475e5d516be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
        <definition>SurfaceInterface * KWin::ServerSideDecorationInterface::surface</definition>
        <argsstring>() const</argsstring>
        <name>surface</name>
        <qualifiedname>KWin::ServerSideDecorationInterface::surface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> this <ref refid="class_k_win_1_1_server_side_decoration_interface" kindref="compound">ServerSideDecorationInterface</ref> references. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration.h" line="106" column="22" bodyfile="kwin/src/wayland/server_decoration.cpp" bodystart="224" bodyend="227"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_server_side_decoration_interface_1a02a899f10cd91dda104f5eb774c16805" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_server_side_decoration_interface" kindref="compound">ServerSideDecorationInterface</ref> *</type>
        <definition>ServerSideDecorationInterface * KWin::ServerSideDecorationInterface::get</definition>
        <argsstring>(SurfaceInterface *surface)</argsstring>
        <name>get</name>
        <qualifiedname>KWin::ServerSideDecorationInterface::get</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="class_k_win_1_1_server_side_decoration_interface" kindref="compound">ServerSideDecorationInterface</ref> for the given <computeroutput>surface</computeroutput>, <computeroutput>nullptr</computeroutput> if there is none. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration.h" line="111" column="42" bodyfile="kwin/src/wayland/server_decoration.cpp" bodystart="229" bodyend="232"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_server_side_decoration_interface_1a92bbc67134fd8c651149ace25fcf993a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ServerSideDecorationInterface::preferredModeChanged</definition>
        <argsstring>()</argsstring>
        <name>preferredModeChanged</name>
        <qualifiedname>KWin::ServerSideDecorationInterface::preferredModeChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The client requested the provided mode. The server needs to acknowledge the requested mode by setting it through setMode. <simplesect kind="see"><para><ref refid="class_k_win_1_1_server_side_decoration_interface_1a507ebbb39d7949a64c82a6e31bd73e03" kindref="member">setMode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_server_side_decoration_interface_1a0ea2db233343efb55dc04a609adf538a" kindref="member">mode</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration.h" line="120" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_server_side_decoration_interface_1afdddb902bcc5aa392ae3c581bd38dd0b" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ServerSideDecorationInterface::ServerSideDecorationInterface</definition>
        <argsstring>(ServerSideDecorationManagerInterface *manager, SurfaceInterface *surface, wl_resource *resource)</argsstring>
        <name>ServerSideDecorationInterface</name>
        <qualifiedname>KWin::ServerSideDecorationInterface::ServerSideDecorationInterface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_server_side_decoration_manager_interface" kindref="compound">ServerSideDecorationManagerInterface</ref> *</type>
          <declname>manager</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration.h" line="123" column="14" bodyfile="kwin/src/wayland/server_decoration.cpp" bodystart="201" bodyend="205"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Representing how a <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> should be decorated. </para>
    </briefdescription>
    <detaileddescription>
<para>Created by <ref refid="class_k_win_1_1_server_side_decoration_manager_interface" kindref="compound">ServerSideDecorationManagerInterface</ref> and emitted with decorationCreated signal. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::ServerSideDecorationInterface</label>
        <link refid="class_k_win_1_1_server_side_decoration_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::ServerSideDecorationInterface</label>
        <link refid="class_k_win_1_1_server_side_decoration_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/server_decoration.h" line="79" column="1" bodyfile="kwin/src/wayland/server_decoration.h" bodystart="80" bodyend="127"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_server_side_decoration_interface_1af28c4fa7b2d7ea3058cd835c8a6f362e" prot="private" virt="non-virtual"><scope>KWin::ServerSideDecorationInterface</scope><name>d</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_interface_1a02a899f10cd91dda104f5eb774c16805" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationInterface</scope><name>get</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_interface_1a0ea2db233343efb55dc04a609adf538a" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationInterface</scope><name>mode</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_interface_1aa06b695faceca5f7f0db6e9e9ebeb6c0" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationInterface</scope><name>preferredMode</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_interface_1a92bbc67134fd8c651149ace25fcf993a" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationInterface</scope><name>preferredModeChanged</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_interface_1afdddb902bcc5aa392ae3c581bd38dd0b" prot="private" virt="non-virtual"><scope>KWin::ServerSideDecorationInterface</scope><name>ServerSideDecorationInterface</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_interface_1a39dfb555be6ae86281203638c20d33cc" prot="private" virt="non-virtual"><scope>KWin::ServerSideDecorationInterface</scope><name>ServerSideDecorationManagerInterfacePrivate</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_interface_1a507ebbb39d7949a64c82a6e31bd73e03" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationInterface</scope><name>setMode</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_interface_1ae8bed07cee0bbe709861d475e5d516be" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationInterface</scope><name>surface</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_interface_1a8e5869b2c6178a2a3131412458258e83" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationInterface</scope><name>~ServerSideDecorationInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
