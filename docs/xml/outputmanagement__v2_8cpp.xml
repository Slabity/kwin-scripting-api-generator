<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="outputmanagement__v2_8cpp" kind="file" language="C++">
    <compoundname>outputmanagement_v2.cpp</compoundname>
    <includes refid="outputmanagement__v2_8h" local="yes">outputmanagement_v2.h</includes>
    <includes refid="iccprofile_8h" local="yes">core/iccprofile.h</includes>
    <includes refid="outputbackend_8h" local="yes">core/outputbackend.h</includes>
    <includes refid="outputconfiguration_8h" local="yes">core/outputconfiguration.h</includes>
    <includes refid="display_8h" local="yes">display.h</includes>
    <includes local="yes">main.h</includes>
    <includes refid="outputdevice__v2_8h" local="yes">outputdevice_v2.h</includes>
    <includes refid="common_8h" local="yes">utils/common.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes local="yes">qwayland-server-kde-output-management-v2.h</includes>
    <includes local="no">KLocalizedString</includes>
    <includes local="no">cmath</includes>
    <includes local="no">optional</includes>
    <includes local="yes">outputmanagement_v2.moc</includes>
    <includes local="yes">moc_outputmanagement_v2.cpp</includes>
    <incdepgraph>
      <node id="8">
        <label>colorlut3d.h</label>
        <link refid="colorlut3d_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>core/colorpipeline.h</label>
        <link refid="colorpipeline_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>colortransformation.h</label>
        <link refid="colortransformation_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>core/iccprofile.h</label>
        <link refid="iccprofile_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>core/outputbackend.h</label>
        <link refid="outputbackend_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>core/outputconfiguration.h</label>
        <link refid="outputconfiguration_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>display.h</label>
        <link refid="display_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>outputdevice_v2.h</label>
        <link refid="outputdevice__v2_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/outputmanagement_v2.cpp</label>
        <link refid="outputmanagement__v2_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>outputmanagement_v2.h</label>
        <link refid="outputmanagement__v2_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>KConfigGroup</label>
      </node>
      <node id="52">
        <label>KConfigWatcher</label>
      </node>
      <node id="63">
        <label>KLocalizedString</label>
      </node>
      <node id="48">
        <label>KSharedConfig</label>
      </node>
      <node id="49">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="50">
        <label>QApplication</label>
      </node>
      <node id="32">
        <label>QByteArray</label>
      </node>
      <node id="23">
        <label>QCoreApplication</label>
      </node>
      <node id="54">
        <label>QDBusContext</label>
      </node>
      <node id="55">
        <label>QDataStream</label>
      </node>
      <node id="35">
        <label>QDebug</label>
      </node>
      <node id="24">
        <label>QImage</label>
      </node>
      <node id="33">
        <label>QList</label>
      </node>
      <node id="43">
        <label>QLoggingCategory</label>
      </node>
      <node id="12">
        <label>QMatrix4x4</label>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="25">
        <label>QPoint</label>
      </node>
      <node id="56">
        <label>QPointer</label>
      </node>
      <node id="51">
        <label>QProcessEnvironment</label>
      </node>
      <node id="36">
        <label>QRect</label>
      </node>
      <node id="34">
        <label>QSize</label>
      </node>
      <node id="18">
        <label>QString</label>
      </node>
      <node id="57">
        <label>QStringList</label>
      </node>
      <node id="58">
        <label>QTimer</label>
      </node>
      <node id="37">
        <label>QUuid</label>
      </node>
      <node id="26">
        <label>QVariant</label>
      </node>
      <node id="9">
        <label>QVector</label>
      </node>
      <node id="13">
        <label>QVector2D</label>
      </node>
      <node id="44">
        <label>climits</label>
      </node>
      <node id="64">
        <label>cmath</label>
      </node>
      <node id="22">
        <label>config-kwin.h</label>
      </node>
      <node id="27">
        <label>epoxy/egl.h</label>
      </node>
      <node id="19">
        <label>expected</label>
      </node>
      <node id="61">
        <label>functional</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
      <node id="39">
        <label>main.h</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="66">
        <label>moc_outputmanagement_v2.cpp</label>
      </node>
      <node id="60">
        <label>netwm_def.h</label>
      </node>
      <node id="11">
        <label>optional</label>
      </node>
      <node id="65">
        <label>outputmanagement_v2.moc</label>
      </node>
      <node id="62">
        <label>qwayland-server-kde-output-management-v2.h</label>
      </node>
      <node id="15">
        <label>stdint.h</label>
      </node>
      <node id="16">
        <label>tuple</label>
      </node>
      <node id="17">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_k_win_1_1_output_management_v2_interface_private" prot="public">KWin::OutputManagementV2InterfacePrivate</innerclass>
    <innerclass refid="class_k_win_1_1_output_configuration_v2_interface" prot="public">KWin::OutputConfigurationV2Interface</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2014<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2015<sp/>Sebastian<sp/>Kügler<sp/>&lt;sebas@kde.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputmanagement__v2_8h" kindref="compound">outputmanagement_v2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="iccprofile_8h" kindref="compound">core/iccprofile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputbackend_8h" kindref="compound">core/outputbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputconfiguration_8h" kindref="compound">core/outputconfiguration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;main.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputdevice__v2_8h" kindref="compound">outputdevice_v2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputmanagement__v2_8h" kindref="compound">outputmanagement_v2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">utils/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-server-kde-output-management-v2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KLocalizedString&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>s_version<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_k_win_1_1_output_management_v2_interface_private" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_output_management_v2_interface_private_1a1ff8d0619b96d85641ea97a896f9c0df" kindref="member">OutputManagementV2InterfacePrivate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWaylandServer::kde_output_management_v2</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_management_v2_interface_private_1a1ff8d0619b96d85641ea97a896f9c0df" kindref="member">OutputManagementV2InterfacePrivate</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_management_v2_interface_private_1ae43528db60f968d10c543d625b8233e6" kindref="member">kde_output_management_v2_create_configuration</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_k_win_1_1_output_configuration_v2_interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a967f1550fe0d907a83ce393e002e6ba6" kindref="member">OutputConfigurationV2Interface</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/>QtWaylandServer::kde_output_configuration_v2</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a967f1550fe0d907a83ce393e002e6ba6" kindref="member">OutputConfigurationV2Interface</ref>(wl_resource<sp/>*resource);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_k_win_1_1_output_configuration_v2_interface_1ab2ef3469c2bdf975343e33b2f3b25fbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ab2ef3469c2bdf975343e33b2f3b25fbd" kindref="member">applied</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45" refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46" refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>;</highlight></codeline>
<codeline lineno="47" refid="class_k_win_1_1_output_configuration_v2_interface_1af9163503a4e04ad64d0b4cc746fe8e9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;std::pair&lt;uint32_t,<sp/>OutputDeviceV2Interface<sp/>*&gt;&gt;<sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af9163503a4e04ad64d0b4cc746fe8e9c" kindref="member">outputOrder</ref>;</highlight></codeline>
<codeline lineno="48" refid="class_k_win_1_1_output_configuration_v2_interface_1ac9c10f5c025b8cdbb0cfe1e3d7ba8b90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ac9c10f5c025b8cdbb0cfe1e3d7ba8b90" kindref="member">failureReason</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af876bbbf36ea878173ebf0bc81ddd34f" kindref="member">kde_output_configuration_v2_enable</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>int32_t<sp/>enable)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a067ecb93bd7d04057f4b0ba202664ba3" kindref="member">kde_output_configuration_v2_mode</ref>(Resource<sp/>*resource,<sp/>struct<sp/>::wl_resource<sp/>*outputdevice,<sp/>struct<sp/>::wl_resource<sp/>*mode)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a77a5e803a00df1c1492c35146be45cce" kindref="member">kde_output_configuration_v2_transform</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>int32_t<sp/>transform)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a09ea0d2efa0de6f1d23d0d683895f30c" kindref="member">kde_output_configuration_v2_position</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a21ab901761068f73d5f7e5e37acba15b" kindref="member">kde_output_configuration_v2_scale</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>wl_fixed_t<sp/>scale)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ac6fea38bd8c0f349459b82e45fe62295" kindref="member">kde_output_configuration_v2_apply</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a15c8dc25525a9d810b268abcd200af43" kindref="member">kde_output_configuration_v2_destroy</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a08bab703f174b139e5556e1c54d118f1" kindref="member">kde_output_configuration_v2_destroy_resource</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a1d5ad1e58abfaa93df4b0f09665f528f" kindref="member">kde_output_configuration_v2_overscan</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>overscan)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ac8efb43de4a7d2e08b7f949059660e7d" kindref="member">kde_output_configuration_v2_set_vrr_policy</ref>(Resource<sp/>*resource,<sp/>struct<sp/>::wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>policy)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af0ca21231cc948fdd0bfa7e9aed58e2c" kindref="member">kde_output_configuration_v2_set_rgb_range</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>rgbRange)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a6ccd719d3487bbdcbc4e4b4e688bd2b7" kindref="member">kde_output_configuration_v2_set_primary_output</ref>(Resource<sp/>*resource,<sp/>struct<sp/>::wl_resource<sp/>*output)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a604d05e060b498104e1a89774f1d390b" kindref="member">kde_output_configuration_v2_set_priority</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*output,<sp/>uint32_t<sp/>priority)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1aefabe006804bd884fdcc0d563323e3f7" kindref="member">kde_output_configuration_v2_set_high_dynamic_range</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>enable_hdr)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a24a154da959e666188e9813c3c98fd91" kindref="member">kde_output_configuration_v2_set_sdr_brightness</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>sdr_brightness)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a074d7ba5b1cbacd102aed73ea45c2ee5" kindref="member">kde_output_configuration_v2_set_wide_color_gamut</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>enable_wcg)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a4b2669a90e97edd8bd48b19a483e0fec" kindref="member">kde_output_configuration_v2_set_auto_rotate_policy</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>auto_rotation_policy)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad5b549452fa92ab2b0a70c9a1b68e4da" kindref="member">kde_output_configuration_v2_set_icc_profile_path</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;profile_path)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1aa0e0625b857b0f96949589addfe6ec7d" kindref="member">kde_output_configuration_v2_set_brightness_overrides</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>int32_t<sp/>max_peak_brightness,<sp/>int32_t<sp/>max_average_brightness,<sp/>int32_t<sp/>min_brightness)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a243994cb3b6f316d99bebb1d86156cf1" kindref="member">kde_output_configuration_v2_set_sdr_gamut_wideness</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>gamut_wideness)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a621f6a832c11c71a87835646fdbdd61c" kindref="member">kde_output_configuration_v2_set_color_profile_source</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>source)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a9c18a5587da99ceb5233e002e3928ad8" kindref="member">kde_output_configuration_v2_set_brightness</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>brightness)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a20d3660c6b7541b4745798a29b0ef869" kindref="member">kde_output_configuration_v2_set_color_power_tradeoff</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>preference)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a13db7669e0ec84613986350115fd177c" kindref="member">kde_output_configuration_v2_set_dimming</ref>(Resource<sp/>*resource,<sp/>::wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>multiplier)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1abc2872f4b264ffe372706af6f95d43fa" kindref="member">sendFailure</ref>(Resource<sp/>*resource,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;reason);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_k_win_1_1_output_management_v2_interface_private_1a1ff8d0619b96d85641ea97a896f9c0df" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_management_v2_interface_private_1a1ff8d0619b96d85641ea97a896f9c0df" kindref="member">OutputManagementV2InterfacePrivate::OutputManagementV2InterfacePrivate</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QtWaylandServer::kde_output_management_v2(*display,<sp/>s_version)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_k_win_1_1_output_management_v2_interface_private_1ae43528db60f968d10c543d625b8233e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_management_v2_interface_private_1ae43528db60f968d10c543d625b8233e6" kindref="member">OutputManagementV2InterfacePrivate::kde_output_management_v2_create_configuration</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource<sp/>*config_resource<sp/>=<sp/>wl_resource_create(resource-&gt;client(),<sp/>&amp;kde_output_configuration_v2_interface,<sp/>resource-&gt;version(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!config_resource)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_post_no_memory(resource-&gt;client());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface" kindref="compound">OutputConfigurationV2Interface</ref>(config_resource);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="class_k_win_1_1_output_management_v2_interface_1ab1ae87dbfe80686b160f5ad1a8bb9be4" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_management_v2_interface_1ab1ae87dbfe80686b160f5ad1a8bb9be4" kindref="member">OutputManagementV2Interface::OutputManagementV2Interface</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display,<sp/>QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>d(new<sp/><ref refid="class_k_win_1_1_output_management_v2_interface_private" kindref="compound">OutputManagementV2InterfacePrivate</ref>(display))</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="class_k_win_1_1_output_management_v2_interface_1ae1df22226cf47b78ebde6eead82ee541" kindref="member">OutputManagementV2Interface::~OutputManagementV2Interface</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_k_win_1_1_output_configuration_v2_interface_1a967f1550fe0d907a83ce393e002e6ba6" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a967f1550fe0d907a83ce393e002e6ba6" kindref="member">OutputConfigurationV2Interface::OutputConfigurationV2Interface</ref>(wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QtWaylandServer::kde_output_configuration_v2(resource)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reject<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a2ca59e0d2a0634945e4c160547a20f72" kindref="member">Workspace::outputAdded</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>reject);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1acb430f5b2b96c6386636d80a89e33f81" kindref="member">Workspace::outputRemoved</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>reject);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_k_win_1_1_output_configuration_v2_interface_1af876bbbf36ea878173ebf0bc81ddd34f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af876bbbf36ea878173ebf0bc81ddd34f" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_enable</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>int32_t<sp/>enable)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;enabled<sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_k_win_1_1_output_configuration_v2_interface_1a067ecb93bd7d04057f4b0ba202664ba3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a067ecb93bd7d04057f4b0ba202664ba3" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_mode</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>wl_resource<sp/>*modeResource)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_device_mode_v2_interface" kindref="compound">OutputDeviceModeV2Interface</ref><sp/>*mode<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_mode_v2_interface_1ab4873895b7991a38c1f71ddc4100c3fe" kindref="member">OutputDeviceModeV2Interface::get</ref>(modeResource);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output<sp/>&amp;&amp;<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>change<sp/>=<sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;<ref refid="class_k_win_1_1_output_device_v2_interface_1a62fc87ccf0ff6159c8c6f6d60ff22c2b" kindref="member">handle</ref>());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>modePtr<sp/>=<sp/>mode-&gt;<ref refid="class_k_win_1_1_output_device_mode_v2_interface_1a6448104474c229efa0c1db3d207dcc7f" kindref="member">handle</ref>().lock();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!modePtr)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>change-&gt;mode<sp/>=<sp/>modePtr;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>change-&gt;desiredModeSize<sp/>=<sp/>modePtr-&gt;size();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>change-&gt;desiredModeRefreshRate<sp/>=<sp/>modePtr-&gt;refreshRate();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="class_k_win_1_1_output_configuration_v2_interface_1a77a5e803a00df1c1492c35146be45cce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a77a5e803a00df1c1492c35146be45cce" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_transform</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>int32_t<sp/>transform)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>toTransform<sp/>=<sp/>[transform]()<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(transform)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_90:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a1457e6800a3c966efe2e352858ce1814" kindref="member">OutputTransform::Rotate90</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_180:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a81855b733eee5226c36b414b06c62d0d" kindref="member">OutputTransform::Rotate180</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_270:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a9516f7c7bb3dd6677e50c6bc4bb18722" kindref="member">OutputTransform::Rotate270</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a99ce33d2be6b6fc0b62f75c3cf2e0d92" kindref="member">OutputTransform::FlipX</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_90:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7afc73240de152f39a98729840eec175eb" kindref="member">OutputTransform::FlipX90</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_180:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3e8998b4b9987dd309ca4687e8c34703" kindref="member">OutputTransform::FlipX180</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_FLIPPED_270:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a37f341a971fe7820b815c75c39d24b31" kindref="member">OutputTransform::FlipX270</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_OUTPUT_TRANSFORM_NORMAL:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Normal</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_transform<sp/>=<sp/>toTransform();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeset<sp/>=<sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeset-&gt;transform<sp/>=<sp/>changeset-&gt;manualTransform<sp/>=<sp/>_transform;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_k_win_1_1_output_configuration_v2_interface_1a09ea0d2efa0de6f1d23d0d683895f30c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a09ea0d2efa0de6f1d23d0d683895f30c" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_position</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;pos<sp/>=<sp/>QPoint(x,<sp/>y);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_k_win_1_1_output_configuration_v2_interface_1a21ab901761068f73d5f7e5e37acba15b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a21ab901761068f73d5f7e5e37acba15b" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_scale</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>wl_fixed_t<sp/>scale)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>doubleScale<sp/>=<sp/>wl_fixed_to_double(scale);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>fractional<sp/>scaling<sp/>protocol<sp/>only<sp/>speaks<sp/>in<sp/>unit<sp/>of<sp/>120ths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>the<sp/>same<sp/>scale<sp/>throughout<sp/>makes<sp/>that<sp/>simpler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>also<sp/>eliminates<sp/>most<sp/>loss<sp/>from<sp/>wl_fixed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>doubleScale<sp/>=<sp/>std::round(doubleScale<sp/>*<sp/>120)<sp/>/<sp/>120;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doubleScale<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Requested<sp/>to<sp/>scale<sp/>output<sp/>device<sp/>to&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>doubleScale<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>but<sp/>I<sp/>can&apos;t<sp/>do<sp/>that.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;scale<sp/>=<sp/>doubleScale;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="class_k_win_1_1_output_configuration_v2_interface_1a1d5ad1e58abfaa93df4b0f09665f528f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a1d5ad1e58abfaa93df4b0f09665f528f" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_overscan</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>overscan)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overscan<sp/>&gt;<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>overscan<sp/>requested:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>overscan;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;overscan<sp/>=<sp/>overscan;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="class_k_win_1_1_output_configuration_v2_interface_1ac8efb43de4a7d2e08b7f949059660e7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ac8efb43de4a7d2e08b7f949059660e7d" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_vrr_policy</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>policy)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(policy<sp/>&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespace_k_win_1a30ebd92a502242a9e136f070cbf9192ba086247a9b57fde6eefee2a0c4752242d" kindref="member">VrrPolicy::Automatic</ref>))<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Vrr<sp/>Policy<sp/>requested:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>policy;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;vrrPolicy<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_k_win_1a30ebd92a502242a9e136f070cbf9192b" kindref="member">VrrPolicy</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(policy);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="class_k_win_1_1_output_configuration_v2_interface_1af0ca21231cc948fdd0bfa7e9aed58e2c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af0ca21231cc948fdd0bfa7e9aed58e2c" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_rgb_range</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>rgbRange)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rgbRange<sp/>&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_k_win_1_1_output_1a091c0b392d5241b7208e2a63d0f89a83a7c2131ec78876ce749c2dadd24d47065" kindref="member">Output::RgbRange::Limited</ref>))<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Rgb<sp/>Range<sp/>requested:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rgbRange;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;rgbRange<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_output_1a091c0b392d5241b7208e2a63d0f89a83" kindref="member">Output::RgbRange</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rgbRange);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="class_k_win_1_1_output_configuration_v2_interface_1a6ccd719d3487bbdcbc4e4b4e688bd2b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a6ccd719d3487bbdcbc4e4b4e688bd2b7" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_primary_output</ref>(Resource<sp/>*resource,<sp/>struct<sp/>::wl_resource<sp/>*output)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intentionally<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="class_k_win_1_1_output_configuration_v2_interface_1a604d05e060b498104e1a89774f1d390b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a604d05e060b498104e1a89774f1d390b" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_priority</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputResource,<sp/>uint32_t<sp/>priority)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputResource))<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af9163503a4e04ad64d0b4cc746fe8e9c" kindref="member">outputOrder</ref>.push_back(std::make_pair(priority,<sp/>output));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="class_k_win_1_1_output_configuration_v2_interface_1aefabe006804bd884fdcc0d563323e3f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1aefabe006804bd884fdcc0d563323e3f7" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_high_dynamic_range</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>enable_hdr)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;highDynamicRange<sp/>=<sp/>enable_hdr<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="class_k_win_1_1_output_configuration_v2_interface_1a24a154da959e666188e9813c3c98fd91" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a24a154da959e666188e9813c3c98fd91" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_sdr_brightness</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>sdr_brightness)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;referenceLuminance<sp/>=<sp/>sdr_brightness;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="class_k_win_1_1_output_configuration_v2_interface_1a074d7ba5b1cbacd102aed73ea45c2ee5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a074d7ba5b1cbacd102aed73ea45c2ee5" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_wide_color_gamut</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>enable_wcg)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;wideColorGamut<sp/>=<sp/>enable_wcg<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="class_k_win_1_1_output_configuration_v2_interface_1a4b2669a90e97edd8bd48b19a483e0fec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a4b2669a90e97edd8bd48b19a483e0fec" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_auto_rotate_policy</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>auto_rotation_policy)</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;autoRotationPolicy<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_output_1ac33fe80a4384201645790e9706b8582b" kindref="member">Output::AutoRotationPolicy</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(auto_rotation_policy);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="class_k_win_1_1_output_configuration_v2_interface_1ad5b549452fa92ab2b0a70c9a1b68e4da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad5b549452fa92ab2b0a70c9a1b68e4da" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_icc_profile_path</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;profile_path)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>set<sp/>=<sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle());</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;iccProfilePath<sp/>=<sp/>profile_path;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>profile<sp/>=<sp/><ref refid="class_k_win_1_1_icc_profile_1af4a3ac4edf53e22f327152864cbe1956" kindref="member">IccProfile::load</ref>(profile_path))<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;iccProfile<sp/>=<sp/>std::move(profile.value());</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ac9c10f5c025b8cdbb0cfe1e3d7ba8b90" kindref="member">failureReason</ref><sp/>=<sp/>profile.error();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="class_k_win_1_1_output_configuration_v2_interface_1aa0e0625b857b0f96949589addfe6ec7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1aa0e0625b857b0f96949589addfe6ec7d" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_brightness_overrides</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>int32_t<sp/>max_peak_brightness,<sp/>int32_t<sp/>max_average_brightness,<sp/>int32_t<sp/>min_brightness)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;maxPeakBrightnessOverride<sp/>=<sp/>max_peak_brightness<sp/>==<sp/>-1<sp/>?<sp/>std::nullopt<sp/>:<sp/>std::optional&lt;double&gt;(max_peak_brightness);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;maxAverageBrightnessOverride<sp/>=<sp/>max_average_brightness<sp/>==<sp/>-1<sp/>?<sp/>std::nullopt<sp/>:<sp/>std::optional&lt;double&gt;(max_average_brightness);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;minBrightnessOverride<sp/>=<sp/>min_brightness<sp/>==<sp/>-1<sp/>?<sp/>std::nullopt<sp/>:<sp/>std::optional&lt;double&gt;(min_brightness<sp/>/<sp/>10&apos;000.0);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="class_k_win_1_1_output_configuration_v2_interface_1a243994cb3b6f316d99bebb1d86156cf1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a243994cb3b6f316d99bebb1d86156cf1" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_sdr_gamut_wideness</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>gamut_wideness)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;sdrGamutWideness<sp/>=<sp/>gamut_wideness<sp/>/<sp/>10&apos;000.0;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="class_k_win_1_1_output_configuration_v2_interface_1a621f6a832c11c71a87835646fdbdd61c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a621f6a832c11c71a87835646fdbdd61c" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_color_profile_source</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>source)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;colorProfileSource<sp/>=<sp/>[source]()<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(source)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>color_profile_source_sRGB:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94a9ed33d9be17d174aeb4393a989586ed9" kindref="member">Output::ColorProfileSource::sRGB</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>color_profile_source_ICC:</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94ab6b8d73d401b7611fac37ab11898f598" kindref="member">Output::ColorProfileSource::ICC</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>color_profile_source_EDID:</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94a6d75ca1747b97e77bed1d83ff47aa92c" kindref="member">Output::ColorProfileSource::EDID</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="class_k_win_1_1_output_configuration_v2_interface_1a9c18a5587da99ceb5233e002e3928ad8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a9c18a5587da99ceb5233e002e3928ad8" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_brightness</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>brightness)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;brightness<sp/>=<sp/>brightness<sp/>/<sp/>10&apos;000.0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="class_k_win_1_1_output_configuration_v2_interface_1a20d3660c6b7541b4745798a29b0ef869" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a20d3660c6b7541b4745798a29b0ef869" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_color_power_tradeoff</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>preference)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tradeoff<sp/>=<sp/>[preference]()<sp/>-&gt;<sp/>std::optional&lt;Output::ColorPowerTradeoff&gt;<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(preference)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>color_power_tradeoff_efficiency:</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198a3ef0f539abd3021f89f1d61123ef155b" kindref="member">Output::ColorPowerTradeoff::PreferEfficiency</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>color_power_tradeoff_accuracy:</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198a46f9df4006ba6fcb93a19323bb2d45e9" kindref="member">Output::ColorPowerTradeoff::PreferAccuracy</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tradeoff)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;colorPowerTradeoff<sp/>=<sp/>*tradeoff;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="class_k_win_1_1_output_configuration_v2_interface_1a13db7669e0ec84613986350115fd177c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a13db7669e0ec84613986350115fd177c" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_set_dimming</ref>(Resource<sp/>*resource,<sp/>::wl_resource<sp/>*outputdevice,<sp/>uint32_t<sp/>multiplier)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_device_v2_interface" kindref="compound">OutputDeviceV2Interface</ref><sp/>*output<sp/>=<sp/><ref refid="class_k_win_1_1_output_device_v2_interface_1ad32bf1d4def98426d171f4d109afa12d" kindref="member">OutputDeviceV2Interface::get</ref>(outputdevice))<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1af3697e18b7ca43a13d70b92640af2690" kindref="member">config</ref>.changeSet(output-&gt;handle())-&gt;dimming<sp/>=<sp/>multiplier<sp/>/<sp/>10&apos;000.0;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="class_k_win_1_1_output_configuration_v2_interface_1a15c8dc25525a9d810b268abcd200af43" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a15c8dc25525a9d810b268abcd200af43" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_destroy</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="class_k_win_1_1_output_configuration_v2_interface_1a08bab703f174b139e5556e1c54d118f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1a08bab703f174b139e5556e1c54d118f1" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_destroy_resource</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="class_k_win_1_1_output_configuration_v2_interface_1abc2872f4b264ffe372706af6f95d43fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1abc2872f4b264ffe372706af6f95d43fa" kindref="member">OutputConfigurationV2Interface::sendFailure</ref>(Resource<sp/>*resource,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;reason)</highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource-&gt;version()<sp/>&gt;=<sp/>KDE_OUTPUT_CONFIGURATION_V2_FAILURE_REASON_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_failure_reason(reason);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>send_failed();</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="class_k_win_1_1_output_configuration_v2_interface_1ac6fea38bd8c0f349459b82e45fe62295" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ac6fea38bd8c0f349459b82e45fe62295" kindref="member">OutputConfigurationV2Interface::kde_output_configuration_v2_apply</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ab2ef3469c2bdf975343e33b2f3b25fbd" kindref="member">applied</ref>)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_already_applied,<sp/></highlight><highlight class="stringliteral">&quot;an<sp/>output<sp/>configuration<sp/>can<sp/>be<sp/>applied<sp/>only<sp/>once&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ab2ef3469c2bdf975343e33b2f3b25fbd" kindref="member">applied</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ad2d3f347bc7d1ab0479f1a61c51dcd1f" kindref="member">invalid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1abc2872f4b264ffe372706af6f95d43fa" kindref="member">sendFailure</ref>(resource,<sp/>i18n(</highlight><highlight class="stringliteral">&quot;One<sp/>of<sp/>the<sp/>relevant<sp/>outputs<sp/>is<sp/>no<sp/>longer<sp/>available&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_output_configuration_v2_interface_1ac9c10f5c025b8cdbb0cfe1e3d7ba8b90" kindref="member">failureReason</ref>.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1abc2872f4b264ffe372706af6f95d43fa" kindref="member">sendFailure</ref>(resource,<sp/><ref refid="class_k_win_1_1_output_configuration_v2_interface_1ac9c10f5c025b8cdbb0cfe1e3d7ba8b90" kindref="member">failureReason</ref>);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>allOutputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allDisabled<sp/>=<sp/>!std::any_of(allOutputs.begin(),<sp/>allOutputs.end(),<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;output)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>changeset<sp/>=<sp/>config.constChangeSet(output);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(changeset<sp/>&amp;&amp;<sp/>changeset-&gt;enabled.has_value())<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>*changeset-&gt;enabled;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>output-&gt;isEnabled();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allDisabled)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendFailure(resource,<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Disabling<sp/>all<sp/>outputs<sp/>through<sp/>configuration<sp/>changes<sp/>is<sp/>not<sp/>allowed&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;QList&lt;Output<sp/>*&gt;&gt;<sp/>sortedOrder;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outputOrder.empty())<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desktopOutputs<sp/>=<sp/>std::count_if(allOutputs.begin(),<sp/>allOutputs.end(),<sp/>[](Output<sp/>*output)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>!output-&gt;isNonDesktop();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outputOrder.size()<sp/>!=<sp/>desktopOutputs)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendFailure(resource,<sp/>i18n(</highlight><highlight class="stringliteral">&quot;The<sp/>provided<sp/>output<sp/>order<sp/>doesn&apos;t<sp/>contain<sp/>all<sp/>outputs&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputOrder.erase(std::remove_if(outputOrder.begin(),<sp/>outputOrder.end(),<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pair)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>changeset<sp/>=<sp/>config.constChangeSet(pair.second-&gt;handle());</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(changeset<sp/>&amp;&amp;<sp/>changeset-&gt;enabled.has_value())<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>!changeset-&gt;enabled.value();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>!pair.second-&gt;handle()-&gt;isEnabled();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputOrder.end());</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(outputOrder.begin(),<sp/>outputOrder.end(),<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pair1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pair2)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>pair1.first<sp/>&lt;<sp/>pair2.first;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[index,<sp/>name]<sp/>:<sp/>std::as_const(outputOrder))<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>!=<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendFailure(resource,<sp/>i18n(</highlight><highlight class="stringliteral">&quot;The<sp/>provided<sp/>output<sp/>order<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sortedOrder<sp/>=<sp/>QList&lt;Output<sp/>*&gt;();</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sortedOrder-&gt;reserve(outputOrder.size());</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(outputOrder.begin(),<sp/>outputOrder.end(),<sp/>std::back_inserter(*sortedOrder),<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pair)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>pair.second-&gt;handle();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;applyOutputConfiguration(config,<sp/>sortedOrder))<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OutputConfigurationError::None:</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_applied();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OutputConfigurationError::Unknown:</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OutputConfigurationError::TooManyEnabledOutputs:</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>provide<sp/>a<sp/>more<sp/>accurate<sp/>error<sp/>reason<sp/>once<sp/>the<sp/>driver<sp/>actually<sp/>gives<sp/>us<sp/>anything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendFailure(resource,<sp/>i18n(</highlight><highlight class="stringliteral">&quot;The<sp/>driver<sp/>rejected<sp/>the<sp/>output<sp/>configuration&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;outputmanagement_v2.moc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_outputmanagement_v2.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/outputmanagement_v2.cpp"/>
  </compounddef>
</doxygen>
