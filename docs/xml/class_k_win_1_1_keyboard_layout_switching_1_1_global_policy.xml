<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy" kind="class" language="C++" prot="public">
    <compoundname>KWin::KeyboardLayoutSwitching::GlobalPolicy</compoundname>
    <basecompoundref refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy" prot="public" virt="non-virtual">KWin::KeyboardLayoutSwitching::Policy</basecompoundref>
    <includes refid="keyboard__layout__switching_8h" local="no">keyboard_layout_switching.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1a808ae023d1babf8901adcc6237016e4e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::KeyboardLayoutSwitching::GlobalPolicy::GlobalPolicy</definition>
        <argsstring>(Xkb *xkb, KeyboardLayout *layout, const KConfigGroup &amp;config)</argsstring>
        <name>GlobalPolicy</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::GlobalPolicy::GlobalPolicy</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_xkb" kindref="compound">Xkb</ref> *</type>
          <declname>xkb</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_keyboard_layout" kindref="compound">KeyboardLayout</ref> *</type>
          <declname>layout</declname>
        </param>
        <param>
          <type>const KConfigGroup &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="59" column="14" bodyfile="kwin/src/keyboard_layout_switching.cpp" bodystart="77" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1ad3968056f5972be1d81a5e5ee915c072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::KeyboardLayoutSwitching::GlobalPolicy::~GlobalPolicy</definition>
        <argsstring>() override</argsstring>
        <name>~GlobalPolicy</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::GlobalPolicy::~GlobalPolicy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="60" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1ae13d825748749addc6452c20af0032d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>QString</type>
        <definition>QString KWin::KeyboardLayoutSwitching::GlobalPolicy::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::GlobalPolicy::name</qualifiedname>
        <reimplements refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1af5e81496b1f3fa30558445b566b407cc">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="62" column="13" bodyfile="kwin/src/keyboard_layout_switching.h" bodystart="62" bodyend="65"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1a9669b4ce683f3a34166d6ba805b4e2b5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::KeyboardLayoutSwitching::GlobalPolicy::clearCache</definition>
        <argsstring>() override</argsstring>
        <name>clearCache</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::GlobalPolicy::clearCache</qualifiedname>
        <reimplements refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1af7c7506336bf9e88a42bbb4f446a3d43">clearCache</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="68" column="10" bodyfile="kwin/src/keyboard_layout_switching.h" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1a6bf207eeb332b251a2b13335a063b1d5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::KeyboardLayoutSwitching::GlobalPolicy::layoutChanged</definition>
        <argsstring>(uint index) override</argsstring>
        <name>layoutChanged</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::GlobalPolicy::layoutChanged</qualifiedname>
        <reimplements refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1ae4467d7a1b0fe4c8b387e903a98844b6">layoutChanged</reimplements>
        <param>
          <type>uint</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="71" column="10" bodyfile="kwin/src/keyboard_layout_switching.h" bodystart="71" bodyend="73"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1a3a9ed6d9c39fea46aba162692f62aed1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const QString</type>
        <definition>const QString KWin::KeyboardLayoutSwitching::GlobalPolicy::defaultLayoutEntryKey</definition>
        <argsstring>() const override</argsstring>
        <name>defaultLayoutEntryKey</name>
        <qualifiedname>KWin::KeyboardLayoutSwitching::GlobalPolicy::defaultLayoutEntryKey</qualifiedname>
        <reimplements refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a3be072333c0175a01e397f22ad953433">defaultLayoutEntryKey</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/keyboard_layout_switching.h" line="76" column="19" bodyfile="kwin/src/keyboard_layout_switching.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::KeyboardLayoutSwitching::GlobalPolicy</label>
        <link refid="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::KeyboardLayoutSwitching::Policy</label>
        <link refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::KeyboardLayoutSwitching::GlobalPolicy</label>
        <link refid="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::KeyboardLayoutSwitching::Policy</label>
        <link refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_xkb</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>KWin::Xkb</label>
        <link refid="class_k_win_1_1_xkb"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/keyboard_layout_switching.h" line="55" column="1" bodyfile="kwin/src/keyboard_layout_switching.h" bodystart="56" bodyend="77"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1a9669b4ce683f3a34166d6ba805b4e2b5" prot="protected" virt="virtual"><scope>KWin::KeyboardLayoutSwitching::GlobalPolicy</scope><name>clearCache</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a0c7b497b7b1f5a2dccba5edae9daac2f" prot="protected" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::GlobalPolicy</scope><name>clearLayouts</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a6fc44581338efb0f4883331cbce43a98" prot="public" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::GlobalPolicy</scope><name>create</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1a3a9ed6d9c39fea46aba162692f62aed1" prot="private" virt="virtual"><scope>KWin::KeyboardLayoutSwitching::GlobalPolicy</scope><name>defaultLayoutEntryKey</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a5e658cfdb0039e487c853c4f4a04c040" prot="protected" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::GlobalPolicy</scope><name>defaultLayoutEntryKeyPrefix</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1a808ae023d1babf8901adcc6237016e4e" prot="public" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::GlobalPolicy</scope><name>GlobalPolicy</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1a6bf207eeb332b251a2b13335a063b1d5" prot="protected" virt="virtual"><scope>KWin::KeyboardLayoutSwitching::GlobalPolicy</scope><name>layoutChanged</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a621b6d0b024fe25a34a56540511403ef" prot="protected" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::GlobalPolicy</scope><name>m_config</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1a523d4f1e8e9207ab26560a7a616a7d3e" prot="protected" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::GlobalPolicy</scope><name>m_xkb</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1ae13d825748749addc6452c20af0032d3" prot="public" virt="virtual"><scope>KWin::KeyboardLayoutSwitching::GlobalPolicy</scope><name>name</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1ad22846fe71cca26b4df109e4671ba97b" prot="protected" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::GlobalPolicy</scope><name>Policy</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1af02b75505bb271b68358ce7744f7e034" prot="protected" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::GlobalPolicy</scope><name>setLayout</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_global_policy_1ad3968056f5972be1d81a5e5ee915c072" prot="public" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::GlobalPolicy</scope><name>~GlobalPolicy</name></member>
      <member refid="class_k_win_1_1_keyboard_layout_switching_1_1_policy_1aea0de5e73d88c2a526eaa28b74d6748c" prot="public" virt="non-virtual"><scope>KWin::KeyboardLayoutSwitching::GlobalPolicy</scope><name>~Policy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
