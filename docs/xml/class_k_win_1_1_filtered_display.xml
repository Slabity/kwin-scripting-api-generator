<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_filtered_display" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>KWin::FilteredDisplay</compoundname>
    <basecompoundref refid="class_k_win_1_1_display" prot="public" virt="non-virtual">KWin::Display</basecompoundref>
    <derivedcompoundref refid="class_k_win_1_1_k_win_display" prot="public" virt="non-virtual">KWin::KWinDisplay</derivedcompoundref>
    <includes refid="filtered__display_8h" local="no">filtered_display.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_filtered_display_1ae2def3befa75e73868691264c31c6139" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_filtered_display_private" kindref="compound">FilteredDisplayPrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;FilteredDisplayPrivate&gt; KWin::FilteredDisplay::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::FilteredDisplay::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/filtered_display.h" line="38" column="21" bodyfile="kwin/src/wayland/filtered_display.h" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_filtered_display_1a9fe1a40add12e705ea5c68883528a2ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::FilteredDisplay::FilteredDisplay</definition>
        <argsstring>(QObject *parent)</argsstring>
        <name>FilteredDisplay</name>
        <qualifiedname>KWin::FilteredDisplay::FilteredDisplay</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/filtered_display.h" line="24" column="5" bodyfile="kwin/src/wayland/filtered_display.cpp" bodystart="36" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_filtered_display_1aa8d25de1f330eeaa605a30e699c34606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::FilteredDisplay::~FilteredDisplay</definition>
        <argsstring>() override</argsstring>
        <name>~FilteredDisplay</name>
        <qualifiedname>KWin::FilteredDisplay::~FilteredDisplay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/filtered_display.h" line="25" column="5" bodyfile="kwin/src/wayland/filtered_display.cpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_filtered_display_1a06525cd1966b7ac6f200cbfe736fc847" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::FilteredDisplay::allowInterface</definition>
        <argsstring>(ClientConnection *client, const QByteArray &amp;interfaceName)=0</argsstring>
        <name>allowInterface</name>
        <qualifiedname>KWin::FilteredDisplay::allowInterface</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_k_win_display_1ab8bd1d8330dc7e4e0815367d2f9d4bcf">allowInterface</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const QByteArray &amp;</type>
          <declname>interfaceName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether the <itemizedlist>
<listitem><para>client can see the interface with the given </para>
</listitem>
<listitem><para>interfaceName</para>
</listitem>
</itemizedlist>
When false will not see these globals for a given interface in the registry, and any manual attempts to bind will fail</para>
<para><simplesect kind="return"><para>true if the client should be able to access the global with the following interfaceName </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/filtered_display.h" line="35" column="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Server Implementation that allows one to restrict which globals are available to which clients</para>
<para>Users of this class must implement the virtual @method allowInterface method. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::Display</label>
        <link refid="class_k_win_1_1_display"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::FilteredDisplay</label>
        <link refid="class_k_win_1_1_filtered_display"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>KWin::KWinDisplay</label>
        <link refid="class_k_win_1_1_k_win_display"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::Display</label>
        <link refid="class_k_win_1_1_display"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::FilteredDisplay</label>
        <link refid="class_k_win_1_1_filtered_display"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/filtered_display.h" line="20" column="1" bodyfile="kwin/src/wayland/filtered_display.h" bodystart="21" bodyend="39"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_display_1ae4065e04d9a4a44150d44585f6942bb3" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>addSocketFileDescriptor</name></member>
      <member refid="class_k_win_1_1_display_1aa4c4acfe47f745065df276fab792b431" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>addSocketName</name></member>
      <member refid="class_k_win_1_1_filtered_display_1a06525cd1966b7ac6f200cbfe736fc847" prot="public" virt="pure-virtual"><scope>KWin::FilteredDisplay</scope><name>allowInterface</name></member>
      <member refid="class_k_win_1_1_display_1a374a4d7de3f7a40aed96a879dc92b497" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>bufferForResource</name></member>
      <member refid="class_k_win_1_1_display_1a04054e9c882bab1a04bbf319585712e5" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>clientConnected</name></member>
      <member refid="class_k_win_1_1_display_1a2dae745448a325e7f6e8d0e640080047" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>clientDisconnected</name></member>
      <member refid="class_k_win_1_1_display_1a07034ffcff1c993fe2efabbb4371ab77" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>createClient</name></member>
      <member refid="class_k_win_1_1_display_1a0be7cd8fa84fabd7a6f51f9819f7d7e1" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>createShm</name></member>
      <member refid="class_k_win_1_1_filtered_display_1ae2def3befa75e73868691264c31c6139" prot="private" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>d</name></member>
      <member refid="class_k_win_1_1_display_1a39c8828d70c0deafb5c1b3b9ccf95979" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>dispatchEvents</name></member>
      <member refid="class_k_win_1_1_display_1abec28e9c667dfa4485597aaeebb07129" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>Display</name></member>
      <member refid="class_k_win_1_1_filtered_display_1a9fe1a40add12e705ea5c68883528a2ff" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>FilteredDisplay</name></member>
      <member refid="class_k_win_1_1_display_1a2260ce48af41a11b1a0d4225603c7766" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>flush</name></member>
      <member refid="class_k_win_1_1_display_1a79c16fcdaf407c74c7a0d4395762a86f" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>getConnection</name></member>
      <member refid="class_k_win_1_1_display_1aa50d346a6be40bd7db06214c0350456a" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>isRunning</name></member>
      <member refid="class_k_win_1_1_display_1a442b1534e9a5002094ebfb5db1c7c82a" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>largestIntersectingOutput</name></member>
      <member refid="class_k_win_1_1_display_1a88d04e81a3c1a696bae7fca6426fabcc" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>nextSerial</name></member>
      <member refid="class_k_win_1_1_display_1afe19d2ff1279b5a89fbe761a99dc58eb" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>operator wl_display *</name></member>
      <member refid="class_k_win_1_1_display_1a1544ce9fb0ca6c88896be026ee164ee5" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>operator wl_display *</name></member>
      <member refid="class_k_win_1_1_display_1a768cfd4a55a23aa9d002aefb0065892b" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>outputDevices</name></member>
      <member refid="class_k_win_1_1_display_1a6fb3b0641dcb2f4f911346aa8696b7fe" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>outputs</name></member>
      <member refid="class_k_win_1_1_display_1a5e188d47beffd1102046c911952f6f19" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>outputsIntersecting</name></member>
      <member refid="class_k_win_1_1_display_1a0242f5e4216de825ed68f34f5d78820f" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>running</name></member>
      <member refid="class_k_win_1_1_display_1a923ef782d0c9b5b8d0afed92c506d11c" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>runningChanged</name></member>
      <member refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>seats</name></member>
      <member refid="class_k_win_1_1_display_1a1592cc63a3c36673842d84fa3933a202" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>serial</name></member>
      <member refid="class_k_win_1_1_display_1a90caf1e11bcbe97111449fc3b040bcc2" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>setDefaultMaxBufferSize</name></member>
      <member refid="class_k_win_1_1_display_1a0d0e89f4da09f16cdb95e7f7440fbe33" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>socketNames</name></member>
      <member refid="class_k_win_1_1_display_1ab01e78a46ce6279919e4e853658fa771" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>socketNamesChanged</name></member>
      <member refid="class_k_win_1_1_display_1af36443417f1832645373ce713cb226c7" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>start</name></member>
      <member refid="class_k_win_1_1_display_1a69bab00bcda1b5d18a26d85d06ff0950" prot="public" virt="virtual"><scope>KWin::FilteredDisplay</scope><name>~Display</name></member>
      <member refid="class_k_win_1_1_filtered_display_1aa8d25de1f330eeaa605a30e699c34606" prot="public" virt="non-virtual"><scope>KWin::FilteredDisplay</scope><name>~FilteredDisplay</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
