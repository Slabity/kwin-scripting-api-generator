<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structlibinput__device" kind="struct" language="C++" prot="public">
    <compoundname>libinput_device</compoundname>
    <includes refid="mock__libinput_8h" local="no">mock_libinput.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structlibinput__device_1a87389644b4e55ac884d4a6ed37bb5603" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* libinput_device::userData</definition>
        <argsstring></argsstring>
        <name>userData</name>
        <qualifiedname>libinput_device::userData</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="23" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a4fd96063f8e89634134b0c557f580e35" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::keyboard</definition>
        <argsstring></argsstring>
        <name>keyboard</name>
        <qualifiedname>libinput_device::keyboard</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="24" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ada23f7b711039e078a4c06542f66df4e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>libinput_device::pointer</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="25" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a72efbd424f0f5c44a7cae9e59a89d0d0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::touch</definition>
        <argsstring></argsstring>
        <name>touch</name>
        <qualifiedname>libinput_device::touch</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="26" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a1113858cd508b0889ef9158f254015bc" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::tabletTool</definition>
        <argsstring></argsstring>
        <name>tabletTool</name>
        <qualifiedname>libinput_device::tabletTool</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="27" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ae6309dcce9c1b7f90588cf39e704873a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::gestureSupported</definition>
        <argsstring></argsstring>
        <name>gestureSupported</name>
        <qualifiedname>libinput_device::gestureSupported</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="28" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a1d05ca59d3df076b4ffccda3b08afb8e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::switchDevice</definition>
        <argsstring></argsstring>
        <name>switchDevice</name>
        <qualifiedname>libinput_device::switchDevice</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="29" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ab83e5162357f0da62c52d1d6c778283c" prot="public" static="no" mutable="no">
        <type>QByteArray</type>
        <definition>QByteArray libinput_device::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>libinput_device::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="30" column="16" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ad97607dd2a577a81dfc1200acd3b426a" prot="public" static="no" mutable="no">
        <type>QByteArray</type>
        <definition>QByteArray libinput_device::sysName</definition>
        <argsstring></argsstring>
        <name>sysName</name>
        <qualifiedname>libinput_device::sysName</qualifiedname>
        <initializer>= QByteArrayLiteral(&quot;event0&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="31" column="16" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a4089d505fcda169b330e11c1da02f79b" prot="public" static="no" mutable="no">
        <type>QByteArray</type>
        <definition>QByteArray libinput_device::outputName</definition>
        <argsstring></argsstring>
        <name>outputName</name>
        <qualifiedname>libinput_device::outputName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="32" column="16" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1af20fcbe52efa2aec4257402dda54b790" prot="public" static="no" mutable="no">
        <type>quint32</type>
        <definition>quint32 libinput_device::product</definition>
        <argsstring></argsstring>
        <name>product</name>
        <qualifiedname>libinput_device::product</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="33" column="13" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a0a001fc270a4350f86ac32d6063aab38" prot="public" static="no" mutable="no">
        <type>quint32</type>
        <definition>quint32 libinput_device::vendor</definition>
        <argsstring></argsstring>
        <name>vendor</name>
        <qualifiedname>libinput_device::vendor</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="34" column="13" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1aec89d1ec0c69553d39e0dbf2c3857b9d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libinput_device::tapFingerCount</definition>
        <argsstring></argsstring>
        <name>tapFingerCount</name>
        <qualifiedname>libinput_device::tapFingerCount</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="35" column="9" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ab258e327e63fd657dce457f31dbe5414" prot="public" static="no" mutable="no">
        <type>QSizeF</type>
        <definition>QSizeF libinput_device::deviceSize</definition>
        <argsstring></argsstring>
        <name>deviceSize</name>
        <qualifiedname>libinput_device::deviceSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="36" column="12" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1aa25d85ec2cf0ce22f05709afcb928527" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libinput_device::deviceSizeReturnValue</definition>
        <argsstring></argsstring>
        <name>deviceSizeReturnValue</name>
        <qualifiedname>libinput_device::deviceSizeReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="37" column="9" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1aff21296824cba152e4ada24e863f58f6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::tapEnabledByDefault</definition>
        <argsstring></argsstring>
        <name>tapEnabledByDefault</name>
        <qualifiedname>libinput_device::tapEnabledByDefault</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="38" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ae61e3cfd05819168fe78706e9c8f657f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::tapToClick</definition>
        <argsstring></argsstring>
        <name>tapToClick</name>
        <qualifiedname>libinput_device::tapToClick</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="39" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ac368501f3db277884699d6e56a9ddac8" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::tapAndDragEnabledByDefault</definition>
        <argsstring></argsstring>
        <name>tapAndDragEnabledByDefault</name>
        <qualifiedname>libinput_device::tapAndDragEnabledByDefault</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="40" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a9fa5aff2c39618894920afc7fb1eab69" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::tapAndDrag</definition>
        <argsstring></argsstring>
        <name>tapAndDrag</name>
        <qualifiedname>libinput_device::tapAndDrag</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="41" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a0cf70c440193906358ea1c6d6e7e395f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::tapDragLockEnabledByDefault</definition>
        <argsstring></argsstring>
        <name>tapDragLockEnabledByDefault</name>
        <qualifiedname>libinput_device::tapDragLockEnabledByDefault</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="42" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a04163dc3b827d208e0ed2c07dcee783a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::tapDragLock</definition>
        <argsstring></argsstring>
        <name>tapDragLock</name>
        <qualifiedname>libinput_device::tapDragLock</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="43" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a5ec5899579831f454d3b376c0d6eb300" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::supportsDisableWhileTyping</definition>
        <argsstring></argsstring>
        <name>supportsDisableWhileTyping</name>
        <qualifiedname>libinput_device::supportsDisableWhileTyping</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="44" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1abe3ddee92e48025e6431e3a7aa45d49a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::supportsPointerAcceleration</definition>
        <argsstring></argsstring>
        <name>supportsPointerAcceleration</name>
        <qualifiedname>libinput_device::supportsPointerAcceleration</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="45" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a1e35c325d7dc3d909a539dfec478f5b2" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::supportsLeftHanded</definition>
        <argsstring></argsstring>
        <name>supportsLeftHanded</name>
        <qualifiedname>libinput_device::supportsLeftHanded</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="46" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a58b9847727fadbf3fa91636334b09d95" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::supportsCalibrationMatrix</definition>
        <argsstring></argsstring>
        <name>supportsCalibrationMatrix</name>
        <qualifiedname>libinput_device::supportsCalibrationMatrix</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="47" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a2bcf4f4ac5b09f680d75912043bd7cdb" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::supportsDisableEvents</definition>
        <argsstring></argsstring>
        <name>supportsDisableEvents</name>
        <qualifiedname>libinput_device::supportsDisableEvents</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="48" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ad27e8ead07a822fade528e2806f84121" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::supportsDisableEventsOnExternalMouse</definition>
        <argsstring></argsstring>
        <name>supportsDisableEventsOnExternalMouse</name>
        <qualifiedname>libinput_device::supportsDisableEventsOnExternalMouse</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="49" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ade78bb6d6cb8c51b3ebe025bc5c1d777" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::supportsMiddleEmulation</definition>
        <argsstring></argsstring>
        <name>supportsMiddleEmulation</name>
        <qualifiedname>libinput_device::supportsMiddleEmulation</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="50" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1af3342d9cb2a5e6e305e3e64ebcdd2827" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::supportsNaturalScroll</definition>
        <argsstring></argsstring>
        <name>supportsNaturalScroll</name>
        <qualifiedname>libinput_device::supportsNaturalScroll</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="51" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a0a3b9a4a588e1c17ce6b3f3ceb808756" prot="public" static="no" mutable="no">
        <type>quint32</type>
        <definition>quint32 libinput_device::supportedScrollMethods</definition>
        <argsstring></argsstring>
        <name>supportedScrollMethods</name>
        <qualifiedname>libinput_device::supportedScrollMethods</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="52" column="13" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ad56f2ef83209c9705d6f909f5b5d2998" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::middleEmulationEnabledByDefault</definition>
        <argsstring></argsstring>
        <name>middleEmulationEnabledByDefault</name>
        <qualifiedname>libinput_device::middleEmulationEnabledByDefault</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="53" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a38cc31dc3ae9e2bc11f2c2537c35aa90" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::middleEmulation</definition>
        <argsstring></argsstring>
        <name>middleEmulation</name>
        <qualifiedname>libinput_device::middleEmulation</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="54" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ac968350a91ff8f77fa7dd03dfc63724b" prot="public" static="no" mutable="no">
        <type>enum libinput_config_tap_button_map</type>
        <definition>enum libinput_config_tap_button_map libinput_device::defaultTapButtonMap</definition>
        <argsstring></argsstring>
        <name>defaultTapButtonMap</name>
        <qualifiedname>libinput_device::defaultTapButtonMap</qualifiedname>
        <initializer>= LIBINPUT_CONFIG_TAP_MAP_LRM</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="55" column="40" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1abac8042f0358024b94033a561bbd69c0" prot="public" static="no" mutable="no">
        <type>enum libinput_config_tap_button_map</type>
        <definition>enum libinput_config_tap_button_map libinput_device::tapButtonMap</definition>
        <argsstring></argsstring>
        <name>tapButtonMap</name>
        <qualifiedname>libinput_device::tapButtonMap</qualifiedname>
        <initializer>= LIBINPUT_CONFIG_TAP_MAP_LRM</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="56" column="40" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a7579d57a161bfe51460fb30f577e206f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libinput_device::setTapButtonMapReturnValue</definition>
        <argsstring></argsstring>
        <name>setTapButtonMapReturnValue</name>
        <qualifiedname>libinput_device::setTapButtonMapReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="57" column="9" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a41aba32393f00224ca5d3057a82c7b09" prot="public" static="no" mutable="no">
        <type>enum libinput_config_dwt_state</type>
        <definition>enum libinput_config_dwt_state libinput_device::disableWhileTypingEnabledByDefault</definition>
        <argsstring></argsstring>
        <name>disableWhileTypingEnabledByDefault</name>
        <qualifiedname>libinput_device::disableWhileTypingEnabledByDefault</qualifiedname>
        <initializer>= LIBINPUT_CONFIG_DWT_DISABLED</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="58" column="35" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a7f0e30a57bbda0e187831664ee8e35c0" prot="public" static="no" mutable="no">
        <type>enum libinput_config_dwt_state</type>
        <definition>enum libinput_config_dwt_state libinput_device::disableWhileTyping</definition>
        <argsstring></argsstring>
        <name>disableWhileTyping</name>
        <qualifiedname>libinput_device::disableWhileTyping</qualifiedname>
        <initializer>= LIBINPUT_CONFIG_DWT_DISABLED</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="59" column="35" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ad7c17c3a5b1706e02a23b36e47640647" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libinput_device::setDisableWhileTypingReturnValue</definition>
        <argsstring></argsstring>
        <name>setDisableWhileTypingReturnValue</name>
        <qualifiedname>libinput_device::setDisableWhileTypingReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="60" column="9" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ab2f079ee3e411b00c50e688f75540cc4" prot="public" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal libinput_device::defaultPointerAcceleration</definition>
        <argsstring></argsstring>
        <name>defaultPointerAcceleration</name>
        <qualifiedname>libinput_device::defaultPointerAcceleration</qualifiedname>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="61" column="11" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a730b0b3be992fb15ac957bd8979d7b60" prot="public" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal libinput_device::pointerAcceleration</definition>
        <argsstring></argsstring>
        <name>pointerAcceleration</name>
        <qualifiedname>libinput_device::pointerAcceleration</qualifiedname>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="62" column="11" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a5cc800aed9b662df8e0eb9bb4d6d21b3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libinput_device::setPointerAccelerationReturnValue</definition>
        <argsstring></argsstring>
        <name>setPointerAccelerationReturnValue</name>
        <qualifiedname>libinput_device::setPointerAccelerationReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="63" column="9" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1aa7ff6977b9ee94eb8165ba6cfca78fa0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::leftHandedEnabledByDefault</definition>
        <argsstring></argsstring>
        <name>leftHandedEnabledByDefault</name>
        <qualifiedname>libinput_device::leftHandedEnabledByDefault</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="64" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a909f60737f14d9532cbaa8fcbda99b37" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::leftHanded</definition>
        <argsstring></argsstring>
        <name>leftHanded</name>
        <qualifiedname>libinput_device::leftHanded</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="65" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a5a034a8884ccac1eef0ddaa0e46d55a3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libinput_device::setLeftHandedReturnValue</definition>
        <argsstring></argsstring>
        <name>setLeftHandedReturnValue</name>
        <qualifiedname>libinput_device::setLeftHandedReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="66" column="9" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1acd983a2927387d4e1306025f4c49e267" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::naturalScrollEnabledByDefault</definition>
        <argsstring></argsstring>
        <name>naturalScrollEnabledByDefault</name>
        <qualifiedname>libinput_device::naturalScrollEnabledByDefault</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="67" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ab5c260b790dd9b7d68b47a3951ac5838" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::naturalScroll</definition>
        <argsstring></argsstring>
        <name>naturalScroll</name>
        <qualifiedname>libinput_device::naturalScroll</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="68" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a11f5390153807d9a4922365f89e4d0bd" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libinput_device::setNaturalScrollReturnValue</definition>
        <argsstring></argsstring>
        <name>setNaturalScrollReturnValue</name>
        <qualifiedname>libinput_device::setNaturalScrollReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="69" column="9" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a59c4f927875be7507a12eb159efbdcda" prot="public" static="no" mutable="no">
        <type>enum libinput_config_scroll_method</type>
        <definition>enum libinput_config_scroll_method libinput_device::defaultScrollMethod</definition>
        <argsstring></argsstring>
        <name>defaultScrollMethod</name>
        <qualifiedname>libinput_device::defaultScrollMethod</qualifiedname>
        <initializer>= LIBINPUT_CONFIG_SCROLL_NO_SCROLL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="70" column="39" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a618ebda6f1de44624e2874243a4f4d39" prot="public" static="no" mutable="no">
        <type>enum libinput_config_scroll_method</type>
        <definition>enum libinput_config_scroll_method libinput_device::scrollMethod</definition>
        <argsstring></argsstring>
        <name>scrollMethod</name>
        <qualifiedname>libinput_device::scrollMethod</qualifiedname>
        <initializer>= LIBINPUT_CONFIG_SCROLL_NO_SCROLL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="71" column="39" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a07a305f0cef7e10f86a7347d8d499b96" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libinput_device::setScrollMethodReturnValue</definition>
        <argsstring></argsstring>
        <name>setScrollMethodReturnValue</name>
        <qualifiedname>libinput_device::setScrollMethodReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="72" column="9" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1aaf0dc6b349ebd24f5588b02735dc9e09" prot="public" static="no" mutable="no">
        <type>quint32</type>
        <definition>quint32 libinput_device::defaultScrollButton</definition>
        <argsstring></argsstring>
        <name>defaultScrollButton</name>
        <qualifiedname>libinput_device::defaultScrollButton</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="73" column="13" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1aaa3354dc1045d25fd5e9c806d191ce85" prot="public" static="no" mutable="no">
        <type>quint32</type>
        <definition>quint32 libinput_device::scrollButton</definition>
        <argsstring></argsstring>
        <name>scrollButton</name>
        <qualifiedname>libinput_device::scrollButton</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="74" column="13" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a2d4acbab3e296c969933e758909b54f3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libinput_device::setScrollButtonReturnValue</definition>
        <argsstring></argsstring>
        <name>setScrollButtonReturnValue</name>
        <qualifiedname>libinput_device::setScrollButtonReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="75" column="9" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1afcc0ce381dac73e020a3d212ccf8fda8" prot="public" static="no" mutable="no">
        <type>Qt::MouseButtons</type>
        <definition>Qt::MouseButtons libinput_device::supportedButtons</definition>
        <argsstring></argsstring>
        <name>supportedButtons</name>
        <qualifiedname>libinput_device::supportedButtons</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="76" column="22" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a4cd9c60067cb736c72871be99533e859" prot="public" static="no" mutable="no">
        <type>QList&lt; quint32 &gt;</type>
        <definition>QList&lt;quint32&gt; libinput_device::keys</definition>
        <argsstring></argsstring>
        <name>keys</name>
        <qualifiedname>libinput_device::keys</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="77" column="11" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a9a52319cd0c4703a39597e1d5faa2721" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::enabled</definition>
        <argsstring></argsstring>
        <name>enabled</name>
        <qualifiedname>libinput_device::enabled</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="78" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a8003a8fa9572a004c038a4a367db4f65" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::disableEventsOnExternalMouse</definition>
        <argsstring></argsstring>
        <name>disableEventsOnExternalMouse</name>
        <qualifiedname>libinput_device::disableEventsOnExternalMouse</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="79" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a8e6e2b108be5e178feff11cbf85d2d56" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libinput_device::setEnableModeReturnValue</definition>
        <argsstring></argsstring>
        <name>setEnableModeReturnValue</name>
        <qualifiedname>libinput_device::setEnableModeReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="80" column="9" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ad6e00a3d3703c01da1d71e49f2502398" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libinput_device::setTapToClickReturnValue</definition>
        <argsstring></argsstring>
        <name>setTapToClickReturnValue</name>
        <qualifiedname>libinput_device::setTapToClickReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="81" column="9" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a36756cbe3aa0b6cc4086384b8cf26cc6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libinput_device::setTapAndDragReturnValue</definition>
        <argsstring></argsstring>
        <name>setTapAndDragReturnValue</name>
        <qualifiedname>libinput_device::setTapAndDragReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="82" column="9" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ae46b3dacdfcce77cc6fb202d3537191b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libinput_device::setTapDragLockReturnValue</definition>
        <argsstring></argsstring>
        <name>setTapDragLockReturnValue</name>
        <qualifiedname>libinput_device::setTapDragLockReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="83" column="9" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a5ec3699d7580859d1cb4ee86b1fdf231" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libinput_device::setMiddleEmulationReturnValue</definition>
        <argsstring></argsstring>
        <name>setMiddleEmulationReturnValue</name>
        <qualifiedname>libinput_device::setMiddleEmulationReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="84" column="9" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ae7602da7ca26ce6e2f44956c4b92676d" prot="public" static="no" mutable="no">
        <type>quint32</type>
        <definition>quint32 libinput_device::supportedPointerAccelerationProfiles</definition>
        <argsstring></argsstring>
        <name>supportedPointerAccelerationProfiles</name>
        <qualifiedname>libinput_device::supportedPointerAccelerationProfiles</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="85" column="13" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a8fb48ad9b1cecc06e5c02b2bc42cfd4a" prot="public" static="no" mutable="no">
        <type>enum libinput_config_accel_profile</type>
        <definition>enum libinput_config_accel_profile libinput_device::defaultPointerAccelerationProfile</definition>
        <argsstring></argsstring>
        <name>defaultPointerAccelerationProfile</name>
        <qualifiedname>libinput_device::defaultPointerAccelerationProfile</qualifiedname>
        <initializer>= LIBINPUT_CONFIG_ACCEL_PROFILE_NONE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="86" column="39" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a7b003c8a64e08c14f256484aafb14d9f" prot="public" static="no" mutable="no">
        <type>enum libinput_config_accel_profile</type>
        <definition>enum libinput_config_accel_profile libinput_device::pointerAccelerationProfile</definition>
        <argsstring></argsstring>
        <name>pointerAccelerationProfile</name>
        <qualifiedname>libinput_device::pointerAccelerationProfile</qualifiedname>
        <initializer>= LIBINPUT_CONFIG_ACCEL_PROFILE_NONE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="87" column="39" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a680175d38dabe800c2bb28ed9dc125ea" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::setPointerAccelerationProfileReturnValue</definition>
        <argsstring></argsstring>
        <name>setPointerAccelerationProfileReturnValue</name>
        <qualifiedname>libinput_device::setPointerAccelerationProfileReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="88" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a3e7d3e588c49c12aebb08974b171feee" prot="public" static="no" mutable="no">
        <type>std::array&lt; float, 6 &gt;</type>
        <definition>std::array&lt;float, 6&gt; libinput_device::defaultCalibrationMatrix</definition>
        <argsstring></argsstring>
        <name>defaultCalibrationMatrix</name>
        <qualifiedname>libinput_device::defaultCalibrationMatrix</qualifiedname>
        <initializer>{{1.0f, 0.0f, 0.0f,
                                                   0.0f, 1.0f, 0.0f}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="89" column="16" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="89" bodyend="90"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1aac1bbc1982ad25f429af4f02cb7aecf3" prot="public" static="no" mutable="no">
        <type>std::array&lt; float, 6 &gt;</type>
        <definition>std::array&lt;float, 6&gt; libinput_device::calibrationMatrix</definition>
        <argsstring></argsstring>
        <name>calibrationMatrix</name>
        <qualifiedname>libinput_device::calibrationMatrix</qualifiedname>
        <initializer>{{1.0f, 0.0f, 0.0f,
                                            0.0f, 1.0f, 0.0f}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="91" column="16" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="91" bodyend="92"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1ad6e4df319d7450acde9ea173336ca387" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::defaultCalibrationMatrixIsIdentity</definition>
        <argsstring></argsstring>
        <name>defaultCalibrationMatrixIsIdentity</name>
        <qualifiedname>libinput_device::defaultCalibrationMatrixIsIdentity</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="93" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a9e04a11171472b788691bbe1f4871d4d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::calibrationMatrixIsIdentity</definition>
        <argsstring></argsstring>
        <name>calibrationMatrixIsIdentity</name>
        <qualifiedname>libinput_device::calibrationMatrixIsIdentity</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="94" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1abdaaeb4dd060a2a1d3f5765d2bd8a689" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::lidSwitch</definition>
        <argsstring></argsstring>
        <name>lidSwitch</name>
        <qualifiedname>libinput_device::lidSwitch</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="96" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1af931284e2b741dd538a01f4fd6b633c8" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::tabletModeSwitch</definition>
        <argsstring></argsstring>
        <name>tabletModeSwitch</name>
        <qualifiedname>libinput_device::tabletModeSwitch</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="97" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a49e6c8fcde34330a56e4d19d193d1cb9" prot="public" static="no" mutable="no">
        <type>quint32</type>
        <definition>quint32 libinput_device::supportedClickMethods</definition>
        <argsstring></argsstring>
        <name>supportedClickMethods</name>
        <qualifiedname>libinput_device::supportedClickMethods</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="98" column="13" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1adfdce7a18ffb42889f4473d7b5045603" prot="public" static="no" mutable="no">
        <type>enum libinput_config_click_method</type>
        <definition>enum libinput_config_click_method libinput_device::defaultClickMethod</definition>
        <argsstring></argsstring>
        <name>defaultClickMethod</name>
        <qualifiedname>libinput_device::defaultClickMethod</qualifiedname>
        <initializer>= LIBINPUT_CONFIG_CLICK_METHOD_NONE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="99" column="38" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1abd34442515d55e7054c71179d6ff74ae" prot="public" static="no" mutable="no">
        <type>enum libinput_config_click_method</type>
        <definition>enum libinput_config_click_method libinput_device::clickMethod</definition>
        <argsstring></argsstring>
        <name>clickMethod</name>
        <qualifiedname>libinput_device::clickMethod</qualifiedname>
        <initializer>= LIBINPUT_CONFIG_CLICK_METHOD_NONE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="100" column="38" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a398d0827c5c9c1f92cb31fe6c8675247" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libinput_device::setClickMethodReturnValue</definition>
        <argsstring></argsstring>
        <name>setClickMethodReturnValue</name>
        <qualifiedname>libinput_device::setClickMethodReturnValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="101" column="10" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a91de43c979333d12a134d964d26287b8" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t libinput_device::buttonCount</definition>
        <argsstring></argsstring>
        <name>buttonCount</name>
        <qualifiedname>libinput_device::buttonCount</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="102" column="14" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1a0fc8d0c17573fd033a5ba2c38c90ed47" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t libinput_device::stripCount</definition>
        <argsstring></argsstring>
        <name>stripCount</name>
        <qualifiedname>libinput_device::stripCount</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="103" column="14" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibinput__device_1af536e719bb8e75da57b389a714fcaa11" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t libinput_device::ringCount</definition>
        <argsstring></argsstring>
        <name>ringCount</name>
        <qualifiedname>libinput_device::ringCount</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/mock_libinput.h" line="104" column="14" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="104" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="kwin/autotests/libinput/mock_libinput.h" line="21" column="1" bodyfile="kwin/autotests/libinput/mock_libinput.h" bodystart="22" bodyend="105"/>
    <listofallmembers>
      <member refid="structlibinput__device_1a91de43c979333d12a134d964d26287b8" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>buttonCount</name></member>
      <member refid="structlibinput__device_1aac1bbc1982ad25f429af4f02cb7aecf3" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>calibrationMatrix</name></member>
      <member refid="structlibinput__device_1a9e04a11171472b788691bbe1f4871d4d" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>calibrationMatrixIsIdentity</name></member>
      <member refid="structlibinput__device_1abd34442515d55e7054c71179d6ff74ae" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>clickMethod</name></member>
      <member refid="structlibinput__device_1a3e7d3e588c49c12aebb08974b171feee" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>defaultCalibrationMatrix</name></member>
      <member refid="structlibinput__device_1ad6e4df319d7450acde9ea173336ca387" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>defaultCalibrationMatrixIsIdentity</name></member>
      <member refid="structlibinput__device_1adfdce7a18ffb42889f4473d7b5045603" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>defaultClickMethod</name></member>
      <member refid="structlibinput__device_1ab2f079ee3e411b00c50e688f75540cc4" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>defaultPointerAcceleration</name></member>
      <member refid="structlibinput__device_1a8fb48ad9b1cecc06e5c02b2bc42cfd4a" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>defaultPointerAccelerationProfile</name></member>
      <member refid="structlibinput__device_1aaf0dc6b349ebd24f5588b02735dc9e09" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>defaultScrollButton</name></member>
      <member refid="structlibinput__device_1a59c4f927875be7507a12eb159efbdcda" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>defaultScrollMethod</name></member>
      <member refid="structlibinput__device_1ac968350a91ff8f77fa7dd03dfc63724b" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>defaultTapButtonMap</name></member>
      <member refid="structlibinput__device_1ab258e327e63fd657dce457f31dbe5414" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>deviceSize</name></member>
      <member refid="structlibinput__device_1aa25d85ec2cf0ce22f05709afcb928527" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>deviceSizeReturnValue</name></member>
      <member refid="structlibinput__device_1a8003a8fa9572a004c038a4a367db4f65" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>disableEventsOnExternalMouse</name></member>
      <member refid="structlibinput__device_1a7f0e30a57bbda0e187831664ee8e35c0" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>disableWhileTyping</name></member>
      <member refid="structlibinput__device_1a41aba32393f00224ca5d3057a82c7b09" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>disableWhileTypingEnabledByDefault</name></member>
      <member refid="structlibinput__device_1a9a52319cd0c4703a39597e1d5faa2721" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>enabled</name></member>
      <member refid="structlibinput__device_1ae6309dcce9c1b7f90588cf39e704873a" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>gestureSupported</name></member>
      <member refid="structlibinput__device_1a4fd96063f8e89634134b0c557f580e35" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>keyboard</name></member>
      <member refid="structlibinput__device_1a4cd9c60067cb736c72871be99533e859" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>keys</name></member>
      <member refid="structlibinput__device_1a909f60737f14d9532cbaa8fcbda99b37" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>leftHanded</name></member>
      <member refid="structlibinput__device_1aa7ff6977b9ee94eb8165ba6cfca78fa0" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>leftHandedEnabledByDefault</name></member>
      <member refid="structlibinput__device_1abdaaeb4dd060a2a1d3f5765d2bd8a689" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>lidSwitch</name></member>
      <member refid="structlibinput__device_1a38cc31dc3ae9e2bc11f2c2537c35aa90" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>middleEmulation</name></member>
      <member refid="structlibinput__device_1ad56f2ef83209c9705d6f909f5b5d2998" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>middleEmulationEnabledByDefault</name></member>
      <member refid="structlibinput__device_1ab83e5162357f0da62c52d1d6c778283c" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>name</name></member>
      <member refid="structlibinput__device_1ab5c260b790dd9b7d68b47a3951ac5838" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>naturalScroll</name></member>
      <member refid="structlibinput__device_1acd983a2927387d4e1306025f4c49e267" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>naturalScrollEnabledByDefault</name></member>
      <member refid="structlibinput__device_1a4089d505fcda169b330e11c1da02f79b" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>outputName</name></member>
      <member refid="structlibinput__device_1ada23f7b711039e078a4c06542f66df4e" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>pointer</name></member>
      <member refid="structlibinput__device_1a730b0b3be992fb15ac957bd8979d7b60" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>pointerAcceleration</name></member>
      <member refid="structlibinput__device_1a7b003c8a64e08c14f256484aafb14d9f" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>pointerAccelerationProfile</name></member>
      <member refid="structlibinput__device_1af20fcbe52efa2aec4257402dda54b790" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>product</name></member>
      <member refid="structlibinput__device_1af536e719bb8e75da57b389a714fcaa11" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>ringCount</name></member>
      <member refid="structlibinput__device_1aaa3354dc1045d25fd5e9c806d191ce85" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>scrollButton</name></member>
      <member refid="structlibinput__device_1a618ebda6f1de44624e2874243a4f4d39" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>scrollMethod</name></member>
      <member refid="structlibinput__device_1a398d0827c5c9c1f92cb31fe6c8675247" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>setClickMethodReturnValue</name></member>
      <member refid="structlibinput__device_1ad7c17c3a5b1706e02a23b36e47640647" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>setDisableWhileTypingReturnValue</name></member>
      <member refid="structlibinput__device_1a8e6e2b108be5e178feff11cbf85d2d56" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>setEnableModeReturnValue</name></member>
      <member refid="structlibinput__device_1a5a034a8884ccac1eef0ddaa0e46d55a3" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>setLeftHandedReturnValue</name></member>
      <member refid="structlibinput__device_1a5ec3699d7580859d1cb4ee86b1fdf231" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>setMiddleEmulationReturnValue</name></member>
      <member refid="structlibinput__device_1a11f5390153807d9a4922365f89e4d0bd" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>setNaturalScrollReturnValue</name></member>
      <member refid="structlibinput__device_1a680175d38dabe800c2bb28ed9dc125ea" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>setPointerAccelerationProfileReturnValue</name></member>
      <member refid="structlibinput__device_1a5cc800aed9b662df8e0eb9bb4d6d21b3" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>setPointerAccelerationReturnValue</name></member>
      <member refid="structlibinput__device_1a2d4acbab3e296c969933e758909b54f3" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>setScrollButtonReturnValue</name></member>
      <member refid="structlibinput__device_1a07a305f0cef7e10f86a7347d8d499b96" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>setScrollMethodReturnValue</name></member>
      <member refid="structlibinput__device_1a36756cbe3aa0b6cc4086384b8cf26cc6" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>setTapAndDragReturnValue</name></member>
      <member refid="structlibinput__device_1a7579d57a161bfe51460fb30f577e206f" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>setTapButtonMapReturnValue</name></member>
      <member refid="structlibinput__device_1ae46b3dacdfcce77cc6fb202d3537191b" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>setTapDragLockReturnValue</name></member>
      <member refid="structlibinput__device_1ad6e00a3d3703c01da1d71e49f2502398" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>setTapToClickReturnValue</name></member>
      <member refid="structlibinput__device_1a0fc8d0c17573fd033a5ba2c38c90ed47" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>stripCount</name></member>
      <member refid="structlibinput__device_1afcc0ce381dac73e020a3d212ccf8fda8" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>supportedButtons</name></member>
      <member refid="structlibinput__device_1a49e6c8fcde34330a56e4d19d193d1cb9" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>supportedClickMethods</name></member>
      <member refid="structlibinput__device_1ae7602da7ca26ce6e2f44956c4b92676d" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>supportedPointerAccelerationProfiles</name></member>
      <member refid="structlibinput__device_1a0a3b9a4a588e1c17ce6b3f3ceb808756" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>supportedScrollMethods</name></member>
      <member refid="structlibinput__device_1a58b9847727fadbf3fa91636334b09d95" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>supportsCalibrationMatrix</name></member>
      <member refid="structlibinput__device_1a2bcf4f4ac5b09f680d75912043bd7cdb" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>supportsDisableEvents</name></member>
      <member refid="structlibinput__device_1ad27e8ead07a822fade528e2806f84121" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>supportsDisableEventsOnExternalMouse</name></member>
      <member refid="structlibinput__device_1a5ec5899579831f454d3b376c0d6eb300" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>supportsDisableWhileTyping</name></member>
      <member refid="structlibinput__device_1a1e35c325d7dc3d909a539dfec478f5b2" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>supportsLeftHanded</name></member>
      <member refid="structlibinput__device_1ade78bb6d6cb8c51b3ebe025bc5c1d777" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>supportsMiddleEmulation</name></member>
      <member refid="structlibinput__device_1af3342d9cb2a5e6e305e3e64ebcdd2827" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>supportsNaturalScroll</name></member>
      <member refid="structlibinput__device_1abe3ddee92e48025e6431e3a7aa45d49a" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>supportsPointerAcceleration</name></member>
      <member refid="structlibinput__device_1a1d05ca59d3df076b4ffccda3b08afb8e" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>switchDevice</name></member>
      <member refid="structlibinput__device_1ad97607dd2a577a81dfc1200acd3b426a" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>sysName</name></member>
      <member refid="structlibinput__device_1af931284e2b741dd538a01f4fd6b633c8" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>tabletModeSwitch</name></member>
      <member refid="structlibinput__device_1a1113858cd508b0889ef9158f254015bc" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>tabletTool</name></member>
      <member refid="structlibinput__device_1a9fa5aff2c39618894920afc7fb1eab69" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>tapAndDrag</name></member>
      <member refid="structlibinput__device_1ac368501f3db277884699d6e56a9ddac8" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>tapAndDragEnabledByDefault</name></member>
      <member refid="structlibinput__device_1abac8042f0358024b94033a561bbd69c0" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>tapButtonMap</name></member>
      <member refid="structlibinput__device_1a04163dc3b827d208e0ed2c07dcee783a" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>tapDragLock</name></member>
      <member refid="structlibinput__device_1a0cf70c440193906358ea1c6d6e7e395f" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>tapDragLockEnabledByDefault</name></member>
      <member refid="structlibinput__device_1aff21296824cba152e4ada24e863f58f6" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>tapEnabledByDefault</name></member>
      <member refid="structlibinput__device_1aec89d1ec0c69553d39e0dbf2c3857b9d" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>tapFingerCount</name></member>
      <member refid="structlibinput__device_1ae61e3cfd05819168fe78706e9c8f657f" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>tapToClick</name></member>
      <member refid="structlibinput__device_1a72efbd424f0f5c44a7cae9e59a89d0d0" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>touch</name></member>
      <member refid="structlibinput__device_1a87389644b4e55ac884d4a6ed37bb5603" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>userData</name></member>
      <member refid="structlibinput__device_1a0a001fc270a4350f86ac32d6063aab38" prot="public" virt="non-virtual"><scope>libinput_device</scope><name>vendor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
