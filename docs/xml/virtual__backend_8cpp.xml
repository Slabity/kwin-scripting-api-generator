<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="virtual__backend_8cpp" kind="file" language="C++">
    <compoundname>virtual_backend.cpp</compoundname>
    <includes refid="virtual__backend_8h" local="yes">virtual_backend.h</includes>
    <includes refid="drmdevice_8h" local="yes">core/drmdevice.h</includes>
    <includes refid="virtual__egl__backend_8h" local="yes">virtual_egl_backend.h</includes>
    <includes refid="virtual__output_8h" local="yes">virtual_output.h</includes>
    <includes refid="virtual__qpainter__backend_8h" local="yes">virtual_qpainter_backend.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">gbm.h</includes>
    <includes local="no">xf86drm.h</includes>
    <includes local="yes">moc_virtual_backend.cpp</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/backends/virtual/virtual_backend.cpp</label>
        <link refid="virtual__backend_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>virtual_backend.h</label>
        <link refid="virtual__backend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>virtual_egl_backend.h</label>
        <link refid="virtual__egl__backend_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>virtual_output.h</label>
        <link refid="virtual__output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>virtual_qpainter_backend.h</label>
        <link refid="virtual__qpainter__backend_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>core/drmdevice.h</label>
        <link refid="drmdevice_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>graphicsbufferallocator.h</label>
        <link refid="graphicsbufferallocator_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>core/outputbackend.h</label>
        <link refid="outputbackend_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>core/outputlayer.h</label>
        <link refid="outputlayer_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>opengl/eglcontext.h</label>
        <link refid="eglcontext_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>opengl/egldisplay.h</label>
        <link refid="egldisplay_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>opengl/gltexture.h</label>
        <link refid="gltexture_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>platformsupport/scenes/opengl/abstract_egl_backend.h</label>
        <link refid="abstract__egl__backend_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>platformsupport/scenes/opengl/openglbackend.h</label>
        <link refid="openglbackend_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>platformsupport/scenes/qpainter/qpainterbackend.h</label>
        <link refid="qpainterbackend_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>wayland/linuxdmabufv1clientbuffer.h</label>
        <link refid="linuxdmabufv1clientbuffer_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>QByteArray</label>
      </node>
      <node id="8">
        <label>QCoreApplication</label>
      </node>
      <node id="21">
        <label>QDebug</label>
      </node>
      <node id="41">
        <label>QExplicitlySharedDataPointer</label>
      </node>
      <node id="46">
        <label>QHash</label>
      </node>
      <node id="9">
        <label>QImage</label>
      </node>
      <node id="19">
        <label>QList</label>
      </node>
      <node id="57">
        <label>QMap</label>
      </node>
      <node id="17">
        <label>QMatrix4x4</label>
      </node>
      <node id="13">
        <label>QObject</label>
      </node>
      <node id="10">
        <label>QPoint</label>
      </node>
      <node id="35">
        <label>QPointer</label>
      </node>
      <node id="22">
        <label>QRect</label>
      </node>
      <node id="36">
        <label>QRegion</label>
      </node>
      <node id="52">
        <label>QSet</label>
      </node>
      <node id="20">
        <label>QSize</label>
      </node>
      <node id="44">
        <label>QStack</label>
      </node>
      <node id="29">
        <label>QString</label>
      </node>
      <node id="23">
        <label>QUuid</label>
      </node>
      <node id="11">
        <label>QVariant</label>
      </node>
      <node id="12">
        <label>QVector2D</label>
      </node>
      <node id="37">
        <label>chrono</label>
      </node>
      <node id="7">
        <label>config-kwin.h</label>
      </node>
      <node id="25">
        <label>epoxy/egl.h</label>
      </node>
      <node id="42">
        <label>epoxy/gl.h</label>
      </node>
      <node id="58">
        <label>fcntl.h</label>
      </node>
      <node id="59">
        <label>gbm.h</label>
      </node>
      <node id="4">
        <label>kwin_export.h</label>
      </node>
      <node id="26">
        <label>memory</label>
      </node>
      <node id="61">
        <label>moc_virtual_backend.cpp</label>
      </node>
      <node id="16">
        <label>optional</label>
      </node>
      <node id="30">
        <label>sys/types.h</label>
      </node>
      <node id="51">
        <label>utility</label>
      </node>
      <node id="53">
        <label>wayland-server.h</label>
      </node>
      <node id="60">
        <label>xf86drm.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2015<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="virtual__backend_8h" kindref="compound">virtual_backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drmdevice_8h" kindref="compound">core/drmdevice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="virtual__egl__backend_8h" kindref="compound">virtual_egl_backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="virtual__output_8h" kindref="compound">virtual_output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="virtual__qpainter__backend_8h" kindref="compound">virtual_qpainter_backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gbm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xf86drm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;DrmDevice&gt;<sp/>findRenderDevice()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>deviceCount<sp/>=<sp/>drmGetDevices2(0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deviceCount<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;drmDevice<sp/>*&gt;<sp/>devices(deviceCount);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(drmGetDevices2(0,<sp/>devices.data(),<sp/>devices.size())<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>deviceCleanup<sp/>=<sp/>qScopeGuard([&amp;devices]()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drmFreeDevices(devices.data(),<sp/>devices.size());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(drmDevice<sp/>*device<sp/>:<sp/>std::as_const(devices))<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>a<sp/>vgem<sp/>device,<sp/>prefer<sp/>the<sp/>primary<sp/>node<sp/>because<sp/>gbm<sp/>will<sp/>attempt<sp/>to<sp/>allocate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dumb<sp/>buffers<sp/>and<sp/>they<sp/>can<sp/>be<sp/>allocated<sp/>only<sp/>on<sp/>the<sp/>primary<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodeType<sp/>=<sp/>DRM_NODE_RENDER;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device-&gt;bustype<sp/>==<sp/>DRM_BUS_PLATFORM)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(device-&gt;businfo.platform-&gt;fullname,<sp/></highlight><highlight class="stringliteral">&quot;vgem&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeType<sp/>=<sp/>DRM_NODE_PRIMARY;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device-&gt;available_nodes<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>nodeType))<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="class_k_win_1_1_drm_device_1a355652b4cd9ca9f9bf15e22d88b53345" kindref="member">DrmDevice::open</ref>(device-&gt;nodes[nodeType]))<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_k_win_1_1_virtual_backend_1a8449eb46a614403231e52c7810e98f21" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_virtual_backend_1a8449eb46a614403231e52c7810e98f21" kindref="member">VirtualBackend::VirtualBackend</ref>(QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_output_backend_1a3059152d8eda13eaedd7eecad43e2470" kindref="member">OutputBackend</ref>(parent)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_drmDevice(findRenderDevice())</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_k_win_1_1_virtual_backend_1afed78b7c4cf9a2bc6f2a56ceeb7f8b1b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_virtual_backend_1afed78b7c4cf9a2bc6f2a56ceeb7f8b1b" kindref="member">VirtualBackend::~VirtualBackend</ref>()</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_k_win_1_1_virtual_backend_1a58fda48fe0c3baeb212272167d184d3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_virtual_backend_1a58fda48fe0c3baeb212272167d184d3c" kindref="member">VirtualBackend::initialize</ref>()</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_k_win_1_1_virtual_backend_1a482e8e39d83c434b3cc09b026ee7f94e" refkind="member"><highlight class="normal">QList&lt;CompositingType&gt;<sp/><ref refid="class_k_win_1_1_virtual_backend_1a482e8e39d83c434b3cc09b026ee7f94e" kindref="member">VirtualBackend::supportedCompositors</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="74"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;CompositingType&gt;<sp/>compositingTypes;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_drmDevice)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compositingTypes.append(<ref refid="namespace_k_win_1aa1e33474a7077a13169f350a5949a79aa9d91b030a3a42dc544de4de6f0d46b1d" kindref="member">OpenGLCompositing</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>compositingTypes.append(<ref refid="namespace_k_win_1aa1e33474a7077a13169f350a5949a79aa07ed99a9a85ecf1289dbf0ba42b92ed1" kindref="member">QPainterCompositing</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compositingTypes;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_k_win_1_1_virtual_backend_1abf36bf9b6556196913725f16f7b98d98" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref><sp/>*<ref refid="class_k_win_1_1_virtual_backend_1abf36bf9b6556196913725f16f7b98d98" kindref="member">VirtualBackend::drmDevice</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="84"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_drmDevice.get();</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_k_win_1_1_virtual_backend_1a08e897c0897c325597ca22014cc2a599" refkind="member"><highlight class="normal">std::unique_ptr&lt;QPainterBackend&gt;<sp/><ref refid="class_k_win_1_1_virtual_backend_1a08e897c0897c325597ca22014cc2a599" kindref="member">VirtualBackend::createQPainterBackend</ref>()</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;VirtualQPainterBackend&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="class_k_win_1_1_virtual_backend_1af388b8bb66786d57b01ef0ecf0397a79" refkind="member"><highlight class="normal">std::unique_ptr&lt;OpenGLBackend&gt;<sp/><ref refid="class_k_win_1_1_virtual_backend_1af388b8bb66786d57b01ef0ecf0397a79" kindref="member">VirtualBackend::createOpenGLBackend</ref>()</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;VirtualEglBackend&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_k_win_1_1_virtual_backend_1afcffd5189c002157756c5d7e6f932421" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_outputs" kindref="compound">Outputs</ref><sp/><ref refid="class_k_win_1_1_virtual_backend_1afcffd5189c002157756c5d7e6f932421" kindref="member">VirtualBackend::outputs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="99"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_outputs;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="class_k_win_1_1_virtual_output" kindref="compound">VirtualOutput</ref><sp/>*VirtualBackend::createOutput(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OutputInfo<sp/>&amp;info)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_virtual_output" kindref="compound">VirtualOutput</ref><sp/>*output<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_virtual_output" kindref="compound">VirtualOutput</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>info.internal,<sp/>info.physicalSizeInMM,<sp/>info.panelOrientation,<sp/>info.edid,<sp/>info.edidIdentifierOverride,<sp/>info.connectorName,<sp/>info.mstPath);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="class_k_win_1_1_virtual_output_1aafaee54227d35530735ba4a6a1c81a24" kindref="member">init</ref>(info.geometry.topLeft(),<sp/>info.geometry.size()<sp/>*<sp/>info.scale,<sp/>info.scale,<sp/>info.modes);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>m_outputs.append(output);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_output_backend_1a220e64d9c811434825b3c3bf1b28f947" kindref="member">outputAdded</ref>(output);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="class_k_win_1_1_virtual_output_1a1b28f7facceeb02eaa5df7ca8c369c25" kindref="member">updateEnabled</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_k_win_1_1_virtual_backend_1a2ac410edd7af624f375bdfccdc6202d6" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*<ref refid="class_k_win_1_1_virtual_backend_1a2ac410edd7af624f375bdfccdc6202d6" kindref="member">VirtualBackend::addOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_virtual_backend_1_1_output_info" kindref="compound">OutputInfo</ref><sp/>&amp;info)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_virtual_output" kindref="compound">VirtualOutput</ref><sp/>*output<sp/>=<sp/>createOutput(info);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_output_backend_1a1e1afd1a11ca71d300b7229d03d54be9" kindref="member">outputsQueried</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_k_win_1_1_virtual_backend_1afb5f89970c4a19482e75b9d3f82885b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_virtual_backend_1afb5f89970c4a19482e75b9d3f82885b0" kindref="member">VirtualBackend::setVirtualOutputs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;OutputInfo&gt;<sp/>&amp;infos)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;VirtualOutput<sp/>*&gt;<sp/>removed<sp/>=<sp/>m_outputs;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;info<sp/>:<sp/>infos)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createOutput(info);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_virtual_output" kindref="compound">VirtualOutput</ref><sp/>*output<sp/>:<sp/>removed)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;<ref refid="class_k_win_1_1_virtual_output_1a1b28f7facceeb02eaa5df7ca8c369c25" kindref="member">updateEnabled</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_outputs.removeOne(output);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_output_backend_1a8f804420de03806fd046f99e80ee8332" kindref="member">outputRemoved</ref>(output);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;<ref refid="class_k_win_1_1_output_1a036f0372f9a864df2bbb535b02b9a4c5" kindref="member">unref</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_output_backend_1a1e1afd1a11ca71d300b7229d03d54be9" kindref="member">outputsQueried</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_k_win_1_1_virtual_backend_1afaa0033e32aa4b49857f6054c3dcd0fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_virtual_backend_1afaa0033e32aa4b49857f6054c3dcd0fd" kindref="member">VirtualBackend::setEglDisplay</ref>(std::unique_ptr&lt;EglDisplay&gt;<sp/>&amp;&amp;display)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>m_display<sp/>=<sp/>std::move(display);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_k_win_1_1_virtual_backend_1ad4344d68f8677e5aadfb82061fd5634e" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref><sp/>*<ref refid="class_k_win_1_1_virtual_backend_1ad4344d68f8677e5aadfb82061fd5634e" kindref="member">VirtualBackend::sceneEglDisplayObject</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="144"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_display.get();</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_virtual_backend.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/backends/virtual/virtual_backend.cpp"/>
  </compounddef>
</doxygen>
