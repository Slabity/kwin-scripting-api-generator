<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="eglcontext_8cpp" kind="file" language="C++">
    <compoundname>eglcontext.cpp</compoundname>
    <includes refid="eglcontext_8h" local="yes">eglcontext.h</includes>
    <includes refid="graphicsbuffer_8h" local="yes">core/graphicsbuffer.h</includes>
    <includes refid="egldisplay_8h" local="yes">egldisplay.h</includes>
    <includes refid="eglimagetexture_8h" local="yes">eglimagetexture.h</includes>
    <includes refid="glframebuffer_8h" local="yes">glframebuffer.h</includes>
    <includes refid="glplatform_8h" local="yes">glplatform.h</includes>
    <includes refid="glshader_8h" local="yes">glshader.h</includes>
    <includes refid="glshadermanager_8h" local="yes">glshadermanager.h</includes>
    <includes refid="glvertexbuffer_8h" local="yes">glvertexbuffer.h</includes>
    <includes refid="glvertexbuffer__p_8h" local="yes">glvertexbuffer_p.h</includes>
    <includes refid="egl__context__attribute__builder_8h" local="yes">opengl/egl_context_attribute_builder.h</includes>
    <includes refid="eglutils__p_8h" local="yes">opengl/eglutils_p.h</includes>
    <includes refid="glutils_8h" local="yes">opengl/glutils.h</includes>
    <includes refid="common_8h" local="yes">utils/common.h</includes>
    <includes refid="drm__format__helper_8h" local="yes">utils/drm_format_helper.h</includes>
    <includes local="no">QOpenGLContext</includes>
    <includes local="no">drm_fourcc.h</includes>
    <incdepgraph>
      <node id="16">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>abstract_opengl_context_attribute_builder.h</label>
        <link refid="abstract__opengl__context__attribute__builder_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>opengl/egl_context_attribute_builder.h</label>
        <link refid="egl__context__attribute__builder_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/opengl/eglcontext.cpp</label>
        <link refid="eglcontext_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>eglcontext.h</label>
        <link refid="eglcontext_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>egldisplay.h</label>
        <link refid="egldisplay_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>eglimagetexture.h</label>
        <link refid="eglimagetexture_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>opengl/eglutils_p.h</label>
        <link refid="eglutils__p_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>glframebuffer.h</label>
        <link refid="glframebuffer_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>glplatform.h</label>
        <link refid="glplatform_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>glshader.h</label>
        <link refid="glshader_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>glshadermanager.h</label>
        <link refid="glshadermanager_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>opengl/gltexture.h</label>
        <link refid="gltexture_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>opengl/glutils.h</label>
        <link refid="glutils_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>glvertexbuffer_p.h</label>
        <link refid="glvertexbuffer__p_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>utils/drm_format_helper.h</label>
        <link refid="drm__format__helper_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>QByteArray</label>
      </node>
      <node id="44">
        <label>QColor</label>
      </node>
      <node id="9">
        <label>QCoreApplication</label>
      </node>
      <node id="22">
        <label>QDebug</label>
      </node>
      <node id="25">
        <label>QExplicitlySharedDataPointer</label>
      </node>
      <node id="48">
        <label>QFlags</label>
      </node>
      <node id="36">
        <label>QHash</label>
      </node>
      <node id="10">
        <label>QImage</label>
      </node>
      <node id="20">
        <label>QList</label>
      </node>
      <node id="62">
        <label>QLoggingCategory</label>
      </node>
      <node id="45">
        <label>QMatrix3x3</label>
      </node>
      <node id="18">
        <label>QMatrix4x4</label>
      </node>
      <node id="14">
        <label>QObject</label>
      </node>
      <node id="58">
        <label>QOpenGLContext</label>
      </node>
      <node id="11">
        <label>QPoint</label>
      </node>
      <node id="23">
        <label>QRect</label>
      </node>
      <node id="26">
        <label>QRegion</label>
      </node>
      <node id="41">
        <label>QSet</label>
      </node>
      <node id="21">
        <label>QSize</label>
      </node>
      <node id="30">
        <label>QStack</label>
      </node>
      <node id="29">
        <label>QString</label>
      </node>
      <node id="24">
        <label>QUuid</label>
      </node>
      <node id="12">
        <label>QVariant</label>
      </node>
      <node id="13">
        <label>QVector2D</label>
      </node>
      <node id="46">
        <label>QVector3D</label>
      </node>
      <node id="63">
        <label>climits</label>
      </node>
      <node id="8">
        <label>config-kwin.h</label>
      </node>
      <node id="67">
        <label>drm_fourcc.h</label>
      </node>
      <node id="31">
        <label>epoxy/egl.h</label>
      </node>
      <node id="27">
        <label>epoxy/gl.h</label>
      </node>
      <node id="60">
        <label>functional</label>
      </node>
      <node id="5">
        <label>kwin_export.h</label>
      </node>
      <node id="65">
        <label>libdrm/drm_fourcc.h</label>
      </node>
      <node id="49">
        <label>map</label>
      </node>
      <node id="42">
        <label>memory</label>
      </node>
      <node id="17">
        <label>optional</label>
      </node>
      <node id="51">
        <label>ranges</label>
      </node>
      <node id="52">
        <label>span</label>
      </node>
      <node id="66">
        <label>stdint.h</label>
      </node>
      <node id="37">
        <label>sys/types.h</label>
      </node>
      <node id="34">
        <label>utility</label>
      </node>
      <node id="54">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eglcontext_8h" kindref="compound">eglcontext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graphicsbuffer_8h" kindref="compound">core/graphicsbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="egldisplay_8h" kindref="compound">egldisplay.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eglimagetexture_8h" kindref="compound">eglimagetexture.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glframebuffer_8h" kindref="compound">glframebuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glplatform_8h" kindref="compound">glplatform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glshader_8h" kindref="compound">glshader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glshadermanager_8h" kindref="compound">glshadermanager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glvertexbuffer_8h" kindref="compound">glvertexbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glvertexbuffer__p_8h" kindref="compound">glvertexbuffer_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="egl__context__attribute__builder_8h" kindref="compound">opengl/egl_context_attribute_builder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eglutils__p_8h" kindref="compound">opengl/eglutils_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glutils_8h" kindref="compound">opengl/glutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">utils/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__format__helper_8h" kindref="compound">utils/drm_format_helper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QOpenGLContext&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drm_fourcc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="class_k_win_1_1_egl_context" kindref="compound">EglContext</ref><sp/>*EglContext::s_currentContext<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_k_win_1_1_egl_context_1aeb873299e38e057eede21c1759b1b5f7" refkind="member"><highlight class="normal">std::unique_ptr&lt;EglContext&gt;<sp/><ref refid="class_k_win_1_1_egl_context_1aeb873299e38e057eede21c1759b1b5f7" kindref="member">EglContext::create</ref>(<ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref><sp/>*display,<sp/>EGLConfig<sp/><ref refid="class_k_win_1_1_egl_context_1afb5a90b88923fd6a56ce88178849c86e" kindref="member">config</ref>,<sp/>::EGLContext<sp/>sharedContext)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a1c85c24decb725d0c713f1fec9b50c7c" kindref="member">handle</ref><sp/>=<sp/>createContext(display,<sp/><ref refid="class_k_win_1_1_egl_context_1afb5a90b88923fd6a56ce88178849c86e" kindref="member">config</ref>,<sp/>sharedContext);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_egl_context_1a1c85c24decb725d0c713f1fec9b50c7c" kindref="member">handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!eglMakeCurrent(display-&gt;<ref refid="class_k_win_1_1_egl_display_1ac973be65040c0fd4bf08c77d65d2b96d" kindref="member">handle</ref>(),<sp/>EGL_NO_SURFACE,<sp/>EGL_NO_SURFACE,<sp/><ref refid="class_k_win_1_1_egl_context_1a1c85c24decb725d0c713f1fec9b50c7c" kindref="member">handle</ref>))<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eglDestroyContext(display-&gt;<ref refid="class_k_win_1_1_egl_display_1ac973be65040c0fd4bf08c77d65d2b96d" kindref="member">handle</ref>(),<sp/><ref refid="class_k_win_1_1_egl_context_1a1c85c24decb725d0c713f1fec9b50c7c" kindref="member">handle</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>std::make_unique&lt;EglContext&gt;(display,<sp/><ref refid="class_k_win_1_1_egl_context_1afb5a90b88923fd6a56ce88178849c86e" kindref="member">config</ref>,<sp/><ref refid="class_k_win_1_1_egl_context_1a1c85c24decb725d0c713f1fec9b50c7c" kindref="member">handle</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>s_currentContext<sp/>=<sp/>ret.get();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret-&gt;checkSupported())<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QSet&lt;QByteArray&gt;<sp/>getExtensions(<ref refid="class_k_win_1_1_egl_context" kindref="compound">EglContext</ref><sp/>*context)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>QSet&lt;QByteArray&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!context-&gt;<ref refid="class_k_win_1_1_egl_context_1ae6ad9a29ca4080693f10a1b65d75913d" kindref="member">isOpenGLES</ref>()<sp/>&amp;&amp;<sp/>context-&gt;<ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">hasVersion</ref>(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetIntegerv(GL_NUM_EXTENSIONS,<sp/>&amp;count);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)glGetStringi(GL_EXTENSIONS,<sp/>i);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.insert(name);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>extensions<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)glGetString(GL_EXTENSIONS);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;QByteArray&gt;<sp/>extensionsList<sp/>=<sp/>extensions.split(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>{extensionsList.constBegin(),<sp/>extensionsList.constEnd()};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkTextureSwizzleSupport(<ref refid="class_k_win_1_1_egl_context" kindref="compound">EglContext</ref><sp/>*context)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;isOpenGLES())<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;hasVersion(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;hasVersion(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>3))<sp/>||<sp/>context-&gt;hasOpenglExtension(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_ARB_texture_swizzle&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkTextureStorageSupport(<ref refid="class_k_win_1_1_egl_context" kindref="compound">EglContext</ref><sp/>*context)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;isOpenGLES())<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;hasVersion(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0))<sp/>||<sp/>context-&gt;hasOpenglExtension(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_EXT_texture_storage&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;hasVersion(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(4,<sp/>2))<sp/>||<sp/>context-&gt;hasOpenglExtension(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_ARB_texture_storage&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkIndexedQuads(<ref refid="class_k_win_1_1_egl_context" kindref="compound">EglContext</ref><sp/>*context)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;isOpenGLES())<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveBaseVertex<sp/>=<sp/>context-&gt;hasOpenglExtension(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_OES_draw_elements_base_vertex&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveCopyBuffer<sp/>=<sp/>context-&gt;hasVersion(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>haveBaseVertex<sp/>&amp;&amp;<sp/>haveCopyBuffer<sp/>&amp;&amp;<sp/>context-&gt;hasMapBufferRange();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveBaseVertex<sp/>=<sp/>context-&gt;hasVersion(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>2))<sp/>||<sp/>context-&gt;hasOpenglExtension(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_ARB_draw_elements_base_vertex&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveCopyBuffer<sp/>=<sp/>context-&gt;hasVersion(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>1))<sp/>||<sp/>context-&gt;hasOpenglExtension(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_ARB_copy_buffer&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>haveBaseVertex<sp/>&amp;&amp;<sp/>haveCopyBuffer<sp/>&amp;&amp;<sp/>context-&gt;hasMapBufferRange();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="namespace_k_win_1a562c4f858823cac192b96aa2d532ead7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="namespace_k_win_1a562c4f858823cac192b96aa2d532ead7" kindref="member">eglFuncPtr</ref>)();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a562c4f858823cac192b96aa2d532ead7" kindref="member">eglFuncPtr</ref><sp/>getProcAddress(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eglGetProcAddress(name);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="class_k_win_1_1_egl_context_1a5fb783e6e2ab84d45cd1917ddd3565d7" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_egl_context_1a5fb783e6e2ab84d45cd1917ddd3565d7" kindref="member">EglContext::EglContext</ref>(<ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref><sp/>*display,<sp/>EGLConfig<sp/><ref refid="class_k_win_1_1_egl_context_1afb5a90b88923fd6a56ce88178849c86e" kindref="member">config</ref>,<sp/>::EGLContext<sp/>context)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_versionString((const<sp/>char<sp/>*)glGetString(GL_VERSION))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_version(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>::parseString(m_versionString))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_glslVersionString((const<sp/>char<sp/>*)glGetString(GL_SHADING_LANGUAGE_VERSION))</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_glslVersion(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>::parseString(m_glslVersionString))</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_vendor((const<sp/>char<sp/>*)glGetString(GL_VENDOR))</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_renderer((const<sp/>char<sp/>*)glGetString(GL_RENDERER))</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_isOpenglES(m_versionString.startsWith(</highlight><highlight class="stringliteral">&quot;OpenGL<sp/>ES&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_extensions(getExtensions(this))</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsTimerQueries(checkTimerQuerySupport())</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsTextureStorage(checkTextureStorageSupport(this))</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsTextureSwizzle(checkTextureSwizzleSupport(this))</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsARGB32Textures(!m_isOpenglES<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_EXT_texture_format_BGRA8888&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsRGTextures(<ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">hasVersion</ref>(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0))<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_ARB_texture_rg&quot;</highlight><highlight class="normal">))<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_EXT_texture_rg&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supports16BitTextures(!m_isOpenglES<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_EXT_texture_norm16&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsBlits(!m_isOpenglES<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">hasVersion</ref>(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0)))</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsPackedDepthStencil(<ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">hasVersion</ref>(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0))<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_OES_packed_depth_stencil&quot;</highlight><highlight class="normal">))<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_ARB_framebuffer_object&quot;</highlight><highlight class="normal">))<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_EXT_packed_depth_stencil&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsGLES24BitDepthBuffers(m_isOpenglES<sp/>&amp;&amp;<sp/>(<ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">hasVersion</ref>(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0))<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_OES_depth24&quot;</highlight><highlight class="normal">))))</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_hasMapBufferRange(<ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">hasVersion</ref>(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0))<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_EXT_map_buffer_range&quot;</highlight><highlight class="normal">))<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_ARB_map_buffer_range&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_haveBufferStorage((!m_isOpenglES<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">hasVersion</ref>(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(4,<sp/>4)))<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_ARB_buffer_storage&quot;</highlight><highlight class="normal">))<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_EXT_buffer_storage&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_haveSyncFences((m_isOpenglES<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">hasVersion</ref>(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0)))<sp/>||<sp/>(!m_isOpenglES<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">hasVersion</ref>(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>2)))<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_ARB_sync&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsIndexedQuads(checkIndexedQuads(this))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsPackInvert(<ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_MESA_pack_invert&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_glPlatform(std::make_unique&lt;<ref refid="class_k_win_1_1_g_l_platform" kindref="compound">GLPlatform</ref>&gt;(m_versionString,<sp/>m_glslVersionString,<sp/>m_renderer,<sp/>m_vendor))</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_display(display)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_handle(context)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_config(<ref refid="class_k_win_1_1_egl_context_1afb5a90b88923fd6a56ce88178849c86e" kindref="member">config</ref>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_shaderManager(std::make_unique&lt;<ref refid="class_k_win_1_1_shader_manager" kindref="compound">ShaderManager</ref>&gt;())</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_streamingBuffer(std::make_unique&lt;<ref refid="class_k_win_1_1_g_l_vertex_buffer" kindref="compound">GLVertexBuffer</ref>&gt;(<ref refid="class_k_win_1_1_g_l_vertex_buffer" kindref="compound">GLVertexBuffer</ref>::Stream))</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_indexBuffer(std::make_unique&lt;<ref refid="class_k_win_1_1_index_buffer" kindref="compound">IndexBuffer</ref>&gt;())</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>glResolveFunctions(&amp;getProcAddress);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>initDebugOutput();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_egl_context_1a62fedabc86871e2a0f535bd5fddfd4b8" kindref="member">haveBufferStorage</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_egl_context_1a925d4b662895f8920343f662753c4426" kindref="member">haveSyncFences</ref>())<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qgetenv(</highlight><highlight class="stringliteral">&quot;KWIN_PERSISTENT_VBO&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_streamingBuffer-&gt;setPersistent();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>not<sp/>legal<sp/>to<sp/>not<sp/>have<sp/>a<sp/>vertex<sp/>array<sp/>object<sp/>bound<sp/>in<sp/>a<sp/>core<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>code<sp/>handling<sp/>old<sp/>and<sp/>new<sp/>OpenGL<sp/>versions<sp/>easier,<sp/>bind<sp/>a<sp/>dummy<sp/>vao<sp/>that&apos;s<sp/>used<sp/>for<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_egl_context_1ae6ad9a29ca4080693f10a1b65d75913d" kindref="member">isOpenGLES</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_ARB_vertex_array_object&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGenVertexArrays(1,<sp/>&amp;m_vao);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindVertexArray(m_vao);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="class_k_win_1_1_egl_context_1ae55e028aef7d360e449dc2698fe619fd" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_egl_context_1ae55e028aef7d360e449dc2698fe619fd" kindref="member">EglContext::~EglContext</ref>()</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_context_1abb764b8cb2639804d83fc6294c82b764" kindref="member">makeCurrent</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_vao)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteVertexArrays(1,<sp/>&amp;m_vao);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shaderManager.reset();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>m_streamingBuffer.reset();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>m_indexBuffer.reset();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_context_1a0e78d19a46cbf352cf374188af992508" kindref="member">doneCurrent</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>eglDestroyContext(m_display-&gt;handle(),<sp/>m_handle);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="class_k_win_1_1_egl_context_1abb764b8cb2639804d83fc6294c82b764" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1abb764b8cb2639804d83fc6294c82b764" kindref="member">EglContext::makeCurrent</ref>()</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1abb764b8cb2639804d83fc6294c82b764" kindref="member">makeCurrent</ref>(EGL_NO_SURFACE);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="class_k_win_1_1_egl_context_1a81273e0fec90c9c7ca952ca7aa4bed74" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1abb764b8cb2639804d83fc6294c82b764" kindref="member">EglContext::makeCurrent</ref>(EGLSurface<sp/>surface)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QOpenGLContext<sp/>*context<sp/>=<sp/>QOpenGLContext::currentContext())<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Workaround<sp/>to<sp/>tell<sp/>Qt<sp/>that<sp/>no<sp/>QOpenGLContext<sp/>is<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;doneCurrent();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>eglMakeCurrent(m_display-&gt;handle(),<sp/>surface,<sp/>surface,<sp/>m_handle)<sp/>==<sp/>EGL_TRUE;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_currentContext<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_k_win_1_1_egl_context_1a0e78d19a46cbf352cf374188af992508" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a0e78d19a46cbf352cf374188af992508" kindref="member">EglContext::doneCurrent</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="185"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>eglMakeCurrent(m_display-&gt;handle(),<sp/>EGL_NO_SURFACE,<sp/>EGL_NO_SURFACE,<sp/>EGL_NO_CONTEXT);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>s_currentContext<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_k_win_1_1_egl_context_1a5bcde5c7537c45cde7cd70d0c7033587" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref><sp/>*<ref refid="class_k_win_1_1_egl_context_1a5bcde5c7537c45cde7cd70d0c7033587" kindref="member">EglContext::displayObject</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="191"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_display;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="class_k_win_1_1_egl_context_1a1c85c24decb725d0c713f1fec9b50c7c" refkind="member"><highlight class="normal">::EGLContext<sp/><ref refid="class_k_win_1_1_egl_context_1a1c85c24decb725d0c713f1fec9b50c7c" kindref="member">EglContext::handle</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="196"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_handle;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="class_k_win_1_1_egl_context_1afb5a90b88923fd6a56ce88178849c86e" refkind="member"><highlight class="normal">EGLConfig<sp/><ref refid="class_k_win_1_1_egl_context_1afb5a90b88923fd6a56ce88178849c86e" kindref="member">EglContext::config</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="201"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_config;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="class_k_win_1_1_egl_context_1a7f96be09c7bf578f8f52148b482a8426" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a7f96be09c7bf578f8f52148b482a8426" kindref="member">EglContext::isValid</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="206"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_display<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>m_handle<sp/>!=<sp/>EGL_NO_CONTEXT;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldUseOpenGLES()</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qstrcmp(qgetenv(</highlight><highlight class="stringliteral">&quot;KWIN_COMPOSE&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;O2ES&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QOpenGLContext::openGLModuleType()<sp/>==<sp/>QOpenGLContext::LibGLES;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">::EGLContext<sp/>EglContext::createContext(<ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref><sp/>*display,<sp/>EGLConfig<sp/>config,<sp/>::EGLContext<sp/>sharedContext)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveRobustness<sp/>=<sp/>display-&gt;<ref refid="class_k_win_1_1_egl_display_1a08f9eed27e9e5b8b10547e467b5615cc" kindref="member">hasExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;EGL_EXT_create_context_robustness&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveCreateContext<sp/>=<sp/>display-&gt;hasExtension(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;EGL_KHR_create_context&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveContextPriority<sp/>=<sp/>display-&gt;hasExtension(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;EGL_IMG_context_priority&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveResetOnVideoMemoryPurge<sp/>=<sp/>display-&gt;hasExtension(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;EGL_NV_robustness_video_memory_purge&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr&lt;AbstractOpenGLContextAttributeBuilder&gt;&gt;<sp/>candidates;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldUseOpenGLES())<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveCreateContext<sp/>&amp;&amp;<sp/>haveRobustness<sp/>&amp;&amp;<sp/>haveContextPriority<sp/>&amp;&amp;<sp/>haveResetOnVideoMemoryPurge)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glesRobustPriority<sp/>=<sp/>std::make_unique&lt;EglOpenGLESContextAttributeBuilder&gt;();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glesRobustPriority-&gt;setResetOnVideoMemoryPurge(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glesRobustPriority-&gt;setVersion(2);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glesRobustPriority-&gt;setRobust(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glesRobustPriority-&gt;setHighPriority(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.push_back(std::move(glesRobustPriority));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveCreateContext<sp/>&amp;&amp;<sp/>haveRobustness<sp/>&amp;&amp;<sp/>haveContextPriority)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glesRobustPriority<sp/>=<sp/>std::make_unique&lt;EglOpenGLESContextAttributeBuilder&gt;();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glesRobustPriority-&gt;setVersion(2);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glesRobustPriority-&gt;setRobust(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glesRobustPriority-&gt;setHighPriority(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.push_back(std::move(glesRobustPriority));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveCreateContext<sp/>&amp;&amp;<sp/>haveRobustness)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glesRobust<sp/>=<sp/>std::make_unique&lt;EglOpenGLESContextAttributeBuilder&gt;();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glesRobust-&gt;setVersion(2);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glesRobust-&gt;setRobust(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.push_back(std::move(glesRobust));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveContextPriority)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glesPriority<sp/>=<sp/>std::make_unique&lt;EglOpenGLESContextAttributeBuilder&gt;();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glesPriority-&gt;setVersion(2);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glesPriority-&gt;setHighPriority(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.push_back(std::move(glesPriority));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gles<sp/>=<sp/>std::make_unique&lt;EglOpenGLESContextAttributeBuilder&gt;();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gles-&gt;setVersion(2);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.push_back(std::move(gles));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveCreateContext)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveRobustness<sp/>&amp;&amp;<sp/>haveContextPriority<sp/>&amp;&amp;<sp/>haveResetOnVideoMemoryPurge)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>robustCorePriority<sp/>=<sp/>std::make_unique&lt;EglContextAttributeBuilder&gt;();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robustCorePriority-&gt;setResetOnVideoMemoryPurge(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robustCorePriority-&gt;setVersion(3,<sp/>1);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robustCorePriority-&gt;setRobust(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robustCorePriority-&gt;setHighPriority(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.push_back(std::move(robustCorePriority));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveRobustness<sp/>&amp;&amp;<sp/>haveContextPriority)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>robustCorePriority<sp/>=<sp/>std::make_unique&lt;EglContextAttributeBuilder&gt;();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robustCorePriority-&gt;setVersion(3,<sp/>1);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robustCorePriority-&gt;setRobust(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robustCorePriority-&gt;setHighPriority(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.push_back(std::move(robustCorePriority));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveRobustness)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>robustCore<sp/>=<sp/>std::make_unique&lt;EglContextAttributeBuilder&gt;();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robustCore-&gt;setVersion(3,<sp/>1);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robustCore-&gt;setRobust(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.push_back(std::move(robustCore));</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveContextPriority)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>corePriority<sp/>=<sp/>std::make_unique&lt;EglContextAttributeBuilder&gt;();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corePriority-&gt;setVersion(3,<sp/>1);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corePriority-&gt;setHighPriority(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.push_back(std::move(corePriority));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>core<sp/>=<sp/>std::make_unique&lt;EglContextAttributeBuilder&gt;();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>core-&gt;setVersion(3,<sp/>1);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.push_back(std::move(core));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveRobustness<sp/>&amp;&amp;<sp/>haveCreateContext<sp/>&amp;&amp;<sp/>haveContextPriority)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>robustPriority<sp/>=<sp/>std::make_unique&lt;EglContextAttributeBuilder&gt;();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robustPriority-&gt;setRobust(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robustPriority-&gt;setHighPriority(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.push_back(std::move(robustPriority));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveRobustness<sp/>&amp;&amp;<sp/>haveCreateContext)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>robust<sp/>=<sp/>std::make_unique&lt;EglContextAttributeBuilder&gt;();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robust-&gt;setRobust(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.push_back(std::move(robust));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.emplace_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>EglContextAttributeBuilder);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;candidate<sp/>:<sp/>candidates)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>attribs<sp/>=<sp/>candidate-&gt;build();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::EGLContext<sp/>ctx<sp/>=<sp/>eglCreateContext(display-&gt;handle(),<sp/><ref refid="class_k_win_1_1_egl_context_1afb5a90b88923fd6a56ce88178849c86e" kindref="member">config</ref>,<sp/>sharedContext,<sp/>attribs.data());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx<sp/>!=<sp/>EGL_NO_CONTEXT)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>EGL<sp/>context<sp/>with<sp/>attributes:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>candidate.get();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctx;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>qCCritical(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Create<sp/>Context<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>getEglErrorString();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EGL_NO_CONTEXT;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="class_k_win_1_1_egl_context_1a5fbfcf763c85aaba1900c299388c0f60" refkind="member"><highlight class="normal">std::shared_ptr&lt;GLTexture&gt;<sp/><ref refid="class_k_win_1_1_egl_context_1a5fbfcf763c85aaba1900c299388c0f60" kindref="member">EglContext::importDmaBufAsTexture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_dma_buf_attributes" kindref="compound">DmaBufAttributes</ref><sp/>&amp;attributes)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="318"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="eglimagetexture_8h_1ac56f71530c81ade3ddaab91f45696909" kindref="member">EGLImageKHR</ref><sp/>image<sp/>=<sp/>m_display-&gt;importDmaBufAsImage(attributes);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image<sp/>!=<sp/>EGL_NO_IMAGE_KHR)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>info<sp/>=<sp/><ref refid="struct_k_win_1_1_format_info_1ac87e6ab7ac1b0edeba780ccbf6dc7111" kindref="member">FormatInfo::get</ref>(attributes.<ref refid="struct_k_win_1_1_dma_buf_attributes_1aa8ab574dc34b0c719d7545e55806039a" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1aa3d73c1663aaaa8611fcef846fc78742" kindref="member">EGLImageTexture::create</ref>(m_display,<sp/>image,<sp/>info<sp/>?<sp/>info-&gt;openglFormat<sp/>:<sp/>GL_RGBA8,<sp/>QSize(attributes.<ref refid="struct_k_win_1_1_dma_buf_attributes_1ad5e82b69d910a1180ab274332664c88c" kindref="member">width</ref>,<sp/>attributes.<ref refid="struct_k_win_1_1_dma_buf_attributes_1ad574e4be854c8ae0f7a1b32944726ebb" kindref="member">height</ref>),<sp/>m_display-&gt;isExternalOnly(attributes.<ref refid="struct_k_win_1_1_dma_buf_attributes_1aa8ab574dc34b0c719d7545e55806039a" kindref="member">format</ref>,<sp/>attributes.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a40409bb8f50422f5e9181b7557293a33" kindref="member">modifier</ref>));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>creating<sp/>EGLImageKHR:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>getEglErrorString();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EglContext::checkTimerQuerySupport()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="330"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qEnvironmentVariableIsSet(</highlight><highlight class="stringliteral">&quot;KWIN_NO_TIMER_QUERY&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_isOpenglES)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.0<sp/>is<sp/>required<sp/>so<sp/>query<sp/>functions<sp/>can<sp/>be<sp/>used<sp/>without<sp/>&quot;EXT&quot;<sp/>suffix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timer<sp/>queries<sp/>are<sp/>still<sp/>not<sp/>part<sp/>of<sp/>the<sp/>core<sp/>OpenGL<sp/>ES<sp/>specification.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1aaebe566ceda47f1a5c34252262c826ed" kindref="member">openglVersion</ref>()<sp/>&gt;=<sp/>Version(3,<sp/>0)<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(</highlight><highlight class="stringliteral">&quot;GL_EXT_disjoint_timer_query&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1aaebe566ceda47f1a5c34252262c826ed" kindref="member">openglVersion</ref>()<sp/>&gt;=<sp/>Version(3,<sp/>3)<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(</highlight><highlight class="stringliteral">&quot;GL_ARB_timer_query&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">EglContext::hasVersion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_version" kindref="compound">Version</ref><sp/>&amp;<ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="344"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_version<sp/>&gt;=<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="class_k_win_1_1_egl_context_1ace947cf045be606cb54c3407e352ae66" refkind="member"><highlight class="normal">QByteArrayView<sp/><ref refid="class_k_win_1_1_egl_context_1ace947cf045be606cb54c3407e352ae66" kindref="member">EglContext::openglVersionString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="349"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_versionString;</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="class_k_win_1_1_egl_context_1aaebe566ceda47f1a5c34252262c826ed" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_version" kindref="compound">Version</ref><sp/><ref refid="class_k_win_1_1_egl_context_1aaebe566ceda47f1a5c34252262c826ed" kindref="member">EglContext::openglVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="354"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_version;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="class_k_win_1_1_egl_context_1ab9b8e2ba8f054c09b34b1e1eec061fe7" refkind="member"><highlight class="normal">QByteArrayView<sp/><ref refid="class_k_win_1_1_egl_context_1ab9b8e2ba8f054c09b34b1e1eec061fe7" kindref="member">EglContext::glslVersionString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="359"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_glslVersionString;</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="class_k_win_1_1_egl_context_1ab09d4f9cf7538ded73368ecb27f04f4f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_version" kindref="compound">Version</ref><sp/><ref refid="class_k_win_1_1_egl_context_1ab09d4f9cf7538ded73368ecb27f04f4f" kindref="member">EglContext::glslVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="364"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_glslVersion;</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="class_k_win_1_1_egl_context_1af5d2a67def4f0a8f561e9bdcd444c4d8" refkind="member"><highlight class="normal">QByteArrayView<sp/><ref refid="class_k_win_1_1_egl_context_1af5d2a67def4f0a8f561e9bdcd444c4d8" kindref="member">EglContext::vendor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="369"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_vendor;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="class_k_win_1_1_egl_context_1aa1e406f3f419bec03cbc8aed3d716d6d" refkind="member"><highlight class="normal">QByteArrayView<sp/><ref refid="class_k_win_1_1_egl_context_1aa1e406f3f419bec03cbc8aed3d716d6d" kindref="member">EglContext::renderer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="374"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_renderer;</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="class_k_win_1_1_egl_context_1ae6ad9a29ca4080693f10a1b65d75913d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1ae6ad9a29ca4080693f10a1b65d75913d" kindref="member">EglContext::isOpenGLES</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="379"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_isOpenglES;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">EglContext::hasOpenglExtension</ref>(QByteArrayView<sp/>name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="384"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::any_of(m_extensions.cbegin(),<sp/>m_extensions.cend(),<sp/>[name](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>string<sp/>==<sp/>name;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="class_k_win_1_1_egl_context_1aa6c75d907d84aa4853e0191cba14a228" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1aa6c75d907d84aa4853e0191cba14a228" kindref="member">EglContext::isSoftwareRenderer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="391"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_renderer.contains(</highlight><highlight class="stringliteral">&quot;softpipe&quot;</highlight><highlight class="normal">)<sp/>||<sp/>m_renderer.contains(</highlight><highlight class="stringliteral">&quot;Software<sp/>Rasterizer&quot;</highlight><highlight class="normal">)<sp/>||<sp/>m_renderer.contains(</highlight><highlight class="stringliteral">&quot;llvmpipe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="class_k_win_1_1_egl_context_1aa2806629c541d81ece8f1e7f028deada" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1aa2806629c541d81ece8f1e7f028deada" kindref="member">EglContext::supportsTimerQueries</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="396"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_supportsTimerQueries;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="class_k_win_1_1_egl_context_1aabca4479078564a5848cfb5ca68d4d07" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1aabca4479078564a5848cfb5ca68d4d07" kindref="member">EglContext::supportsTextureStorage</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="401"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_supportsTextureStorage;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="class_k_win_1_1_egl_context_1ae2e8167dcab5a4a4e8cbb68c5ddaafc6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1ae2e8167dcab5a4a4e8cbb68c5ddaafc6" kindref="member">EglContext::supportsTextureSwizzle</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="406"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_supportsTextureSwizzle;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="class_k_win_1_1_egl_context_1a13fa4324fe832b65a2b97aa7a5fc5ce6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a13fa4324fe832b65a2b97aa7a5fc5ce6" kindref="member">EglContext::supportsARGB32Textures</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="411"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_supportsARGB32Textures;</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="class_k_win_1_1_egl_context_1a22ea62bd16c4777d7c32581ec7b019f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a22ea62bd16c4777d7c32581ec7b019f3" kindref="member">EglContext::supportsRGTextures</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="416"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_supportsRGTextures;</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="class_k_win_1_1_egl_context_1ab2551e4964e4dfbe3c1ef5377e56e8b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1ab2551e4964e4dfbe3c1ef5377e56e8b2" kindref="member">EglContext::supports16BitTextures</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="421"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_supports16BitTextures;</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="class_k_win_1_1_egl_context_1ab051f0f47b4e70303bfee727f2bb61e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1ab051f0f47b4e70303bfee727f2bb61e0" kindref="member">EglContext::supportsBlits</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="426"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_supportsBlits;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="class_k_win_1_1_egl_context_1aa904ba92a44f5ed881560dd372e69c5d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1aa904ba92a44f5ed881560dd372e69c5d" kindref="member">EglContext::supportsGLES24BitDepthBuffers</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="431"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_supportsGLES24BitDepthBuffers;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="class_k_win_1_1_egl_context_1a62fedabc86871e2a0f535bd5fddfd4b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a62fedabc86871e2a0f535bd5fddfd4b8" kindref="member">EglContext::haveBufferStorage</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="436"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_haveBufferStorage;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="class_k_win_1_1_egl_context_1a6461c537a13cd93b9aa6166b130e0099" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a6461c537a13cd93b9aa6166b130e0099" kindref="member">EglContext::hasMapBufferRange</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="441"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_hasMapBufferRange;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="class_k_win_1_1_egl_context_1a925d4b662895f8920343f662753c4426" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a925d4b662895f8920343f662753c4426" kindref="member">EglContext::haveSyncFences</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="446"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_haveSyncFences;</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="class_k_win_1_1_egl_context_1a1afa6e7f8c77ee2a7aacbe85a466bad6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a1afa6e7f8c77ee2a7aacbe85a466bad6" kindref="member">EglContext::supportsPackInvert</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="451"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_supportsPackInvert;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="class_k_win_1_1_egl_context_1a6aab09331e3ee1754d6c97f6b41b6e98" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_shader_manager" kindref="compound">ShaderManager</ref><sp/>*<ref refid="class_k_win_1_1_egl_context_1a6aab09331e3ee1754d6c97f6b41b6e98" kindref="member">EglContext::shaderManager</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="456"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_shaderManager.get();</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="class_k_win_1_1_egl_context_1a53e9229acbd52fb5cae93f78755396f5" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_vertex_buffer" kindref="compound">GLVertexBuffer</ref><sp/>*<ref refid="class_k_win_1_1_egl_context_1a53e9229acbd52fb5cae93f78755396f5" kindref="member">EglContext::streamingVbo</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="461"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_streamingBuffer.get();</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="class_k_win_1_1_egl_context_1ae26ab62c890706e02750f4ce30976e84" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_index_buffer" kindref="compound">IndexBuffer</ref><sp/>*<ref refid="class_k_win_1_1_egl_context_1ae26ab62c890706e02750f4ce30976e84" kindref="member">EglContext::indexBuffer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="466"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_indexBuffer.get();</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="class_k_win_1_1_egl_context_1af171627a8005c9ef8a5259d61ec7bd29" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_platform" kindref="compound">GLPlatform</ref><sp/>*<ref refid="class_k_win_1_1_egl_context_1af171627a8005c9ef8a5259d61ec7bd29" kindref="member">EglContext::glPlatform</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="471"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_glPlatform.get();</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="class_k_win_1_1_egl_context_1a6b4d12e3cb98feaf4768a2f21d56273d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a6b4d12e3cb98feaf4768a2f21d56273d" kindref="member">EglContext::checkSupported</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="476"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supportsGLSL<sp/>=<sp/>m_isOpenglES<sp/>||<sp/>(<ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(</highlight><highlight class="stringliteral">&quot;GL_ARB_shader_objects&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(</highlight><highlight class="stringliteral">&quot;GL_ARB_fragment_shader&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(</highlight><highlight class="stringliteral">&quot;GL_ARB_vertex_shader&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supportsNonPowerOfTwoTextures<sp/>=<sp/>m_isOpenglES<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(</highlight><highlight class="stringliteral">&quot;GL_ARB_texture_non_power_of_two&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supports3DTextures<sp/>=<sp/>!m_isOpenglES<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">hasVersion</ref>(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0))<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(</highlight><highlight class="stringliteral">&quot;GL_OES_texture_3D&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supportsFBOs<sp/>=<sp/>m_isOpenglES<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">hasVersion</ref>(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0))<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(</highlight><highlight class="stringliteral">&quot;GL_ARB_framebuffer_object&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_EXT_framebuffer_object&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supportsUnpack<sp/>=<sp/>!m_isOpenglES<sp/>||<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_EXT_unpack_subimage&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!supportsGLSL<sp/>||<sp/>!supportsNonPowerOfTwoTextures<sp/>||<sp/>!supports3DTextures<sp/>||<sp/>!supportsFBOs<sp/>||<sp/>!supportsUnpack)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>old<sp/>hardware<sp/>only<sp/>supports<sp/>very<sp/>limited<sp/>shaders.<sp/>To<sp/>prevent<sp/>the<sp/>shaders<sp/>KWin<sp/>uses<sp/>later<sp/>on<sp/>from<sp/>not<sp/>working,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>a<sp/>reasonably<sp/>complex<sp/>one<sp/>here<sp/>and<sp/>bail<sp/>out<sp/>early<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shader<sp/>=<sp/>m_shaderManager-&gt;shader(<ref refid="namespace_k_win_1a5ea35b6d898ef92e1904522c66efa184a85736ea5bc8da56c443818dfff6ef91f" kindref="member">ShaderTrait::MapTexture</ref><sp/>|<sp/><ref refid="namespace_k_win_1a5ea35b6d898ef92e1904522c66efa184aa8f7aca3a49bf1645d089a470202154e" kindref="member">ShaderTrait::TransformColorspace</ref><sp/>|<sp/><ref refid="namespace_k_win_1a5ea35b6d898ef92e1904522c66efa184a21b19a78d7fe5620d542c70f4e1ad07e" kindref="member">ShaderTrait::AdjustSaturation</ref><sp/>|<sp/><ref refid="namespace_k_win_1a5ea35b6d898ef92e1904522c66efa184ac870e2fca2609e8077de9470fbb9ab43" kindref="member">ShaderTrait::Modulate</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shader-&gt;isValid();</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="class_k_win_1_1_egl_context_1a189424ad7055ff5df1a1b1b91d5ce025" refkind="member"><highlight class="normal">QSet&lt;QByteArray&gt;<sp/><ref refid="class_k_win_1_1_egl_context_1a189424ad7055ff5df1a1b1b91d5ce025" kindref="member">EglContext::openglExtensions</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="493"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_extensions;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_egl_context_1a5fb783e6e2ab84d45cd1917ddd3565d7" kindref="member">EglContext</ref><sp/>*<ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>()</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_currentContext;</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EglContext::glResolveFunctions(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;resolveFuncPtr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&gt;<sp/>&amp;resolveFunction)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveArbRobustness<sp/>=<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_ARB_robustness&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveExtRobustness<sp/>=<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_EXT_robustness&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>robustContext<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_egl_context_1ae6ad9a29ca4080693f10a1b65d75913d" kindref="member">isOpenGLES</ref>())<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveExtRobustness)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetIntegerv(GL_CONTEXT_ROBUST_ACCESS_EXT,<sp/>&amp;value);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robustContext<sp/>=<sp/>(value<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveArbRobustness)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">hasVersion</ref>(Version(3,<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetIntegerv(GL_CONTEXT_FLAGS,<sp/>&amp;value);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&amp;<sp/>GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robustContext<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robustContext<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(robustContext<sp/>&amp;&amp;<sp/>haveArbRobustness)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://www.opengl.org/registry/specs/ARB/robustness.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_glGetGraphicsResetStatus<sp/>=<sp/>(<ref refid="namespace_k_win_1a96983a1363484f7c3c7ace31e7117ab5" kindref="member">glGetGraphicsResetStatus_func</ref>)resolveFunction(</highlight><highlight class="stringliteral">&quot;glGetGraphicsResetStatusARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_glReadnPixels<sp/>=<sp/>(<ref refid="namespace_k_win_1ac9bf14ec3e67c272e2a440e60932d092" kindref="member">glReadnPixels_func</ref>)resolveFunction(</highlight><highlight class="stringliteral">&quot;glReadnPixelsARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_glGetnTexImage<sp/>=<sp/>(<ref refid="namespace_k_win_1ac9da8d8f07166017c4c9a0c929013c59" kindref="member">glGetnTexImage_func</ref>)resolveFunction(</highlight><highlight class="stringliteral">&quot;glGetnTexImageARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_glGetnUniformfv<sp/>=<sp/>(<ref refid="namespace_k_win_1aa08777c66128776b8afa6c1df6790c59" kindref="member">glGetnUniformfv_func</ref>)resolveFunction(</highlight><highlight class="stringliteral">&quot;glGetnUniformfvARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(robustContext<sp/>&amp;&amp;<sp/>haveExtRobustness)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://www.khronos.org/registry/gles/extensions/EXT/EXT_robustness.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_glGetGraphicsResetStatus<sp/>=<sp/>(<ref refid="namespace_k_win_1a96983a1363484f7c3c7ace31e7117ab5" kindref="member">glGetGraphicsResetStatus_func</ref>)resolveFunction(</highlight><highlight class="stringliteral">&quot;glGetGraphicsResetStatusEXT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_glReadnPixels<sp/>=<sp/>(<ref refid="namespace_k_win_1ac9bf14ec3e67c272e2a440e60932d092" kindref="member">glReadnPixels_func</ref>)resolveFunction(</highlight><highlight class="stringliteral">&quot;glReadnPixelsEXT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_glGetnUniformfv<sp/>=<sp/>(<ref refid="namespace_k_win_1aa08777c66128776b8afa6c1df6790c59" kindref="member">glGetnUniformfv_func</ref>)resolveFunction(</highlight><highlight class="stringliteral">&quot;glGetnUniformfvEXT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EglContext::initDebugOutput()</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>have_KHR_debug<sp/>=<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_KHR_debug&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>have_ARB_debug<sp/>=<sp/><ref refid="class_k_win_1_1_egl_context_1a27205c8fe76b36291e5b8cffc3a6f204" kindref="member">hasOpenglExtension</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_ARB_debug_output&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!have_KHR_debug<sp/>&amp;&amp;<sp/>!have_ARB_debug)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!have_ARB_debug)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>don&apos;t<sp/>have<sp/>ARB<sp/>debug,<sp/>but<sp/>only<sp/>KHR<sp/>debug<sp/>we<sp/>need<sp/>to<sp/>verify<sp/>whether<sp/>the<sp/>context<sp/>is<sp/>a<sp/>debug<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>work<sp/>without<sp/>as<sp/>well,<sp/>but<sp/>empirical<sp/>tests<sp/>show:<sp/>no<sp/>it<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_egl_context_1ae6ad9a29ca4080693f10a1b65d75913d" kindref="member">isOpenGLES</ref>())<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">hasVersion</ref>(Version(3,<sp/>2)))<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empirical<sp/>data<sp/>shows<sp/>extension<sp/>doesn&apos;t<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_egl_context_1a9cc3082e80b8fe4344167ffa35306b96" kindref="member">hasVersion</ref>(Version(3,<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>only<sp/>be<sp/>queried<sp/>with<sp/>either<sp/>OpenGL<sp/>&gt;=<sp/>3.0<sp/>or<sp/>OpenGL<sp/>ES<sp/>of<sp/>at<sp/>least<sp/>3.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetIntegerv(GL_CONTEXT_FLAGS,<sp/>&amp;value);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(value<sp/>&amp;<sp/>GL_CONTEXT_FLAG_DEBUG_BIT))<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>callback<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>callback<sp/>=<sp/>[](GLenum<sp/>source,<sp/>GLenum<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/>GLuint<sp/>id,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLenum<sp/>severity,<sp/>GLsizei<sp/>length,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLchar<sp/>*message,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*userParam)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(length<sp/>&amp;&amp;<sp/>std::isspace(message[length<sp/>-<sp/>1]))<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--length;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DEBUG_TYPE_ERROR:</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR:</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_OPENGL,<sp/></highlight><highlight class="stringliteral">&quot;%#x:<sp/>%.*s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>length,<sp/>message);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DEBUG_TYPE_OTHER:</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR:</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DEBUG_TYPE_PORTABILITY:</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DEBUG_TYPE_PERFORMANCE:</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_OPENGL,<sp/></highlight><highlight class="stringliteral">&quot;%#x:<sp/>%.*s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>length,<sp/>message);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>glDebugMessageCallback(callback,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>state<sp/>exists<sp/>only<sp/>in<sp/>GL_KHR_debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(have_KHR_debug)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnable(GL_DEBUG_OUTPUT);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qEnvironmentVariableIntValue(</highlight><highlight class="stringliteral">&quot;KWIN_GL_DEBUG&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>all<sp/>debug<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDebugMessageControl(GL_DONT_CARE,<sp/>GL_DONT_CARE,<sp/>GL_DONT_CARE,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>GL_TRUE);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>test<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>message<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;OpenGL<sp/>debug<sp/>output<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDebugMessageInsert(GL_DEBUG_SOURCE_APPLICATION,<sp/>GL_DEBUG_TYPE_OTHER,<sp/>0,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DEBUG_SEVERITY_LOW,<sp/>message.length(),<sp/>message.constData());</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>enable<sp/>error<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDebugMessageControl(GL_DONT_CARE,<sp/>GL_DEBUG_TYPE_ERROR,<sp/>GL_DONT_CARE,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>GL_TRUE);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDebugMessageControl(GL_DONT_CARE,<sp/>GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR,<sp/>GL_DONT_CARE,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>GL_TRUE);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="class_k_win_1_1_egl_context_1ad9d83213af07e8587626581290a838ea" refkind="member"><highlight class="normal">GLenum<sp/><ref refid="class_k_win_1_1_egl_context_1ad9d83213af07e8587626581290a838ea" kindref="member">EglContext::checkGraphicsResetStatus</ref>()</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_glGetGraphicsResetStatus)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_glGetGraphicsResetStatus();</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GL_NO_ERROR;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622" refid="class_k_win_1_1_egl_context_1a8e514031249659695106a1736139ca5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a8e514031249659695106a1736139ca5f" kindref="member">EglContext::glReadnPixels</ref>(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLenum<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>GLenum<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/>GLsizei<sp/>bufSize,<sp/>GLvoid<sp/>*data)</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_glReadnPixels)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_glReadnPixels(x,<sp/>y,<sp/>width,<sp/>height,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/>bufSize,<sp/>data);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glReadPixels(x,<sp/>y,<sp/>width,<sp/>height,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/>data);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="class_k_win_1_1_egl_context_1a9467c4bb8372417a0e0b9722cbaf2b09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a9467c4bb8372417a0e0b9722cbaf2b09" kindref="member">EglContext::glGetnTexImage</ref>(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>GLenum<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/>GLsizei<sp/>bufSize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pixels)</highlight></codeline>
<codeline lineno="632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_glGetnTexImage)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_glGetnTexImage(target,<sp/>level,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/>bufSize,<sp/>pixels);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetTexImage(target,<sp/>level,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/>pixels);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640" refid="class_k_win_1_1_egl_context_1a1aa9a01a870cd8f23f15f0b1caff718e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a1aa9a01a870cd8f23f15f0b1caff718e" kindref="member">EglContext::glGetnUniformfv</ref>(GLuint<sp/>program,<sp/>GLint<sp/>location,<sp/>GLsizei<sp/>bufSize,<sp/>GLfloat<sp/>*params)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_glGetnUniformfv)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_glGetnUniformfv(program,<sp/>location,<sp/>bufSize,<sp/>params);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetUniformfv(program,<sp/>location,<sp/>params);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649" refid="class_k_win_1_1_egl_context_1afd207abda01091d54742e83fef830b4f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1afd207abda01091d54742e83fef830b4f" kindref="member">EglContext::pushFramebuffer</ref>(<ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref><sp/>*fbo)</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fbo<sp/>!=<sp/><ref refid="class_k_win_1_1_egl_context_1a631b3085a8768fc4d7f278170e61c511" kindref="member">currentFramebuffer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>fbo-&gt;<ref refid="class_k_win_1_1_g_l_framebuffer_1a9aee5a6576c020a3e599b21c62bddbbe" kindref="member">handle</ref>());</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glViewport(0,<sp/>0,<sp/>fbo-&gt;<ref refid="class_k_win_1_1_g_l_framebuffer_1a01c4e5f822e4148e44ae7e03fc9620f9" kindref="member">size</ref>().width(),<sp/>fbo-&gt;<ref refid="class_k_win_1_1_g_l_framebuffer_1a01c4e5f822e4148e44ae7e03fc9620f9" kindref="member">size</ref>().height());</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fbos.push(fbo);</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658" refid="class_k_win_1_1_egl_context_1a4c7a1ee77071763699d858864eac6c62" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref><sp/>*<ref refid="class_k_win_1_1_egl_context_1a4c7a1ee77071763699d858864eac6c62" kindref="member">EglContext::popFramebuffer</ref>()</highlight></codeline>
<codeline lineno="659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>m_fbos.pop();</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fbo<sp/>=<sp/><ref refid="class_k_win_1_1_egl_context_1a631b3085a8768fc4d7f278170e61c511" kindref="member">currentFramebuffer</ref>();<sp/>fbo<sp/>!=<sp/>ret)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fbo)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>fbo-&gt;handle());</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glViewport(0,<sp/>0,<sp/>fbo-&gt;size().width(),<sp/>fbo-&gt;size().height());</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>0);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="class_k_win_1_1_egl_context_1a631b3085a8768fc4d7f278170e61c511" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref><sp/>*<ref refid="class_k_win_1_1_egl_context_1a631b3085a8768fc4d7f278170e61c511" kindref="member">EglContext::currentFramebuffer</ref>()</highlight></codeline>
<codeline lineno="673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_fbos.empty()<sp/>?<sp/>nullptr<sp/>:<sp/>m_fbos.top();</highlight></codeline>
<codeline lineno="675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="676"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/opengl/eglcontext.cpp"/>
  </compounddef>
</doxygen>
