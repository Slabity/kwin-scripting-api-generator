<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="killer_8cpp" kind="file" language="C++">
    <compoundname>killer.cpp</compoundname>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sys/wait.h</includes>
    <includes local="no">KAuth/Action</includes>
    <includes local="no">KIconUtils</includes>
    <includes local="no">KLocalizedString</includes>
    <includes local="no">KMessageBox</includes>
    <includes local="no">KMessageDialog</includes>
    <includes local="no">KService</includes>
    <includes local="no">QApplication</includes>
    <includes local="no">QCommandLineParser</includes>
    <includes local="no">QDebug</includes>
    <includes local="no">QDir</includes>
    <includes local="no">QFile</includes>
    <includes local="no">QFileInfo</includes>
    <includes local="no">QProcess</includes>
    <includes local="no">QStandardPaths</includes>
    <includes local="no">QThread</includes>
    <includes local="no">QWaylandClientExtensionTemplate</includes>
    <includes local="no">QWindow</includes>
    <includes local="no">qpa/qplatformwindow_p.h</includes>
    <includes local="no">private/qtx11extras_p.h</includes>
    <includes local="no">xcb/xcb.h</includes>
    <includes local="no">cerrno</includes>
    <includes local="no">csignal</includes>
    <includes local="no">memory</includes>
    <includes local="yes">debug.h</includes>
    <includes local="yes">qwayland-xdg-foreign-unstable-v2.h</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/helpers/killer/killer.cpp</label>
        <link refid="killer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>KAuth/Action</label>
      </node>
      <node id="5">
        <label>KIconUtils</label>
      </node>
      <node id="6">
        <label>KLocalizedString</label>
      </node>
      <node id="7">
        <label>KMessageBox</label>
      </node>
      <node id="8">
        <label>KMessageDialog</label>
      </node>
      <node id="9">
        <label>KService</label>
      </node>
      <node id="10">
        <label>QApplication</label>
      </node>
      <node id="11">
        <label>QCommandLineParser</label>
      </node>
      <node id="12">
        <label>QDebug</label>
      </node>
      <node id="13">
        <label>QDir</label>
      </node>
      <node id="14">
        <label>QFile</label>
      </node>
      <node id="15">
        <label>QFileInfo</label>
      </node>
      <node id="16">
        <label>QProcess</label>
      </node>
      <node id="17">
        <label>QStandardPaths</label>
      </node>
      <node id="18">
        <label>QThread</label>
      </node>
      <node id="19">
        <label>QWaylandClientExtensionTemplate</label>
      </node>
      <node id="20">
        <label>QWindow</label>
      </node>
      <node id="24">
        <label>cerrno</label>
      </node>
      <node id="25">
        <label>csignal</label>
      </node>
      <node id="27">
        <label>debug.h</label>
      </node>
      <node id="26">
        <label>memory</label>
      </node>
      <node id="22">
        <label>private/qtx11extras_p.h</label>
      </node>
      <node id="21">
        <label>qpa/qplatformwindow_p.h</label>
      </node>
      <node id="28">
        <label>qwayland-xdg-foreign-unstable-v2.h</label>
      </node>
      <node id="2">
        <label>sys/types.h</label>
      </node>
      <node id="3">
        <label>sys/wait.h</label>
      </node>
      <node id="23">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_xdg_imported" prot="public">XdgImported</innerclass>
    <innerclass refid="class_xdg_importer" prot="public">XdgImporter</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="killer_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/killer/killer.cpp" line="152" column="5" bodyfile="kwin/src/helpers/killer/killer.cpp" bodystart="152" bodyend="335"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2003<sp/>Lubos<sp/>Lunak<sp/>&lt;l.lunak@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>Kai<sp/>Uwe<sp/>Broulik<sp/>&lt;kde@broulik.de&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2024<sp/>Harald<sp/>Sitter<sp/>&lt;sitter@kde.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>MIT</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/wait.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KAuth/Action&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KIconUtils&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KLocalizedString&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KMessageBox&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KMessageDialog&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KService&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QApplication&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QCommandLineParser&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDebug&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDir&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QFile&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QFileInfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QProcess&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QStandardPaths&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QThread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QWaylandClientExtensionTemplate&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QWindow&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qpa/qplatformwindow_p.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;private/qtx11extras_p.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xcb/xcb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cerrno&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;csignal&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;debug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-xdg-foreign-unstable-v2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono_literals;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(Q_OS_LINUX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">std::optional&lt;QString&gt;<sp/>exeOf(pid_t<sp/>pid)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFileInfo<sp/>info(QStringLiteral(</highlight><highlight class="stringliteral">&quot;/proc/%1/exe&quot;</highlight><highlight class="normal">).arg(QString::number(pid)));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>baseName<sp/>=<sp/>QFileInfo(info.canonicalFilePath()).baseName();<sp/></highlight><highlight class="comment">//<sp/>not<sp/>const<sp/>to<sp/>allow<sp/>move<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(baseName.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_KILLER)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>resolve<sp/>exe<sp/>of<sp/>pid&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pid;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseName;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">std::optional&lt;QString&gt;<sp/>bootId()</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/>file(QStringLiteral(</highlight><highlight class="stringliteral">&quot;/proc/sys/kernel/random/boot_id&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file.open(QFile::ReadOnly))<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_KILLER)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>/proc/sys/kernel/random/boot_id&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>file.errorString();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromUtf8(file.readAll().simplified().replace(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">,<sp/>QByteArrayView()));</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeApplicationNotResponding(pid_t<sp/>pid)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>dirPath<sp/>=<sp/>QStandardPaths::writableLocation(QStandardPaths::GenericCacheLocation)<sp/>+<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;/drkonqi/application-not-responding/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>QDir<sp/>dir(dirPath);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dir.exists())<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dir.mkpath(dirPath))<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_KILLER)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>ApplicationNotResponding<sp/>path&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dirPath;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>$exe.$bootid.$pid.$time_at_time_of_crash.ini</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>optionalExe<sp/>=<sp/>exeOf(pid);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!optionalExe)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>optionalBootId<sp/>=<sp/>bootId();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!optionalBootId)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>anrPath<sp/>=<sp/>dirPath<sp/>+<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;/%1.%2.%3.%4.json&quot;</highlight><highlight class="normal">).arg(optionalExe.value(),<sp/>optionalBootId.value(),<sp/>QString::number(pid),<sp/>QString::number(QDateTime::currentMSecsSinceEpoch()));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/>file(anrPath);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file.open(QFile::NewOnly))<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_KILLER)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>ApplicationNotResponding<sp/>file&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anrPath<sp/>&lt;&lt;<sp/>file.error()<sp/>&lt;&lt;<sp/>file.errorString();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>content<sp/>for<sp/>now,<sp/>simply<sp/>close<sp/>it<sp/>once<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>Q_OS_LINUX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasPidAborted(pid_t<sp/>pid)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timeout<sp/>=<sp/>4000ms;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>interval<sp/>=<sp/>250ms;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iterations<sp/>=<sp/>timeout<sp/>/<sp/>interval;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>iterations;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(waitpid(pid,<sp/>&amp;status,<sp/>WNOHANG<sp/>|<sp/>WNOWAIT)<sp/>==<sp/>pid)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WIFSIGNALED(status)<sp/>||<sp/>WIFEXITED(status))<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PID<sp/>terminated<sp/>by<sp/>signal<sp/>…<sp/>or<sp/>exited,<sp/>but<sp/>that<sp/>should<sp/>not<sp/>really<sp/>happen<sp/>as<sp/>a<sp/>result<sp/>of<sp/>ABRT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QThread::sleep(interval);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_xdg_imported" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_xdg_imported_1ac33b2a059d85d81742dfcb8395d1f492" kindref="member">XdgImported</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zxdg_imported_v2</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122" refid="class_xdg_imported_1ac33b2a059d85d81742dfcb8395d1f492" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xdg_imported_1ac33b2a059d85d81742dfcb8395d1f492" kindref="member">XdgImported</ref>(::zxdg_imported_v2<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>QtWayland::zxdg_imported_v2(object)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126" refid="class_xdg_imported_1a1517432a4734a1decc8e792d2a4f322e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xdg_imported_1a1517432a4734a1decc8e792d2a4f322e" kindref="member">~XdgImported</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="127"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroy();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="class_xdg_importer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_xdg_importer_1a89249679bb1f2e6d68c61b555255b673" kindref="member">XdgImporter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QWaylandClientExtensionTemplate&lt;XdgImporter&gt;,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zxdg_importer_v2</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="135" refid="class_xdg_importer_1a89249679bb1f2e6d68c61b555255b673" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xdg_importer_1a89249679bb1f2e6d68c61b555255b673" kindref="member">XdgImporter</ref>()</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>QWaylandClientExtensionTemplate(1)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialize();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140" refid="class_xdg_importer_1ad335f5cc221e340e730c0bd385cd94b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xdg_importer_1ad335f5cc221e340e730c0bd385cd94b2" kindref="member">~XdgImporter</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="141"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isActive())<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroy();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146" refid="class_xdg_importer_1aec8a6ed5b523d4ba48ba59e28f302842" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xdg_imported" kindref="compound">XdgImported</ref><sp/>*</highlight><highlight class="keyword">import</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;handle)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_xdg_imported" kindref="compound">XdgImported</ref>(import_toplevel(handle));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="killer_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="killer_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>KLocalizedString::setApplicationDomain(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;kwin&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication<sp/>app(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication::setWindowIcon(QIcon::fromTheme(QStringLiteral(</highlight><highlight class="stringliteral">&quot;tools-report-bug&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>QCoreApplication::setApplicationName(QStringLiteral(</highlight><highlight class="stringliteral">&quot;kwin_killer_helper&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>QCoreApplication::setOrganizationDomain(QStringLiteral(</highlight><highlight class="stringliteral">&quot;kde.org&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication::setApplicationDisplayName(i18n(</highlight><highlight class="stringliteral">&quot;Window<sp/>Manager&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>QCoreApplication::setApplicationVersion(QStringLiteral(</highlight><highlight class="stringliteral">&quot;1.0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication::setDesktopFileName(QStringLiteral(</highlight><highlight class="stringliteral">&quot;org.kde.kwin.killer&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>QCommandLineOption<sp/>pidOption(QStringLiteral(</highlight><highlight class="stringliteral">&quot;pid&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i18n(</highlight><highlight class="stringliteral">&quot;PID<sp/>of<sp/>the<sp/>application<sp/>to<sp/>terminate&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;pid&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>QCommandLineOption<sp/>hostNameOption(QStringLiteral(</highlight><highlight class="stringliteral">&quot;hostname&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i18n(</highlight><highlight class="stringliteral">&quot;Hostname<sp/>on<sp/>which<sp/>the<sp/>application<sp/>is<sp/>running&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;hostname&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>QCommandLineOption<sp/>windowNameOption(QStringLiteral(</highlight><highlight class="stringliteral">&quot;windowname&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i18n(</highlight><highlight class="stringliteral">&quot;Caption<sp/>of<sp/>the<sp/>window<sp/>to<sp/>be<sp/>terminated&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;caption&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>QCommandLineOption<sp/>applicationNameOption(QStringLiteral(</highlight><highlight class="stringliteral">&quot;applicationname&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i18n(</highlight><highlight class="stringliteral">&quot;Name<sp/>of<sp/>the<sp/>application<sp/>to<sp/>be<sp/>terminated&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>QCommandLineOption<sp/>widOption(QStringLiteral(</highlight><highlight class="stringliteral">&quot;wid&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i18n(</highlight><highlight class="stringliteral">&quot;ID<sp/>of<sp/>resource<sp/>belonging<sp/>to<sp/>the<sp/>application&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>QCommandLineOption<sp/>timestampOption(QStringLiteral(</highlight><highlight class="stringliteral">&quot;timestamp&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i18n(</highlight><highlight class="stringliteral">&quot;Time<sp/>of<sp/>user<sp/>action<sp/>causing<sp/>termination&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>QCommandLineParser<sp/>parser;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.setApplicationDescription(i18n(</highlight><highlight class="stringliteral">&quot;KWin<sp/>helper<sp/>utility&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.addHelpOption();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.addVersionOption();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.addOption(pidOption);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.addOption(hostNameOption);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.addOption(windowNameOption);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.addOption(applicationNameOption);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.addOption(widOption);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.addOption(timestampOption);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.process(app);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isX11<sp/>=<sp/>app.platformName()<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;xcb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>hostname<sp/>=<sp/>parser.value(hostNameOption);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pid_ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_t<sp/>pid<sp/>=<sp/>parser.value(pidOption).toULong(&amp;pid_ok);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>caption<sp/>=<sp/>parser.value(windowNameOption);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>appname<sp/>=<sp/>parser.value(applicationNameOption);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>id_ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_window_t<sp/>wid<sp/>=<sp/>XCB_WINDOW_NONE;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>windowHandle;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isX11)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>parser.value(widOption).toULong(&amp;id_ok);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowHandle<sp/>=<sp/>parser.value(widOption);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>Wayland<sp/>XDG_ACTIVATION_TOKEN<sp/>is<sp/>set<sp/>in<sp/>the<sp/>environment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>time_ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_timestamp_t<sp/>timestamp<sp/>=<sp/>parser.value(timestampOption).toULong(&amp;time_ok);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pid_ok<sp/>||<sp/>pid<sp/>==<sp/>0<sp/>||<sp/>((!id_ok<sp/>||<sp/>wid<sp/>==<sp/>XCB_WINDOW_NONE)<sp/>&amp;&amp;<sp/>windowHandle.isEmpty())</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(isX11<sp/>&amp;&amp;<sp/>(!time_ok<sp/>||<sp/>timestamp<sp/>==<sp/>XCB_CURRENT_TIME))</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>hostname.isEmpty()<sp/>||<sp/>caption.isEmpty()<sp/>||<sp/>appname.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stdout,<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>qPrintable(i18n(</highlight><highlight class="stringliteral">&quot;This<sp/>helper<sp/>utility<sp/>is<sp/>not<sp/>supposed<sp/>to<sp/>be<sp/>called<sp/>directly.&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.showHelp(1);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLocal<sp/>=<sp/>hostname<sp/>==<sp/>QLatin1StringView(</highlight><highlight class="stringliteral">&quot;localhost&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>service<sp/>=<sp/>KService::serviceByDesktopName(appname);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(service)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appname<sp/>=<sp/>service-&gt;name();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::setApplicationDisplayName(appname);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drop<sp/>redundant<sp/>application<sp/>name,<sp/>cf.<sp/>QXcbWindow::setWindowTitle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>titleSeparator<sp/>=<sp/>QString::fromUtf8(</highlight><highlight class="stringliteral">&quot;<sp/>\xe2\x80\x94<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>//<sp/>U+2014,<sp/>EM<sp/>DASH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>caption.remove(titleSeparator<sp/>+<sp/>appname);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>caption.remove(QStringLiteral(</highlight><highlight class="stringliteral">&quot;<sp/>–<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>appname);<sp/></highlight><highlight class="comment">//<sp/>EN<sp/>dash<sp/>(Firefox)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>caption.remove(QStringLiteral(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>appname);<sp/></highlight><highlight class="comment">//<sp/>classic<sp/>minus<sp/>:-)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>caption<sp/>=<sp/>caption.toHtmlEscaped();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>appname<sp/>=<sp/>appname.toHtmlEscaped();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>hostname<sp/>=<sp/>hostname.toHtmlEscaped();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>pidString<sp/>=<sp/>QString::number(pid);<sp/></highlight><highlight class="comment">//<sp/>format<sp/>pid<sp/>ourself<sp/>as<sp/>it<sp/>does<sp/>not<sp/>make<sp/>sense<sp/>to<sp/>format<sp/>an<sp/>ID<sp/>according<sp/>to<sp/>locale<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>question<sp/>=<sp/>(caption<sp/>==<sp/>appname)<sp/>?<sp/>xi18nc(</highlight><highlight class="stringliteral">&quot;@info&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&lt;para&gt;&lt;application&gt;%1&lt;/application&gt;<sp/>is<sp/>not<sp/>responding.<sp/>Do<sp/>you<sp/>want<sp/>to<sp/>terminate<sp/>this<sp/>application?&lt;/para&gt;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appname)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>xi18nc(</highlight><highlight class="stringliteral">&quot;@info<sp/>\&quot;window<sp/>title\&quot;<sp/>of<sp/>application<sp/>name<sp/>is<sp/>not<sp/>responding.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&lt;para&gt;\&quot;%1\&quot;<sp/>of<sp/>&lt;application&gt;%2&lt;/application&gt;<sp/>is<sp/>not<sp/>responding.<sp/>Do<sp/>you<sp/>want<sp/>to<sp/>terminate<sp/>this<sp/>application?&lt;/para&gt;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caption,<sp/>appname);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>question<sp/>+=<sp/>xi18nc(</highlight><highlight class="stringliteral">&quot;@info&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;para&gt;&lt;emphasis<sp/>strong=&apos;true&apos;&gt;Terminating<sp/>this<sp/>application<sp/>will<sp/>close<sp/>all<sp/>of<sp/>its<sp/>windows.<sp/>Any<sp/>unsaved<sp/>data<sp/>will<sp/>be<sp/>lost.&lt;/emphasis&gt;&lt;/para&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>KGuiItem<sp/>continueButton<sp/>=<sp/>KGuiItem(i18nc(</highlight><highlight class="stringliteral">&quot;@action:button<sp/>Terminate<sp/>app&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&amp;Terminate<sp/>%1&quot;</highlight><highlight class="normal">,<sp/>appname),<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;application-exit&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>KGuiItem<sp/>cancelButton<sp/>=<sp/>KGuiItem(i18nc(</highlight><highlight class="stringliteral">&quot;@action:button<sp/>Wait<sp/>for<sp/>frozen<sp/>app<sp/>to<sp/>maybe<sp/>respond<sp/>again&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&amp;Wait<sp/>Longer&quot;</highlight><highlight class="normal">),<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;chronometer&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isX11)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QX11Info::setAppUserTime(timestamp);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*dialog<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KMessageDialog(KMessageDialog::WarningContinueCancel,<sp/>question);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>dialog-&gt;setAttribute(Qt::WA_DeleteOnClose);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>dialog-&gt;setCaption(i18nc(</highlight><highlight class="stringliteral">&quot;@title:window&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>Responding&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>QIcon<sp/>icon;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(service)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QIcon<sp/>appIcon<sp/>=<sp/>QIcon::fromTheme(service-&gt;icon());</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!appIcon.isNull())<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>emblem-warning<sp/>is<sp/>non-standard,<sp/>fall<sp/>back<sp/>to<sp/>emblem-important<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QIcon<sp/>warningBadge<sp/>=<sp/>QIcon::fromTheme(QStringLiteral(</highlight><highlight class="stringliteral">&quot;emblem-warning&quot;</highlight><highlight class="normal">),<sp/>QIcon::fromTheme(QStringLiteral(</highlight><highlight class="stringliteral">&quot;emblem-important&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icon<sp/>=<sp/>KIconUtils::addOverlay(appIcon,<sp/>warningBadge,<sp/>qApp-&gt;isRightToLeft()<sp/>?<sp/>Qt::BottomLeftCorner<sp/>:<sp/>Qt::BottomRightCorner);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>dialog-&gt;setIcon(icon);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>icon<sp/>will<sp/>result<sp/>in<sp/>default<sp/>warning<sp/>icon.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>dialog-&gt;setButtons(continueButton,<sp/>KGuiItem(),<sp/>cancelButton);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>QStringList<sp/>details{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i18nc(</highlight><highlight class="stringliteral">&quot;@info&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Process<sp/>ID:<sp/>%1&quot;</highlight><highlight class="normal">,<sp/>pidString)};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isLocal)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details<sp/>&lt;&lt;<sp/>i18nc(</highlight><highlight class="stringliteral">&quot;@info&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Host<sp/>name:<sp/>%1&quot;</highlight><highlight class="normal">,<sp/>hostname);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>dialog-&gt;setDetails(details.join(QLatin1Char(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>dialog-&gt;winId();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;XdgImporter&gt;<sp/>xdgImporter;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;XdgImported&gt;<sp/>importedParent;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isX11)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QWindow<sp/>*foreignParent<sp/>=<sp/>QWindow::fromWinId(wid))<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dialog-&gt;windowHandle()-&gt;setTransientParent(foreignParent);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xdgImporter<sp/>=<sp/>std::make_unique&lt;XdgImporter&gt;();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(dialog,<sp/>&amp;QDialog::finished,<sp/>&amp;app,<sp/>[pid,<sp/>hostname,<sp/>isLocal](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>KMessageBox::PrimaryAction)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(Q_OS_LINUX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeApplicationNotResponding(pid);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isLocal)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringList<sp/>lst;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst<sp/>&lt;&lt;<sp/>hostname<sp/>&lt;&lt;<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;kill&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QString::number(pid);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QProcess::startDetached(QStringLiteral(</highlight><highlight class="stringliteral">&quot;xon&quot;</highlight><highlight class="normal">),<sp/>lst);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>try<sp/>to<sp/>abort<sp/>so<sp/>KCrash<sp/>(or<sp/>other<sp/>handlers)<sp/>and/or<sp/>coredumpd<sp/>can<sp/>kick<sp/>in<sp/>and<sp/>record<sp/>the<sp/>malfunction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>specifically<sp/>allows<sp/>application<sp/>authors<sp/>to<sp/>notice<sp/>that<sp/>something<sp/>is<sp/>broken.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(::kill(pid,<sp/>SIGABRT)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>hasPidAborted(pid))<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>that<sp/>did<sp/>not<sp/>work<sp/>send<sp/>a<sp/>kill.<sp/>Kill<sp/>cannot<sp/>be<sp/>ignored<sp/>and<sp/>always<sp/>terminates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(::kill(pid,<sp/>SIGKILL)<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EPERM)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>killing<sp/>failed<sp/>on<sp/>permissions<sp/>try<sp/>again<sp/>with<sp/>the<sp/>polkit<sp/>helper.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KAuth::Action<sp/>killer(QStringLiteral(</highlight><highlight class="stringliteral">&quot;org.kde.ksysguard.processlisthelper.sendsignal&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>killer.setHelperId(QStringLiteral(</highlight><highlight class="stringliteral">&quot;org.kde.ksysguard.processlisthelper&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>killer.addArgument(QStringLiteral(</highlight><highlight class="stringliteral">&quot;pid0&quot;</highlight><highlight class="normal">),<sp/>pid);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>killer.addArgument(QStringLiteral(</highlight><highlight class="stringliteral">&quot;pidcount&quot;</highlight><highlight class="normal">),<sp/>1);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>killer.addArgument(QStringLiteral(</highlight><highlight class="stringliteral">&quot;signal&quot;</highlight><highlight class="normal">),<sp/>SIGKILL);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(killer.isValid())<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>KAuth<sp/>to<sp/>kill<sp/>pid:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pid;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>killer.execute();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;KWin<sp/>process<sp/>killer<sp/>action<sp/>not<sp/>valid&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qApp-&gt;quit();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>dialog-&gt;show();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xdgImporter)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*waylandWindow<sp/>=<sp/>dialog-&gt;windowHandle()-&gt;nativeInterface&lt;QNativeInterface::Private::QWaylandWindow&gt;())<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importedParent.reset(xdgImporter-&gt;import(windowHandle));</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*surface<sp/>=<sp/>waylandWindow-&gt;surface())<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importedParent-&gt;set_parent_of(surface);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>dialog-&gt;windowHandle()-&gt;requestActivate();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>app.exec();</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/helpers/killer/killer.cpp"/>
  </compounddef>
</doxygen>
