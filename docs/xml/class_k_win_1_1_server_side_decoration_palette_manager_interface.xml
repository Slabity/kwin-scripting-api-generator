<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_server_side_decoration_palette_manager_interface" kind="class" language="C++" prot="public">
    <compoundname>KWin::ServerSideDecorationPaletteManagerInterface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="server__decoration__palette_8h" local="no">server_decoration_palette.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_server_side_decoration_palette_manager_interface_1a86fe32ddbb77f4c459145a43388aefef" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_server_side_decoration_palette_manager_interface_private" kindref="compound">ServerSideDecorationPaletteManagerInterfacePrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ServerSideDecorationPaletteManagerInterfacePrivate&gt; KWin::ServerSideDecorationPaletteManagerInterface::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::ServerSideDecorationPaletteManagerInterface::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration_palette.h" line="49" column="21" bodyfile="kwin/src/wayland/server_decoration_palette.h" bodystart="49" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_server_side_decoration_palette_manager_interface_1a39fdb7ed9ee359da20d7b9e19ae5a35e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ServerSideDecorationPaletteManagerInterface::ServerSideDecorationPaletteManagerInterface</definition>
        <argsstring>(Display *display, QObject *parent=nullptr)</argsstring>
        <name>ServerSideDecorationPaletteManagerInterface</name>
        <qualifiedname>KWin::ServerSideDecorationPaletteManagerInterface::ServerSideDecorationPaletteManagerInterface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration_palette.h" line="34" column="14" bodyfile="kwin/src/wayland/server_decoration_palette.cpp" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_server_side_decoration_palette_manager_interface_1aefa93afee674ee53ed96872f50528243" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ServerSideDecorationPaletteManagerInterface::~ServerSideDecorationPaletteManagerInterface</definition>
        <argsstring>() override</argsstring>
        <name>~ServerSideDecorationPaletteManagerInterface</name>
        <qualifiedname>KWin::ServerSideDecorationPaletteManagerInterface::~ServerSideDecorationPaletteManagerInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration_palette.h" line="35" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_server_side_decoration_palette_manager_interface_1a8d1463ffa5ae14de3e08a7cb36f5e5f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_server_side_decoration_palette_interface" kindref="compound">ServerSideDecorationPaletteInterface</ref> *</type>
        <definition>ServerSideDecorationPaletteInterface * KWin::ServerSideDecorationPaletteManagerInterface::paletteForSurface</definition>
        <argsstring>(SurfaceInterface *)</argsstring>
        <name>paletteForSurface</name>
        <qualifiedname>KWin::ServerSideDecorationPaletteManagerInterface::paletteForSurface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <defname>surface</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns any existing palette for a given surface This returns a null pointer if no <ref refid="class_k_win_1_1_server_side_decoration_palette_interface" kindref="compound">ServerSideDecorationPaletteInterface</ref> exists. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration_palette.h" line="40" column="42" bodyfile="kwin/src/wayland/server_decoration_palette.cpp" bodystart="71" bodyend="79"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_server_side_decoration_palette_manager_interface_1a289abf5c3c504083ea54685dde248fda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ServerSideDecorationPaletteManagerInterface::paletteCreated</definition>
        <argsstring>(KWin::ServerSideDecorationPaletteInterface *)</argsstring>
        <name>paletteCreated</name>
        <qualifiedname>KWin::ServerSideDecorationPaletteManagerInterface::paletteCreated</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_server_side_decoration_palette_interface" kindref="compound">KWin::ServerSideDecorationPaletteInterface</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Emitted whenever a new <ref refid="class_k_win_1_1_server_side_decoration_palette_interface" kindref="compound">ServerSideDecorationPaletteInterface</ref> is created. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/server_decoration_palette.h" line="46" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Allows a client to specify a preferred palette to use for server-side window decorations</para>
<para>This global can be used for clients to bind <ref refid="class_k_win_1_1_server_side_decoration_palette_interface" kindref="compound">ServerSideDecorationPaletteInterface</ref> instances and notifies when a new one is created </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::ServerSideDecorationPaletteManagerInterface</label>
        <link refid="class_k_win_1_1_server_side_decoration_palette_manager_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::ServerSideDecorationPaletteManagerInterface</label>
        <link refid="class_k_win_1_1_server_side_decoration_palette_manager_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/server_decoration_palette.h" line="29" column="1" bodyfile="kwin/src/wayland/server_decoration_palette.h" bodystart="30" bodyend="50"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_server_side_decoration_palette_manager_interface_1a86fe32ddbb77f4c459145a43388aefef" prot="private" virt="non-virtual"><scope>KWin::ServerSideDecorationPaletteManagerInterface</scope><name>d</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_palette_manager_interface_1a289abf5c3c504083ea54685dde248fda" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationPaletteManagerInterface</scope><name>paletteCreated</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_palette_manager_interface_1a8d1463ffa5ae14de3e08a7cb36f5e5f3" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationPaletteManagerInterface</scope><name>paletteForSurface</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_palette_manager_interface_1a39fdb7ed9ee359da20d7b9e19ae5a35e" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationPaletteManagerInterface</scope><name>ServerSideDecorationPaletteManagerInterface</name></member>
      <member refid="class_k_win_1_1_server_side_decoration_palette_manager_interface_1aefa93afee674ee53ed96872f50528243" prot="public" virt="non-virtual"><scope>KWin::ServerSideDecorationPaletteManagerInterface</scope><name>~ServerSideDecorationPaletteManagerInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
