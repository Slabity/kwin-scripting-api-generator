<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_confined_pointer_v1_interface" kind="class" language="C++" prot="public">
    <compoundname>KWin::ConfinedPointerV1Interface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="pointerconstraints__v1_8h" local="no">pointerconstraints_v1.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_confined_pointer_v1_interface_1a23910b34807f67d27d7b09bedce41b3a" prot="public" static="no" strong="yes">
        <type>uint</type>
        <name>LifeTime</name>
        <qualifiedname>KWin::ConfinedPointerV1Interface::LifeTime</qualifiedname>
        <enumvalue id="class_k_win_1_1_confined_pointer_v1_interface_1a23910b34807f67d27d7b09bedce41b3aac7fc2ee61fad0e2bba6754efdee31481" prot="public">
          <name>OneShot</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_confined_pointer_v1_interface_1a23910b34807f67d27d7b09bedce41b3aa5fe7b9358c9cb1b9eaa8d5aec000def4" prot="public">
          <name>Persistent</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointerconstraints_v1.h" line="183" column="5" bodyfile="kwin/src/wayland/pointerconstraints_v1.h" bodystart="183" bodyend="186"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_confined_pointer_v1_interface_1acfabf973b04a4f68bb82be5ed51066cc" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_confined_pointer_v1_interface_private" kindref="compound">ConfinedPointerV1InterfacePrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ConfinedPointerV1InterfacePrivate&gt; KWin::ConfinedPointerV1Interface::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::ConfinedPointerV1Interface::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointerconstraints_v1.h" line="240" column="21" bodyfile="kwin/src/wayland/pointerconstraints_v1.h" bodystart="240" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_k_win_1_1_confined_pointer_v1_interface_1acd754e6888de019a483fb8aa82d4b394" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class ConfinedPointerV1InterfacePrivate</definition>
        <argsstring></argsstring>
        <name>ConfinedPointerV1InterfacePrivate</name>
        <qualifiedname>KWin::ConfinedPointerV1Interface::ConfinedPointerV1InterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_confined_pointer_v1_interface_private" kindref="compound">ConfinedPointerV1InterfacePrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointerconstraints_v1.h" line="241" column="18" bodyfile="kwin/src/wayland/pointerconstraints_v1.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_k_win_1_1_confined_pointer_v1_interface_1a26d029fc2864b7c79919c27080946a77" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class PointerConstraintsV1InterfacePrivate</definition>
        <argsstring></argsstring>
        <name>PointerConstraintsV1InterfacePrivate</name>
        <qualifiedname>KWin::ConfinedPointerV1Interface::PointerConstraintsV1InterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_pointer_constraints_v1_interface_private" kindref="compound">PointerConstraintsV1InterfacePrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointerconstraints_v1.h" line="242" column="18" bodyfile="kwin/src/wayland/pointerconstraints_v1.h" bodystart="242" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_confined_pointer_v1_interface_1a03ba19235b9c4890de9f80910592f5c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ConfinedPointerV1Interface::~ConfinedPointerV1Interface</definition>
        <argsstring>() override</argsstring>
        <name>~ConfinedPointerV1Interface</name>
        <qualifiedname>KWin::ConfinedPointerV1Interface::~ConfinedPointerV1Interface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointerconstraints_v1.h" line="181" column="5" bodyfile="kwin/src/wayland/pointerconstraints_v1.cpp" bodystart="314" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_confined_pointer_v1_interface_1ae2f933e168d6f2d925806dbcadfa9f89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1a23910b34807f67d27d7b09bedce41b3a" kindref="member">LifeTime</ref></type>
        <definition>ConfinedPointerV1Interface::LifeTime KWin::ConfinedPointerV1Interface::lifeTime</definition>
        <argsstring>() const</argsstring>
        <name>lifeTime</name>
        <qualifiedname>KWin::ConfinedPointerV1Interface::lifeTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointerconstraints_v1.h" line="188" column="14" bodyfile="kwin/src/wayland/pointerconstraints_v1.cpp" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_confined_pointer_v1_interface_1ac5a75c762a72c20fa894855e15af9d20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRegion</type>
        <definition>QRegion KWin::ConfinedPointerV1Interface::region</definition>
        <argsstring>() const</argsstring>
        <name>region</name>
        <qualifiedname>KWin::ConfinedPointerV1Interface::region</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The intersection of this region and the input region of the <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> is used to determine where the pointer must be in order for the confinement to activate. It is up to the compositor whether to warp the pointer or require some kind of user interaction for the confinement to activate.</para>
<para>If the region is empty the <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> input region is used.</para>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1a116878c8b9cc09ca4369be44c1f9b85e" kindref="member">regionChanged</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_surface_interface_1a2252ccfdaefae7974f9682cb5d190cda" kindref="member">SurfaceInterface::input</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointerconstraints_v1.h" line="201" column="13" bodyfile="kwin/src/wayland/pointerconstraints_v1.cpp" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_confined_pointer_v1_interface_1a45af734bf7b8f4e079429b94696c8e9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::ConfinedPointerV1Interface::isConfined</definition>
        <argsstring>() const</argsstring>
        <name>isConfined</name>
        <qualifiedname>KWin::ConfinedPointerV1Interface::isConfined</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether the <ref refid="class_k_win_1_1_compositor" kindref="compound">Compositor</ref> set this pointer confinement to be active. <simplesect kind="see"><para><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1aef4a3daff30268c4f436a12be946c433" kindref="member">setConfined</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1ac1184dd32b6d396089635063fa656f06" kindref="member">confinedChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointerconstraints_v1.h" line="208" column="10" bodyfile="kwin/src/wayland/pointerconstraints_v1.cpp" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_confined_pointer_v1_interface_1aef4a3daff30268c4f436a12be946c433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ConfinedPointerV1Interface::setConfined</definition>
        <argsstring>(bool confined)</argsstring>
        <name>setConfined</name>
        <qualifiedname>KWin::ConfinedPointerV1Interface::setConfined</qualifiedname>
        <param>
          <type>bool</type>
          <declname>confined</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Activates or deactivates the confinement.</para>
<para>A pointer confinement can only be activated if the <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> this <ref refid="class_k_win_1_1_confined_pointer_v1_interface" kindref="compound">ConfinedPointerV1Interface</ref> was created for has pointer focus and the pointer is inside the <computeroutput><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1ac5a75c762a72c20fa894855e15af9d20" kindref="member">region</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>confined</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the confinement should be active </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1a45af734bf7b8f4e079429b94696c8e9e" kindref="member">isConfined</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1ac1184dd32b6d396089635063fa656f06" kindref="member">confinedChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointerconstraints_v1.h" line="221" column="10" bodyfile="kwin/src/wayland/pointerconstraints_v1.cpp" bodystart="333" bodyend="345"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_confined_pointer_v1_interface_1a116878c8b9cc09ca4369be44c1f9b85e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ConfinedPointerV1Interface::regionChanged</definition>
        <argsstring>()</argsstring>
        <name>regionChanged</name>
        <qualifiedname>KWin::ConfinedPointerV1Interface::regionChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Emitted whenever the region changes. This happens when the parent <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> gets committed <simplesect kind="see"><para><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1ac5a75c762a72c20fa894855e15af9d20" kindref="member">region</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointerconstraints_v1.h" line="229" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_confined_pointer_v1_interface_1ac1184dd32b6d396089635063fa656f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ConfinedPointerV1Interface::confinedChanged</definition>
        <argsstring>()</argsstring>
        <name>confinedChanged</name>
        <qualifiedname>KWin::ConfinedPointerV1Interface::confinedChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Emitted whenever the <computeroutput><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1a45af734bf7b8f4e079429b94696c8e9e" kindref="member">isConfined</ref></computeroutput> state changes. <simplesect kind="see"><para><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1a45af734bf7b8f4e079429b94696c8e9e" kindref="member">isConfined</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1aef4a3daff30268c4f436a12be946c433" kindref="member">setConfined</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointerconstraints_v1.h" line="236" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_confined_pointer_v1_interface_1ab6367a00aff00b1fc7524017ac72a27b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ConfinedPointerV1Interface::ConfinedPointerV1Interface</definition>
        <argsstring>(SurfaceInterface *surface, LifeTime lifeTime, const QRegion &amp;region, ::wl_resource *resource)</argsstring>
        <name>ConfinedPointerV1Interface</name>
        <qualifiedname>KWin::ConfinedPointerV1Interface::ConfinedPointerV1Interface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1a23910b34807f67d27d7b09bedce41b3a" kindref="member">LifeTime</ref></type>
          <declname>lifeTime</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type>::wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointerconstraints_v1.h" line="239" column="5" bodyfile="kwin/src/wayland/pointerconstraints_v1.cpp" bodystart="305" bodyend="312"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_confined_pointer_v1_interface" kindref="compound">ConfinedPointerV1Interface</ref> gets installed on a <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref>. The confinement indicates that the <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> wants to confine the pointer to a region of the <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref>.</para>
<para>It is up to the compositor whether the confinement gets activated. To activate it needs to use <computeroutput><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1aef4a3daff30268c4f436a12be946c433" kindref="member">ConfinedPointerV1Interface::setConfined</ref></computeroutput>. The compositor needs to ensure that the <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> has pointer focus and that the pointer is inside the <computeroutput><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1ac5a75c762a72c20fa894855e15af9d20" kindref="member">ConfinedPointerV1Interface::region</ref></computeroutput> when it activates the confinement.</para>
<para>From client side the confinement gets deactivated by destroying the <ref refid="class_k_win_1_1_confined_pointer_v1_interface" kindref="compound">ConfinedPointerV1Interface</ref>. From compositor side the confinement can be deactivated by setting <computeroutput><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1aef4a3daff30268c4f436a12be946c433" kindref="member">ConfinedPointerV1Interface::setConfined</ref></computeroutput> to <computeroutput>false</computeroutput>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::ConfinedPointerV1Interface</label>
        <link refid="class_k_win_1_1_confined_pointer_v1_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::ConfinedPointerV1Interface</label>
        <link refid="class_k_win_1_1_confined_pointer_v1_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/pointerconstraints_v1.h" line="176" column="1" bodyfile="kwin/src/wayland/pointerconstraints_v1.h" bodystart="177" bodyend="243"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_confined_pointer_v1_interface_1ac1184dd32b6d396089635063fa656f06" prot="public" virt="non-virtual"><scope>KWin::ConfinedPointerV1Interface</scope><name>confinedChanged</name></member>
      <member refid="class_k_win_1_1_confined_pointer_v1_interface_1ab6367a00aff00b1fc7524017ac72a27b" prot="private" virt="non-virtual"><scope>KWin::ConfinedPointerV1Interface</scope><name>ConfinedPointerV1Interface</name></member>
      <member refid="class_k_win_1_1_confined_pointer_v1_interface_1acd754e6888de019a483fb8aa82d4b394" prot="private" virt="non-virtual"><scope>KWin::ConfinedPointerV1Interface</scope><name>ConfinedPointerV1InterfacePrivate</name></member>
      <member refid="class_k_win_1_1_confined_pointer_v1_interface_1acfabf973b04a4f68bb82be5ed51066cc" prot="private" virt="non-virtual"><scope>KWin::ConfinedPointerV1Interface</scope><name>d</name></member>
      <member refid="class_k_win_1_1_confined_pointer_v1_interface_1a45af734bf7b8f4e079429b94696c8e9e" prot="public" virt="non-virtual"><scope>KWin::ConfinedPointerV1Interface</scope><name>isConfined</name></member>
      <member refid="class_k_win_1_1_confined_pointer_v1_interface_1a23910b34807f67d27d7b09bedce41b3a" prot="public" virt="non-virtual"><scope>KWin::ConfinedPointerV1Interface</scope><name>LifeTime</name></member>
      <member refid="class_k_win_1_1_confined_pointer_v1_interface_1ae2f933e168d6f2d925806dbcadfa9f89" prot="public" virt="non-virtual"><scope>KWin::ConfinedPointerV1Interface</scope><name>lifeTime</name></member>
      <member refid="class_k_win_1_1_confined_pointer_v1_interface_1a26d029fc2864b7c79919c27080946a77" prot="private" virt="non-virtual"><scope>KWin::ConfinedPointerV1Interface</scope><name>PointerConstraintsV1InterfacePrivate</name></member>
      <member refid="class_k_win_1_1_confined_pointer_v1_interface_1ac5a75c762a72c20fa894855e15af9d20" prot="public" virt="non-virtual"><scope>KWin::ConfinedPointerV1Interface</scope><name>region</name></member>
      <member refid="class_k_win_1_1_confined_pointer_v1_interface_1a116878c8b9cc09ca4369be44c1f9b85e" prot="public" virt="non-virtual"><scope>KWin::ConfinedPointerV1Interface</scope><name>regionChanged</name></member>
      <member refid="class_k_win_1_1_confined_pointer_v1_interface_1aef4a3daff30268c4f436a12be946c433" prot="public" virt="non-virtual"><scope>KWin::ConfinedPointerV1Interface</scope><name>setConfined</name></member>
      <member refid="class_k_win_1_1_confined_pointer_v1_interface_1a03ba19235b9c4890de9f80910592f5c2" prot="public" virt="non-virtual"><scope>KWin::ConfinedPointerV1Interface</scope><name>~ConfinedPointerV1Interface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
