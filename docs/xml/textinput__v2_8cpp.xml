<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="textinput__v2_8cpp" kind="file" language="C++">
    <compoundname>textinput_v2.cpp</compoundname>
    <includes refid="display_8h" local="yes">display.h</includes>
    <includes refid="seat__p_8h" local="yes">seat_p.h</includes>
    <includes refid="surface__p_8h" local="yes">surface_p.h</includes>
    <includes refid="textinput__v2__p_8h" local="yes">textinput_v2_p.h</includes>
    <includes local="yes">moc_textinput_v2.cpp</includes>
    <incdepgraph>
      <node id="28">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>clientconnection.h</label>
        <link refid="clientconnection_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>display.h</label>
        <link refid="display_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>seat.h</label>
        <link refid="seat_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>seat_p.h</label>
        <link refid="seat__p_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>surface.h</label>
        <link refid="surface_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>surface_p.h</label>
        <link refid="surface__p_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>textinput.h</label>
        <link refid="textinput_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/textinput_v2.cpp</label>
        <link refid="textinput__v2_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>textinput_v2.h</label>
        <link refid="textinput__v2_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>textinput_v2_p.h</label>
        <link refid="textinput__v2__p_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>QByteArray</label>
      </node>
      <node id="11">
        <label>QCoreApplication</label>
      </node>
      <node id="33">
        <label>QDebug</label>
      </node>
      <node id="18">
        <label>QHash</label>
      </node>
      <node id="12">
        <label>QImage</label>
      </node>
      <node id="4">
        <label>QList</label>
      </node>
      <node id="19">
        <label>QMap</label>
      </node>
      <node id="16">
        <label>QMatrix4x4</label>
      </node>
      <node id="46">
        <label>QMetaType</label>
      </node>
      <node id="5">
        <label>QObject</label>
      </node>
      <node id="13">
        <label>QPoint</label>
      </node>
      <node id="17">
        <label>QPointer</label>
      </node>
      <node id="34">
        <label>QRect</label>
      </node>
      <node id="39">
        <label>QRegion</label>
      </node>
      <node id="48">
        <label>QSet</label>
      </node>
      <node id="25">
        <label>QSize</label>
      </node>
      <node id="35">
        <label>QUuid</label>
      </node>
      <node id="14">
        <label>QVariant</label>
      </node>
      <node id="15">
        <label>QVector2D</label>
      </node>
      <node id="47">
        <label>QtGlobal</label>
      </node>
      <node id="10">
        <label>config-kwin.h</label>
      </node>
      <node id="40">
        <label>deque</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
      <node id="38">
        <label>memory</label>
      </node>
      <node id="50">
        <label>moc_textinput_v2.cpp</label>
      </node>
      <node id="20">
        <label>optional</label>
      </node>
      <node id="49">
        <label>qwayland-server-text-input-unstable-v2.h</label>
      </node>
      <node id="21">
        <label>qwayland-server-wayland.h</label>
      </node>
      <node id="43">
        <label>sys/types.h</label>
      </node>
      <node id="26">
        <label>utility</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2016<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="seat__p_8h" kindref="compound">seat_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface__p_8h" kindref="compound">surface_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="textinput__v2__p_8h" kindref="compound">textinput_v2_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>s_version<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>helpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">TextInputContentHints<sp/>convertContentHint(uint32_t<sp/>hint)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hints<sp/>=<sp/>QtWaylandServer::zwp_text_input_v2::content_hint(hint);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>TextInputContentHints<sp/>ret<sp/>=<sp/><ref refid="namespace_k_win_1a0b54d29cd5d4773605dbba26934d6197a6adf97f83acf6453d4a6a4b1070f3754" kindref="member">TextInputContentHint::None</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hints<sp/>&amp;<sp/>QtWaylandServer::zwp_text_input_v2::content_hint_auto_completion)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>|=<sp/><ref refid="namespace_k_win_1a0b54d29cd5d4773605dbba26934d6197a7991bcab47afa821c52961c2d45cb7d1" kindref="member">TextInputContentHint::AutoCompletion</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hints<sp/>&amp;<sp/>QtWaylandServer::zwp_text_input_v2::content_hint_auto_correction)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>|=<sp/><ref refid="namespace_k_win_1a0b54d29cd5d4773605dbba26934d6197aab9be766d448bff1d447d1b486966d06" kindref="member">TextInputContentHint::AutoCorrection</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hints<sp/>&amp;<sp/>QtWaylandServer::zwp_text_input_v2::content_hint_auto_capitalization)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>|=<sp/><ref refid="namespace_k_win_1a0b54d29cd5d4773605dbba26934d6197ac72dc83b1376e8d4a3f4ddf30a6bfe3b" kindref="member">TextInputContentHint::AutoCapitalization</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hints<sp/>&amp;<sp/>QtWaylandServer::zwp_text_input_v2::content_hint_lowercase)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>|=<sp/><ref refid="namespace_k_win_1a0b54d29cd5d4773605dbba26934d6197af3fa26b7f03932f588080f5b22d68908" kindref="member">TextInputContentHint::LowerCase</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hints<sp/>&amp;<sp/>QtWaylandServer::zwp_text_input_v2::content_hint_uppercase)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>|=<sp/><ref refid="namespace_k_win_1a0b54d29cd5d4773605dbba26934d6197a4dd5882de4f7bbcb748ff15bebf21ce0" kindref="member">TextInputContentHint::UpperCase</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hints<sp/>&amp;<sp/>QtWaylandServer::zwp_text_input_v2::content_hint_titlecase)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>|=<sp/><ref refid="namespace_k_win_1a0b54d29cd5d4773605dbba26934d6197a9d47f803fbe63c1d5ed84d5cf29d2fc3" kindref="member">TextInputContentHint::TitleCase</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hints<sp/>&amp;<sp/>QtWaylandServer::zwp_text_input_v2::content_hint_hidden_text)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>|=<sp/><ref refid="namespace_k_win_1a0b54d29cd5d4773605dbba26934d6197af932dc88161be8aa7d18b7c03aa9cd01" kindref="member">TextInputContentHint::HiddenText</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hints<sp/>&amp;<sp/>QtWaylandServer::zwp_text_input_v2::content_hint_sensitive_data)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>|=<sp/><ref refid="namespace_k_win_1a0b54d29cd5d4773605dbba26934d6197a7edd3b3ec9bba6551794953f86ff5f2a" kindref="member">TextInputContentHint::SensitiveData</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hints<sp/>&amp;<sp/>QtWaylandServer::zwp_text_input_v2::content_hint_latin)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>|=<sp/><ref refid="namespace_k_win_1a0b54d29cd5d4773605dbba26934d6197a7280578e6a45fd916ed9431425289c9e" kindref="member">TextInputContentHint::Latin</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hints<sp/>&amp;<sp/>QtWaylandServer::zwp_text_input_v2::content_hint_multiline)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>|=<sp/><ref refid="namespace_k_win_1a0b54d29cd5d4773605dbba26934d6197ad16a748b5543974384bc43d392f1e566" kindref="member">TextInputContentHint::MultiLine</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26" kindref="member">TextInputContentPurpose</ref><sp/>convertContentPurpose(uint32_t<sp/>purpose)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wlPurpose<sp/>=<sp/>QtWaylandServer::zwp_text_input_v2::content_purpose(purpose);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(wlPurpose)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_text_input_v2::content_purpose_alpha:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26a6132295fcf5570fb8b0a944ef322a598" kindref="member">TextInputContentPurpose::Alpha</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_text_input_v2::content_purpose_digits:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26a1051b04f09c0cf06b4290d2caab0856f" kindref="member">TextInputContentPurpose::Digits</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_text_input_v2::content_purpose_number:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26ab2ee912b91d69b435159c7c3f6df7f5f" kindref="member">TextInputContentPurpose::Number</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_text_input_v2::content_purpose_phone:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26abcc254b55c4a1babdf1dcb82c207506b" kindref="member">TextInputContentPurpose::Phone</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_text_input_v2::content_purpose_url:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26a02a3a357710cc2a5dfdfb74ed012fb59" kindref="member">TextInputContentPurpose::Url</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_text_input_v2::content_purpose_email:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26ace8ae9da5b7cd6c3df2929543a9af92d" kindref="member">TextInputContentPurpose::Email</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_text_input_v2::content_purpose_name:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26a49ee3087348e8d44e1feda1917443987" kindref="member">TextInputContentPurpose::Name</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_text_input_v2::content_purpose_password:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26adc647eb65e6711e155375218212b3964" kindref="member">TextInputContentPurpose::Password</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_text_input_v2::content_purpose_date:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26a44749712dbec183e983dcd78a7736c41" kindref="member">TextInputContentPurpose::Date</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_text_input_v2::content_purpose_time:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26aa76d4ef5f3f6a672bbfab2865563e530" kindref="member">TextInputContentPurpose::Time</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_text_input_v2::content_purpose_datetime:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26a8cf10d2341ed01492506085688270c1e" kindref="member">TextInputContentPurpose::DateTime</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_text_input_v2::content_purpose_terminal:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26a514d8a494f087c0d549b9536c2ef3bd9" kindref="member">TextInputContentPurpose::Terminal</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_text_input_v2::content_purpose_normal:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26a960b44c579bc2f6818d2daaf9e4c16f0" kindref="member">TextInputContentPurpose::Normal</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26a960b44c579bc2f6818d2daaf9e4c16f0" kindref="member">TextInputContentPurpose::Normal</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">EnabledEmitter</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>EnabledEmitter(TextInputV2Interface<sp/>*q)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>q(q)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_wasEnabled(q-&gt;isEnabled())</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>~EnabledEmitter()</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_wasEnabled<sp/>!=<sp/>q-&gt;isEnabled())<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>q-&gt;enabledChanged();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>TextInputV2Interface<sp/>*q;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_wasEnabled;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_k_win_1_1_text_input_manager_v2_interface_private_1a2739542f068ebf1fd1336fde2bf0b018" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_text_input_manager_v2_interface_private_1a2739542f068ebf1fd1336fde2bf0b018" kindref="member">TextInputManagerV2InterfacePrivate::TextInputManagerV2InterfacePrivate</ref>(<ref refid="class_k_win_1_1_text_input_manager_v2_interface" kindref="compound">TextInputManagerV2Interface</ref><sp/>*_q,<sp/><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QtWaylandServer::zwp_text_input_manager_v2(*display,<sp/>s_version)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_text_input_manager_v2_interface_private_1abd2a3cf4b4f2dac67769a034809e5339" kindref="member">q</ref>(_q)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_k_win_1_1_text_input_manager_v2_interface_private_1a096e170e212dabe93d7518fccea324a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_manager_v2_interface_private_1a096e170e212dabe93d7518fccea324a0" kindref="member">TextInputManagerV2InterfacePrivate::zwp_text_input_manager_v2_destroy</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_k_win_1_1_text_input_manager_v2_interface_private_1a4621754d4241d8847966c6099484d08b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_manager_v2_interface_private_1a4621754d4241d8847966c6099484d08b" kindref="member">TextInputManagerV2InterfacePrivate::zwp_text_input_manager_v2_get_text_input</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>wl_resource<sp/>*seat)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*s<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_1a775d59c207e73b1d92b8aa92c83a35ab" kindref="member">SeatInterface::get</ref>(seat);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/><sp/>seat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private" kindref="compound">TextInputV2InterfacePrivate</ref><sp/>*textInputPrivate<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a7ff1472178134f9f1a150065ee6c847a" kindref="member">TextInputV2InterfacePrivate::get</ref>(s-&gt;<ref refid="class_k_win_1_1_seat_interface_1a821a8b87f9848b0b2c9d10a96c651ad6" kindref="member">textInputV2</ref>());</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*textInputResource<sp/>=<sp/>textInputPrivate-&gt;add(resource-&gt;client(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>resource-&gt;version());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>enter<sp/>to<sp/>this<sp/>new<sp/>text<sp/>input<sp/>object<sp/>if<sp/>the<sp/>surface<sp/>is<sp/>already<sp/>focused.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>serial<sp/>=<sp/>s-&gt;<ref refid="class_k_win_1_1_seat_interface_1a25feb6a01195ac1c32ee4a01239229f6" kindref="member">display</ref>()-&gt;<ref refid="class_k_win_1_1_display_1a88d04e81a3c1a696bae7fca6426fabcc" kindref="member">nextSerial</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textInputPrivate-&gt;<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref><sp/>&amp;&amp;<sp/>textInputPrivate-&gt;<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>-&gt;client()-&gt;client()<sp/>==<sp/>resource-&gt;client())<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textInputPrivate-&gt;send_enter(textInputResource-&gt;handle,<sp/>serial,<sp/>textInputPrivate-&gt;<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>-&gt;resource());</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_k_win_1_1_text_input_manager_v2_interface_1a573d698312bd4a399c5a886e97bfc841" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_text_input_manager_v2_interface_1a573d698312bd4a399c5a886e97bfc841" kindref="member">TextInputManagerV2Interface::TextInputManagerV2Interface</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display,<sp/>QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>d(new<sp/><ref refid="class_k_win_1_1_text_input_manager_v2_interface_private" kindref="compound">TextInputManagerV2InterfacePrivate</ref>(this,<sp/>display))</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="class_k_win_1_1_text_input_manager_v2_interface_1a4dea17f8c9a10d6b813a5a6efc5c22e7" kindref="member">TextInputManagerV2Interface::~TextInputManagerV2Interface</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="class_k_win_1_1_text_input_v2_interface_private_1a013e6fa0b293fb1133af955b7d618428" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a013e6fa0b293fb1133af955b7d618428" kindref="member">TextInputV2InterfacePrivate::sendEnter</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*newSurface,<sp/>quint32<sp/>serial)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>EnabledEmitter<sp/>emitter(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>should<sp/>be<sp/>always<sp/>synchronized<sp/>with<sp/>SeatInterface::focusedTextInputSurface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref><sp/>&amp;&amp;<sp/>newSurface);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref><sp/>=<sp/>newSurface;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>clientResources<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">textInputsForClient</ref>(newSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>());</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resource<sp/>:<sp/>clientResources)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_enter(resource-&gt;handle,<sp/>serial,<sp/>newSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">resource</ref>());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_k_win_1_1_text_input_v2_interface_private_1ab608172dddd12e6724dc4f16a60e60d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ab608172dddd12e6724dc4f16a60e60d6" kindref="member">TextInputV2InterfacePrivate::sendLeave</ref>(quint32<sp/>serial,<sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*leavingSurface)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>should<sp/>be<sp/>always<sp/>synchronized<sp/>with<sp/>SeatInterface::focusedTextInputSurface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(leavingSurface<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref><sp/>==<sp/>leavingSurface);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>EnabledEmitter<sp/>emitter(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>.clear();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>clientResources<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">textInputsForClient</ref>(leavingSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>());</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resource<sp/>:<sp/>clientResources)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_leave(resource-&gt;handle,<sp/>serial,<sp/>leavingSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">resource</ref>());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="class_k_win_1_1_text_input_v2_interface_private_1a74abdb8a25e7137a783776ac4aeabfd4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a74abdb8a25e7137a783776ac4aeabfd4" kindref="member">TextInputV2InterfacePrivate::preEdit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;commit)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>clientResources<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">textInputsForClient</ref>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resource<sp/>:<sp/>clientResources)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_preedit_string(resource-&gt;handle,<sp/>text,<sp/>commit);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_k_win_1_1_text_input_v2_interface_private_1a2de3627407ce8dce1c8eab22b5427821" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a2de3627407ce8dce1c8eab22b5427821" kindref="member">TextInputV2InterfacePrivate::preEditStyling</ref>(uint32_t<sp/>index,<sp/>uint32_t<sp/>length,<sp/>uint32_t<sp/>style)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>clientResources<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">textInputsForClient</ref>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resource<sp/>:<sp/>clientResources)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_preedit_styling(resource-&gt;handle,<sp/>index,<sp/>length,<sp/>style);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="class_k_win_1_1_text_input_v2_interface_private_1ae8de89450e3277ee7cd6d07cfd8a8e50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae8de89450e3277ee7cd6d07cfd8a8e50" kindref="member">TextInputV2InterfacePrivate::commitString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>textInputs<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">textInputsForClient</ref>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resource<sp/>:<sp/>textInputs)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_commit_string(resource-&gt;handle,<sp/>text);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="class_k_win_1_1_text_input_v2_interface_private_1abab2718b5e1865463cebe36acdaa306c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1abab2718b5e1865463cebe36acdaa306c" kindref="member">TextInputV2InterfacePrivate::keysymPressed</ref>(quint32<sp/>keysym,<sp/>quint32<sp/>modifiers)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>textInputs<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">textInputsForClient</ref>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resource<sp/>:<sp/>textInputs)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_keysym(resource-&gt;handle,<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a0da3e9c4d4a03bd3cdc84d301864ef5b" kindref="member">seat</ref><sp/>?<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a0da3e9c4d4a03bd3cdc84d301864ef5b" kindref="member">seat</ref>-&gt;timestamp().count()<sp/>:<sp/>0,<sp/>keysym,<sp/>WL_KEYBOARD_KEY_STATE_PRESSED,<sp/>modifiers);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="class_k_win_1_1_text_input_v2_interface_private_1a15d9aa0dd0eb5dae7e8ea027f0617ee9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a15d9aa0dd0eb5dae7e8ea027f0617ee9" kindref="member">TextInputV2InterfacePrivate::keysymReleased</ref>(quint32<sp/>keysym,<sp/>quint32<sp/>modifiers)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>textInputs<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">textInputsForClient</ref>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resource<sp/>:<sp/>textInputs)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_keysym(resource-&gt;handle,<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a0da3e9c4d4a03bd3cdc84d301864ef5b" kindref="member">seat</ref><sp/>?<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a0da3e9c4d4a03bd3cdc84d301864ef5b" kindref="member">seat</ref>-&gt;timestamp().count()<sp/>:<sp/>0,<sp/>keysym,<sp/>WL_KEYBOARD_KEY_STATE_RELEASED,<sp/>modifiers);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="class_k_win_1_1_text_input_v2_interface_private_1a2d80106d37990f2afad1538a25589e97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a2d80106d37990f2afad1538a25589e97" kindref="member">TextInputV2InterfacePrivate::deleteSurroundingText</ref>(quint32<sp/>beforeLength,<sp/>quint32<sp/>afterLength)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>textInputs<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">textInputsForClient</ref>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resource<sp/>:<sp/>textInputs)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_delete_surrounding_text(resource-&gt;handle,<sp/>beforeLength,<sp/>afterLength);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="class_k_win_1_1_text_input_v2_interface_private_1ac45ba554e8a6d42282e0c9eedce253c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ac45ba554e8a6d42282e0c9eedce253c3" kindref="member">TextInputV2InterfacePrivate::setCursorPosition</ref>(qint32<sp/>index,<sp/>qint32<sp/>anchor)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>textInputs<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">textInputsForClient</ref>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resource<sp/>:<sp/>textInputs)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_cursor_position(resource-&gt;handle,<sp/>index,<sp/>anchor);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="class_k_win_1_1_text_input_v2_interface_private_1a2f530adb91225a5462241de280a585f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a2f530adb91225a5462241de280a585f4" kindref="member">TextInputV2InterfacePrivate::setTextDirection</ref>(Qt::LayoutDirection<sp/>direction)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>text_direction<sp/>wlDirection;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(direction)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::LeftToRight:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wlDirection<sp/>=<sp/>text_direction::text_direction_ltr;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::RightToLeft:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wlDirection<sp/>=<sp/>text_direction::text_direction_rtl;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::LayoutDirectionAuto:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wlDirection<sp/>=<sp/>text_direction::text_direction_auto;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>textInputs<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">textInputsForClient</ref>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resource<sp/>:<sp/>textInputs)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_text_direction(resource-&gt;handle,<sp/>wlDirection);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="class_k_win_1_1_text_input_v2_interface_private_1a7221c32d15c21c3db3b0aa345ae4ad84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a7221c32d15c21c3db3b0aa345ae4ad84" kindref="member">TextInputV2InterfacePrivate::setPreEditCursor</ref>(qint32<sp/>index)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>textInputs<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">textInputsForClient</ref>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resource<sp/>:<sp/>textInputs)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_preedit_cursor(resource-&gt;handle,<sp/>index);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="class_k_win_1_1_text_input_v2_interface_private_1a2a344068ee4bbb20cca8bd1694bf7251" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a2a344068ee4bbb20cca8bd1694bf7251" kindref="member">TextInputV2InterfacePrivate::sendInputPanelState</ref>()</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>textInputs<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">textInputsForClient</ref>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resource<sp/>:<sp/>textInputs)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_input_panel_state(resource-&gt;handle,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1afa5dda852177da7bc21e48176d915f5a" kindref="member">inputPanelVisible</ref><sp/>?<sp/>ZWP_TEXT_INPUT_V2_INPUT_PANEL_VISIBILITY_VISIBLE<sp/>:<sp/>ZWP_TEXT_INPUT_V2_INPUT_PANEL_VISIBILITY_HIDDEN,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a462fc9f5afb21151d21ce61e1d1dfbc0" kindref="member">overlappedSurfaceArea</ref>.x(),</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a462fc9f5afb21151d21ce61e1d1dfbc0" kindref="member">overlappedSurfaceArea</ref>.y(),</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a462fc9f5afb21151d21ce61e1d1dfbc0" kindref="member">overlappedSurfaceArea</ref>.width(),</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a462fc9f5afb21151d21ce61e1d1dfbc0" kindref="member">overlappedSurfaceArea</ref>.height());</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="class_k_win_1_1_text_input_v2_interface_private_1a1401574a2111a82f8c8db4f5ea17c64f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a1401574a2111a82f8c8db4f5ea17c64f" kindref="member">TextInputV2InterfacePrivate::sendLanguage</ref>()</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>textInputs<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">textInputsForClient</ref>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resource<sp/>:<sp/>textInputs)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_language(resource-&gt;handle,<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ac62363f4db186025f705db3c8c23bf10" kindref="member">language</ref>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="class_k_win_1_1_text_input_v2_interface_private_1a23645785977b497474ab11a90f14b815" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a23645785977b497474ab11a90f14b815" kindref="member">TextInputV2InterfacePrivate::sendModifiersMap</ref>()</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>textInputs<sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">textInputsForClient</ref>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resource<sp/>:<sp/>textInputs)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_modifiers_map(resource-&gt;handle,<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1af4ab46fe689d11ec50c7aeecdc278c2c" kindref="member">modifiersMap</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="class_k_win_1_1_text_input_v2_interface_private_1ac5565a3954e4050059fee2b4eb59649f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ac5565a3954e4050059fee2b4eb59649f" kindref="member">TextInputV2InterfacePrivate::TextInputV2InterfacePrivate</ref>(<ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a0da3e9c4d4a03bd3cdc84d301864ef5b" kindref="member">seat</ref>,<sp/><ref refid="class_k_win_1_1_text_input_v2_interface" kindref="compound">TextInputV2Interface</ref><sp/>*_q)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a0da3e9c4d4a03bd3cdc84d301864ef5b" kindref="member">seat</ref>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a0da3e9c4d4a03bd3cdc84d301864ef5b" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>(_q)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="class_k_win_1_1_text_input_v2_interface_private_1a3d312038fbf362221b0fc23587084914" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a3d312038fbf362221b0fc23587084914" kindref="member">TextInputV2InterfacePrivate::zwp_text_input_v2_enable</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*s)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>EnabledEmitter<sp/>emitter(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>enabledSurface<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a24ac16f7936d889771c2ab09d973175b" kindref="member">SurfaceInterface::get</ref>(s);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a1c90f0ce1adcaee0f4608df5310fa7de" kindref="member">m_enabledSurfaces</ref>.contains(enabledSurface))<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a1c90f0ce1adcaee0f4608df5310fa7de" kindref="member">m_enabledSurfaces</ref>.insert(enabledSurface);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(enabledSurface,<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_1a547a07eb856d80205eb584e50571d1ee" kindref="member">SurfaceInterface::aboutToBeDestroyed</ref>,<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>enabledSurface]<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnabledEmitter<sp/>emitter(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a1c90f0ce1adcaee0f4608df5310fa7de" kindref="member">m_enabledSurfaces</ref>.remove(enabledSurface);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="class_k_win_1_1_text_input_v2_interface_private_1a18eb683bc69ebd21fd4d024f9e794939" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a18eb683bc69ebd21fd4d024f9e794939" kindref="member">TextInputV2InterfacePrivate::zwp_text_input_v2_disable</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*s)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>EnabledEmitter<sp/>emitter(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>disabledSurface<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a24ac16f7936d889771c2ab09d973175b" kindref="member">SurfaceInterface::get</ref>(s);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::disconnect(disabledSurface,<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_1a547a07eb856d80205eb584e50571d1ee" kindref="member">SurfaceInterface::aboutToBeDestroyed</ref>,<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a1c90f0ce1adcaee0f4608df5310fa7de" kindref="member">m_enabledSurfaces</ref>.remove(disabledSurface);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disabledSurface<sp/>==<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a218c0aaedab06a1477ef7d2c26b9aa2c" kindref="member">surface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>-&gt;setInputPanelState(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>{0,<sp/>0,<sp/>0,<sp/>0});</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="class_k_win_1_1_text_input_v2_interface_private_1a79a4cd73bdda7a0c35c8321eeef01a09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a79a4cd73bdda7a0c35c8321eeef01a09" kindref="member">TextInputV2InterfacePrivate::zwp_text_input_v2_update_state</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>serial,<sp/>uint32_t<sp/>reason)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>-&gt;stateUpdated(serial,<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1adad732ca7646e799e0faa0845c558ad3" kindref="member">TextInputV2Interface::UpdateReason</ref>(reason));</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="class_k_win_1_1_text_input_v2_interface_private_1aefa47a3666d50e08c56a190071ad028e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1aefa47a3666d50e08c56a190071ad028e" kindref="member">TextInputV2InterfacePrivate::zwp_text_input_v2_hide_input_panel</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>-&gt;requestHideInputPanel();</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="class_k_win_1_1_text_input_v2_interface_private_1a7787c0661cb6ae73e50c465e8ff4fe83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a7787c0661cb6ae73e50c465e8ff4fe83" kindref="member">TextInputV2InterfacePrivate::zwp_text_input_v2_set_surrounding_text</ref>(Resource<sp/>*resource,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/>int32_t<sp/>cursor,<sp/>int32_t<sp/>anchor)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a37fc2df3eb7409731aa70eddbff3a5b6" kindref="member">surroundingText</ref><sp/>=<sp/>text;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a112e763338b9515003624a28b13a8f54" kindref="member">surroundingTextCursorPosition</ref><sp/>=<sp/>cursor;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ad331294e23b3bb31739b39f21008dcdc" kindref="member">surroundingTextSelectionAnchor</ref><sp/>=<sp/>anchor;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>-&gt;surroundingTextChanged();</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="class_k_win_1_1_text_input_v2_interface_private_1ae9e3de56d803ee453a9da4993b6715cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae9e3de56d803ee453a9da4993b6715cc" kindref="member">TextInputV2InterfacePrivate::zwp_text_input_v2_set_content_type</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>hint,<sp/>uint32_t<sp/>purpose)</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1aed9b477c34bb43cfb463f0ffde4922ec" kindref="member">contentHints</ref><sp/>=<sp/>convertContentHint(hint);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a4d1311bc7c34f4ca081ab43e5b1fb79c" kindref="member">contentPurpose</ref><sp/>=<sp/>convertContentPurpose(purpose);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_k_win_1_1_text_input_v2_interface_private_1aed9b477c34bb43cfb463f0ffde4922ec" kindref="member">contentHints</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1aed9b477c34bb43cfb463f0ffde4922ec" kindref="member">contentHints</ref><sp/>||<sp/>this-&gt;<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a4d1311bc7c34f4ca081ab43e5b1fb79c" kindref="member">contentPurpose</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a4d1311bc7c34f4ca081ab43e5b1fb79c" kindref="member">contentPurpose</ref>)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_k_win_1_1_text_input_v2_interface_private_1aed9b477c34bb43cfb463f0ffde4922ec" kindref="member">contentHints</ref><sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1aed9b477c34bb43cfb463f0ffde4922ec" kindref="member">contentHints</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a4d1311bc7c34f4ca081ab43e5b1fb79c" kindref="member">contentPurpose</ref><sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a4d1311bc7c34f4ca081ab43e5b1fb79c" kindref="member">contentPurpose</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>-&gt;contentTypeChanged();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="class_k_win_1_1_text_input_v2_interface_private_1a3594d0159a965625d2aeee099d120fda" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a3594d0159a965625d2aeee099d120fda" kindref="member">TextInputV2InterfacePrivate::zwp_text_input_v2_set_cursor_rectangle</ref>(Resource<sp/>*resource,<sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/>int32_t<sp/>width,<sp/>int32_t<sp/>height)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>rect<sp/>=<sp/>QRect(x,<sp/>y,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1aaa84a79f6a1efbb942877dffcb069228" kindref="member">cursorRectangle</ref><sp/>!=<sp/>rect)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1aaa84a79f6a1efbb942877dffcb069228" kindref="member">cursorRectangle</ref><sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>-&gt;cursorRectangleChanged(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1aaa84a79f6a1efbb942877dffcb069228" kindref="member">cursorRectangle</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="class_k_win_1_1_text_input_v2_interface_private_1a76d8b6114bb8dd2ae6fb9a4ed56a5b67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a76d8b6114bb8dd2ae6fb9a4ed56a5b67" kindref="member">TextInputV2InterfacePrivate::zwp_text_input_v2_set_preferred_language</ref>(Resource<sp/>*resource,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_k_win_1_1_text_input_v2_interface_private_1ac62363f4db186025f705db3c8c23bf10" kindref="member">language</ref>)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a10d65290d018bc711624ef7961efb3c9" kindref="member">preferredLanguage</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ac62363f4db186025f705db3c8c23bf10" kindref="member">language</ref>)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a10d65290d018bc711624ef7961efb3c9" kindref="member">preferredLanguage</ref><sp/>=<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ac62363f4db186025f705db3c8c23bf10" kindref="member">language</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>-&gt;preferredLanguageChanged(<ref refid="class_k_win_1_1_text_input_v2_interface_private_1a10d65290d018bc711624ef7961efb3c9" kindref="member">preferredLanguage</ref>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="class_k_win_1_1_text_input_v2_interface_private_1a081efa656c2b6f09411e34b21c99df73" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1a081efa656c2b6f09411e34b21c99df73" kindref="member">TextInputV2InterfacePrivate::zwp_text_input_v2_show_input_panel</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1ae7b7aa9189ad1cade76830b314fb720a" kindref="member">q</ref>-&gt;requestShowInputPanel();</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" refkind="member"><highlight class="normal">QList&lt;TextInputV2InterfacePrivate::Resource<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private_1acb91b5896ed25f14f3c2d814a00d21b1" kindref="member">TextInputV2InterfacePrivate::textInputsForClient</ref>(<ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref><sp/>*client)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="414"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resourceMap().values(client-&gt;<ref refid="class_k_win_1_1_client_connection_1aa3b49670cf09ff8b5bf837f7ba29f7d2" kindref="member">client</ref>());</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal">TextInputV2Interface::TextInputV2Interface(<ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(seat)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>d(new<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_private" kindref="compound">TextInputV2InterfacePrivate</ref>(seat,<sp/>this))</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><ref refid="class_k_win_1_1_text_input_v2_interface_1a4bc536e5bf0879f3e38c7107df5eb026" kindref="member">TextInputV2Interface::~TextInputV2Interface</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="class_k_win_1_1_text_input_v2_interface_1a809e4069093bceb920da115c889dcc65" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a809e4069093bceb920da115c889dcc65" kindref="member">TextInputV2Interface::preferredLanguage</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="427"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;preferredLanguage;</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="class_k_win_1_1_text_input_v2_interface_1a38fd851b1849db34bb9025e9abd962cf" refkind="member"><highlight class="normal">TextInputContentHints<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a38fd851b1849db34bb9025e9abd962cf" kindref="member">TextInputV2Interface::contentHints</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="432"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;contentHints;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="class_k_win_1_1_text_input_v2_interface_1a9baaddb979fdfdeda512970abb737590" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26" kindref="member">TextInputContentPurpose</ref><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a9baaddb979fdfdeda512970abb737590" kindref="member">TextInputV2Interface::contentPurpose</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="437"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;contentPurpose;</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="class_k_win_1_1_text_input_v2_interface_1a4fdaae5773e36344647189efd4dc4518" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a4fdaae5773e36344647189efd4dc4518" kindref="member">TextInputV2Interface::surroundingText</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="442"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;surroundingText;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="class_k_win_1_1_text_input_v2_interface_1a3cc4c40e3938510148735ad3fe5f705a" refkind="member"><highlight class="normal">qint32<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a3cc4c40e3938510148735ad3fe5f705a" kindref="member">TextInputV2Interface::surroundingTextCursorPosition</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="447"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;surroundingTextCursorPosition;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="class_k_win_1_1_text_input_v2_interface_1ad11791d10f6401ac16ce34fbe010481a" refkind="member"><highlight class="normal">qint32<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1ad11791d10f6401ac16ce34fbe010481a" kindref="member">TextInputV2Interface::surroundingTextSelectionAnchor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="452"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;surroundingTextSelectionAnchor;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="class_k_win_1_1_text_input_v2_interface_1a108f112deef29bb87f81d556090c8824" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a108f112deef29bb87f81d556090c8824" kindref="member">TextInputV2Interface::preEdit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;commit)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;preEdit(text,<sp/>commit);</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="class_k_win_1_1_text_input_v2_interface_1a67d35326c4957d75d2ae7729621b1b9c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a67d35326c4957d75d2ae7729621b1b9c" kindref="member">TextInputV2Interface::preEditStyling</ref>(uint32_t<sp/>index,<sp/>uint32_t<sp/>length,<sp/>uint32_t<sp/>style)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;preEditStyling(index,<sp/>length,<sp/>style);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="class_k_win_1_1_text_input_v2_interface_1aa2b7c59a03835088ddc4fd22d335191b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1aa2b7c59a03835088ddc4fd22d335191b" kindref="member">TextInputV2Interface::commitString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)</highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;commitString(text);</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="class_k_win_1_1_text_input_v2_interface_1a4838e0bc993199baf49eb4e927a58097" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a4838e0bc993199baf49eb4e927a58097" kindref="member">TextInputV2Interface::keysymPressed</ref>(quint32<sp/>keysym,<sp/>quint32<sp/>modifiers)</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;keysymPressed(keysym,<sp/>modifiers);</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="class_k_win_1_1_text_input_v2_interface_1ac762e54d654f943ddb1b953569c26f94" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1ac762e54d654f943ddb1b953569c26f94" kindref="member">TextInputV2Interface::keysymReleased</ref>(quint32<sp/>keysym,<sp/>quint32<sp/>modifiers)</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;keysymReleased(keysym,<sp/>modifiers);</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="class_k_win_1_1_text_input_v2_interface_1a1f289056df3cdfcc3cb70597f97065be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a1f289056df3cdfcc3cb70597f97065be" kindref="member">TextInputV2Interface::deleteSurroundingText</ref>(quint32<sp/>beforeLength,<sp/>quint32<sp/>afterLength)</highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;deleteSurroundingText(beforeLength,<sp/>afterLength);</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="class_k_win_1_1_text_input_v2_interface_1a73f3264eb84feebab0b5919dcf60800d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a73f3264eb84feebab0b5919dcf60800d" kindref="member">TextInputV2Interface::setCursorPosition</ref>(qint32<sp/>index,<sp/>qint32<sp/>anchor)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;setCursorPosition(index,<sp/>anchor);</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="class_k_win_1_1_text_input_v2_interface_1a50399271617c29306e6af1c223361f52" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a50399271617c29306e6af1c223361f52" kindref="member">TextInputV2Interface::setTextDirection</ref>(Qt::LayoutDirection<sp/>direction)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;setTextDirection(direction);</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="class_k_win_1_1_text_input_v2_interface_1a1adfcdf08ff1cd427b5e62a6b26c4976" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a1adfcdf08ff1cd427b5e62a6b26c4976" kindref="member">TextInputV2Interface::setPreEditCursor</ref>(qint32<sp/>index)</highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;setPreEditCursor(index);</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="class_k_win_1_1_text_input_v2_interface_1a2fb448f4c22329e831e9c999e09d7000" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a2fb448f4c22329e831e9c999e09d7000" kindref="member">TextInputV2Interface::setInputPanelState</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;overlappedSurfaceArea)</highlight></codeline>
<codeline lineno="502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;inputPanelVisible<sp/>==<sp/>visible<sp/>&amp;&amp;<sp/>d-&gt;overlappedSurfaceArea<sp/>==<sp/>overlappedSurfaceArea)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;inputPanelVisible<sp/>=<sp/>visible;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;overlappedSurfaceArea<sp/>=<sp/>overlappedSurfaceArea;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;sendInputPanelState();</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="class_k_win_1_1_text_input_v2_interface_1ad2880a12cfe9b8d75e99c7902a819745" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1ad2880a12cfe9b8d75e99c7902a819745" kindref="member">TextInputV2Interface::setLanguage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;languageTag)</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;language<sp/>==<sp/>languageTag)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;language<sp/>=<sp/>languageTag;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;sendLanguage();</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="class_k_win_1_1_text_input_v2_interface_1aae64766d0e239eaaaa24da9ceb47459a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1aae64766d0e239eaaaa24da9ceb47459a" kindref="member">TextInputV2Interface::setModifiersMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;modifiersMap)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;modifiersMap<sp/>==<sp/>modifiersMap)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;modifiersMap<sp/>=<sp/>modifiersMap;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;sendModifiersMap();</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="class_k_win_1_1_text_input_v2_interface_1a8acf37ce1cc08937eb31ffcc9550b29a" refkind="member"><highlight class="normal">QPointer&lt;SurfaceInterface&gt;<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a8acf37ce1cc08937eb31ffcc9550b29a" kindref="member">TextInputV2Interface::surface</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="533"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;surface)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;resourceMap().contains(d-&gt;surface-&gt;client()-&gt;client()))<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;surface;</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="class_k_win_1_1_text_input_v2_interface_1a457c38e5adabca56ffe6c5ab4aa9dbd9" refkind="member"><highlight class="normal">QRect<sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a457c38e5adabca56ffe6c5ab4aa9dbd9" kindref="member">TextInputV2Interface::cursorRectangle</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="546"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;cursorRectangle;</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="class_k_win_1_1_text_input_v2_interface_1a333891a4e63b1015c06c2670494d9b9c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a333891a4e63b1015c06c2670494d9b9c" kindref="member">TextInputV2Interface::isEnabled</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="551"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;surface<sp/>&amp;&amp;<sp/>d-&gt;m_enabledSurfaces.contains(d-&gt;surface);</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555" refid="class_k_win_1_1_text_input_v2_interface_1a33d6125a613e14ce61c2174ac1f908fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface_1a33d6125a613e14ce61c2174ac1f908fe" kindref="member">TextInputV2Interface::clientSupportsTextInput</ref>(<ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref><sp/>*client)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="556"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>client<sp/>&amp;&amp;<sp/>d-&gt;resourceMap().contains(*client);</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_textinput_v2.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/textinput_v2.cpp"/>
  </compounddef>
</doxygen>
