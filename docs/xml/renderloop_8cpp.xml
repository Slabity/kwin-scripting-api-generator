<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="renderloop_8cpp" kind="file" language="C++">
    <compoundname>renderloop.cpp</compoundname>
    <includes refid="renderloop_8h" local="yes">renderloop.h</includes>
    <includes refid="options_8h" local="yes">options.h</includes>
    <includes refid="renderloop__p_8h" local="yes">renderloop_p.h</includes>
    <includes refid="surfaceitem_8h" local="yes">scene/surfaceitem.h</includes>
    <includes refid="common_8h" local="yes">utils/common.h</includes>
    <includes local="yes">window.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes local="no">filesystem</includes>
    <includes local="yes">moc_renderloop.cpp</includes>
    <incdepgraph>
      <node id="23">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>renderjournal.h</label>
        <link refid="renderjournal_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/core/renderloop.cpp</label>
        <link refid="renderloop_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>renderloop_p.h</label>
        <link refid="renderloop__p_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>scene/item.h</label>
        <link refid="item_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>scene/itemgeometry.h</label>
        <link refid="itemgeometry_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>scene/surfaceitem.h</label>
        <link refid="surfaceitem_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>KConfigGroup</label>
      </node>
      <node id="19">
        <label>KConfigWatcher</label>
      </node>
      <node id="14">
        <label>KSharedConfig</label>
      </node>
      <node id="16">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="17">
        <label>QApplication</label>
      </node>
      <node id="28">
        <label>QByteArray</label>
      </node>
      <node id="46">
        <label>QColor</label>
      </node>
      <node id="5">
        <label>QCoreApplication</label>
      </node>
      <node id="61">
        <label>QDBusContext</label>
      </node>
      <node id="62">
        <label>QDataStream</label>
      </node>
      <node id="31">
        <label>QDebug</label>
      </node>
      <node id="6">
        <label>QImage</label>
      </node>
      <node id="29">
        <label>QList</label>
      </node>
      <node id="56">
        <label>QLoggingCategory</label>
      </node>
      <node id="25">
        <label>QMatrix4x4</label>
      </node>
      <node id="11">
        <label>QObject</label>
      </node>
      <node id="7">
        <label>QPoint</label>
      </node>
      <node id="35">
        <label>QPointer</label>
      </node>
      <node id="18">
        <label>QProcessEnvironment</label>
      </node>
      <node id="32">
        <label>QRect</label>
      </node>
      <node id="47">
        <label>QRegion</label>
      </node>
      <node id="30">
        <label>QSize</label>
      </node>
      <node id="55">
        <label>QString</label>
      </node>
      <node id="63">
        <label>QStringList</label>
      </node>
      <node id="38">
        <label>QTimer</label>
      </node>
      <node id="51">
        <label>QTransform</label>
      </node>
      <node id="33">
        <label>QUuid</label>
      </node>
      <node id="8">
        <label>QVariant</label>
      </node>
      <node id="9">
        <label>QVector2D</label>
      </node>
      <node id="37">
        <label>chrono</label>
      </node>
      <node id="57">
        <label>climits</label>
      </node>
      <node id="4">
        <label>config-kwin.h</label>
      </node>
      <node id="52">
        <label>deque</label>
      </node>
      <node id="48">
        <label>epoxy/gl.h</label>
      </node>
      <node id="67">
        <label>filesystem</label>
      </node>
      <node id="39">
        <label>fstream</label>
      </node>
      <node id="66">
        <label>functional</label>
      </node>
      <node id="10">
        <label>kwin_export.h</label>
      </node>
      <node id="15">
        <label>memory</label>
      </node>
      <node id="68">
        <label>moc_renderloop.cpp</label>
      </node>
      <node id="65">
        <label>netwm_def.h</label>
      </node>
      <node id="24">
        <label>optional</label>
      </node>
      <node id="49">
        <label>ranges</label>
      </node>
      <node id="50">
        <label>span</label>
      </node>
      <node id="42">
        <label>utility</label>
      </node>
      <node id="58">
        <label>window.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderloop_8h" kindref="compound">renderloop.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="options_8h" kindref="compound">options.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderloop__p_8h" kindref="compound">renderloop_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surfaceitem_8h" kindref="compound">scene/surfaceitem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">utils/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;filesystem&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono_literals;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_k_win_1_1_render_loop_private_1a2a9dc8ff7ad26efd60e9c02334d249d3" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_render_loop_private_1aef43c503241a45ad059e2dae66caf1ba" kindref="member">RenderLoopPrivate</ref><sp/>*<ref refid="class_k_win_1_1_render_loop_private_1a2a9dc8ff7ad26efd60e9c02334d249d3" kindref="member">RenderLoopPrivate::get</ref>(<ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loop-&gt;d.get();</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s_printDebugInfo<sp/>=<sp/>qEnvironmentVariableIntValue(</highlight><highlight class="stringliteral">&quot;KWIN_LOG_PERFORMANCE_DATA&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_k_win_1_1_render_loop_private_1aef43c503241a45ad059e2dae66caf1ba" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_render_loop_private_1aef43c503241a45ad059e2dae66caf1ba" kindref="member">RenderLoopPrivate::RenderLoopPrivate</ref>(<ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref><sp/>*<ref refid="class_k_win_1_1_render_loop_private_1a4af53f0a8fa682ba645efb05d87b9572" kindref="member">q</ref>,<sp/><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*<ref refid="class_k_win_1_1_render_loop_private_1a774f384638ea32179ebd5b4f338cfa10" kindref="member">output</ref>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_render_loop_private_1a4af53f0a8fa682ba645efb05d87b9572" kindref="member">q</ref>(<ref refid="class_k_win_1_1_render_loop_private_1a4af53f0a8fa682ba645efb05d87b9572" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_render_loop_private_1a774f384638ea32179ebd5b4f338cfa10" kindref="member">output</ref>(<ref refid="class_k_win_1_1_render_loop_private_1a774f384638ea32179ebd5b4f338cfa10" kindref="member">output</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1afe7619157fdafa9393f1bc694dee177d" kindref="member">compositeTimer</ref>.setSingleShot(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1afe7619157fdafa9393f1bc694dee177d" kindref="member">compositeTimer</ref>.setTimerType(Qt::PreciseTimer);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(&amp;<ref refid="class_k_win_1_1_render_loop_private_1afe7619157fdafa9393f1bc694dee177d" kindref="member">compositeTimer</ref>,<sp/>&amp;QTimer::timeout,<sp/><ref refid="class_k_win_1_1_render_loop_private_1a4af53f0a8fa682ba645efb05d87b9572" kindref="member">q</ref>,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1aee1de6f7d4abc421f4c9f33d31ef399e" kindref="member">dispatch</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a26164d2f8b03f8492c346a44fd7ce75c" kindref="member">delayedVrrTimer</ref>.setSingleShot(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a26164d2f8b03f8492c346a44fd7ce75c" kindref="member">delayedVrrTimer</ref>.setInterval(1&apos;000<sp/>/<sp/>30);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a26164d2f8b03f8492c346a44fd7ce75c" kindref="member">delayedVrrTimer</ref>.setTimerType(Qt::PreciseTimer);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(&amp;<ref refid="class_k_win_1_1_render_loop_private_1a26164d2f8b03f8492c346a44fd7ce75c" kindref="member">delayedVrrTimer</ref>,<sp/>&amp;QTimer::timeout,<sp/><ref refid="class_k_win_1_1_render_loop_private_1a4af53f0a8fa682ba645efb05d87b9572" kindref="member">q</ref>,<sp/>[<ref refid="class_k_win_1_1_render_loop_private_1a4af53f0a8fa682ba645efb05d87b9572" kindref="member">q</ref>]()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a4af53f0a8fa682ba645efb05d87b9572" kindref="member">q</ref>-&gt;scheduleRepaint(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_k_win_1_1_render_loop_private_1a83df0c8c6c42b384d7039ae65b37aff8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_private_1a83df0c8c6c42b384d7039ae65b37aff8" kindref="member">RenderLoopPrivate::scheduleNextRepaint</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwinApp()-&gt;isTerminating()<sp/>||<sp/><ref refid="class_k_win_1_1_render_loop_private_1afe7619157fdafa9393f1bc694dee177d" kindref="member">compositeTimer</ref>.isActive())<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1aecd10e7af9cadab36d914b9862376d29" kindref="member">scheduleRepaint</ref>(<ref refid="class_k_win_1_1_render_loop_private_1a38951940cecd90a6248d4349f3aae3e0" kindref="member">nextPresentationTimestamp</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_k_win_1_1_render_loop_private_1aecd10e7af9cadab36d914b9862376d29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_private_1aecd10e7af9cadab36d914b9862376d29" kindref="member">RenderLoopPrivate::scheduleRepaint</ref>(std::chrono::nanoseconds<sp/>lastTargetTimestamp)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a96f5346f69a60e9b29925753715e95f8" kindref="member">pendingReschedule</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::nanoseconds<sp/>vblankInterval(1&apos;000&apos;000&apos;000&apos;000ull<sp/>/<sp/><ref refid="class_k_win_1_1_render_loop_private_1a8b41024f1a70f79888ab690b1602ac95" kindref="member">refreshRate</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::nanoseconds<sp/>currentTime(std::chrono::steady_clock::now().time_since_epoch());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Estimate<sp/>when<sp/>it&apos;s<sp/>a<sp/>good<sp/>time<sp/>to<sp/>perform<sp/>the<sp/>next<sp/>compositing<sp/>cycle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>1ms<sp/>on<sp/>top<sp/>of<sp/>the<sp/>safety<sp/>margin<sp/>is<sp/>required<sp/>for<sp/>timer<sp/>and<sp/>scheduler<sp/>inaccuracies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::nanoseconds<sp/>expectedCompositingTime<sp/>=<sp/>std::min(<ref refid="class_k_win_1_1_render_loop_private_1ae8451bb62c379b59ae3d31ae325cf33c" kindref="member">renderJournal</ref>.result()<sp/>+<sp/><ref refid="class_k_win_1_1_render_loop_private_1ae1bc9dff77d065f9d1d14d02721e524e" kindref="member">safetyMargin</ref><sp/>+<sp/>1ms,<sp/>2<sp/>*<sp/>vblankInterval);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_render_loop_private_1abc62eaacc032950d988f557ff379ec9c" kindref="member">presentationMode</ref><sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a98b06ef30caa386be0f897d0e5c5a135" kindref="member">PresentationMode::VSync</ref>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>presentation:<sp/>pageflips<sp/>only<sp/>happen<sp/>at<sp/>vblank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>pageflipsSince<sp/>=<sp/>std::max&lt;int64_t&gt;((currentTime<sp/>-<sp/><ref refid="class_k_win_1_1_render_loop_private_1a7825a116260bba8a07fd2d786d4da88c" kindref="member">lastPresentationTimestamp</ref>)<sp/>/<sp/>vblankInterval,<sp/>0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pageflipsSince<sp/>&gt;<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>been<sp/>a<sp/>while<sp/>since<sp/>the<sp/>last<sp/>frame,<sp/>the<sp/>GPU<sp/>is<sp/>likely<sp/>in<sp/>a<sp/>low<sp/>power<sp/>state<sp/>and<sp/>render<sp/>time<sp/>will<sp/>be<sp/>increased</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>take<sp/>that<sp/>into<sp/>account<sp/>and<sp/>start<sp/>compositing<sp/>very<sp/>early</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expectedCompositingTime<sp/>=<sp/>std::max(vblankInterval<sp/>-<sp/>1us,<sp/>expectedCompositingTime);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>pageflipsSinceLastToTarget<sp/>=<sp/>std::max&lt;int64_t&gt;(std::round((lastTargetTimestamp<sp/>-<sp/><ref refid="class_k_win_1_1_render_loop_private_1a7825a116260bba8a07fd2d786d4da88c" kindref="member">lastPresentationTimestamp</ref>).count()<sp/>/<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(vblankInterval.count())),<sp/>0);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>pageflipsInAdvance<sp/>=<sp/>std::min&lt;int64_t&gt;(expectedCompositingTime<sp/>/<sp/>vblankInterval<sp/>+<sp/>1,<sp/><ref refid="class_k_win_1_1_render_loop_private_1a0f68e007d8403ee9224370ce6c0290b1" kindref="member">maxPendingFrameCount</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>switching<sp/>from<sp/>double<sp/>to<sp/>triple<sp/>buffering<sp/>causes<sp/>a<sp/>frame<sp/>drop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>apply<sp/>some<sp/>amount<sp/>of<sp/>hysteresis<sp/>to<sp/>avoid<sp/>switching<sp/>back<sp/>and<sp/>forth<sp/>constantly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pageflipsInAdvance<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>immediately<sp/>switch<sp/>to<sp/>triple<sp/>buffering<sp/>when<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a0fd9ad608b97a585fb4371fe764338b3" kindref="member">wasTripleBuffering</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1ac267a429da21c6a026e734e6272d9469" kindref="member">doubleBufferingCounter</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_render_loop_private_1a0fd9ad608b97a585fb4371fe764338b3" kindref="member">wasTripleBuffering</ref>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>wait<sp/>a<sp/>bit<sp/>before<sp/>switching<sp/>back<sp/>to<sp/>double<sp/>buffering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_render_loop_private_1ac267a429da21c6a026e734e6272d9469" kindref="member">doubleBufferingCounter</ref><sp/>&gt;=<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a0fd9ad608b97a585fb4371fe764338b3" kindref="member">wasTripleBuffering</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expectedCompositingTime<sp/>&gt;=<sp/>vblankInterval<sp/>*<sp/>0.95)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>don&apos;t<sp/>switch<sp/>back<sp/>if<sp/>render<sp/>times<sp/>are<sp/>just<sp/>barely<sp/>enough<sp/>for<sp/>double<sp/>buffering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pageflipsInAdvance<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1ac267a429da21c6a026e734e6272d9469" kindref="member">doubleBufferingCounter</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expectedCompositingTime<sp/>=<sp/>vblankInterval;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1ac267a429da21c6a026e734e6272d9469" kindref="member">doubleBufferingCounter</ref>++;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pageflipsInAdvance<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expectedCompositingTime<sp/>=<sp/>vblankInterval;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_render_loop_private_1afe7619157fdafa9393f1bc694dee177d" kindref="member">compositeTimer</ref>.isActive())<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>already<sp/>scheduled<sp/>this<sp/>frame,<sp/>but<sp/>we<sp/>got<sp/>a<sp/>new<sp/>timestamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>might<sp/>require<sp/>starting<sp/>to<sp/>composite<sp/>earlier<sp/>than<sp/>we<sp/>planned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>important<sp/>here<sp/>that<sp/>we<sp/>do<sp/>not<sp/>change<sp/>the<sp/>targeted<sp/>vblank<sp/>interval,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>with<sp/>a<sp/>pessimistic<sp/>compositing<sp/>time<sp/>estimation<sp/>we<sp/>might</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unnecessarily<sp/>drop<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>intervalsSinceLastTimestamp<sp/>=<sp/>std::max&lt;int32_t&gt;(std::round((<ref refid="class_k_win_1_1_render_loop_private_1a38951940cecd90a6248d4349f3aae3e0" kindref="member">nextPresentationTimestamp</ref><sp/>-<sp/><ref refid="class_k_win_1_1_render_loop_private_1a7825a116260bba8a07fd2d786d4da88c" kindref="member">lastPresentationTimestamp</ref>).count()<sp/>/<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(vblankInterval.count())),<sp/>0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a38951940cecd90a6248d4349f3aae3e0" kindref="member">nextPresentationTimestamp</ref><sp/>=<sp/><ref refid="class_k_win_1_1_render_loop_private_1a7825a116260bba8a07fd2d786d4da88c" kindref="member">lastPresentationTimestamp</ref><sp/>+<sp/>intervalsSinceLastTimestamp<sp/>*<sp/>vblankInterval;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a38951940cecd90a6248d4349f3aae3e0" kindref="member">nextPresentationTimestamp</ref><sp/>=<sp/><ref refid="class_k_win_1_1_render_loop_private_1a7825a116260bba8a07fd2d786d4da88c" kindref="member">lastPresentationTimestamp</ref><sp/>+<sp/>std::max(pageflipsSince<sp/>+<sp/>pageflipsInAdvance,<sp/>pageflipsSinceLastToTarget<sp/>+<sp/>1)<sp/>*<sp/>vblankInterval;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a0fd9ad608b97a585fb4371fe764338b3" kindref="member">wasTripleBuffering</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1ac267a429da21c6a026e734e6272d9469" kindref="member">doubleBufferingCounter</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_render_loop_private_1abc62eaacc032950d988f557ff379ec9c" kindref="member">presentationMode</ref><sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a24aa4117da86c41684ad25742832dfa6" kindref="member">PresentationMode::Async</ref><sp/>||<sp/><ref refid="class_k_win_1_1_render_loop_private_1abc62eaacc032950d988f557ff379ec9c" kindref="member">presentationMode</ref><sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767abe8b04736227cf3f2ab88320638e9505" kindref="member">PresentationMode::AdaptiveAsync</ref>)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tearing:<sp/>pageflips<sp/>happen<sp/>ASAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a38951940cecd90a6248d4349f3aae3e0" kindref="member">nextPresentationTimestamp</ref><sp/>=<sp/>currentTime;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adaptive<sp/>sync:<sp/>pageflips<sp/>happen<sp/>after<sp/>one<sp/>vblank<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>read<sp/>minimum<sp/>refresh<sp/>rate<sp/>from<sp/>the<sp/>EDID<sp/>and<sp/>take<sp/>it<sp/>into<sp/>account<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a38951940cecd90a6248d4349f3aae3e0" kindref="member">nextPresentationTimestamp</ref><sp/>=<sp/><ref refid="class_k_win_1_1_render_loop_private_1a7825a116260bba8a07fd2d786d4da88c" kindref="member">lastPresentationTimestamp</ref><sp/>+<sp/>vblankInterval;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::nanoseconds<sp/>nextRenderTimestamp<sp/>=<sp/><ref refid="class_k_win_1_1_render_loop_private_1a38951940cecd90a6248d4349f3aae3e0" kindref="member">nextPresentationTimestamp</ref><sp/>-<sp/>expectedCompositingTime;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1afe7619157fdafa9393f1bc694dee177d" kindref="member">compositeTimer</ref>.start(std::max(0ms,<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(nextRenderTimestamp<sp/>-<sp/>currentTime)));</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_k_win_1_1_render_loop_private_1a7c1714cdbdc6c54477818c0bd6fc7170" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_private_1a7c1714cdbdc6c54477818c0bd6fc7170" kindref="member">RenderLoopPrivate::delayScheduleRepaint</ref>()</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a96f5346f69a60e9b29925753715e95f8" kindref="member">pendingReschedule</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="class_k_win_1_1_render_loop_private_1a0730965823593deaf3d136b93980d4d3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_private_1a0730965823593deaf3d136b93980d4d3" kindref="member">RenderLoopPrivate::notifyFrameDropped</ref>()</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_render_loop_private_1a08c082c3ecb3cc730bbcf4f8e1f683f5" kindref="member">pendingFrameCount</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a08c082c3ecb3cc730bbcf4f8e1f683f5" kindref="member">pendingFrameCount</ref>--;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_render_loop_private_1a9fb27042e6fd03a2c5b778ada1c192cb" kindref="member">inhibitCount</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_render_loop_private_1a96f5346f69a60e9b29925753715e95f8" kindref="member">pendingReschedule</ref>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a83df0c8c6c42b384d7039ae65b37aff8" kindref="member">scheduleNextRepaint</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_k_win_1_1_render_loop_private_1a075d78945f20f8c2ef205aa98dd27a72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_private_1a075d78945f20f8c2ef205aa98dd27a72" kindref="member">RenderLoopPrivate::notifyFrameCompleted</ref>(std::chrono::nanoseconds<sp/>timestamp,<sp/>std::optional&lt;RenderTimeSpan&gt;<sp/>renderTime,<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref><sp/>mode,<sp/><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref><sp/>*frame)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_render_loop_private_1a774f384638ea32179ebd5b4f338cfa10" kindref="member">output</ref><sp/>&amp;&amp;<sp/>s_printDebugInfo<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_render_loop_private_1adc2482c79c14ca6fa9c167a523a7cc8c" kindref="member">m_debugOutput</ref>)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1adc2482c79c14ca6fa9c167a523a7cc8c" kindref="member">m_debugOutput</ref><sp/>=<sp/>std::fstream(qPrintable(</highlight><highlight class="stringliteral">&quot;kwin<sp/>perf<sp/>statistics<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_k_win_1_1_render_loop_private_1a774f384638ea32179ebd5b4f338cfa10" kindref="member">output</ref>-&gt;name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.csv&quot;</highlight><highlight class="normal">),<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_k_win_1_1_render_loop_private_1adc2482c79c14ca6fa9c167a523a7cc8c" kindref="member">m_debugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;target<sp/>pageflip<sp/>timestamp,pageflip<sp/>timestamp,render<sp/>start,render<sp/>end,safety<sp/>margin,refresh<sp/>duration,vrr,tearing,predicted<sp/>render<sp/>time\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_render_loop_private_1adc2482c79c14ca6fa9c167a523a7cc8c" kindref="member">m_debugOutput</ref>)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>times<sp/>=<sp/>renderTime.value_or(<ref refid="struct_k_win_1_1_render_time_span" kindref="compound">RenderTimeSpan</ref>{});</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vrr<sp/>=<sp/>mode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a21ae134702d2a8b0953846e2e4ee9e95" kindref="member">PresentationMode::AdaptiveSync</ref><sp/>||<sp/>mode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767abe8b04736227cf3f2ab88320638e9505" kindref="member">PresentationMode::AdaptiveAsync</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tearing<sp/>=<sp/>mode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a24aa4117da86c41684ad25742832dfa6" kindref="member">PresentationMode::Async</ref><sp/>||<sp/>mode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767abe8b04736227cf3f2ab88320638e9505" kindref="member">PresentationMode::AdaptiveAsync</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_k_win_1_1_render_loop_private_1adc2482c79c14ca6fa9c167a523a7cc8c" kindref="member">m_debugOutput</ref><sp/>&lt;&lt;<sp/>frame-&gt;<ref refid="class_k_win_1_1_output_frame_1adaf1e373e89caf839bc0f546389a9600" kindref="member">targetPageflipTime</ref>().time_since_epoch().count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timestamp.count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>times.start.time_since_epoch().count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>times.end.time_since_epoch().count()</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_render_loop_private_1ae1bc9dff77d065f9d1d14d02721e524e" kindref="member">safetyMargin</ref>.count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>frame-&gt;<ref refid="class_k_win_1_1_output_frame_1a898456fed1cda2918aaa1aee1efdab6f" kindref="member">refreshDuration</ref>().count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(vrr<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(tearing<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>frame-&gt;<ref refid="class_k_win_1_1_output_frame_1a486fd2fa93eac82b8307df482429628c" kindref="member">predictedRenderTime</ref>().count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_render_loop_private_1a08c082c3ecb3cc730bbcf4f8e1f683f5" kindref="member">pendingFrameCount</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a08c082c3ecb3cc730bbcf4f8e1f683f5" kindref="member">pendingFrameCount</ref>--;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1ac995209e39bd4c277a6f7cfaff65d32b" kindref="member">notifyVblank</ref>(timestamp);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(renderTime)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1ae8451bb62c379b59ae3d31ae325cf33c" kindref="member">renderJournal</ref>.add(renderTime-&gt;end<sp/>-<sp/>renderTime-&gt;start,<sp/>timestamp);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_render_loop_private_1afe7619157fdafa9393f1bc694dee177d" kindref="member">compositeTimer</ref>.isActive())<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reschedule<sp/>to<sp/>match<sp/>the<sp/>new<sp/>timestamp<sp/>and<sp/>render<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1aecd10e7af9cadab36d914b9862376d29" kindref="member">scheduleRepaint</ref>(<ref refid="class_k_win_1_1_render_loop_private_1a7825a116260bba8a07fd2d786d4da88c" kindref="member">lastPresentationTimestamp</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_render_loop_private_1a9fb27042e6fd03a2c5b778ada1c192cb" kindref="member">inhibitCount</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_render_loop_private_1a96f5346f69a60e9b29925753715e95f8" kindref="member">pendingReschedule</ref>)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a83df0c8c6c42b384d7039ae65b37aff8" kindref="member">scheduleNextRepaint</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_render_loop_private_1a4af53f0a8fa682ba645efb05d87b9572" kindref="member">q</ref>-&gt;framePresented(<ref refid="class_k_win_1_1_render_loop_private_1a4af53f0a8fa682ba645efb05d87b9572" kindref="member">q</ref>,<sp/>timestamp,<sp/>mode);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="class_k_win_1_1_render_loop_private_1ac995209e39bd4c277a6f7cfaff65d32b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_private_1ac995209e39bd4c277a6f7cfaff65d32b" kindref="member">RenderLoopPrivate::notifyVblank</ref>(std::chrono::nanoseconds<sp/>timestamp)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_render_loop_private_1a7825a116260bba8a07fd2d786d4da88c" kindref="member">lastPresentationTimestamp</ref><sp/>&lt;=<sp/>timestamp)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a7825a116260bba8a07fd2d786d4da88c" kindref="member">lastPresentationTimestamp</ref><sp/>=<sp/>timestamp;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>invalid<sp/>presentation<sp/>timestamp:<sp/>%lld<sp/>(current<sp/>%lld)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(timestamp.count()),</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_k_win_1_1_render_loop_private_1a7825a116260bba8a07fd2d786d4da88c" kindref="member">lastPresentationTimestamp</ref>.count()));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a7825a116260bba8a07fd2d786d4da88c" kindref="member">lastPresentationTimestamp</ref><sp/>=<sp/>std::chrono::steady_clock::now().time_since_epoch();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="class_k_win_1_1_render_loop_private_1aee1de6f7d4abc421f4c9f33d31ef399e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_private_1aee1de6f7d4abc421f4c9f33d31ef399e" kindref="member">RenderLoopPrivate::dispatch</ref>()</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_render_loop_private_1a4af53f0a8fa682ba645efb05d87b9572" kindref="member">q</ref>-&gt;frameRequested(<ref refid="class_k_win_1_1_render_loop_private_1a4af53f0a8fa682ba645efb05d87b9572" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="class_k_win_1_1_render_loop_1aca48dcab491277b7fcaaef346d3b94c3" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_render_loop_1aca48dcab491277b7fcaaef346d3b94c3" kindref="member">RenderLoop::RenderLoop</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d(std::make_unique&lt;<ref refid="class_k_win_1_1_render_loop_1a36a3e27bf90642afde8915054616af3c" kindref="member">RenderLoopPrivate</ref>&gt;(this,<sp/>output))</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="class_k_win_1_1_render_loop_1a5d345af9265ca65109fbc5c3f0000f93" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_render_loop_1a5d345af9265ca65109fbc5c3f0000f93" kindref="member">RenderLoop::~RenderLoop</ref>()</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="class_k_win_1_1_render_loop_1ae6b3008f29e5ee9b0971c36fae9f3719" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_1ae6b3008f29e5ee9b0971c36fae9f3719" kindref="member">RenderLoop::inhibit</ref>()</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;inhibitCount++;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;inhibitCount<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;compositeTimer.stop();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="class_k_win_1_1_render_loop_1a3e66a57f79bbafd89fcbf4e127308222" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_1a3e66a57f79bbafd89fcbf4e127308222" kindref="member">RenderLoop::uninhibit</ref>()</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(d-&gt;inhibitCount<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;inhibitCount--;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;inhibitCount<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;scheduleNextRepaint();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="class_k_win_1_1_render_loop_1a38275bc527efdb56632fc03e059fa280" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_1a38275bc527efdb56632fc03e059fa280" kindref="member">RenderLoop::prepareNewFrame</ref>()</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;pendingFrameCount++;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="class_k_win_1_1_render_loop_1a052da12b6c4baef672ea7fbf3a3d7f6c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_1a052da12b6c4baef672ea7fbf3a3d7f6c" kindref="member">RenderLoop::refreshRate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="228"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;refreshRate;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="class_k_win_1_1_render_loop_1ac43e8cd7cc2ab723d8b88e7b3fe7e4e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_1ac43e8cd7cc2ab723d8b88e7b3fe7e4e1" kindref="member">RenderLoop::setRefreshRate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_1a052da12b6c4baef672ea7fbf3a3d7f6c" kindref="member">refreshRate</ref>)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;refreshRate<sp/>==<sp/><ref refid="class_k_win_1_1_render_loop_1a052da12b6c4baef672ea7fbf3a3d7f6c" kindref="member">refreshRate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;refreshRate<sp/>=<sp/><ref refid="class_k_win_1_1_render_loop_1a052da12b6c4baef672ea7fbf3a3d7f6c" kindref="member">refreshRate</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_render_loop_1a82b71bfeb7ae7d21c12584553b07aca4" kindref="member">refreshRateChanged</ref>();</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="class_k_win_1_1_render_loop_1ac9b4d465e1ab4cf2f29a55e49b07d2de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_1ac9b4d465e1ab4cf2f29a55e49b07d2de" kindref="member">RenderLoop::setPresentationSafetyMargin</ref>(std::chrono::nanoseconds<sp/>safetyMargin)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;safetyMargin<sp/>=<sp/>safetyMargin;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="class_k_win_1_1_render_loop_1a6a1fb042e767625e8596efb70408b15a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_1a6a1fb042e767625e8596efb70408b15a" kindref="member">RenderLoop::scheduleRepaint</ref>(<ref refid="class_k_win_1_1_item" kindref="compound">Item</ref><sp/>*item,<sp/><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref><sp/>*layer,<sp/><ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref><sp/>*outputLayer)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vrr<sp/>=<sp/>d-&gt;presentationMode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a21ae134702d2a8b0953846e2e4ee9e95" kindref="member">PresentationMode::AdaptiveSync</ref><sp/>||<sp/>d-&gt;presentationMode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767abe8b04736227cf3f2ab88320638e9505" kindref="member">PresentationMode::AdaptiveAsync</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tearing<sp/>=<sp/>d-&gt;presentationMode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a24aa4117da86c41684ad25742832dfa6" kindref="member">PresentationMode::Async</ref><sp/>||<sp/>d-&gt;presentationMode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767abe8b04736227cf3f2ab88320638e9505" kindref="member">PresentationMode::AdaptiveAsync</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((vrr<sp/>||<sp/>tearing)<sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activeWindow()<sp/>&amp;&amp;<sp/>d-&gt;output)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>activeWindow<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a0fcebcde2aaab133120f33d412e34fd6" kindref="member">activeWindow</ref>();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((item<sp/>||<sp/>layer<sp/>||<sp/>outputLayer)<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_render_loop_1a51030577fe784d126428f018def13ead" kindref="member">activeWindowControlsVrrRefreshRate</ref>()<sp/>&amp;&amp;<sp/>item<sp/>!=<sp/>activeWindow-&gt;<ref refid="class_k_win_1_1_window_1aa3e58eb3c6ecd544440b973f68921322" kindref="member">surfaceItem</ref>())<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;delayedVrrTimer.start();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;delayedVrrTimer.stop();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>effectiveMaxPendingFrameCount<sp/>=<sp/>(vrr<sp/>||<sp/>tearing)<sp/>?<sp/>1<sp/>:<sp/>d-&gt;maxPendingFrameCount;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;pendingFrameCount<sp/>&lt;<sp/>effectiveMaxPendingFrameCount<sp/>&amp;&amp;<sp/>!d-&gt;inhibitCount)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;scheduleNextRepaint();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;delayScheduleRepaint();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="class_k_win_1_1_render_loop_1a51030577fe784d126428f018def13ead" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_1a51030577fe784d126428f018def13ead" kindref="member">RenderLoop::activeWindowControlsVrrRefreshRate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="267"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>activeWindow<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a0fcebcde2aaab133120f33d412e34fd6" kindref="member">activeWindow</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>activeWindow</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>activeWindow-&gt;<ref refid="class_k_win_1_1_window_1a0a700ea4c908f6907d172e7754c38db7" kindref="member">isOnOutput</ref>(d-&gt;output)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>activeWindow-&gt;<ref refid="class_k_win_1_1_window_1aa3e58eb3c6ecd544440b973f68921322" kindref="member">surfaceItem</ref>()</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>activeWindow-&gt;<ref refid="class_k_win_1_1_window_1aa3e58eb3c6ecd544440b973f68921322" kindref="member">surfaceItem</ref>()-&gt;<ref refid="class_k_win_1_1_surface_item_1afc58a4effed9f4e5a2fb11c0d8d9b723" kindref="member">frameTimeEstimation</ref>()<sp/>&lt;=<sp/>std::chrono::nanoseconds(1&apos;000&apos;000&apos;000)<sp/>/<sp/>30;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="class_k_win_1_1_render_loop_1aad36ff9f661f69fc0065581f63b6448f" refkind="member"><highlight class="normal">std::chrono::nanoseconds<sp/><ref refid="class_k_win_1_1_render_loop_1aad36ff9f661f69fc0065581f63b6448f" kindref="member">RenderLoop::lastPresentationTimestamp</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="276"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;lastPresentationTimestamp;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="class_k_win_1_1_render_loop_1ab7210116a0b5c9ef4fa433cfbb668eb3" refkind="member"><highlight class="normal">std::chrono::nanoseconds<sp/><ref refid="class_k_win_1_1_render_loop_1ab7210116a0b5c9ef4fa433cfbb668eb3" kindref="member">RenderLoop::nextPresentationTimestamp</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="281"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;nextPresentationTimestamp;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="class_k_win_1_1_render_loop_1a4190d7deb1ba46f6993f1668e482b92c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_1a4190d7deb1ba46f6993f1668e482b92c" kindref="member">RenderLoop::setPresentationMode</ref>(<ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>!=<sp/>d-&gt;presentationMode)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Changed<sp/>presentation<sp/>mode<sp/>to&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mode;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;presentationMode<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="class_k_win_1_1_render_loop_1a8163fe6276185cfef8108c31ceafe7a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_loop_1a8163fe6276185cfef8108c31ceafe7a6" kindref="member">RenderLoop::setMaxPendingFrameCount</ref>(uint32_t<sp/>maxCount)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;maxPendingFrameCount<sp/>=<sp/>maxCount;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="class_k_win_1_1_render_loop_1abd989b58114305e719a0550e7fe352e1" refkind="member"><highlight class="normal">std::chrono::nanoseconds<sp/><ref refid="class_k_win_1_1_render_loop_1abd989b58114305e719a0550e7fe352e1" kindref="member">RenderLoop::predictedRenderTime</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="299"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;renderJournal.result();</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_renderloop.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/core/renderloop.cpp"/>
  </compounddef>
</doxygen>
