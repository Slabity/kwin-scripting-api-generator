<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_render_layer" kind="class" language="C++" prot="public">
    <compoundname>KWin::RenderLayer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="renderlayer_8h" local="no">renderlayer.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_render_layer_1a4b770184412847af242eeb4a80976107" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref> *</type>
        <definition>RenderLoop* KWin::RenderLayer::m_loop</definition>
        <argsstring></argsstring>
        <name>m_loop</name>
        <qualifiedname>KWin::RenderLayer::m_loop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="100" column="16" bodyfile="kwin/src/core/renderlayer.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_render_layer_1a7964af93a1b32b4643f0b54d39fe0ca2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::RenderLayer::m_repaintScheduled</definition>
        <argsstring></argsstring>
        <name>m_repaintScheduled</name>
        <qualifiedname>KWin::RenderLayer::m_repaintScheduled</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="101" column="10" bodyfile="kwin/src/core/renderlayer.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_render_layer_1a3e78f238aaf745943cabffa1419eb342" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_render_layer_delegate" kindref="compound">RenderLayerDelegate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;RenderLayerDelegate&gt; KWin::RenderLayer::m_delegate</definition>
        <argsstring></argsstring>
        <name>m_delegate</name>
        <qualifiedname>KWin::RenderLayer::m_delegate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="102" column="21" bodyfile="kwin/src/core/renderlayer.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_render_layer_1a265d45705aec9ccfb1cd54aa3d00169e" prot="private" static="no" mutable="no">
        <type>QRegion</type>
        <definition>QRegion KWin::RenderLayer::m_repaints</definition>
        <argsstring></argsstring>
        <name>m_repaints</name>
        <qualifiedname>KWin::RenderLayer::m_repaints</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="103" column="13" bodyfile="kwin/src/core/renderlayer.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_render_layer_1abab2d7c92dca2c1a77fb385b62a99d89" prot="private" static="no" mutable="no">
        <type>QRectF</type>
        <definition>QRectF KWin::RenderLayer::m_boundingRect</definition>
        <argsstring></argsstring>
        <name>m_boundingRect</name>
        <qualifiedname>KWin::RenderLayer::m_boundingRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="104" column="12" bodyfile="kwin/src/core/renderlayer.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_render_layer_1a16ddd75c9fe5bd94d3d9258818c0f465" prot="private" static="no" mutable="no">
        <type>QRectF</type>
        <definition>QRectF KWin::RenderLayer::m_geometry</definition>
        <argsstring></argsstring>
        <name>m_geometry</name>
        <qualifiedname>KWin::RenderLayer::m_geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="105" column="12" bodyfile="kwin/src/core/renderlayer.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_render_layer_1afd8359173fd8d1100ea3543f88c65c44" prot="private" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref> &gt;</type>
        <definition>QPointer&lt;OutputLayer&gt; KWin::RenderLayer::m_outputLayer</definition>
        <argsstring></argsstring>
        <name>m_outputLayer</name>
        <qualifiedname>KWin::RenderLayer::m_outputLayer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="106" column="14" bodyfile="kwin/src/core/renderlayer.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_render_layer_1a0b1901cb19241b1d5479185dc2085f40" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
        <definition>RenderLayer* KWin::RenderLayer::m_superlayer</definition>
        <argsstring></argsstring>
        <name>m_superlayer</name>
        <qualifiedname>KWin::RenderLayer::m_superlayer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="107" column="17" bodyfile="kwin/src/core/renderlayer.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_render_layer_1abd786cdabd1dec7fbbb295c0bd79f80e" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> * &gt;</type>
        <definition>QList&lt;RenderLayer *&gt; KWin::RenderLayer::m_sublayers</definition>
        <argsstring></argsstring>
        <name>m_sublayers</name>
        <qualifiedname>KWin::RenderLayer::m_sublayers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="108" column="11" bodyfile="kwin/src/core/renderlayer.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_render_layer_1aee92fba9a52e95103da6110fc7f02c39" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::RenderLayer::m_effectiveVisible</definition>
        <argsstring></argsstring>
        <name>m_effectiveVisible</name>
        <qualifiedname>KWin::RenderLayer::m_effectiveVisible</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="109" column="10" bodyfile="kwin/src/core/renderlayer.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_render_layer_1af98210be4333e93c46f3f0974dd62938" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::RenderLayer::m_explicitVisible</definition>
        <argsstring></argsstring>
        <name>m_explicitVisible</name>
        <qualifiedname>KWin::RenderLayer::m_explicitVisible</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="110" column="10" bodyfile="kwin/src/core/renderlayer.h" bodystart="110" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a1d324477a1aafb2180e1a3fb052cb776" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::RenderLayer::RenderLayer</definition>
        <argsstring>(RenderLoop *loop, RenderLayer *superlayer=nullptr)</argsstring>
        <name>RenderLayer</name>
        <qualifiedname>KWin::RenderLayer::RenderLayer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
          <declname>superlayer</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="41" column="14" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="15" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a977410380bcc517731ed117e4ef88632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::RenderLayer::~RenderLayer</definition>
        <argsstring>() override</argsstring>
        <name>~RenderLayer</name>
        <qualifiedname>KWin::RenderLayer::~RenderLayer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="42" column="5" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="21" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a0cb75b41748c37fad7da5fae5ea01065" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref> *</type>
        <definition>OutputLayer * KWin::RenderLayer::outputLayer</definition>
        <argsstring>() const</argsstring>
        <name>outputLayer</name>
        <qualifiedname>KWin::RenderLayer::outputLayer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="44" column="17" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a00208253b6f98fa6d5c6a3361878237a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::setOutputLayer</definition>
        <argsstring>(OutputLayer *layer)</argsstring>
        <name>setOutputLayer</name>
        <qualifiedname>KWin::RenderLayer::setOutputLayer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="45" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="35" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a0c7777c1d08e169a4f54624736888600" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref> *</type>
        <definition>RenderLoop * KWin::RenderLayer::loop</definition>
        <argsstring>() const</argsstring>
        <name>loop</name>
        <qualifiedname>KWin::RenderLayer::loop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="47" column="16" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1ac2f579321b8cef6e169906180e77dfdd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_render_layer_delegate" kindref="compound">RenderLayerDelegate</ref> *</type>
        <definition>RenderLayerDelegate * KWin::RenderLayer::delegate</definition>
        <argsstring>() const</argsstring>
        <name>delegate</name>
        <qualifiedname>KWin::RenderLayer::delegate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="48" column="25" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a5a7d9d055cc13a33cb76e203eed13c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::setDelegate</definition>
        <argsstring>(std::unique_ptr&lt; RenderLayerDelegate &gt; delegate)</argsstring>
        <name>setDelegate</name>
        <qualifiedname>KWin::RenderLayer::setDelegate</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_render_layer_delegate" kindref="compound">RenderLayerDelegate</ref> &gt;</type>
          <declname>delegate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="49" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a5a2472d337136cf179ef2d69d3bd261f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> * &gt;</type>
        <definition>QList&lt; RenderLayer * &gt; KWin::RenderLayer::sublayers</definition>
        <argsstring>() const</argsstring>
        <name>sublayers</name>
        <qualifiedname>KWin::RenderLayer::sublayers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="51" column="11" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1ac45642a1e9369c025e0bc6b0b161df2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
        <definition>RenderLayer * KWin::RenderLayer::superlayer</definition>
        <argsstring>() const</argsstring>
        <name>superlayer</name>
        <qualifiedname>KWin::RenderLayer::superlayer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="52" column="17" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a7f4e0dadce37b8ef03ba76e70952142e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::setSuperlayer</definition>
        <argsstring>(RenderLayer *layer)</argsstring>
        <name>setSuperlayer</name>
        <qualifiedname>KWin::RenderLayer::setSuperlayer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="53" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="54" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1aebffa809e34f5628be502c0d37bbb140" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::RenderLayer::isVisible</definition>
        <argsstring>() const</argsstring>
        <name>isVisible</name>
        <qualifiedname>KWin::RenderLayer::isVisible</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="55" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="208" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a080c4916b793831f63c122f43c58e55e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::setVisible</definition>
        <argsstring>(bool visible)</argsstring>
        <name>setVisible</name>
        <qualifiedname>KWin::RenderLayer::setVisible</qualifiedname>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="56" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="213" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a9a33e7110cb7115e3039d71394f7bf72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPoint</type>
        <definition>QPoint KWin::RenderLayer::mapToGlobal</definition>
        <argsstring>(const QPoint &amp;point) const</argsstring>
        <name>mapToGlobal</name>
        <qualifiedname>KWin::RenderLayer::mapToGlobal</qualifiedname>
        <param>
          <type>const QPoint &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="58" column="12" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a5656e44b0a5d3fdac1a2cce6f68ecec7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF KWin::RenderLayer::mapToGlobal</definition>
        <argsstring>(const QPointF &amp;point) const</argsstring>
        <name>mapToGlobal</name>
        <qualifiedname>KWin::RenderLayer::mapToGlobal</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="59" column="13" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="254" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1ae18e535e85660065aa0543723b910461" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRegion</type>
        <definition>QRegion KWin::RenderLayer::mapToGlobal</definition>
        <argsstring>(const QRegion &amp;region) const</argsstring>
        <name>mapToGlobal</name>
        <qualifiedname>KWin::RenderLayer::mapToGlobal</qualifiedname>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="60" column="13" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="275" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a4e0a0f594c891582756a266ed6c47c40" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRect</type>
        <definition>QRect KWin::RenderLayer::mapToGlobal</definition>
        <argsstring>(const QRect &amp;rect) const</argsstring>
        <name>mapToGlobal</name>
        <qualifiedname>KWin::RenderLayer::mapToGlobal</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="61" column="11" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a9f2942d1da9fd01691e8fe519ac8f36c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::RenderLayer::mapToGlobal</definition>
        <argsstring>(const QRectF &amp;rect) const</argsstring>
        <name>mapToGlobal</name>
        <qualifiedname>KWin::RenderLayer::mapToGlobal</qualifiedname>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="62" column="12" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a604e383c01dcef9463753fc5906440cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPoint</type>
        <definition>QPoint KWin::RenderLayer::mapFromGlobal</definition>
        <argsstring>(const QPoint &amp;point) const</argsstring>
        <name>mapFromGlobal</name>
        <qualifiedname>KWin::RenderLayer::mapFromGlobal</qualifiedname>
        <param>
          <type>const QPoint &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="64" column="12" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a933d8d4db377514cffb21d45929a1d42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF KWin::RenderLayer::mapFromGlobal</definition>
        <argsstring>(const QPointF &amp;point) const</argsstring>
        <name>mapFromGlobal</name>
        <qualifiedname>KWin::RenderLayer::mapFromGlobal</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="65" column="13" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="288" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a5a8cf22c168bf7044bdbe054bca2b4fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRegion</type>
        <definition>QRegion KWin::RenderLayer::mapFromGlobal</definition>
        <argsstring>(const QRegion &amp;region) const</argsstring>
        <name>mapFromGlobal</name>
        <qualifiedname>KWin::RenderLayer::mapFromGlobal</qualifiedname>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="66" column="13" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="309" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1ada390a068d054a03cdae088c027940c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRect</type>
        <definition>QRect KWin::RenderLayer::mapFromGlobal</definition>
        <argsstring>(const QRect &amp;rect) const</argsstring>
        <name>mapFromGlobal</name>
        <qualifiedname>KWin::RenderLayer::mapFromGlobal</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="67" column="11" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1aa741225c30209e49a9cc10874ff869b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::RenderLayer::mapFromGlobal</definition>
        <argsstring>(const QRectF &amp;rect) const</argsstring>
        <name>mapFromGlobal</name>
        <qualifiedname>KWin::RenderLayer::mapFromGlobal</qualifiedname>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="68" column="12" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a777d23d98521c8ae92678fbc2998bbed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::RenderLayer::rect</definition>
        <argsstring>() const</argsstring>
        <name>rect</name>
        <qualifiedname>KWin::RenderLayer::rect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="70" column="12" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a691826937cecf64a858ff05d10a3cfef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::RenderLayer::boundingRect</definition>
        <argsstring>() const</argsstring>
        <name>boundingRect</name>
        <qualifiedname>KWin::RenderLayer::boundingRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="71" column="12" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a7e9fb70baaa50b78b3e913dcdbf2eff0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::RenderLayer::geometry</definition>
        <argsstring>() const</argsstring>
        <name>geometry</name>
        <qualifiedname>KWin::RenderLayer::geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="73" column="12" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a139a3fa85c6d484c1d23dc1a9d5292e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::setGeometry</definition>
        <argsstring>(const QRectF &amp;rect)</argsstring>
        <name>setGeometry</name>
        <qualifiedname>KWin::RenderLayer::setGeometry</qualifiedname>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="74" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="119" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a9c5b3debb4b46e21e93d4682dc61a4a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::scheduleRepaint</definition>
        <argsstring>(Item *item)</argsstring>
        <name>scheduleRepaint</name>
        <qualifiedname>KWin::RenderLayer::scheduleRepaint</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_item" kindref="compound">Item</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark this layer as dirty and trigger a repaint on the render loop </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="80" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="137" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1ad2f4d60786eb2926785c643368626f53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::RenderLayer::needsRepaint</definition>
        <argsstring>() const</argsstring>
        <name>needsRepaint</name>
        <qualifiedname>KWin::RenderLayer::needsRepaint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if this or a sublayer has requested an update </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="84" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="143" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a2c59bb80bc3caf83aff447698120bcdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::addRepaint</definition>
        <argsstring>(const QRegion &amp;region)</argsstring>
        <name>addRepaint</name>
        <qualifiedname>KWin::RenderLayer::addRepaint</qualifiedname>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="86" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="186" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a85b53c538bba0b43708df1de7e7d40cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::addRepaint</definition>
        <argsstring>(const QRect &amp;rect)</argsstring>
        <name>addRepaint</name>
        <qualifiedname>KWin::RenderLayer::addRepaint</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="87" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a26e048f95adb79f61c5af45d36109ddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::addRepaint</definition>
        <argsstring>(int x, int y, int width, int height)</argsstring>
        <name>addRepaint</name>
        <qualifiedname>KWin::RenderLayer::addRepaint</qualifiedname>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="88" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a03dcf739dbdc2f6823d9da8a79b4557c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::addRepaintFull</definition>
        <argsstring>()</argsstring>
        <name>addRepaintFull</name>
        <qualifiedname>KWin::RenderLayer::addRepaintFull</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="89" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a49b6ce9cce55a452dc9c4e41b084fbfb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRegion</type>
        <definition>QRegion KWin::RenderLayer::repaints</definition>
        <argsstring>() const</argsstring>
        <name>repaints</name>
        <qualifiedname>KWin::RenderLayer::repaints</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="90" column="13" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a28b5b0d9b91ecad39efbb43f02d8a572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::resetRepaints</definition>
        <argsstring>()</argsstring>
        <name>resetRepaints</name>
        <qualifiedname>KWin::RenderLayer::resetRepaints</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="91" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="202" bodyend="206"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a2f5fdab5d1c25118123d231238111db6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::addSublayer</definition>
        <argsstring>(RenderLayer *sublayer)</argsstring>
        <name>addSublayer</name>
        <qualifiedname>KWin::RenderLayer::addSublayer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
          <declname>sublayer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="94" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="74" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a89bc6a21eaaf83c6b06e3b50fd747ef4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::removeSublayer</definition>
        <argsstring>(RenderLayer *sublayer)</argsstring>
        <name>removeSublayer</name>
        <qualifiedname>KWin::RenderLayer::removeSublayer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
          <declname>sublayer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="95" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="81" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1ad73698f935b1145142bbf52d761cc66d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::updateBoundingRect</definition>
        <argsstring>()</argsstring>
        <name>updateBoundingRect</name>
        <qualifiedname>KWin::RenderLayer::updateBoundingRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="96" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="156" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a7bfc340a7966f6f08f1c7156e6bc81cc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::RenderLayer::updateEffectiveVisibility</definition>
        <argsstring>()</argsstring>
        <name>updateEffectiveVisibility</name>
        <qualifiedname>KWin::RenderLayer::updateEffectiveVisibility</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="97" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="226" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_layer_1a7441b70f9c817c628d535b6e4b9e21a9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::RenderLayer::computeEffectiveVisibility</definition>
        <argsstring>() const</argsstring>
        <name>computeEffectiveVisibility</name>
        <qualifiedname>KWin::RenderLayer::computeEffectiveVisibility</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderlayer.h" line="98" column="10" bodyfile="kwin/src/core/renderlayer.cpp" bodystart="221" bodyend="224"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> class represents a composited layer.</para>
<para>The contents of the layer is represented by the <ref refid="class_k_win_1_1_render_layer_delegate" kindref="compound">RenderLayerDelegate</ref>. The render layer takes the ownership of the delegate.</para>
<para>Each render layer has a hardware layer assigned to it, represented by <ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref>. If the output layer is not set explicitly, it&apos;s inherited from the parent render layer. <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> layers can be freely assigned or unassigned to render layers. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::RenderLayer</label>
        <link refid="class_k_win_1_1_render_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::RenderLayer</label>
        <link refid="class_k_win_1_1_render_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/core/renderlayer.h" line="36" column="1" bodyfile="kwin/src/core/renderlayer.h" bodystart="37" bodyend="111"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_render_layer_1a2c59bb80bc3caf83aff447698120bcdc" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>addRepaint</name></member>
      <member refid="class_k_win_1_1_render_layer_1a85b53c538bba0b43708df1de7e7d40cb" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>addRepaint</name></member>
      <member refid="class_k_win_1_1_render_layer_1a26e048f95adb79f61c5af45d36109ddf" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>addRepaint</name></member>
      <member refid="class_k_win_1_1_render_layer_1a03dcf739dbdc2f6823d9da8a79b4557c" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>addRepaintFull</name></member>
      <member refid="class_k_win_1_1_render_layer_1a2f5fdab5d1c25118123d231238111db6" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>addSublayer</name></member>
      <member refid="class_k_win_1_1_render_layer_1a691826937cecf64a858ff05d10a3cfef" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>boundingRect</name></member>
      <member refid="class_k_win_1_1_render_layer_1a7441b70f9c817c628d535b6e4b9e21a9" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>computeEffectiveVisibility</name></member>
      <member refid="class_k_win_1_1_render_layer_1ac2f579321b8cef6e169906180e77dfdd" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>delegate</name></member>
      <member refid="class_k_win_1_1_render_layer_1a7e9fb70baaa50b78b3e913dcdbf2eff0" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>geometry</name></member>
      <member refid="class_k_win_1_1_render_layer_1aebffa809e34f5628be502c0d37bbb140" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>isVisible</name></member>
      <member refid="class_k_win_1_1_render_layer_1a0c7777c1d08e169a4f54624736888600" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>loop</name></member>
      <member refid="class_k_win_1_1_render_layer_1abab2d7c92dca2c1a77fb385b62a99d89" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>m_boundingRect</name></member>
      <member refid="class_k_win_1_1_render_layer_1a3e78f238aaf745943cabffa1419eb342" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>m_delegate</name></member>
      <member refid="class_k_win_1_1_render_layer_1aee92fba9a52e95103da6110fc7f02c39" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>m_effectiveVisible</name></member>
      <member refid="class_k_win_1_1_render_layer_1af98210be4333e93c46f3f0974dd62938" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>m_explicitVisible</name></member>
      <member refid="class_k_win_1_1_render_layer_1a16ddd75c9fe5bd94d3d9258818c0f465" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>m_geometry</name></member>
      <member refid="class_k_win_1_1_render_layer_1a4b770184412847af242eeb4a80976107" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>m_loop</name></member>
      <member refid="class_k_win_1_1_render_layer_1afd8359173fd8d1100ea3543f88c65c44" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>m_outputLayer</name></member>
      <member refid="class_k_win_1_1_render_layer_1a265d45705aec9ccfb1cd54aa3d00169e" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>m_repaints</name></member>
      <member refid="class_k_win_1_1_render_layer_1a7964af93a1b32b4643f0b54d39fe0ca2" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>m_repaintScheduled</name></member>
      <member refid="class_k_win_1_1_render_layer_1abd786cdabd1dec7fbbb295c0bd79f80e" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>m_sublayers</name></member>
      <member refid="class_k_win_1_1_render_layer_1a0b1901cb19241b1d5479185dc2085f40" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>m_superlayer</name></member>
      <member refid="class_k_win_1_1_render_layer_1a604e383c01dcef9463753fc5906440cd" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_render_layer_1a933d8d4db377514cffb21d45929a1d42" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_render_layer_1a5a8cf22c168bf7044bdbe054bca2b4fa" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_render_layer_1ada390a068d054a03cdae088c027940c3" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_render_layer_1aa741225c30209e49a9cc10874ff869b5" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_render_layer_1a9a33e7110cb7115e3039d71394f7bf72" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>mapToGlobal</name></member>
      <member refid="class_k_win_1_1_render_layer_1a5656e44b0a5d3fdac1a2cce6f68ecec7" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>mapToGlobal</name></member>
      <member refid="class_k_win_1_1_render_layer_1ae18e535e85660065aa0543723b910461" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>mapToGlobal</name></member>
      <member refid="class_k_win_1_1_render_layer_1a4e0a0f594c891582756a266ed6c47c40" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>mapToGlobal</name></member>
      <member refid="class_k_win_1_1_render_layer_1a9f2942d1da9fd01691e8fe519ac8f36c" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>mapToGlobal</name></member>
      <member refid="class_k_win_1_1_render_layer_1ad2f4d60786eb2926785c643368626f53" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>needsRepaint</name></member>
      <member refid="class_k_win_1_1_render_layer_1a0cb75b41748c37fad7da5fae5ea01065" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>outputLayer</name></member>
      <member refid="class_k_win_1_1_render_layer_1a777d23d98521c8ae92678fbc2998bbed" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>rect</name></member>
      <member refid="class_k_win_1_1_render_layer_1a89bc6a21eaaf83c6b06e3b50fd747ef4" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>removeSublayer</name></member>
      <member refid="class_k_win_1_1_render_layer_1a1d324477a1aafb2180e1a3fb052cb776" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>RenderLayer</name></member>
      <member refid="class_k_win_1_1_render_layer_1a49b6ce9cce55a452dc9c4e41b084fbfb" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>repaints</name></member>
      <member refid="class_k_win_1_1_render_layer_1a28b5b0d9b91ecad39efbb43f02d8a572" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>resetRepaints</name></member>
      <member refid="class_k_win_1_1_render_layer_1a9c5b3debb4b46e21e93d4682dc61a4a6" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>scheduleRepaint</name></member>
      <member refid="class_k_win_1_1_render_layer_1a5a7d9d055cc13a33cb76e203eed13c6b" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>setDelegate</name></member>
      <member refid="class_k_win_1_1_render_layer_1a139a3fa85c6d484c1d23dc1a9d5292e2" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>setGeometry</name></member>
      <member refid="class_k_win_1_1_render_layer_1a00208253b6f98fa6d5c6a3361878237a" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>setOutputLayer</name></member>
      <member refid="class_k_win_1_1_render_layer_1a7f4e0dadce37b8ef03ba76e70952142e" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>setSuperlayer</name></member>
      <member refid="class_k_win_1_1_render_layer_1a080c4916b793831f63c122f43c58e55e" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>setVisible</name></member>
      <member refid="class_k_win_1_1_render_layer_1a5a2472d337136cf179ef2d69d3bd261f" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>sublayers</name></member>
      <member refid="class_k_win_1_1_render_layer_1ac45642a1e9369c025e0bc6b0b161df2f" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>superlayer</name></member>
      <member refid="class_k_win_1_1_render_layer_1ad73698f935b1145142bbf52d761cc66d" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>updateBoundingRect</name></member>
      <member refid="class_k_win_1_1_render_layer_1a7bfc340a7966f6f08f1c7156e6bc81cc" prot="private" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>updateEffectiveVisibility</name></member>
      <member refid="class_k_win_1_1_render_layer_1a977410380bcc517731ed117e4ef88632" prot="public" virt="non-virtual"><scope>KWin::RenderLayer</scope><name>~RenderLayer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
