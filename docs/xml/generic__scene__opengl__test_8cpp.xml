<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="generic__scene__opengl__test_8cpp" kind="file" language="C++">
    <compoundname>generic_scene_opengl_test.cpp</compoundname>
    <includes refid="generic__scene__opengl__test_8h" local="yes">generic_scene_opengl_test.h</includes>
    <includes local="yes">compositor.h</includes>
    <includes refid="renderbackend_8h" local="yes">core/renderbackend.h</includes>
    <includes refid="cursor_8h" local="yes">cursor.h</includes>
    <includes refid="effectloader_8h" local="yes">effect/effectloader.h</includes>
    <includes refid="workspacescene_8h" local="yes">scene/workspacescene.h</includes>
    <includes refid="wayland__server_8h" local="yes">wayland_server.h</includes>
    <includes local="yes">window.h</includes>
    <includes local="no">KConfigGroup</includes>
    <includes local="no">QSignalSpy</includes>
    <includes local="yes">moc_generic_scene_opengl_test.cpp</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/autotests/integration/generic_scene_opengl_test.cpp</label>
        <link refid="generic__scene__opengl__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>generic_scene_opengl_test.h</label>
        <link refid="generic__scene__opengl__test_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>kwin_wayland_test.h</label>
        <link refid="kwin__wayland__test_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>core/renderlayerdelegate.h</label>
        <link refid="renderlayerdelegate_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>effect/effectloader.h</label>
        <link refid="effectloader_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>scene/scene.h</label>
        <link refid="scene_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>scene/workspacescene.h</label>
        <link refid="workspacescene_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>wayland_server.h</label>
        <link refid="wayland__server_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>KConfigGroup</label>
      </node>
      <node id="58">
        <label>KPluginMetaData</label>
      </node>
      <node id="55">
        <label>KSharedConfig</label>
      </node>
      <node id="18">
        <label>KWayland/Client/surface.h</label>
      </node>
      <node id="44">
        <label>QByteArray</label>
      </node>
      <node id="7">
        <label>QCoreApplication</label>
      </node>
      <node id="47">
        <label>QDebug</label>
      </node>
      <node id="59">
        <label>QFlags</label>
      </node>
      <node id="54">
        <label>QHash</label>
      </node>
      <node id="8">
        <label>QImage</label>
      </node>
      <node id="45">
        <label>QList</label>
      </node>
      <node id="60">
        <label>QMap</label>
      </node>
      <node id="40">
        <label>QMatrix4x4</label>
      </node>
      <node id="13">
        <label>QObject</label>
      </node>
      <node id="61">
        <label>QPair</label>
      </node>
      <node id="9">
        <label>QPoint</label>
      </node>
      <node id="51">
        <label>QPointer</label>
      </node>
      <node id="62">
        <label>QQueue</label>
      </node>
      <node id="48">
        <label>QRect</label>
      </node>
      <node id="67">
        <label>QRegion</label>
      </node>
      <node id="70">
        <label>QSet</label>
      </node>
      <node id="16">
        <label>QSignalSpy</label>
      </node>
      <node id="46">
        <label>QSize</label>
      </node>
      <node id="63">
        <label>QStaticPlugin</label>
      </node>
      <node id="17">
        <label>QTest</label>
      </node>
      <node id="49">
        <label>QUuid</label>
      </node>
      <node id="10">
        <label>QVariant</label>
      </node>
      <node id="11">
        <label>QVector2D</label>
      </node>
      <node id="68">
        <label>chrono</label>
      </node>
      <node id="36">
        <label>compositor.h</label>
      </node>
      <node id="6">
        <label>config-kwin.h</label>
      </node>
      <node id="12">
        <label>kwin_export.h</label>
      </node>
      <node id="14">
        <label>main.h</label>
      </node>
      <node id="52">
        <label>memory</label>
      </node>
      <node id="72">
        <label>moc_generic_scene_opengl_test.cpp</label>
      </node>
      <node id="19">
        <label>optional</label>
      </node>
      <node id="20">
        <label>qwayland-color-management-v1.h</label>
      </node>
      <node id="21">
        <label>qwayland-cursor-shape-v1.h</label>
      </node>
      <node id="22">
        <label>qwayland-fake-input.h</label>
      </node>
      <node id="23">
        <label>qwayland-fractional-scale-v1.h</label>
      </node>
      <node id="24">
        <label>qwayland-idle-inhibit-unstable-v1.h</label>
      </node>
      <node id="25">
        <label>qwayland-input-method-unstable-v1.h</label>
      </node>
      <node id="26">
        <label>qwayland-kde-output-device-v2.h</label>
      </node>
      <node id="27">
        <label>qwayland-kde-output-management-v2.h</label>
      </node>
      <node id="28">
        <label>qwayland-kde-screen-edge-v1.h</label>
      </node>
      <node id="29">
        <label>qwayland-security-context-v1.h</label>
      </node>
      <node id="30">
        <label>qwayland-text-input-unstable-v3.h</label>
      </node>
      <node id="31">
        <label>qwayland-wlr-layer-shell-unstable-v1.h</label>
      </node>
      <node id="32">
        <label>qwayland-xdg-decoration-unstable-v1.h</label>
      </node>
      <node id="33">
        <label>qwayland-xdg-dialog-v1.h</label>
      </node>
      <node id="34">
        <label>qwayland-xdg-shell.h</label>
      </node>
      <node id="35">
        <label>qwayland-zkde-screencast-unstable-v1.h</label>
      </node>
      <node id="15">
        <label>window.h</label>
      </node>
      <node id="56">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="generic__scene__opengl__test_8cpp_1a485d6ddd568caea0908934bfdb9fbadb" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString s_socketName</definition>
        <argsstring></argsstring>
        <name>s_socketName</name>
        <initializer>= QStringLiteral(&quot;wayland_test_kwin_scene_opengl-0&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/generic_scene_opengl_test.cpp" line="22" column="22" bodyfile="kwin/autotests/integration/generic_scene_opengl_test.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2016<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="generic__scene__opengl__test_8h" kindref="compound">generic_scene_opengl_test.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compositor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderbackend_8h" kindref="compound">core/renderbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cursor_8h" kindref="compound">cursor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="effectloader_8h" kindref="compound">effect/effectloader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspacescene_8h" kindref="compound">scene/workspacescene.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland__server_8h" kindref="compound">wayland_server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KConfigGroup&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSignalSpy&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>s_socketName<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;wayland_test_kwin_scene_opengl-0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_generic_scene_open_g_l_test_1a5f83ef979e98225e5d4878258e470ede" refkind="member"><highlight class="normal"><ref refid="class_generic_scene_open_g_l_test_1a5f83ef979e98225e5d4878258e470ede" kindref="member">GenericSceneOpenGLTest::GenericSceneOpenGLTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;envVariable)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject()</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_envVariable(envVariable)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_generic_scene_open_g_l_test_1ae8f1b869c0ffbbf7f8922340b7384820" refkind="member"><highlight class="normal"><ref refid="class_generic_scene_open_g_l_test_1ae8f1b869c0ffbbf7f8922340b7384820" kindref="member">GenericSceneOpenGLTest::~GenericSceneOpenGLTest</ref>()</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GenericSceneOpenGLTest::cleanup()</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a12755bae9118cb958baf0efbd222d7c8" kindref="member">Test::destroyWaylandConnection</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GenericSceneOpenGLTest::initTestCase()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1_1_test_1a92ed8ed368ec43eae0bf76b866e14b24" kindref="member">Test::renderNodeAvailable</ref>())<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSKIP(</highlight><highlight class="stringliteral">&quot;no<sp/>render<sp/>node<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;KWin::Window<sp/>*&gt;();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;init(s_socketName));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(1280,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>all<sp/>effects<sp/>-<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>have<sp/>it<sp/>interact<sp/>with<sp/>the<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>config<sp/>=<sp/>KSharedConfig::openConfig(QString(),<sp/>KConfig::SimpleConfig);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>KConfigGroup<sp/>plugins(config,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Plugins&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builtinNames<sp/>=<sp/>EffectLoader().listOfKnownEffects();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QString<sp/>name<sp/>:<sp/>builtinNames)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugins.writeEntry(name<sp/>+<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Enabled&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;sync();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>kwinApp()-&gt;setConfig(config);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>qputenv(</highlight><highlight class="stringliteral">&quot;XCURSOR_THEME&quot;</highlight><highlight class="normal">,<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;breeze_cursors&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>qputenv(</highlight><highlight class="stringliteral">&quot;XCURSOR_SIZE&quot;</highlight><highlight class="normal">,<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;24&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>qputenv(</highlight><highlight class="stringliteral">&quot;KWIN_COMPOSE&quot;</highlight><highlight class="normal">,<sp/>m_envVariable);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>kwinApp()-&gt;start();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" kindref="member">Compositor::self</ref>());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(<ref refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" kindref="member">Compositor::self</ref>()-&gt;backend()-&gt;compositingType(),<sp/><ref refid="namespace_k_win_1aa1e33474a7077a13169f350a5949a79aa9d91b030a3a42dc544de4de6f0d46b1d" kindref="member">KWin::OpenGLCompositing</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GenericSceneOpenGLTest::testRestart()</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simple<sp/>restart<sp/>of<sp/>the<sp/>OpenGL<sp/>compositor<sp/>without<sp/>any<sp/>windows<sp/>being<sp/>shown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>sceneCreatedSpy(<ref refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" kindref="member">KWin::Compositor::self</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_compositor_1a87f603b7b663cf65e1855fc21aeae435" kindref="member">Compositor::sceneCreated</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" kindref="member">KWin::Compositor::self</ref>()-&gt;<ref refid="class_k_win_1_1_compositor_1a66ea6f3213ce7178248c24a8a6d01993" kindref="member">reinitialize</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sceneCreatedSpy.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(sceneCreatedSpy.wait());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(sceneCreatedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(<ref refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" kindref="member">Compositor::self</ref>()-&gt;backend()-&gt;compositingType(),<sp/><ref refid="namespace_k_win_1aa1e33474a7077a13169f350a5949a79aa9d91b030a3a42dc544de4de6f0d46b1d" kindref="member">KWin::OpenGLCompositing</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trigger<sp/>a<sp/>repaint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" kindref="member">KWin::Compositor::self</ref>()-&gt;<ref refid="class_k_win_1_1_compositor_1a42a38d690d77c464869c520189c99904" kindref="member">scene</ref>()-&gt;<ref refid="class_k_win_1_1_scene_1a4be6a7157fceae2e27684fb19dad256b" kindref="member">addRepaintFull</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>wait<sp/>100<sp/>msec<sp/>to<sp/>ensure<sp/>it&apos;s<sp/>rendered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>introduce<sp/>frameRendered<sp/>signal<sp/>in<sp/>SceneOpenGL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::qWait(100);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_generic_scene_opengl_test.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/autotests/integration/generic_scene_opengl_test.cpp"/>
  </compounddef>
</doxygen>
