<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="activation_8cpp" kind="file" language="C++">
    <compoundname>activation.cpp</compoundname>
    <includes refid="cursor_8h" local="yes">cursor.h</includes>
    <includes refid="focuschain_8h" local="yes">focuschain.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes refid="rules_8h" local="yes">rules.h</includes>
    <includes refid="useractions_8h" local="yes">useractions.h</includes>
    <includes refid="virtualdesktops_8h" local="yes">virtualdesktops.h</includes>
    <includes refid="waylandwindow_8h" local="yes">waylandwindow.h</includes>
    <includes refid="window_8h" local="yes">window.h</includes>
    <includes local="no">KLocalizedString</includes>
    <includes local="no">QDebug</includes>
    <includes local="no">kstringhandler.h</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/activation.cpp</label>
        <link refid="activation_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>core/renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>focuschain.h</label>
        <link refid="focuschain_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>rules.h</label>
        <link refid="rules_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>useractions.h</label>
        <link refid="useractions_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>virtualdesktops.h</label>
        <link refid="virtualdesktops_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>waylandwindow.h</label>
        <link refid="waylandwindow_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>window.h</label>
        <link refid="window_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>KConfig</label>
      </node>
      <node id="32">
        <label>KConfigGroup</label>
      </node>
      <node id="24">
        <label>KConfigWatcher</label>
      </node>
      <node id="63">
        <label>KLocalizedString</label>
      </node>
      <node id="13">
        <label>KSharedConfig</label>
      </node>
      <node id="21">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="49">
        <label>QAction</label>
      </node>
      <node id="22">
        <label>QApplication</label>
      </node>
      <node id="35">
        <label>QByteArray</label>
      </node>
      <node id="5">
        <label>QCoreApplication</label>
      </node>
      <node id="26">
        <label>QDBusContext</label>
      </node>
      <node id="27">
        <label>QDataStream</label>
      </node>
      <node id="58">
        <label>QDebug</label>
      </node>
      <node id="47">
        <label>QDialog</label>
      </node>
      <node id="60">
        <label>QElapsedTimer</label>
      </node>
      <node id="11">
        <label>QHash</label>
      </node>
      <node id="61">
        <label>QIcon</label>
      </node>
      <node id="6">
        <label>QImage</label>
      </node>
      <node id="62">
        <label>QKeySequence</label>
      </node>
      <node id="37">
        <label>QList</label>
      </node>
      <node id="38">
        <label>QLoggingCategory</label>
      </node>
      <node id="39">
        <label>QMatrix4x4</label>
      </node>
      <node id="12">
        <label>QObject</label>
      </node>
      <node id="7">
        <label>QPoint</label>
      </node>
      <node id="28">
        <label>QPointer</label>
      </node>
      <node id="23">
        <label>QProcessEnvironment</label>
      </node>
      <node id="29">
        <label>QRect</label>
      </node>
      <node id="44">
        <label>QRectF</label>
      </node>
      <node id="50">
        <label>QSize</label>
      </node>
      <node id="36">
        <label>QString</label>
      </node>
      <node id="30">
        <label>QStringList</label>
      </node>
      <node id="31">
        <label>QTimer</label>
      </node>
      <node id="59">
        <label>QUuid</label>
      </node>
      <node id="8">
        <label>QVariant</label>
      </node>
      <node id="9">
        <label>QVector2D</label>
      </node>
      <node id="40">
        <label>climits</label>
      </node>
      <node id="4">
        <label>config-kwin.h</label>
      </node>
      <node id="42">
        <label>functional</label>
      </node>
      <node id="64">
        <label>kstringhandler.h</label>
      </node>
      <node id="10">
        <label>kwin_export.h</label>
      </node>
      <node id="20">
        <label>memory</label>
      </node>
      <node id="41">
        <label>netwm_def.h</label>
      </node>
      <node id="57">
        <label>optional</label>
      </node>
      <node id="46">
        <label>ui_shortcutdialog.h</label>
      </node>
      <node id="14">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>1999,<sp/>2000<sp/>Matthias<sp/>Ettrich<sp/>&lt;ettrich@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2003<sp/>Lubos<sp/>Lunak<sp/>&lt;l.lunak@kde.org&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>This<sp/>file<sp/>contains<sp/>things<sp/>relevant<sp/>to<sp/>window<sp/>activation<sp/>and<sp/>focus</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>stealing<sp/>prevention.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cursor_8h" kindref="compound">cursor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="focuschain_8h" kindref="compound">focuschain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_ACTIVITIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="activities_8h" kindref="compound">activities.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rules_8h" kindref="compound">rules.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="useractions_8h" kindref="compound">useractions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="virtualdesktops_8h" kindref="compound">virtualdesktops.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="waylandwindow_8h" kindref="compound">waylandwindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="window_8h" kindref="compound">window.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="atoms_8h" kindref="compound">atoms.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="group_8h" kindref="compound">group.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="netinfo_8h" kindref="compound">netinfo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="x11window_8h" kindref="compound">x11window.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kstartupinfo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KLocalizedString&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDebug&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kstringhandler.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>Prevention<sp/>of<sp/>focus<sp/>stealing:</highlight></codeline>
<codeline lineno="47"><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>KWin<sp/>tries<sp/>to<sp/>prevent<sp/>unwanted<sp/>changes<sp/>of<sp/>focus,<sp/>that<sp/>would<sp/>result</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>from<sp/>mapping<sp/>a<sp/>new<sp/>window.<sp/>Also,<sp/>some<sp/>nasty<sp/>applications<sp/>may<sp/>try</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>to<sp/>force<sp/>focus<sp/>change<sp/>even<sp/>in<sp/>cases<sp/>when<sp/>ICCCM<sp/>4.2.7<sp/>doesn&apos;t<sp/>allow<sp/>it</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>(e.g.<sp/>they<sp/>may<sp/>try<sp/>to<sp/>activate<sp/>their<sp/>main<sp/>window<sp/>because<sp/>the<sp/>user</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>definitely<sp/>&quot;needs&quot;<sp/>to<sp/>see<sp/>something<sp/>happened<sp/>-<sp/>misusing</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>of<sp/>QWidget::setActiveWindow()<sp/>may<sp/>be<sp/>such<sp/>case).</highlight></codeline>
<codeline lineno="54"><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>There<sp/>are<sp/>4<sp/>ways<sp/>how<sp/>a<sp/>window<sp/>may<sp/>become<sp/>active:</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>-<sp/>the<sp/>user<sp/>changes<sp/>the<sp/>active<sp/>window<sp/>(e.g.<sp/>focus<sp/>follows<sp/>mouse,<sp/>clicking</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/>on<sp/>some<sp/>window&apos;s<sp/>titlebar)<sp/>-<sp/>the<sp/>change<sp/>of<sp/>focus<sp/>will</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/>be<sp/>done<sp/>by<sp/>KWin,<sp/>so<sp/>there&apos;s<sp/>nothing<sp/>to<sp/>solve<sp/>in<sp/>this<sp/>case</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>-<sp/>the<sp/>change<sp/>of<sp/>active<sp/>window<sp/>will<sp/>be<sp/>requested<sp/>using<sp/>the<sp/>_NET_ACTIVE_WINDOW</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/>message<sp/>(handled<sp/>in<sp/>RootInfo::changeActiveWindow())<sp/>-<sp/>such<sp/>requests</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/>will<sp/>be<sp/>obeyed,<sp/>because<sp/>this<sp/>request<sp/>is<sp/>meant<sp/>mainly<sp/>for<sp/>e.g.<sp/>taskbar</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/>asking<sp/>the<sp/>WM<sp/>to<sp/>change<sp/>the<sp/>active<sp/>window<sp/>as<sp/>a<sp/>result<sp/>of<sp/>some<sp/>user<sp/>action.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/>Normal<sp/>applications<sp/>should<sp/>use<sp/>this<sp/>request<sp/>only<sp/>rarely<sp/>in<sp/>special<sp/>cases.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/>See<sp/>also<sp/>below<sp/>the<sp/>discussion<sp/>of<sp/>_NET_ACTIVE_WINDOW_TRANSFER.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>-<sp/>the<sp/>change<sp/>of<sp/>active<sp/>window<sp/>will<sp/>be<sp/>done<sp/>by<sp/>performing<sp/>XSetInputFocus()</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/>on<sp/>a<sp/>window<sp/>that&apos;s<sp/>not<sp/>currently<sp/>active.<sp/>ICCCM<sp/>4.2.7<sp/>describes<sp/>when</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/>the<sp/>application<sp/>may<sp/>perform<sp/>change<sp/>of<sp/>input<sp/>focus.<sp/>In<sp/>order<sp/>to<sp/>handle</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/>misbehaving<sp/>applications,<sp/>KWin<sp/>will<sp/>try<sp/>to<sp/>detect<sp/>focus<sp/>changes<sp/>to</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>windows<sp/>that<sp/>don&apos;t<sp/>belong<sp/>to<sp/>currently<sp/>active<sp/>application,<sp/>and<sp/>restore</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/>focus<sp/>back<sp/>to<sp/>the<sp/>currently<sp/>active<sp/>window,<sp/>instead<sp/>of<sp/>activating<sp/>the<sp/>window</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/>that<sp/>got<sp/>focus<sp/>(unfortunately<sp/>there&apos;s<sp/>no<sp/>way<sp/>to<sp/>FocusChangeRedirect<sp/>similar</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/>to<sp/>e.g.<sp/>SubstructureRedirect,<sp/>so<sp/>there<sp/>will<sp/>be<sp/>short<sp/>time<sp/>when<sp/>the<sp/>focus</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/>will<sp/>be<sp/>changed).<sp/>The<sp/>check<sp/>itself<sp/>that&apos;s<sp/>done<sp/>is</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/>Workspace::allowWindowActivation()<sp/>(see<sp/>below).</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>-<sp/>a<sp/>new<sp/>window<sp/>will<sp/>be<sp/>mapped<sp/>-<sp/>this<sp/>is<sp/>the<sp/>most<sp/>complicated<sp/>case.<sp/>If</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/>the<sp/>new<sp/>window<sp/>belongs<sp/>to<sp/>the<sp/>currently<sp/>active<sp/>application,<sp/>it<sp/>may<sp/>be<sp/>safely</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/>mapped<sp/>on<sp/>top<sp/>and<sp/>activated.<sp/>The<sp/>same<sp/>if<sp/>there&apos;s<sp/>no<sp/>active<sp/>window,</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/>or<sp/>the<sp/>active<sp/>window<sp/>is<sp/>the<sp/>desktop.<sp/>These<sp/>checks<sp/>are<sp/>done<sp/>by</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/>Workspace::allowWindowActivation().</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/>Following<sp/>checks<sp/>need<sp/>to<sp/>compare<sp/>times.<sp/>One<sp/>time<sp/>is<sp/>the<sp/>timestamp</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/>of<sp/>last<sp/>user<sp/>action<sp/>in<sp/>the<sp/>currently<sp/>active<sp/>window,<sp/>the<sp/>other<sp/>time<sp/>is</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/>the<sp/>timestamp<sp/>of<sp/>the<sp/>action<sp/>that<sp/>originally<sp/>caused<sp/>mapping<sp/>of<sp/>the<sp/>new<sp/>window</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/>(e.g.<sp/>when<sp/>the<sp/>application<sp/>was<sp/>started).<sp/>If<sp/>the<sp/>first<sp/>time<sp/>is<sp/>newer<sp/>than</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/>the<sp/>second<sp/>one,<sp/>the<sp/>window<sp/>will<sp/>not<sp/>be<sp/>activated,<sp/>as<sp/>that<sp/>indicates</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/>futher<sp/>user<sp/>actions<sp/>took<sp/>place<sp/>after<sp/>the<sp/>action<sp/>leading<sp/>to<sp/>this<sp/>new</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/>mapped<sp/>window.<sp/>This<sp/>check<sp/>is<sp/>done<sp/>by<sp/>Workspace::allowWindowActivation().</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/>There<sp/>are<sp/>several<sp/>ways<sp/>how<sp/>to<sp/>get<sp/>the<sp/>timestamp<sp/>of<sp/>action<sp/>that<sp/>caused</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/>the<sp/>new<sp/>mapped<sp/>window<sp/>(done<sp/>in<sp/>X11Window::readUserTimeMapTimestamp())<sp/>:</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>-<sp/>the<sp/>window<sp/>may<sp/>have<sp/>the<sp/>_NET_WM_USER_TIME<sp/>property.<sp/>This<sp/>way</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>application<sp/>may<sp/>either<sp/>explicitly<sp/>request<sp/>that<sp/>the<sp/>window<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>activated<sp/>(by<sp/>using<sp/>0<sp/>timestamp),<sp/>or<sp/>the<sp/>property<sp/>contains<sp/>the<sp/>time</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>last<sp/>user<sp/>action<sp/>in<sp/>the<sp/>application.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>-<sp/>KWin<sp/>itself<sp/>tries<sp/>to<sp/>detect<sp/>time<sp/>of<sp/>last<sp/>user<sp/>action<sp/>in<sp/>every<sp/>window,</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>watching<sp/>KeyPress<sp/>and<sp/>ButtonPress<sp/>events<sp/>on<sp/>windows.<sp/>This<sp/>way<sp/>some</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events<sp/>may<sp/>be<sp/>missed<sp/>(if<sp/>they<sp/>don&apos;t<sp/>propagate<sp/>to<sp/>the<sp/>toplevel<sp/>window),</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>it&apos;s<sp/>good<sp/>as<sp/>a<sp/>fallback<sp/>for<sp/>applications<sp/>that<sp/>don&apos;t<sp/>provide</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_NET_WM_USER_TIME,<sp/>and<sp/>missing<sp/>some<sp/>events<sp/>may<sp/>at<sp/>most<sp/>lead</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>unwanted<sp/>focus<sp/>stealing.</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>-<sp/>the<sp/>timestamp<sp/>may<sp/>come<sp/>from<sp/>application<sp/>startup<sp/>notification.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Application<sp/>startup<sp/>notification,<sp/>if<sp/>it<sp/>exists<sp/>for<sp/>the<sp/>new<sp/>mapped<sp/>window,</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>include<sp/>time<sp/>of<sp/>the<sp/>user<sp/>action<sp/>that<sp/>caused<sp/>it.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>-<sp/>if<sp/>there&apos;s<sp/>no<sp/>timestamp<sp/>available,<sp/>it&apos;s<sp/>checked<sp/>whether<sp/>the<sp/>new<sp/>window</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belongs<sp/>to<sp/>some<sp/>already<sp/>running<sp/>application<sp/>-<sp/>if<sp/>yes,<sp/>the<sp/>timestamp</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>be<sp/>0<sp/>(i.e.<sp/>refuse<sp/>activation)</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>-<sp/>if<sp/>the<sp/>window<sp/>is<sp/>from<sp/>session<sp/>restored<sp/>window,<sp/>the<sp/>timestamp<sp/>will</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>0<sp/>too,<sp/>unless<sp/>this<sp/>application<sp/>was<sp/>the<sp/>active<sp/>one<sp/>at<sp/>the<sp/>time</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>the<sp/>session<sp/>was<sp/>saved,<sp/>in<sp/>which<sp/>case<sp/>the<sp/>window<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>activated<sp/>if<sp/>there<sp/>wasn&apos;t<sp/>any<sp/>user<sp/>interaction<sp/>since<sp/>the<sp/>time</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KWin<sp/>was<sp/>started.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>-<sp/>as<sp/>the<sp/>last<sp/>resort,<sp/>the<sp/>_KDE_NET_USER_CREATION_TIME<sp/>timestamp</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>used.<sp/>For<sp/>every<sp/>toplevel<sp/>window<sp/>that<sp/>is<sp/>created<sp/>(see<sp/>CreateNotify</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handling),<sp/>this<sp/>property<sp/>is<sp/>set<sp/>to<sp/>the<sp/>at<sp/>that<sp/>time<sp/>current<sp/>time.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Since<sp/>at<sp/>this<sp/>time<sp/>it&apos;s<sp/>known<sp/>that<sp/>the<sp/>new<sp/>window<sp/>doesn&apos;t<sp/>belong</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>any<sp/>existing<sp/>application<sp/>(better<sp/>said,<sp/>the<sp/>application<sp/>doesn&apos;t</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>any<sp/>other<sp/>window<sp/>mapped),<sp/>it<sp/>is<sp/>either<sp/>the<sp/>very<sp/>first<sp/>window</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>application,<sp/>or<sp/>it<sp/>is<sp/>the<sp/>only<sp/>window<sp/>of<sp/>the<sp/>application</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>was<sp/>hidden<sp/>before.<sp/>The<sp/>latter<sp/>case<sp/>is<sp/>handled<sp/>by<sp/>removing</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>property<sp/>from<sp/>windows<sp/>before<sp/>withdrawing<sp/>them,<sp/>making</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>timestamp<sp/>empty<sp/>for<sp/>next<sp/>mapping<sp/>of<sp/>the<sp/>window.<sp/>In<sp/>the<sp/>sooner</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case,<sp/>the<sp/>timestamp<sp/>will<sp/>be<sp/>used.<sp/>This<sp/>helps<sp/>in<sp/>case<sp/>when</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>application<sp/>is<sp/>launched<sp/>without<sp/>application<sp/>startup<sp/>notification,</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>creates<sp/>its<sp/>mainwindow,<sp/>and<sp/>starts<sp/>its<sp/>initialization<sp/>(that</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>may<sp/>possibly<sp/>take<sp/>long<sp/>time).<sp/>The<sp/>timestamp<sp/>used<sp/>will<sp/>be<sp/>older</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>than<sp/>any<sp/>user<sp/>action<sp/>done<sp/>after<sp/>launching<sp/>this<sp/>application.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>-<sp/>if<sp/>no<sp/>timestamp<sp/>is<sp/>found<sp/>at<sp/>all,<sp/>the<sp/>window<sp/>is<sp/>activated.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>check<sp/>whether<sp/>two<sp/>windows<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>application<sp/>(same</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/>process)<sp/>is<sp/>done<sp/>in<sp/>X11Window::belongToSameApplication().<sp/>Not<sp/>100%<sp/>reliable,</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/>but<sp/>hopefully<sp/>99,99%<sp/>reliable.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>As<sp/>a<sp/>somewhat<sp/>special<sp/>case,<sp/>window<sp/>activation<sp/>is<sp/>always<sp/>enabled<sp/>when</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>session<sp/>saving<sp/>is<sp/>in<sp/>progress.<sp/>When<sp/>session<sp/>saving,<sp/>the<sp/>session</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>manager<sp/>allows<sp/>only<sp/>one<sp/>application<sp/>to<sp/>interact<sp/>with<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>Not<sp/>allowing<sp/>window<sp/>activation<sp/>in<sp/>such<sp/>case<sp/>would<sp/>result<sp/>in<sp/>e.g.<sp/>dialogs</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>not<sp/>becoming<sp/>active,<sp/>so<sp/>focus<sp/>stealing<sp/>prevention<sp/>would<sp/>cause<sp/>here</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>more<sp/>harm<sp/>than<sp/>good.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>Windows<sp/>that<sp/>attempted<sp/>to<sp/>become<sp/>active<sp/>but<sp/>KWin<sp/>prevented<sp/>this<sp/>will</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>be<sp/>marked<sp/>as<sp/>demanding<sp/>user<sp/>attention.<sp/>They&apos;ll<sp/>get</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>the<sp/>_NET_WM_STATE_DEMANDS_ATTENTION<sp/>state,<sp/>and<sp/>the<sp/>taskbar<sp/>should<sp/>mark</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>them<sp/>specially<sp/>(blink,<sp/>etc.).<sp/>The<sp/>state<sp/>will<sp/>be<sp/>reset<sp/>when<sp/>the<sp/>window</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>eventually<sp/>really<sp/>becomes<sp/>active.</highlight></codeline>
<codeline lineno="142"><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>There<sp/>are<sp/>two<sp/>more<sp/>ways<sp/>how<sp/>a<sp/>window<sp/>can<sp/>become<sp/>obtrusive,<sp/>window<sp/>stealing</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>focus:<sp/>By<sp/>showing<sp/>above<sp/>the<sp/>active<sp/>window,<sp/>by<sp/>either<sp/>raising<sp/>itself,</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>or<sp/>by<sp/>moving<sp/>itself<sp/>on<sp/>the<sp/>active<sp/>desktop.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>-<sp/>KWin<sp/>will<sp/>refuse<sp/>raising<sp/>non-active<sp/>window<sp/>above<sp/>the<sp/>active<sp/>one,</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unless<sp/>they<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>application.<sp/>Applications<sp/>shouldn&apos;t</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>their<sp/>windows<sp/>anyway<sp/>(unless<sp/>the<sp/>app<sp/>wants<sp/>to<sp/>raise<sp/>one</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>its<sp/>windows<sp/>above<sp/>another<sp/>of<sp/>its<sp/>windows).</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>-<sp/>KWin<sp/>activates<sp/>windows<sp/>moved<sp/>to<sp/>the<sp/>current<sp/>desktop<sp/>(as<sp/>that<sp/>seems</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logical<sp/>from<sp/>the<sp/>user&apos;s<sp/>point<sp/>of<sp/>view,<sp/>after<sp/>sending<sp/>the<sp/>window</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>there<sp/>directly<sp/>from<sp/>KWin,<sp/>or<sp/>e.g.<sp/>using<sp/>pager).<sp/>This<sp/>means</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>applications<sp/>shouldn&apos;t<sp/>send<sp/>their<sp/>windows<sp/>to<sp/>another<sp/>desktop</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SELI<sp/>TODO<sp/>-<sp/>but<sp/>what<sp/>if<sp/>they<sp/>do?)</highlight></codeline>
<codeline lineno="155"><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>Special<sp/>cases<sp/>I<sp/>can<sp/>think<sp/>of:</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>konqueror<sp/>reusing,<sp/>i.e.<sp/>kfmclient<sp/>tells<sp/>running<sp/>Konqueror<sp/>instance</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>open<sp/>new<sp/>window</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>without<sp/>focus<sp/>stealing<sp/>prevention<sp/>-<sp/>no<sp/>problem</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>with<sp/>ASN<sp/>(application<sp/>startup<sp/>notification)<sp/>-<sp/>ASN<sp/>is<sp/>forwarded,</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>because<sp/>it&apos;s<sp/>newer<sp/>than<sp/>the<sp/>instance&apos;s<sp/>user<sp/>timestamp,</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>takes<sp/>precedence</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>without<sp/>ASN<sp/>-<sp/>user<sp/>timestamp<sp/>needs<sp/>to<sp/>be<sp/>reset,<sp/>otherwise<sp/>it<sp/>would</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>used,<sp/>and<sp/>it&apos;s<sp/>old;<sp/>moreover<sp/>this<sp/>new<sp/>window<sp/>mustn&apos;t<sp/>be<sp/>detected</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>window<sp/>belonging<sp/>to<sp/>already<sp/>running<sp/>application,<sp/>or<sp/>it<sp/>wouldn&apos;t</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>activated<sp/>-<sp/>see<sp/>X11Window::sameAppWindowRoleMatch()<sp/>for<sp/>the<sp/>(rather<sp/>ugly)</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hack</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>konqueror<sp/>preloading,<sp/>i.e.<sp/>window<sp/>is<sp/>created<sp/>in<sp/>advance,<sp/>and<sp/>kfmclient</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tells<sp/>this<sp/>Konqueror<sp/>instance<sp/>to<sp/>show<sp/>it<sp/>later</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>without<sp/>focus<sp/>stealing<sp/>prevention<sp/>-<sp/>no<sp/>problem</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>with<sp/>ASN<sp/>-<sp/>ASN<sp/>is<sp/>forwarded,<sp/>and<sp/>because<sp/>it&apos;s<sp/>newer<sp/>than<sp/>the<sp/>instance&apos;s</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user<sp/>timestamp,<sp/>it<sp/>takes<sp/>precedence</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>without<sp/>ASN<sp/>-<sp/>user<sp/>timestamp<sp/>needs<sp/>to<sp/>be<sp/>reset,<sp/>otherwise<sp/>it<sp/>would</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>used,<sp/>and<sp/>it&apos;s<sp/>old;<sp/>also,<sp/>creation<sp/>timestamp<sp/>is<sp/>changed<sp/>to</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>time<sp/>the<sp/>instance<sp/>starts<sp/>(re-)initializing<sp/>the<sp/>window,</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>ensures<sp/>creation<sp/>timestamp<sp/>will<sp/>still<sp/>work<sp/>somewhat<sp/>even<sp/>in<sp/>this<sp/>case</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>KUniqueApplication<sp/>-<sp/>when<sp/>the<sp/>window<sp/>is<sp/>already<sp/>visible,<sp/>and<sp/>the<sp/>new<sp/>instance</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wants<sp/>it<sp/>to<sp/>activate</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>without<sp/>focus<sp/>stealing<sp/>prevention<sp/>-<sp/>_NET_ACTIVE_WINDOW<sp/>-<sp/>no<sp/>problem</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>with<sp/>ASN<sp/>-<sp/>ASN<sp/>is<sp/>forwarded,<sp/>and<sp/>set<sp/>on<sp/>the<sp/>already<sp/>visible<sp/>window,<sp/>KWin</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>treats<sp/>the<sp/>window<sp/>as<sp/>new<sp/>with<sp/>that<sp/>ASN</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>without<sp/>ASN<sp/>-<sp/>_NET_ACTIVE_WINDOW<sp/>as<sp/>application<sp/>request<sp/>is<sp/>used,</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>there&apos;s<sp/>no<sp/>really<sp/>usable<sp/>timestamp,<sp/>only<sp/>timestamp</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>the<sp/>time<sp/>the<sp/>(new)<sp/>application<sp/>instance<sp/>was<sp/>started,</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>so<sp/>KWin<sp/>will<sp/>activate<sp/>the<sp/>window<sp/>*sigh*</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>the<sp/>bad<sp/>thing<sp/>here<sp/>is<sp/>that<sp/>there&apos;s<sp/>absolutely<sp/>no<sp/>chance<sp/>to<sp/>recognize</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>case<sp/>of<sp/>starting<sp/>this<sp/>KUniqueApp<sp/>from<sp/>Konsole<sp/>(and<sp/>thus<sp/>wanting</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>already<sp/>visible<sp/>window<sp/>to<sp/>become<sp/>active)<sp/>from<sp/>the<sp/>case</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>something<sp/>started<sp/>this<sp/>KUniqueApp<sp/>without<sp/>ASN<sp/>(in<sp/>which<sp/>case</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>already<sp/>visible<sp/>window<sp/>shouldn&apos;t<sp/>become<sp/>active)</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>the<sp/>only<sp/>solution<sp/>is<sp/>using<sp/>ASN<sp/>for<sp/>starting<sp/>applications,<sp/>at<sp/>least<sp/>silent</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i.e.<sp/>without<sp/>feedback)</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>when<sp/>one<sp/>application<sp/>wants<sp/>to<sp/>activate<sp/>another<sp/>application&apos;s<sp/>window<sp/>(e.g.<sp/>KMail</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>activating<sp/>already<sp/>running<sp/>KAddressBook<sp/>window<sp/>?)</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>without<sp/>focus<sp/>stealing<sp/>prevention<sp/>-<sp/>_NET_ACTIVE_WINDOW<sp/>-<sp/>no<sp/>problem</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>with<sp/>ASN<sp/>-<sp/>can&apos;t<sp/>be<sp/>here,<sp/>it&apos;s<sp/>the<sp/>KUniqueApp<sp/>case<sp/>then</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>without<sp/>ASN<sp/>-<sp/>_NET_ACTIVE_WINDOW<sp/>as<sp/>application<sp/>request<sp/>should<sp/>be<sp/>used,</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KWin<sp/>will<sp/>activate<sp/>the<sp/>new<sp/>window<sp/>depending<sp/>on<sp/>the<sp/>timestamp<sp/>and</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whether<sp/>it<sp/>belongs<sp/>to<sp/>the<sp/>currently<sp/>active<sp/>application</highlight></codeline>
<codeline lineno="200"><highlight class="comment"></highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>_NET_ACTIVE_WINDOW<sp/>usage:</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>data.l[0]=<sp/>1<sp/>-&gt;app<sp/>request</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2<sp/>-&gt;pager<sp/>request</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0<sp/>-<sp/>backwards<sp/>compatibility</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>data.l[1]=<sp/>timestamp</highlight></codeline>
<codeline lineno="206"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//****************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Workspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//****************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="class_k_win_1_1_workspace_1aafa49cabb69a96aef0140b23c791b5f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1aafa49cabb69a96aef0140b23c791b5f7" kindref="member">Workspace::setActiveWindow</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_activeWindow<sp/>==<sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(active_popup<sp/>&amp;&amp;<sp/>m_activePopupWindow<sp/>!=<sp/>window<sp/>&amp;&amp;<sp/>m_setActiveWindowRecursion<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closeActivePopup();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_userActionsMenu-&gt;hasWindow()<sp/>&amp;&amp;<sp/>!m_userActionsMenu-&gt;isMenuWindow(window)<sp/>&amp;&amp;<sp/>m_setActiveWindowRecursion<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_userActionsMenu-&gt;close();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1abd680430e0a19c1a0806c197ce217a30" kindref="member">StackingUpdatesBlocker</ref><sp/>blocker(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_setActiveWindowRecursion;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a9d46ff69d3fe34c0691f5f1f4d271bca" kindref="member">updateFocusMousePosition</ref>(<ref refid="class_k_win_1_1_cursors_1a5e43427047cf7663b4d9723fac4c1408" kindref="member">Cursors::self</ref>()-&gt;mouse()-&gt;pos());</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qobject_cast&lt;WaylandWindow<sp/>*&gt;(window))<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>focusIn<sp/>events<sp/>only<sp/>arrive<sp/>for<sp/>X11<sp/>windows,<sp/>Wayland<sp/>windows<sp/>don&apos;t<sp/>use<sp/>such<sp/>a<sp/>mechanism</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>so<sp/>X11<sp/>windows<sp/>could<sp/>wrongly<sp/>get<sp/>stuck<sp/>in<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should_get_focus.clear();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_activeWindow<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>this<sp/>may<sp/>call<sp/>setActiveWindow(<sp/>NULL<sp/>),<sp/>therefore<sp/>the<sp/>recursion<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_activeWindow-&gt;setActive(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>m_activeWindow<sp/>=<sp/>window;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(window<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a8466be38391212ef29a4c880506eb069" kindref="member">isActive</ref>());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_activeWindow)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastActiveWindow<sp/>=<sp/>m_activeWindow;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_focusChain-&gt;update(m_activeWindow,<sp/><ref refid="class_k_win_1_1_focus_chain_1acab3b23e1580c8efd3734cf5f5243de7a9b0c9b8b20ea9d810dbf7be51526f985" kindref="member">FocusChain::MakeFirst</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_activeWindow-&gt;demandAttention(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>activating<sp/>a<sp/>client<sp/>can<sp/>cause<sp/>a<sp/>non<sp/>active<sp/>fullscreen<sp/>window<sp/>to<sp/>loose<sp/>the<sp/>ActiveLayer<sp/>status<sp/>on<sp/>&gt;<sp/>1<sp/>screens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_workspace_1aaee7f44422f40ea8256b2f54e83a2b37" kindref="member">outputs</ref>().count()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_windows.begin();<sp/>it<sp/>!=<sp/>m_windows.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*it<sp/>!=<sp/>m_activeWindow<sp/>&amp;&amp;<sp/>(*it)-&gt;layer()<sp/>==<sp/><ref refid="namespace_k_win_1ad43bbfea407edd7454680404fd8f3a7ba72d87368e7eece861abf32b4d9cd5db0" kindref="member">ActiveLayer</ref><sp/>&amp;&amp;<sp/>(*it)-&gt;output()<sp/>==<sp/>m_activeWindow-&gt;output())<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;updateLayer();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1ae2f34bd6de87a53116c7b152ac3b58e5" kindref="member">disableGlobalShortcutsForClient</ref>(window-&gt;<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;<ref refid="class_k_win_1_1_window_rules_1a3867ea597fb2b4efa9b77fe1a48af570" kindref="member">checkDisableGlobalShortcuts</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1ae2f34bd6de87a53116c7b152ac3b58e5" kindref="member">disableGlobalShortcutsForClient</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a72563ede9d7e32e742e475b8d47fdbe2" kindref="member">updateStackingOrder</ref>();<sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>fullscreens<sp/>have<sp/>different<sp/>layer<sp/>when<sp/>active/not-active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a00237bcdba9aaa1c88184bbf87712ae8" kindref="member">rootInfo</ref>())<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a00237bcdba9aaa1c88184bbf87712ae8" kindref="member">rootInfo</ref>()-&gt;<ref refid="class_k_win_1_1_root_info_1a9ce022886a0076e633d1474039c7a76b" kindref="member">setActiveClient</ref>(m_activeWindow);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_workspace_1a7b90a95e89c3140a7af30e853e5359c6" kindref="member">windowActivated</ref>(m_activeWindow);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>--m_setActiveWindowRecursion;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" kindref="member">Workspace::activateWindow</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a3c21fc7f0bfcf2ccb5bd7a0b90ba9e54" kindref="member">focusToNull</ref>();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1aafa49cabb69a96aef0140b23c791b5f7" kindref="member">setActiveWindow</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;<ref refid="class_k_win_1_1_window_1a5f50be966c1885fe61b8a54e2dd584d8" kindref="member">isClient</ref>()<sp/>||<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>()<sp/>||<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a7a9c5f2a5a2a21002dfc4632c67280bf" kindref="member">wantsInput</ref>())<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;<ref refid="class_k_win_1_1_window_1ac07f6126d0cbaa1688090ceadefe5ded" kindref="member">isHiddenByShowDesktop</ref>())<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++block_focus;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1ac6fe3f106ae7cdbb81d38ecf31e2ba54" kindref="member">setShowingDesktop</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--block_focus;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a7af0e246269d807f7f29527ba90613ee" kindref="member">raiseWindow</ref>(window);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;<ref refid="class_k_win_1_1_window_1aa975d4f4a79a999c827e0a4d7bb5c1dd" kindref="member">isOnCurrentDesktop</ref>())<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++block_focus;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;activationDesktopPolicy())<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_options_1a7a700aee1fde32dc0f99ae4029666dc9a1005e5a5e751f74b45d726eda6fc419f" kindref="member">Options::ActivationDesktopPolicy::SwitchToOtherDesktop</ref>:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VirtualDesktopManager::self()-&gt;setCurrent(window-&gt;<ref refid="class_k_win_1_1_window_1a8da79be4e140390a3b61957f927f5210" kindref="member">desktops</ref>().constLast());</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_options_1a7a700aee1fde32dc0f99ae4029666dc9a48da6ac1d78764e1be9d3b588de9be59" kindref="member">Options::ActivationDesktopPolicy::BringToCurrentDesktop</ref>:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_k_win_1_1_window_1aae3fab1428c67e6a2c925f765070dd84" kindref="member">enterDesktop</ref>(VirtualDesktopManager::self()-&gt;currentDesktop());</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_options_1a7a700aee1fde32dc0f99ae4029666dc9a075a3217a2520c88cdbfa51019a66cb1" kindref="member">Options::ActivationDesktopPolicy::DoNothing</ref>:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--block_focus;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_ACTIVITIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;<ref refid="class_k_win_1_1_window_1a6214074a0338d546c1c97c736f1b1fe6" kindref="member">isOnCurrentActivity</ref>())<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++block_focus;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DBUS!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>isn&apos;t<sp/>necessarily<sp/>best,<sp/>but<sp/>it&apos;s<sp/>easiest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_activities-&gt;setCurrent(window-&gt;<ref refid="class_k_win_1_1_window_1aa71dc40a7137f7d9295a5ad7a635b0c7" kindref="member">activities</ref>().constFirst(),<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1ab12c1237a71a1f353898742b3d85e793" kindref="member">isOnAllDesktops</ref>()<sp/>?<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>:<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a8da79be4e140390a3b61957f927f5210" kindref="member">desktops</ref>().front());</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--block_focus;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;<ref refid="class_k_win_1_1_window_1a7ee9515027aa5076af42776c20b3a4a5" kindref="member">isMinimized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a2020d42e4c3f51da3bcec8cfdc632f86" kindref="member">setMinimized</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>the<sp/>window<sp/>is<sp/>really<sp/>visible<sp/>-<sp/>could<sp/>eg.<sp/>be<sp/>a<sp/>hidden<sp/>utility<sp/>window,<sp/>see<sp/>bug<sp/>#348083</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a5af4007f99eb32f7091d32d3331b0e7e" kindref="member">setHidden</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>force<sp/>should<sp/>perhaps<sp/>allow<sp/>this<sp/>only<sp/>if<sp/>the<sp/>window<sp/>already<sp/>contains<sp/>the<sp/>mouse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;focusPolicyIsReasonable()<sp/>||<sp/>force)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1abb14aa92b6473b4e8e06388d34460b90" kindref="member">requestFocus</ref>(window,<sp/>force);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>update<sp/>user<sp/>time<sp/>for<sp/>windows<sp/>that<sp/>have<sp/>focus<sp/>stealing<sp/>workaround.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>they<sp/>usually<sp/>belong<sp/>to<sp/>the<sp/>current<sp/>active<sp/>window<sp/>but<sp/>fail<sp/>to<sp/>provide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>information,<sp/>updating<sp/>their<sp/>user<sp/>time<sp/>would<sp/>make<sp/>the<sp/>user<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>currently<sp/>active<sp/>window<sp/>old,<sp/>and<sp/>reject<sp/>further<sp/>activation<sp/>for<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>E.g.<sp/>typing<sp/>URL<sp/>in<sp/>minicli<sp/>which<sp/>will<sp/>show<sp/>kio_uiserver<sp/>dialog<sp/>(with<sp/>workaround),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>kdesktop<sp/>shows<sp/>dialog<sp/>about<sp/>SSL<sp/>certificate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>needs<sp/>also<sp/>avoiding<sp/>user<sp/>creation<sp/>time<sp/>in<sp/>X11Window::readUserTimeMapTimestamp().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_x11_window" kindref="compound">X11Window</ref><sp/>*x11Window<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_x11_window" kindref="compound">X11Window</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(window))<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>updateUserTime<sp/>is<sp/>X11<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x11Window-&gt;updateUserTime();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="class_k_win_1_1_workspace_1abb14aa92b6473b4e8e06388d34460b90" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1abb14aa92b6473b4e8e06388d34460b90" kindref="member">Workspace::requestFocus</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1ac5270fc5d7e4887762c87015c4b92e04" kindref="member">takeActivity</ref>(window,<sp/>force<sp/>?<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461ac15f90b91a69d95617b1c1ff88bf1d14" kindref="member">ActivityFocusForce</ref><sp/>:<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a473e62c8bd1d0d14cd289ab6353abdbf" kindref="member">ActivityFocus</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="class_k_win_1_1_workspace_1ac5270fc5d7e4887762c87015c4b92e04" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1ac5270fc5d7e4887762c87015c4b92e04" kindref="member">Workspace::takeActivity</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window,<sp/>ActivityFlags<sp/>flags)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>&apos;if<sp/>(<sp/>window<sp/>==<sp/>m_activeWindow<sp/>)<sp/>return;&apos;<sp/>optimization<sp/>mustn&apos;t<sp/>be<sp/>done<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_workspace_1afad02da0d5b5114e5f3259dca8499bc3" kindref="member">focusChangeEnabled</ref>()<sp/>&amp;&amp;<sp/>(window<sp/>!=<sp/>m_activeWindow))<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>&amp;=<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a473e62c8bd1d0d14cd289ab6353abdbf" kindref="member">~ActivityFocus</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a3c21fc7f0bfcf2ccb5bd7a0b90ba9e54" kindref="member">focusToNull</ref>();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a473e62c8bd1d0d14cd289ab6353abdbf" kindref="member">ActivityFocus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*modal<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1ac49252173ad8460fec752ffb4f74824d" kindref="member">findModal</ref>();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modal<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>modal<sp/>!=<sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modal-&gt;<ref refid="class_k_win_1_1_window_1a8da79be4e140390a3b61957f927f5210" kindref="member">desktops</ref>()<sp/>!=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a8da79be4e140390a3b61957f927f5210" kindref="member">desktops</ref>())<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modal-&gt;<ref refid="class_k_win_1_1_window_1a017d0afde06ff1fac03f4c4ef7cfb6d9" kindref="member">setDesktops</ref>(window-&gt;<ref refid="class_k_win_1_1_window_1a8da79be4e140390a3b61957f927f5210" kindref="member">desktops</ref>());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!modal-&gt;<ref refid="class_k_win_1_1_window_1aed48d73c0d33bd1134f6c0b48104030d" kindref="member">isShown</ref>()<sp/>&amp;&amp;<sp/>!modal-&gt;<ref refid="class_k_win_1_1_window_1a7ee9515027aa5076af42776c20b3a4a5" kindref="member">isMinimized</ref>())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>forced<sp/>desktop<sp/>or<sp/>utility<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" kindref="member">activateWindow</ref>(modal);<sp/></highlight><highlight class="comment">//<sp/>activating<sp/>a<sp/>minimized<sp/>blocked<sp/>window<sp/>will<sp/>unminimize<sp/>its<sp/>modal<sp/>implicitly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>click<sp/>was<sp/>inside<sp/>the<sp/>window<sp/>(i.e.<sp/>handled<sp/>is<sp/>set),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>it<sp/>has<sp/>a<sp/>modal,<sp/>there&apos;s<sp/>no<sp/>need<sp/>to<sp/>use<sp/>handled<sp/>mode,<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>modal<sp/>doesn&apos;t<sp/>get<sp/>the<sp/>click<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>raising<sp/>of<sp/>the<sp/>original<sp/>window<sp/>needs<sp/>to<sp/>be<sp/>still<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a78fe29e8b597fd1711e6b95911549893" kindref="member">ActivityRaise</ref>)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a7af0e246269d807f7f29527ba90613ee" kindref="member">raiseWindow</ref>(window);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window<sp/>=<sp/>modal;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1ac057ef8d7929830aabc2382723dda763" kindref="member">cancelDelayFocus</ref>();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!flags.testFlag(<ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461ac15f90b91a69d95617b1c1ff88bf1d14" kindref="member">ActivityFocusForce</ref>)<sp/>&amp;&amp;<sp/>(window-&gt;<ref refid="class_k_win_1_1_window_1a3b2b28edaa7b699d1407322fd11ec1cb" kindref="member">isDock</ref>()<sp/>||<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1aa0179fdd1c6fee664b5401f61f35e493" kindref="member">isSplash</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>toplevel<sp/>menus<sp/>and<sp/>dock<sp/>windows<sp/>don&apos;t<sp/>take<sp/>focus<sp/>if<sp/>not<sp/>forced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>don&apos;t<sp/>have<sp/>a<sp/>flag<sp/>that<sp/>they<sp/>take<sp/>focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;<ref refid="class_k_win_1_1_window_1ad70cb80f746c7f97cb0e55d53a9869a4" kindref="member">dockWantsInput</ref>())<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>&amp;=<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a473e62c8bd1d0d14cd289ab6353abdbf" kindref="member">~ActivityFocus</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;<ref refid="class_k_win_1_1_window_1a3dfd89167d57f28ebedf72ffddd33191" kindref="member">isShade</ref>())<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;<ref refid="class_k_win_1_1_window_1a7a9c5f2a5a2a21002dfc4632c67280bf" kindref="member">wantsInput</ref>()<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a473e62c8bd1d0d14cd289ab6353abdbf" kindref="member">ActivityFocus</ref>))<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>window<sp/>cannot<sp/>accept<sp/>focus,<sp/>but<sp/>at<sp/>least<sp/>the<sp/>window<sp/>should<sp/>be<sp/>active<sp/>(window<sp/>menu,<sp/>et.<sp/>al.<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_k_win_1_1_window_1afc8d12b9a719a163f5f862a79e515465" kindref="member">setActive</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a3c21fc7f0bfcf2ccb5bd7a0b90ba9e54" kindref="member">focusToNull</ref>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>&amp;=<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a473e62c8bd1d0d14cd289ab6353abdbf" kindref="member">~ActivityFocus</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;<ref refid="class_k_win_1_1_window_1aed48d73c0d33bd1134f6c0b48104030d" kindref="member">isShown</ref>())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>shouldn&apos;t<sp/>happen,<sp/>call<sp/>activateWindow()<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;takeActivity:<sp/>not<sp/>shown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a473e62c8bd1d0d14cd289ab6353abdbf" kindref="member">ActivityFocus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>&amp;=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a6e2457230d295588778fdda994896e29" kindref="member">takeFocus</ref>();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a78fe29e8b597fd1711e6b95911549893" kindref="member">ActivityRaise</ref>)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a5d1ca94655caf88ecef91f95edd546ac" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7af0e246269d807f7f29527ba90613ee" kindref="member">raiseWindow</ref>(window);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;<ref refid="class_k_win_1_1_window_1a7511675b840c00baeccfaa211fa39ff6" kindref="member">isOnActiveOutput</ref>())<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1abe694aeb41eaff7b515070ad0c11dba4" kindref="member">setActiveOutput</ref>(window-&gt;<ref refid="class_k_win_1_1_window_1ae01b40bf580c920be022d66080e0685c" kindref="member">output</ref>());</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="class_k_win_1_1_workspace_1a4097a6134a489cb0497843bd4ff73548" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_workspace_1a4097a6134a489cb0497843bd4ff73548" kindref="member">Workspace::windowUnderMouse</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="441"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a376b811ccbcdce840e1a9838d62f802e" kindref="member">stackingOrder</ref>().constEnd();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_k_win_1_1_workspace_1a376b811ccbcdce840e1a9838d62f802e" kindref="member">stackingOrder</ref>().constBegin())<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/>*(--it);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;isClient())<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rule<sp/>out<sp/>windows<sp/>which<sp/>are<sp/>not<sp/>really<sp/>visible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>screen<sp/>test<sp/>is<sp/>rather<sp/>superfluous<sp/>for<sp/>xrandr<sp/>&amp;<sp/>twinview<sp/>since<sp/>the<sp/>geometry<sp/>would<sp/>differ<sp/>-&gt;<sp/>TODO:<sp/>might<sp/>be<sp/>dropped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(window-&gt;isShown()<sp/>&amp;&amp;<sp/>window-&gt;isOnCurrentDesktop()<sp/>&amp;&amp;<sp/>window-&gt;isOnCurrentActivity()<sp/>&amp;&amp;<sp/>window-&gt;isOnOutput(output)<sp/>&amp;&amp;<sp/>!window-&gt;isShade()))<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exclusiveContains(window-&gt;frameGeometry(),<sp/><ref refid="class_k_win_1_1_cursors_1a5e43427047cf7663b4d9723fac4c1408" kindref="member">Cursors::self</ref>()-&gt;mouse()-&gt;pos()))<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>window;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//<sp/>deactivates<sp/>&apos;window&apos;<sp/>and<sp/>activates<sp/>next<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="class_k_win_1_1_workspace_1ab8372aef950cf6ec71fc37e8b5b13d4f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1ab8372aef950cf6ec71fc37e8b5b13d4f" kindref="member">Workspace::activateNextWindow</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window)</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>&apos;c&apos;<sp/>is<sp/>not<sp/>the<sp/>active<sp/>or<sp/>the<sp/>to-become<sp/>active<sp/>one,<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(window<sp/>==<sp/>m_activeWindow<sp/>||<sp/>(should_get_focus.count()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>window<sp/>==<sp/>should_get_focus.last())))<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>closeActivePopup();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>==<sp/>m_activeWindow)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1aafa49cabb69a96aef0140b23c791b5f7" kindref="member">setActiveWindow</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should_get_focus.removeAll(window);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>blocking<sp/>focus,<sp/>move<sp/>focus<sp/>to<sp/>the<sp/>desktop<sp/>later<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>order<sp/>to<sp/>avoid<sp/>flickering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_workspace_1afad02da0d5b5114e5f3259dca8499bc3" kindref="member">focusChangeEnabled</ref>())<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a3c21fc7f0bfcf2ccb5bd7a0b90ba9e54" kindref="member">focusToNull</ref>();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;focusPolicyIsReasonable())<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*focusCandidate<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*desktop<sp/>=<sp/>VirtualDesktopManager::self()-&gt;currentDesktop();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output<sp/>=<sp/>window<sp/>?<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1ae01b40bf580c920be022d66080e0685c" kindref="member">output</ref>()<sp/>:<sp/><ref refid="class_k_win_1_1_workspace_1a5d1ca94655caf88ecef91f95edd546ac" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a5c706b5fddc7707a36576936450d86b9" kindref="member">activeOutput</ref>();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!focusCandidate<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_workspace_1aa4351f52e20146156f8515450b186c8a" kindref="member">showingDesktop</ref>())<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusCandidate<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1adf4d93ea33e9e508acb82ab24766d8cf" kindref="member">findDesktop</ref>(desktop,<sp/>output);<sp/></highlight><highlight class="comment">//<sp/>to<sp/>not<sp/>break<sp/>the<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!focusCandidate<sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;isNextFocusPrefersMouse())<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusCandidate<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a4097a6134a489cb0497843bd4ff73548" kindref="member">windowUnderMouse</ref>(output);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusCandidate<sp/>&amp;&amp;<sp/>(focusCandidate<sp/>==<sp/>window<sp/>||<sp/>focusCandidate-&gt;<ref refid="class_k_win_1_1_window_1ab56044e6eff0cd7e2a144756834c0751" kindref="member">isDesktop</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>rather<sp/>not<sp/>happen,<sp/>but<sp/>it<sp/>cannot<sp/>get<sp/>the<sp/>focus.<sp/>rest<sp/>of<sp/>usability<sp/>is<sp/>tested<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusCandidate<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!focusCandidate)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>no<sp/>suitable<sp/>window<sp/>under<sp/>the<sp/>mouse<sp/>-&gt;<sp/>find<sp/>sth.<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>try<sp/>to<sp/>pass<sp/>the<sp/>focus<sp/>to<sp/>the<sp/>(former)<sp/>active<sp/>clients<sp/>leader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>&amp;&amp;<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a9c9cc0a66b183a2777a997e351a4c7cf" kindref="member">isTransient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>leaders<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1afaea2549a9bde1616f1c0491a340ad64" kindref="member">mainWindows</ref>();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leaders.count()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>m_focusChain-&gt;isUsableFocusCandidate(leaders.at(0),<sp/>window))<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusCandidate<sp/>=<sp/>leaders.at(0);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a7af0e246269d807f7f29527ba90613ee" kindref="member">raiseWindow</ref>(focusCandidate);<sp/></highlight><highlight class="comment">//<sp/>also<sp/>raise<sp/>-<sp/>we<sp/>don&apos;t<sp/>know<sp/>where<sp/>it<sp/>came<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!focusCandidate)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nope,<sp/>ask<sp/>the<sp/>focus<sp/>chain<sp/>for<sp/>the<sp/>next<sp/>candidate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusCandidate<sp/>=<sp/>m_focusChain-&gt;nextForDesktop(window,<sp/>desktop);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusCandidate<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>last<sp/>chance:<sp/>focus<sp/>the<sp/>desktop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusCandidate<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1adf4d93ea33e9e508acb82ab24766d8cf" kindref="member">findDesktop</ref>(desktop,<sp/>output);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusCandidate<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1abb14aa92b6473b4e8e06388d34460b90" kindref="member">requestFocus</ref>(focusCandidate);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a3c21fc7f0bfcf2ccb5bd7a0b90ba9e54" kindref="member">focusToNull</ref>();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="class_k_win_1_1_workspace_1a710bf3a9516abb7ff66c8a31cca92c09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a710bf3a9516abb7ff66c8a31cca92c09" kindref="member">Workspace::switchToOutput</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;focusPolicyIsReasonable())<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>closeActivePopup();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref><sp/>*desktop<sp/>=<sp/>VirtualDesktopManager::self()-&gt;currentDesktop();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*get_focus<sp/>=<sp/>m_focusChain-&gt;getForActivation(desktop,<sp/>output);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_focus<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_focus<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1adf4d93ea33e9e508acb82ab24766d8cf" kindref="member">findDesktop</ref>(desktop,<sp/>output);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_focus<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>get_focus<sp/>!=<sp/><ref refid="class_k_win_1_1_workspace_1a0a94c694f53fc655c0a257c0e17a7db3" kindref="member">mostRecentlyActivatedWindow</ref>())<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1abb14aa92b6473b4e8e06388d34460b90" kindref="member">requestFocus</ref>(get_focus);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1abe694aeb41eaff7b515070ad0c11dba4" kindref="member">setActiveOutput</ref>(output);</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="class_k_win_1_1_workspace_1a6c0fdb3d0f5b817bff878b4fdbd0527a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a6c0fdb3d0f5b817bff878b4fdbd0527a" kindref="member">Workspace::gotFocusIn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window)</highlight></codeline>
<codeline lineno="553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(should_get_focus.contains(window))<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>also<sp/>all<sp/>sooner<sp/>elements<sp/>that<sp/>should<sp/>have<sp/>got<sp/>FocusIn,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>didn&apos;t<sp/>for<sp/>some<sp/>reason<sp/>(and<sp/>also<sp/>won&apos;t<sp/>anymore,<sp/>because<sp/>they<sp/>were<sp/>sooner)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(should_get_focus.first()<sp/>!=<sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should_get_focus.pop_front();</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should_get_focus.pop_front();<sp/></highlight><highlight class="comment">//<sp/>remove<sp/>&apos;window&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="class_k_win_1_1_workspace_1afd242a3bcbbb827e19dbbcb1dce9d5e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1afd242a3bcbbb827e19dbbcb1dce9d5e7" kindref="member">Workspace::setShouldGetFocus</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window)</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>should_get_focus.append(window);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a72563ede9d7e32e742e475b8d47fdbe2" kindref="member">updateStackingOrder</ref>();<sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>fullscreens<sp/>have<sp/>different<sp/>layer<sp/>when<sp/>active/not-active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>basically<sp/>the<sp/>same<sp/>like<sp/>allowWindowActivation(),<sp/>this<sp/>time<sp/>allowing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>window<sp/>to<sp/>be<sp/>fully<sp/>raised<sp/>upon<sp/>its<sp/>own<sp/>request<sp/>(XRaiseWindow),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>refused,<sp/>it<sp/>will<sp/>be<sp/>raised<sp/>only<sp/>on<sp/>top<sp/>of<sp/>windows<sp/>belonging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>same<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Workspace::allowFullClientRaising(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref><sp/>*window,<sp/>uint32_t<sp/>time)</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1aab8020efbe1a1ddc2934570b9701d0c3" kindref="member">rules</ref>()-&gt;<ref refid="class_k_win_1_1_window_rules_1a619793c90c5144c08d9e54e7b008da21" kindref="member">checkFSP</ref>(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;focusStealingPreventionLevel());</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_workspace_1adbf79458e8db9c18b4144a8755d63a47" kindref="member">sessionManager</ref>()-&gt;state()<sp/>==<sp/><ref refid="namespace_k_win_1a416cef954a72080ddb0d040111f008dca4e11db406c6c9f234fe8579cc9bc5ef6" kindref="member">SessionState::Saving</ref><sp/>&amp;&amp;<sp/>level<sp/>&lt;=<sp/>2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>&lt;=<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*ac<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a0a94c694f53fc655c0a257c0e17a7db3" kindref="member">mostRecentlyActivatedWindow</ref>();</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/>4)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>extreme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ac<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>ac-&gt;isDesktop())<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Raising:<sp/>No<sp/>window<sp/>active,<sp/>allowing&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>active<sp/>window<sp/>-&gt;<sp/>always<sp/>allow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>window<sp/>urgency<sp/><sp/>-&gt;<sp/>return<sp/>true?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1af6b077eadf47fd68373d43f94eef23ad" kindref="member">Window::belongToSameApplication</ref>(window,<sp/>ac,<sp/><ref refid="class_k_win_1_1_window_1a70e1b60416c67a488268d17dba135ecaa3852083c5b74bec23d5e3ff0964693be" kindref="member">Window::SameApplicationCheck::RelaxedForActive</ref>))<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Raising:<sp/>Belongs<sp/>to<sp/>active<sp/>application&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/>3)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>high</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_timestamp_t<sp/>user_time<sp/>=<sp/>ac-&gt;userTime();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Raising,<sp/>compared:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>time<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>user_time</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(NET::timestampCompare(time,<sp/>user_time)<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NET::timestampCompare(time,<sp/>user_time)<sp/>&gt;=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>time<sp/>&gt;=<sp/>user_time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="class_k_win_1_1_workspace_1a92701686bcdf74405f2d12224e26ab9f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a92701686bcdf74405f2d12224e26ab9f" kindref="member">Workspace::restoreFocus</ref>()</highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>updateXTime()<sp/>is<sp/>necessary<sp/>-<sp/>as<sp/>FocusIn<sp/>events<sp/>don&apos;t<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>timestamp<sp/>*sigh*,<sp/>kwin&apos;s<sp/>timestamp<sp/>would<sp/>be<sp/>older<sp/>than<sp/>the<sp/>timestamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>was<sp/>used<sp/>by<sp/>whoever<sp/>caused<sp/>the<sp/>focus<sp/>change,<sp/>and<sp/>therefore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>attempt<sp/>to<sp/>restore<sp/>the<sp/>focus<sp/>would<sp/>fail<sp/>due<sp/>to<sp/>old<sp/>timestamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>kwinApp()-&gt;updateXTime();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(should_get_focus.count()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1abb14aa92b6473b4e8e06388d34460b90" kindref="member">requestFocus</ref>(should_get_focus.last());</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_lastActiveWindow)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1abb14aa92b6473b4e8e06388d34460b90" kindref="member">requestFocus</ref>(m_lastActiveWindow);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632" refid="class_k_win_1_1_workspace_1a099d6af05ac9dc5aa21a9ce02fd3fd34" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a099d6af05ac9dc5aa21a9ce02fd3fd34" kindref="member">Workspace::windowAttentionChanged</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set)</highlight></codeline>
<codeline lineno="633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attention_chain.removeAll(window);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attention_chain.prepend(window);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attention_chain.removeAll(window);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/activation.cpp"/>
  </compounddef>
</doxygen>
