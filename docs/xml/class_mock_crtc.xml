<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_mock_crtc" kind="class" language="C++" prot="public">
    <compoundname>MockCrtc</compoundname>
    <basecompoundref refid="class_mock_object" prot="public" virt="non-virtual">MockObject</basecompoundref>
    <includes refid="mock__drm_8h" local="no">mock_drm.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_mock_crtc_1ab7f2e3b0af513242174fb2c5d86a406d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int MockCrtc::pipeIndex</definition>
        <argsstring></argsstring>
        <name>pipeIndex</name>
        <qualifiedname>MockCrtc::pipeIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="99" column="9" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_crtc_1a3a838ef4659c6c43459b8fb7222b5bcd" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int MockCrtc::gamma_size</definition>
        <argsstring></argsstring>
        <name>gamma_size</name>
        <qualifiedname>MockCrtc::gamma_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="100" column="9" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_crtc_1a2d146c3210de41a1bd258be48c813f94" prot="public" static="no" mutable="no">
        <type>drmModeModeInfo</type>
        <definition>drmModeModeInfo MockCrtc::mode</definition>
        <argsstring></argsstring>
        <name>mode</name>
        <qualifiedname>MockCrtc::mode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="101" column="21" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_crtc_1a176a0c0182f40901a7ff3d91ca743286" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MockCrtc::modeValid</definition>
        <argsstring></argsstring>
        <name>modeValid</name>
        <qualifiedname>MockCrtc::modeValid</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="102" column="10" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_crtc_1a7bbc9fece6fd147fc699c0d06ef2f6fe" prot="public" static="no" mutable="no">
        <type><ref refid="class_mock_fb" kindref="compound">MockFb</ref> *</type>
        <definition>MockFb* MockCrtc::currentFb</definition>
        <argsstring></argsstring>
        <name>currentFb</name>
        <qualifiedname>MockCrtc::currentFb</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="103" column="12" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_crtc_1a5a6ec4151541e2ea0753fb81987328a9" prot="public" static="no" mutable="no">
        <type><ref refid="class_mock_fb" kindref="compound">MockFb</ref> *</type>
        <definition>MockFb* MockCrtc::nextFb</definition>
        <argsstring></argsstring>
        <name>nextFb</name>
        <qualifiedname>MockCrtc::nextFb</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="104" column="12" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_crtc_1af34eff775ccfa6a49caf572c4c35e964" prot="public" static="no" mutable="no">
        <type>QRect</type>
        <definition>QRect MockCrtc::cursorRect</definition>
        <argsstring></argsstring>
        <name>cursorRect</name>
        <qualifiedname>MockCrtc::cursorRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="105" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_crtc_1ac294fcb981ce69ca8ddd7244c04a906f" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_mock_plane" kindref="compound">MockPlane</ref> &gt;</type>
        <definition>std::shared_ptr&lt;MockPlane&gt; MockCrtc::legacyPlane</definition>
        <argsstring></argsstring>
        <name>legacyPlane</name>
        <qualifiedname>MockCrtc::legacyPlane</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="106" column="21" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="106" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mock_crtc_1afb59c8108c1f8580be8129bbb2ed4b92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockCrtc::MockCrtc</definition>
        <argsstring>(MockGpu *gpu, const std::shared_ptr&lt; MockPlane &gt; &amp;legacyPlane, int pipeIndex, int gamma_size=255)</argsstring>
        <name>MockCrtc</name>
        <qualifiedname>MockCrtc::MockCrtc</qualifiedname>
        <param>
          <type><ref refid="class_mock_gpu" kindref="compound">MockGpu</ref> *</type>
          <declname>gpu</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_mock_plane" kindref="compound">MockPlane</ref> &gt; &amp;</type>
          <declname>legacyPlane</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pipeIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gamma_size</declname>
          <defval>255</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="95" column="5" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="225" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_crtc_1ae3880d7c970dd737081ce9f1d8b02bb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockCrtc::MockCrtc</definition>
        <argsstring>(const MockCrtc &amp;obj)=default</argsstring>
        <name>MockCrtc</name>
        <qualifiedname>MockCrtc::MockCrtc</qualifiedname>
        <param>
          <type>const <ref refid="class_mock_crtc" kindref="compound">MockCrtc</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="96" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_crtc_1a967e90e173c5b015619e88d42bd3cacc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockCrtc::~MockCrtc</definition>
        <argsstring>()=default</argsstring>
        <name>~MockCrtc</name>
        <qualifiedname>MockCrtc::~MockCrtc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="97" column="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>MockCrtc</label>
        <link refid="class_mock_crtc"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MockObject</label>
        <link refid="class_mock_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>MockCrtc</label>
        <link refid="class_mock_crtc"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>currentFb</edgelabel>
          <edgelabel>nextFb</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>MockFb</label>
        <link refid="class_mock_fb"/>
        <childnode refid="3" relation="usage">
          <edgelabel>gpu</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>MockGpu</label>
        <link refid="class_mock_gpu"/>
      </node>
      <node id="2">
        <label>MockObject</label>
        <link refid="class_mock_object"/>
        <childnode refid="3" relation="usage">
          <edgelabel>gpu</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/drm/mock_drm.h" line="93" column="1" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="93" bodyend="107"/>
    <listofallmembers>
      <member refid="class_mock_crtc_1a7bbc9fece6fd147fc699c0d06ef2f6fe" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>currentFb</name></member>
      <member refid="class_mock_crtc_1af34eff775ccfa6a49caf572c4c35e964" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>cursorRect</name></member>
      <member refid="class_mock_crtc_1a3a838ef4659c6c43459b8fb7222b5bcd" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>gamma_size</name></member>
      <member refid="class_mock_object_1a76f1c2955f448959528ffc1c4872c36a" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>getProp</name></member>
      <member refid="class_mock_object_1a9529304fa4cb728bfb7a57c1327ab6cc" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>getPropId</name></member>
      <member refid="class_mock_object_1aee2a37c6a86ae20ee579900b72e04bfe" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>gpu</name></member>
      <member refid="class_mock_object_1a9578562398c7e2f643300da2bf8f745f" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>id</name></member>
      <member refid="class_mock_crtc_1ac294fcb981ce69ca8ddd7244c04a906f" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>legacyPlane</name></member>
      <member refid="class_mock_crtc_1afb59c8108c1f8580be8129bbb2ed4b92" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>MockCrtc</name></member>
      <member refid="class_mock_crtc_1ae3880d7c970dd737081ce9f1d8b02bb4" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>MockCrtc</name></member>
      <member refid="class_mock_object_1aa99edcf828702ea4827416c5df93e448" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>MockObject</name></member>
      <member refid="class_mock_crtc_1a2d146c3210de41a1bd258be48c813f94" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>mode</name></member>
      <member refid="class_mock_crtc_1a176a0c0182f40901a7ff3d91ca743286" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>modeValid</name></member>
      <member refid="class_mock_crtc_1a5a6ec4151541e2ea0753fb81987328a9" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>nextFb</name></member>
      <member refid="class_mock_crtc_1ab7f2e3b0af513242174fb2c5d86a406d" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>pipeIndex</name></member>
      <member refid="class_mock_object_1a90cdcc4aa90c655ff7f76fa82e39401e" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>props</name></member>
      <member refid="class_mock_object_1ac1fb4229dc515cc08cef807dce970962" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>setProp</name></member>
      <member refid="class_mock_crtc_1a967e90e173c5b015619e88d42bd3cacc" prot="public" virt="non-virtual"><scope>MockCrtc</scope><name>~MockCrtc</name></member>
      <member refid="class_mock_object_1aa32f10d16e17321d7e37fe2fe442e7d3" prot="public" virt="virtual"><scope>MockCrtc</scope><name>~MockObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
