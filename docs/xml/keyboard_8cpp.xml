<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="keyboard_8cpp" kind="file" language="C++">
    <compoundname>keyboard.cpp</compoundname>
    <includes refid="clientconnection_8h" local="yes">clientconnection.h</includes>
    <includes refid="display_8h" local="yes">display.h</includes>
    <includes refid="keyboard__p_8h" local="yes">keyboard_p.h</includes>
    <includes refid="seat_8h" local="yes">seat.h</includes>
    <includes refid="seat__p_8h" local="yes">seat_p.h</includes>
    <includes refid="surface_8h" local="yes">surface.h</includes>
    <includes refid="common_8h" local="yes">utils/common.h</includes>
    <includes local="no">QList</includes>
    <includes local="no">unistd.h</includes>
    <includes local="yes">moc_keyboard.cpp</includes>
    <incdepgraph>
      <node id="31">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>utils/ramfile.h</label>
        <link refid="ramfile_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>clientconnection.h</label>
        <link refid="clientconnection_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>display.h</label>
        <link refid="display_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/keyboard.cpp</label>
        <link refid="keyboard_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>keyboard.h</label>
        <link refid="keyboard_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>keyboard_p.h</label>
        <link refid="keyboard__p_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>seat.h</label>
        <link refid="seat_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>seat_p.h</label>
        <link refid="seat__p_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>surface.h</label>
        <link refid="surface_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>QByteArray</label>
      </node>
      <node id="14">
        <label>QCoreApplication</label>
      </node>
      <node id="37">
        <label>QDebug</label>
      </node>
      <node id="21">
        <label>QFlag</label>
      </node>
      <node id="23">
        <label>QHash</label>
      </node>
      <node id="15">
        <label>QImage</label>
      </node>
      <node id="8">
        <label>QList</label>
      </node>
      <node id="47">
        <label>QLoggingCategory</label>
      </node>
      <node id="28">
        <label>QMap</label>
      </node>
      <node id="26">
        <label>QMatrix4x4</label>
      </node>
      <node id="5">
        <label>QObject</label>
      </node>
      <node id="16">
        <label>QPoint</label>
      </node>
      <node id="24">
        <label>QPointer</label>
      </node>
      <node id="38">
        <label>QRect</label>
      </node>
      <node id="43">
        <label>QRegion</label>
      </node>
      <node id="36">
        <label>QSize</label>
      </node>
      <node id="46">
        <label>QString</label>
      </node>
      <node id="20">
        <label>QTemporaryFile</label>
      </node>
      <node id="39">
        <label>QUuid</label>
      </node>
      <node id="17">
        <label>QVariant</label>
      </node>
      <node id="18">
        <label>QVector2D</label>
      </node>
      <node id="48">
        <label>climits</label>
      </node>
      <node id="13">
        <label>config-kwin.h</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="50">
        <label>moc_keyboard.cpp</label>
      </node>
      <node id="29">
        <label>optional</label>
      </node>
      <node id="22">
        <label>qwayland-server-wayland.h</label>
      </node>
      <node id="4">
        <label>sys/types.h</label>
      </node>
      <node id="49">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2014<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="clientconnection_8h" kindref="compound">clientconnection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keyboard__p_8h" kindref="compound">keyboard_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="seat_8h" kindref="compound">seat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="seat__p_8h" kindref="compound">seat_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface_8h" kindref="compound">surface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">utils/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QList&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20" refid="class_k_win_1_1_keyboard_interface_private_1a3b0a614043706795451c81789187e363" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_keyboard_interface_private_1a3b0a614043706795451c81789187e363" kindref="member">KeyboardInterfacePrivate::KeyboardInterfacePrivate</ref>(<ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*s)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a7539fd6c5ed0328bb4543e758b587300" kindref="member">seat</ref>(s)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_k_win_1_1_keyboard_interface_private_1a30d71e404d4e63623ecf9521a7ccbc34" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a30d71e404d4e63623ecf9521a7ccbc34" kindref="member">KeyboardInterfacePrivate::keyboard_release</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_k_win_1_1_keyboard_interface_private_1a8b8ee84e44e9e8537ce046c6d9dc3b49" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a8b8ee84e44e9e8537ce046c6d9dc3b49" kindref="member">KeyboardInterfacePrivate::keyboard_bind_resource</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref><sp/>*focusedClient<sp/>=<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a9624b7ba63a9cd7fada8caf2707ffab0" kindref="member">focusedSurface</ref><sp/>?<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a9624b7ba63a9cd7fada8caf2707ffab0" kindref="member">focusedSurface</ref>-&gt;client()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource-&gt;version()<sp/>&gt;=<sp/>WL_KEYBOARD_REPEAT_INFO_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_repeat_info(resource-&gt;handle,<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a4166263aeca7e8c73c605b2e35cf2037" kindref="member">keyRepeat</ref>.charactersPerSecond,<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a4166263aeca7e8c73c605b2e35cf2037" kindref="member">keyRepeat</ref>.delay);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_keyboard_interface_private_1a4461d99823176f2b576ada3e15c6220b" kindref="member">keymap</ref>.isNull())<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a40329b279e78046a4390746c9becb33b" kindref="member">sendKeymap</ref>(resource);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusedClient<sp/>&amp;&amp;<sp/>focusedClient-&gt;<ref refid="class_k_win_1_1_client_connection_1aa3b49670cf09ff8b5bf837f7ba29f7d2" kindref="member">client</ref>()<sp/>==<sp/>resource-&gt;client())<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>keysData<sp/>=<sp/>QByteArray::fromRawData(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_k_win_1_1_keyboard_interface_private_1a8eef9210a3e0b482c5a4d40d62721143" kindref="member">pressedKeys</ref>.data()),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(quint32)<sp/>*<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a8eef9210a3e0b482c5a4d40d62721143" kindref="member">pressedKeys</ref>.count());</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>serial<sp/>=<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a7539fd6c5ed0328bb4543e758b587300" kindref="member">seat</ref>-&gt;display()-&gt;nextSerial();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_enter(resource-&gt;handle,<sp/>serial,<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a9624b7ba63a9cd7fada8caf2707ffab0" kindref="member">focusedSurface</ref>-&gt;resource(),<sp/>keysData);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_modifiers(resource-&gt;handle,<sp/>serial,<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a51f547890985c9b731a802d9a12ef2e9" kindref="member">modifiers</ref>.depressed,<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a51f547890985c9b731a802d9a12ef2e9" kindref="member">modifiers</ref>.latched,<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a51f547890985c9b731a802d9a12ef2e9" kindref="member">modifiers</ref>.locked,<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a51f547890985c9b731a802d9a12ef2e9" kindref="member">modifiers</ref>.group);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_k_win_1_1_keyboard_interface_private_1aefc88d4105bd1512c3f7d0e9a7a99ea5" refkind="member"><highlight class="normal">QList&lt;KeyboardInterfacePrivate::Resource<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1aefc88d4105bd1512c3f7d0e9a7a99ea5" kindref="member">KeyboardInterfacePrivate::keyboardsForClient</ref>(<ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref><sp/>*client)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="51"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resourceMap().values(client-&gt;<ref refid="class_k_win_1_1_client_connection_1aa3b49670cf09ff8b5bf837f7ba29f7d2" kindref="member">client</ref>());</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_k_win_1_1_keyboard_interface_private_1a472cecb5cff2a284775685869f293e4e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a472cecb5cff2a284775685869f293e4e" kindref="member">KeyboardInterfacePrivate::sendLeave</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface,<sp/>quint32<sp/>serial)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>keyboards<sp/>=<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1aefc88d4105bd1512c3f7d0e9a7a99ea5" kindref="member">keyboardsForClient</ref>(surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*keyboardResource<sp/>:<sp/>keyboards)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_leave(keyboardResource-&gt;handle,<sp/>serial,<sp/>surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">resource</ref>());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_k_win_1_1_keyboard_interface_private_1aef22eb35940312d8148f7f89edde874f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1aef22eb35940312d8148f7f89edde874f" kindref="member">KeyboardInterfacePrivate::sendEnter</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface,<sp/>quint32<sp/>serial)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>data<sp/>=<sp/>QByteArray::fromRawData(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_k_win_1_1_keyboard_interface_private_1a8eef9210a3e0b482c5a4d40d62721143" kindref="member">pressedKeys</ref>.constData()),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(quint32)<sp/>*<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a8eef9210a3e0b482c5a4d40d62721143" kindref="member">pressedKeys</ref>.size());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>keyboards<sp/>=<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1aefc88d4105bd1512c3f7d0e9a7a99ea5" kindref="member">keyboardsForClient</ref>(surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*keyboardResource<sp/>:<sp/>keyboards)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_enter(keyboardResource-&gt;handle,<sp/>serial,<sp/>surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">resource</ref>(),<sp/>data);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_k_win_1_1_keyboard_interface_private_1a40329b279e78046a4390746c9becb33b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a40329b279e78046a4390746c9becb33b" kindref="member">KeyboardInterfacePrivate::sendKeymap</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>version<sp/>7<sp/>on,<sp/>keymaps<sp/>must<sp/>be<sp/>mapped<sp/>privately,<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>seal<sp/>the<sp/>fd<sp/>and<sp/>reuse<sp/>it<sp/>between<sp/>clients.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource-&gt;version()<sp/>&gt;=<sp/>7<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a09ceabcbd4af1cf7482a95b092e60b28" kindref="member">sharedKeymapFile</ref>.effectiveFlags().testFlag(<ref refid="class_k_win_1_1_ram_file_1aa6220723e82ce49c7cf06248f28caf5aa131f7a8057d8bfd6b4e8e52694e36412" kindref="member">RamFile::Flag::SealWrite</ref>))<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_keymap(resource-&gt;handle,<sp/>keymap_format::keymap_format_xkb_v1,<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a09ceabcbd4af1cf7482a95b092e60b28" kindref="member">sharedKeymapFile</ref>.fd(),<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a09ceabcbd4af1cf7482a95b092e60b28" kindref="member">sharedKeymapFile</ref>.size());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>give<sp/>each<sp/>client<sp/>its<sp/>own<sp/>unsealed<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_ram_file" kindref="compound">RamFile</ref><sp/>keymapFile(</highlight><highlight class="stringliteral">&quot;kwin-xkb-keymap&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a4461d99823176f2b576ada3e15c6220b" kindref="member">keymap</ref>.constData(),<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a4461d99823176f2b576ada3e15c6220b" kindref="member">keymap</ref>.size()<sp/>+<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>Include<sp/>QByteArray<sp/>null-terminator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_keymap(resource-&gt;handle,<sp/>keymap_format::keymap_format_xkb_v1,<sp/>keymapFile.<ref refid="class_k_win_1_1_ram_file_1a27841dbb56a9f95d246d318b0302610b" kindref="member">fd</ref>(),<sp/>keymapFile.<ref refid="class_k_win_1_1_ram_file_1acf461bbf20b5bffe3b73d9ab798a5389" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_k_win_1_1_keyboard_interface_1a940f676a2114dbfbc6adf0d85d72149f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_1a940f676a2114dbfbc6adf0d85d72149f" kindref="member">KeyboardInterface::setKeymap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;content)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(content.isNull())<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;keymap<sp/>=<sp/>content;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+1<sp/>to<sp/>include<sp/>QByteArray<sp/>null<sp/>terminator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;sharedKeymapFile<sp/>=<sp/><ref refid="class_k_win_1_1_ram_file" kindref="compound">RamFile</ref>(</highlight><highlight class="stringliteral">&quot;kwin-xkb-keymap-shared&quot;</highlight><highlight class="normal">,<sp/>content.constData(),<sp/>content.size()<sp/>+<sp/>1,<sp/><ref refid="class_k_win_1_1_ram_file_1aa6220723e82ce49c7cf06248f28caf5aa131f7a8057d8bfd6b4e8e52694e36412" kindref="member">RamFile::Flag::SealWrite</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>keyboardResources<sp/>=<sp/>d-&gt;resourceMap();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(KeyboardInterfacePrivate::Resource<sp/>*resource<sp/>:<sp/>keyboardResources)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;sendKeymap(resource);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_k_win_1_1_keyboard_interface_private_1ac3eb2c3e38584bc390e116463036eb68" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a1ad4473a0a182e85bb20c189cb7cfd78" kindref="member">KeyboardInterfacePrivate::sendModifiers</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface,<sp/>quint32<sp/>depressed,<sp/>quint32<sp/>latched,<sp/>quint32<sp/>locked,<sp/>quint32<sp/>group,<sp/>quint32<sp/>serial)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>keyboards<sp/>=<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1aefc88d4105bd1512c3f7d0e9a7a99ea5" kindref="member">keyboardsForClient</ref>(surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>());</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*keyboardResource<sp/>:<sp/>keyboards)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_modifiers(keyboardResource-&gt;handle,<sp/>serial,<sp/>depressed,<sp/>latched,<sp/>locked,<sp/>group);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_k_win_1_1_keyboard_interface_private_1af516d17880dda9497cd6143bdd576be8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1af516d17880dda9497cd6143bdd576be8" kindref="member">KeyboardInterfacePrivate::updateKey</ref>(quint32<sp/>key,<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1" kindref="member">KeyboardKeyState</ref><sp/>state)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">KeyboardKeyState::Pressed</ref>:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_keyboard_interface_private_1a8eef9210a3e0b482c5a4d40d62721143" kindref="member">pressedKeys</ref>.contains(key))<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a8eef9210a3e0b482c5a4d40d62721143" kindref="member">pressedKeys</ref>.append(key);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1aea1e34304a5d8ffa7c9b0ed8ede4ef1a" kindref="member">KeyboardKeyState::Released</ref>:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a8eef9210a3e0b482c5a4d40d62721143" kindref="member">pressedKeys</ref>.removeOne(key);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">KeyboardInterface::KeyboardInterface(<ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d(new<sp/><ref refid="class_k_win_1_1_keyboard_interface_private" kindref="compound">KeyboardInterfacePrivate</ref>(seat))</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="class_k_win_1_1_keyboard_interface_1a747e0cc31c913570a019ccc9b9556de1" kindref="member">KeyboardInterface::~KeyboardInterface</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="class_k_win_1_1_keyboard_interface_private_1a1ad4473a0a182e85bb20c189cb7cfd78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a1ad4473a0a182e85bb20c189cb7cfd78" kindref="member">KeyboardInterfacePrivate::sendModifiers</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a1ad4473a0a182e85bb20c189cb7cfd78" kindref="member">sendModifiers</ref>(surface,<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a51f547890985c9b731a802d9a12ef2e9" kindref="member">modifiers</ref>.depressed,<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a51f547890985c9b731a802d9a12ef2e9" kindref="member">modifiers</ref>.latched,<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a51f547890985c9b731a802d9a12ef2e9" kindref="member">modifiers</ref>.locked,<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a51f547890985c9b731a802d9a12ef2e9" kindref="member">modifiers</ref>.group,<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1a51f547890985c9b731a802d9a12ef2e9" kindref="member">modifiers</ref>.serial);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KeyboardInterface::setFocusedSurface(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;quint32&gt;<sp/>&amp;keys,<sp/>quint32<sp/>serial)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;focusedSurface<sp/>==<sp/>surface)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;focusedSurface)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;sendLeave(d-&gt;focusedSurface,<sp/>serial);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;destroyConnection);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;focusedSurface<sp/>=<sp/>surface;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;pressedKeys<sp/>=<sp/>keys;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;focusedSurface)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;destroyConnection<sp/>=<sp/>connect(d-&gt;focusedSurface,<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_1a547a07eb856d80205eb584e50571d1ee" kindref="member">SurfaceInterface::aboutToBeDestroyed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;sendLeave(d-&gt;focusedSurface,<sp/>d-&gt;seat-&gt;display()-&gt;nextSerial());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;focusedSurface<sp/>=<sp/>nullptr;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;sendEnter(d-&gt;focusedSurface,<sp/>serial);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;sendModifiers(d-&gt;focusedSurface);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KeyboardInterface::setModifierFocusSurface(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;modifierFocusSurface<sp/>==<sp/>surface)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;modifierFocusSurface<sp/>=<sp/>surface;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;modifierFocusSurface<sp/>&amp;&amp;<sp/>d-&gt;focusedSurface<sp/>!=<sp/>d-&gt;modifierFocusSurface)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;modifiers.serial<sp/>=<sp/>d-&gt;seat-&gt;display()-&gt;nextSerial();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;sendModifiers(d-&gt;modifierFocusSurface);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="class_k_win_1_1_keyboard_interface_1a28c64bf0460b758c1e7cb538a6bee838" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_1a7769a7ff54757f86368c6699ea2c96aa" kindref="member">KeyboardInterface::sendKey</ref>(quint32<sp/>key,<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1" kindref="member">KeyboardKeyState</ref><sp/>state,<sp/><ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref><sp/>*client)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>waylandState;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">KeyboardKeyState::Pressed</ref>:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waylandState<sp/>=<sp/>WL_KEYBOARD_KEY_STATE_PRESSED;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1aea1e34304a5d8ffa7c9b0ed8ede4ef1a" kindref="member">KeyboardKeyState::Released</ref>:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waylandState<sp/>=<sp/>WL_KEYBOARD_KEY_STATE_RELEASED;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1a7f7309d5a83099309ac04dcb795ad0ce" kindref="member">KeyboardKeyState::Repeated</ref>:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;KeyboardInterfacePrivate::Resource<sp/>*&gt;<sp/>keyboards<sp/>=<sp/>d-&gt;keyboardsForClient(client);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>serial<sp/>=<sp/>d-&gt;seat-&gt;display()-&gt;nextSerial();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(KeyboardInterfacePrivate::Resource<sp/>*keyboardResource<sp/>:<sp/>keyboards)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_key(keyboardResource-&gt;handle,<sp/>serial,<sp/>d-&gt;seat-&gt;timestamp().count(),<sp/>key,<sp/>waylandState);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="class_k_win_1_1_keyboard_interface_1a7769a7ff54757f86368c6699ea2c96aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_1a7769a7ff54757f86368c6699ea2c96aa" kindref="member">KeyboardInterface::sendKey</ref>(quint32<sp/>key,<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1" kindref="member">KeyboardKeyState</ref><sp/>state)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;focusedSurface)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;updateKey(key,<sp/>state))<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_keyboard_interface_1a7769a7ff54757f86368c6699ea2c96aa" kindref="member">sendKey</ref>(key,<sp/>state,<sp/>d-&gt;focusedSurface-&gt;client());</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="class_k_win_1_1_keyboard_interface_1a2ca10ccfc036f3a01994a4a3742ebe8a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_1a2ca10ccfc036f3a01994a4a3742ebe8a" kindref="member">KeyboardInterface::sendModifiers</ref>(quint32<sp/>depressed,<sp/>quint32<sp/>latched,<sp/>quint32<sp/>locked,<sp/>quint32<sp/>group)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;modifiers.depressed<sp/>!=<sp/>depressed)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;modifiers.depressed<sp/>=<sp/>depressed;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;modifiers.latched<sp/>!=<sp/>latched)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;modifiers.latched<sp/>=<sp/>latched;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;modifiers.locked<sp/>!=<sp/>locked)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;modifiers.locked<sp/>=<sp/>locked;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;modifiers.group<sp/>!=<sp/>group)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;modifiers.group<sp/>=<sp/>group;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!changed)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;focusedSurface)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;modifiers.serial<sp/>=<sp/>d-&gt;seat-&gt;display()-&gt;nextSerial();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;sendModifiers(d-&gt;focusedSurface,<sp/>depressed,<sp/>latched,<sp/>locked,<sp/>group,<sp/>d-&gt;modifiers.serial);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;modifierFocusSurface<sp/>&amp;&amp;<sp/>d-&gt;focusedSurface<sp/>!=<sp/>d-&gt;modifierFocusSurface)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;modifiers.serial<sp/>=<sp/>d-&gt;seat-&gt;display()-&gt;nextSerial();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;sendModifiers(d-&gt;modifierFocusSurface,<sp/>depressed,<sp/>latched,<sp/>locked,<sp/>group,<sp/>d-&gt;modifiers.serial);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="class_k_win_1_1_keyboard_interface_1a4bf0b5a33b40695336474c038fe8b95d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_1a2ca10ccfc036f3a01994a4a3742ebe8a" kindref="member">KeyboardInterface::sendModifiers</ref>(quint32<sp/>depressed,<sp/>quint32<sp/>latched,<sp/>quint32<sp/>locked,<sp/>quint32<sp/>group,<sp/><ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref><sp/>*client)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;KeyboardInterfacePrivate::Resource<sp/>*&gt;<sp/>keyboards<sp/>=<sp/>d-&gt;keyboardsForClient(client);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>serial<sp/>=<sp/>d-&gt;seat-&gt;display()-&gt;nextSerial();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(KeyboardInterfacePrivate::Resource<sp/>*keyboardResource<sp/>:<sp/>keyboards)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_modifiers(keyboardResource-&gt;handle,<sp/>serial,<sp/>depressed,<sp/>latched,<sp/>locked,<sp/>group);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="class_k_win_1_1_keyboard_interface_1a706f8b1f77a8ba8210c6a849ff1eb158" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface_1a706f8b1f77a8ba8210c6a849ff1eb158" kindref="member">KeyboardInterface::setRepeatInfo</ref>(qint32<sp/>charactersPerSecond,<sp/>qint32<sp/>delay)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;keyRepeat.charactersPerSecond<sp/>=<sp/>std::max(charactersPerSecond,<sp/>0);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;keyRepeat.delay<sp/>=<sp/>std::max(delay,<sp/>0);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>keyboards<sp/>=<sp/>d-&gt;resourceMap();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(KeyboardInterfacePrivate::Resource<sp/>*keyboardResource<sp/>:<sp/>keyboards)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboardResource-&gt;version()<sp/>&gt;=<sp/>WL_KEYBOARD_REPEAT_INFO_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_repeat_info(keyboardResource-&gt;handle,<sp/>d-&gt;keyRepeat.charactersPerSecond,<sp/>d-&gt;keyRepeat.delay);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="class_k_win_1_1_keyboard_interface_1a05607cf2f17bf83ae952837c5c371769" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_keyboard_interface_1a05607cf2f17bf83ae952837c5c371769" kindref="member">KeyboardInterface::focusedSurface</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="265"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;focusedSurface;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="class_k_win_1_1_keyboard_interface_1a04566f7ed4154942c52dadc612f24ecd" refkind="member"><highlight class="normal">qint32<sp/><ref refid="class_k_win_1_1_keyboard_interface_1a04566f7ed4154942c52dadc612f24ecd" kindref="member">KeyboardInterface::keyRepeatDelay</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="270"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;keyRepeat.delay;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="class_k_win_1_1_keyboard_interface_1ab3a01629e4497cf390ac63e3e67bb329" refkind="member"><highlight class="normal">qint32<sp/><ref refid="class_k_win_1_1_keyboard_interface_1ab3a01629e4497cf390ac63e3e67bb329" kindref="member">KeyboardInterface::keyRepeatRate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="275"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;keyRepeat.charactersPerSecond;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_keyboard.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/keyboard.cpp"/>
  </compounddef>
</doxygen>
