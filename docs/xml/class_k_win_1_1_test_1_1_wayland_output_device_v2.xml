<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_test_1_1_wayland_output_device_v2" kind="class" language="C++" prot="public">
    <compoundname>KWin::Test::WaylandOutputDeviceV2</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">QtWayland::kde_output_device_v2</basecompoundref>
    <includes refid="kwin__wayland__test_8h" local="no">kwin_wayland_test.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a046714f280cee2bc976193464c264f69" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode" kindref="compound">WaylandOutputDeviceV2Mode</ref> *</type>
        <definition>WaylandOutputDeviceV2Mode* KWin::Test::WaylandOutputDeviceV2::m_mode</definition>
        <argsstring></argsstring>
        <name>m_mode</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_mode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="449" column="31" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a3d438592b543e9e590317c4b5fb71616" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode" kindref="compound">WaylandOutputDeviceV2Mode</ref> * &gt;</type>
        <definition>QList&lt;WaylandOutputDeviceV2Mode *&gt; KWin::Test::WaylandOutputDeviceV2::m_modes</definition>
        <argsstring></argsstring>
        <name>m_modes</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_modes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="450" column="11" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a21eaa3c6eeb7b51c1bb7dd8eb2dd899f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::Test::WaylandOutputDeviceV2::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="452" column="9" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a572c8b1e010257f6787f854cf56ccbdf" prot="private" static="no" mutable="no">
        <type>QPoint</type>
        <definition>QPoint KWin::Test::WaylandOutputDeviceV2::m_pos</definition>
        <argsstring></argsstring>
        <name>m_pos</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_pos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="453" column="12" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a0409a752269391e656e86da591dff9ea" prot="private" static="no" mutable="no">
        <type>QSize</type>
        <definition>QSize KWin::Test::WaylandOutputDeviceV2::m_physicalSize</definition>
        <argsstring></argsstring>
        <name>m_physicalSize</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_physicalSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="454" column="11" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1aeb59e26795e28873ccdf53739f396f96" prot="private" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t KWin::Test::WaylandOutputDeviceV2::m_subpixel</definition>
        <argsstring></argsstring>
        <name>m_subpixel</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_subpixel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="455" column="13" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1acca4875f66441f63f78243dc917901fd" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Test::WaylandOutputDeviceV2::m_manufacturer</definition>
        <argsstring></argsstring>
        <name>m_manufacturer</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_manufacturer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="456" column="13" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1aa50227940746fb0a21ec495d6aab5ce0" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Test::WaylandOutputDeviceV2::m_model</definition>
        <argsstring></argsstring>
        <name>m_model</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_model</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="457" column="13" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1aaf1acbea4f33803fe88e683f064b3e3d" prot="private" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t KWin::Test::WaylandOutputDeviceV2::m_transform</definition>
        <argsstring></argsstring>
        <name>m_transform</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_transform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="458" column="13" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a6ae70d316188377bb47f45ac12f30407" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::Test::WaylandOutputDeviceV2::m_factor</definition>
        <argsstring></argsstring>
        <name>m_factor</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_factor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="459" column="11" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ab7c957b6c470cd6d44f0f32fa8805cc6" prot="private" static="no" mutable="no">
        <type>QByteArray</type>
        <definition>QByteArray KWin::Test::WaylandOutputDeviceV2::m_edid</definition>
        <argsstring></argsstring>
        <name>m_edid</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_edid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="460" column="16" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ad011b4a85b72e5d5ba1b9b3fd5a01a88" prot="private" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t KWin::Test::WaylandOutputDeviceV2::m_enabled</definition>
        <argsstring></argsstring>
        <name>m_enabled</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_enabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="461" column="13" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1adaaa8f5e21c2132b88d08ff256aa8795" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Test::WaylandOutputDeviceV2::m_uuid</definition>
        <argsstring></argsstring>
        <name>m_uuid</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_uuid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="462" column="13" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a6d3ce73ac6760feaff5294edd9e93e4d" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Test::WaylandOutputDeviceV2::m_serialNumber</definition>
        <argsstring></argsstring>
        <name>m_serialNumber</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_serialNumber</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="463" column="13" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a2c7c2bde74619f5df1c00d0afd1c32a4" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Test::WaylandOutputDeviceV2::m_eisaId</definition>
        <argsstring></argsstring>
        <name>m_eisaId</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_eisaId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="464" column="13" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a1f708c10aa18e0c60b2d11a192d79d1f" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t KWin::Test::WaylandOutputDeviceV2::m_flags</definition>
        <argsstring></argsstring>
        <name>m_flags</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_flags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="465" column="14" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a971f5232f97d0a04510d077c7669f665" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t KWin::Test::WaylandOutputDeviceV2::m_overscan</definition>
        <argsstring></argsstring>
        <name>m_overscan</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_overscan</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="466" column="14" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae704852df9998a98dd75caf970a701dd" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t KWin::Test::WaylandOutputDeviceV2::m_vrr_policy</definition>
        <argsstring></argsstring>
        <name>m_vrr_policy</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_vrr_policy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="467" column="14" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a827a4ff144036c9fe5d830d80827812b" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t KWin::Test::WaylandOutputDeviceV2::m_rgbRange</definition>
        <argsstring></argsstring>
        <name>m_rgbRange</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::m_rgbRange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="468" column="14" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="468" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1aa122cc8307e5e0aa472f4f532185ef2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Test::WaylandOutputDeviceV2::WaylandOutputDeviceV2</definition>
        <argsstring>(int id)</argsstring>
        <name>WaylandOutputDeviceV2</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::WaylandOutputDeviceV2</qualifiedname>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="398" column="5" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1372" bodyend="1377"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a9665b961e4d2d774b2b77cb9c763827e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Test::WaylandOutputDeviceV2::~WaylandOutputDeviceV2</definition>
        <argsstring>() override</argsstring>
        <name>~WaylandOutputDeviceV2</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::~WaylandOutputDeviceV2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="399" column="5" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1379" bodyend="1384"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a4411b3c40f0ea6be116cffa585368179" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QByteArray</type>
        <definition>QByteArray KWin::Test::WaylandOutputDeviceV2::edid</definition>
        <argsstring>() const</argsstring>
        <name>edid</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::edid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="401" column="16" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1521" bodyend="1524"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae31d0b7b99f22ae28de2294526ca60f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Test::WaylandOutputDeviceV2::enabled</definition>
        <argsstring>() const</argsstring>
        <name>enabled</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::enabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="402" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1526" bodyend="1529"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a627cad3540e95622d83afb30553e8498" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::Test::WaylandOutputDeviceV2::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="403" column="9" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1531" bodyend="1534"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a910c1ecd526fa8666f1a3ce54d30bf90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Test::WaylandOutputDeviceV2::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="404" column="13" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1452" bodyend="1455"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a44b48e185abab9248ac89513df82236c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Test::WaylandOutputDeviceV2::model</definition>
        <argsstring>() const</argsstring>
        <name>model</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::model</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="405" column="13" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1546" bodyend="1549"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a421702495cf785798034dfbe9cc88070" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Test::WaylandOutputDeviceV2::manufacturer</definition>
        <argsstring>() const</argsstring>
        <name>manufacturer</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::manufacturer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="406" column="13" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1541" bodyend="1544"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a14e637a859ba76de441731146b8e1b3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::Test::WaylandOutputDeviceV2::scale</definition>
        <argsstring>() const</argsstring>
        <name>scale</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::scale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="407" column="11" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1536" bodyend="1539"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a4012ff6bf621015e05e169a5e33db43b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPoint</type>
        <definition>QPoint KWin::Test::WaylandOutputDeviceV2::globalPosition</definition>
        <argsstring>() const</argsstring>
        <name>globalPosition</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::globalPosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="408" column="12" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1551" bodyend="1554"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1abedcba62d498e7071a66f23642c06052" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize KWin::Test::WaylandOutputDeviceV2::pixelSize</definition>
        <argsstring>() const</argsstring>
        <name>pixelSize</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::pixelSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="409" column="11" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1556" bodyend="1559"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1af63efbf08909c8f61bee56f7d24558da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::Test::WaylandOutputDeviceV2::refreshRate</definition>
        <argsstring>() const</argsstring>
        <name>refreshRate</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::refreshRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="410" column="9" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1561" bodyend="1564"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1af380c78ed8fcb357a23dfdecbb06e72a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t KWin::Test::WaylandOutputDeviceV2::vrrPolicy</definition>
        <argsstring>() const</argsstring>
        <name>vrrPolicy</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::vrrPolicy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="411" column="14" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1566" bodyend="1569"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a6f0a3dcc63c7d11ad659d908f4aa55d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t KWin::Test::WaylandOutputDeviceV2::overscan</definition>
        <argsstring>() const</argsstring>
        <name>overscan</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::overscan</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="412" column="14" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1571" bodyend="1574"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a8719df6653b923b7a61b2b8dce3f6167" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t KWin::Test::WaylandOutputDeviceV2::capabilities</definition>
        <argsstring>() const</argsstring>
        <name>capabilities</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::capabilities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="413" column="14" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1576" bodyend="1579"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae44d6175c61b5d32982535abe3e9a7e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t KWin::Test::WaylandOutputDeviceV2::rgbRange</definition>
        <argsstring>() const</argsstring>
        <name>rgbRange</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::rgbRange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="414" column="14" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1581" bodyend="1584"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a8ae7f1adc14b41b810503f3532222acf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Test::WaylandOutputDeviceV2::modeId</definition>
        <argsstring>() const</argsstring>
        <name>modeId</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::modeId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="416" column="13" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1436" bodyend="1439"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a2c96c324b9e4a5c9feff55a8bd668b08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::enabledChanged</definition>
        <argsstring>()</argsstring>
        <name>enabledChanged</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::enabledChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="419" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a5720da06dfe9cd7e1ceb2e057c12b42d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::done</definition>
        <argsstring>()</argsstring>
        <name>done</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::done</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="420" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a48befc1af864f12484ab95ad270c6ed7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_geometry</definition>
        <argsstring>(int32_t x, int32_t y, int32_t physical_width, int32_t physical_height, int32_t subpixel, const QString &amp;make, const QString &amp;model, int32_t transform) override</argsstring>
        <name>kde_output_device_v2_geometry</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_geometry</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>physical_width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>physical_height</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>subpixel</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>make</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="423" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1386" bodyend="1401"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae8feb35183eb18973ee6c31d6f54ebf2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_current_mode</definition>
        <argsstring>(struct ::kde_output_device_mode_v2 *mode) override</argsstring>
        <name>kde_output_device_v2_current_mode</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_current_mode</qualifiedname>
        <param>
          <type>struct ::kde_output_device_mode_v2 *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="431" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1403" bodyend="1412"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a4a5d1be79c4cae7085a630a2fc7ec2c8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_mode</definition>
        <argsstring>(struct ::kde_output_device_mode_v2 *mode) override</argsstring>
        <name>kde_output_device_v2_mode</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_mode</qualifiedname>
        <param>
          <type>struct ::kde_output_device_mode_v2 *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="432" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1414" bodyend="1434"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae63860a0c9bbb5d200c54825fb43165d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_done</definition>
        <argsstring>() override</argsstring>
        <name>kde_output_device_v2_done</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_done</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="433" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1463" bodyend="1466"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a36ab6295620505bfe45dcb654479b5f0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_scale</definition>
        <argsstring>(wl_fixed_t factor) override</argsstring>
        <name>kde_output_device_v2_scale</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_scale</qualifiedname>
        <param>
          <type>wl_fixed_t</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="434" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1468" bodyend="1471"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a879d274b3415bdc686f8a5ec501cc12d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_edid</definition>
        <argsstring>(const QString &amp;raw) override</argsstring>
        <name>kde_output_device_v2_edid</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_edid</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="435" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1473" bodyend="1476"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a7cf0e47936d450b512992f60e23f493d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_enabled</definition>
        <argsstring>(int32_t enabled) override</argsstring>
        <name>kde_output_device_v2_enabled</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_enabled</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="436" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1478" bodyend="1484"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a08ec8bb5dc0b8fc7833af2c2d76ddd2a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_uuid</definition>
        <argsstring>(const QString &amp;uuid) override</argsstring>
        <name>kde_output_device_v2_uuid</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_uuid</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>uuid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="437" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1486" bodyend="1489"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ad4172622475d72ad8033427f226e8bd4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_serial_number</definition>
        <argsstring>(const QString &amp;serialNumber) override</argsstring>
        <name>kde_output_device_v2_serial_number</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_serial_number</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>serialNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="438" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1491" bodyend="1494"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a289a93797ec9174612eeb208b4013f38" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_eisa_id</definition>
        <argsstring>(const QString &amp;eisaId) override</argsstring>
        <name>kde_output_device_v2_eisa_id</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_eisa_id</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>eisaId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="439" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1496" bodyend="1499"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a388126afa9a85a4a012401eb1bf32a75" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_capabilities</definition>
        <argsstring>(uint32_t flags) override</argsstring>
        <name>kde_output_device_v2_capabilities</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_capabilities</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="440" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1501" bodyend="1504"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a62e828ae6886ae30376324892977aa64" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_overscan</definition>
        <argsstring>(uint32_t overscan) override</argsstring>
        <name>kde_output_device_v2_overscan</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_overscan</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>overscan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="441" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1506" bodyend="1509"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ada2f8c806c4f6ad1614cd310c84c4b18" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_vrr_policy</definition>
        <argsstring>(uint32_t vrr_policy) override</argsstring>
        <name>kde_output_device_v2_vrr_policy</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_vrr_policy</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>vrr_policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="442" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1511" bodyend="1514"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ac1409fcb833cf2a23e362e59956b924a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_rgb_range</definition>
        <argsstring>(uint32_t rgb_range) override</argsstring>
        <name>kde_output_device_v2_rgb_range</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::kde_output_device_v2_rgb_range</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>rgb_range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="443" column="10" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1516" bodyend="1519"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1abd8e0b35d7277fb4b2b21988d970525a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Test::WaylandOutputDeviceV2::modeName</definition>
        <argsstring>(const WaylandOutputDeviceV2Mode *m) const</argsstring>
        <name>modeName</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::modeName</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode" kindref="compound">WaylandOutputDeviceV2Mode</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="446" column="13" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1446" bodyend="1450"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_test_1_1_wayland_output_device_v2_1acf6bf9a224280c86813ef6736eb1cfa8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode" kindref="compound">WaylandOutputDeviceV2Mode</ref> *</type>
        <definition>WaylandOutputDeviceV2Mode * KWin::Test::WaylandOutputDeviceV2::deviceModeFromId</definition>
        <argsstring>(const int modeId) const</argsstring>
        <name>deviceModeFromId</name>
        <qualifiedname>KWin::Test::WaylandOutputDeviceV2::deviceModeFromId</qualifiedname>
        <param>
          <type>const int</type>
          <declname>modeId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="447" column="31" bodyfile="kwin/autotests/integration/test_helpers.cpp" bodystart="1441" bodyend="1444"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::Test::WaylandOutputDeviceV2</label>
        <link refid="class_k_win_1_1_test_1_1_wayland_output_device_v2"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="3">
        <label>QtWayland::kde_output_device_v2</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::Test::WaylandOutputDeviceV2</label>
        <link refid="class_k_win_1_1_test_1_1_wayland_output_device_v2"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="3">
        <label>QtWayland::kde_output_device_v2</label>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/integration/kwin_wayland_test.h" line="393" column="1" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="394" bodyend="469"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a8719df6653b923b7a61b2b8dce3f6167" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>capabilities</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1acf6bf9a224280c86813ef6736eb1cfa8" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>deviceModeFromId</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a5720da06dfe9cd7e1ceb2e057c12b42d" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>done</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a4411b3c40f0ea6be116cffa585368179" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>edid</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae31d0b7b99f22ae28de2294526ca60f1" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>enabled</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a2c96c324b9e4a5c9feff55a8bd668b08" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>enabledChanged</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a4012ff6bf621015e05e169a5e33db43b" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>globalPosition</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a627cad3540e95622d83afb30553e8498" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>id</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a388126afa9a85a4a012401eb1bf32a75" prot="protected" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>kde_output_device_v2_capabilities</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae8feb35183eb18973ee6c31d6f54ebf2" prot="protected" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>kde_output_device_v2_current_mode</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae63860a0c9bbb5d200c54825fb43165d" prot="protected" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>kde_output_device_v2_done</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a879d274b3415bdc686f8a5ec501cc12d" prot="protected" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>kde_output_device_v2_edid</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a289a93797ec9174612eeb208b4013f38" prot="protected" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>kde_output_device_v2_eisa_id</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a7cf0e47936d450b512992f60e23f493d" prot="protected" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>kde_output_device_v2_enabled</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a48befc1af864f12484ab95ad270c6ed7" prot="protected" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>kde_output_device_v2_geometry</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a4a5d1be79c4cae7085a630a2fc7ec2c8" prot="protected" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>kde_output_device_v2_mode</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a62e828ae6886ae30376324892977aa64" prot="protected" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>kde_output_device_v2_overscan</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ac1409fcb833cf2a23e362e59956b924a" prot="protected" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>kde_output_device_v2_rgb_range</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a36ab6295620505bfe45dcb654479b5f0" prot="protected" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>kde_output_device_v2_scale</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ad4172622475d72ad8033427f226e8bd4" prot="protected" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>kde_output_device_v2_serial_number</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a08ec8bb5dc0b8fc7833af2c2d76ddd2a" prot="protected" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>kde_output_device_v2_uuid</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ada2f8c806c4f6ad1614cd310c84c4b18" prot="protected" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>kde_output_device_v2_vrr_policy</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ab7c957b6c470cd6d44f0f32fa8805cc6" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_edid</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a2c7c2bde74619f5df1c00d0afd1c32a4" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_eisaId</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ad011b4a85b72e5d5ba1b9b3fd5a01a88" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_enabled</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a6ae70d316188377bb47f45ac12f30407" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_factor</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a1f708c10aa18e0c60b2d11a192d79d1f" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_flags</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a21eaa3c6eeb7b51c1bb7dd8eb2dd899f" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_id</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1acca4875f66441f63f78243dc917901fd" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_manufacturer</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a046714f280cee2bc976193464c264f69" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_mode</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1aa50227940746fb0a21ec495d6aab5ce0" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_model</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a3d438592b543e9e590317c4b5fb71616" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_modes</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a971f5232f97d0a04510d077c7669f665" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_overscan</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a0409a752269391e656e86da591dff9ea" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_physicalSize</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a572c8b1e010257f6787f854cf56ccbdf" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_pos</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a827a4ff144036c9fe5d830d80827812b" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_rgbRange</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a6d3ce73ac6760feaff5294edd9e93e4d" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_serialNumber</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1aeb59e26795e28873ccdf53739f396f96" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_subpixel</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1aaf1acbea4f33803fe88e683f064b3e3d" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_transform</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1adaaa8f5e21c2132b88d08ff256aa8795" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_uuid</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae704852df9998a98dd75caf970a701dd" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>m_vrr_policy</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a421702495cf785798034dfbe9cc88070" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>manufacturer</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a8ae7f1adc14b41b810503f3532222acf" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>modeId</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a44b48e185abab9248ac89513df82236c" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>model</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1abd8e0b35d7277fb4b2b21988d970525a" prot="private" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>modeName</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a910c1ecd526fa8666f1a3ce54d30bf90" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>name</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a6f0a3dcc63c7d11ad659d908f4aa55d8" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>overscan</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1abedcba62d498e7071a66f23642c06052" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>pixelSize</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1af63efbf08909c8f61bee56f7d24558da" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>refreshRate</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae44d6175c61b5d32982535abe3e9a7e7" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>rgbRange</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a14e637a859ba76de441731146b8e1b3c" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>scale</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1af380c78ed8fcb357a23dfdecbb06e72a" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>vrrPolicy</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1aa122cc8307e5e0aa472f4f532185ef2c" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>WaylandOutputDeviceV2</name></member>
      <member refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a9665b961e4d2d774b2b77cb9c763827e" prot="public" virt="non-virtual"><scope>KWin::Test::WaylandOutputDeviceV2</scope><name>~WaylandOutputDeviceV2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
