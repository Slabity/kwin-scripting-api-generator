<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_screencasting_test" kind="class" language="C++" prot="public">
    <compoundname>KWin::ScreencastingTest</compoundname>
    <basecompoundref refid="class_generic_scene_open_g_l_test" prot="public" virt="non-virtual">GenericSceneOpenGLTest</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_screencasting_test_1a528efac7eb3f6035f724f70b5ac2eae7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::ScreencastingTest::ScreencastingTest</definition>
        <argsstring>()</argsstring>
        <name>ScreencastingTest</name>
        <qualifiedname>KWin::ScreencastingTest::ScreencastingTest</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/screencasting_test.cpp" line="47" column="5" bodyfile="kwin/autotests/integration/screencasting_test.cpp" bodystart="47" bodyend="78"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_screencasting_test_1a2da963cd5fdbe762a43ae472e4664009" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreencastingTest::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>KWin::ScreencastingTest::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/screencasting_test.cpp" line="80" column="10" bodyfile="kwin/autotests/integration/screencasting_test.cpp" bodystart="88" bodyend="97"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_screencasting_test_1a337eda8a6f7911c77d19ded025c7882c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreencastingTest::testWindowCasting</definition>
        <argsstring>()</argsstring>
        <name>testWindowCasting</name>
        <qualifiedname>KWin::ScreencastingTest::testWindowCasting</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/screencasting_test.cpp" line="81" column="10" bodyfile="kwin/autotests/integration/screencasting_test.cpp" bodystart="130" bodyend="150"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_screencasting_test_1af79800136f3ab6b622abbc44e21d8104" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreencastingTest::testOutputCasting</definition>
        <argsstring>()</argsstring>
        <name>testOutputCasting</name>
        <qualifiedname>KWin::ScreencastingTest::testOutputCasting</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/screencasting_test.cpp" line="82" column="10" bodyfile="kwin/autotests/integration/screencasting_test.cpp" bodystart="152" bodyend="179"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_screencasting_test_1a1d400f648983a5e5c613e1d2ceac94e7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; QImage &gt;</type>
        <definition>std::optional&lt; QImage &gt; KWin::ScreencastingTest::oneFrameAndClose</definition>
        <argsstring>(Test::ScreencastingStreamV1 *stream)</argsstring>
        <name>oneFrameAndClose</name>
        <qualifiedname>KWin::ScreencastingTest::oneFrameAndClose</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1" kindref="compound">Test::ScreencastingStreamV1</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/screencasting_test.cpp" line="85" column="19" bodyfile="kwin/autotests/integration/screencasting_test.cpp" bodystart="99" bodyend="128"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>GenericSceneOpenGLTest</label>
        <link refid="class_generic_scene_open_g_l_test"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::ScreencastingTest</label>
        <link refid="class_k_win_1_1_screencasting_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>GenericSceneOpenGLTest</label>
        <link refid="class_generic_scene_open_g_l_test"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::ScreencastingTest</label>
        <link refid="class_k_win_1_1_screencasting_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/integration/screencasting_test.cpp" line="43" column="1" bodyfile="kwin/autotests/integration/screencasting_test.cpp" bodystart="44" bodyend="86"/>
    <listofallmembers>
      <member refid="class_generic_scene_open_g_l_test_1a5f83ef979e98225e5d4878258e470ede" prot="protected" virt="non-virtual"><scope>KWin::ScreencastingTest</scope><name>GenericSceneOpenGLTest</name></member>
      <member refid="class_k_win_1_1_screencasting_test_1a2da963cd5fdbe762a43ae472e4664009" prot="private" virt="non-virtual"><scope>KWin::ScreencastingTest</scope><name>init</name></member>
      <member refid="class_k_win_1_1_screencasting_test_1a1d400f648983a5e5c613e1d2ceac94e7" prot="private" virt="non-virtual"><scope>KWin::ScreencastingTest</scope><name>oneFrameAndClose</name></member>
      <member refid="class_k_win_1_1_screencasting_test_1a528efac7eb3f6035f724f70b5ac2eae7" prot="public" virt="non-virtual"><scope>KWin::ScreencastingTest</scope><name>ScreencastingTest</name></member>
      <member refid="class_k_win_1_1_screencasting_test_1af79800136f3ab6b622abbc44e21d8104" prot="private" virt="non-virtual"><scope>KWin::ScreencastingTest</scope><name>testOutputCasting</name></member>
      <member refid="class_k_win_1_1_screencasting_test_1a337eda8a6f7911c77d19ded025c7882c" prot="private" virt="non-virtual"><scope>KWin::ScreencastingTest</scope><name>testWindowCasting</name></member>
      <member refid="class_generic_scene_open_g_l_test_1ae8f1b869c0ffbbf7f8922340b7384820" prot="public" virt="non-virtual"><scope>KWin::ScreencastingTest</scope><name>~GenericSceneOpenGLTest</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
