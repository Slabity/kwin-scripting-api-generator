<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespace_k_win_1_1_q_p_a" kind="namespace" language="C++">
    <compoundname>KWin::QPA</compoundname>
    <innerclass refid="class_k_win_1_1_q_p_a_1_1_backing_store" prot="public">KWin::QPA::BackingStore</innerclass>
    <innerclass refid="class_k_win_1_1_q_p_a_1_1_clipboard" prot="public">KWin::QPA::Clipboard</innerclass>
    <innerclass refid="class_k_win_1_1_q_p_a_1_1_clipboard_data_source" prot="public">KWin::QPA::ClipboardDataSource</innerclass>
    <innerclass refid="class_k_win_1_1_q_p_a_1_1_clipboard_mime_data" prot="public">KWin::QPA::ClipboardMimeData</innerclass>
    <innerclass refid="class_k_win_1_1_q_p_a_1_1_e_g_l_platform_context" prot="public">KWin::QPA::EGLPlatformContext</innerclass>
    <innerclass refid="class_k_win_1_1_q_p_a_1_1_e_g_l_render_target" prot="public">KWin::QPA::EGLRenderTarget</innerclass>
    <innerclass refid="class_k_win_1_1_q_p_a_1_1_integration" prot="public">KWin::QPA::Integration</innerclass>
    <innerclass refid="class_k_win_1_1_q_p_a_1_1_offscreen_surface" prot="public">KWin::QPA::OffscreenSurface</innerclass>
    <innerclass refid="class_k_win_1_1_q_p_a_1_1_placeholder_screen" prot="public">KWin::QPA::PlaceholderScreen</innerclass>
    <innerclass refid="class_k_win_1_1_q_p_a_1_1_platform_cursor" prot="public">KWin::QPA::PlatformCursor</innerclass>
    <innerclass refid="class_k_win_1_1_q_p_a_1_1_screen" prot="public">KWin::QPA::Screen</innerclass>
    <innerclass refid="class_k_win_1_1_q_p_a_1_1_swapchain" prot="public">KWin::QPA::Swapchain</innerclass>
    <innerclass refid="class_k_win_1_1_q_p_a_1_1_window" prot="public">KWin::QPA::Window</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_k_win_1_1_q_p_a_1a97d9f30dc25c604ca4508266d7551480" prot="public" static="yes" mutable="no">
        <type>quint32</type>
        <definition>quint32 KWin::QPA::s_windowId</definition>
        <argsstring></argsstring>
        <name>s_windowId</name>
        <qualifiedname>KWin::QPA::s_windowId</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/qpa/window.cpp" line="31" column="16" bodyfile="kwin/src/plugins/qpa/window.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_k_win_1_1_q_p_a_1aaecb86081df391b53b3a1fb5a7bc7ca9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void KWin::QPA::writeData</definition>
        <argsstring>(FileDescriptor fd, const QByteArray &amp;buffer)</argsstring>
        <name>writeData</name>
        <qualifiedname>KWin::QPA::writeData</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref></type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const QByteArray &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/qpa/clipboard.cpp" line="33" column="13" bodyfile="kwin/src/plugins/qpa/clipboard.cpp" bodystart="33" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_q_p_a_1a98afd248282081fdf58ceeb58f1f00cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>static QVariant KWin::QPA::readData</definition>
        <argsstring>(FileDescriptor fd)</argsstring>
        <name>readData</name>
        <qualifiedname>KWin::QPA::readData</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref></type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/qpa/clipboard.cpp" line="91" column="17" bodyfile="kwin/src/plugins/qpa/clipboard.cpp" bodystart="91" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_q_p_a_1afbf9480bb7ba1cbe1a9e7f2a6f5241b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::QPA::isOpenGLES</definition>
        <argsstring>()</argsstring>
        <name>isOpenGLES</name>
        <qualifiedname>KWin::QPA::isOpenGLES</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/qpa/eglhelpers.cpp" line="23" column="6" bodyfile="kwin/src/plugins/qpa/eglhelpers.cpp" bodystart="23" bodyend="30" declfile="kwin/src/plugins/qpa/eglhelpers.h" declline="24" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_q_p_a_1af0fce9cfc2389b1ae2e1696e7c4535ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EGLConfig</type>
        <definition>EGLConfig KWin::QPA::configFromFormat</definition>
        <argsstring>(EglDisplay *display, const QSurfaceFormat &amp;surfaceFormat, EGLint surfaceType)</argsstring>
        <name>configFromFormat</name>
        <qualifiedname>KWin::QPA::configFromFormat</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>const QSurfaceFormat &amp;</type>
          <declname>surfaceFormat</declname>
        </param>
        <param>
          <type>EGLint</type>
          <declname>surfaceType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/qpa/eglhelpers.cpp" line="32" column="11" bodyfile="kwin/src/plugins/qpa/eglhelpers.cpp" bodystart="32" bodyend="90" declfile="kwin/src/plugins/qpa/eglhelpers.h" declline="26" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_q_p_a_1adbac63a3868ccae0f1a753312af6dc53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSurfaceFormat</type>
        <definition>QSurfaceFormat KWin::QPA::formatFromConfig</definition>
        <argsstring>(EglDisplay *display, EGLConfig config)</argsstring>
        <name>formatFromConfig</name>
        <qualifiedname>KWin::QPA::formatFromConfig</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>EGLConfig</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/qpa/eglhelpers.cpp" line="92" column="16" bodyfile="kwin/src/plugins/qpa/eglhelpers.cpp" bodystart="92" bodyend="122" declfile="kwin/src/plugins/qpa/eglhelpers.h" declline="27" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_q_p_a_1a74331c14e3ccf54daa74e30d776306d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int KWin::QPA::forcedDpi</definition>
        <argsstring>()</argsstring>
        <name>forcedDpi</name>
        <qualifiedname>KWin::QPA::forcedDpi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/qpa/screen.cpp" line="22" column="12" bodyfile="kwin/src/plugins/qpa/screen.cpp" bodystart="22" bodyend="25"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="kwin/src/plugins/qpa/backingstore.cpp" line="23" column="1"/>
  </compounddef>
</doxygen>
