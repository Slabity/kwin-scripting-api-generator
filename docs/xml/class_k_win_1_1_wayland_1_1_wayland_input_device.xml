<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_wayland_1_1_wayland_input_device" kind="class" language="C++" prot="public">
    <compoundname>KWin::Wayland::WaylandInputDevice</compoundname>
    <basecompoundref refid="class_k_win_1_1_input_device" prot="public" virt="non-virtual">KWin::InputDevice</basecompoundref>
    <includes refid="wayland__backend_8h" local="no">wayland_backend.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a78697583021a3a53545d422660fec40c" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat" kindref="compound">WaylandSeat</ref> *const</type>
        <definition>WaylandSeat* const KWin::Wayland::WaylandInputDevice::m_seat</definition>
        <argsstring></argsstring>
        <name>m_seat</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::m_seat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="87" column="23" bodyfile="kwin/src/backends/wayland/wayland_backend.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a7e36cfb4e0e3070f56e31641a0a26580" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; KWayland::Client::Keyboard &gt;</type>
        <definition>std::unique_ptr&lt;KWayland::Client::Keyboard&gt; KWin::Wayland::WaylandInputDevice::m_keyboard</definition>
        <argsstring></argsstring>
        <name>m_keyboard</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::m_keyboard</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="89" column="21" bodyfile="kwin/src/backends/wayland/wayland_backend.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a018bae97d26064207e67b5a069f1786f" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; KWayland::Client::Touch &gt;</type>
        <definition>std::unique_ptr&lt;KWayland::Client::Touch&gt; KWin::Wayland::WaylandInputDevice::m_touch</definition>
        <argsstring></argsstring>
        <name>m_touch</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::m_touch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="90" column="21" bodyfile="kwin/src/backends/wayland/wayland_backend.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a5a4e8f2563917ce68f5b614c4a053eab" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; KWayland::Client::RelativePointer &gt;</type>
        <definition>std::unique_ptr&lt;KWayland::Client::RelativePointer&gt; KWin::Wayland::WaylandInputDevice::m_relativePointer</definition>
        <argsstring></argsstring>
        <name>m_relativePointer</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::m_relativePointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="91" column="21" bodyfile="kwin/src/backends/wayland/wayland_backend.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a0df57ac71a777d02f1cef22d69a9ed96" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; KWayland::Client::Pointer &gt;</type>
        <definition>std::unique_ptr&lt;KWayland::Client::Pointer&gt; KWin::Wayland::WaylandInputDevice::m_pointer</definition>
        <argsstring></argsstring>
        <name>m_pointer</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::m_pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="92" column="21" bodyfile="kwin/src/backends/wayland/wayland_backend.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1ad2835cbc342ef00a2a81d75c056aa004" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; KWayland::Client::PointerPinchGesture &gt;</type>
        <definition>std::unique_ptr&lt;KWayland::Client::PointerPinchGesture&gt; KWin::Wayland::WaylandInputDevice::m_pinchGesture</definition>
        <argsstring></argsstring>
        <name>m_pinchGesture</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::m_pinchGesture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="93" column="21" bodyfile="kwin/src/backends/wayland/wayland_backend.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a1bc1787fb8566d85779709b6bc31da9b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; KWayland::Client::PointerSwipeGesture &gt;</type>
        <definition>std::unique_ptr&lt;KWayland::Client::PointerSwipeGesture&gt; KWin::Wayland::WaylandInputDevice::m_swipeGesture</definition>
        <argsstring></argsstring>
        <name>m_swipeGesture</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::m_swipeGesture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="94" column="21" bodyfile="kwin/src/backends/wayland/wayland_backend.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1ad259460088bf28d241c45970c5f24af9" prot="private" static="no" mutable="no">
        <type>QSet&lt; quint32 &gt;</type>
        <definition>QSet&lt;quint32&gt; KWin::Wayland::WaylandInputDevice::m_pressedKeys</definition>
        <argsstring></argsstring>
        <name>m_pressedKeys</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::m_pressedKeys</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="96" column="10" bodyfile="kwin/src/backends/wayland/wayland_backend.h" bodystart="96" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1ae43ccd4a46e2a922aee1e73912f30acf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Wayland::WaylandInputDevice::WaylandInputDevice</definition>
        <argsstring>(KWayland::Client::Touch *touch, WaylandSeat *seat)</argsstring>
        <name>WaylandInputDevice</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::WaylandInputDevice</qualifiedname>
        <param>
          <type>KWayland::Client::Touch *</type>
          <declname>touch</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat" kindref="compound">WaylandSeat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="64" column="5" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="181" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a32b029d4dfc9653b9ea00fe3cfdfae85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Wayland::WaylandInputDevice::WaylandInputDevice</definition>
        <argsstring>(KWayland::Client::Keyboard *keyboard, WaylandSeat *seat)</argsstring>
        <name>WaylandInputDevice</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::WaylandInputDevice</qualifiedname>
        <param>
          <type>KWayland::Client::Keyboard *</type>
          <declname>keyboard</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat" kindref="compound">WaylandSeat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="65" column="5" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="50" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1afca8c47a73b6769c3639b0e83375216d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Wayland::WaylandInputDevice::WaylandInputDevice</definition>
        <argsstring>(KWayland::Client::RelativePointer *relativePointer, WaylandSeat *seat)</argsstring>
        <name>WaylandInputDevice</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::WaylandInputDevice</qualifiedname>
        <param>
          <type>KWayland::Client::RelativePointer *</type>
          <declname>relativePointer</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat" kindref="compound">WaylandSeat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="66" column="5" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="172" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a1baf4edc91290ad0eb955482381ca08e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Wayland::WaylandInputDevice::WaylandInputDevice</definition>
        <argsstring>(KWayland::Client::Pointer *pointer, WaylandSeat *seat)</argsstring>
        <name>WaylandInputDevice</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::WaylandInputDevice</qualifiedname>
        <param>
          <type>KWayland::Client::Pointer *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat" kindref="compound">WaylandSeat</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="67" column="5" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="81" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1acce92ff81537d4b68f23d808ecc2fbd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Wayland::WaylandInputDevice::~WaylandInputDevice</definition>
        <argsstring>() override</argsstring>
        <name>~WaylandInputDevice</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::~WaylandInputDevice</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="68" column="5" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="214" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1aeeb87ba27f7499d864a102e7f9cf46f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString KWin::Wayland::WaylandInputDevice::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::name</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1aad981f4a054982e6461209db49f6ffad">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="70" column="13" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1ab230b251fa86f749b83c60a619901a8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::Wayland::WaylandInputDevice::isEnabled</definition>
        <argsstring>() const override</argsstring>
        <name>isEnabled</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::isEnabled</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1a28f931744ac0815ad818380332e704f6">isEnabled</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="72" column="10" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a2d099135e4373f2837e5623367d93597" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::Wayland::WaylandInputDevice::setEnabled</definition>
        <argsstring>(bool enabled) override</argsstring>
        <name>setEnabled</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::setEnabled</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1a03ceb0b268f14beabb23794b27ff59bb">setEnabled</reimplements>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="73" column="10" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a600127120cf6c54c11f40c5082724110" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::Wayland::WaylandInputDevice::isKeyboard</definition>
        <argsstring>() const override</argsstring>
        <name>isKeyboard</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::isKeyboard</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1a1b70ce5d05e9fb22fe7c5759c9a02d94">isKeyboard</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="75" column="10" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a0692402f6f95b26d45e4889da99c1733" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::Wayland::WaylandInputDevice::isPointer</definition>
        <argsstring>() const override</argsstring>
        <name>isPointer</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::isPointer</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1a331075c15081e56df49c17d0882a3c99">isPointer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="76" column="10" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a3995d993a66143a3fca27e2c053928b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::Wayland::WaylandInputDevice::isTouchpad</definition>
        <argsstring>() const override</argsstring>
        <name>isTouchpad</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::isTouchpad</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1a74674383b7e25067438228500de9a8b7">isTouchpad</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="77" column="10" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a9d2a35d1b9a15f8e1ee643ec20e2a246" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::Wayland::WaylandInputDevice::isTouch</definition>
        <argsstring>() const override</argsstring>
        <name>isTouch</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::isTouch</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1a588e08cb3904b465f2127217ef324040">isTouch</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="78" column="10" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="247" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a04c54eb5211d9ec4951cb286e8b85a90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::Wayland::WaylandInputDevice::isTabletTool</definition>
        <argsstring>() const override</argsstring>
        <name>isTabletTool</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::isTabletTool</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1a9e2fa178da50f29fb524fc5b4bc450f2">isTabletTool</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="79" column="10" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a85e7a2c756b9aedc10b02edef323b579" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::Wayland::WaylandInputDevice::isTabletPad</definition>
        <argsstring>() const override</argsstring>
        <name>isTabletPad</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::isTabletPad</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1aeb9893522b4ca183cbde1ffd31c711e4">isTabletPad</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="80" column="10" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a77f53f4034747df59590dc1615c84a69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::Wayland::WaylandInputDevice::isTabletModeSwitch</definition>
        <argsstring>() const override</argsstring>
        <name>isTabletModeSwitch</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::isTabletModeSwitch</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1abbbb154e529903f4493029190bb35fc5">isTabletModeSwitch</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="81" column="10" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1af868f02670ebde22f77eae49804e8069" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::Wayland::WaylandInputDevice::isLidSwitch</definition>
        <argsstring>() const override</argsstring>
        <name>isLidSwitch</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::isLidSwitch</qualifiedname>
        <reimplements refid="class_k_win_1_1_input_device_1ad81736c7e46244d5f48132d10c7f8255">isLidSwitch</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="82" column="10" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_input_device_1a7234140cd0fd48df1d9105cfa53cbda6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>KWayland::Client::Pointer *</type>
        <definition>KWayland::Client::Pointer * KWin::Wayland::WaylandInputDevice::nativePointer</definition>
        <argsstring>() const</argsstring>
        <name>nativePointer</name>
        <qualifiedname>KWin::Wayland::WaylandInputDevice::nativePointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_backend.h" line="84" column="31" bodyfile="kwin/src/backends/wayland/wayland_backend.cpp" bodystart="272" bodyend="275"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::InputDevice</label>
        <link refid="class_k_win_1_1_input_device"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::Wayland::WaylandInputDevice</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_input_device"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::InputDevice</label>
        <link refid="class_k_win_1_1_input_device"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::Wayland::WaylandInputDevice</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_input_device"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/backends/wayland/wayland_backend.h" line="59" column="1" bodyfile="kwin/src/backends/wayland/wayland_backend.h" bodystart="60" bodyend="97"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_input_device_1a2f56d3b5eed7bd3bc717199e21aa2e51" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>group</name></member>
      <member refid="class_k_win_1_1_input_device_1a4f46cbd5727c3b81b2d3b0238f6efa4a" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>holdGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_device_1a5d0e018e878d5ffb65cc906ed841873a" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>holdGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_device_1ab362e3f2d08b666a98e71afd11b34de4" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>holdGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_device_1aa28bcff91a76e7c2b405dc6cc895cde6" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>InputDevice</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1ab230b251fa86f749b83c60a619901a8b" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>isEnabled</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a600127120cf6c54c11f40c5082724110" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>isKeyboard</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1af868f02670ebde22f77eae49804e8069" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>isLidSwitch</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a0692402f6f95b26d45e4889da99c1733" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>isPointer</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a77f53f4034747df59590dc1615c84a69" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>isTabletModeSwitch</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a85e7a2c756b9aedc10b02edef323b579" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>isTabletPad</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a04c54eb5211d9ec4951cb286e8b85a90" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>isTabletTool</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a9d2a35d1b9a15f8e1ee643ec20e2a246" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>isTouch</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a3995d993a66143a3fca27e2c053928b6" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>isTouchpad</name></member>
      <member refid="class_k_win_1_1_input_device_1a18c0e18750a071e1ab7a3e3cd575071a" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>keyChanged</name></member>
      <member refid="class_k_win_1_1_input_device_1ae02d1543af79c38088c5190442a1bcc1" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>leds</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a7e36cfb4e0e3070f56e31641a0a26580" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>m_keyboard</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1ad2835cbc342ef00a2a81d75c056aa004" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>m_pinchGesture</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a0df57ac71a777d02f1cef22d69a9ed96" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>m_pointer</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1ad259460088bf28d241c45970c5f24af9" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>m_pressedKeys</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a5a4e8f2563917ce68f5b614c4a053eab" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>m_relativePointer</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a78697583021a3a53545d422660fec40c" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>m_seat</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a1bc1787fb8566d85779709b6bc31da9b" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>m_swipeGesture</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a018bae97d26064207e67b5a069f1786f" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>m_touch</name></member>
      <member refid="class_k_win_1_1_input_device_1abafa14f7b803ac563843d27346409bef" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>modeGroups</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1aeeb87ba27f7499d864a102e7f9cf46f7" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>name</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a7234140cd0fd48df1d9105cfa53cbda6" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>nativePointer</name></member>
      <member refid="class_k_win_1_1_input_device_1afa3cfe3dcb3741a53f1c88f887d58b92" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>outputName</name></member>
      <member refid="class_k_win_1_1_input_device_1a58c19abab1f426b987b0f0690011dfb0" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>pinchGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_device_1a5b514ccff02b61cf03b9fc23806a58eb" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>pinchGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_device_1afcacc8ed046e56243d42f4a7f6cbd2e9" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>pinchGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_device_1a9720434391b05daee19c3f18b72dc635" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>pinchGestureUpdate</name></member>
      <member refid="class_k_win_1_1_input_device_1a33bbebff1d2b1a59a57c88dafa72eaaa" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>pointerAxisChanged</name></member>
      <member refid="class_k_win_1_1_input_device_1af2aa67c0f21aa2f83c1e17a611e75f85" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>pointerButtonChanged</name></member>
      <member refid="class_k_win_1_1_input_device_1a43d563ab496cbbc60cd1098fce57ab70" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>pointerFrame</name></member>
      <member refid="class_k_win_1_1_input_device_1a41f177939241acaec7df62607e7370d3" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>pointerMotion</name></member>
      <member refid="class_k_win_1_1_input_device_1aabda249f682e8597843a656c55525d5d" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>pointerMotionAbsolute</name></member>
      <member refid="class_k_win_1_1_input_device_1ad10b01e67e95a6a6566bf87eb9f83705" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>product</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a2d099135e4373f2837e5623367d93597" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>setEnabled</name></member>
      <member refid="class_k_win_1_1_input_device_1a582970abbfe7a7cfdf16d865991a2e97" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>setLeds</name></member>
      <member refid="class_k_win_1_1_input_device_1a7d3d38075506f5b85db2b9dd9bf35771" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>setOutputName</name></member>
      <member refid="class_k_win_1_1_input_device_1ae7cfe76b5176e42e9e2d1f2eab657d9b" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>swipeGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_device_1a4ae913ffc5ba93bf20441d17608a2323" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>swipeGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_device_1ae57204b3e3e2fd3cde04d13c8a5df366" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>swipeGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_device_1a38f9a85f76f779c1736733efacdeff9a" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>swipeGestureUpdate</name></member>
      <member refid="class_k_win_1_1_input_device_1a7be97fe8f11738c6bd6d6ec6fa810f5c" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>switchToggle</name></member>
      <member refid="class_k_win_1_1_input_device_1ac1e8d78f37e13e0a4a8622d074a57156" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>sysPath</name></member>
      <member refid="class_k_win_1_1_input_device_1ad78b0bcdcfa038f560c3f7d926f4fbbe" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>tabletPadButtonCount</name></member>
      <member refid="class_k_win_1_1_input_device_1adf7e491468284b12bf62f422af23bc8e" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>tabletPadButtonEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1aa55d18855d95e08d65fe225497342fc6" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>tabletPadRingEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1af637ebd5021ae6b6d37121d8896768fb" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>tabletPadStripEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1a36fd21ea27d722c88455fa7315619593" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>tabletToolAxisEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1aeae463b5a1bf527c63ee0ae32d28e45c" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>tabletToolButtonEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1aee6146b2bf9d22adc82d8fdedb2b496d" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>tabletToolProximityEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1a567ce8c3e12e5d82725bcfb6f27d34a7" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>tabletToolTipEvent</name></member>
      <member refid="class_k_win_1_1_input_device_1a3605b08e0a373f1e91c09c87557fd020" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>touchCanceled</name></member>
      <member refid="class_k_win_1_1_input_device_1a980b0a91ad2c70a7c1ed4360fccb76e7" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>touchDown</name></member>
      <member refid="class_k_win_1_1_input_device_1a2af070611afbc3b97fb0930ac3898346" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>touchFrame</name></member>
      <member refid="class_k_win_1_1_input_device_1a3179642a0ae2196f397d221d0ff38b3d" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>touchMotion</name></member>
      <member refid="class_k_win_1_1_input_device_1afcc35ba1cd647736c8122951a54025b8" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>touchUp</name></member>
      <member refid="class_k_win_1_1_input_device_1a3118e7b217b544f5e06c64a962a113ef" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>vendor</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1ae43ccd4a46e2a922aee1e73912f30acf" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>WaylandInputDevice</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a32b029d4dfc9653b9ea00fe3cfdfae85" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>WaylandInputDevice</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1afca8c47a73b6769c3639b0e83375216d" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>WaylandInputDevice</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a1baf4edc91290ad0eb955482381ca08e" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>WaylandInputDevice</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1acce92ff81537d4b68f23d808ecc2fbd9" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandInputDevice</scope><name>~WaylandInputDevice</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
