<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="test__seat_8cpp" kind="file" language="C++">
    <compoundname>test_seat.cpp</compoundname>
    <includes local="no">QSignalSpy</includes>
    <includes local="no">QTest</includes>
    <includes refid="display_8h" local="yes">wayland/display.h</includes>
    <includes refid="keyboard_8h" local="yes">wayland/keyboard.h</includes>
    <includes refid="pointer_8h" local="yes">wayland/pointer.h</includes>
    <includes refid="seat_8h" local="yes">wayland/seat.h</includes>
    <includes local="yes">test_seat.moc</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/autotests/wayland/server/test_seat.cpp</label>
        <link refid="test__seat_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>wayland/display.h</label>
        <link refid="display_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>wayland/keyboard.h</label>
        <link refid="keyboard_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>wayland/pointer.h</label>
        <link refid="pointer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>wayland/seat.h</label>
        <link refid="seat_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>QCoreApplication</label>
      </node>
      <node id="13">
        <label>QImage</label>
      </node>
      <node id="6">
        <label>QList</label>
      </node>
      <node id="20">
        <label>QMatrix4x4</label>
      </node>
      <node id="7">
        <label>QObject</label>
      </node>
      <node id="14">
        <label>QPoint</label>
      </node>
      <node id="21">
        <label>QPointer</label>
      </node>
      <node id="2">
        <label>QSignalSpy</label>
      </node>
      <node id="3">
        <label>QTest</label>
      </node>
      <node id="15">
        <label>QVariant</label>
      </node>
      <node id="16">
        <label>QVector2D</label>
      </node>
      <node id="11">
        <label>config-kwin.h</label>
      </node>
      <node id="5">
        <label>kwin_export.h</label>
      </node>
      <node id="18">
        <label>memory</label>
      </node>
      <node id="22">
        <label>test_seat.moc</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_wayland_server_seat" prot="public">TestWaylandServerSeat</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="test__seat_8cpp_1a485d6ddd568caea0908934bfdb9fbadb" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString s_socketName</definition>
        <argsstring></argsstring>
        <name>s_socketName</name>
        <initializer>= QStringLiteral(&quot;kwin-wayland-server-seat-test-0&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/server/test_seat.cpp" line="28" column="22" bodyfile="kwin/autotests/wayland/server/test_seat.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2014<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSignalSpy&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WaylandServer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">wayland/display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keyboard_8h" kindref="compound">wayland/keyboard.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer_8h" kindref="compound">wayland/pointer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="seat_8h" kindref="compound">wayland/seat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_test_wayland_server_seat" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_wayland_server_seat" kindref="compound">TestWaylandServerSeat</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Q_SLOTS:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testCapabilities();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testPointerButton();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testPointerPos();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testRepeatInfo();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMultiple();</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>s_socketName<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;kwin-wayland-server-seat-test-0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestWaylandServerSeat::testCapabilities()</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_display" kindref="compound">KWin::Display</ref><sp/>display;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>display.<ref refid="class_k_win_1_1_display_1aa4c4acfe47f745065df276fab792b431" kindref="member">addSocketName</ref>(s_socketName);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>display.<ref refid="class_k_win_1_1_display_1af36443417f1832645373ce713cb226c7" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref>(&amp;display,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;seat0&quot;</highlight><highlight class="normal">),<sp/>&amp;display);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a3522bf3c6d75491eee8b53510ea81fc7" kindref="member">hasKeyboard</ref>());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a1ab5cb0e60f09868cac2d9f2927f4f4c" kindref="member">hasPointer</ref>());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a477df87a0a1f4ca521ed404c484f5509" kindref="member">hasTouch</ref>());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>keyboardSpy(seat,<sp/>&amp;<ref refid="class_k_win_1_1_seat_interface_1a8d17cc4048875a20d8966953465eb747" kindref="member">SeatInterface::hasKeyboardChanged</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a37bb18135b053978deaf9d7ec995c5f3" kindref="member">setHasKeyboard</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(keyboardSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(keyboardSpy.last().first().toBool());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a3522bf3c6d75491eee8b53510ea81fc7" kindref="member">hasKeyboard</ref>());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a37bb18135b053978deaf9d7ec995c5f3" kindref="member">setHasKeyboard</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(keyboardSpy.count(),<sp/>2);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!keyboardSpy.last().first().toBool());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a3522bf3c6d75491eee8b53510ea81fc7" kindref="member">hasKeyboard</ref>());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a37bb18135b053978deaf9d7ec995c5f3" kindref="member">setHasKeyboard</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(keyboardSpy.count(),<sp/>2);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>pointerSpy(seat,<sp/>&amp;<ref refid="class_k_win_1_1_seat_interface_1adfa024bafa0b9311a9b0b317885e4d90" kindref="member">SeatInterface::hasPointerChanged</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a6514d6351ddd81651f7bbfeb3be84a2d" kindref="member">setHasPointer</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pointerSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(pointerSpy.last().first().toBool());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a1ab5cb0e60f09868cac2d9f2927f4f4c" kindref="member">hasPointer</ref>());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a6514d6351ddd81651f7bbfeb3be84a2d" kindref="member">setHasPointer</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pointerSpy.count(),<sp/>2);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!pointerSpy.last().first().toBool());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a1ab5cb0e60f09868cac2d9f2927f4f4c" kindref="member">hasPointer</ref>());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a6514d6351ddd81651f7bbfeb3be84a2d" kindref="member">setHasPointer</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(pointerSpy.count(),<sp/>2);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>touchSpy(seat,<sp/>&amp;<ref refid="class_k_win_1_1_seat_interface_1a83659a3d7032226c45b36f537e82e8ab" kindref="member">SeatInterface::hasTouchChanged</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a1242dec262af8c709b27a393c3a0b39e" kindref="member">setHasTouch</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(touchSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(touchSpy.last().first().toBool());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a477df87a0a1f4ca521ed404c484f5509" kindref="member">hasTouch</ref>());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a1242dec262af8c709b27a393c3a0b39e" kindref="member">setHasTouch</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(touchSpy.count(),<sp/>2);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!touchSpy.last().first().toBool());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a477df87a0a1f4ca521ed404c484f5509" kindref="member">hasTouch</ref>());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a1242dec262af8c709b27a393c3a0b39e" kindref="member">setHasTouch</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(touchSpy.count(),<sp/>2);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestWaylandServerSeat::testPointerButton()</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>KWin::Display<sp/>display;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>display.<ref refid="class_k_win_1_1_display_1aa4c4acfe47f745065df276fab792b431" kindref="member">addSocketName</ref>(s_socketName);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>display.<ref refid="class_k_win_1_1_display_1af36443417f1832645373ce713cb226c7" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>SeatInterface<sp/>*seat<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SeatInterface(&amp;display,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;seat0&quot;</highlight><highlight class="normal">),<sp/>&amp;display);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a6514d6351ddd81651f7bbfeb3be84a2d" kindref="member">setHasPointer</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>button<sp/>pressed<sp/>yet,<sp/>should<sp/>be<sp/>released<sp/>and<sp/>no<sp/>serial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a897a0c30fdef792d6e446c7e730c5147" kindref="member">isPointerButtonPressed</ref>(0));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a897a0c30fdef792d6e446c7e730c5147" kindref="member">isPointerButtonPressed</ref>(1));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a11c1dac5dc3496d47a71359341b6ccc0" kindref="member">pointerButtonSerial</ref>(0),<sp/>quint32(0));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a11c1dac5dc3496d47a71359341b6ccc0" kindref="member">pointerButtonSerial</ref>(1),<sp/>quint32(0));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>the<sp/>button<sp/>as<sp/>pressed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1ae38adc683ab54c95f9fa10ef26028b73" kindref="member">notifyPointerButton</ref>(0,<sp/>PointerButtonState::Pressed);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1ab9c928f670fb2f9e9ca77dce6d496464" kindref="member">notifyPointerFrame</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a897a0c30fdef792d6e446c7e730c5147" kindref="member">isPointerButtonPressed</ref>(0));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a11c1dac5dc3496d47a71359341b6ccc0" kindref="member">pointerButtonSerial</ref>(0),<sp/>display.<ref refid="class_k_win_1_1_display_1a1592cc63a3c36673842d84fa3933a202" kindref="member">serial</ref>());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>button<sp/>should<sp/>still<sp/>be<sp/>unpressed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a897a0c30fdef792d6e446c7e730c5147" kindref="member">isPointerButtonPressed</ref>(1));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a11c1dac5dc3496d47a71359341b6ccc0" kindref="member">pointerButtonSerial</ref>(1),<sp/>quint32(0));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>release<sp/>it<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1ae38adc683ab54c95f9fa10ef26028b73" kindref="member">notifyPointerButton</ref>(0,<sp/>PointerButtonState::Released);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1ab9c928f670fb2f9e9ca77dce6d496464" kindref="member">notifyPointerFrame</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a897a0c30fdef792d6e446c7e730c5147" kindref="member">isPointerButtonPressed</ref>(0));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a11c1dac5dc3496d47a71359341b6ccc0" kindref="member">pointerButtonSerial</ref>(0),<sp/>display.<ref refid="class_k_win_1_1_display_1a1592cc63a3c36673842d84fa3933a202" kindref="member">serial</ref>());</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestWaylandServerSeat::testPointerPos()</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>KWin::Display<sp/>display;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>display.<ref refid="class_k_win_1_1_display_1aa4c4acfe47f745065df276fab792b431" kindref="member">addSocketName</ref>(s_socketName);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>display.<ref refid="class_k_win_1_1_display_1af36443417f1832645373ce713cb226c7" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>SeatInterface<sp/>*seat<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SeatInterface(&amp;display,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;seat0&quot;</highlight><highlight class="normal">),<sp/>&amp;display);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a6514d6351ddd81651f7bbfeb3be84a2d" kindref="member">setHasPointer</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>seatPosSpy(seat,<sp/>&amp;<ref refid="class_k_win_1_1_seat_interface_1aa45ec0696603ab055b470dffa00ab43d" kindref="member">SeatInterface::pointerPosChanged</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a31733a64eb06520e8f793c6b80674566" kindref="member">pointerPos</ref>(),<sp/>QPointF());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a544c9a6129a4afa11a3a98163357f739" kindref="member">notifyPointerMotion</ref>(QPointF(10,<sp/>15));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1ab9c928f670fb2f9e9ca77dce6d496464" kindref="member">notifyPointerFrame</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a31733a64eb06520e8f793c6b80674566" kindref="member">pointerPos</ref>(),<sp/>QPointF(10,<sp/>15));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seatPosSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seatPosSpy.first().first().toPointF(),<sp/>QPointF(10,<sp/>15));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a544c9a6129a4afa11a3a98163357f739" kindref="member">notifyPointerMotion</ref>(QPointF(10,<sp/>15));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1ab9c928f670fb2f9e9ca77dce6d496464" kindref="member">notifyPointerFrame</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seatPosSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a544c9a6129a4afa11a3a98163357f739" kindref="member">notifyPointerMotion</ref>(QPointF(5,<sp/>7));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1ab9c928f670fb2f9e9ca77dce6d496464" kindref="member">notifyPointerFrame</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a31733a64eb06520e8f793c6b80674566" kindref="member">pointerPos</ref>(),<sp/>QPointF(5,<sp/>7));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seatPosSpy.count(),<sp/>2);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seatPosSpy.first().first().toPointF(),<sp/>QPointF(10,<sp/>15));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seatPosSpy.last().first().toPointF(),<sp/>QPointF(5,<sp/>7));</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestWaylandServerSeat::testRepeatInfo()</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>KWin::Display<sp/>display;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>display.<ref refid="class_k_win_1_1_display_1aa4c4acfe47f745065df276fab792b431" kindref="member">addSocketName</ref>(s_socketName);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>display.<ref refid="class_k_win_1_1_display_1af36443417f1832645373ce713cb226c7" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>SeatInterface<sp/>*seat<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SeatInterface(&amp;display,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;seat0&quot;</highlight><highlight class="normal">),<sp/>&amp;display);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a37bb18135b053978deaf9d7ec995c5f3" kindref="member">setHasKeyboard</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1aaceacef11dc2154613e624c6b8bfabf5" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_interface_1ab3a01629e4497cf390ac63e3e67bb329" kindref="member">keyRepeatRate</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1aaceacef11dc2154613e624c6b8bfabf5" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_interface_1a04566f7ed4154942c52dadc612f24ecd" kindref="member">keyRepeatDelay</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1aaceacef11dc2154613e624c6b8bfabf5" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_interface_1a706f8b1f77a8ba8210c6a849ff1eb158" kindref="member">setRepeatInfo</ref>(25,<sp/>660);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1aaceacef11dc2154613e624c6b8bfabf5" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_interface_1ab3a01629e4497cf390ac63e3e67bb329" kindref="member">keyRepeatRate</ref>(),<sp/>25);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1aaceacef11dc2154613e624c6b8bfabf5" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_interface_1a04566f7ed4154942c52dadc612f24ecd" kindref="member">keyRepeatDelay</ref>(),<sp/>660);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setting<sp/>negative<sp/>values<sp/>should<sp/>result<sp/>in<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1aaceacef11dc2154613e624c6b8bfabf5" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_interface_1a706f8b1f77a8ba8210c6a849ff1eb158" kindref="member">setRepeatInfo</ref>(-25,<sp/>-660);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1aaceacef11dc2154613e624c6b8bfabf5" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_interface_1ab3a01629e4497cf390ac63e3e67bb329" kindref="member">keyRepeatRate</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1aaceacef11dc2154613e624c6b8bfabf5" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_interface_1a04566f7ed4154942c52dadc612f24ecd" kindref="member">keyRepeatDelay</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestWaylandServerSeat::testMultiple()</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>KWin::Display<sp/>display;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>display.<ref refid="class_k_win_1_1_display_1aa4c4acfe47f745065df276fab792b431" kindref="member">addSocketName</ref>(s_socketName);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>display.<ref refid="class_k_win_1_1_display_1af36443417f1832645373ce713cb226c7" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().isEmpty());</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>SeatInterface<sp/>*seat1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SeatInterface(&amp;display,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;seat0&quot;</highlight><highlight class="normal">),<sp/>&amp;display);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().count(),<sp/>1);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().at(0),<sp/>seat1);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>SeatInterface<sp/>*seat2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SeatInterface(&amp;display,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;seat0&quot;</highlight><highlight class="normal">),<sp/>&amp;display);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().count(),<sp/>2);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().at(0),<sp/>seat1);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().at(1),<sp/>seat2);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>SeatInterface<sp/>*seat3<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SeatInterface(&amp;display,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;seat0&quot;</highlight><highlight class="normal">),<sp/>&amp;display);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().count(),<sp/>3);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().at(0),<sp/>seat1);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().at(1),<sp/>seat2);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().at(2),<sp/>seat3);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>seat3;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().count(),<sp/>2);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().at(0),<sp/>seat1);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().at(1),<sp/>seat2);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>seat2;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().count(),<sp/>1);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().at(0),<sp/>seat1);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>seat1;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(display.<ref refid="class_k_win_1_1_display_1aef2adf782212918f49a67897ae38a39e" kindref="member">seats</ref>().count(),<sp/>0);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">QTEST_GUILESS_MAIN(<ref refid="class_test_wayland_server_seat" kindref="compound">TestWaylandServerSeat</ref>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_seat.moc&quot;</highlight></codeline>
    </programlisting>
    <location file="kwin/autotests/wayland/server/test_seat.cpp"/>
  </compounddef>
</doxygen>
