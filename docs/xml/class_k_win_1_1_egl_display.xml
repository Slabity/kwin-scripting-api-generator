<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_egl_display" kind="class" language="C++" prot="public">
    <compoundname>KWin::EglDisplay</compoundname>
    <includes refid="egldisplay_8h" local="no">egldisplay.h</includes>
    <innerclass refid="struct_k_win_1_1_egl_display_1_1_drm_format_info" prot="public">KWin::EglDisplay::DrmFormatInfo</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_egl_display_1af315307bfaca48c6c8d59bbff26d8ab2" prot="private" static="no" mutable="no">
        <type>const ::EGLDisplay</type>
        <definition>const ::EGLDisplay KWin::EglDisplay::m_handle</definition>
        <argsstring></argsstring>
        <name>m_handle</name>
        <qualifiedname>KWin::EglDisplay::m_handle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="66" column="24" bodyfile="kwin/src/opengl/egldisplay.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_egl_display_1a459b71455aef9e7792d871f55d3b28eb" prot="private" static="no" mutable="no">
        <type>const QList&lt; QByteArray &gt;</type>
        <definition>const QList&lt;QByteArray&gt; KWin::EglDisplay::m_extensions</definition>
        <argsstring></argsstring>
        <name>m_extensions</name>
        <qualifiedname>KWin::EglDisplay::m_extensions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="67" column="17" bodyfile="kwin/src/opengl/egldisplay.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_egl_display_1a80c635501d8e4cb86fa469573a41efbf" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool KWin::EglDisplay::m_owning</definition>
        <argsstring></argsstring>
        <name>m_owning</name>
        <qualifiedname>KWin::EglDisplay::m_owning</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="68" column="16" bodyfile="kwin/src/opengl/egldisplay.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_egl_display_1ab3e09e620e3df654b0e549228fa2bd37" prot="private" static="no" mutable="no">
        <type>const QString</type>
        <definition>const QString KWin::EglDisplay::m_renderNode</definition>
        <argsstring></argsstring>
        <name>m_renderNode</name>
        <qualifiedname>KWin::EglDisplay::m_renderNode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="69" column="19" bodyfile="kwin/src/opengl/egldisplay.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_egl_display_1a432d305f297dd70af0410c62955135f2" prot="private" static="no" mutable="no">
        <type>const std::optional&lt; dev_t &gt;</type>
        <definition>const std::optional&lt;dev_t&gt; KWin::EglDisplay::m_renderDevNode</definition>
        <argsstring></argsstring>
        <name>m_renderDevNode</name>
        <qualifiedname>KWin::EglDisplay::m_renderDevNode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="70" column="25" bodyfile="kwin/src/opengl/egldisplay.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_egl_display_1a389d821724c0171042a744a0aab06a14" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool KWin::EglDisplay::m_supportsBufferAge</definition>
        <argsstring></argsstring>
        <name>m_supportsBufferAge</name>
        <qualifiedname>KWin::EglDisplay::m_supportsBufferAge</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="72" column="16" bodyfile="kwin/src/opengl/egldisplay.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_egl_display_1a1456afbd8733d38f9b82156056e0c875" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool KWin::EglDisplay::m_supportsNativeFence</definition>
        <argsstring></argsstring>
        <name>m_supportsNativeFence</name>
        <qualifiedname>KWin::EglDisplay::m_supportsNativeFence</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="73" column="16" bodyfile="kwin/src/opengl/egldisplay.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_egl_display_1a8129030213a71ff3d7731578573f4d45" prot="private" static="no" mutable="no">
        <type>QHash&lt; uint32_t, <ref refid="struct_k_win_1_1_egl_display_1_1_drm_format_info" kindref="compound">DrmFormatInfo</ref> &gt;</type>
        <definition>QHash&lt;uint32_t, DrmFormatInfo&gt; KWin::EglDisplay::m_importFormats</definition>
        <argsstring></argsstring>
        <name>m_importFormats</name>
        <qualifiedname>KWin::EglDisplay::m_importFormats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="74" column="11" bodyfile="kwin/src/opengl/egldisplay.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_egl_display_1a1957827e5e7dbbfb57ecef72ce660324" prot="private" static="no" mutable="no">
        <type>struct <ref refid="class_k_win_1_1_egl_display" kindref="compound">KWin::EglDisplay</ref></type>
        <definition>struct KWin::EglDisplay KWin::EglDisplay::m_functions</definition>
        <argsstring></argsstring>
        <name>m_functions</name>
        <qualifiedname>KWin::EglDisplay::m_functions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="83" column="17"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_egl_display_1abcbb72fb6959ec64c7f0729dfbb36ad2" prot="public" static="no" mutable="no">
        <type>PFNEGLCREATEIMAGEKHRPROC</type>
        <definition>PFNEGLCREATEIMAGEKHRPROC KWin::EglDisplay::createImageKHR</definition>
        <argsstring></argsstring>
        <name>createImageKHR</name>
        <qualifiedname>KWin::EglDisplay::createImageKHR</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="78" column="34" bodyfile="kwin/src/opengl/egldisplay.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_egl_display_1a192cee32b271bac36be53e05dbc8ca15" prot="public" static="no" mutable="no">
        <type>PFNEGLDESTROYIMAGEKHRPROC</type>
        <definition>PFNEGLDESTROYIMAGEKHRPROC KWin::EglDisplay::destroyImageKHR</definition>
        <argsstring></argsstring>
        <name>destroyImageKHR</name>
        <qualifiedname>KWin::EglDisplay::destroyImageKHR</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="79" column="35" bodyfile="kwin/src/opengl/egldisplay.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_egl_display_1ae4b4eca44a0edc0347396c804d9b2db4" prot="public" static="no" mutable="no">
        <type>PFNEGLQUERYDMABUFFORMATSEXTPROC</type>
        <definition>PFNEGLQUERYDMABUFFORMATSEXTPROC KWin::EglDisplay::queryDmaBufFormatsEXT</definition>
        <argsstring></argsstring>
        <name>queryDmaBufFormatsEXT</name>
        <qualifiedname>KWin::EglDisplay::queryDmaBufFormatsEXT</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="81" column="41" bodyfile="kwin/src/opengl/egldisplay.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_egl_display_1a89609c8fa8d2480a5ac0bfb72d5ceb9c" prot="public" static="no" mutable="no">
        <type>PFNEGLQUERYDMABUFMODIFIERSEXTPROC</type>
        <definition>PFNEGLQUERYDMABUFMODIFIERSEXTPROC KWin::EglDisplay::queryDmaBufModifiersEXT</definition>
        <argsstring></argsstring>
        <name>queryDmaBufModifiersEXT</name>
        <qualifiedname>KWin::EglDisplay::queryDmaBufModifiersEXT</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="82" column="43" bodyfile="kwin/src/opengl/egldisplay.h" bodystart="82" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a0cb516eadbafe796c74c80c2a47d3bfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::EglDisplay::EglDisplay</definition>
        <argsstring>(::EGLDisplay display, const QList&lt; QByteArray &gt; &amp;extensions, bool owning=true)</argsstring>
        <name>EglDisplay</name>
        <qualifiedname>KWin::EglDisplay::EglDisplay</qualifiedname>
        <param>
          <type>::EGLDisplay</type>
          <declname>display</declname>
        </param>
        <param>
          <type>const QList&lt; QByteArray &gt; &amp;</type>
          <declname>extensions</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>owning</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="36" column="5" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="88" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a8155d3010e256d357a22b52f7d73ad14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::EglDisplay::~EglDisplay</definition>
        <argsstring>()</argsstring>
        <name>~EglDisplay</name>
        <qualifiedname>KWin::EglDisplay::~EglDisplay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="37" column="5" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a3cfe40748ace42291d3b093eb99f670e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; QByteArray &gt;</type>
        <definition>QList&lt; QByteArray &gt; KWin::EglDisplay::extensions</definition>
        <argsstring>() const</argsstring>
        <name>extensions</name>
        <qualifiedname>KWin::EglDisplay::extensions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="39" column="11" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1ac973be65040c0fd4bf08c77d65d2b96d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::EGLDisplay</type>
        <definition>EGLDisplay KWin::EglDisplay::handle</definition>
        <argsstring>() const</argsstring>
        <name>handle</name>
        <qualifiedname>KWin::EglDisplay::handle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="40" column="18" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a08f9eed27e9e5b8b10547e467b5615cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::EglDisplay::hasExtension</definition>
        <argsstring>(const QByteArray &amp;name) const</argsstring>
        <name>hasExtension</name>
        <qualifiedname>KWin::EglDisplay::hasExtension</qualifiedname>
        <param>
          <type>const QByteArray &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="41" column="10" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a1189de407467f922eaa2b4f6b4bbab65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::EglDisplay::renderNode</definition>
        <argsstring>() const</argsstring>
        <name>renderNode</name>
        <qualifiedname>KWin::EglDisplay::renderNode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="43" column="13" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a6d45e17d2c1031cfe6a5d8de5439bb82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; dev_t &gt;</type>
        <definition>std::optional&lt; dev_t &gt; KWin::EglDisplay::renderDevNode</definition>
        <argsstring>() const</argsstring>
        <name>renderDevNode</name>
        <qualifiedname>KWin::EglDisplay::renderDevNode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="44" column="19" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="351" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a6ea572460cebcafa1e634e34844e39cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::EglDisplay::supportsBufferAge</definition>
        <argsstring>() const</argsstring>
        <name>supportsBufferAge</name>
        <qualifiedname>KWin::EglDisplay::supportsBufferAge</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="46" column="10" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a21c5f8a9b5554d323d4792caddfc5ea3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::EglDisplay::supportsNativeFence</definition>
        <argsstring>() const</argsstring>
        <name>supportsNativeFence</name>
        <qualifiedname>KWin::EglDisplay::supportsNativeFence</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="47" column="10" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a53a180b260d16568ae4f11d4d69f010c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt;</type>
        <definition>QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt; KWin::EglDisplay::nonExternalOnlySupportedDrmFormats</definition>
        <argsstring>() const</argsstring>
        <name>nonExternalOnlySupportedDrmFormats</name>
        <qualifiedname>KWin::EglDisplay::nonExternalOnlySupportedDrmFormats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="49" column="11" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="244" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a684090a64e8ecadef9c5b333e2412121" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QHash&lt; uint32_t, <ref refid="struct_k_win_1_1_egl_display_1_1_drm_format_info" kindref="compound">DrmFormatInfo</ref> &gt;</type>
        <definition>QHash&lt; uint32_t, EglDisplay::DrmFormatInfo &gt; KWin::EglDisplay::allSupportedDrmFormats</definition>
        <argsstring>() const</argsstring>
        <name>allSupportedDrmFormats</name>
        <qualifiedname>KWin::EglDisplay::allSupportedDrmFormats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="50" column="11" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a7254a3a49bfaa289afc16ce97536d481" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::EglDisplay::isExternalOnly</definition>
        <argsstring>(uint32_t format, uint64_t modifier) const</argsstring>
        <name>isExternalOnly</name>
        <qualifiedname>KWin::EglDisplay::isExternalOnly</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>format</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="51" column="10" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="254" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a8fbc5c44d4a42b51e6c1c8396e3eae58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="eglimagetexture_8h_1ac56f71530c81ade3ddaab91f45696909" kindref="member">EGLImageKHR</ref></type>
        <definition>EGLImageKHR KWin::EglDisplay::createImage</definition>
        <argsstring>(EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLint *attrib_list) const</argsstring>
        <name>createImage</name>
        <qualifiedname>KWin::EglDisplay::createImage</qualifiedname>
        <param>
          <type>EGLContext</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>EGLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="eglimagetexture_8h_1a4a53a4e69067cc93c962ce152545e614" kindref="member">EGLClientBuffer</ref></type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const EGLint *</type>
          <declname>attrib_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="53" column="17" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="356" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1af5607fd402f9179446882c1f366554ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::EglDisplay::destroyImage</definition>
        <argsstring>(EGLImageKHR image) const</argsstring>
        <name>destroyImage</name>
        <qualifiedname>KWin::EglDisplay::destroyImage</qualifiedname>
        <param>
          <type><ref refid="eglimagetexture_8h_1ac56f71530c81ade3ddaab91f45696909" kindref="member">EGLImageKHR</ref></type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="54" column="10" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="362" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a3d41aff8e18846ccbb69fe563e681ffc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="eglimagetexture_8h_1ac56f71530c81ade3ddaab91f45696909" kindref="member">EGLImageKHR</ref></type>
        <definition>EGLImageKHR KWin::EglDisplay::importDmaBufAsImage</definition>
        <argsstring>(const DmaBufAttributes &amp;dmabuf) const</argsstring>
        <name>importDmaBufAsImage</name>
        <qualifiedname>KWin::EglDisplay::importDmaBufAsImage</qualifiedname>
        <param>
          <type>const <ref refid="struct_k_win_1_1_dma_buf_attributes" kindref="compound">DmaBufAttributes</ref> &amp;</type>
          <declname>dmabuf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="56" column="17" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="166" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a46b99d6a28069bb4e18557a8ea917fc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="eglimagetexture_8h_1ac56f71530c81ade3ddaab91f45696909" kindref="member">EGLImageKHR</ref></type>
        <definition>EGLImageKHR KWin::EglDisplay::importDmaBufAsImage</definition>
        <argsstring>(const DmaBufAttributes &amp;dmabuf, int plane, int format, const QSize &amp;size) const</argsstring>
        <name>importDmaBufAsImage</name>
        <qualifiedname>KWin::EglDisplay::importDmaBufAsImage</qualifiedname>
        <param>
          <type>const <ref refid="struct_k_win_1_1_dma_buf_attributes" kindref="compound">DmaBufAttributes</ref> &amp;</type>
          <declname>dmabuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>int</type>
          <declname>format</declname>
        </param>
        <param>
          <type>const QSize &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="57" column="17" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="218" bodyend="237"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a48f9f20fa49507f68cd791d6de1acc96" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::EglDisplay::shouldUseOpenGLES</definition>
        <argsstring>()</argsstring>
        <name>shouldUseOpenGLES</name>
        <qualifiedname>KWin::EglDisplay::shouldUseOpenGLES</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="59" column="17" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="27" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a4074b80fc73f62e385c3d8f3101e9358" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref> &gt;</type>
        <definition>std::unique_ptr&lt; EglDisplay &gt; KWin::EglDisplay::create</definition>
        <argsstring>(::EGLDisplay display, bool owning=true)</argsstring>
        <name>create</name>
        <qualifiedname>KWin::EglDisplay::create</qualifiedname>
        <param>
          <type>::EGLDisplay</type>
          <declname>display</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>owning</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="60" column="28" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="35" bodyend="75"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1acf6af0937a1b5eabacb8dcf375681aa7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QHash&lt; uint32_t, <ref refid="struct_k_win_1_1_egl_display_1_1_drm_format_info" kindref="compound">DrmFormatInfo</ref> &gt;</type>
        <definition>QHash&lt; uint32_t, EglDisplay::DrmFormatInfo &gt; KWin::EglDisplay::queryImportFormats</definition>
        <argsstring>() const</argsstring>
        <name>queryImportFormats</name>
        <qualifiedname>KWin::EglDisplay::queryImportFormats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="63" column="11" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="263" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_egl_display_1a3cdd48b6b4a26667c62e7bdef24415f7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::EglDisplay::determineRenderNode</definition>
        <argsstring>() const</argsstring>
        <name>determineRenderNode</name>
        <qualifiedname>KWin::EglDisplay::determineRenderNode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/egldisplay.h" line="64" column="13" bodyfile="kwin/src/opengl/egldisplay.cpp" bodystart="326" bodyend="349"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="kwin/src/opengl/egldisplay.h" line="26" column="1" bodyfile="kwin/src/opengl/egldisplay.h" bodystart="27" bodyend="84"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_egl_display_1a684090a64e8ecadef9c5b333e2412121" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>allSupportedDrmFormats</name></member>
      <member refid="class_k_win_1_1_egl_display_1a4074b80fc73f62e385c3d8f3101e9358" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>create</name></member>
      <member refid="class_k_win_1_1_egl_display_1a8fbc5c44d4a42b51e6c1c8396e3eae58" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>createImage</name></member>
      <member refid="class_k_win_1_1_egl_display_1abcbb72fb6959ec64c7f0729dfbb36ad2" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>createImageKHR</name></member>
      <member refid="class_k_win_1_1_egl_display_1af5607fd402f9179446882c1f366554ed" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>destroyImage</name></member>
      <member refid="class_k_win_1_1_egl_display_1a192cee32b271bac36be53e05dbc8ca15" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>destroyImageKHR</name></member>
      <member refid="class_k_win_1_1_egl_display_1a3cdd48b6b4a26667c62e7bdef24415f7" prot="private" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>determineRenderNode</name></member>
      <member refid="class_k_win_1_1_egl_display_1a0cb516eadbafe796c74c80c2a47d3bfd" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>EglDisplay</name></member>
      <member refid="class_k_win_1_1_egl_display_1a3cfe40748ace42291d3b093eb99f670e" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>extensions</name></member>
      <member refid="class_k_win_1_1_egl_display_1ac973be65040c0fd4bf08c77d65d2b96d" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>handle</name></member>
      <member refid="class_k_win_1_1_egl_display_1a08f9eed27e9e5b8b10547e467b5615cc" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>hasExtension</name></member>
      <member refid="class_k_win_1_1_egl_display_1a3d41aff8e18846ccbb69fe563e681ffc" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>importDmaBufAsImage</name></member>
      <member refid="class_k_win_1_1_egl_display_1a46b99d6a28069bb4e18557a8ea917fc1" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>importDmaBufAsImage</name></member>
      <member refid="class_k_win_1_1_egl_display_1a7254a3a49bfaa289afc16ce97536d481" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>isExternalOnly</name></member>
      <member refid="class_k_win_1_1_egl_display_1a459b71455aef9e7792d871f55d3b28eb" prot="private" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>m_extensions</name></member>
      <member refid="class_k_win_1_1_egl_display_1a1957827e5e7dbbfb57ecef72ce660324" prot="private" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>m_functions</name></member>
      <member refid="class_k_win_1_1_egl_display_1af315307bfaca48c6c8d59bbff26d8ab2" prot="private" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>m_handle</name></member>
      <member refid="class_k_win_1_1_egl_display_1a8129030213a71ff3d7731578573f4d45" prot="private" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>m_importFormats</name></member>
      <member refid="class_k_win_1_1_egl_display_1a80c635501d8e4cb86fa469573a41efbf" prot="private" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>m_owning</name></member>
      <member refid="class_k_win_1_1_egl_display_1a432d305f297dd70af0410c62955135f2" prot="private" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>m_renderDevNode</name></member>
      <member refid="class_k_win_1_1_egl_display_1ab3e09e620e3df654b0e549228fa2bd37" prot="private" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>m_renderNode</name></member>
      <member refid="class_k_win_1_1_egl_display_1a389d821724c0171042a744a0aab06a14" prot="private" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>m_supportsBufferAge</name></member>
      <member refid="class_k_win_1_1_egl_display_1a1456afbd8733d38f9b82156056e0c875" prot="private" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>m_supportsNativeFence</name></member>
      <member refid="class_k_win_1_1_egl_display_1a53a180b260d16568ae4f11d4d69f010c" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>nonExternalOnlySupportedDrmFormats</name></member>
      <member refid="class_k_win_1_1_egl_display_1ae4b4eca44a0edc0347396c804d9b2db4" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>queryDmaBufFormatsEXT</name></member>
      <member refid="class_k_win_1_1_egl_display_1a89609c8fa8d2480a5ac0bfb72d5ceb9c" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>queryDmaBufModifiersEXT</name></member>
      <member refid="class_k_win_1_1_egl_display_1acf6af0937a1b5eabacb8dcf375681aa7" prot="private" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>queryImportFormats</name></member>
      <member refid="class_k_win_1_1_egl_display_1a6d45e17d2c1031cfe6a5d8de5439bb82" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>renderDevNode</name></member>
      <member refid="class_k_win_1_1_egl_display_1a1189de407467f922eaa2b4f6b4bbab65" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>renderNode</name></member>
      <member refid="class_k_win_1_1_egl_display_1a48f9f20fa49507f68cd791d6de1acc96" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>shouldUseOpenGLES</name></member>
      <member refid="class_k_win_1_1_egl_display_1a6ea572460cebcafa1e634e34844e39cc" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>supportsBufferAge</name></member>
      <member refid="class_k_win_1_1_egl_display_1a21c5f8a9b5554d323d4792caddfc5ea3" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>supportsNativeFence</name></member>
      <member refid="class_k_win_1_1_egl_display_1a8155d3010e256d357a22b52f7d73ad14" prot="public" virt="non-virtual"><scope>KWin::EglDisplay</scope><name>~EglDisplay</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
