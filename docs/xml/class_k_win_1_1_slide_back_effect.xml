<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_slide_back_effect" kind="class" language="C++" prot="public">
    <compoundname>KWin::SlideBackEffect</compoundname>
    <basecompoundref refid="class_k_win_1_1_effect" prot="public" virt="non-virtual">KWin::Effect</basecompoundref>
    <includes refid="slideback_8h" local="no">slideback.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_slide_back_effect_1a37a7188841c390b6e571162821aca50b" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_window_motion_manager" kindref="compound">WindowMotionManager</ref></type>
        <definition>WindowMotionManager KWin::SlideBackEffect::motionManager</definition>
        <argsstring></argsstring>
        <name>motionManager</name>
        <qualifiedname>KWin::SlideBackEffect::motionManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="48" column="25" bodyfile="kwin/src/plugins/slideback/slideback.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_back_effect_1ab28e9603eac037d0a17233112169e699" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> * &gt;</type>
        <definition>QList&lt;EffectWindow *&gt; KWin::SlideBackEffect::usableOldStackingOrder</definition>
        <argsstring></argsstring>
        <name>usableOldStackingOrder</name>
        <qualifiedname>KWin::SlideBackEffect::usableOldStackingOrder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="49" column="11" bodyfile="kwin/src/plugins/slideback/slideback.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_back_effect_1a28ebb4767a8b13de1477dc48e8270b11" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> * &gt;</type>
        <definition>QList&lt;EffectWindow *&gt; KWin::SlideBackEffect::oldStackingOrder</definition>
        <argsstring></argsstring>
        <name>oldStackingOrder</name>
        <qualifiedname>KWin::SlideBackEffect::oldStackingOrder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="50" column="11" bodyfile="kwin/src/plugins/slideback/slideback.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_back_effect_1ae33df123715b54d5d6de22ba4c140264" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> * &gt;</type>
        <definition>QList&lt;EffectWindow *&gt; KWin::SlideBackEffect::coveringWindows</definition>
        <argsstring></argsstring>
        <name>coveringWindows</name>
        <qualifiedname>KWin::SlideBackEffect::coveringWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="51" column="11" bodyfile="kwin/src/plugins/slideback/slideback.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_back_effect_1a8b67211a1e8f5268b428377f1ec030c2" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> * &gt;</type>
        <definition>QList&lt;EffectWindow *&gt; KWin::SlideBackEffect::elevatedList</definition>
        <argsstring></argsstring>
        <name>elevatedList</name>
        <qualifiedname>KWin::SlideBackEffect::elevatedList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="52" column="11" bodyfile="kwin/src/plugins/slideback/slideback.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_back_effect_1a87adee4867848388628c139f293cfd3a" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
        <definition>EffectWindow* KWin::SlideBackEffect::m_justMapped</definition>
        <argsstring></argsstring>
        <name>m_justMapped</name>
        <qualifiedname>KWin::SlideBackEffect::m_justMapped</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="53" column="18" bodyfile="kwin/src/plugins/slideback/slideback.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_back_effect_1a8cafee3d73207386676bc0db09f24d12" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
        <definition>EffectWindow * KWin::SlideBackEffect::m_upmostWindow</definition>
        <argsstring></argsstring>
        <name>m_upmostWindow</name>
        <qualifiedname>KWin::SlideBackEffect::m_upmostWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="53" column="31" bodyfile="kwin/src/plugins/slideback/slideback.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_back_effect_1a8b20f688e9177721b91df08afda059ef" prot="private" static="no" mutable="no">
        <type>QHash&lt; <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *, QRect &gt;</type>
        <definition>QHash&lt;EffectWindow *, QRect&gt; KWin::SlideBackEffect::destinationList</definition>
        <argsstring></argsstring>
        <name>destinationList</name>
        <qualifiedname>KWin::SlideBackEffect::destinationList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="54" column="11" bodyfile="kwin/src/plugins/slideback/slideback.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_back_effect_1a9e9c4d25ad053d501e54ba7c30078990" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::SlideBackEffect::m_tabboxActive</definition>
        <argsstring></argsstring>
        <name>m_tabboxActive</name>
        <qualifiedname>KWin::SlideBackEffect::m_tabboxActive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="55" column="9" bodyfile="kwin/src/plugins/slideback/slideback.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_back_effect_1a9d591bfa03a682e2bd6679373fe4344f" prot="private" static="no" mutable="no">
        <type>QList&lt; QRegion &gt;</type>
        <definition>QList&lt;QRegion&gt; KWin::SlideBackEffect::clippedRegions</definition>
        <argsstring></argsstring>
        <name>clippedRegions</name>
        <qualifiedname>KWin::SlideBackEffect::clippedRegions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="56" column="11" bodyfile="kwin/src/plugins/slideback/slideback.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_back_effect_1ab386684ca7b0e98e765cafb02393c63a" prot="private" static="no" mutable="no">
        <type>std::chrono::milliseconds</type>
        <definition>std::chrono::milliseconds KWin::SlideBackEffect::m_lastPresentTime</definition>
        <argsstring></argsstring>
        <name>m_lastPresentTime</name>
        <qualifiedname>KWin::SlideBackEffect::m_lastPresentTime</qualifiedname>
        <initializer>= std::chrono::milliseconds::zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="57" column="31" bodyfile="kwin/src/plugins/slideback/slideback.h" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_slide_back_effect_1aae0ded08cdd0f9ce28c66e5967f528ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::SlideBackEffect::SlideBackEffect</definition>
        <argsstring>()</argsstring>
        <name>SlideBackEffect</name>
        <qualifiedname>KWin::SlideBackEffect::SlideBackEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="24" column="5" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="16" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_back_effect_1a174d651038e7f48d42bbe14b473d7623" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlideBackEffect::prePaintWindow</definition>
        <argsstring>(EffectWindow *w, WindowPrePaintData &amp;data, std::chrono::milliseconds presentTime) override</argsstring>
        <name>prePaintWindow</name>
        <qualifiedname>KWin::SlideBackEffect::prePaintWindow</qualifiedname>
        <reimplements refid="group__kwineffects_1ga2832c7831c0f49f9f5cf0267ffc53672">prePaintWindow</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_pre_paint_data" kindref="compound">WindowPrePaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::chrono::milliseconds</type>
          <declname>presentTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called for every window before the actual paint pass In this method you can: <itemizedlist>
<listitem><para>enable or disable painting of the window (e.g. enable paiting of minimized window) </para>
</listitem>
<listitem><para>set window to be painted with translucency </para>
</listitem>
<listitem><para>set window to be transformed </para>
</listitem>
<listitem><para>request the window to be divided into multiple parts</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked.</para>
<para><emphasis>presentTime</emphasis> specifies the expected monotonic time when the rendered frame will be displayed on the screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="26" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="167" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_back_effect_1adf6f00edd48bb5a009598645f71228d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlideBackEffect::paintWindow</definition>
        <argsstring>(const RenderTarget &amp;renderTarget, const RenderViewport &amp;viewport, EffectWindow *w, int mask, QRegion region, WindowPaintData &amp;data) override</argsstring>
        <name>paintWindow</name>
        <qualifiedname>KWin::SlideBackEffect::paintWindow</qualifiedname>
        <reimplements refid="group__kwineffects_1ga0f0292db2bf016a0843ef7cc06219378">paintWindow</reimplements>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>QRegion</type>
          <declname>region</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is the main method for painting windows. In this method you can: <itemizedlist>
<listitem><para>do various transformations </para>
</listitem>
<listitem><para>change opacity of the window </para>
</listitem>
<listitem><para>change brightness and/or saturation, if it&apos;s supported</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="27" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="176" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_back_effect_1a49b1c7f0c0798b9dfcc4fb98845d90d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlideBackEffect::postPaintWindow</definition>
        <argsstring>(EffectWindow *w) override</argsstring>
        <name>postPaintWindow</name>
        <qualifiedname>KWin::SlideBackEffect::postPaintWindow</qualifiedname>
        <reimplements refid="group__kwineffects_1ga9b7cf82c6f74331cffabb06c63ef914c">postPaintWindow</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called for every window after all painting has been finished. In this method you can: <itemizedlist>
<listitem><para>schedule next repaint for individual window(s) in case of animations You shouldn&apos;t paint anything here.</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="28" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="188" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_back_effect_1ac17d5382158040a6c545e55e6437d642" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlideBackEffect::prePaintScreen</definition>
        <argsstring>(ScreenPrePaintData &amp;data, std::chrono::milliseconds presentTime) override</argsstring>
        <name>prePaintScreen</name>
        <qualifiedname>KWin::SlideBackEffect::prePaintScreen</qualifiedname>
        <reimplements refid="group__kwineffects_1ga2edc1b757e36bb6bcbbacde454dfc05c">prePaintScreen</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_screen_pre_paint_data" kindref="compound">ScreenPrePaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::chrono::milliseconds</type>
          <declname>presentTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called before starting to paint the screen. In this method you can: <itemizedlist>
<listitem><para>set whether the windows or the entire screen will be transformed </para>
</listitem>
<listitem><para>change the region of the screen that will be painted </para>
</listitem>
<listitem><para>do various housekeeping tasks such as initing your effect&apos;s variables for the upcoming paint pass or updating animation&apos;s progress</para>
</listitem>
</itemizedlist>
<emphasis>presentTime</emphasis> specifies the expected monotonic time when the rendered frame will be displayed on the screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="30" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="133" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_back_effect_1a0f379eed3e9b6c7c0c04724896f111f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlideBackEffect::postPaintScreen</definition>
        <argsstring>() override</argsstring>
        <name>postPaintScreen</name>
        <qualifiedname>KWin::SlideBackEffect::postPaintScreen</qualifiedname>
        <reimplements refid="group__kwineffects_1ga10021cf9704c00d60beae284d53846e2">postPaintScreen</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called after all the painting has been finished. In this method you can: <itemizedlist>
<listitem><para>schedule next repaint in case of animations You shouldn&apos;t paint anything here.</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="31" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="154" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_back_effect_1a19665dc3a67f1ac9f0855cc6ba165ebd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::SlideBackEffect::isActive</definition>
        <argsstring>() const override</argsstring>
        <name>isActive</name>
        <qualifiedname>KWin::SlideBackEffect::isActive</qualifiedname>
        <reimplements refid="group__kwineffects_1ga596b6c0ed146b97b293f5db5f27fc40f">isActive</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overwrite this method to indicate whether your effect will be doing something in the next frame to be rendered. If the method returns <computeroutput>false</computeroutput> the effect will be excluded from the chained methods in the next rendered frame.</para>
<para>This method is called always directly before the paint loop begins. So it is totally fine to e.g. react on a window event, issue a repaint to trigger an animation and change a flag to indicate that this method returns <computeroutput>true</computeroutput>.</para>
<para>As the method is called each frame, you should not perform complex calculations. Best use just a boolean flag.</para>
<para>The default implementation of this method returns <computeroutput>true</computeroutput>. <simplesect kind="since"><para>4.8 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="32" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="345" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_back_effect_1a1ee691059dd16fc9b3c56fc00c4d0e94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int KWin::SlideBackEffect::requestedEffectChainPosition</definition>
        <argsstring>() const override</argsstring>
        <name>requestedEffectChainPosition</name>
        <qualifiedname>KWin::SlideBackEffect::requestedEffectChainPosition</qualifiedname>
        <reimplements refid="group__kwineffects_1ga120531588e58691a5a18028158d2947a">requestedEffectChainPosition</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reimplement this method to indicate where in the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> chain the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> should be placed.</para>
<para>A low number indicates early chain position, thus before other Effects got called, a high number indicates a late position. The returned number should be in the interval [0, 100]. The default value is 0.</para>
<para>In KWin4 this information was provided in the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref>&apos;s desktop file as property X-KDE-Ordering. In the case of Scripted Effects this property is still used.</para>
<para><simplesect kind="since"><para>5.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="34" column="9" bodyfile="kwin/src/plugins/slideback/slideback.h" bodystart="34" bodyend="37"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_k_win_1_1_slide_back_effect_1a6b5ecbdcdb249a1fc66aaed7d09a1544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideBackEffect::slotWindowAdded</definition>
        <argsstring>(KWin::EffectWindow *w)</argsstring>
        <name>slotWindowAdded</name>
        <qualifiedname>KWin::SlideBackEffect::slotWindowAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="40" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="277" bodyend="286"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_slide_back_effect_1aea0f54280e6eb213fc45c87d0cdf93c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideBackEffect::slotWindowDeleted</definition>
        <argsstring>(KWin::EffectWindow *w)</argsstring>
        <name>slotWindowDeleted</name>
        <qualifiedname>KWin::SlideBackEffect::slotWindowDeleted</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="41" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="260" bodyend="275"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_slide_back_effect_1a4b898e234afe5d8a6fa82b921a18959a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideBackEffect::slotWindowUnminimized</definition>
        <argsstring>(KWin::EffectWindow *w)</argsstring>
        <name>slotWindowUnminimized</name>
        <qualifiedname>KWin::SlideBackEffect::slotWindowUnminimized</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="42" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="288" bodyend="296"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_slide_back_effect_1a4b8141ca06355d61e82b5b04eca20b1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideBackEffect::slotStackingOrderChanged</definition>
        <argsstring>()</argsstring>
        <name>slotStackingOrderChanged</name>
        <qualifiedname>KWin::SlideBackEffect::slotStackingOrderChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="43" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="32" bodyend="58"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_slide_back_effect_1ae4fdd6bc9e079de923101ccf431606ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideBackEffect::slotTabBoxAdded</definition>
        <argsstring>()</argsstring>
        <name>slotTabBoxAdded</name>
        <qualifiedname>KWin::SlideBackEffect::slotTabBoxAdded</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="44" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="298" bodyend="301"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_slide_back_effect_1a6bc3e762d10fd5f0e8c759fe3e05b816" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideBackEffect::slotTabBoxClosed</definition>
        <argsstring>()</argsstring>
        <name>slotTabBoxClosed</name>
        <qualifiedname>KWin::SlideBackEffect::slotTabBoxClosed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="45" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="303" bodyend="306"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_slide_back_effect_1a4004835b2b3409fcf26e9e96685b9fe7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QRect</type>
        <definition>QRect KWin::SlideBackEffect::getSlideDestination</definition>
        <argsstring>(const QRect &amp;windowUnderGeometry, const QRect &amp;windowOverGeometry)</argsstring>
        <name>getSlideDestination</name>
        <qualifiedname>KWin::SlideBackEffect::getSlideDestination</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>windowUnderGeometry</declname>
        </param>
        <param>
          <type>const QRect &amp;</type>
          <declname>windowOverGeometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="59" column="11" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="107" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_back_effect_1ace40197fd16c058e6cd2e67779f67537" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SlideBackEffect::isWindowUsable</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>isWindowUsable</name>
        <qualifiedname>KWin::SlideBackEffect::isWindowUsable</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="60" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="308" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_back_effect_1a161c44824415ec60e9fdebf970c2a3cb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SlideBackEffect::intersects</definition>
        <argsstring>(EffectWindow *windowUnder, const QRect &amp;windowOverGeometry)</argsstring>
        <name>intersects</name>
        <qualifiedname>KWin::SlideBackEffect::intersects</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>windowUnder</declname>
        </param>
        <param>
          <type>const QRect &amp;</type>
          <declname>windowOverGeometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="61" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="313" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_back_effect_1a27baca16debf7c80e163d78066d390bf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> * &gt;</type>
        <definition>QList&lt; EffectWindow * &gt; KWin::SlideBackEffect::usableWindows</definition>
        <argsstring>(const QList&lt; EffectWindow * &gt; &amp;allWindows)</argsstring>
        <name>usableWindows</name>
        <qualifiedname>KWin::SlideBackEffect::usableWindows</qualifiedname>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> * &gt; &amp;</type>
          <declname>allWindows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="62" column="11" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="319" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_back_effect_1ab6c505b50caf80f50146383de5e2a0da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QRect</type>
        <definition>QRect KWin::SlideBackEffect::getModalGroupGeometry</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>getModalGroupGeometry</name>
        <qualifiedname>KWin::SlideBackEffect::getModalGroupGeometry</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="63" column="11" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="333" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_back_effect_1a2c504ba976b4aa36c512c50eb1c4b649" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideBackEffect::windowRaised</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>windowRaised</name>
        <qualifiedname>KWin::SlideBackEffect::windowRaised</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slideback/slideback.h" line="64" column="10" bodyfile="kwin/src/plugins/slideback/slideback.cpp" bodystart="60" bodyend="105"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::SlideBackEffect</label>
        <link refid="class_k_win_1_1_slide_back_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::SlideBackEffect</label>
        <link refid="class_k_win_1_1_slide_back_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/plugins/slideback/slideback.h" line="19" column="1" bodyfile="kwin/src/plugins/slideback/slideback.h" bodystart="21" bodyend="65"/>
    <listofallmembers>
      <member refid="group__kwineffects_1gab9bcf52072fe74567496b0a894d1d873" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga3a167fe6d9c46376ed46db13caf2d135" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga0ba05f1463195d0f92ea1dd3396a5d16" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga7cf8035c970fcde177e3038d79015289" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>blocksDirectScanout</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea67d120ab5ce1dc424476e63c132af6c1" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>Blur</name></member>
      <member refid="group__kwineffects_1gab8a94f591b743b59b7285911e641e7d5" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>borderActivated</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a9d591bfa03a682e2bd6679373fe4344f" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>clippedRegions</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aead805f717a48c23959a1e9ecd7722d15d" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>Contrast</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1ae33df123715b54d5d6de22ba4c140264" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>coveringWindows</name></member>
      <member refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>cursorPos</name></member>
      <member refid="group__kwineffects_1ga0c159e00c3a51ca733bea49cf8d52691" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>debug</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a8b20f688e9177721b91df08afda059ef" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>destinationList</name></member>
      <member refid="group__kwineffects_1ga254b1a3e8bb8b9b671e9b000ca027b7c" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>drawWindow</name></member>
      <member refid="group__kwineffects_1ga7bd8262f4cb2c5c3090c748eb388ad7e" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>Effect</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a8b67211a1e8f5268b428377f1ec030c2" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>elevatedList</name></member>
      <member refid="group__kwineffects_1ga6337b2a9b5aadfbb6b696119144b56ae" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>Feature</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1ab6c505b50caf80f50146383de5e2a0da" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>getModalGroupGeometry</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a4004835b2b3409fcf26e9e96685b9fe7" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>getSlideDestination</name></member>
      <member refid="group__kwineffects_1gab5e0581ae4b2dffe8014ff5cf6c21158" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>grabbedKeyboardEvent</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aeaecbb77ad241419970ece3d45296c4838" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>HighlightWindows</name></member>
      <member refid="group__kwineffects_1ga7b0ecb57667179e95c188f0ee7416d00" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>interpolate</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a161c44824415ec60e9fdebf970c2a3cb" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>intersects</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a19665dc3a67f1ac9f0855cc6ba165ebd" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>isActive</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1ace40197fd16c058e6cd2e67779f67537" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>isWindowUsable</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a87adee4867848388628c139f293cfd3a" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>m_justMapped</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1ab386684ca7b0e98e765cafb02393c63a" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>m_lastPresentTime</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a9e9c4d25ad053d501e54ba7c30078990" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>m_tabboxActive</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a8cafee3d73207386676bc0db09f24d12" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>m_upmostWindow</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a37a7188841c390b6e571162821aca50b" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>motionManager</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea170229312ed2ec0e446ee89ba7f6b6ca" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>Nothing</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a28ebb4767a8b13de1477dc48e8270b11" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>oldStackingOrder</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dab0de2932c45bde6df3de10d00dbd6fcd" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>PAINT_SCREEN_BACKGROUND_FIRST</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da43acbfc913cae9eb3c363aeb0524f18f" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>PAINT_SCREEN_REGION</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da3e731594d83c3e92742bff7c420fb7f8" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>PAINT_SCREEN_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da124dd798e5f793087e81da77e11a9b1e" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>PAINT_SCREEN_WITH_TRANSFORMED_WINDOWS</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac606d3dcf2dd150234f71c4c39083c7d" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>PAINT_WINDOW_OPAQUE</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da684bb6c6c278b900b6d0c889e79233b8" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>PAINT_WINDOW_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac7237bf4bb4d6ea6d6fb1215db19b45e" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>PAINT_WINDOW_TRANSLUCENT</name></member>
      <member refid="group__kwineffects_1ga44ee94161446ce6fb2502376af6515a8" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>paintScreen</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1adf6f00edd48bb5a009598645f71228d8" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>paintWindow</name></member>
      <member refid="group__kwineffects_1ga5fb1bc87ff54dcc2cfe87b070816ab00" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>perform</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a0f379eed3e9b6c7c0c04724896f111f3" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>postPaintScreen</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a49b1c7f0c0798b9dfcc4fb98845d90d9" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>postPaintWindow</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1ac17d5382158040a6c545e55e6437d642" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>prePaintScreen</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a174d651038e7f48d42bbe14b473d7623" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>prePaintWindow</name></member>
      <member refid="group__kwineffects_1ga30fc2cbbdd90f95568a9e350f34bf2b7" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>provides</name></member>
      <member refid="group__kwineffects_1ga737c6d80eb8f8b24fdc6398209c38e3d" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>reconfigure</name></member>
      <member refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>ReconfigureAll</name></member>
      <member refid="group__kwineffects_1ga4aebd7d0f695e37678debaa118fa92dc" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>ReconfigureFlag</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a1ee691059dd16fc9b3c56fc00c4d0e94" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>requestedEffectChainPosition</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea592ea0de7a4d658a1ef9bbb48b18e15a" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>ScreenInversion</name></member>
      <member refid="group__kwineffects_1ga1efc42cd9be15e8200c6e55f6bf47cb8" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>setPositionTransformations</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1aae0ded08cdd0f9ce28c66e5967f528ce" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>SlideBackEffect</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a4b8141ca06355d61e82b5b04eca20b1d" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>slotStackingOrderChanged</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1ae4fdd6bc9e079de923101ccf431606ca" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>slotTabBoxAdded</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a6bc3e762d10fd5f0e8c759fe3e05b816" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>slotTabBoxClosed</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a6b5ecbdcdb249a1fc66aaed7d09a1544" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>slotWindowAdded</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1aea0f54280e6eb213fc45c87d0cdf93c1" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>slotWindowDeleted</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a4b898e234afe5d8a6fa82b921a18959a" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>slotWindowUnminimized</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea19036d413806c53978a3234e7eb197c4" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>SystemBell</name></member>
      <member refid="group__kwineffects_1ga2d22a8f0b8a4d81615dff67dc1ef970f" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>tabletPadButtonEvent</name></member>
      <member refid="group__kwineffects_1gaa084e5a45597f5775213715eb5506f63" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>tabletPadRingEvent</name></member>
      <member refid="group__kwineffects_1ga4998fb0983bd97163935cad2c4dedd76" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>tabletPadStripEvent</name></member>
      <member refid="group__kwineffects_1ga1d4ae01f5935ea887a12018d59191cbf" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>tabletToolAxis</name></member>
      <member refid="group__kwineffects_1ga7a984d7d83dfa97962b8404301c6aba9" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>tabletToolButtonEvent</name></member>
      <member refid="group__kwineffects_1ga4ed77506be381680bf664dbc8c20e036" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>tabletToolProximity</name></member>
      <member refid="group__kwineffects_1gaf16e9ca42cceb738fb859d1a1a462548" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>tabletToolTip</name></member>
      <member refid="group__kwineffects_1gaa31554949bc00085e6380b50be16138e" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>touchCancel</name></member>
      <member refid="group__kwineffects_1ga315fd305e7570f41e7bce7db6812381f" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>touchDown</name></member>
      <member refid="group__kwineffects_1ga54d00a9e05b5d4597db40c2f5b1d36de" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>touchMotion</name></member>
      <member refid="group__kwineffects_1gaf3871967d6199eb7c87621bc75b925bb" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>touchUp</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1ab28e9603eac037d0a17233112169e699" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>usableOldStackingOrder</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a27baca16debf7c80e163d78066d390bf" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>usableWindows</name></member>
      <member refid="group__kwineffects_1ga7b142933c38cb9b4a433b768b266e7cb" prot="public" virt="virtual"><scope>KWin::SlideBackEffect</scope><name>windowInputMouseEvent</name></member>
      <member refid="class_k_win_1_1_slide_back_effect_1a2c504ba976b4aa36c512c50eb1c4b649" prot="private" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>windowRaised</name></member>
      <member refid="group__kwineffects_1ga50174eb0169aebceb78ebd5aff71c481" prot="public" virt="non-virtual"><scope>KWin::SlideBackEffect</scope><name>~Effect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
