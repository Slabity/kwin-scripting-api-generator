<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_test_placement" kind="class" language="C++" prot="public">
    <compoundname>TestPlacement</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <innerclass refid="struct_test_placement_1_1_place_window_result" prot="private">TestPlacement::PlaceWindowResult</innerclass>
    <innerclass refid="struct_test_placement_1_1_window_handle" prot="private">TestPlacement::WindowHandle</innerclass>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_test_placement_1aacd095968d07e429239f6ba54639c1b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>TestPlacement::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="33" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="74" bodyend="80"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1a9cc8cfa0aaac0bc379558db835ebcd41" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>TestPlacement::cleanup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="34" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1af348591d406a58ef0b7ef06aa3b5b2a8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::initTestCase</definition>
        <argsstring>()</argsstring>
        <name>initTestCase</name>
        <qualifiedname>TestPlacement::initTestCase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="35" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="87" bodyend="103"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1a7c4553004e317e78ffa2afb8f539eb66" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::testPlaceSmart</definition>
        <argsstring>()</argsstring>
        <name>testPlaceSmart</name>
        <qualifiedname>TestPlacement::testPlaceSmart</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="37" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="146" bodyend="176"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1a90c36f3e143de41bc14e79ea9108ec9d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::testPlaceMaximized</definition>
        <argsstring>()</argsstring>
        <name>testPlaceMaximized</name>
        <qualifiedname>TestPlacement::testPlaceMaximized</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="38" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="178" bodyend="203"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1ae748deee58fcbeeec36e89bf75f25707" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::testPlaceMaximizedLeavesFullscreen</definition>
        <argsstring>()</argsstring>
        <name>testPlaceMaximizedLeavesFullscreen</name>
        <qualifiedname>TestPlacement::testPlaceMaximizedLeavesFullscreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="39" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="205" bodyend="248"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1a5d49ecaaeeff877ab5e1bdf8b3c4310b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::testPlaceCentered</definition>
        <argsstring>()</argsstring>
        <name>testPlaceCentered</name>
        <qualifiedname>TestPlacement::testPlaceCentered</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="40" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="250" bodyend="267"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1a4316b9f6986bb8a9bc366ff3b99bc436" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::testPlaceUnderMouse</definition>
        <argsstring>()</argsstring>
        <name>testPlaceUnderMouse</name>
        <qualifiedname>TestPlacement::testPlaceUnderMouse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="41" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="269" bodyend="289"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1ac3c5c655f889583afed0f36b58aea042" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::testPlaceZeroCornered</definition>
        <argsstring>()</argsstring>
        <name>testPlaceZeroCornered</name>
        <qualifiedname>TestPlacement::testPlaceZeroCornered</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="42" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="291" bodyend="327"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1a1c69e957c246a99d228cebab53626424" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::testPlaceRandom</definition>
        <argsstring>()</argsstring>
        <name>testPlaceRandom</name>
        <qualifiedname>TestPlacement::testPlaceRandom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="43" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="329" bodyend="365"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1a146d087ba945e4231eaa09d60af8ce86" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::testFullscreen</definition>
        <argsstring>()</argsstring>
        <name>testFullscreen</name>
        <qualifiedname>TestPlacement::testFullscreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="44" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="367" bodyend="397"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1a9f1269f06a5b7d67e369b2151c6cf531" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::testCascadeIfCovering</definition>
        <argsstring>()</argsstring>
        <name>testCascadeIfCovering</name>
        <qualifiedname>TestPlacement::testCascadeIfCovering</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="45" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="399" bodyend="439"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1a37ae2563450818d94db06c75edc67999" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::testCascadeIfCoveringIgnoreNonCovering</definition>
        <argsstring>()</argsstring>
        <name>testCascadeIfCoveringIgnoreNonCovering</name>
        <qualifiedname>TestPlacement::testCascadeIfCoveringIgnoreNonCovering</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="46" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="441" bodyend="468"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1aab92d2536c6465b65d3fdb4e4ad75914" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::testCascadeIfCoveringIgnoreOutOfArea</definition>
        <argsstring>()</argsstring>
        <name>testCascadeIfCoveringIgnoreOutOfArea</name>
        <qualifiedname>TestPlacement::testCascadeIfCoveringIgnoreOutOfArea</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="47" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="470" bodyend="497"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1a84f583822dc9be021585bf895d250e73" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::testCascadeIfCoveringIgnoreAlreadyCovered</definition>
        <argsstring>()</argsstring>
        <name>testCascadeIfCoveringIgnoreAlreadyCovered</name>
        <qualifiedname>TestPlacement::testCascadeIfCoveringIgnoreAlreadyCovered</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="48" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="499" bodyend="534"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1a9078f06d574b6797d0efce12f1cc125f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::testTitlebarOnScreen_data</definition>
        <argsstring>()</argsstring>
        <name>testTitlebarOnScreen_data</name>
        <qualifiedname>TestPlacement::testTitlebarOnScreen_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="49" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="536" bodyend="545"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_placement_1a91eb8856e153a9cf227bd3753ab1a7d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::testTitlebarOnScreen</definition>
        <argsstring>()</argsstring>
        <name>testTitlebarOnScreen</name>
        <qualifiedname>TestPlacement::testTitlebarOnScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="50" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="547" bodyend="566"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_test_placement_1aa5d2fb52c2dc4445e65bd455ad938653" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestPlacement::setPlacementPolicy</definition>
        <argsstring>(PlacementPolicy policy)</argsstring>
        <name>setPlacementPolicy</name>
        <qualifiedname>TestPlacement::setPlacementPolicy</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a69974eb9a12efe6c7ee471da23d023fc" kindref="member">PlacementPolicy</ref></type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="53" column="10" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="105" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_test_placement_1a28b92aeeb0aae04a547c1b069b1a688a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; PlaceWindowResult, WindowHandle &gt;</type>
        <definition>std::tuple&lt; TestPlacement::PlaceWindowResult, TestPlacement::WindowHandle &gt; TestPlacement::createAndPlaceWindow</definition>
        <argsstring>(const QSize &amp;defaultSize)</argsstring>
        <name>createAndPlaceWindow</name>
        <qualifiedname>TestPlacement::createAndPlaceWindow</qualifiedname>
        <param>
          <type>const QSize &amp;</type>
          <declname>defaultSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/placement_test.cpp" line="71" column="16" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="113" bodyend="144"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestPlacement</label>
        <link refid="class_test_placement"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestPlacement</label>
        <link refid="class_test_placement"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/integration/placement_test.cpp" line="28" column="1" bodyfile="kwin/autotests/integration/placement_test.cpp" bodystart="29" bodyend="72"/>
    <listofallmembers>
      <member refid="class_test_placement_1a9cc8cfa0aaac0bc379558db835ebcd41" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>cleanup</name></member>
      <member refid="class_test_placement_1a28b92aeeb0aae04a547c1b069b1a688a" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>createAndPlaceWindow</name></member>
      <member refid="class_test_placement_1aacd095968d07e429239f6ba54639c1b4" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>init</name></member>
      <member refid="class_test_placement_1af348591d406a58ef0b7ef06aa3b5b2a8" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>initTestCase</name></member>
      <member refid="class_test_placement_1aa5d2fb52c2dc4445e65bd455ad938653" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>setPlacementPolicy</name></member>
      <member refid="class_test_placement_1a9f1269f06a5b7d67e369b2151c6cf531" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>testCascadeIfCovering</name></member>
      <member refid="class_test_placement_1a84f583822dc9be021585bf895d250e73" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>testCascadeIfCoveringIgnoreAlreadyCovered</name></member>
      <member refid="class_test_placement_1a37ae2563450818d94db06c75edc67999" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>testCascadeIfCoveringIgnoreNonCovering</name></member>
      <member refid="class_test_placement_1aab92d2536c6465b65d3fdb4e4ad75914" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>testCascadeIfCoveringIgnoreOutOfArea</name></member>
      <member refid="class_test_placement_1a146d087ba945e4231eaa09d60af8ce86" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>testFullscreen</name></member>
      <member refid="class_test_placement_1a5d49ecaaeeff877ab5e1bdf8b3c4310b" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>testPlaceCentered</name></member>
      <member refid="class_test_placement_1a90c36f3e143de41bc14e79ea9108ec9d" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>testPlaceMaximized</name></member>
      <member refid="class_test_placement_1ae748deee58fcbeeec36e89bf75f25707" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>testPlaceMaximizedLeavesFullscreen</name></member>
      <member refid="class_test_placement_1a1c69e957c246a99d228cebab53626424" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>testPlaceRandom</name></member>
      <member refid="class_test_placement_1a7c4553004e317e78ffa2afb8f539eb66" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>testPlaceSmart</name></member>
      <member refid="class_test_placement_1a4316b9f6986bb8a9bc366ff3b99bc436" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>testPlaceUnderMouse</name></member>
      <member refid="class_test_placement_1ac3c5c655f889583afed0f36b58aea042" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>testPlaceZeroCornered</name></member>
      <member refid="class_test_placement_1a91eb8856e153a9cf227bd3753ab1a7d7" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>testTitlebarOnScreen</name></member>
      <member refid="class_test_placement_1a9078f06d574b6797d0efce12f1cc125f" prot="private" virt="non-virtual"><scope>TestPlacement</scope><name>testTitlebarOnScreen_data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
