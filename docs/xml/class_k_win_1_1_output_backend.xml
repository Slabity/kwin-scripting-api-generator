<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_output_backend" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>KWin::OutputBackend</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <derivedcompoundref refid="class_k_win_1_1_drm_backend" prot="public" virt="non-virtual">KWin::DrmBackend</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_virtual_backend" prot="public" virt="non-virtual">KWin::VirtualBackend</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_wayland_1_1_wayland_backend" prot="public" virt="non-virtual">KWin::Wayland::WaylandBackend</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_x11_windowed_backend" prot="public" virt="non-virtual">KWin::X11WindowedBackend</derivedcompoundref>
    <includes refid="outputbackend_8h" local="no">outputbackend.h</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_output_backend_1a75fb78ae0c8c311aa92d4ef1d27685ea" prot="protected" static="no" mutable="no">
        <type>::EGLContext</type>
        <definition>::EGLContext KWin::OutputBackend::m_globalShareContext</definition>
        <argsstring></argsstring>
        <name>m_globalShareContext</name>
        <qualifiedname>KWin::OutputBackend::m_globalShareContext</qualifiedname>
        <initializer>= EGL_NO_CONTEXT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="114" column="18" bodyfile="kwin/src/core/outputbackend.h" bodystart="114" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1a5959251a4cfffdafeb509b40c9a29a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::OutputBackend::~OutputBackend</definition>
        <argsstring>() override</argsstring>
        <name>~OutputBackend</name>
        <qualifiedname>KWin::OutputBackend::~OutputBackend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="48" column="5" bodyfile="kwin/src/core/outputbackend.cpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1a2cc7635583833c9858b0e33251fd4710" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::OutputBackend::initialize</definition>
        <argsstring>()=0</argsstring>
        <name>initialize</name>
        <qualifiedname>KWin::OutputBackend::initialize</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_backend_1aef173edf54fa9e149603d35b4d1f8dcd">initialize</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_backend_1a58fda48fe0c3baeb212272167d184d3c">initialize</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_backend_1afb220be111798a941e34f1edf62d638c">initialize</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_backend_1aa14953a97229cbde219f1a428b3162d7">initialize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="50" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1a4fbebf8e332a240bd6dd6fe1757caebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_input_backend" kindref="compound">InputBackend</ref> &gt;</type>
        <definition>std::unique_ptr&lt; InputBackend &gt; KWin::OutputBackend::createInputBackend</definition>
        <argsstring>()</argsstring>
        <name>createInputBackend</name>
        <qualifiedname>KWin::OutputBackend::createInputBackend</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_backend_1abaf2cf9c3587474e56fa4046f838240f">createInputBackend</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_backend_1ae42f167dda4d156ce9471f57fee6df34">createInputBackend</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_backend_1a8538cde6395c36948deb9ef08bc1d079">createInputBackend</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="51" column="29" bodyfile="kwin/src/core/outputbackend.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1ac98a70547423f4f0b7058356ea2a6a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_open_g_l_backend" kindref="compound">OpenGLBackend</ref> &gt;</type>
        <definition>std::unique_ptr&lt; OpenGLBackend &gt; KWin::OutputBackend::createOpenGLBackend</definition>
        <argsstring>()</argsstring>
        <name>createOpenGLBackend</name>
        <qualifiedname>KWin::OutputBackend::createOpenGLBackend</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_backend_1a1a8bf57a06593112af9f7a597735b1ea">createOpenGLBackend</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_backend_1af388b8bb66786d57b01ef0ecf0397a79">createOpenGLBackend</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a80241e87de209b2bdc2431e4621e411a">createOpenGLBackend</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_backend_1a3615efe6a5c6d80091b61f1d6d7eb437">createOpenGLBackend</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="52" column="29" bodyfile="kwin/src/core/outputbackend.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1a648ea286530873e660802d80ba47013b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_q_painter_backend" kindref="compound">QPainterBackend</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QPainterBackend &gt; KWin::OutputBackend::createQPainterBackend</definition>
        <argsstring>()</argsstring>
        <name>createQPainterBackend</name>
        <qualifiedname>KWin::OutputBackend::createQPainterBackend</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_backend_1aa25950fd74a7a13afac506a00dfc7fc6">createQPainterBackend</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_backend_1a08e897c0897c325597ca22014cc2a599">createQPainterBackend</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a7de5fdf50c919c082d91bb060c3a605d">createQPainterBackend</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_backend_1ab55d27e7699f266b090e89fca3c49b20">createQPainterBackend</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="53" column="29" bodyfile="kwin/src/core/outputbackend.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1a5a3a23d6249e363c3c3358c7b9b4304f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref> *</type>
        <definition>virtual EglDisplay * KWin::OutputBackend::sceneEglDisplayObject</definition>
        <argsstring>() const =0</argsstring>
        <name>sceneEglDisplayObject</name>
        <qualifiedname>KWin::OutputBackend::sceneEglDisplayObject</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_backend_1a6e0c0f697c5ba0eddfa60e75199692df">sceneEglDisplayObject</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_backend_1ad4344d68f8677e5aadfb82061fd5634e">sceneEglDisplayObject</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a00bfe1b4ded49ab5acc3c9cb25a959d0">sceneEglDisplayObject</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_backend_1a98430cb34efe5fa82d668029eb3ad1a4">sceneEglDisplayObject</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="55" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1a2edfea4626e01c8468bfaad1ad20ae62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::EGLContext</type>
        <definition>EGLContext KWin::OutputBackend::sceneEglGlobalShareContext</definition>
        <argsstring>() const</argsstring>
        <name>sceneEglGlobalShareContext</name>
        <qualifiedname>KWin::OutputBackend::sceneEglGlobalShareContext</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the compositor-wide shared EGL context. This function may return EGL_NO_CONTEXT if the underlying rendering backend does not use EGL.</para>
<para>Note that the returned context should never be made current. Instead, create a context that shares with this one and make the new context current. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="63" column="18" bodyfile="kwin/src/core/outputbackend.cpp" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1a420a62518578de2ed53ebfc7343f589d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputBackend::setSceneEglGlobalShareContext</definition>
        <argsstring>(::EGLContext context)</argsstring>
        <name>setSceneEglGlobalShareContext</name>
        <qualifiedname>KWin::OutputBackend::setSceneEglGlobalShareContext</qualifiedname>
        <param>
          <type>::EGLContext</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the global share context to <emphasis>context</emphasis>. This function is intended to be called only by rendering backends. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="68" column="10" bodyfile="kwin/src/core/outputbackend.cpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1aaf8ec2edaa0d9bf4cec1e67c7de49d9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QList&lt; <ref refid="namespace_k_win_1aa1e33474a7077a13169f350a5949a79a" kindref="member">CompositingType</ref> &gt;</type>
        <definition>virtual QList&lt; CompositingType &gt; KWin::OutputBackend::supportedCompositors</definition>
        <argsstring>() const =0</argsstring>
        <name>supportedCompositors</name>
        <qualifiedname>KWin::OutputBackend::supportedCompositors</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_backend_1a3757001a423847dec64d68d1aedd1fbc">supportedCompositors</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_backend_1a482e8e39d83c434b3cc09b026ee7f94e">supportedCompositors</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a2283dab5e07bca3dfe4efb72ac5674dc">supportedCompositors</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_backend_1ae49509bb86c572a58c6b97ee7b4802b3">supportedCompositors</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The CompositingTypes supported by the Platform. The first item should be the most preferred one. <simplesect kind="since"><para>5.11 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="75" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1a78aad78cefc0f83edfc0f3b96e2e5b19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_k_win_1_1_outputs" kindref="compound">Outputs</ref></type>
        <definition>virtual Outputs KWin::OutputBackend::outputs</definition>
        <argsstring>() const =0</argsstring>
        <name>outputs</name>
        <qualifiedname>KWin::OutputBackend::outputs</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_backend_1a003fd3529f0932672243d64f2a160268">outputs</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_backend_1afcffd5189c002157756c5d7e6f932421">outputs</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a5827b7ee7811da0de7821a2cce4bdb2f">outputs</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_backend_1aaa25b3c88ea10cf5e99daa6a2ca7eda6">outputs</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="77" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1a116d54df69c60208e360179f42c17b16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
        <definition>Output * KWin::OutputBackend::findOutput</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>findOutput</name>
        <qualifiedname>KWin::OutputBackend::findOutput</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="78" column="12" bodyfile="kwin/src/core/outputbackend.cpp" bodystart="69" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1ab144cfcc01aa623dd9e1139092619ec0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString KWin::OutputBackend::supportInformation</definition>
        <argsstring>() const</argsstring>
        <name>supportInformation</name>
        <qualifiedname>KWin::OutputBackend::supportInformation</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_backend_1a6613494df72e3ac53463b7fc8a65b562">supportInformation</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A string of information to include in kwin debug output It should not be translated.</para>
<para>The base implementation prints the name. <simplesect kind="since"><para>5.12 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="87" column="21" bodyfile="kwin/src/core/outputbackend.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1a2f8b74a51f8d8509ac3adfd8291b8a1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
        <definition>Output * KWin::OutputBackend::createVirtualOutput</definition>
        <argsstring>(const QString &amp;name, const QString &amp;description, const QSize &amp;size, qreal scale)</argsstring>
        <name>createVirtualOutput</name>
        <qualifiedname>KWin::OutputBackend::createVirtualOutput</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>description</declname>
        </param>
        <param>
          <type>const QSize &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="89" column="20" bodyfile="kwin/src/core/outputbackend.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1ab89950b51e886fc63c04e6d214aef07d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::OutputBackend::removeVirtualOutput</definition>
        <argsstring>(Output *output)</argsstring>
        <name>removeVirtualOutput</name>
        <qualifiedname>KWin::OutputBackend::removeVirtualOutput</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_backend_1a664d369aa26122266a42321280c6aab8">removeVirtualOutput</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_backend_1accd9781af2586af61d002ac8ac9144f5">removeVirtualOutput</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="90" column="18" bodyfile="kwin/src/core/outputbackend.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1a0727928eeef6a3bee1dd80c6fdaedee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_k_win_1a2d21f95f143c2ccab4d2a9448e14d6ec" kindref="member">OutputConfigurationError</ref></type>
        <definition>OutputConfigurationError KWin::OutputBackend::applyOutputChanges</definition>
        <argsstring>(const OutputConfiguration &amp;config)</argsstring>
        <name>applyOutputChanges</name>
        <qualifiedname>KWin::OutputBackend::applyOutputChanges</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_backend_1a986b1640228023a8ce02786e1ab3a59d">applyOutputChanges</reimplementedby>
        <param>
          <type>const <ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Applies the output changes. Default implementation only sets values common between platforms </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="95" column="38" bodyfile="kwin/src/core/outputbackend.cpp" bodystart="46" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1a92867a26811e91d369c72b877595bdb6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_session" kindref="compound">Session</ref> *</type>
        <definition>Session * KWin::OutputBackend::session</definition>
        <argsstring>() const</argsstring>
        <name>session</name>
        <qualifiedname>KWin::OutputBackend::session</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_backend_1a65b5509871eb6b3a7f788845aa661389">session</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="97" column="21" bodyfile="kwin/src/core/outputbackend.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_output_backend_1a1e1afd1a11ca71d300b7229d03d54be9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputBackend::outputsQueried</definition>
        <argsstring>()</argsstring>
        <name>outputsQueried</name>
        <qualifiedname>KWin::OutputBackend::outputsQueried</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="100" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_backend_1a220e64d9c811434825b3c3bf1b28f947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputBackend::outputAdded</definition>
        <argsstring>(Output *output)</argsstring>
        <name>outputAdded</name>
        <qualifiedname>KWin::OutputBackend::outputAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when an output has been connected. The <emphasis>output</emphasis> is not ready for compositing yet. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="105" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_backend_1a8f804420de03806fd046f99e80ee8332" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputBackend::outputRemoved</definition>
        <argsstring>(Output *output)</argsstring>
        <name>outputRemoved</name>
        <qualifiedname>KWin::OutputBackend::outputRemoved</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when an output has been disconnected. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="109" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_output_backend_1a3059152d8eda13eaedd7eecad43e2470" prot="protected" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::OutputBackend::OutputBackend</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>OutputBackend</name>
        <qualifiedname>KWin::OutputBackend::OutputBackend</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/outputbackend.h" line="112" column="14" bodyfile="kwin/src/core/outputbackend.cpp" bodystart="22" bodyend="25"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>KWin::DrmBackend</label>
        <link refid="class_k_win_1_1_drm_backend"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::OutputBackend</label>
        <link refid="class_k_win_1_1_output_backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>KWin::VirtualBackend</label>
        <link refid="class_k_win_1_1_virtual_backend"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>KWin::Wayland::WaylandBackend</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_backend"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>KWin::X11WindowedBackend</label>
        <link refid="class_k_win_1_1_x11_windowed_backend"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::OutputBackend</label>
        <link refid="class_k_win_1_1_output_backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/core/outputbackend.h" line="44" column="1" bodyfile="kwin/src/core/outputbackend.h" bodystart="45" bodyend="115"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_output_backend_1a0727928eeef6a3bee1dd80c6fdaedee9" prot="public" virt="virtual"><scope>KWin::OutputBackend</scope><name>applyOutputChanges</name></member>
      <member refid="class_k_win_1_1_output_backend_1a4fbebf8e332a240bd6dd6fe1757caebf" prot="public" virt="virtual"><scope>KWin::OutputBackend</scope><name>createInputBackend</name></member>
      <member refid="class_k_win_1_1_output_backend_1ac98a70547423f4f0b7058356ea2a6a70" prot="public" virt="virtual"><scope>KWin::OutputBackend</scope><name>createOpenGLBackend</name></member>
      <member refid="class_k_win_1_1_output_backend_1a648ea286530873e660802d80ba47013b" prot="public" virt="virtual"><scope>KWin::OutputBackend</scope><name>createQPainterBackend</name></member>
      <member refid="class_k_win_1_1_output_backend_1a2f8b74a51f8d8509ac3adfd8291b8a1f" prot="public" virt="virtual"><scope>KWin::OutputBackend</scope><name>createVirtualOutput</name></member>
      <member refid="class_k_win_1_1_output_backend_1a116d54df69c60208e360179f42c17b16" prot="public" virt="non-virtual"><scope>KWin::OutputBackend</scope><name>findOutput</name></member>
      <member refid="class_k_win_1_1_output_backend_1a2cc7635583833c9858b0e33251fd4710" prot="public" virt="pure-virtual"><scope>KWin::OutputBackend</scope><name>initialize</name></member>
      <member refid="class_k_win_1_1_output_backend_1a75fb78ae0c8c311aa92d4ef1d27685ea" prot="protected" virt="non-virtual"><scope>KWin::OutputBackend</scope><name>m_globalShareContext</name></member>
      <member refid="class_k_win_1_1_output_backend_1a220e64d9c811434825b3c3bf1b28f947" prot="public" virt="non-virtual"><scope>KWin::OutputBackend</scope><name>outputAdded</name></member>
      <member refid="class_k_win_1_1_output_backend_1a3059152d8eda13eaedd7eecad43e2470" prot="protected" virt="non-virtual"><scope>KWin::OutputBackend</scope><name>OutputBackend</name></member>
      <member refid="class_k_win_1_1_output_backend_1a8f804420de03806fd046f99e80ee8332" prot="public" virt="non-virtual"><scope>KWin::OutputBackend</scope><name>outputRemoved</name></member>
      <member refid="class_k_win_1_1_output_backend_1a78aad78cefc0f83edfc0f3b96e2e5b19" prot="public" virt="pure-virtual"><scope>KWin::OutputBackend</scope><name>outputs</name></member>
      <member refid="class_k_win_1_1_output_backend_1a1e1afd1a11ca71d300b7229d03d54be9" prot="public" virt="non-virtual"><scope>KWin::OutputBackend</scope><name>outputsQueried</name></member>
      <member refid="class_k_win_1_1_output_backend_1ab89950b51e886fc63c04e6d214aef07d" prot="public" virt="virtual"><scope>KWin::OutputBackend</scope><name>removeVirtualOutput</name></member>
      <member refid="class_k_win_1_1_output_backend_1a5a3a23d6249e363c3c3358c7b9b4304f" prot="public" virt="pure-virtual"><scope>KWin::OutputBackend</scope><name>sceneEglDisplayObject</name></member>
      <member refid="class_k_win_1_1_output_backend_1a2edfea4626e01c8468bfaad1ad20ae62" prot="public" virt="non-virtual"><scope>KWin::OutputBackend</scope><name>sceneEglGlobalShareContext</name></member>
      <member refid="class_k_win_1_1_output_backend_1a92867a26811e91d369c72b877595bdb6" prot="public" virt="virtual"><scope>KWin::OutputBackend</scope><name>session</name></member>
      <member refid="class_k_win_1_1_output_backend_1a420a62518578de2ed53ebfc7343f589d" prot="public" virt="non-virtual"><scope>KWin::OutputBackend</scope><name>setSceneEglGlobalShareContext</name></member>
      <member refid="class_k_win_1_1_output_backend_1aaf8ec2edaa0d9bf4cec1e67c7de49d9e" prot="public" virt="pure-virtual"><scope>KWin::OutputBackend</scope><name>supportedCompositors</name></member>
      <member refid="class_k_win_1_1_output_backend_1ab144cfcc01aa623dd9e1139092619ec0" prot="public" virt="virtual"><scope>KWin::OutputBackend</scope><name>supportInformation</name></member>
      <member refid="class_k_win_1_1_output_backend_1a5959251a4cfffdafeb509b40c9a29a3d" prot="public" virt="non-virtual"><scope>KWin::OutputBackend</scope><name>~OutputBackend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
