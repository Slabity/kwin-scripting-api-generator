<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_layer_surface_v1_interface" kind="class" language="C++" prot="public">
    <compoundname>KWin::LayerSurfaceV1Interface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="layershell__v1_8h" local="no">layershell_v1.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64" prot="public" static="no" strong="no">
        <type></type>
        <name>Layer</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::Layer</qualifiedname>
        <enumvalue id="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64ae364e041278b74a661656a2ba53a5b36" prot="public">
          <name>BackgroundLayer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64a4713b37e17f565445d7a180a27207b20" prot="public">
          <name>BottomLayer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64aab96af6ba5758138fb15a722492b46c1" prot="public">
          <name>TopLayer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64a44c851fe282d8a5ed9aa3150cb2ce827" prot="public">
          <name>OverlayLayer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="63" column="5" bodyfile="kwin/src/wayland/layershell_v1.h" bodystart="63" bodyend="68"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_layer_surface_v1_interface_1a6a32da7a479df0caf638dd275cf00c49" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_layer_surface_v1_interface_private" kindref="compound">LayerSurfaceV1InterfacePrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;LayerSurfaceV1InterfacePrivate&gt; KWin::LayerSurfaceV1Interface::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="189" column="21" bodyfile="kwin/src/wayland/layershell_v1.h" bodystart="189" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1a68587751aa36b7008463d10656e15085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::LayerSurfaceV1Interface::LayerSurfaceV1Interface</definition>
        <argsstring>(LayerShellV1Interface *shell, SurfaceInterface *surface, OutputInterface *output, Layer layer, const QString &amp;scope, wl_resource *resource)</argsstring>
        <name>LayerSurfaceV1Interface</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::LayerSurfaceV1Interface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_layer_shell_v1_interface" kindref="compound">LayerShellV1Interface</ref> *</type>
          <declname>shell</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output_interface" kindref="compound">OutputInterface</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64" kindref="member">Layer</ref></type>
          <declname>layer</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="70" column="5" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="393" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1acc116a869a089484adae8e36a8018a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::LayerSurfaceV1Interface::~LayerSurfaceV1Interface</definition>
        <argsstring>() override</argsstring>
        <name>~LayerSurfaceV1Interface</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::~LayerSurfaceV1Interface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="76" column="5" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="410" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1a802f24dea1dcf56f18a5caf958ca8f63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::LayerSurfaceV1Interface::isCommitted</definition>
        <argsstring>() const</argsstring>
        <name>isCommitted</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::isCommitted</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>true</computeroutput> if the initial commit has been performed; otherwise returns <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="83" column="10" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="420" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1aa35f6d919628b3b72b546e44974e0b96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
        <definition>SurfaceInterface * KWin::LayerSurfaceV1Interface::surface</definition>
        <argsstring>() const</argsstring>
        <name>surface</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::surface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the underlying <ref refid="namespace_k_win_1_1_wayland" kindref="compound">Wayland</ref> surface for this layer shell surface. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="88" column="22" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="425" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1ac5f6f32667a05e162b1c99f9569254b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Qt::Edges</type>
        <definition>Qt::Edges KWin::LayerSurfaceV1Interface::anchor</definition>
        <argsstring>() const</argsstring>
        <name>anchor</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::anchor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the anchor point relative to which the surface will be positioned. If no edges have been specified, the center of the screen is assumed to be the anchor point. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="94" column="15" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="430" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1ac6e72e0999b1cb325213f13cc1462e24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize KWin::LayerSurfaceV1Interface::desiredSize</definition>
        <argsstring>() const</argsstring>
        <name>desiredSize</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::desiredSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the desired size for this layer shell surface, in the surface-local coordinates. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="99" column="11" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="435" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1a4f95b3398931b1a7c4c4a8b572b4364c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64" kindref="member">Layer</ref></type>
        <definition>LayerSurfaceV1Interface::Layer KWin::LayerSurfaceV1Interface::layer</definition>
        <argsstring>() const</argsstring>
        <name>layer</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::layer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the stacking order layer where this layer surface has to be rendered. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="104" column="11" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="445" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1a3f66223511823ca47143e085dfce9382" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::LayerSurfaceV1Interface::acceptsFocus</definition>
        <argsstring>() const</argsstring>
        <name>acceptsFocus</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::acceptsFocus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>true</computeroutput> if the surface accepts keyboard input; otherwise returns <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="109" column="10" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="440" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1a76bb59ca0995b1eb7af289f42b434aaf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QMargins</type>
        <definition>QMargins KWin::LayerSurfaceV1Interface::margins</definition>
        <argsstring>() const</argsstring>
        <name>margins</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::margins</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the margins object that indicates the distance between an anchor edge and the corresponding surface edge. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="115" column="14" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="450" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1a63d175e9e2ceabbe70877ea0fdcf95c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::LayerSurfaceV1Interface::leftMargin</definition>
        <argsstring>() const</argsstring>
        <name>leftMargin</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::leftMargin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the value of the left margin. This is equivalent to calling <ref refid="class_k_win_1_1_layer_surface_v1_interface_1a76bb59ca0995b1eb7af289f42b434aaf" kindref="member">margins()</ref>.left(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="120" column="9" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="455" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1a51edb11905d7243d91f6737ab553af3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::LayerSurfaceV1Interface::rightMargin</definition>
        <argsstring>() const</argsstring>
        <name>rightMargin</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::rightMargin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the value of the right margin. This is equivalent to calling <ref refid="class_k_win_1_1_layer_surface_v1_interface_1a76bb59ca0995b1eb7af289f42b434aaf" kindref="member">margins()</ref>.right(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="125" column="9" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="465" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1a6ad324d128c31bf7ec1502ff5aa25087" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::LayerSurfaceV1Interface::topMargin</definition>
        <argsstring>() const</argsstring>
        <name>topMargin</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::topMargin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the value of the top margin. This is equivalent to calling <ref refid="class_k_win_1_1_layer_surface_v1_interface_1a76bb59ca0995b1eb7af289f42b434aaf" kindref="member">margins()</ref>.top(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="130" column="9" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="460" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1af0e8679c52ed1f811a49826d946fc4fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::LayerSurfaceV1Interface::bottomMargin</definition>
        <argsstring>() const</argsstring>
        <name>bottomMargin</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::bottomMargin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the value of the bottom margin. This is equivalent to calling <ref refid="class_k_win_1_1_layer_surface_v1_interface_1a76bb59ca0995b1eb7af289f42b434aaf" kindref="member">margins()</ref>.bottom(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="135" column="9" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="470" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1a2e88aadf210b2b45f3c6bfe584642135" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::LayerSurfaceV1Interface::exclusiveZone</definition>
        <argsstring>() const</argsstring>
        <name>exclusiveZone</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::exclusiveZone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the distance from the anchor edge that should not be occluded.</para>
<para>An exlusive zone of 0 means that the layer surface has to be moved to avoid occluding surfaces with a positive exclusion zone. If the exclusive zone is -1, the layer surface indicates that it doesn&apos;t want to be moved to accomodate for other surfaces. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="144" column="9" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="475" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1a6a6fa22324b27ef484326c84101fb59c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Qt::Edge</type>
        <definition>Qt::Edge KWin::LayerSurfaceV1Interface::exclusiveEdge</definition>
        <argsstring>() const</argsstring>
        <name>exclusiveEdge</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::exclusiveEdge</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the exclusive zone is positive, this function returns the corresponding exclusive anchor edge, otherwise returns a Qt::Edge() value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="150" column="14" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="480" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1ace27995e61563c18b0faf27eb68350b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output_interface" kindref="compound">OutputInterface</ref> *</type>
        <definition>OutputInterface * KWin::LayerSurfaceV1Interface::output</definition>
        <argsstring>() const</argsstring>
        <name>output</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::output</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the output where the surface wants to be displayed. This function can return <computeroutput>null</computeroutput>, in which case the compositor is free to choose the output where the surface has to be placed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="157" column="21" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="505" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1ab986478264cb8e53fb6188982d07475d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::LayerSurfaceV1Interface::scope</definition>
        <argsstring>() const</argsstring>
        <name>scope</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::scope</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the scope of this layer surface. The scope defines the purpose of the surface. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="162" column="13" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="510" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1afbc469e8f03db5ccf20cb43ad087c2be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>quint32</type>
        <definition>quint32 KWin::LayerSurfaceV1Interface::sendConfigure</definition>
        <argsstring>(const QSize &amp;size)</argsstring>
        <name>sendConfigure</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::sendConfigure</qualifiedname>
        <param>
          <type>const QSize &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends a configure event to the client. <emphasis>size</emphasis> contains the desired size in surface-local coordinates. A size of zero means that the client is free to choose its own dimensions.</para>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_layer_surface_v1_interface_1a7a166447960dbb44c2c79ea81884d087" kindref="member">configureAcknowledged()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="170" column="13" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="515" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1a025112c7806ee82773a275e255b1c0c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::LayerSurfaceV1Interface::sendClosed</definition>
        <argsstring>()</argsstring>
        <name>sendClosed</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::sendClosed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends a closed event to the client. The client should destroy the surface after receiving this event. Further changes to the surface will be ignored. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="176" column="10" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="531" bodyend="537"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_layer_surface_v1_interface_1a9bc6d786930b4c88bf4574ee001251e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_surface_role" kindref="compound">SurfaceRole</ref> *</type>
        <definition>SurfaceRole * KWin::LayerSurfaceV1Interface::role</definition>
        <argsstring>()</argsstring>
        <name>role</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::role</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="78" column="24" bodyfile="kwin/src/wayland/layershell_v1.cpp" bodystart="414" bodyend="418"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_layer_surface_v1_interface_1a2b80d055eef41ce8a87db87c0e5dc552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::LayerSurfaceV1Interface::aboutToBeDestroyed</definition>
        <argsstring>()</argsstring>
        <name>aboutToBeDestroyed</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::aboutToBeDestroyed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="179" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_layer_surface_v1_interface_1a7a166447960dbb44c2c79ea81884d087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::LayerSurfaceV1Interface::configureAcknowledged</definition>
        <argsstring>(quint32 serial)</argsstring>
        <name>configureAcknowledged</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::configureAcknowledged</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="180" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_layer_surface_v1_interface_1a662c5f4142ec1cd1a95964c1e61dce86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::LayerSurfaceV1Interface::acceptsFocusChanged</definition>
        <argsstring>()</argsstring>
        <name>acceptsFocusChanged</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::acceptsFocusChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="181" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_layer_surface_v1_interface_1a933ac3a2d2e7a8ab82037a142972048d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::LayerSurfaceV1Interface::layerChanged</definition>
        <argsstring>()</argsstring>
        <name>layerChanged</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::layerChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="182" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_layer_surface_v1_interface_1a910ddd2a349cfed08eb12eaaefad16f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::LayerSurfaceV1Interface::anchorChanged</definition>
        <argsstring>()</argsstring>
        <name>anchorChanged</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::anchorChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="183" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_layer_surface_v1_interface_1a114d43fb1e24cc16c0aa9910872686c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::LayerSurfaceV1Interface::desiredSizeChanged</definition>
        <argsstring>()</argsstring>
        <name>desiredSizeChanged</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::desiredSizeChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="184" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_layer_surface_v1_interface_1a9c904e22cb0f76fa36004f0f564852c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::LayerSurfaceV1Interface::exclusiveZoneChanged</definition>
        <argsstring>()</argsstring>
        <name>exclusiveZoneChanged</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::exclusiveZoneChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="185" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_layer_surface_v1_interface_1a98b66a60b17b370e945dd666c831022f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::LayerSurfaceV1Interface::marginsChanged</definition>
        <argsstring>()</argsstring>
        <name>marginsChanged</name>
        <qualifiedname>KWin::LayerSurfaceV1Interface::marginsChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/layershell_v1.h" line="186" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_layer_surface_v1_interface" kindref="compound">LayerSurfaceV1Interface</ref> class represents a desktop shell surface, e.g. panel, etc.</para>
<para>The <ref refid="class_k_win_1_1_layer_surface_v1_interface" kindref="compound">LayerSurfaceV1Interface</ref> corresponds to the <ref refid="namespace_k_win_1_1_wayland" kindref="compound">Wayland</ref> interface <computeroutput>zwlr_layer_surface_v1</computeroutput>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::LayerSurfaceV1Interface</label>
        <link refid="class_k_win_1_1_layer_surface_v1_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::LayerSurfaceV1Interface</label>
        <link refid="class_k_win_1_1_layer_surface_v1_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/layershell_v1.h" line="58" column="1" bodyfile="kwin/src/wayland/layershell_v1.h" bodystart="59" bodyend="190"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a2b80d055eef41ce8a87db87c0e5dc552" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>aboutToBeDestroyed</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a3f66223511823ca47143e085dfce9382" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>acceptsFocus</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a662c5f4142ec1cd1a95964c1e61dce86" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>acceptsFocusChanged</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1ac5f6f32667a05e162b1c99f9569254b0" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>anchor</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a910ddd2a349cfed08eb12eaaefad16f4" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>anchorChanged</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64ae364e041278b74a661656a2ba53a5b36" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>BackgroundLayer</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64a4713b37e17f565445d7a180a27207b20" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>BottomLayer</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1af0e8679c52ed1f811a49826d946fc4fa" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>bottomMargin</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a7a166447960dbb44c2c79ea81884d087" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>configureAcknowledged</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a6a32da7a479df0caf638dd275cf00c49" prot="private" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>d</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1ac6e72e0999b1cb325213f13cc1462e24" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>desiredSize</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a114d43fb1e24cc16c0aa9910872686c5" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>desiredSizeChanged</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a6a6fa22324b27ef484326c84101fb59c" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>exclusiveEdge</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a2e88aadf210b2b45f3c6bfe584642135" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>exclusiveZone</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a9c904e22cb0f76fa36004f0f564852c0" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>exclusiveZoneChanged</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a802f24dea1dcf56f18a5caf958ca8f63" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>isCommitted</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>Layer</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a4f95b3398931b1a7c4c4a8b572b4364c" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>layer</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a933ac3a2d2e7a8ab82037a142972048d" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>layerChanged</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a68587751aa36b7008463d10656e15085" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>LayerSurfaceV1Interface</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a63d175e9e2ceabbe70877ea0fdcf95c0" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>leftMargin</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a76bb59ca0995b1eb7af289f42b434aaf" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>margins</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a98b66a60b17b370e945dd666c831022f" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>marginsChanged</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1ace27995e61563c18b0faf27eb68350b6" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>output</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64a44c851fe282d8a5ed9aa3150cb2ce827" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>OverlayLayer</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a51edb11905d7243d91f6737ab553af3f" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>rightMargin</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a9bc6d786930b4c88bf4574ee001251e3" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>role</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1ab986478264cb8e53fb6188982d07475d" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>scope</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a025112c7806ee82773a275e255b1c0c1" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>sendClosed</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1afbc469e8f03db5ccf20cb43ad087c2be" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>sendConfigure</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1aa35f6d919628b3b72b546e44974e0b96" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>surface</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a51877e52eb2c4ff1ad3400b5038a8a64aab96af6ba5758138fb15a722492b46c1" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>TopLayer</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1a6ad324d128c31bf7ec1502ff5aa25087" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>topMargin</name></member>
      <member refid="class_k_win_1_1_layer_surface_v1_interface_1acc116a869a089484adae8e36a8018a3d" prot="public" virt="non-virtual"><scope>KWin::LayerSurfaceV1Interface</scope><name>~LayerSurfaceV1Interface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
