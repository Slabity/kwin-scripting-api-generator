<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="pointerconstraintstest_8h" kind="file" language="C++">
    <compoundname>pointerconstraintstest.h</compoundname>
    <includes local="no">QObject</includes>
    <includes local="no">QQuickView</includes>
    <includes local="no">xcb/xcb.h</includes>
    <includedby refid="pointerconstraintstest_8cpp" local="yes">kwin/tests/pointerconstraintstest.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>kwin/tests/pointerconstraintstest.h</label>
        <link refid="pointerconstraintstest_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="3">
        <label>QQuickView</label>
      </node>
      <node id="4">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>kwin/tests/pointerconstraintstest.cpp</label>
        <link refid="pointerconstraintstest_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/tests/pointerconstraintstest.h</label>
        <link refid="pointerconstraintstest_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_backend" prot="public">Backend</innerclass>
    <innerclass refid="class_wayland_backend" prot="public">WaylandBackend</innerclass>
    <innerclass refid="class_x_backend" prot="public">XBackend</innerclass>
    <innernamespace refid="namespace_k_wayland">KWayland</innernamespace>
    <innernamespace refid="namespace_k_wayland_1_1_client">KWayland::Client</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2018<sp/>Roman<sp/>Gilg<sp/>&lt;subdiff@gmail.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>POINTERCONSTRAINTSTEST_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POINTERCONSTRAINTSTEST_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QObject&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QQuickView&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xcb/xcb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_wayland" kindref="compound">KWayland</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_wayland_1_1_client" kindref="compound">Client</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ConnectionThread;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Registry;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Compositor;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a25c40c519686f155291de96c60796f70" kindref="member">Seat</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="input__capture__test_8cpp_1a7d3100a8c2962a690e0f48d4fe151e17a61cf8510205077b6f5491d38cd44c0f7" kindref="member">Pointer</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a0b3852f0d5dfd229d7157b15e9bef0e3" kindref="member">PointerConstraints</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LockedPointer;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ConfinedPointer;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MainWindow;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_backend" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_backend_1a5bc0e9ea135112c07e021ebde56ec44f" kindref="member">Backend</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="class_backend_1a5bc0e9ea135112c07e021ebde56ec44f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_backend_1a5bc0e9ea135112c07e021ebde56ec44f" kindref="member">Backend</ref>(QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_backend_1a0afd492c3853d7451edbfadd710445e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a0afd492c3853d7451edbfadd710445e6" kindref="member">mode</ref><sp/>READ<sp/><ref refid="class_backend_1a0afd492c3853d7451edbfadd710445e6" kindref="member">mode</ref><sp/>CONSTANT)</highlight></codeline>
<codeline lineno="43" refid="class_backend_1a4258f56a05d77aa43630d3997ec308d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a4258f56a05d77aa43630d3997ec308d4" kindref="member">lockHint</ref><sp/>MEMBER<sp/>m_lockHint<sp/>NOTIFY<sp/><ref refid="class_backend_1a8734aa3612cd8d8694bee1c43d3e5218" kindref="member">lockHintChanged</ref>)</highlight></codeline>
<codeline lineno="44" refid="class_backend_1a4c7d3e2da4b46223e7173bf0dc48bb35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a4c7d3e2da4b46223e7173bf0dc48bb35" kindref="member">errorsAllowed</ref><sp/>READ<sp/><ref refid="class_backend_1a4c7d3e2da4b46223e7173bf0dc48bb35" kindref="member">errorsAllowed</ref><sp/>WRITE<sp/><ref refid="class_backend_1a93043fcdc55e5cffd5c96d1b3ae64861" kindref="member">setErrorsAllowed</ref><sp/>NOTIFY<sp/><ref refid="class_backend_1a41a60536ee920afd0d172c8e8863a134" kindref="member">errorsAllowedChanged</ref>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_backend_1a922f911e48ead0c4df7f0acd700e3cd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a922f911e48ead0c4df7f0acd700e3cd9" kindref="member">init</ref>(QQuickView<sp/>*<ref refid="class_backend_1a12349d7c60386523404ffa73cdee07de" kindref="member">view</ref>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_view<sp/>=<sp/><ref refid="class_backend_1a12349d7c60386523404ffa73cdee07de" kindref="member">view</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50" refid="class_backend_1ad550fa5f0c97f4f409ac321a18f98726" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_backend_1ad550fa5f0c97f4f409ac321a18f98726" kindref="member">mode</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="51"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m_mode;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_backend_1a0e751b0cd0a4e204772f6c5bda422d96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a0e751b0cd0a4e204772f6c5bda422d96" kindref="member">lockHint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="56"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lockHint;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59" refid="class_backend_1a1c0576d117873460a4c68ab5c66d9bad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a1c0576d117873460a4c68ab5c66d9bad" kindref="member">errorsAllowed</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="60"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_errorsAllowed;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63" refid="class_backend_1a93043fcdc55e5cffd5c96d1b3ae64861" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a93043fcdc55e5cffd5c96d1b3ae64861" kindref="member">setErrorsAllowed</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_errorsAllowed<sp/>==<sp/>set)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_errorsAllowed<sp/>=<sp/>set;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_backend_1a41a60536ee920afd0d172c8e8863a134" kindref="member">errorsAllowedChanged</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_backend_1aedd0d08660af5a2342f5fe0f895713c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_INVOKABLE<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backend_1aedd0d08660af5a2342f5fe0f895713c2" kindref="member">lockRequest</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>persistent<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>QRect<sp/>region<sp/>=<sp/>QRect())</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75" refid="class_backend_1aaaeac86fecd1cbb2e1c2e31e68f1355e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_INVOKABLE<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backend_1aaaeac86fecd1cbb2e1c2e31e68f1355e" kindref="member">unlockRequest</ref>()</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_backend_1a858b038da22f8f0c96f51aa3d44a1dd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_INVOKABLE<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a858b038da22f8f0c96f51aa3d44a1dd0" kindref="member">confineRequest</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>persistent<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>QRect<sp/>region<sp/>=<sp/>QRect())</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82" refid="class_backend_1a24f84ba0e2ac3112f12c993e9eee8d5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_INVOKABLE<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a24f84ba0e2ac3112f12c993e9eee8d5e" kindref="member">unconfineRequest</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85" refid="class_backend_1a346634cbbb0b586c8abbfb1fa7745307" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_INVOKABLE<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a346634cbbb0b586c8abbfb1fa7745307" kindref="member">hideAndConfineRequest</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>confineBeforeHide<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88" refid="class_backend_1afa628a0785cc8110c033f13f5ebc0d55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_INVOKABLE<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backend_1afa628a0785cc8110c033f13f5ebc0d55" kindref="member">undoHideRequest</ref>()</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="93" refid="class_backend_1abae42e001ae46520622eee4b0057ae6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backend_1abae42e001ae46520622eee4b0057ae6e" kindref="member">confineChanged</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>confined);</highlight></codeline>
<codeline lineno="94" refid="class_backend_1a30fc3e2a094ede1ac540a1e10fdc9f25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a30fc3e2a094ede1ac540a1e10fdc9f25" kindref="member">lockChanged</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>locked);</highlight></codeline>
<codeline lineno="95" refid="class_backend_1a8734aa3612cd8d8694bee1c43d3e5218" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a8734aa3612cd8d8694bee1c43d3e5218" kindref="member">lockHintChanged</ref>();</highlight></codeline>
<codeline lineno="96" refid="class_backend_1a41a60536ee920afd0d172c8e8863a134" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a41a60536ee920afd0d172c8e8863a134" kindref="member">errorsAllowedChanged</ref>();</highlight></codeline>
<codeline lineno="97" refid="class_backend_1a8260b3774634dfe2cf1816da47f7d764" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a8260b3774634dfe2cf1816da47f7d764" kindref="member">forceSurfaceCommit</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100" refid="class_backend_1a3146ef7bb0edf5352175361f04bfa48c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a3146ef7bb0edf5352175361f04bfa48c" kindref="member">Mode</ref><sp/>{</highlight></codeline>
<codeline lineno="101" refid="class_backend_1a3146ef7bb0edf5352175361f04bfa48cabd9c6c9ca372721e187caeb1654b4209" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_backend_1a3146ef7bb0edf5352175361f04bfa48cabd9c6c9ca372721e187caeb1654b4209" kindref="member">Wayland</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="102" refid="class_backend_1a3146ef7bb0edf5352175361f04bfa48ca02129bb861061d1a052c592e2dc6b383" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_backend_1a3146ef7bb0edf5352175361f04bfa48ca02129bb861061d1a052c592e2dc6b383" kindref="member">X</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_backend_1a12349d7c60386523404ffa73cdee07de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QQuickView<sp/>*<ref refid="class_backend_1a12349d7c60386523404ffa73cdee07de" kindref="member">view</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="106"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_view;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109" refid="class_backend_1ad44f31164228a1fecdf6534ea68e4cad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backend_1ad44f31164228a1fecdf6534ea68e4cad" kindref="member">setMode</ref>(<ref refid="class_backend_1a3146ef7bb0edf5352175361f04bfa48c" kindref="member">Mode</ref><sp/>set)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_mode<sp/>=<sp/>set;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>QQuickView<sp/>*m_view;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_backend_1a3146ef7bb0edf5352175361f04bfa48c" kindref="member">Mode</ref><sp/>m_mode;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_lockHint<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_errorsAllowed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_wayland_backend" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_wayland_backend_1a87e58335a84b60ceb9dcd8752166747c" kindref="member">WaylandBackend</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a5bc0e9ea135112c07e021ebde56ec44f" kindref="member">Backend</ref></highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wayland_backend_1a87e58335a84b60ceb9dcd8752166747c" kindref="member">WaylandBackend</ref>(QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wayland_backend_1a56e4b736e71d9fdbca6b1549189d7aa4" kindref="member">init</ref>(QQuickView<sp/>*<ref refid="class_backend_1a12349d7c60386523404ffa73cdee07de" kindref="member">view</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wayland_backend_1ab4b50762ea29b950e9643a4027513000" kindref="member">lockRequest</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>persistent,<sp/>QRect<sp/>region)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wayland_backend_1a6ac826b41f876e63f1d26d6b8ee2579a" kindref="member">unlockRequest</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wayland_backend_1a13c4e259f062fbddd560241099a2bf59" kindref="member">confineRequest</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>persistent,<sp/>QRect<sp/>region)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wayland_backend_1a9b88ca4d1cdeddf232f8005d4402911d" kindref="member">unconfineRequest</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setupRegistry(KWayland::Client::Registry<sp/>*registry);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLocked();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isConfined();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cleanupLock();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cleanupConfine();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::ConnectionThread<sp/>*m_connectionThreadObject;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Compositor<sp/>*m_compositor<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Seat<sp/>*m_seat<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Pointer<sp/>*m_pointer<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::PointerConstraints<sp/>*m_pointerConstraints<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::LockedPointer<sp/>*m_lockedPointer<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_lockedPointerPersistent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::ConfinedPointer<sp/>*m_confinedPointer<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_confinedPointerPersistent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_x_backend" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_x_backend_1ad5e0dc7884a570f027748115aaad304f" kindref="member">XBackend</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_backend_1a5bc0e9ea135112c07e021ebde56ec44f" kindref="member">Backend</ref></highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_x_backend_1ad5e0dc7884a570f027748115aaad304f" kindref="member">XBackend</ref>(QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_x_backend_1aa966657ea2778ccfdf93274076c1d12f" kindref="member">init</ref>(QQuickView<sp/>*<ref refid="class_backend_1a12349d7c60386523404ffa73cdee07de" kindref="member">view</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_x_backend_1af30b9b3968800ff2a708c44c02a7231b" kindref="member">lockRequest</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>persistent,<sp/>QRect<sp/>region)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_x_backend_1a4ed3ac30406c5fdcdf5df004910f6282" kindref="member">unlockRequest</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_x_backend_1a6cebc2c7533e2d01939c0d5ebb37ca74" kindref="member">confineRequest</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>persistent,<sp/>QRect<sp/>region)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_x_backend_1ab20b45d3d60a64bee3859bcfa0401605" kindref="member">unconfineRequest</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_x_backend_1af2806000888b7357d2394cc3d25acdd1" kindref="member">hideAndConfineRequest</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>confineBeforeHide)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_x_backend_1a1f94caefefc3321f72bfbeadcc97815f" kindref="member">undoHideRequest</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tryConfine(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;error);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_connection_t<sp/>*m_xcbConn<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="kwin/tests/pointerconstraintstest.h"/>
  </compounddef>
</doxygen>
