<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_tab_box_1_1_tab_box" kind="class" language="C++" prot="public">
    <compoundname>KWin::TabBox::TabBox</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="tabbox_8h" local="no">tabbox.h</includes>
    <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_k_win_1_1_tab_box_1_1_tab_box_1a784c776cd9e9a887f88de787528555c7" prot="private" static="no" strong="no">
        <type></type>
        <name>Direction</name>
        <qualifiedname>KWin::TabBox::TabBox::Direction</qualifiedname>
        <enumvalue id="class_k_win_1_1_tab_box_1_1_tab_box_1a784c776cd9e9a887f88de787528555c7a40790d2e8a1f00a4658543b6f244ef7a" prot="private">
          <name>Backward</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_tab_box_1_1_tab_box_1a784c776cd9e9a887f88de787528555c7a541f9261e6b380587cb629a66473413c" prot="private">
          <name>Steady</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_tab_box_1_1_tab_box_1a784c776cd9e9a887f88de787528555c7ab4fa703c62f582c1448c5905db073604" prot="private">
          <name>Forward</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="237" column="5" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="237" bodyend="241"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1ac297977e13488d8df03d414856f8e8de" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref></type>
        <definition>TabBoxMode KWin::TabBox::TabBox::m_tabBoxMode</definition>
        <argsstring></argsstring>
        <name>m_tabBoxMode</name>
        <qualifiedname>KWin::TabBox::TabBox::m_tabBoxMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="268" column="16" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a8fea8932521f5b8b0011cc4d2665f353" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl" kindref="compound">TabBoxHandlerImpl</ref> *</type>
        <definition>TabBoxHandlerImpl* KWin::TabBox::TabBox::m_tabBox</definition>
        <argsstring></argsstring>
        <name>m_tabBox</name>
        <qualifiedname>KWin::TabBox::TabBox::m_tabBox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="269" column="23" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a43cd561be8b7b463e7d2714a48f848fd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::TabBox::TabBox::m_delayShowTime</definition>
        <argsstring></argsstring>
        <name>m_delayShowTime</name>
        <qualifiedname>KWin::TabBox::TabBox::m_delayShowTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="270" column="9" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a0868036aa4ed933110d70aed09b30879" prot="private" static="no" mutable="no">
        <type>QTimer</type>
        <definition>QTimer KWin::TabBox::TabBox::m_delayedShowTimer</definition>
        <argsstring></argsstring>
        <name>m_delayedShowTimer</name>
        <qualifiedname>KWin::TabBox::TabBox::m_delayedShowTimer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="272" column="12" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a9c3350aea582ba099b3e07827a969eb1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::TabBox::TabBox::m_displayRefcount</definition>
        <argsstring></argsstring>
        <name>m_displayRefcount</name>
        <qualifiedname>KWin::TabBox::TabBox::m_displayRefcount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="273" column="9" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a1120b96bdba08a78ebdb34264fbb5b3e" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config" kindref="compound">TabBoxConfig</ref></type>
        <definition>TabBoxConfig KWin::TabBox::TabBox::m_defaultConfig</definition>
        <argsstring></argsstring>
        <name>m_defaultConfig</name>
        <qualifiedname>KWin::TabBox::TabBox::m_defaultConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="275" column="18" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a2e9e1128b6383d5e3127536c43fb77be" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config" kindref="compound">TabBoxConfig</ref></type>
        <definition>TabBoxConfig KWin::TabBox::TabBox::m_alternativeConfig</definition>
        <argsstring></argsstring>
        <name>m_alternativeConfig</name>
        <qualifiedname>KWin::TabBox::TabBox::m_alternativeConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="276" column="18" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a2b673827e870a70b4c10b755e85f96da" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config" kindref="compound">TabBoxConfig</ref></type>
        <definition>TabBoxConfig KWin::TabBox::TabBox::m_defaultCurrentApplicationConfig</definition>
        <argsstring></argsstring>
        <name>m_defaultCurrentApplicationConfig</name>
        <qualifiedname>KWin::TabBox::TabBox::m_defaultCurrentApplicationConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="277" column="18" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1ae9991922e951d55a543a2b8b9fc1e446" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config" kindref="compound">TabBoxConfig</ref></type>
        <definition>TabBoxConfig KWin::TabBox::TabBox::m_alternativeCurrentApplicationConfig</definition>
        <argsstring></argsstring>
        <name>m_alternativeCurrentApplicationConfig</name>
        <qualifiedname>KWin::TabBox::TabBox::m_alternativeCurrentApplicationConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="278" column="18" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a64faa3e6d67cd7e2bae2d2971c822a4c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::m_isShown</definition>
        <argsstring></argsstring>
        <name>m_isShown</name>
        <qualifiedname>KWin::TabBox::TabBox::m_isShown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="281" column="10" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1ab4f702202af8228ba1cd4f327fba410c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::m_tabGrab</definition>
        <argsstring></argsstring>
        <name>m_tabGrab</name>
        <qualifiedname>KWin::TabBox::TabBox::m_tabGrab</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="282" column="10" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1acdec001d0be400c766aeec0d5a4c188f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::m_noModifierGrab</definition>
        <argsstring></argsstring>
        <name>m_noModifierGrab</name>
        <qualifiedname>KWin::TabBox::TabBox::m_noModifierGrab</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="284" column="10" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a7662ed9b16cefd544b0cadd9cb71e0e8" prot="private" static="no" mutable="no">
        <type>QKeySequence</type>
        <definition>QKeySequence KWin::TabBox::TabBox::m_cutWalkThroughWindows</definition>
        <argsstring></argsstring>
        <name>m_cutWalkThroughWindows</name>
        <qualifiedname>KWin::TabBox::TabBox::m_cutWalkThroughWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="285" column="18" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1aaa4c86915fa5feeddca7838700ba6510" prot="private" static="no" mutable="no">
        <type>QKeySequence</type>
        <definition>QKeySequence KWin::TabBox::TabBox::m_cutWalkThroughWindowsReverse</definition>
        <argsstring></argsstring>
        <name>m_cutWalkThroughWindowsReverse</name>
        <qualifiedname>KWin::TabBox::TabBox::m_cutWalkThroughWindowsReverse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="285" column="42" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a0e568735c29a0367fc50b17afb82a57e" prot="private" static="no" mutable="no">
        <type>QKeySequence</type>
        <definition>QKeySequence KWin::TabBox::TabBox::m_cutWalkThroughWindowsAlternative</definition>
        <argsstring></argsstring>
        <name>m_cutWalkThroughWindowsAlternative</name>
        <qualifiedname>KWin::TabBox::TabBox::m_cutWalkThroughWindowsAlternative</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="286" column="18" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a8d06a78c5c96c8527f8082d9769401a4" prot="private" static="no" mutable="no">
        <type>QKeySequence</type>
        <definition>QKeySequence KWin::TabBox::TabBox::m_cutWalkThroughWindowsAlternativeReverse</definition>
        <argsstring></argsstring>
        <name>m_cutWalkThroughWindowsAlternativeReverse</name>
        <qualifiedname>KWin::TabBox::TabBox::m_cutWalkThroughWindowsAlternativeReverse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="286" column="53" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a0e3debe0db5285c9c4306f08acdd435e" prot="private" static="no" mutable="no">
        <type>QKeySequence</type>
        <definition>QKeySequence KWin::TabBox::TabBox::m_cutWalkThroughCurrentAppWindows</definition>
        <argsstring></argsstring>
        <name>m_cutWalkThroughCurrentAppWindows</name>
        <qualifiedname>KWin::TabBox::TabBox::m_cutWalkThroughCurrentAppWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="287" column="18" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1afaeb585ef3009597012384e49c070bed" prot="private" static="no" mutable="no">
        <type>QKeySequence</type>
        <definition>QKeySequence KWin::TabBox::TabBox::m_cutWalkThroughCurrentAppWindowsReverse</definition>
        <argsstring></argsstring>
        <name>m_cutWalkThroughCurrentAppWindowsReverse</name>
        <qualifiedname>KWin::TabBox::TabBox::m_cutWalkThroughCurrentAppWindowsReverse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="287" column="52" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a85682cc4cdcebec14857d22b99874481" prot="private" static="no" mutable="no">
        <type>QKeySequence</type>
        <definition>QKeySequence KWin::TabBox::TabBox::m_cutWalkThroughCurrentAppWindowsAlternative</definition>
        <argsstring></argsstring>
        <name>m_cutWalkThroughCurrentAppWindowsAlternative</name>
        <qualifiedname>KWin::TabBox::TabBox::m_cutWalkThroughCurrentAppWindowsAlternative</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="288" column="18" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a1edbcec83598d081c4e331bb373bbb01" prot="private" static="no" mutable="no">
        <type>QKeySequence</type>
        <definition>QKeySequence KWin::TabBox::TabBox::m_cutWalkThroughCurrentAppWindowsAlternativeReverse</definition>
        <argsstring></argsstring>
        <name>m_cutWalkThroughCurrentAppWindowsAlternativeReverse</name>
        <qualifiedname>KWin::TabBox::TabBox::m_cutWalkThroughCurrentAppWindowsAlternativeReverse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="288" column="63" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a68405e8ee6ed05cd3b6729459994d7d7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::m_forcedGlobalMouseGrab</definition>
        <argsstring></argsstring>
        <name>m_forcedGlobalMouseGrab</name>
        <qualifiedname>KWin::TabBox::TabBox::m_forcedGlobalMouseGrab</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="289" column="10" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1abb177eb48aca16544494a176a2a313d5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::m_ready</definition>
        <argsstring></argsstring>
        <name>m_ready</name>
        <qualifiedname>KWin::TabBox::TabBox::m_ready</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="290" column="10" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a82d1308215a294c657fb3b378370258a" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref> &gt;</type>
        <definition>QList&lt;ElectricBorder&gt; KWin::TabBox::TabBox::m_borderActivate</definition>
        <argsstring></argsstring>
        <name>m_borderActivate</name>
        <qualifiedname>KWin::TabBox::TabBox::m_borderActivate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="291" column="11" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a7a195703d3449bee7f1a315037f50495" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref> &gt;</type>
        <definition>QList&lt;ElectricBorder&gt; KWin::TabBox::TabBox::m_borderAlternativeActivate</definition>
        <argsstring></argsstring>
        <name>m_borderAlternativeActivate</name>
        <qualifiedname>KWin::TabBox::TabBox::m_borderAlternativeActivate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="291" column="28" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a974dab67254474a44fe056755a0d8405" prot="private" static="no" mutable="no">
        <type>QHash&lt; <ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref>, QAction * &gt;</type>
        <definition>QHash&lt;ElectricBorder, QAction *&gt; KWin::TabBox::TabBox::m_touchActivate</definition>
        <argsstring></argsstring>
        <name>m_touchActivate</name>
        <qualifiedname>KWin::TabBox::TabBox::m_touchActivate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="292" column="11" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_tab_box_1_1_tab_box_1a27c1a676c3d627cbd6b5eb9c6822d876" prot="private" static="no" mutable="no">
        <type>QHash&lt; <ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref>, QAction * &gt;</type>
        <definition>QHash&lt;ElectricBorder, QAction *&gt; KWin::TabBox::TabBox::m_touchAlternativeActivate</definition>
        <argsstring></argsstring>
        <name>m_touchAlternativeActivate</name>
        <qualifiedname>KWin::TabBox::TabBox::m_touchAlternativeActivate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="293" column="11" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="293" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1af27a8e5e780c886362d2e4f760dd173b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::TabBox::TabBox::TabBox</definition>
        <argsstring>()</argsstring>
        <name>TabBox</name>
        <qualifiedname>KWin::TabBox::TabBox::TabBox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="79" column="14" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="274" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a26dca575c025308d0841dcc0eb61c9c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::TabBox::TabBox::~TabBox</definition>
        <argsstring>()</argsstring>
        <name>~TabBox</name>
        <qualifiedname>KWin::TabBox::TabBox::~TabBox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="80" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a1270973ac95a0838dabebf8586a9620e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::TabBox::TabBox::currentClient</definition>
        <argsstring>()</argsstring>
        <name>currentClient</name>
        <qualifiedname>KWin::TabBox::TabBox::currentClient</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the currently displayed client ( only works in TabBoxWindowsMode ). Returns 0 if no client is displayed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="86" column="12" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="426" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a0c1cfe552fa9c27dd247ab1a03e1b974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt;</type>
        <definition>QList&lt; Window * &gt; KWin::TabBox::TabBox::currentClientList</definition>
        <argsstring>()</argsstring>
        <name>currentClientList</name>
        <qualifiedname>KWin::TabBox::TabBox::currentClientList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the list of clients potentially displayed ( only works in TabBoxWindowsMode ). Returns an empty list if no clients are available. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="93" column="11" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="438" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1ae690d9ca9e66276dffe3f3d24c822724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::setCurrentClient</definition>
        <argsstring>(Window *newClient)</argsstring>
        <name>setCurrentClient</name>
        <qualifiedname>KWin::TabBox::TabBox::setCurrentClient</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>newClient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the currently selected client, and notify the effects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="98" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="443" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1ada984cbde4fba1227c92bd18fb33fabd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::haveActiveClient</definition>
        <argsstring>()</argsstring>
        <name>haveActiveClient</name>
        <qualifiedname>KWin::TabBox::TabBox::haveActiveClient</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether the active client is present in the client list. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="103" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="459" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1adca588625750805b2c37a809802d2f21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::setMode</definition>
        <argsstring>(TabBoxMode mode)</argsstring>
        <name>setMode</name>
        <qualifiedname>KWin::TabBox::TabBox::setMode</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="105" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="382" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a1694b3795ef31994277cdbb9d81c720d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref></type>
        <definition>TabBoxMode KWin::TabBox::TabBox::mode</definition>
        <argsstring>() const</argsstring>
        <name>mode</name>
        <qualifiedname>KWin::TabBox::TabBox::mode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="106" column="16" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a8024cc72a79cf75e9c14d51625c81daa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::reset</definition>
        <argsstring>(bool partial_reset=false)</argsstring>
        <name>reset</name>
        <qualifiedname>KWin::TabBox::TabBox::reset</qualifiedname>
        <param>
          <type>bool</type>
          <declname>partial_reset</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resets the tab box to display the active client in TabBoxWindowsMode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="114" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="401" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a976ba90bacc25d52de18cd6dbd21cc99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::nextPrev</definition>
        <argsstring>(bool next=true)</argsstring>
        <name>nextPrev</name>
        <qualifiedname>KWin::TabBox::TabBox::nextPrev</qualifiedname>
        <param>
          <type>bool</type>
          <declname>next</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shows the next or previous item, depending on <emphasis>next</emphasis> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="119" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="420" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a9713d69ae30759f385f97a4887dd07b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::delayedShow</definition>
        <argsstring>()</argsstring>
        <name>delayedShow</name>
        <qualifiedname>KWin::TabBox::TabBox::delayedShow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shows the tab box after some delay.</para>
<para>If the &apos;DelayTime&apos; setting is 0, <ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a5da0ce76634cee59670bea4d03e9991f" kindref="member">show()</ref> is simply called.</para>
<para>Otherwise, we start a timer for the delay given in the settings and only do a <ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a5da0ce76634cee59670bea4d03e9991f" kindref="member">show()</ref> when it times out.</para>
<para>This means that you can alt-tab between windows and you don&apos;t see the tab box immediately. Not only does this make alt-tabbing faster, it gives less &apos;flicker&apos; to the eyes. You don&apos;t need to see the tab box if you&apos;re just quickly switching between 2 or 3 windows. It seems to work quite nicely. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="135" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="580" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a47cde82c2861bc24c4e8bbd693195722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::hide</definition>
        <argsstring>(bool abort=false)</argsstring>
        <name>hide</name>
        <qualifiedname>KWin::TabBox::TabBox::hide</qualifiedname>
        <param>
          <type>bool</type>
          <declname>abort</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notify effects that the tab box is being hidden. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="140" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="477" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1ac173f2e2fd4c113fb54e8e498421ec69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::reference</definition>
        <argsstring>()</argsstring>
        <name>reference</name>
        <qualifiedname>KWin::TabBox::TabBox::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increases the reference count, preventing the default tabbox from showing.</para>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1af10109f1391136a17bfa79fb8260108f" kindref="member">unreference</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae972b83e5b098c615c3829441f6cc4a7" kindref="member">isDisplayed</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="148" column="10" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1af10109f1391136a17bfa79fb8260108f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::unreference</definition>
        <argsstring>()</argsstring>
        <name>unreference</name>
        <qualifiedname>KWin::TabBox::TabBox::unreference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decreases the reference count. Only when the reference count is 0 will the default tab box be shown. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="157" column="10" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1ae972b83e5b098c615c3829441f6cc4a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::isDisplayed</definition>
        <argsstring>() const</argsstring>
        <name>isDisplayed</name>
        <qualifiedname>KWin::TabBox::TabBox::isDisplayed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether the tab box is being displayed, either natively or by an effect.</para>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac173f2e2fd4c113fb54e8e498421ec69" kindref="member">reference</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1af10109f1391136a17bfa79fb8260108f" kindref="member">unreference</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="169" column="10" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1ac9919059a58744ab24de159e0cdad016" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::isShown</definition>
        <argsstring>() const</argsstring>
        <name>isShown</name>
        <qualifiedname>KWin::TabBox::TabBox::isShown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if <ref refid="class_k_win_1_1_tab_box_1_1_tab_box" kindref="compound">TabBox</ref> is shown, <computeroutput>false</computeroutput> if replaced by <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="177" column="10" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a044023f866a56da6a8db9490ecd9b607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::handleMouseEvent</definition>
        <argsstring>(QMouseEvent *event)</argsstring>
        <name>handleMouseEvent</name>
        <qualifiedname>KWin::TabBox::TabBox::handleMouseEvent</qualifiedname>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="182" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="596" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1af6940f8ece1b04922f09d10d08e016e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::handleWheelEvent</definition>
        <argsstring>(QWheelEvent *event)</argsstring>
        <name>handleWheelEvent</name>
        <qualifiedname>KWin::TabBox::TabBox::handleWheelEvent</qualifiedname>
        <param>
          <type>QWheelEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="183" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="626" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a42a5978bc78f1d591b6830cf143414f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::grabbedKeyEvent</definition>
        <argsstring>(QKeyEvent *event)</argsstring>
        <name>grabbedKeyEvent</name>
        <qualifiedname>KWin::TabBox::TabBox::grabbedKeyEvent</qualifiedname>
        <param>
          <type>QKeyEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="184" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="644" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1af37c6de753dc28184d118afe16567235" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::isGrabbed</definition>
        <argsstring>() const</argsstring>
        <name>isGrabbed</name>
        <qualifiedname>KWin::TabBox::TabBox::isGrabbed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="186" column="10" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a1911fdd0f5f4aee1b62876be79168bf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::initShortcuts</definition>
        <argsstring>()</argsstring>
        <name>initShortcuts</name>
        <qualifiedname>KWin::TabBox::TabBox::initShortcuts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="191" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="347" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1aa01ab3c6f409e418fca2cdd06336923f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::TabBox::TabBox::nextClientStatic</definition>
        <argsstring>(Window *) const</argsstring>
        <name>nextClientStatic</name>
        <qualifiedname>KWin::TabBox::TabBox::nextClientStatic</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <defname>c</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Auxiliary functions to travers all clients according to the static order. Useful for the CDE-style Alt-tab feature. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="193" column="12" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="1034" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a0bbba9bd3346afdb2fbf3ce0130e0035" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::TabBox::TabBox::previousClientStatic</definition>
        <argsstring>(Window *) const</argsstring>
        <name>previousClientStatic</name>
        <qualifiedname>KWin::TabBox::TabBox::previousClientStatic</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <defname>c</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Auxiliary functions to travers all clients according to the static order. Useful for the CDE-style Alt-tab feature. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="194" column="12" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="1064" bodyend="1088"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a6bb74e5274e1138a6b1e175169572b37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::keyPress</definition>
        <argsstring>(const KeyboardKeyEvent &amp;keyEvent)</argsstring>
        <name>keyPress</name>
        <qualifiedname>KWin::TabBox::TabBox::keyPress</qualifiedname>
        <param>
          <type>const <ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref> &amp;</type>
          <declname>keyEvent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="195" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="928" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1adcf36925d1fd17bda4b322b65307f98b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::modifiersReleased</definition>
        <argsstring>()</argsstring>
        <name>modifiersReleased</name>
        <qualifiedname>KWin::TabBox::TabBox::modifiersReleased</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="196" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="1020" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1ad16403a5a01630c56195df27728411d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::forcedGlobalMouseGrab</definition>
        <argsstring>() const</argsstring>
        <name>forcedGlobalMouseGrab</name>
        <qualifiedname>KWin::TabBox::TabBox::forcedGlobalMouseGrab</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="198" column="10" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1afe6eb6fe95cfc28217b8349c74a9b2fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::noModifierGrab</definition>
        <argsstring>() const</argsstring>
        <name>noModifierGrab</name>
        <qualifiedname>KWin::TabBox::TabBox::noModifierGrab</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="203" column="10" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a497aa38f460da818b9b1cb4511e46869" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::setCurrentIndex</definition>
        <argsstring>(QModelIndex index, bool notifyEffects=true)</argsstring>
        <name>setCurrentIndex</name>
        <qualifiedname>KWin::TabBox::TabBox::setCurrentIndex</qualifiedname>
        <param>
          <type>QModelIndex</type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>notifyEffects</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="207" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="448" bodyend="457"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1a5da0ce76634cee59670bea4d03e9991f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::show</definition>
        <argsstring>()</argsstring>
        <name>show</name>
        <qualifiedname>KWin::TabBox::TabBox::show</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notify effects that the tab box is being shown, and only display the default tab box QFrame if no effect has referenced the tab box. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="214" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="464" bodyend="475"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1a41bd565ec3abf42051b6d42ac0ff77a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::close</definition>
        <argsstring>(bool abort=false)</argsstring>
        <name>close</name>
        <qualifiedname>KWin::TabBox::TabBox::close</qualifiedname>
        <param>
          <type>bool</type>
          <declname>abort</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="215" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="992" bodyend="1003"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1a9aeebb8d321620597bd966fb02f7bfad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::accept</definition>
        <argsstring>(bool closeTabBox=true)</argsstring>
        <name>accept</name>
        <qualifiedname>KWin::TabBox::TabBox::accept</qualifiedname>
        <param>
          <type>bool</type>
          <declname>closeTabBox</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="216" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="1005" bodyend="1018"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1af68d90e0edf23629102c49e44bc28bad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::slotWalkThroughWindows</definition>
        <argsstring>()</argsstring>
        <name>slotWalkThroughWindows</name>
        <qualifiedname>KWin::TabBox::TabBox::slotWalkThroughWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="217" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="703" bodyend="706"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1ad43b9bc1d3fd7a722c27c1004fd49ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::slotWalkBackThroughWindows</definition>
        <argsstring>()</argsstring>
        <name>slotWalkBackThroughWindows</name>
        <qualifiedname>KWin::TabBox::TabBox::slotWalkBackThroughWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="218" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="708" bodyend="711"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1a580bd8263be1d31055aea4abb5b7b0b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::slotWalkThroughWindowsAlternative</definition>
        <argsstring>()</argsstring>
        <name>slotWalkThroughWindowsAlternative</name>
        <qualifiedname>KWin::TabBox::TabBox::slotWalkThroughWindowsAlternative</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="219" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="713" bodyend="716"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1abf4eaf2feb03a195732656aaeceff70b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::slotWalkBackThroughWindowsAlternative</definition>
        <argsstring>()</argsstring>
        <name>slotWalkBackThroughWindowsAlternative</name>
        <qualifiedname>KWin::TabBox::TabBox::slotWalkBackThroughWindowsAlternative</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="220" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="718" bodyend="721"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1a5e314de683bb534c283a90480cd0faa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::slotWalkThroughCurrentAppWindows</definition>
        <argsstring>()</argsstring>
        <name>slotWalkThroughCurrentAppWindows</name>
        <qualifiedname>KWin::TabBox::TabBox::slotWalkThroughCurrentAppWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="221" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="723" bodyend="726"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1a448b459bc3a11feea6ebf2f0e1301c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::slotWalkBackThroughCurrentAppWindows</definition>
        <argsstring>()</argsstring>
        <name>slotWalkBackThroughCurrentAppWindows</name>
        <qualifiedname>KWin::TabBox::TabBox::slotWalkBackThroughCurrentAppWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="222" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="728" bodyend="731"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1ac7a4406498fa07c8844ed20d9bf08027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::slotWalkThroughCurrentAppWindowsAlternative</definition>
        <argsstring>()</argsstring>
        <name>slotWalkThroughCurrentAppWindowsAlternative</name>
        <qualifiedname>KWin::TabBox::TabBox::slotWalkThroughCurrentAppWindowsAlternative</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="223" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="733" bodyend="736"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1ada514e4b9b2940cdcc2b07383fd16338" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::slotWalkBackThroughCurrentAppWindowsAlternative</definition>
        <argsstring>()</argsstring>
        <name>slotWalkBackThroughCurrentAppWindowsAlternative</name>
        <qualifiedname>KWin::TabBox::TabBox::slotWalkBackThroughCurrentAppWindowsAlternative</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="224" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="738" bodyend="741"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1a58214e7c8e65a191deb46d96c35505d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::handlerReady</definition>
        <argsstring>()</argsstring>
        <name>handlerReady</name>
        <qualifiedname>KWin::TabBox::TabBox::handlerReady</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="226" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="318" bodyend="323"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1a15b1c9b968686b6154bbc5925299b1d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::toggle</definition>
        <argsstring>(ElectricBorder eb)</argsstring>
        <name>toggle</name>
        <qualifiedname>KWin::TabBox::TabBox::toggle</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref></type>
          <declname>eb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="228" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="750" bodyend="757"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_tab_box_1_1_tab_box_1a022015d159ec1731e56daa8da6f40ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::tabBoxAdded</definition>
        <argsstring>(int)</argsstring>
        <name>tabBoxAdded</name>
        <qualifiedname>KWin::TabBox::TabBox::tabBoxAdded</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="231" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_tab_box_1_1_tab_box_1a9430e324f64ad9450044173df6d2d50e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::tabBoxClosed</definition>
        <argsstring>()</argsstring>
        <name>tabBoxClosed</name>
        <qualifiedname>KWin::TabBox::TabBox::tabBoxClosed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="232" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_tab_box_1_1_tab_box_1a72049c4cc4a44a9bc6309aa23be46e18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::tabBoxUpdated</definition>
        <argsstring>()</argsstring>
        <name>tabBoxUpdated</name>
        <qualifiedname>KWin::TabBox::TabBox::tabBoxUpdated</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="233" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_tab_box_1_1_tab_box_1ae9d066878e968c9aa360d40ad52a0638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::tabBoxKeyEvent</definition>
        <argsstring>(QKeyEvent *)</argsstring>
        <name>tabBoxKeyEvent</name>
        <qualifiedname>KWin::TabBox::TabBox::tabBoxKeyEvent</qualifiedname>
        <param>
          <type>QKeyEvent *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="234" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a89bf42b436b2299cf7cd8b92ea6e4d03" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::TabBox::TabBox::TabBox</definition>
        <argsstring>(QObject *parent)</argsstring>
        <name>TabBox</name>
        <qualifiedname>KWin::TabBox::TabBox::TabBox</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="244" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1ac60120bc52ef1ddeeae9f379b61a0531" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::loadConfig</definition>
        <argsstring>(const KConfigGroup &amp;config, TabBoxConfig &amp;tabBoxConfig)</argsstring>
        <name>loadConfig</name>
        <qualifiedname>KWin::TabBox::TabBox::loadConfig</qualifiedname>
        <param>
          <type>const KConfigGroup &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config" kindref="compound">TabBoxConfig</ref> &amp;</type>
          <declname>tabBoxConfig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="245" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="553" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1acd3af1b94a85fe71434581dfb223c4cc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::startKDEWalkThroughWindows</definition>
        <argsstring>(bool forward, TabBoxMode mode)</argsstring>
        <name>startKDEWalkThroughWindows</name>
        <qualifiedname>KWin::TabBox::TabBox::startKDEWalkThroughWindows</qualifiedname>
        <param>
          <type>bool</type>
          <declname>forward</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="247" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="782" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a26952f19bd01c907be9e23fa5df6ec78" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::navigatingThroughWindows</definition>
        <argsstring>(bool forward, const QKeySequence &amp;shortcut, TabBoxMode mode)</argsstring>
        <name>navigatingThroughWindows</name>
        <qualifiedname>KWin::TabBox::TabBox::navigatingThroughWindows</qualifiedname>
        <param>
          <type>bool</type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const QKeySequence &amp;</type>
          <declname>shortcut</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="248" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="683" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1ad02afc11dc1e8e8f46cebe2a1d2c3c03" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::KDEWalkThroughWindows</definition>
        <argsstring>(bool forward)</argsstring>
        <name>KDEWalkThroughWindows</name>
        <qualifiedname>KWin::TabBox::TabBox::KDEWalkThroughWindows</qualifiedname>
        <param>
          <type>bool</type>
          <declname>forward</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="249" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="805" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a0fe3470f2891d14119411781c1d1577c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::CDEWalkThroughWindows</definition>
        <argsstring>(bool forward)</argsstring>
        <name>CDEWalkThroughWindows</name>
        <qualifiedname>KWin::TabBox::TabBox::CDEWalkThroughWindows</qualifiedname>
        <param>
          <type>bool</type>
          <declname>forward</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="250" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="810" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1adcc8f80e300fdff7e87a617f4acafcbd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::KDEOneStepThroughWindows</definition>
        <argsstring>(bool forward, TabBoxMode mode)</argsstring>
        <name>KDEOneStepThroughWindows</name>
        <qualifiedname>KWin::TabBox::TabBox::KDEOneStepThroughWindows</qualifiedname>
        <param>
          <type>bool</type>
          <declname>forward</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="251" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="865" bodyend="878"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a85fa7aba67c6ca49903a8dcdba13a7cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::establishTabBoxGrab</definition>
        <argsstring>()</argsstring>
        <name>establishTabBoxGrab</name>
        <qualifiedname>KWin::TabBox::TabBox::establishTabBoxGrab</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="252" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="1090" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a753dc06032de4108952bea44cf199e32" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::removeTabBoxGrab</definition>
        <argsstring>()</argsstring>
        <name>removeTabBoxGrab</name>
        <qualifiedname>KWin::TabBox::TabBox::removeTabBoxGrab</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="253" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="1096" bodyend="1099"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a618f298575bce6dc3b8f97749dad6bb2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Slot</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::key</definition>
        <argsstring>(const KLazyLocalizedString &amp;actionName, Slot slot, const QKeySequence &amp;shortcut=QKeySequence())</argsstring>
        <name>key</name>
        <qualifiedname>KWin::TabBox::TabBox::key</qualifiedname>
        <param>
          <type>const KLazyLocalizedString &amp;</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>Slot</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>const QKeySequence &amp;</type>
          <declname>shortcut</declname>
          <defval>QKeySequence()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="255" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="326" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1ab313cb85d0a67ba241807b30334ee5f7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Direction</type>
        <definition>TabBox::Direction KWin::TabBox::TabBox::matchShortcuts</definition>
        <argsstring>(const KeyboardKeyEvent &amp;keyEvent, const QKeySequence &amp;forward, const QKeySequence &amp;backward) const</argsstring>
        <name>matchShortcuts</name>
        <qualifiedname>KWin::TabBox::TabBox::matchShortcuts</qualifiedname>
        <param>
          <type>const <ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref> &amp;</type>
          <declname>keyEvent</declname>
        </param>
        <param>
          <type>const QKeySequence &amp;</type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const QKeySequence &amp;</type>
          <declname>backward</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="257" column="15" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="883" bodyend="926"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a955bb47364a37b9491e725ac9903b52d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::shadeActivate</definition>
        <argsstring>(Window *c)</argsstring>
        <name>shadeActivate</name>
        <qualifiedname>KWin::TabBox::TabBox::shadeActivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="259" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="743" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_tab_box_1_1_tab_box_1a1dab4e3e63854fd483ce9d9401c68aa6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TabBox::TabBox::toggleMode</definition>
        <argsstring>(TabBoxMode mode)</argsstring>
        <name>toggleMode</name>
        <qualifiedname>KWin::TabBox::TabBox::toggleMode</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="261" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="759" bodyend="780"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1a41f0b03bdbc8ee13f706c02e4ab06e07" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::reconfigure</definition>
        <argsstring>()</argsstring>
        <name>reconfigure</name>
        <qualifiedname>KWin::TabBox::TabBox::reconfigure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="264" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="491" bodyend="551"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_tab_box_1_1_tab_box_1af58746ddeb08b5af62fe41e8c651203f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TabBox::TabBox::globalShortcutChanged</definition>
        <argsstring>(QAction *action, const QKeySequence &amp;seq)</argsstring>
        <name>globalShortcutChanged</name>
        <qualifiedname>KWin::TabBox::TabBox::globalShortcutChanged</qualifiedname>
        <param>
          <type>QAction *</type>
          <declname>action</declname>
        </param>
        <param>
          <type>const QKeySequence &amp;</type>
          <declname>seq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="265" column="10" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="361" bodyend="380"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::TabBox::TabBox</label>
        <link refid="class_k_win_1_1_tab_box_1_1_tab_box"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::TabBox::TabBox</label>
        <link refid="class_k_win_1_1_tab_box_1_1_tab_box"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/tabbox/tabbox.h" line="75" column="1" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="76" bodyend="294"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9aeebb8d321620597bd966fb02f7bfad" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>accept</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a784c776cd9e9a887f88de787528555c7a40790d2e8a1f00a4658543b6f244ef7a" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>Backward</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a0fe3470f2891d14119411781c1d1577c" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>CDEWalkThroughWindows</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a41bd565ec3abf42051b6d42ac0ff77a2" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>close</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1270973ac95a0838dabebf8586a9620e" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>currentClient</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a0c1cfe552fa9c27dd247ab1a03e1b974" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>currentClientList</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9713d69ae30759f385f97a4887dd07b6" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>delayedShow</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a784c776cd9e9a887f88de787528555c7" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>Direction</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a85fa7aba67c6ca49903a8dcdba13a7cf" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>establishTabBoxGrab</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ad16403a5a01630c56195df27728411d8" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>forcedGlobalMouseGrab</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a784c776cd9e9a887f88de787528555c7ab4fa703c62f582c1448c5905db073604" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>Forward</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1af58746ddeb08b5af62fe41e8c651203f" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>globalShortcutChanged</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a42a5978bc78f1d591b6830cf143414f0" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>grabbedKeyEvent</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a044023f866a56da6a8db9490ecd9b607" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>handleMouseEvent</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a58214e7c8e65a191deb46d96c35505d2" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>handlerReady</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1af6940f8ece1b04922f09d10d08e016e2" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>handleWheelEvent</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ada984cbde4fba1227c92bd18fb33fabd" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>haveActiveClient</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a47cde82c2861bc24c4e8bbd693195722" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>hide</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1911fdd0f5f4aee1b62876be79168bf1" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>initShortcuts</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae972b83e5b098c615c3829441f6cc4a7" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>isDisplayed</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1af37c6de753dc28184d118afe16567235" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>isGrabbed</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac9919059a58744ab24de159e0cdad016" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>isShown</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1adcc8f80e300fdff7e87a617f4acafcbd" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>KDEOneStepThroughWindows</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ad02afc11dc1e8e8f46cebe2a1d2c3c03" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>KDEWalkThroughWindows</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a618f298575bce6dc3b8f97749dad6bb2" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>key</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a6bb74e5274e1138a6b1e175169572b37" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>keyPress</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac60120bc52ef1ddeeae9f379b61a0531" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>loadConfig</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a2e9e1128b6383d5e3127536c43fb77be" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_alternativeConfig</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae9991922e951d55a543a2b8b9fc1e446" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_alternativeCurrentApplicationConfig</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a82d1308215a294c657fb3b378370258a" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_borderActivate</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a7a195703d3449bee7f1a315037f50495" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_borderAlternativeActivate</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a0e3debe0db5285c9c4306f08acdd435e" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_cutWalkThroughCurrentAppWindows</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a85682cc4cdcebec14857d22b99874481" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_cutWalkThroughCurrentAppWindowsAlternative</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1edbcec83598d081c4e331bb373bbb01" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_cutWalkThroughCurrentAppWindowsAlternativeReverse</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1afaeb585ef3009597012384e49c070bed" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_cutWalkThroughCurrentAppWindowsReverse</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a7662ed9b16cefd544b0cadd9cb71e0e8" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_cutWalkThroughWindows</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a0e568735c29a0367fc50b17afb82a57e" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_cutWalkThroughWindowsAlternative</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a8d06a78c5c96c8527f8082d9769401a4" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_cutWalkThroughWindowsAlternativeReverse</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1aaa4c86915fa5feeddca7838700ba6510" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_cutWalkThroughWindowsReverse</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1120b96bdba08a78ebdb34264fbb5b3e" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_defaultConfig</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a2b673827e870a70b4c10b755e85f96da" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_defaultCurrentApplicationConfig</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a0868036aa4ed933110d70aed09b30879" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_delayedShowTimer</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a43cd561be8b7b463e7d2714a48f848fd" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_delayShowTime</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9c3350aea582ba099b3e07827a969eb1" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_displayRefcount</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a68405e8ee6ed05cd3b6729459994d7d7" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_forcedGlobalMouseGrab</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a64faa3e6d67cd7e2bae2d2971c822a4c" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_isShown</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1acdec001d0be400c766aeec0d5a4c188f" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_noModifierGrab</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1abb177eb48aca16544494a176a2a313d5" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_ready</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a8fea8932521f5b8b0011cc4d2665f353" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_tabBox</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac297977e13488d8df03d414856f8e8de" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_tabBoxMode</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ab4f702202af8228ba1cd4f327fba410c" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_tabGrab</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a974dab67254474a44fe056755a0d8405" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_touchActivate</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a27c1a676c3d627cbd6b5eb9c6822d876" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>m_touchAlternativeActivate</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ab313cb85d0a67ba241807b30334ee5f7" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>matchShortcuts</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1694b3795ef31994277cdbb9d81c720d" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>mode</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1adcf36925d1fd17bda4b322b65307f98b" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>modifiersReleased</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a26952f19bd01c907be9e23fa5df6ec78" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>navigatingThroughWindows</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1aa01ab3c6f409e418fca2cdd06336923f" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>nextClientStatic</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a976ba90bacc25d52de18cd6dbd21cc99" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>nextPrev</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1afe6eb6fe95cfc28217b8349c74a9b2fe" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>noModifierGrab</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a0bbba9bd3346afdb2fbf3ce0130e0035" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>previousClientStatic</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a41f0b03bdbc8ee13f706c02e4ab06e07" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>reconfigure</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac173f2e2fd4c113fb54e8e498421ec69" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>reference</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a753dc06032de4108952bea44cf199e32" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>removeTabBoxGrab</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a8024cc72a79cf75e9c14d51625c81daa" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>reset</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae690d9ca9e66276dffe3f3d24c822724" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>setCurrentClient</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a497aa38f460da818b9b1cb4511e46869" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>setCurrentIndex</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1adca588625750805b2c37a809802d2f21" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>setMode</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a955bb47364a37b9491e725ac9903b52d" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>shadeActivate</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a5da0ce76634cee59670bea4d03e9991f" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>show</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a448b459bc3a11feea6ebf2f0e1301c69" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>slotWalkBackThroughCurrentAppWindows</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ada514e4b9b2940cdcc2b07383fd16338" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>slotWalkBackThroughCurrentAppWindowsAlternative</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ad43b9bc1d3fd7a722c27c1004fd49ec9" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>slotWalkBackThroughWindows</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1abf4eaf2feb03a195732656aaeceff70b" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>slotWalkBackThroughWindowsAlternative</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a5e314de683bb534c283a90480cd0faa7" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>slotWalkThroughCurrentAppWindows</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac7a4406498fa07c8844ed20d9bf08027" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>slotWalkThroughCurrentAppWindowsAlternative</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1af68d90e0edf23629102c49e44bc28bad" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>slotWalkThroughWindows</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a580bd8263be1d31055aea4abb5b7b0b6" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>slotWalkThroughWindowsAlternative</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1acd3af1b94a85fe71434581dfb223c4cc" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>startKDEWalkThroughWindows</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a784c776cd9e9a887f88de787528555c7a541f9261e6b380587cb629a66473413c" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>Steady</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1af27a8e5e780c886362d2e4f760dd173b" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>TabBox</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a89bf42b436b2299cf7cd8b92ea6e4d03" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>TabBox</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a022015d159ec1731e56daa8da6f40ea1" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>tabBoxAdded</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9430e324f64ad9450044173df6d2d50e" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>tabBoxClosed</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae9d066878e968c9aa360d40ad52a0638" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>tabBoxKeyEvent</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a72049c4cc4a44a9bc6309aa23be46e18" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>tabBoxUpdated</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a15b1c9b968686b6154bbc5925299b1d2" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>toggle</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1dab4e3e63854fd483ce9d9401c68aa6" prot="private" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>toggleMode</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1af10109f1391136a17bfa79fb8260108f" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>unreference</name></member>
      <member refid="class_k_win_1_1_tab_box_1_1_tab_box_1a26dca575c025308d0841dcc0eb61c9c1" prot="public" virt="non-virtual"><scope>KWin::TabBox::TabBox</scope><name>~TabBox</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
