<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="virtualdesktopsdbustypes_8cpp" kind="file" language="C++">
    <compoundname>virtualdesktopsdbustypes.cpp</compoundname>
    <includes refid="virtualdesktopsdbustypes_8h" local="yes">virtualdesktopsdbustypes.h</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/virtualdesktopsdbustypes.cpp</label>
        <link refid="virtualdesktopsdbustypes_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>virtualdesktopsdbustypes.h</label>
        <link refid="virtualdesktopsdbustypes_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>QDBusArgument</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="virtualdesktopsdbustypes_8cpp_1a3a5e68002697c323a14c976969e75ef2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QDBusArgument &amp;</type>
        <definition>const QDBusArgument &amp; operator&lt;&lt;</definition>
        <argsstring>(QDBusArgument &amp;argument, const KWin::DBusDesktopDataStruct &amp;desk)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>QDBusArgument &amp;</type>
          <declname>argument</declname>
        </param>
        <param>
          <type>const <ref refid="struct_k_win_1_1_d_bus_desktop_data_struct" kindref="compound">KWin::DBusDesktopDataStruct</ref> &amp;</type>
          <declname>desk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktopsdbustypes.cpp" line="14" column="7" bodyfile="kwin/src/virtualdesktopsdbustypes.cpp" bodystart="14" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="virtualdesktopsdbustypes_8cpp_1aecf52c2ac116087d5338108f80a69fd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QDBusArgument &amp;</type>
        <definition>const QDBusArgument &amp; operator&gt;&gt;</definition>
        <argsstring>(const QDBusArgument &amp;argument, KWin::DBusDesktopDataStruct &amp;desk)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>const QDBusArgument &amp;</type>
          <declname>argument</declname>
        </param>
        <param>
          <type><ref refid="struct_k_win_1_1_d_bus_desktop_data_struct" kindref="compound">KWin::DBusDesktopDataStruct</ref> &amp;</type>
          <declname>desk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktopsdbustypes.cpp" line="24" column="21" bodyfile="kwin/src/virtualdesktopsdbustypes.cpp" bodystart="24" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="virtualdesktopsdbustypes_8cpp_1a129494d55f393e133d1ab0861d61a99c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QDBusArgument &amp;</type>
        <definition>const QDBusArgument &amp; operator&lt;&lt;</definition>
        <argsstring>(QDBusArgument &amp;argument, const KWin::DBusDesktopDataVector &amp;deskVector)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>QDBusArgument &amp;</type>
          <declname>argument</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_k_win_1a462eec72df279c1e20733e203f83fdf4" kindref="member">KWin::DBusDesktopDataVector</ref> &amp;</type>
          <declname>deskVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktopsdbustypes.cpp" line="34" column="7" bodyfile="kwin/src/virtualdesktopsdbustypes.cpp" bodystart="34" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="virtualdesktopsdbustypes_8cpp_1ad0c8f37d86e3897d4c6168abaa014c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QDBusArgument &amp;</type>
        <definition>const QDBusArgument &amp; operator&gt;&gt;</definition>
        <argsstring>(const QDBusArgument &amp;argument, KWin::DBusDesktopDataVector &amp;deskVector)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>const QDBusArgument &amp;</type>
          <declname>argument</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a462eec72df279c1e20733e203f83fdf4" kindref="member">KWin::DBusDesktopDataVector</ref> &amp;</type>
          <declname>deskVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktopsdbustypes.cpp" line="44" column="21" bodyfile="kwin/src/virtualdesktopsdbustypes.cpp" bodystart="44" bodyend="58"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2018<sp/>Marco<sp/>Martin<sp/>&lt;mart@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>own</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="virtualdesktopsdbustypes_8h" kindref="compound">virtualdesktopsdbustypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Marshall<sp/>the<sp/>DBusDesktopDataStruct<sp/>data<sp/>into<sp/>a<sp/>D-BUS<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="virtualdesktopsdbustypes_8cpp_1a3a5e68002697c323a14c976969e75ef2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDBusArgument<sp/>&amp;<ref refid="virtualdesktopsdbustypes_8cpp_1a3a5e68002697c323a14c976969e75ef2" kindref="member">operator&lt;&lt;</ref>(QDBusArgument<sp/>&amp;argument,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_d_bus_desktop_data_struct" kindref="compound">KWin::DBusDesktopDataStruct</ref><sp/>&amp;desk)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>argument.beginStructure();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>argument<sp/>&lt;&lt;<sp/>desk.<ref refid="struct_k_win_1_1_d_bus_desktop_data_struct_1aede3fd29e4461f6446800e4ee3299f64" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>argument<sp/>&lt;&lt;<sp/>desk.<ref refid="struct_k_win_1_1_d_bus_desktop_data_struct_1acd7a4326de663d1047306affb6334931" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>argument<sp/>&lt;&lt;<sp/>desk.<ref refid="struct_k_win_1_1_d_bus_desktop_data_struct_1ad1abe4af3b591dba34fbb946d600008e" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>argument.endStructure();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argument;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retrieve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="virtualdesktopsdbustypes_8cpp_1aecf52c2ac116087d5338108f80a69fd9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDBusArgument<sp/>&amp;<ref refid="virtualdesktopsdbustypes_8cpp_1aecf52c2ac116087d5338108f80a69fd9" kindref="member">operator&gt;&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDBusArgument<sp/>&amp;argument,<sp/><ref refid="struct_k_win_1_1_d_bus_desktop_data_struct" kindref="compound">KWin::DBusDesktopDataStruct</ref><sp/>&amp;desk)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>argument.beginStructure();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>argument<sp/>&gt;&gt;<sp/>desk.<ref refid="struct_k_win_1_1_d_bus_desktop_data_struct_1aede3fd29e4461f6446800e4ee3299f64" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>argument<sp/>&gt;&gt;<sp/>desk.<ref refid="struct_k_win_1_1_d_bus_desktop_data_struct_1acd7a4326de663d1047306affb6334931" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>argument<sp/>&gt;&gt;<sp/>desk.<ref refid="struct_k_win_1_1_d_bus_desktop_data_struct_1ad1abe4af3b591dba34fbb946d600008e" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>argument.endStructure();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argument;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="virtualdesktopsdbustypes_8cpp_1a129494d55f393e133d1ab0861d61a99c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDBusArgument<sp/>&amp;<ref refid="virtualdesktopsdbustypes_8cpp_1a3a5e68002697c323a14c976969e75ef2" kindref="member">operator&lt;&lt;</ref>(QDBusArgument<sp/>&amp;argument,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a462eec72df279c1e20733e203f83fdf4" kindref="member">KWin::DBusDesktopDataVector</ref><sp/>&amp;deskVector)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>argument.beginArray(qMetaTypeId&lt;KWin::DBusDesktopDataStruct&gt;());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>deskVector.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argument<sp/>&lt;&lt;<sp/>deskVector[i];</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>argument.endArray();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argument;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="virtualdesktopsdbustypes_8cpp_1ad0c8f37d86e3897d4c6168abaa014c05" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDBusArgument<sp/>&amp;<ref refid="virtualdesktopsdbustypes_8cpp_1aecf52c2ac116087d5338108f80a69fd9" kindref="member">operator&gt;&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDBusArgument<sp/>&amp;argument,<sp/><ref refid="namespace_k_win_1a462eec72df279c1e20733e203f83fdf4" kindref="member">KWin::DBusDesktopDataVector</ref><sp/>&amp;deskVector)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>argument.beginArray();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>deskVector.clear();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!argument.atEnd())<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_d_bus_desktop_data_struct" kindref="compound">KWin::DBusDesktopDataStruct</ref><sp/>element;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argument<sp/>&gt;&gt;<sp/>element;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deskVector.append(element);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>argument.endArray();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argument;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/virtualdesktopsdbustypes.cpp"/>
  </compounddef>
</doxygen>
