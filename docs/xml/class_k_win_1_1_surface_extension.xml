<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_surface_extension" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>KWin::SurfaceExtension</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="surface_8h" local="no">surface.h</includes>
    <templateparamlist>
      <param>
        <type>typename Commit</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" prot="public" static="no" mutable="no">
        <type>Commit</type>
        <definition>Commit KWin::SurfaceExtension&lt; Commit &gt;::pending</definition>
        <argsstring></argsstring>
        <name>pending</name>
        <qualifiedname>KWin::SurfaceExtension::pending</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface.h" line="481" column="12" bodyfile="kwin/src/wayland/surface.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_surface_extension_1a8da10b95bcea16f5b41b785727d56814" prot="public" static="no" mutable="no">
        <type>QMap&lt; quint32, Commit &gt;</type>
        <definition>QMap&lt;quint32, Commit&gt; KWin::SurfaceExtension&lt; Commit &gt;::stashed</definition>
        <argsstring></argsstring>
        <name>stashed</name>
        <qualifiedname>KWin::SurfaceExtension::stashed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface.h" line="482" column="10" bodyfile="kwin/src/wayland/surface.h" bodystart="482" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_surface_extension_1a6206b89a2aff7f9a1c8272e6a040243a" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::SurfaceExtension&lt; Commit &gt;::SurfaceExtension</definition>
        <argsstring>(SurfaceInterface *surface)</argsstring>
        <name>SurfaceExtension</name>
        <qualifiedname>KWin::SurfaceExtension::SurfaceExtension</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface.h" line="473" column="14" bodyfile="kwin/src/wayland/surface.h" bodystart="473" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_extension_1a89296c07d3f7183d13c1c872c1e1650d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void KWin::SurfaceExtension&lt; Commit &gt;::apply</definition>
        <argsstring>(Commit *commit)=0</argsstring>
        <name>apply</name>
        <qualifiedname>KWin::SurfaceExtension::apply</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_confined_pointer_v1_interface_private_1acb7926a26a3a677186e482fb67e48deb">apply</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_layer_surface_v1_interface_private_1a482fb4d30368f0b466aed6ec2a6161dc">apply</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_locked_pointer_v1_interface_private_1a76b1e0fadc1eed81ba2781b5c292f542">apply</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_plasma_shell_surface_interface_private_1ac75982572bac726ee9780847b8cfef2b">apply</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_xdg_popup_interface_private_1aedd086836c0edc7798b7ff54aff2d595">apply</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_xdg_toplevel_interface_private_1a16e2ddecc24c43eb2ef419c46a2babd5">apply</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_xwayland_surface_v1_interface_private_1a1acfcfb7bb972fff88465365dbde64a6">apply</reimplementedby>
        <param>
          <type>Commit *</type>
          <declname>commit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface.h" line="479" column="18"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_surface_extension_1af22e1e0e42492d7cc2e7fbbb32ad1acd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceExtension&lt; Commit &gt;::stashState</definition>
        <argsstring>(quint32 serial)</argsstring>
        <name>stashState</name>
        <qualifiedname>KWin::SurfaceExtension::stashState</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface.h" line="485" column="10" bodyfile="kwin/src/wayland/surface.h" bodystart="485" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_surface_extension_1a662a3fca8d248ccedaac6874b51b6895" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SurfaceExtension&lt; Commit &gt;::applyState</definition>
        <argsstring>(quint32 serial)</argsstring>
        <name>applyState</name>
        <qualifiedname>KWin::SurfaceExtension::applyState</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/surface.h" line="491" column="10" bodyfile="kwin/src/wayland/surface.h" bodystart="491" bodyend="503"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_surface_extension" kindref="compound">SurfaceExtension</ref> class is the base class for wl_surface extensions. The <ref refid="class_k_win_1_1_surface_extension" kindref="compound">SurfaceExtension</ref> helps with managing extension state and keeping it in sync with the surface state. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::SurfaceExtension&lt; Commit &gt;</label>
        <link refid="class_k_win_1_1_surface_extension"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::SurfaceExtension&lt; Commit &gt;</label>
        <link refid="class_k_win_1_1_surface_extension"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/surface.h" line="470" column="1" bodyfile="kwin/src/wayland/surface.h" bodystart="471" bodyend="504"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_surface_extension_1a89296c07d3f7183d13c1c872c1e1650d" prot="public" virt="pure-virtual"><scope>KWin::SurfaceExtension</scope><name>apply</name></member>
      <member refid="class_k_win_1_1_surface_extension_1a662a3fca8d248ccedaac6874b51b6895" prot="private" virt="non-virtual"><scope>KWin::SurfaceExtension</scope><name>applyState</name></member>
      <member refid="class_k_win_1_1_surface_extension_1ae7fbf78e0e497576115103c8118df23a" prot="public" virt="non-virtual"><scope>KWin::SurfaceExtension</scope><name>pending</name></member>
      <member refid="class_k_win_1_1_surface_extension_1a8da10b95bcea16f5b41b785727d56814" prot="public" virt="non-virtual"><scope>KWin::SurfaceExtension</scope><name>stashed</name></member>
      <member refid="class_k_win_1_1_surface_extension_1af22e1e0e42492d7cc2e7fbbb32ad1acd" prot="private" virt="non-virtual"><scope>KWin::SurfaceExtension</scope><name>stashState</name></member>
      <member refid="class_k_win_1_1_surface_extension_1a6206b89a2aff7f9a1c8272e6a040243a" prot="public" virt="non-virtual"><scope>KWin::SurfaceExtension</scope><name>SurfaceExtension</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
