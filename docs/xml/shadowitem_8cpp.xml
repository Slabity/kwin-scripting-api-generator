<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="shadowitem_8cpp" kind="file" language="C++">
    <compoundname>shadowitem.cpp</compoundname>
    <includes refid="shadowitem_8h" local="yes">scene/shadowitem.h</includes>
    <includes local="yes">compositor.h</includes>
    <includes refid="workspacescene_8h" local="yes">scene/workspacescene.h</includes>
    <includes local="yes">shadow.h</includes>
    <includes local="yes">window.h</includes>
    <includes local="yes">moc_shadowitem.cpp</includes>
    <incdepgraph>
      <node id="4">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>core/renderlayerdelegate.h</label>
        <link refid="renderlayerdelegate_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>scene/item.h</label>
        <link refid="item_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>scene/itemgeometry.h</label>
        <link refid="itemgeometry_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>scene/scene.h</label>
        <link refid="scene_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/scene/shadowitem.cpp</label>
        <link refid="shadowitem_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>scene/shadowitem.h</label>
        <link refid="shadowitem_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>scene/workspacescene.h</label>
        <link refid="workspacescene_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>QColor</label>
      </node>
      <node id="11">
        <label>QCoreApplication</label>
      </node>
      <node id="12">
        <label>QImage</label>
      </node>
      <node id="22">
        <label>QList</label>
      </node>
      <node id="6">
        <label>QMatrix4x4</label>
      </node>
      <node id="23">
        <label>QObject</label>
      </node>
      <node id="13">
        <label>QPoint</label>
      </node>
      <node id="24">
        <label>QPointer</label>
      </node>
      <node id="18">
        <label>QRegion</label>
      </node>
      <node id="25">
        <label>QTransform</label>
      </node>
      <node id="14">
        <label>QVariant</label>
      </node>
      <node id="7">
        <label>QVector2D</label>
      </node>
      <node id="30">
        <label>chrono</label>
      </node>
      <node id="26">
        <label>compositor.h</label>
      </node>
      <node id="10">
        <label>config-kwin.h</label>
      </node>
      <node id="19">
        <label>epoxy/gl.h</label>
      </node>
      <node id="8">
        <label>kwin_export.h</label>
      </node>
      <node id="31">
        <label>memory</label>
      </node>
      <node id="34">
        <label>moc_shadowitem.cpp</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="20">
        <label>ranges</label>
      </node>
      <node id="32">
        <label>shadow.h</label>
      </node>
      <node id="21">
        <label>span</label>
      </node>
      <node id="33">
        <label>window.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shadowitem_8h" kindref="compound">scene/shadowitem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compositor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspacescene_8h" kindref="compound">scene/workspacescene.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shadow.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_k_win_1_1_shadow_texture_provider_1ac7561751e26c54e1f535ae4211fffd3a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_shadow_texture_provider_1ac7561751e26c54e1f535ae4211fffd3a" kindref="member">ShadowTextureProvider::ShadowTextureProvider</ref>(<ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref><sp/>*<ref refid="class_k_win_1_1_shadow_texture_provider_1afa381d8ba759cd5ecacd1c9a65546d7f" kindref="member">shadow</ref>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_shadow_texture_provider_1a1a6542fbd5d0ec08360149c593df06b1" kindref="member">m_shadow</ref>(<ref refid="class_k_win_1_1_shadow_texture_provider_1afa381d8ba759cd5ecacd1c9a65546d7f" kindref="member">shadow</ref>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_k_win_1_1_shadow_texture_provider_1a1bc05f45eb5b016b406cfc7ad4a656fa" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_shadow_texture_provider_1a1bc05f45eb5b016b406cfc7ad4a656fa" kindref="member">ShadowTextureProvider::~ShadowTextureProvider</ref>()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_k_win_1_1_shadow_item_1a48e6ac04f31b993cff60a45a773e1acf" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_shadow_item_1a48e6ac04f31b993cff60a45a773e1acf" kindref="member">ShadowItem::ShadowItem</ref>(<ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref><sp/>*<ref refid="class_k_win_1_1_shadow_item_1a2a3fc68b1d8cd2c302ba3f7ec651e501" kindref="member">shadow</ref>,<sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window,<sp/><ref refid="class_k_win_1_1_item_1ab87c45c078db860d6ffd118ecdd7843a" kindref="member">Item</ref><sp/>*parent)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_item_1ab87c45c078db860d6ffd118ecdd7843a" kindref="member">Item</ref>(parent)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_window(window)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_shadow(<ref refid="class_k_win_1_1_shadow_item_1a2a3fc68b1d8cd2c302ba3f7ec651e501" kindref="member">shadow</ref>)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_textureProvider(<ref refid="class_k_win_1_1_compositor" kindref="compound">Compositor</ref>::self()-&gt;<ref refid="class_k_win_1_1_item_1a28ece053baba86da188cc6f0e580ca8c" kindref="member">scene</ref>()-&gt;createShadowTextureProvider(<ref refid="class_k_win_1_1_shadow_item_1a2a3fc68b1d8cd2c302ba3f7ec651e501" kindref="member">shadow</ref>))</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_shadow_item_1a2a3fc68b1d8cd2c302ba3f7ec651e501" kindref="member">shadow</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_shadow_1abf462b1f35a3343ebada81185e2ae1c7" kindref="member">Shadow::offsetChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ShadowItem::updateGeometry);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_shadow_item_1a2a3fc68b1d8cd2c302ba3f7ec651e501" kindref="member">shadow</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_shadow_1a9f74ec796bb63752ed36fed1b551f2da" kindref="member">Shadow::rectChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ShadowItem::updateGeometry);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_shadow_item_1a2a3fc68b1d8cd2c302ba3f7ec651e501" kindref="member">shadow</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_shadow_1a288716f59c12053e2b802890b579e105" kindref="member">Shadow::textureChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ShadowItem::handleTextureChanged);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>updateGeometry();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>handleTextureChanged();</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_k_win_1_1_shadow_item_1a65a605a81205d59de75012ab086e0bb8" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_shadow_item_1a65a605a81205d59de75012ab086e0bb8" kindref="member">ShadowItem::~ShadowItem</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_k_win_1_1_shadow_item_1a2a3fc68b1d8cd2c302ba3f7ec651e501" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_shadow" kindref="compound">Shadow</ref><sp/>*<ref refid="class_k_win_1_1_shadow_item_1a2a3fc68b1d8cd2c302ba3f7ec651e501" kindref="member">ShadowItem::shadow</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="44"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_shadow;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_k_win_1_1_shadow_item_1a7a39c3c65587e5c0d103de741976cd7f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_shadow_texture_provider" kindref="compound">ShadowTextureProvider</ref><sp/>*<ref refid="class_k_win_1_1_shadow_item_1a7a39c3c65587e5c0d103de741976cd7f" kindref="member">ShadowItem::textureProvider</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="49"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_textureProvider.get();</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ShadowItem::updateGeometry()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/><ref refid="class_k_win_1_1_item_1a6e9ab7045e27f6d1aa1d023234c5f5ff" kindref="member">rect</ref><sp/>=<sp/>m_shadow-&gt;<ref refid="class_k_win_1_1_shadow_1a054064163d85fecb250fca585b534e69" kindref="member">rect</ref>()<sp/>+<sp/>m_shadow-&gt;<ref refid="class_k_win_1_1_shadow_1ac1e01c6794723cee09a2d3da7af2807c" kindref="member">offset</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1addfb9f3bc08701f6856e025d2b8dfd66" kindref="member">setPosition</ref>(<ref refid="class_k_win_1_1_item_1a6e9ab7045e27f6d1aa1d023234c5f5ff" kindref="member">rect</ref>.topLeft());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1aadbea3fa26cfec91732450904af7d54e" kindref="member">setSize</ref>(<ref refid="class_k_win_1_1_item_1a6e9ab7045e27f6d1aa1d023234c5f5ff" kindref="member">rect</ref>.size());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1ab79a5c5e8295377ef19c948d53ff158f" kindref="member">discardQuads</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ShadowItem::handleTextureChanged()</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1ad3ad797c32e96df4e9715cca925bc4e7" kindref="member">scheduleRepaint</ref>(<ref refid="class_k_win_1_1_item_1a6e9ab7045e27f6d1aa1d023234c5f5ff" kindref="member">rect</ref>());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1ab79a5c5e8295377ef19c948d53ff158f" kindref="member">discardQuads</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>m_textureDirty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>distributeHorizontally(QRectF<sp/>&amp;leftRect,<sp/>QRectF<sp/>&amp;rightRect)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leftRect.right()<sp/>&gt;<sp/>rightRect.left())<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>boundedRight<sp/>=<sp/>std::min(leftRect.right(),<sp/>rightRect.right());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>boundedLeft<sp/>=<sp/>std::max(leftRect.left(),<sp/>rightRect.left());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>halfOverlap<sp/>=<sp/>(boundedRight<sp/>-<sp/>boundedLeft)<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftRect.setRight(boundedRight<sp/>-<sp/>halfOverlap);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightRect.setLeft(boundedLeft<sp/>+<sp/>halfOverlap);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>distributeVertically(QRectF<sp/>&amp;topRect,<sp/>QRectF<sp/>&amp;bottomRect)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topRect.bottom()<sp/>&gt;<sp/>bottomRect.top())<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>boundedBottom<sp/>=<sp/>std::min(topRect.bottom(),<sp/>bottomRect.bottom());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>boundedTop<sp/>=<sp/>std::max(topRect.top(),<sp/>bottomRect.top());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>halfOverlap<sp/>=<sp/>(boundedBottom<sp/>-<sp/>boundedTop)<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topRect.setBottom(boundedBottom<sp/>-<sp/>halfOverlap);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomRect.setTop(boundedTop<sp/>+<sp/>halfOverlap);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_k_win_1_1_shadow_item_1ae8d0d8a7f5141ea15992f18ad4b683f4" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window_quad_list" kindref="compound">WindowQuadList</ref><sp/><ref refid="class_k_win_1_1_shadow_item_1ae8d0d8a7f5141ea15992f18ad4b683f4" kindref="member">ShadowItem::buildQuads</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="92"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>draw<sp/>shadows<sp/>if<sp/>window<sp/>width<sp/>or<sp/>window<sp/>height<sp/>is<sp/>less<sp/>than<sp/>5<sp/>px.<sp/>5<sp/>is<sp/>an<sp/>arbitrary<sp/>choice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_window-&gt;wantsShadowToBeRendered()<sp/>||<sp/>m_window-&gt;width()<sp/>&lt;<sp/>5<sp/>||<sp/>m_window-&gt;height()<sp/>&lt;<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_quad_list" kindref="compound">WindowQuadList</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>top(m_shadow-&gt;elementSize(<ref refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831adf6d4cf94e94501f18efe800939cd5f5" kindref="member">Shadow::ShadowElementTop</ref>));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>topRight(m_shadow-&gt;elementSize(<ref refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a3ccfa5250e10706982ba8d23c960ce57" kindref="member">Shadow::ShadowElementTopRight</ref>));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>right(m_shadow-&gt;elementSize(<ref refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a9042c7ebc60e2d179a7adb5214098d14" kindref="member">Shadow::ShadowElementRight</ref>));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>bottomRight(m_shadow-&gt;elementSize(<ref refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a671716b1a7650293de1a7cc23c89d03d" kindref="member">Shadow::ShadowElementBottomRight</ref>));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>bottom(m_shadow-&gt;elementSize(<ref refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831aeb4bdea8506dbc2aa86a2212e81ff0db" kindref="member">Shadow::ShadowElementBottom</ref>));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>bottomLeft(m_shadow-&gt;elementSize(<ref refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a63e6898faf6db63e22671774e01a105b" kindref="member">Shadow::ShadowElementBottomLeft</ref>));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>left(m_shadow-&gt;elementSize(<ref refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a1a5fe1c0bbccc5c840ba7fb03e2e5f92" kindref="member">Shadow::ShadowElementLeft</ref>));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>topLeft(m_shadow-&gt;elementSize(<ref refid="class_k_win_1_1_shadow_1a6a192b9550b29d4afc4fc35bafb34831a8f679b453d9c274d86c8bff56aaf8eeb" kindref="member">Shadow::ShadowElementTopLeft</ref>));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMarginsF<sp/>shadowMargins(</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max({topLeft.width(),<sp/>left.width(),<sp/>bottomLeft.width()}),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max({topLeft.height(),<sp/>top.height(),<sp/>topRight.height()}),</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max({topRight.width(),<sp/>right.width(),<sp/>bottomRight.width()}),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max({bottomRight.height(),<sp/>bottom.height(),<sp/>bottomLeft.height()}));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>outerRect<sp/>=<sp/><ref refid="class_k_win_1_1_item_1a6e9ab7045e27f6d1aa1d023234c5f5ff" kindref="member">rect</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>shadowMargins.left()<sp/>+<sp/>std::max(top.width(),<sp/>bottom.width())<sp/>+<sp/>shadowMargins.right();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>shadowMargins.top()<sp/>+<sp/>std::max(left.height(),<sp/>right.height())<sp/>+<sp/>shadowMargins.bottom();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>topLeftRect;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!topLeft.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topLeftRect<sp/>=<sp/>QRectF(outerRect.topLeft(),<sp/>topLeft);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topLeftRect<sp/>=<sp/>QRectF(outerRect.left()<sp/>+<sp/>shadowMargins.left(),</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerRect.top()<sp/>+<sp/>shadowMargins.top(),<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>topRightRect;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!topRight.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topRightRect<sp/>=<sp/>QRectF(outerRect.right()<sp/>-<sp/>topRight.width(),<sp/>outerRect.top(),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topRight.width(),<sp/>topRight.height());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topRightRect<sp/>=<sp/>QRectF(outerRect.right()<sp/>-<sp/>shadowMargins.right(),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerRect.top()<sp/>+<sp/>shadowMargins.top(),<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>bottomRightRect;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bottomRight.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomRightRect<sp/>=<sp/>QRectF(outerRect.right()<sp/>-<sp/>bottomRight.width(),</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerRect.bottom()<sp/>-<sp/>bottomRight.height(),</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomRight.width(),<sp/>bottomRight.height());</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomRightRect<sp/>=<sp/>QRectF(outerRect.right()<sp/>-<sp/>shadowMargins.right(),</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerRect.bottom()<sp/>-<sp/>shadowMargins.bottom(),<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>bottomLeftRect;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bottomLeft.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomLeftRect<sp/>=<sp/>QRectF(outerRect.left(),<sp/>outerRect.bottom()<sp/>-<sp/>bottomLeft.height(),</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomLeft.width(),<sp/>bottomLeft.height());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomLeftRect<sp/>=<sp/>QRectF(outerRect.left()<sp/>+<sp/>shadowMargins.left(),</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerRect.bottom()<sp/>-<sp/>shadowMargins.bottom(),<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-distribute<sp/>the<sp/>corner<sp/>tiles<sp/>so<sp/>no<sp/>one<sp/>of<sp/>them<sp/>is<sp/>overlapping<sp/>with<sp/>others.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>doing<sp/>this,<sp/>we<sp/>assume<sp/>that<sp/>shadow&apos;s<sp/>corner<sp/>tiles<sp/>are<sp/>symmetric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>it<sp/>is<sp/>OK<sp/>to<sp/>not<sp/>draw<sp/>top/right/bottom/left<sp/>tile<sp/>between<sp/>corners.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>let&apos;s<sp/>say<sp/>top-left<sp/>and<sp/>top-right<sp/>tiles<sp/>are<sp/>overlapping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>that<sp/>case,<sp/>the<sp/>right<sp/>side<sp/>of<sp/>the<sp/>top-left<sp/>tile<sp/>will<sp/>be<sp/>shifted<sp/>to<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>left<sp/>side<sp/>of<sp/>the<sp/>top-right<sp/>tile<sp/>will<sp/>shifted<sp/>to<sp/>right,<sp/>and<sp/>the<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tile<sp/>won&apos;t<sp/>be<sp/>rendered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>distributeHorizontally(topLeftRect,<sp/>topRightRect);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>distributeHorizontally(bottomLeftRect,<sp/>bottomRightRect);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>distributeVertically(topLeftRect,<sp/>bottomLeftRect);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>distributeVertically(topRightRect,<sp/>bottomRightRect);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>tx1<sp/>=<sp/>0.0,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx2<sp/>=<sp/>0.0,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty1<sp/>=<sp/>0.0,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_quad_list" kindref="compound">WindowQuadList</ref><sp/><ref refid="class_k_win_1_1_item_1a636cc0d032fc8813db966c4acdb3df50" kindref="member">quads</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1a636cc0d032fc8813db966c4acdb3df50" kindref="member">quads</ref>.reserve(8);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topLeftRect.isValid())<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx2<sp/>=<sp/>topLeftRect.width();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty2<sp/>=<sp/>topLeftRect.height();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_quad" kindref="compound">WindowQuad</ref><sp/>topLeftQuad;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topLeftQuad[0]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(topLeftRect.left(),<sp/>topLeftRect.top(),<sp/>tx1,<sp/>ty1);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topLeftQuad[1]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(topLeftRect.right(),<sp/>topLeftRect.top(),<sp/>tx2,<sp/>ty1);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topLeftQuad[2]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(topLeftRect.right(),<sp/>topLeftRect.bottom(),<sp/>tx2,<sp/>ty2);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topLeftQuad[3]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(topLeftRect.left(),<sp/>topLeftRect.bottom(),<sp/>tx1,<sp/>ty2);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1a636cc0d032fc8813db966c4acdb3df50" kindref="member">quads</ref>.append(topLeftQuad);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topRightRect.isValid())<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx1<sp/>=<sp/>width<sp/>-<sp/>topRightRect.width();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx2<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty2<sp/>=<sp/>topRightRect.height();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_quad" kindref="compound">WindowQuad</ref><sp/>topRightQuad;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topRightQuad[0]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(topRightRect.left(),<sp/>topRightRect.top(),<sp/>tx1,<sp/>ty1);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topRightQuad[1]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(topRightRect.right(),<sp/>topRightRect.top(),<sp/>tx2,<sp/>ty1);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topRightQuad[2]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(topRightRect.right(),<sp/>topRightRect.bottom(),<sp/>tx2,<sp/>ty2);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topRightQuad[3]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(topRightRect.left(),<sp/>topRightRect.bottom(),<sp/>tx1,<sp/>ty2);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1a636cc0d032fc8813db966c4acdb3df50" kindref="member">quads</ref>.append(topRightQuad);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottomRightRect.isValid())<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx1<sp/>=<sp/>width<sp/>-<sp/>bottomRightRect.width();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx2<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty1<sp/>=<sp/>height<sp/>-<sp/>bottomRightRect.height();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty2<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_quad" kindref="compound">WindowQuad</ref><sp/>bottomRightQuad;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomRightQuad[0]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(bottomRightRect.left(),<sp/>bottomRightRect.top(),<sp/>tx1,<sp/>ty1);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomRightQuad[1]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(bottomRightRect.right(),<sp/>bottomRightRect.top(),<sp/>tx2,<sp/>ty1);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomRightQuad[2]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(bottomRightRect.right(),<sp/>bottomRightRect.bottom(),<sp/>tx2,<sp/>ty2);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomRightQuad[3]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(bottomRightRect.left(),<sp/>bottomRightRect.bottom(),<sp/>tx1,<sp/>ty2);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1a636cc0d032fc8813db966c4acdb3df50" kindref="member">quads</ref>.append(bottomRightQuad);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottomLeftRect.isValid())<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx2<sp/>=<sp/>bottomLeftRect.width();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty1<sp/>=<sp/>height<sp/>-<sp/>bottomLeftRect.height();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty2<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_quad" kindref="compound">WindowQuad</ref><sp/>bottomLeftQuad;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomLeftQuad[0]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(bottomLeftRect.left(),<sp/>bottomLeftRect.top(),<sp/>tx1,<sp/>ty1);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomLeftQuad[1]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(bottomLeftRect.right(),<sp/>bottomLeftRect.top(),<sp/>tx2,<sp/>ty1);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomLeftQuad[2]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(bottomLeftRect.right(),<sp/>bottomLeftRect.bottom(),<sp/>tx2,<sp/>ty2);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomLeftQuad[3]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(bottomLeftRect.left(),<sp/>bottomLeftRect.bottom(),<sp/>tx1,<sp/>ty2);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1a636cc0d032fc8813db966c4acdb3df50" kindref="member">quads</ref>.append(bottomLeftQuad);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>topRect(QPointF(topLeftRect.right(),<sp/>outerRect.top()),</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPointF(topRightRect.left(),<sp/>outerRect.top()<sp/>+<sp/>top.height()));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>rightRect(QPointF(outerRect.right()<sp/>-<sp/>right.width(),<sp/>topRightRect.bottom()),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPointF(outerRect.right(),<sp/>bottomRightRect.top()));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>bottomRect(QPointF(bottomLeftRect.right(),<sp/>outerRect.bottom()<sp/>-<sp/>bottom.height()),</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPointF(bottomRightRect.left(),<sp/>outerRect.bottom()));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>leftRect(QPointF(outerRect.left(),<sp/>topLeftRect.bottom()),</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPointF(outerRect.left()<sp/>+<sp/>left.width(),<sp/>bottomLeftRect.top()));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-distribute<sp/>left/right<sp/>and<sp/>top/bottom<sp/>shadow<sp/>tiles<sp/>so<sp/>they<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overlap<sp/>when<sp/>the<sp/>window<sp/>is<sp/>too<sp/>small.<sp/>Please<sp/>notice<sp/>that<sp/>we<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fix<sp/>overlaps<sp/>between<sp/>left/top(left/bottom,<sp/>right/top,<sp/>and<sp/>so<sp/>on)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>corner<sp/>tiles<sp/>because<sp/>corresponding<sp/>counter<sp/>parts<sp/>won&apos;t<sp/>be<sp/>valid<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>window<sp/>is<sp/>too<sp/>small,<sp/>which<sp/>means<sp/>they<sp/>won&apos;t<sp/>be<sp/>rendered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>distributeHorizontally(leftRect,<sp/>rightRect);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>distributeVertically(topRect,<sp/>bottomRect);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topRect.isValid())<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx1<sp/>=<sp/>shadowMargins.left();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx2<sp/>=<sp/>tx1<sp/>+<sp/>top.width();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty2<sp/>=<sp/>topRect.height();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_quad" kindref="compound">WindowQuad</ref><sp/>topQuad;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topQuad[0]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(topRect.left(),<sp/>topRect.top(),<sp/>tx1,<sp/>ty1);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topQuad[1]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(topRect.right(),<sp/>topRect.top(),<sp/>tx2,<sp/>ty1);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topQuad[2]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(topRect.right(),<sp/>topRect.bottom(),<sp/>tx2,<sp/>ty2);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topQuad[3]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(topRect.left(),<sp/>topRect.bottom(),<sp/>tx1,<sp/>ty2);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1a636cc0d032fc8813db966c4acdb3df50" kindref="member">quads</ref>.append(topQuad);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rightRect.isValid())<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx1<sp/>=<sp/>width<sp/>-<sp/>rightRect.width();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty1<sp/>=<sp/>shadowMargins.top();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx2<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty2<sp/>=<sp/>ty1<sp/>+<sp/>right.height();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_quad" kindref="compound">WindowQuad</ref><sp/>rightQuad;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightQuad[0]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(rightRect.left(),<sp/>rightRect.top(),<sp/>tx1,<sp/>ty1);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightQuad[1]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(rightRect.right(),<sp/>rightRect.top(),<sp/>tx2,<sp/>ty1);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightQuad[2]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(rightRect.right(),<sp/>rightRect.bottom(),<sp/>tx2,<sp/>ty2);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightQuad[3]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(rightRect.left(),<sp/>rightRect.bottom(),<sp/>tx1,<sp/>ty2);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1a636cc0d032fc8813db966c4acdb3df50" kindref="member">quads</ref>.append(rightQuad);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottomRect.isValid())<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx1<sp/>=<sp/>shadowMargins.left();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty1<sp/>=<sp/>height<sp/>-<sp/>bottomRect.height();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx2<sp/>=<sp/>tx1<sp/>+<sp/>bottom.width();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty2<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_quad" kindref="compound">WindowQuad</ref><sp/>bottomQuad;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomQuad[0]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(bottomRect.left(),<sp/>bottomRect.top(),<sp/>tx1,<sp/>ty1);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomQuad[1]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(bottomRect.right(),<sp/>bottomRect.top(),<sp/>tx2,<sp/>ty1);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomQuad[2]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(bottomRect.right(),<sp/>bottomRect.bottom(),<sp/>tx2,<sp/>ty2);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomQuad[3]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(bottomRect.left(),<sp/>bottomRect.bottom(),<sp/>tx1,<sp/>ty2);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1a636cc0d032fc8813db966c4acdb3df50" kindref="member">quads</ref>.append(bottomQuad);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leftRect.isValid())<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty1<sp/>=<sp/>shadowMargins.top();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx2<sp/>=<sp/>leftRect.width();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty2<sp/>=<sp/>ty1<sp/>+<sp/>left.height();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_quad" kindref="compound">WindowQuad</ref><sp/>leftQuad;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftQuad[0]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(leftRect.left(),<sp/>leftRect.top(),<sp/>tx1,<sp/>ty1);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftQuad[1]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(leftRect.right(),<sp/>leftRect.top(),<sp/>tx2,<sp/>ty1);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftQuad[2]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(leftRect.right(),<sp/>leftRect.bottom(),<sp/>tx2,<sp/>ty2);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftQuad[3]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(leftRect.left(),<sp/>leftRect.bottom(),<sp/>tx1,<sp/>ty2);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1a636cc0d032fc8813db966c4acdb3df50" kindref="member">quads</ref>.append(leftQuad);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_item_1a636cc0d032fc8813db966c4acdb3df50" kindref="member">quads</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="class_k_win_1_1_shadow_item_1ac7817210a552c73c2b86bb058e22868b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shadow_item_1ac7817210a552c73c2b86bb058e22868b" kindref="member">ShadowItem::preprocess</ref>()</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_textureDirty)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_textureDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_textureProvider-&gt;update();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_shadowitem.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/scene/shadowitem.cpp"/>
  </compounddef>
</doxygen>
