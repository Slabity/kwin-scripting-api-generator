<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="gltexture_8cpp" kind="file" language="C++">
    <compoundname>gltexture.cpp</compoundname>
    <includes refid="gltexture__p_8h" local="yes">gltexture_p.h</includes>
    <includes refid="glframebuffer_8h" local="yes">opengl/glframebuffer.h</includes>
    <includes refid="glplatform_8h" local="yes">opengl/glplatform.h</includes>
    <includes refid="glutils_8h" local="yes">opengl/glutils.h</includes>
    <includes refid="common_8h" local="yes">utils/common.h</includes>
    <includes local="no">QImage</includes>
    <includes local="no">QPixmap</includes>
    <includes local="no">QVector2D</includes>
    <includes local="no">QVector3D</includes>
    <includes local="no">QVector4D</includes>
    <incdepgraph>
      <node id="4">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>opengl/eglcontext.h</label>
        <link refid="eglcontext_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>opengl/glframebuffer.h</label>
        <link refid="glframebuffer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>opengl/glplatform.h</label>
        <link refid="glplatform_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>opengl/glshader.h</label>
        <link refid="glshader_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>opengl/glshadermanager.h</label>
        <link refid="glshadermanager_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/opengl/gltexture.cpp</label>
        <link refid="gltexture_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>opengl/gltexture.h</label>
        <link refid="gltexture_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gltexture_p.h</label>
        <link refid="gltexture__p_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>opengl/glutils.h</label>
        <link refid="glutils_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>QByteArray</label>
      </node>
      <node id="36">
        <label>QColor</label>
      </node>
      <node id="15">
        <label>QCoreApplication</label>
      </node>
      <node id="24">
        <label>QDebug</label>
      </node>
      <node id="27">
        <label>QExplicitlySharedDataPointer</label>
      </node>
      <node id="40">
        <label>QFlags</label>
      </node>
      <node id="16">
        <label>QImage</label>
      </node>
      <node id="22">
        <label>QList</label>
      </node>
      <node id="51">
        <label>QLoggingCategory</label>
      </node>
      <node id="37">
        <label>QMatrix3x3</label>
      </node>
      <node id="6">
        <label>QMatrix4x4</label>
      </node>
      <node id="19">
        <label>QObject</label>
      </node>
      <node id="53">
        <label>QPixmap</label>
      </node>
      <node id="17">
        <label>QPoint</label>
      </node>
      <node id="25">
        <label>QRect</label>
      </node>
      <node id="28">
        <label>QRegion</label>
      </node>
      <node id="49">
        <label>QSet</label>
      </node>
      <node id="47">
        <label>QSharedData</label>
      </node>
      <node id="23">
        <label>QSize</label>
      </node>
      <node id="32">
        <label>QStack</label>
      </node>
      <node id="31">
        <label>QString</label>
      </node>
      <node id="26">
        <label>QUuid</label>
      </node>
      <node id="18">
        <label>QVariant</label>
      </node>
      <node id="7">
        <label>QVector2D</label>
      </node>
      <node id="38">
        <label>QVector3D</label>
      </node>
      <node id="54">
        <label>QVector4D</label>
      </node>
      <node id="52">
        <label>climits</label>
      </node>
      <node id="14">
        <label>config-kwin.h</label>
      </node>
      <node id="33">
        <label>epoxy/egl.h</label>
      </node>
      <node id="29">
        <label>epoxy/gl.h</label>
      </node>
      <node id="46">
        <label>functional</label>
      </node>
      <node id="8">
        <label>kwin_export.h</label>
      </node>
      <node id="41">
        <label>map</label>
      </node>
      <node id="42">
        <label>memory</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="44">
        <label>ranges</label>
      </node>
      <node id="45">
        <label>span</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2006-2007<sp/>Rivo<sp/>Laks<sp/>&lt;rivolaks@hot.ee&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2010,<sp/>2011<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2012<sp/>Philipp<sp/>Knechtges<sp/>&lt;philipp-dev@knechtges.com&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gltexture__p_8h" kindref="compound">gltexture_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glframebuffer_8h" kindref="compound">opengl/glframebuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glplatform_8h" kindref="compound">opengl/glplatform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glutils_8h" kindref="compound">opengl/glutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">utils/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QImage&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPixmap&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QVector2D&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QVector3D&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QVector4D&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Table<sp/>of<sp/>GL<sp/>formats/types<sp/>associated<sp/>with<sp/>different<sp/>values<sp/>of<sp/>QImage::Format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Zero<sp/>values<sp/>indicate<sp/>a<sp/>direct<sp/>upload<sp/>is<sp/>not<sp/>feasible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>Blending<sp/>is<sp/>set<sp/>up<sp/>to<sp/>expect<sp/>premultiplied<sp/>data,<sp/>so<sp/>the<sp/>non-premultiplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Format_ARGB32<sp/>must<sp/>be<sp/>converted<sp/>to<sp/>Format_ARGB32_Premultiplied<sp/>ahead<sp/>of<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34" refid="namespace_k_win_1a659fc06b6bb39d272728e0317b7e5dac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/><ref refid="namespace_k_win_1a659fc06b6bb39d272728e0317b7e5dac" kindref="member">internalFormat</ref>;</highlight></codeline>
<codeline lineno="35" refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_Invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_Mono</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_MonoLSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_Indexed8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGB8,<sp/>GL_BGRA,<sp/>GL_UNSIGNED_INT_8_8_8_8_REV},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_RGB32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_ARGB32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGBA8,<sp/>GL_BGRA,<sp/>GL_UNSIGNED_INT_8_8_8_8_REV},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_ARGB32_Premultiplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGB8,<sp/>GL_RGB,<sp/>GL_UNSIGNED_SHORT_5_6_5},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_RGB16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_ARGB8565_Premultiplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_RGB666</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_ARGB6666_Premultiplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGB5,<sp/>GL_BGRA,<sp/>GL_UNSIGNED_SHORT_1_5_5_5_REV},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_RGB555</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_ARGB8555_Premultiplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGB8,<sp/>GL_RGB,<sp/>GL_UNSIGNED_BYTE},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_RGB888</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGB4,<sp/>GL_BGRA,<sp/>GL_UNSIGNED_SHORT_4_4_4_4_REV},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_RGB444</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGBA4,<sp/>GL_BGRA,<sp/>GL_UNSIGNED_SHORT_4_4_4_4_REV},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_ARGB4444_Premultiplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGB8,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_BYTE},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_RGBX8888</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_RGBA8888</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGBA8,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_BYTE},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_RGBA8888_Premultiplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGB10,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_INT_2_10_10_10_REV},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_BGR30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGB10_A2,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_INT_2_10_10_10_REV},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_A2BGR30_Premultiplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGB10,<sp/>GL_BGRA,<sp/>GL_UNSIGNED_INT_2_10_10_10_REV},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_RGB30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGB10_A2,<sp/>GL_BGRA,<sp/>GL_UNSIGNED_INT_2_10_10_10_REV},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_A2RGB30_Premultiplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_R8,<sp/>GL_RED,<sp/>GL_UNSIGNED_BYTE},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_Alpha8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_R8,<sp/>GL_RED,<sp/>GL_UNSIGNED_BYTE},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_Grayscale8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGBA16,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_SHORT},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_RGBX64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_RGBA64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_RGBA16,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_SHORT},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_RGBA64_Premultiplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{GL_R16,<sp/>GL_RED,<sp/>GL_UNSIGNED_SHORT},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_Grayscale16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0},<sp/></highlight><highlight class="comment">//<sp/>QImage::Format_BGR888</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_k_win_1_1_g_l_texture_1ad2e7540fd78f144ccfd5fb010bff9a36" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_texture_1ad2e7540fd78f144ccfd5fb010bff9a36" kindref="member">GLTexture::GLTexture</ref>(GLenum<sp/><ref refid="class_k_win_1_1_g_l_texture_1ae095181b76e95834bfba13b60cdcb1a2" kindref="member">target</ref>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>(std::make_unique&lt;<ref refid="class_k_win_1_1_g_l_texture_private" kindref="compound">GLTexturePrivate</ref>&gt;())</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1ae095181b76e95834bfba13b60cdcb1a2" kindref="member">target</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_k_win_1_1_g_l_texture_1ac820e0fd92ee134c1d46ce061b5b6e4f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_texture_1ad2e7540fd78f144ccfd5fb010bff9a36" kindref="member">GLTexture::GLTexture</ref>(GLenum<sp/><ref refid="class_k_win_1_1_g_l_texture_1ae095181b76e95834bfba13b60cdcb1a2" kindref="member">target</ref>,<sp/>GLuint<sp/>textureId,<sp/>GLenum<sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;<ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levels,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>owning,<sp/><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref><sp/>transform)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_g_l_texture_1ad2e7540fd78f144ccfd5fb010bff9a36" kindref="member">GLTexture</ref>(<ref refid="class_k_win_1_1_g_l_texture_1ae095181b76e95834bfba13b60cdcb1a2" kindref="member">target</ref>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_owning<sp/>=<sp/>owning;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_texture<sp/>=<sp/>textureId;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_scale.setWidth(1.0<sp/>/<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>.width());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_scale.setHeight(1.0<sp/>/<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>.height());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_size<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_canUseMipmaps<sp/>=<sp/>levels<sp/>&gt;<sp/>1;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_mipLevels<sp/>=<sp/>levels;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_filter<sp/>=<sp/>levels<sp/>&gt;<sp/>1<sp/>?<sp/>GL_NEAREST_MIPMAP_LINEAR<sp/>:<sp/>GL_NEAREST;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_internalFormat<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_textureToBufferTransform<sp/>=<sp/>transform;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;updateMatrix();</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="class_k_win_1_1_g_l_texture_1a467f2f1ee778d3c04dbe7c3eecf2737e" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_texture_1a467f2f1ee778d3c04dbe7c3eecf2737e" kindref="member">GLTexture::~GLTexture</ref>()</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_k_win_1_1_g_l_texture_1aa3d73c1663aaaa8611fcef846fc78742" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1aa3d73c1663aaaa8611fcef846fc78742" kindref="member">GLTexture::create</ref>()</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_g_l_texture_1a4732e9350196f128470ca6a56dd89de9" kindref="member">isNull</ref>())<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenTextures(1,<sp/>&amp;<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_texture);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_texture<sp/>!=<sp/>GL_NONE;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="class_k_win_1_1_g_l_texture_private_1a925ea5dbe9e0b41e0cec79289a1224e0" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_texture_private_1a925ea5dbe9e0b41e0cec79289a1224e0" kindref="member">GLTexturePrivate::GLTexturePrivate</ref>()</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a818e6fd9c73ebbbe605627e954e7fdd2" kindref="member">m_texture</ref>(0)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1af835b7850582017e707bbae856c2edb5" kindref="member">m_target</ref>(0)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1ab3051dae44a386912fd79df51275b9e0" kindref="member">m_internalFormat</ref>(0)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1aaf527b86271f503dc53151b61694538b" kindref="member">m_filter</ref>(GL_NEAREST)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a48209bf0e13c8bed43039063eb80b6b0" kindref="member">m_wrapMode</ref>(GL_REPEAT)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a9ff00490ef3250f63f9c06d3476420e1" kindref="member">m_canUseMipmaps</ref>(false)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1ad0dedfb09cb6a9c8997c5b6807770961" kindref="member">m_filterChanged</ref>(true)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a0ab0e9e95c7489e35bf161a2226a14c1" kindref="member">m_wrapModeChanged</ref>(false)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1ab5eee065c730bb53a6090c6c47a12f08" kindref="member">m_owning</ref>(true)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a26f5084a47a6f3f5cb63c410dfd07eb3" kindref="member">m_mipLevels</ref>(1)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1aebb38e37f8c711f863b9896710bd2c31" kindref="member">m_unnormalizeActive</ref>(0)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a7f1f8adc26dc4c14906324b1e98206f7" kindref="member">m_normalizeActive</ref>(0)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_k_win_1_1_g_l_texture_private_1ae7e2fbc2a7da3316aee9a9441be294ff" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_texture_private_1ae7e2fbc2a7da3316aee9a9441be294ff" kindref="member">GLTexturePrivate::~GLTexturePrivate</ref>()</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>())<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_OPENGL,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>delete<sp/>texture<sp/>because<sp/>no<sp/>context<sp/>is<sp/>current&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_texture_private_1a818e6fd9c73ebbbe605627e954e7fdd2" kindref="member">m_texture</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1ab5eee065c730bb53a6090c6c47a12f08" kindref="member">m_owning</ref>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteTextures(1,<sp/>&amp;<ref refid="class_k_win_1_1_g_l_texture_private_1a818e6fd9c73ebbbe605627e954e7fdd2" kindref="member">m_texture</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="class_k_win_1_1_g_l_texture_1a4732e9350196f128470ca6a56dd89de9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a4732e9350196f128470ca6a56dd89de9" kindref="member">GLTexture::isNull</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="134"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GL_NONE<sp/>==<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_texture;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" refkind="member"><highlight class="normal">QSize<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">GLTexture::size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="139"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_size;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_k_win_1_1_g_l_texture_1aae1de5a574570f21feb3438a05011014" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1aae1de5a574570f21feb3438a05011014" kindref="member">GLTexture::setSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;<ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_g_l_texture_1a4732e9350196f128470ca6a56dd89de9" kindref="member">isNull</ref>())<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_size<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;updateMatrix();</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="class_k_win_1_1_g_l_texture_1a8089683b63e92df439d27a1e3ada4404" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a8089683b63e92df439d27a1e3ada4404" kindref="member">GLTexture::update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage<sp/>&amp;image,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;offset)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image.isNull()<sp/>||<sp/><ref refid="class_k_win_1_1_g_l_texture_1a4732e9350196f128470ca6a56dd89de9" kindref="member">isNull</ref>())<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_owning);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>context<sp/>=<sp/><ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/>glFormat;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>QImage::Format<sp/>uploadFormat;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!context-&gt;isOpenGLES())<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage::Format<sp/>index<sp/>=<sp/>image.format();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref>[0])<sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref>[index].<ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glFormat<sp/>=<sp/><ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref>[index].format;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref><sp/>=<sp/><ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref>[index].type;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uploadFormat<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glFormat<sp/>=<sp/>GL_BGRA;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref><sp/>=<sp/>GL_UNSIGNED_INT_8_8_8_8_REV;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uploadFormat<sp/>=<sp/>QImage::Format_ARGB32_Premultiplied;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;supportsARGB32Textures())<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glFormat<sp/>=<sp/>GL_BGRA_EXT;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref><sp/>=<sp/>GL_UNSIGNED_BYTE;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uploadFormat<sp/>=<sp/>QImage::Format_ARGB32_Premultiplied;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glFormat<sp/>=<sp/>GL_RGBA;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref><sp/>=<sp/>GL_UNSIGNED_BYTE;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uploadFormat<sp/>=<sp/>QImage::Format_RGBA8888_Premultiplied;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>QImage<sp/>im<sp/>=<sp/>image;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(im.format()<sp/>!=<sp/>uploadFormat)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im.convertTo(uploadFormat);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1af4d227b648ea821f3f2ad01a7a166daa" kindref="member">bind</ref>();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect<sp/>:<sp/>region)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(im.depth()<sp/>%<sp/>8<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glPixelStorei(GL_UNPACK_ROW_LENGTH,<sp/>im.bytesPerLine()<sp/>/<sp/>(im.depth()<sp/>/<sp/>8));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glPixelStorei(GL_UNPACK_SKIP_PIXELS,<sp/>rect.x());</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glPixelStorei(GL_UNPACK_SKIP_ROWS,<sp/>rect.y());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexSubImage2D(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target,<sp/>0,<sp/>offset.x()<sp/>+<sp/>rect.x(),<sp/>offset.y()<sp/>+<sp/>rect.y(),<sp/>rect.width(),<sp/>rect.height(),<sp/>glFormat,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/>im.constBits());</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>glPixelStorei(GL_UNPACK_ROW_LENGTH,<sp/>0);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>glPixelStorei(GL_UNPACK_SKIP_PIXELS,<sp/>0);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>glPixelStorei(GL_UNPACK_SKIP_ROWS,<sp/>0);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a411bfda8f73dd14077b15b3f4a87457f" kindref="member">unbind</ref>();</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="class_k_win_1_1_g_l_texture_1af4d227b648ea821f3f2ad01a7a166daa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1af4d227b648ea821f3f2ad01a7a166daa" kindref="member">GLTexture::bind</ref>()</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_texture);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_texture);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_filterChanged)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLenum<sp/>minFilter<sp/>=<sp/>GL_NEAREST;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLenum<sp/>magFilter<sp/>=<sp/>GL_NEAREST;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_filter)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_NEAREST:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minFilter<sp/>=<sp/>magFilter<sp/>=<sp/>GL_NEAREST;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_LINEAR:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minFilter<sp/>=<sp/>magFilter<sp/>=<sp/>GL_LINEAR;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_NEAREST_MIPMAP_NEAREST:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_NEAREST_MIPMAP_LINEAR:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magFilter<sp/>=<sp/>GL_NEAREST;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minFilter<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_canUseMipmaps<sp/>?<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_filter<sp/>:<sp/>GL_NEAREST;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_LINEAR_MIPMAP_NEAREST:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_LINEAR_MIPMAP_LINEAR:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magFilter<sp/>=<sp/>GL_LINEAR;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minFilter<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_canUseMipmaps<sp/>?<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_filter<sp/>:<sp/>GL_LINEAR;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>minFilter);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>magFilter);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_filterChanged<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_wrapModeChanged)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target,<sp/>GL_TEXTURE_WRAP_S,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_wrapMode);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target,<sp/>GL_TEXTURE_WRAP_T,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_wrapMode);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_wrapModeChanged<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_k_win_1_1_g_l_texture_1a40fec104ab8844fcccf19be86ec74986" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a40fec104ab8844fcccf19be86ec74986" kindref="member">GLTexture::generateMipmaps</ref>()</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_canUseMipmaps)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGenerateMipmap(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="class_k_win_1_1_g_l_texture_1a411bfda8f73dd14077b15b3f4a87457f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a411bfda8f73dd14077b15b3f4a87457f" kindref="member">GLTexture::unbind</ref>()</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target,<sp/>0);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="class_k_win_1_1_g_l_texture_1ae171f72388c70d1e30af3da712def893" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1ae171f72388c70d1e30af3da712def893" kindref="member">GLTexture::render</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>&amp;<ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1ae171f72388c70d1e30af3da712def893" kindref="member">render</ref>(<ref refid="namespace_k_win_1a0655524c1f1ba8dbb2cf16a1e4b9bb97" kindref="member">infiniteRegion</ref>(),<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="class_k_win_1_1_g_l_texture_1a787e7f2d161a88b97e0d998bbcf9fd5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1ae171f72388c70d1e30af3da712def893" kindref="member">GLTexture::render</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>&amp;targetSize,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hardwareClipping)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rotatedSize<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_textureToBufferTransform.map(<ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1ae171f72388c70d1e30af3da712def893" kindref="member">render</ref>(QRectF(QPoint(),<sp/>rotatedSize),<sp/>region,<sp/>targetSize,<sp/>hardwareClipping);</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="class_k_win_1_1_g_l_texture_1aa430a60e300f2fadeca388f6081c491f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1ae171f72388c70d1e30af3da712def893" kindref="member">GLTexture::render</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>&amp;targetSize,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hardwareClipping)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(targetSize.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>paint<sp/>and<sp/>m_vbo<sp/>is<sp/>likely<sp/>nullptr<sp/>and<sp/>d-&gt;m_cachedSize<sp/>empty<sp/>as<sp/>well,<sp/>#337090</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>destinationSize<sp/>=<sp/>targetSize.toSize();<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>toSize<sp/>is<sp/>not<sp/>enough<sp/>to<sp/>snap<sp/>to<sp/>the<sp/>pixel<sp/>grid,<sp/>fix<sp/>render()<sp/>users<sp/>and<sp/>drop<sp/>this<sp/>toSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(destinationSize<sp/>!=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_cachedSize<sp/>||<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_cachedSource<sp/>!=<sp/>source<sp/>||<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_cachedContentTransform<sp/>!=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_textureToBufferTransform)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_cachedSize<sp/>=<sp/>destinationSize;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_cachedSource<sp/>=<sp/>source;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_cachedContentTransform<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_textureToBufferTransform;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>texWidth<sp/>=<sp/>(<ref refid="class_k_win_1_1_g_l_texture_1ae095181b76e95834bfba13b60cdcb1a2" kindref="member">target</ref>()<sp/>==<sp/>GL_TEXTURE_RECTANGLE_ARB)<sp/>?<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1ca4334af1a415346fca662ffba25da1" kindref="member">width</ref>()<sp/>:<sp/>1.0f;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>texHeight<sp/>=<sp/>(<ref refid="class_k_win_1_1_g_l_texture_1ae095181b76e95834bfba13b60cdcb1a2" kindref="member">target</ref>()<sp/>==<sp/>GL_TEXTURE_RECTANGLE_ARB)<sp/>?<sp/><ref refid="class_k_win_1_1_g_l_texture_1aad07b441c0726ead8e91b73a750c0289" kindref="member">height</ref>()<sp/>:<sp/>1.0f;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>rotatedSize<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_textureToBufferTransform.map(<ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>textureMat;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textureMat.translate(texWidth<sp/>/<sp/>2,<sp/>texHeight<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>our<sp/>Y<sp/>axis<sp/>is<sp/>flipped<sp/>vs<sp/>OpenGL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textureMat.scale(1,<sp/>-1);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textureMat<sp/>*=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_textureToBufferTransform.toMatrix();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textureMat.translate(-texWidth<sp/>/<sp/>2,<sp/>-texHeight<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textureMat.scale(texWidth<sp/>/<sp/>rotatedSize.width(),<sp/>texHeight<sp/>/<sp/>rotatedSize.height());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>p1<sp/>=<sp/>textureMat.map(QPointF(source.x(),<sp/>source.y()));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>p2<sp/>=<sp/>textureMat.map(QPointF(source.x(),<sp/>source.y()<sp/>+<sp/>source.height()));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>p3<sp/>=<sp/>textureMat.map(QPointF(source.x()<sp/>+<sp/>source.width(),<sp/>source.y()));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>p4<sp/>=<sp/>textureMat.map(QPointF(source.x()<sp/>+<sp/>source.width(),<sp/>source.y()<sp/>+<sp/>source.height()));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_vbo)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_vbo<sp/>=<sp/>std::make_unique&lt;GLVertexBuffer&gt;(<ref refid="class_k_win_1_1_g_l_vertex_buffer_1aa8b304b72be4140ba69a72e2061699d3a8bdf6b4d70080826d3dd0112cd024d01" kindref="member">KWin::GLVertexBuffer::Static</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;GLVertex2D,<sp/>4&gt;<sp/>data{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_g_l_vertex2_d" kindref="compound">GLVertex2D</ref>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.position<sp/>=<sp/>QVector2D(0,<sp/>0),</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.texcoord<sp/>=<sp/>QVector2D(p1),</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_g_l_vertex2_d" kindref="compound">GLVertex2D</ref>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.position<sp/>=<sp/>QVector2D(0,<sp/>destinationSize.height()),</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.texcoord<sp/>=<sp/>QVector2D(p2),</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_g_l_vertex2_d" kindref="compound">GLVertex2D</ref>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.position<sp/>=<sp/>QVector2D(destinationSize.width(),<sp/>0),</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.texcoord<sp/>=<sp/>QVector2D(p3),</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_g_l_vertex2_d" kindref="compound">GLVertex2D</ref>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.position<sp/>=<sp/>QVector2D(destinationSize.width(),<sp/>destinationSize.height()),</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.texcoord<sp/>=<sp/>QVector2D(p4),</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_vbo-&gt;setVertices(data);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1af4d227b648ea821f3f2ad01a7a166daa" kindref="member">bind</ref>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_vbo-&gt;render(region,<sp/>GL_TRIANGLE_STRIP,<sp/>hardwareClipping);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a411bfda8f73dd14077b15b3f4a87457f" kindref="member">unbind</ref>();</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" refkind="member"><highlight class="normal">GLuint<sp/><ref refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" kindref="member">GLTexture::texture</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="337"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_texture;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="class_k_win_1_1_g_l_texture_1ae095181b76e95834bfba13b60cdcb1a2" refkind="member"><highlight class="normal">GLenum<sp/><ref refid="class_k_win_1_1_g_l_texture_1ae095181b76e95834bfba13b60cdcb1a2" kindref="member">GLTexture::target</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="342"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="class_k_win_1_1_g_l_texture_1a1e49874ce269e7be549d24be64fdc51c" refkind="member"><highlight class="normal">GLenum<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1e49874ce269e7be549d24be64fdc51c" kindref="member">GLTexture::filter</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="347"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_filter;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" refkind="member"><highlight class="normal">GLenum<sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">GLTexture::internalFormat</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="352"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_internalFormat;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="class_k_win_1_1_g_l_texture_1a59759b0cac258d426a5583b6ae01e11b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a59759b0cac258d426a5583b6ae01e11b" kindref="member">GLTexture::setFilter</ref>(GLenum<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1e49874ce269e7be549d24be64fdc51c" kindref="member">filter</ref>)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_texture_1a1e49874ce269e7be549d24be64fdc51c" kindref="member">filter</ref><sp/>!=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_filter)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_filter<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1e49874ce269e7be549d24be64fdc51c" kindref="member">filter</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_filterChanged<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="class_k_win_1_1_g_l_texture_1aec13a982bbfa6c29e0502eb368f643bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1aec13a982bbfa6c29e0502eb368f643bb" kindref="member">GLTexture::setWrapMode</ref>(GLenum<sp/>mode)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>!=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_wrapMode)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_wrapMode<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_wrapModeChanged<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="class_k_win_1_1_g_l_texture_private_1a491215dd1f1a9975e6e7744ad2ee3063" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a491215dd1f1a9975e6e7744ad2ee3063" kindref="member">GLTexturePrivate::updateMatrix</ref>()</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>textureToBufferMatrix<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1afda5346bbf3515ddd80468366e9ba68d" kindref="member">m_textureToBufferTransform</ref>.toMatrix();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a0e88046e2c9d90da6aae5d1d81969fae" kindref="member">m_matrix</ref>[<ref refid="namespace_k_win_1ad6098fc293bb371948ad74f841c6a7b7a1cef6155ea1454d32a602b5627a1bf2a" kindref="member">NormalizedCoordinates</ref>].setToIdentity();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a0e88046e2c9d90da6aae5d1d81969fae" kindref="member">m_matrix</ref>[<ref refid="namespace_k_win_1ad6098fc293bb371948ad74f841c6a7b7ab0045bc64918f53582f91b633b20aca5" kindref="member">UnnormalizedCoordinates</ref>].setToIdentity();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_texture_private_1af835b7850582017e707bbae856c2edb5" kindref="member">m_target</ref><sp/>==<sp/>GL_TEXTURE_RECTANGLE_ARB)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a0e88046e2c9d90da6aae5d1d81969fae" kindref="member">m_matrix</ref>[<ref refid="namespace_k_win_1ad6098fc293bb371948ad74f841c6a7b7a1cef6155ea1454d32a602b5627a1bf2a" kindref="member">NormalizedCoordinates</ref>].scale(<ref refid="class_k_win_1_1_g_l_texture_private_1a2ecdbe8118709def38f24b93aa1c2ed9" kindref="member">m_size</ref>.width(),<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a2ecdbe8118709def38f24b93aa1c2ed9" kindref="member">m_size</ref>.height());</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a0e88046e2c9d90da6aae5d1d81969fae" kindref="member">m_matrix</ref>[<ref refid="namespace_k_win_1ad6098fc293bb371948ad74f841c6a7b7ab0045bc64918f53582f91b633b20aca5" kindref="member">UnnormalizedCoordinates</ref>].scale(1.0<sp/>/<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a2ecdbe8118709def38f24b93aa1c2ed9" kindref="member">m_size</ref>.width(),<sp/>1.0<sp/>/<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a2ecdbe8118709def38f24b93aa1c2ed9" kindref="member">m_size</ref>.height());</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a0e88046e2c9d90da6aae5d1d81969fae" kindref="member">m_matrix</ref>[<ref refid="namespace_k_win_1ad6098fc293bb371948ad74f841c6a7b7a1cef6155ea1454d32a602b5627a1bf2a" kindref="member">NormalizedCoordinates</ref>].translate(0.5,<sp/>0.5);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>our<sp/>Y<sp/>axis<sp/>is<sp/>flipped<sp/>vs<sp/>OpenGL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a0e88046e2c9d90da6aae5d1d81969fae" kindref="member">m_matrix</ref>[<ref refid="namespace_k_win_1ad6098fc293bb371948ad74f841c6a7b7a1cef6155ea1454d32a602b5627a1bf2a" kindref="member">NormalizedCoordinates</ref>].scale(1,<sp/>-1);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a0e88046e2c9d90da6aae5d1d81969fae" kindref="member">m_matrix</ref>[<ref refid="namespace_k_win_1ad6098fc293bb371948ad74f841c6a7b7a1cef6155ea1454d32a602b5627a1bf2a" kindref="member">NormalizedCoordinates</ref>]<sp/>*=<sp/>textureToBufferMatrix;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a0e88046e2c9d90da6aae5d1d81969fae" kindref="member">m_matrix</ref>[<ref refid="namespace_k_win_1ad6098fc293bb371948ad74f841c6a7b7a1cef6155ea1454d32a602b5627a1bf2a" kindref="member">NormalizedCoordinates</ref>].translate(-0.5,<sp/>-0.5);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a0e88046e2c9d90da6aae5d1d81969fae" kindref="member">m_matrix</ref>[<ref refid="namespace_k_win_1ad6098fc293bb371948ad74f841c6a7b7ab0045bc64918f53582f91b633b20aca5" kindref="member">UnnormalizedCoordinates</ref>].translate(<ref refid="class_k_win_1_1_g_l_texture_private_1a2ecdbe8118709def38f24b93aa1c2ed9" kindref="member">m_size</ref>.width()<sp/>/<sp/>2,<sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a2ecdbe8118709def38f24b93aa1c2ed9" kindref="member">m_size</ref>.height()<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a0e88046e2c9d90da6aae5d1d81969fae" kindref="member">m_matrix</ref>[<ref refid="namespace_k_win_1ad6098fc293bb371948ad74f841c6a7b7ab0045bc64918f53582f91b633b20aca5" kindref="member">UnnormalizedCoordinates</ref>].scale(1,<sp/>-1);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a0e88046e2c9d90da6aae5d1d81969fae" kindref="member">m_matrix</ref>[<ref refid="namespace_k_win_1ad6098fc293bb371948ad74f841c6a7b7ab0045bc64918f53582f91b633b20aca5" kindref="member">UnnormalizedCoordinates</ref>]<sp/>*=<sp/>textureToBufferMatrix;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_private_1a0e88046e2c9d90da6aae5d1d81969fae" kindref="member">m_matrix</ref>[<ref refid="namespace_k_win_1ad6098fc293bb371948ad74f841c6a7b7ab0045bc64918f53582f91b633b20aca5" kindref="member">UnnormalizedCoordinates</ref>].translate(-<ref refid="class_k_win_1_1_g_l_texture_private_1a2ecdbe8118709def38f24b93aa1c2ed9" kindref="member">m_size</ref>.width()<sp/>/<sp/>2,<sp/>-<ref refid="class_k_win_1_1_g_l_texture_private_1a2ecdbe8118709def38f24b93aa1c2ed9" kindref="member">m_size</ref>.height()<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="class_k_win_1_1_g_l_texture_1a2c981651fa4c6b0779bf2efd8a30bebf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a2c981651fa4c6b0779bf2efd8a30bebf" kindref="member">GLTexture::setContentTransform</ref>(<ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref><sp/>transform)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_textureToBufferTransform<sp/>!=<sp/>transform)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_textureToBufferTransform<sp/>=<sp/>transform;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;updateMatrix();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="class_k_win_1_1_g_l_texture_1a2b8c1ac9232f0356ac604a963350e91a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref><sp/><ref refid="class_k_win_1_1_g_l_texture_1a2b8c1ac9232f0356ac604a963350e91a" kindref="member">GLTexture::contentTransform</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="406"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_textureToBufferTransform;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="class_k_win_1_1_g_l_texture_1aba9725197cdfa27ed5db7a16463d43f9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1aba9725197cdfa27ed5db7a16463d43f9" kindref="member">GLTexture::setSwizzle</ref>(GLenum<sp/>red,<sp/>GLenum<sp/>green,<sp/>GLenum<sp/>blue,<sp/>GLenum<sp/>alpha)</highlight></codeline>
<codeline lineno="411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>()-&gt;isOpenGLES())<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>swizzle[]<sp/>=<sp/>{red,<sp/>green,<sp/>blue,<sp/>alpha};</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteriv(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target,<sp/>GL_TEXTURE_SWIZZLE_RGBA,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*)swizzle);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target,<sp/>GL_TEXTURE_SWIZZLE_R,<sp/>red);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target,<sp/>GL_TEXTURE_SWIZZLE_G,<sp/>green);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target,<sp/>GL_TEXTURE_SWIZZLE_B,<sp/>blue);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri(<ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_target,<sp/>GL_TEXTURE_SWIZZLE_A,<sp/>alpha);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="class_k_win_1_1_g_l_texture_1a1ca4334af1a415346fca662ffba25da1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1ca4334af1a415346fca662ffba25da1" kindref="member">GLTexture::width</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="424"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_size.width();</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="class_k_win_1_1_g_l_texture_1aad07b441c0726ead8e91b73a750c0289" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1aad07b441c0726ead8e91b73a750c0289" kindref="member">GLTexture::height</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="429"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_size.height();</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="class_k_win_1_1_g_l_texture_1ade184fbdb00efd4e35c42a4b975a100a" refkind="member"><highlight class="normal">QMatrix4x4<sp/><ref refid="class_k_win_1_1_g_l_texture_1ade184fbdb00efd4e35c42a4b975a100a" kindref="member">GLTexture::matrix</ref>(<ref refid="namespace_k_win_1ad6098fc293bb371948ad74f841c6a7b7" kindref="member">TextureCoordinateType</ref><sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="434"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" kindref="member">d</ref>-&gt;m_matrix[<ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>];</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="class_k_win_1_1_g_l_texture_1af0cdc1bf0a2c14c934caa8779e8ef96c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1af0cdc1bf0a2c14c934caa8779e8ef96c" kindref="member">GLTexture::supportsSwizzle</ref>()</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>()-&gt;<ref refid="class_k_win_1_1_egl_context_1ae2e8167dcab5a4a4e8cbb68c5ddaafc6" kindref="member">supportsTextureSwizzle</ref>();</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="class_k_win_1_1_g_l_texture_1a396def695ca56d81cf47fecc0dc2d74a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1a396def695ca56d81cf47fecc0dc2d74a" kindref="member">GLTexture::supportsFormatRG</ref>()</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>()-&gt;<ref refid="class_k_win_1_1_egl_context_1a22ea62bd16c4777d7c32581ec7b019f3" kindref="member">supportsRGTextures</ref>();</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="class_k_win_1_1_g_l_texture_1a0c9c3d518e8a66594937e820d31f5cd2" refkind="member"><highlight class="normal">QImage<sp/><ref refid="class_k_win_1_1_g_l_texture_1a0c9c3d518e8a66594937e820d31f5cd2" kindref="member">GLTexture::toImage</ref>()</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_texture_1ae095181b76e95834bfba13b60cdcb1a2" kindref="member">target</ref>()<sp/>!=<sp/>GL_TEXTURE_2D)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QImage();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>QImage<sp/>ret(<ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>(),<sp/>QImage::Format_RGBA8888_Premultiplied);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>()-&gt;isOpenGLES())<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref><sp/>fbo(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_framebuffer_1a7eb3049da73a065dcf8ff137fd9b5e3f" kindref="member">GLFramebuffer::pushFramebuffer</ref>(&amp;fbo);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glReadPixels(0,<sp/>0,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1ca4334af1a415346fca662ffba25da1" kindref="member">width</ref>(),<sp/><ref refid="class_k_win_1_1_g_l_texture_1aad07b441c0726ead8e91b73a750c0289" kindref="member">height</ref>(),<sp/>GL_RGBA,<sp/>GL_UNSIGNED_INT_8_8_8_8_REV,<sp/>ret.bits());</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_framebuffer_1a3f7265ef927c8b0ab82728c5118c7bed" kindref="member">GLFramebuffer::popFramebuffer</ref>();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>currentTextureBinding;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetIntegerv(GL_TEXTURE_BINDING_2D,<sp/>&amp;currentTextureBinding);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GLuint(currentTextureBinding)<sp/>!=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" kindref="member">texture</ref>())<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" kindref="member">texture</ref>());</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetTexImage(GL_TEXTURE_2D,<sp/>0,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_INT_8_8_8_8_REV,<sp/>ret.bits());</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GLuint(currentTextureBinding)<sp/>!=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" kindref="member">texture</ref>())<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>currentTextureBinding);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="class_k_win_1_1_g_l_texture_1a832006557690b1b0e0b605f1553742aa" refkind="member"><highlight class="normal">std::unique_ptr&lt;GLTexture&gt;<sp/><ref refid="class_k_win_1_1_g_l_texture_1a832006557690b1b0e0b605f1553742aa" kindref="member">GLTexture::createNonOwningWrapper</ref>(GLuint<sp/>textureId,<sp/>GLenum<sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;<ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;GLTexture&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1ad2e7540fd78f144ccfd5fb010bff9a36" kindref="member">GLTexture</ref>(GL_TEXTURE_2D,<sp/>textureId,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>,<sp/>1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref>{}));</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="class_k_win_1_1_g_l_texture_1a22b5bb33ada7c4b53f73c57f5405289f" refkind="member"><highlight class="normal">std::unique_ptr&lt;GLTexture&gt;<sp/><ref refid="class_k_win_1_1_g_l_texture_1a22b5bb33ada7c4b53f73c57f5405289f" kindref="member">GLTexture::allocate</ref>(GLenum<sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;<ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levels)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/><ref refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" kindref="member">texture</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenTextures(1,<sp/>&amp;<ref refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" kindref="member">texture</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" kindref="member">texture</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_OPENGL,<sp/></highlight><highlight class="stringliteral">&quot;generating<sp/>OpenGL<sp/>texture<sp/>handle<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" kindref="member">texture</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>context<sp/>=<sp/><ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!context-&gt;isOpenGLES())<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;supportsTextureStorage())<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexStorage2D(GL_TEXTURE_2D,<sp/>levels,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>.width(),<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>.height());</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAX_LEVEL,<sp/>levels<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexImage2D(GL_TEXTURE_2D,<sp/>0,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>.width(),<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>.height(),<sp/>0,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_BGRA,<sp/>GL_UNSIGNED_INT_8_8_8_8_REV,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>parameter<sp/>in<sp/>glTexSubImage()<sp/>must<sp/>match<sp/>the<sp/>internal<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>texture,<sp/>so<sp/>it&apos;s<sp/>important<sp/>that<sp/>we<sp/>allocate<sp/>the<sp/>texture<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>format<sp/>that<sp/>will<sp/>be<sp/>used<sp/>in<sp/>update()<sp/>and<sp/>clear().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLenum<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>=<sp/>context-&gt;supportsARGB32Textures()<sp/>?<sp/>GL_BGRA_EXT<sp/>:<sp/>GL_RGBA;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexImage2D(GL_TEXTURE_2D,<sp/>0,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>.width(),<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>.height(),<sp/>0,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>GL_UNSIGNED_BYTE,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>internalFormat<sp/>is<sp/>technically<sp/>not<sp/>correct,<sp/>but<sp/>it<sp/>means<sp/>that<sp/>code<sp/>that<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>internalFormat()<sp/>won&apos;t<sp/>need<sp/>to<sp/>be<sp/>specialized<sp/>for<sp/>GLES2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>0);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;GLTexture&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1ad2e7540fd78f144ccfd5fb010bff9a36" kindref="member">GLTexture</ref>(GL_TEXTURE_2D,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" kindref="member">texture</ref>,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" kindref="member">size</ref>,<sp/>levels,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref>{}));</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="class_k_win_1_1_g_l_texture_1abfb1321ce70899df263d8c8db90a2d59" refkind="member"><highlight class="normal">std::unique_ptr&lt;GLTexture&gt;<sp/><ref refid="class_k_win_1_1_g_l_texture_1abfb1321ce70899df263d8c8db90a2d59" kindref="member">GLTexture::upload</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage<sp/>&amp;image)</highlight></codeline>
<codeline lineno="514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image.isNull())<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/><ref refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" kindref="member">texture</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenTextures(1,<sp/>&amp;<ref refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" kindref="member">texture</ref>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" kindref="member">texture</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_OPENGL,<sp/></highlight><highlight class="stringliteral">&quot;generating<sp/>OpenGL<sp/>texture<sp/>handle<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>context<sp/>=<sp/><ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>();</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>QImage::Format<sp/>uploadFormat;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!context-&gt;isOpenGLES())<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage::Format<sp/>index<sp/>=<sp/>image.format();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref>[0])<sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref>[index].<ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref><sp/>=<sp/><ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref>[index].internalFormat;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>=<sp/><ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref>[index].format;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref><sp/>=<sp/><ref refid="namespace_k_win_1a671dc1dc484957a0cd4296e5d5593703" kindref="member">formatTable</ref>[index].type;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uploadFormat<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref><sp/>=<sp/>GL_RGBA8;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>=<sp/>GL_BGRA;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref><sp/>=<sp/>GL_UNSIGNED_INT_8_8_8_8_REV;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uploadFormat<sp/>=<sp/>QImage::Format_ARGB32_Premultiplied;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;supportsARGB32Textures())<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref><sp/>=<sp/>GL_BGRA_EXT;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>=<sp/>GL_BGRA_EXT;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref><sp/>=<sp/>GL_UNSIGNED_BYTE;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uploadFormat<sp/>=<sp/>QImage::Format_ARGB32_Premultiplied;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref><sp/>=<sp/>GL_RGBA;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>=<sp/>GL_RGBA;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref><sp/>=<sp/>GL_UNSIGNED_BYTE;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uploadFormat<sp/>=<sp/>QImage::Format_RGBA8888_Premultiplied;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>QImage<sp/>im<sp/>=<sp/>image;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(im.format()<sp/>!=<sp/>uploadFormat)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im.convertTo(uploadFormat);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" kindref="member">texture</ref>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>glPixelStorei(GL_UNPACK_ROW_LENGTH,<sp/>im.bytesPerLine()<sp/>/<sp/>(im.depth()<sp/>/<sp/>8));</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!context-&gt;isOpenGLES())<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;supportsTextureStorage())<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexStorage2D(GL_TEXTURE_2D,<sp/>1,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>,<sp/>im.width(),<sp/>im.height());</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexSubImage2D(GL_TEXTURE_2D,<sp/>0,<sp/>0,<sp/>0,<sp/>im.width(),<sp/>im.height(),<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/>im.constBits());</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAX_LEVEL,<sp/>0);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexImage2D(GL_TEXTURE_2D,<sp/>0,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>,<sp/>im.width(),<sp/>im.height(),<sp/>0,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/>im.constBits());</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexImage2D(GL_TEXTURE_2D,<sp/>0,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>,<sp/>im.width(),<sp/>im.height(),<sp/>0,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/>im.constBits());</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>glPixelStorei(GL_UNPACK_ROW_LENGTH,<sp/>0);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>0);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;GLTexture&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1ad2e7540fd78f144ccfd5fb010bff9a36" kindref="member">GLTexture</ref>(GL_TEXTURE_2D,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" kindref="member">texture</ref>,<sp/><ref refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" kindref="member">internalFormat</ref>,<sp/>image.size(),<sp/>1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a16cbb90948f3bcab5a9ea45724e0ca17" kindref="member">OutputTransform::FlipY</ref>));</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="class_k_win_1_1_g_l_texture_1af2232b9dada7294a45a7a9e2784068d6" refkind="member"><highlight class="normal">std::unique_ptr&lt;GLTexture&gt;<sp/><ref refid="class_k_win_1_1_g_l_texture_1abfb1321ce70899df263d8c8db90a2d59" kindref="member">GLTexture::upload</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pixmap)</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_texture_1abfb1321ce70899df263d8c8db90a2d59" kindref="member">upload</ref>(pixmap.toImage());</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/opengl/gltexture.cpp"/>
  </compounddef>
</doxygen>
