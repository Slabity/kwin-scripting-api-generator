<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_output_configuration_store" kind="class" language="C++" prot="public">
    <compoundname>KWin::OutputConfigurationStore</compoundname>
    <includes refid="outputconfigurationstore_8h" local="no">outputconfigurationstore.h</includes>
    <innerclass refid="struct_k_win_1_1_output_configuration_store_1_1_mode_data" prot="private">KWin::OutputConfigurationStore::ModeData</innerclass>
    <innerclass refid="struct_k_win_1_1_output_configuration_store_1_1_output_state" prot="private">KWin::OutputConfigurationStore::OutputState</innerclass>
    <innerclass refid="struct_k_win_1_1_output_configuration_store_1_1_setup" prot="private">KWin::OutputConfigurationStore::Setup</innerclass>
    <innerclass refid="struct_k_win_1_1_output_configuration_store_1_1_setup_state" prot="private">KWin::OutputConfigurationStore::SetupState</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_output_configuration_store_1a8481f7c9645ddde31a284378bb580d5d" prot="public" static="no" strong="yes">
        <type></type>
        <name>ConfigType</name>
        <qualifiedname>KWin::OutputConfigurationStore::ConfigType</qualifiedname>
        <enumvalue id="class_k_win_1_1_output_configuration_store_1a8481f7c9645ddde31a284378bb580d5da0022667e8ec30cacbd6ba784899fb9fe" prot="public">
          <name>Preexisting</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_configuration_store_1a8481f7c9645ddde31a284378bb580d5da5c5f06440fcb85cd5c8cfafe32e34b78" prot="public">
          <name>Generated</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="34" column="5" bodyfile="kwin/src/outputconfigurationstore.h" bodystart="34" bodyend="37"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_output_configuration_store_1ab0ac3cfbd1de539799bf48e2a56c066f" prot="private" static="no" mutable="no">
        <type>QList&lt; OutputState &gt;</type>
        <definition>QList&lt;OutputState&gt; KWin::OutputConfigurationStore::m_outputs</definition>
        <argsstring></argsstring>
        <name>m_outputs</name>
        <qualifiedname>KWin::OutputConfigurationStore::m_outputs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="103" column="11" bodyfile="kwin/src/outputconfigurationstore.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_configuration_store_1ab22fe04c99be81f55476640c6ec20be2" prot="private" static="no" mutable="no">
        <type>QList&lt; Setup &gt;</type>
        <definition>QList&lt;Setup&gt; KWin::OutputConfigurationStore::m_setups</definition>
        <argsstring></argsstring>
        <name>m_setups</name>
        <qualifiedname>KWin::OutputConfigurationStore::m_setups</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="104" column="11" bodyfile="kwin/src/outputconfigurationstore.h" bodystart="104" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1a59aac47cccf1f91dc68ebdf7244cb4bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::OutputConfigurationStore::OutputConfigurationStore</definition>
        <argsstring>()</argsstring>
        <name>OutputConfigurationStore</name>
        <qualifiedname>KWin::OutputConfigurationStore::OutputConfigurationStore</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="31" column="5" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1ae552b6a06a73b185fa8661d1d5d29f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::OutputConfigurationStore::~OutputConfigurationStore</definition>
        <argsstring>()</argsstring>
        <name>~OutputConfigurationStore</name>
        <qualifiedname>KWin::OutputConfigurationStore::~OutputConfigurationStore</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="32" column="5" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1aa68b6ca50e89027095dbf0c1dbcff150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; std::tuple&lt; <ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref>, QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt;, <ref refid="class_k_win_1_1_output_configuration_store_1a8481f7c9645ddde31a284378bb580d5d" kindref="member">ConfigType</ref> &gt; &gt;</type>
        <definition>std::optional&lt; std::tuple&lt; OutputConfiguration, QList&lt; Output * &gt;, OutputConfigurationStore::ConfigType &gt; &gt; KWin::OutputConfigurationStore::queryConfig</definition>
        <argsstring>(const QList&lt; Output * &gt; &amp;outputs, bool isLidClosed, QOrientationReading *orientation, bool isTabletMode)</argsstring>
        <name>queryConfig</name>
        <qualifiedname>KWin::OutputConfigurationStore::queryConfig</qualifiedname>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &amp;</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isLidClosed</declname>
        </param>
        <param>
          <type>QOrientationReading *</type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isTabletMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="38" column="19" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="40" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1a890059337a2ba4c049f6c845b50717e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputConfigurationStore::storeConfig</definition>
        <argsstring>(const QList&lt; Output * &gt; &amp;allOutputs, bool isLidClosed, const OutputConfiguration &amp;config, const QList&lt; Output * &gt; &amp;outputOrder)</argsstring>
        <name>storeConfig</name>
        <qualifiedname>KWin::OutputConfigurationStore::storeConfig</qualifiedname>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &amp;</type>
          <declname>allOutputs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isLidClosed</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &amp;</type>
          <declname>outputOrder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="39" column="10" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="226" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1acf717f0d2500b7fe9e602eccebb391ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref>, QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &gt;</type>
        <definition>std::pair&lt; OutputConfiguration, QList&lt; Output * &gt; &gt; KWin::OutputConfigurationStore::generateConfig</definition>
        <argsstring>(const QList&lt; Output * &gt; &amp;outputs, bool isLidClosed)</argsstring>
        <name>generateConfig</name>
        <qualifiedname>KWin::OutputConfigurationStore::generateConfig</qualifiedname>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &amp;</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isLidClosed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="40" column="15" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="471" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1aad852ff96ac9e8d9a2ddd11a3e85144a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::OutputConfigurationStore::isAutoRotateActive</definition>
        <argsstring>(const QList&lt; Output * &gt; &amp;outputs, bool isTabletMode) const</argsstring>
        <name>isAutoRotateActive</name>
        <qualifiedname>KWin::OutputConfigurationStore::isAutoRotateActive</qualifiedname>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &amp;</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isTabletMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="42" column="10" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="1157" bodyend="1175"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1aab994b88868b5815d4e542cb3010e648" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputConfigurationStore::applyOrientationReading</definition>
        <argsstring>(OutputConfiguration &amp;config, const QList&lt; Output * &gt; &amp;outputs, QOrientationReading *orientation, bool isTabletMode)</argsstring>
        <name>applyOrientationReading</name>
        <qualifiedname>KWin::OutputConfigurationStore::applyOrientationReading</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &amp;</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>QOrientationReading *</type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isTabletMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="45" column="10" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="62" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1a11d8a7dfaaf5a240ec6601f0e29eaec3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; std::pair&lt; <ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref>, QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &gt; &gt;</type>
        <definition>std::optional&lt; std::pair&lt; OutputConfiguration, QList&lt; Output * &gt; &gt; &gt; KWin::OutputConfigurationStore::generateLidClosedConfig</definition>
        <argsstring>(const QList&lt; Output * &gt; &amp;outputs)</argsstring>
        <name>generateLidClosedConfig</name>
        <qualifiedname>KWin::OutputConfigurationStore::generateLidClosedConfig</qualifiedname>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &amp;</type>
          <declname>outputs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="46" column="19" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="410" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1aa8f04ccd6eab819f7c15b511ad542688" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_mode" kindref="compound">OutputMode</ref> &gt;</type>
        <definition>std::shared_ptr&lt; OutputMode &gt; KWin::OutputConfigurationStore::chooseMode</definition>
        <argsstring>(Output *output) const</argsstring>
        <name>chooseMode</name>
        <qualifiedname>KWin::OutputConfigurationStore::chooseMode</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="47" column="21" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="540" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1a903dde1ffd84375bf8df79b77c2e31a1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double KWin::OutputConfigurationStore::chooseScale</definition>
        <argsstring>(Output *output, OutputMode *mode) const</argsstring>
        <name>chooseScale</name>
        <qualifiedname>KWin::OutputConfigurationStore::chooseScale</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output_mode" kindref="compound">OutputMode</ref> *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="48" column="12" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="607" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1a65a8cbceb99949cbe5a7b5c92e749085" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputConfigurationStore::load</definition>
        <argsstring>()</argsstring>
        <name>load</name>
        <qualifiedname>KWin::OutputConfigurationStore::load</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="49" column="10" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="658" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1a98096bcd65b58acae75b60c8beb2926a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputConfigurationStore::save</definition>
        <argsstring>()</argsstring>
        <name>save</name>
        <qualifiedname>KWin::OutputConfigurationStore::save</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="50" column="10" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="983" bodyend="1155"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1ae139462af7be8b89d04d9ac4fde339ba" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref>, QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &gt;</type>
        <definition>std::pair&lt; OutputConfiguration, QList&lt; Output * &gt; &gt; KWin::OutputConfigurationStore::setupToConfig</definition>
        <argsstring>(Setup *setup, const std::unordered_map&lt; Output *, size_t &gt; &amp;outputMap) const</argsstring>
        <name>setupToConfig</name>
        <qualifiedname>KWin::OutputConfigurationStore::setupToConfig</qualifiedname>
        <param>
          <type>Setup *</type>
          <declname>setup</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *, size_t &gt; &amp;</type>
          <declname>outputMap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="99" column="15" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="350" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1ae405d5b90b0b6c660e5e56670fd3dd25" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; std::pair&lt; Setup *, std::unordered_map&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *, size_t &gt; &gt; &gt;</type>
        <definition>std::optional&lt; std::pair&lt; OutputConfigurationStore::Setup *, std::unordered_map&lt; Output *, size_t &gt; &gt; &gt; KWin::OutputConfigurationStore::findSetup</definition>
        <argsstring>(const QList&lt; Output * &gt; &amp;outputs, bool lidClosed)</argsstring>
        <name>findSetup</name>
        <qualifiedname>KWin::OutputConfigurationStore::findSetup</qualifiedname>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &amp;</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lidClosed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="100" column="19" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="99" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_configuration_store_1a94347fd59b7251c888139cac6d48a2cc" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; size_t &gt;</type>
        <definition>std::optional&lt; size_t &gt; KWin::OutputConfigurationStore::findOutput</definition>
        <argsstring>(Output *output, const QList&lt; Output * &gt; &amp;allOutputs) const</argsstring>
        <name>findOutput</name>
        <qualifiedname>KWin::OutputConfigurationStore::findOutput</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &amp;</type>
          <declname>allOutputs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/outputconfigurationstore.h" line="101" column="19" bodyfile="kwin/src/outputconfigurationstore.cpp" bodystart="126" bodyend="224"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="kwin/src/outputconfigurationstore.h" line="28" column="1" bodyfile="kwin/src/outputconfigurationstore.h" bodystart="29" bodyend="105"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_output_configuration_store_1aab994b88868b5815d4e542cb3010e648" prot="private" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>applyOrientationReading</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1aa8f04ccd6eab819f7c15b511ad542688" prot="private" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>chooseMode</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1a903dde1ffd84375bf8df79b77c2e31a1" prot="private" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>chooseScale</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1a8481f7c9645ddde31a284378bb580d5d" prot="public" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>ConfigType</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1a94347fd59b7251c888139cac6d48a2cc" prot="private" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>findOutput</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1ae405d5b90b0b6c660e5e56670fd3dd25" prot="private" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>findSetup</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1acf717f0d2500b7fe9e602eccebb391ae" prot="public" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>generateConfig</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1a11d8a7dfaaf5a240ec6601f0e29eaec3" prot="private" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>generateLidClosedConfig</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1aad852ff96ac9e8d9a2ddd11a3e85144a" prot="public" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>isAutoRotateActive</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1a65a8cbceb99949cbe5a7b5c92e749085" prot="private" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>load</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1ab0ac3cfbd1de539799bf48e2a56c066f" prot="private" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>m_outputs</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1ab22fe04c99be81f55476640c6ec20be2" prot="private" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>m_setups</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1a59aac47cccf1f91dc68ebdf7244cb4bb" prot="public" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>OutputConfigurationStore</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1aa68b6ca50e89027095dbf0c1dbcff150" prot="public" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>queryConfig</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1a98096bcd65b58acae75b60c8beb2926a" prot="private" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>save</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1ae139462af7be8b89d04d9ac4fde339ba" prot="private" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>setupToConfig</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1a890059337a2ba4c049f6c845b50717e7" prot="public" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>storeConfig</name></member>
      <member refid="class_k_win_1_1_output_configuration_store_1ae552b6a06a73b185fa8661d1d5d29f9d" prot="public" virt="non-virtual"><scope>KWin::OutputConfigurationStore</scope><name>~OutputConfigurationStore</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
