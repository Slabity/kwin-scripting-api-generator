<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="pointergestures__v1__p_8h" kind="file" language="C++">
    <compoundname>pointergestures_v1_p.h</compoundname>
    <includes local="yes">qwayland-server-pointer-gestures-unstable-v1.h</includes>
    <includes local="no">QPointer</includes>
    <includedby refid="pointer_8cpp" local="yes">kwin/src/wayland/pointer.cpp</includedby>
    <includedby refid="pointergestures__v1_8cpp" local="yes">kwin/src/wayland/pointergestures_v1.cpp</includedby>
    <includedby refid="seat_8cpp" local="yes">kwin/src/wayland/seat.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/wayland/pointergestures_v1_p.h</label>
        <link refid="pointergestures__v1__p_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>QPointer</label>
      </node>
      <node id="2">
        <label>qwayland-server-pointer-gestures-unstable-v1.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>kwin/src/wayland/pointer.cpp</label>
        <link refid="pointer_8cpp"/>
      </node>
      <node id="3">
        <label>kwin/src/wayland/pointergestures_v1.cpp</label>
        <link refid="pointergestures__v1_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/src/wayland/pointergestures_v1_p.h</label>
        <link refid="pointergestures__v1__p_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>kwin/src/wayland/seat.cpp</label>
        <link refid="seat_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_k_win_1_1_pointer_gestures_v1_interface_private" prot="public">KWin::PointerGesturesV1InterfacePrivate</innerclass>
    <innerclass refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface" prot="public">KWin::PointerSwipeGestureV1Interface</innerclass>
    <innerclass refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface" prot="public">KWin::PointerPinchGestureV1Interface</innerclass>
    <innerclass refid="class_k_win_1_1_pointer_hold_gesture_v1_interface" prot="public">KWin::PointerHoldGestureV1Interface</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2016<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-server-pointer-gestures-unstable-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPointer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_k_win_1_1_pointer_gestures_v1_interface_private" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1a02645a695ed67253bb6ab3ba04a358f8" kindref="member">PointerGesturesV1InterfacePrivate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_pointer_gestures_v1</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1a02645a695ed67253bb6ab3ba04a358f8" kindref="member">PointerGesturesV1InterfacePrivate</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1aa217b522d59cb11602f571dadf73053e" kindref="member">zwp_pointer_gestures_v1_get_swipe_gesture</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>struct<sp/>::wl_resource<sp/>*pointer_resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1a36e633b748466cb21f76fe1e362806c9" kindref="member">zwp_pointer_gestures_v1_get_pinch_gesture</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>struct<sp/>::wl_resource<sp/>*pointer_resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1ad3c8a42f1ca95143b6159331789c21a6" kindref="member">zwp_pointer_gestures_v1_get_hold_gesture</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>struct<sp/>::wl_resource<sp/>*pointer_resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_gestures_v1_interface_private_1ab6c8c7c9b014f74dfbc24fe2771c6820" kindref="member">zwp_pointer_gestures_v1_release</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a138e59852657ea4b9c62bc4456e0bc48" kindref="member">PointerSwipeGestureV1Interface</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_pointer_gesture_swipe_v1</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a138e59852657ea4b9c62bc4456e0bc48" kindref="member">PointerSwipeGestureV1Interface</ref>(<ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a138e59852657ea4b9c62bc4456e0bc48" kindref="member">PointerSwipeGestureV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a4f89ebf9f6a0ce2fbb50341c430b09b5" kindref="member">get</ref>(<ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a22abae7f730a48d61867fb66c7545a16" kindref="member">sendBegin</ref>(quint32<sp/>serial,<sp/>quint32<sp/>fingerCount);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a44eb7d129fd0df10d5a19cc12079a8ba" kindref="member">sendUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a459d4d8cecf1a7a83f78ccf8a75f8372" kindref="member">sendEnd</ref>(quint32<sp/>serial);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a1b54ffc349d27c19503bd6f60f7165ea" kindref="member">sendCancel</ref>(quint32<sp/>serial);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1ac163817892d5d95d567a84572455c416" kindref="member">zwp_pointer_gesture_swipe_v1_destroy</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointer&lt;ClientConnection&gt;<sp/>focusedClient;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a946d5b69c5656e9182141a7945e7d8f3" kindref="member">PointerPinchGestureV1Interface</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_pointer_gesture_pinch_v1</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a946d5b69c5656e9182141a7945e7d8f3" kindref="member">PointerPinchGestureV1Interface</ref>(<ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a946d5b69c5656e9182141a7945e7d8f3" kindref="member">PointerPinchGestureV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a3bb1458c78e8b4e1e9df6e1967b7ac86" kindref="member">get</ref>(<ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1acc1cf84166568fd3e01f5ca31c9cdd1a" kindref="member">sendBegin</ref>(quint32<sp/>serial,<sp/>quint32<sp/>fingerCount);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1ab8c12f6b5dbfcba3610e22a8cdbb9f01" kindref="member">sendUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>qreal<sp/>scale,<sp/>qreal<sp/>rotation);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a343e4dbd4b211f755d9e7cfada9ff523" kindref="member">sendEnd</ref>(quint32<sp/>serial);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a8ba5c3d5cfb677e7056d1495a26b371f" kindref="member">sendCancel</ref>(quint32<sp/>serial);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a735f7bf19d7b7cd33c781794ee66380d" kindref="member">zwp_pointer_gesture_pinch_v1_destroy</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointer&lt;ClientConnection&gt;<sp/>focusedClient;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_k_win_1_1_pointer_hold_gesture_v1_interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1ae0c60fe91e5d5004712741a8a988ada2" kindref="member">PointerHoldGestureV1Interface</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWaylandServer::zwp_pointer_gesture_hold_v1</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1ae0c60fe91e5d5004712741a8a988ada2" kindref="member">PointerHoldGestureV1Interface</ref>(<ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1ae0c60fe91e5d5004712741a8a988ada2" kindref="member">PointerHoldGestureV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a7968e746a56eea8df0d7d851172d6600" kindref="member">get</ref>(<ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a0b0849b9220e9dd0bd7d8c47a2635704" kindref="member">sendBegin</ref>(quint32<sp/>serial,<sp/>quint32<sp/>fingerCount);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a3a3002db0b773226c09276da596a18bd" kindref="member">sendEnd</ref>(quint32<sp/>serial);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a4476049a4c609b1fa6fc317234eec239" kindref="member">sendCancel</ref>(quint32<sp/>serial);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a8697d4c2ec47f45e3d215d5997f82b30" kindref="member">zwp_pointer_gesture_hold_v1_destroy</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointer&lt;ClientConnection&gt;<sp/>focusedClient;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/pointergestures_v1_p.h"/>
  </compounddef>
</doxygen>
