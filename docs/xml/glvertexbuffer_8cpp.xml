<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="glvertexbuffer_8cpp" kind="file" language="C++">
    <compoundname>glvertexbuffer.cpp</compoundname>
    <includes refid="glvertexbuffer_8h" local="yes">glvertexbuffer.h</includes>
    <includes refid="glframebuffer_8h" local="yes">glframebuffer.h</includes>
    <includes refid="glplatform_8h" local="yes">glplatform.h</includes>
    <includes refid="glshader_8h" local="yes">glshader.h</includes>
    <includes refid="glshadermanager_8h" local="yes">glshadermanager.h</includes>
    <includes refid="glutils_8h" local="yes">glutils.h</includes>
    <includes refid="glvertexbuffer__p_8h" local="yes">glvertexbuffer_p.h</includes>
    <includes refid="common_8h" local="yes">utils/common.h</includes>
    <includes local="no">QVector4D</includes>
    <includes local="no">bitset</includes>
    <includes local="no">deque</includes>
    <incdepgraph>
      <node id="27">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>opengl/eglcontext.h</label>
        <link refid="eglcontext_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>glframebuffer.h</label>
        <link refid="glframebuffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>glplatform.h</label>
        <link refid="glplatform_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>glshader.h</label>
        <link refid="glshader_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>glshadermanager.h</label>
        <link refid="glshadermanager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>opengl/gltexture.h</label>
        <link refid="gltexture_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>glutils.h</label>
        <link refid="glutils_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/opengl/glvertexbuffer.cpp</label>
        <link refid="glvertexbuffer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>glvertexbuffer_p.h</label>
        <link refid="glvertexbuffer__p_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>QByteArray</label>
      </node>
      <node id="4">
        <label>QColor</label>
      </node>
      <node id="17">
        <label>QCoreApplication</label>
      </node>
      <node id="43">
        <label>QDebug</label>
      </node>
      <node id="45">
        <label>QExplicitlySharedDataPointer</label>
      </node>
      <node id="32">
        <label>QFlags</label>
      </node>
      <node id="18">
        <label>QImage</label>
      </node>
      <node id="41">
        <label>QList</label>
      </node>
      <node id="51">
        <label>QLoggingCategory</label>
      </node>
      <node id="29">
        <label>QMatrix3x3</label>
      </node>
      <node id="28">
        <label>QMatrix4x4</label>
      </node>
      <node id="39">
        <label>QObject</label>
      </node>
      <node id="19">
        <label>QPoint</label>
      </node>
      <node id="12">
        <label>QRect</label>
      </node>
      <node id="5">
        <label>QRegion</label>
      </node>
      <node id="24">
        <label>QSet</label>
      </node>
      <node id="42">
        <label>QSize</label>
      </node>
      <node id="13">
        <label>QStack</label>
      </node>
      <node id="23">
        <label>QString</label>
      </node>
      <node id="44">
        <label>QUuid</label>
      </node>
      <node id="20">
        <label>QVariant</label>
      </node>
      <node id="6">
        <label>QVector2D</label>
      </node>
      <node id="30">
        <label>QVector3D</label>
      </node>
      <node id="53">
        <label>QVector4D</label>
      </node>
      <node id="54">
        <label>bitset</label>
      </node>
      <node id="52">
        <label>climits</label>
      </node>
      <node id="16">
        <label>config-kwin.h</label>
      </node>
      <node id="55">
        <label>deque</label>
      </node>
      <node id="46">
        <label>epoxy/egl.h</label>
      </node>
      <node id="7">
        <label>epoxy/gl.h</label>
      </node>
      <node id="47">
        <label>functional</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
      <node id="33">
        <label>map</label>
      </node>
      <node id="25">
        <label>memory</label>
      </node>
      <node id="8">
        <label>optional</label>
      </node>
      <node id="9">
        <label>ranges</label>
      </node>
      <node id="10">
        <label>span</label>
      </node>
      <node id="49">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_k_win_1_1_vertex_attrib" prot="public">KWin::VertexAttrib</innerclass>
    <innerclass refid="struct_k_win_1_1_buffer_fence" prot="public">KWin::BufferFence</innerclass>
    <innerclass refid="struct_k_win_1_1_frame_sizes_array" prot="public">KWin::FrameSizesArray</innerclass>
    <innerclass refid="class_k_win_1_1_g_l_vertex_buffer_private" prot="public">KWin::GLVertexBufferPrivate</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2006-2007<sp/>Rivo<sp/>Laks<sp/>&lt;rivolaks@hot.ee&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2010,<sp/>2011<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@kde.org&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glvertexbuffer_8h" kindref="compound">glvertexbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glframebuffer_8h" kindref="compound">glframebuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glplatform_8h" kindref="compound">glplatform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glshader_8h" kindref="compound">glshader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glshadermanager_8h" kindref="compound">glshadermanager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glutils_8h" kindref="compound">glutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glvertexbuffer__p_8h" kindref="compound">glvertexbuffer_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">utils/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QVector4D&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bitset&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Certain<sp/>GPUs,<sp/>especially<sp/>mobile,<sp/>require<sp/>the<sp/>data<sp/>copied<sp/>to<sp/>the<sp/>GPU<sp/>to<sp/>be<sp/>aligned<sp/>to<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>certain<sp/>amount<sp/>of<sp/>bytes.<sp/>For<sp/>example,<sp/>the<sp/>Mali<sp/>GPU<sp/>requires<sp/>data<sp/>to<sp/>be<sp/>aligned<sp/>to<sp/>8<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>helps<sp/>ensure<sp/>that<sp/>the<sp/>data<sp/>is<sp/>aligned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="31" refid="namespace_k_win_1a589f408567ff14915728d5c320d281ac" refkind="member"><highlight class="normal">T<sp/><ref refid="namespace_k_win_1a589f408567ff14915728d5c320d281ac" kindref="member">align</ref>(T<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value<sp/>+<sp/>bytes<sp/>-<sp/>1)<sp/>&amp;<sp/>~T(bytes<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_k_win_1_1_index_buffer_1a776ebf8df0bfd76f2d95dc235f16cf46" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_index_buffer_1a776ebf8df0bfd76f2d95dc235f16cf46" kindref="member">IndexBuffer::IndexBuffer</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>maximum<sp/>number<sp/>of<sp/>quads<sp/>we<sp/>can<sp/>render<sp/>with<sp/>16<sp/>bit<sp/>indices<sp/>is<sp/>16,384.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>we<sp/>start<sp/>with<sp/>512<sp/>and<sp/>grow<sp/>the<sp/>buffer<sp/>as<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenBuffers(1,<sp/>&amp;m_buffer);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_index_buffer_1aa3d951cf3299602362505d4bdc3bfd19" kindref="member">accommodate</ref>(512);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_k_win_1_1_index_buffer_1a847fe155dcbaf228494bac12f8ee353f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_index_buffer_1a847fe155dcbaf228494bac12f8ee353f" kindref="member">IndexBuffer::~IndexBuffer</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>())<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_OPENGL,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>delete<sp/>index<sp/>buffer<sp/>because<sp/>no<sp/>context<sp/>is<sp/>current&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteBuffers(1,<sp/>&amp;m_buffer);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_k_win_1_1_index_buffer_1aa3d951cf3299602362505d4bdc3bfd19" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_index_buffer_1aa3d951cf3299602362505d4bdc3bfd19" kindref="member">IndexBuffer::accommodate</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>need<sp/>to<sp/>grow<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&lt;=<sp/>m_count)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(m_count<sp/>*<sp/>2<sp/>&lt;<sp/>std::numeric_limits&lt;uint16_t&gt;::max()<sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>oldCount<sp/>=<sp/>m_count;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>m_count<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>m_data.reserve(m_count<sp/>*<sp/>6);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>oldCount;<sp/>i<sp/>&lt;<sp/>m_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>offset<sp/>=<sp/>i<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data[i<sp/>*<sp/>6<sp/>+<sp/>0]<sp/>=<sp/>offset<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data[i<sp/>*<sp/>6<sp/>+<sp/>1]<sp/>=<sp/>offset<sp/>+<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data[i<sp/>*<sp/>6<sp/>+<sp/>2]<sp/>=<sp/>offset<sp/>+<sp/>3;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data[i<sp/>*<sp/>6<sp/>+<sp/>3]<sp/>=<sp/>offset<sp/>+<sp/>3;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data[i<sp/>*<sp/>6<sp/>+<sp/>4]<sp/>=<sp/>offset<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data[i<sp/>*<sp/>6<sp/>+<sp/>5]<sp/>=<sp/>offset<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,<sp/>m_buffer);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ELEMENT_ARRAY_BUFFER,<sp/>m_count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t),<sp/>m_data.data(),<sp/>GL_STATIC_DRAW);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_k_win_1_1_index_buffer_1ad10693a06aaf98c0e36a14d2a912c3d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_index_buffer_1ad10693a06aaf98c0e36a14d2a912c3d1" kindref="member">IndexBuffer::bind</ref>()</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,<sp/>m_buffer);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="struct_k_win_1_1_vertex_attrib" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_vertex_attrib" kindref="compound">VertexAttrib</ref></highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85" refid="struct_k_win_1_1_vertex_attrib_1af3dcc067d8df3459e60cb2e495d19bf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_vertex_attrib_1af3dcc067d8df3459e60cb2e495d19bf8" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="86" refid="struct_k_win_1_1_vertex_attrib_1a8610c8d91839531a20223173d64f1932" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/><ref refid="struct_k_win_1_1_vertex_attrib_1a8610c8d91839531a20223173d64f1932" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="87" refid="struct_k_win_1_1_vertex_attrib_1acff5ecfe7a8465172bb21f5f9c385401" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_vertex_attrib_1acff5ecfe7a8465172bb21f5f9c385401" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="struct_k_win_1_1_buffer_fence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_buffer_fence" kindref="compound">BufferFence</ref></highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94" refid="struct_k_win_1_1_buffer_fence_1afa95d5161ddc23a0bf269285ae0f0f69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLsync<sp/><ref refid="struct_k_win_1_1_buffer_fence_1afa95d5161ddc23a0bf269285ae0f0f69" kindref="member">sync</ref>;</highlight></codeline>
<codeline lineno="95" refid="struct_k_win_1_1_buffer_fence_1a6d9d515e3d8271f45285afb975ff8426" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>intptr_t<sp/><ref refid="struct_k_win_1_1_buffer_fence_1a6d9d515e3d8271f45285afb975ff8426" kindref="member">nextEnd</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="struct_k_win_1_1_buffer_fence_1a03b729a36a49b1bfe4cbbdc876747cb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_buffer_fence_1a03b729a36a49b1bfe4cbbdc876747cb5" kindref="member">signaled</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="98"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>value;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetSynciv(<ref refid="struct_k_win_1_1_buffer_fence_1afa95d5161ddc23a0bf269285ae0f0f69" kindref="member">sync</ref>,<sp/>GL_SYNC_STATUS,<sp/>1,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;value);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>==<sp/>GL_SIGNALED;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deleteAll(std::deque&lt;BufferFence&gt;<sp/>&amp;fences)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BufferFence<sp/>&amp;fence<sp/>:<sp/>fences)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteSync(fence.sync);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>fences.clear();</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Count&gt;</highlight></codeline>
<codeline lineno="117" refid="struct_k_win_1_1_frame_sizes_array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_frame_sizes_array_1aa1339c6cbd651439cb84a1ad34196f3f" kindref="member">FrameSizesArray</ref></highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120" refid="struct_k_win_1_1_frame_sizes_array_1aa1339c6cbd651439cb84a1ad34196f3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_frame_sizes_array_1aa1339c6cbd651439cb84a1ad34196f3f" kindref="member">FrameSizesArray</ref>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_array.fill(0);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="struct_k_win_1_1_frame_sizes_array_1a3ca0ab74c13e431d6ac3e748b3db244d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_frame_sizes_array_1a3ca0ab74c13e431d6ac3e748b3db244d" kindref="member">push</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_array[m_index]<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_index<sp/>=<sp/>(m_index<sp/>+<sp/>1)<sp/>%<sp/>Count;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="struct_k_win_1_1_frame_sizes_array_1af6579924b889f1fc169015e887c104b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_frame_sizes_array_1af6579924b889f1fc169015e887c104b3" kindref="member">average</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="132"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>:<sp/>m_array)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum<sp/>/<sp/>Count;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;size_t,<sp/>Count&gt;<sp/>m_array;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//*********************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GLVertexBufferPrivate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//*********************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="class_k_win_1_1_g_l_vertex_buffer_private" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a1eb5d6ce51e7cd86f396abfbe09e5a3d" kindref="member">GLVertexBufferPrivate</ref></highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="151" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a1eb5d6ce51e7cd86f396abfbe09e5a3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a1eb5d6ce51e7cd86f396abfbe09e5a3d" kindref="member">GLVertexBufferPrivate</ref>(<ref refid="class_k_win_1_1_g_l_vertex_buffer_1aa8b304b72be4140ba69a72e2061699d3" kindref="member">GLVertexBuffer::UsageHint</ref><sp/>usageHint)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3fb4b713fe4502245a13850fce8371ad" kindref="member">vertexCount</ref>(0)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ab4dfaea3566f01f7acc019b486bd4a79" kindref="member">persistent</ref>(false)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" kindref="member">bufferSize</ref>(0)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ada8e24099c6e3c043f33b2f79d6cb10b" kindref="member">bufferEnd</ref>(0)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a13f54092b4db4bb7af28b2f28654399c" kindref="member">mappedSize</ref>(0)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a76b821e485e7973feccfaff2acbc7acf" kindref="member">frameSize</ref>(0)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a668ddff4d0a87a0dce29f7a00b02fc2b" kindref="member">nextOffset</ref>(0)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a9ad0ba658e80d3e3362db998d177aea1" kindref="member">baseAddress</ref>(0)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a2a90e2069f0af3fa5930510b3f8e61e8" kindref="member">map</ref>(nullptr)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGenBuffers(1,<sp/>&amp;<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad3d493751413d52cfc34be759cb8d2d7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(usageHint)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1aa8b304b72be4140ba69a72e2061699d3af08b2b530b3150ccbba92816705eb07c" kindref="member">GLVertexBuffer::Dynamic</ref>:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a13ba77d7d655084793855cd6f51f28c1" kindref="member">usage</ref><sp/>=<sp/>GL_DYNAMIC_DRAW;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1aa8b304b72be4140ba69a72e2061699d3a8bdf6b4d70080826d3dd0112cd024d01" kindref="member">GLVertexBuffer::Static</ref>:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a13ba77d7d655084793855cd6f51f28c1" kindref="member">usage</ref><sp/>=<sp/>GL_STATIC_DRAW;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a13ba77d7d655084793855cd6f51f28c1" kindref="member">usage</ref><sp/>=<sp/>GL_STREAM_DRAW;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_k_win_1_1_g_l_vertex_buffer_private_1aadd6229f10312486bba2a64515445074" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1aadd6229f10312486bba2a64515445074" kindref="member">~GLVertexBufferPrivate</ref>()</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>())<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_OPENGL,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>delete<sp/>vertex<sp/>buffer<sp/>because<sp/>no<sp/>context<sp/>is<sp/>current&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deleteAll(<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3dd16a54ed6b9505fae896541e3335d5" kindref="member">fences</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad3d493751413d52cfc34be759cb8d2d7" kindref="member">buffer</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteBuffers(1,<sp/>&amp;<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad3d493751413d52cfc34be759cb8d2d7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a2a90e2069f0af3fa5930510b3f8e61e8" kindref="member">map</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a41da6e8535c61371d71ebeb2245975ab" kindref="member">bindArrays</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1acaef53e8213a6c359c22a1e04ac8ac43" kindref="member">unbindArrays</ref>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1aff1d72e637d4438b12ced8af7f3ce1aa" kindref="member">reallocateBuffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>GLvoid<sp/>*<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1af2b2fe4bb6e6df2e71ae84d64ccbfc85" kindref="member">mapNextFreeRange</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad793567affd9366f01302fe7e1493747" kindref="member">reallocatePersistentBuffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad0e6d68782fb05aee2ca7953a78b8a4b" kindref="member">awaitFence</ref>(intptr_t<sp/>offset);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>GLvoid<sp/>*<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1af586aac4ca835c7b16bf4282428512d6" kindref="member">getIdleRange</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad3d493751413d52cfc34be759cb8d2d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad3d493751413d52cfc34be759cb8d2d7" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="200" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a13ba77d7d655084793855cd6f51f28c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a13ba77d7d655084793855cd6f51f28c1" kindref="member">usage</ref>;</highlight></codeline>
<codeline lineno="201" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3fb4b713fe4502245a13850fce8371ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3fb4b713fe4502245a13850fce8371ad" kindref="member">vertexCount</ref>;</highlight></codeline>
<codeline lineno="202" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3ce2bb09ede7d57a2cb1cf4160b3fd9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3ce2bb09ede7d57a2cb1cf4160b3fd9b" kindref="member">dataStore</ref>;</highlight></codeline>
<codeline lineno="203" refid="class_k_win_1_1_g_l_vertex_buffer_private_1ab4dfaea3566f01f7acc019b486bd4a79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ab4dfaea3566f01f7acc019b486bd4a79" kindref="member">persistent</ref>;</highlight></codeline>
<codeline lineno="204" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" kindref="member">bufferSize</ref>;</highlight></codeline>
<codeline lineno="205" refid="class_k_win_1_1_g_l_vertex_buffer_private_1ada8e24099c6e3c043f33b2f79d6cb10b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>intptr_t<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ada8e24099c6e3c043f33b2f79d6cb10b" kindref="member">bufferEnd</ref>;</highlight></codeline>
<codeline lineno="206" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a13f54092b4db4bb7af28b2f28654399c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a13f54092b4db4bb7af28b2f28654399c" kindref="member">mappedSize</ref>;</highlight></codeline>
<codeline lineno="207" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a76b821e485e7973feccfaff2acbc7acf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a76b821e485e7973feccfaff2acbc7acf" kindref="member">frameSize</ref>;</highlight></codeline>
<codeline lineno="208" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a668ddff4d0a87a0dce29f7a00b02fc2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>intptr_t<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a668ddff4d0a87a0dce29f7a00b02fc2b" kindref="member">nextOffset</ref>;</highlight></codeline>
<codeline lineno="209" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a9ad0ba658e80d3e3362db998d177aea1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>intptr_t<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a9ad0ba658e80d3e3362db998d177aea1" kindref="member">baseAddress</ref>;</highlight></codeline>
<codeline lineno="210" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a2a90e2069f0af3fa5930510b3f8e61e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a2a90e2069f0af3fa5930510b3f8e61e8" kindref="member">map</ref>;</highlight></codeline>
<codeline lineno="211" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3dd16a54ed6b9505fae896541e3335d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::deque&lt;BufferFence&gt;<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3dd16a54ed6b9505fae896541e3335d5" kindref="member">fences</ref>;</highlight></codeline>
<codeline lineno="212" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a25d5b32e0df13ff5182a8c7187dc2e99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_frame_sizes_array" kindref="compound">FrameSizesArray&lt;4&gt;</ref><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a25d5b32e0df13ff5182a8c7187dc2e99" kindref="member">frameSizes</ref>;</highlight></codeline>
<codeline lineno="213" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a84753cabfa3a9dc698025c61d73d7dec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;VertexAttrib,<sp/>VertexAttributeCount&gt;<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a84753cabfa3a9dc698025c61d73d7dec" kindref="member">attrib</ref>;</highlight></codeline>
<codeline lineno="214" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a92f685ce095dddd8c0db23c1ceebdc9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a92f685ce095dddd8c0db23c1ceebdc9d" kindref="member">attribStride</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="215" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a069cb2dcd58dc2319c4fd2851a16d1ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::bitset&lt;32&gt;<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a069cb2dcd58dc2319c4fd2851a16d1ae" kindref="member">enabledArrays</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="class_k_win_1_1_g_l_vertex_buffer_private_1a41da6e8535c61371d71ebeb2245975ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a41da6e8535c61371d71ebeb2245975ab" kindref="member">GLVertexBufferPrivate::bindArrays</ref>()</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad3d493751413d52cfc34be759cb8d2d7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a069cb2dcd58dc2319c4fd2851a16d1ae" kindref="member">enabledArrays</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a069cb2dcd58dc2319c4fd2851a16d1ae" kindref="member">enabledArrays</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertexAttribPointer(i,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a84753cabfa3a9dc698025c61d73d7dec" kindref="member">attrib</ref>[i].size,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a84753cabfa3a9dc698025c61d73d7dec" kindref="member">attrib</ref>[i].<ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/>GL_FALSE,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a92f685ce095dddd8c0db23c1ceebdc9d" kindref="member">attribStride</ref>,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*)(<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a9ad0ba658e80d3e3362db998d177aea1" kindref="member">baseAddress</ref><sp/>+<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a84753cabfa3a9dc698025c61d73d7dec" kindref="member">attrib</ref>[i].offset));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(i);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="class_k_win_1_1_g_l_vertex_buffer_private_1acaef53e8213a6c359c22a1e04ac8ac43" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1acaef53e8213a6c359c22a1e04ac8ac43" kindref="member">GLVertexBufferPrivate::unbindArrays</ref>()</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a069cb2dcd58dc2319c4fd2851a16d1ae" kindref="member">enabledArrays</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a069cb2dcd58dc2319c4fd2851a16d1ae" kindref="member">enabledArrays</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDisableVertexAttribArray(i);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad793567affd9366f01302fe7e1493747" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad793567affd9366f01302fe7e1493747" kindref="member">GLVertexBufferPrivate::reallocatePersistentBuffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad3d493751413d52cfc34be759cb8d2d7" kindref="member">buffer</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>also<sp/>unmaps<sp/>and<sp/>unbinds<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteBuffers(1,<sp/>&amp;<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad3d493751413d52cfc34be759cb8d2d7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad3d493751413d52cfc34be759cb8d2d7" kindref="member">buffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deleteAll(<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3dd16a54ed6b9505fae896541e3335d5" kindref="member">fences</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad3d493751413d52cfc34be759cb8d2d7" kindref="member">buffer</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGenBuffers(1,<sp/>&amp;<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad3d493751413d52cfc34be759cb8d2d7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Round<sp/>the<sp/>size<sp/>up<sp/>to<sp/>64<sp/>kb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>minSize<sp/>=<sp/>std::max&lt;size_t&gt;(<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a25d5b32e0df13ff5182a8c7187dc2e99" kindref="member">frameSizes</ref>.average()<sp/>*<sp/>3,<sp/>128<sp/>*<sp/>1024);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" kindref="member">bufferSize</ref><sp/>=<sp/>std::max(size,<sp/>minSize);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLbitfield<sp/>storage<sp/>=<sp/>GL_DYNAMIC_STORAGE_BIT;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLbitfield<sp/>access<sp/>=<sp/>GL_MAP_WRITE_BIT<sp/>|<sp/>GL_MAP_PERSISTENT_BIT<sp/>|<sp/>GL_MAP_COHERENT_BIT;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad3d493751413d52cfc34be759cb8d2d7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferStorage(GL_ARRAY_BUFFER,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" kindref="member">bufferSize</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>storage<sp/>|<sp/>access);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a2a90e2069f0af3fa5930510b3f8e61e8" kindref="member">map</ref><sp/>=<sp/>(uint8_t<sp/>*)glMapBufferRange(GL_ARRAY_BUFFER,<sp/>0,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" kindref="member">bufferSize</ref>,<sp/>access);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a668ddff4d0a87a0dce29f7a00b02fc2b" kindref="member">nextOffset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ada8e24099c6e3c043f33b2f79d6cb10b" kindref="member">bufferEnd</ref><sp/>=<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" kindref="member">bufferSize</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad0e6d68782fb05aee2ca7953a78b8a4b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad0e6d68782fb05aee2ca7953a78b8a4b" kindref="member">GLVertexBufferPrivate::awaitFence</ref>(intptr_t<sp/>end)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>fences<sp/>until<sp/>we<sp/>reach<sp/>the<sp/>end<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3dd16a54ed6b9505fae896541e3335d5" kindref="member">fences</ref>.empty()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3dd16a54ed6b9505fae896541e3335d5" kindref="member">fences</ref>.front().nextEnd<sp/>&lt;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteSync(<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3dd16a54ed6b9505fae896541e3335d5" kindref="member">fences</ref>.front().sync);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3dd16a54ed6b9505fae896541e3335d5" kindref="member">fences</ref>.pop_front();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3dd16a54ed6b9505fae896541e3335d5" kindref="member">fences</ref>.empty());</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>on<sp/>the<sp/>next<sp/>fence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_buffer_fence" kindref="compound">BufferFence</ref><sp/>&amp;fence<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3dd16a54ed6b9505fae896541e3335d5" kindref="member">fences</ref>.front();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fence.<ref refid="struct_k_win_1_1_buffer_fence_1a03b729a36a49b1bfe4cbbdc876747cb5" kindref="member">signaled</ref>())<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Stalling<sp/>on<sp/>VBO<sp/>fence&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLenum<sp/>ret<sp/>=<sp/>glClientWaitSync(fence.<ref refid="struct_k_win_1_1_buffer_fence_1afa95d5161ddc23a0bf269285ae0f0f69" kindref="member">sync</ref>,<sp/>GL_SYNC_FLUSH_COMMANDS_BIT,<sp/>1000000000);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>GL_TIMEOUT_EXPIRED<sp/>||<sp/>ret<sp/>==<sp/>GL_WAIT_FAILED)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Wait<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteSync(fence.<ref refid="struct_k_win_1_1_buffer_fence_1afa95d5161ddc23a0bf269285ae0f0f69" kindref="member">sync</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>end<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ada8e24099c6e3c043f33b2f79d6cb10b" kindref="member">bufferEnd</ref><sp/>=<sp/>fence.<ref refid="struct_k_win_1_1_buffer_fence_1a6d9d515e3d8271f45285afb975ff8426" kindref="member">nextEnd</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3dd16a54ed6b9505fae896541e3335d5" kindref="member">fences</ref>.pop_front();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="class_k_win_1_1_g_l_vertex_buffer_private_1af586aac4ca835c7b16bf4282428512d6" refkind="member"><highlight class="normal">GLvoid<sp/>*<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1af586aac4ca835c7b16bf4282428512d6" kindref="member">GLVertexBufferPrivate::getIdleRange</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" kindref="member">bufferSize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad793567affd9366f01302fe7e1493747" kindref="member">reallocatePersistentBuffer</ref>(size<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>wrap-around</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a668ddff4d0a87a0dce29f7a00b02fc2b" kindref="member">nextOffset</ref><sp/>+<sp/>size<sp/>&gt;<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" kindref="member">bufferSize</ref>))<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a668ddff4d0a87a0dce29f7a00b02fc2b" kindref="member">nextOffset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ada8e24099c6e3c043f33b2f79d6cb10b" kindref="member">bufferEnd</ref><sp/>-=<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" kindref="member">bufferSize</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_buffer_fence" kindref="compound">BufferFence</ref><sp/>&amp;fence<sp/>:<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3dd16a54ed6b9505fae896541e3335d5" kindref="member">fences</ref>)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fence.nextEnd<sp/>-=<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" kindref="member">bufferSize</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Emit<sp/>a<sp/>fence<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sync<sp/>=<sp/>glFenceSync(GL_SYNC_GPU_COMMANDS_COMPLETE,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3dd16a54ed6b9505fae896541e3335d5" kindref="member">fences</ref>.push_back(<ref refid="struct_k_win_1_1_buffer_fence" kindref="compound">BufferFence</ref>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sync<sp/>=<sp/>sync,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.nextEnd<sp/>=<sp/>intptr_t(<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" kindref="member">bufferSize</ref>)});</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a668ddff4d0a87a0dce29f7a00b02fc2b" kindref="member">nextOffset</ref><sp/>+<sp/>intptr_t(size)<sp/>&gt;<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ada8e24099c6e3c043f33b2f79d6cb10b" kindref="member">bufferEnd</ref>)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1ad0e6d68782fb05aee2ca7953a78b8a4b" kindref="member">awaitFence</ref>(<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a668ddff4d0a87a0dce29f7a00b02fc2b" kindref="member">nextOffset</ref><sp/>+<sp/>size))<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a2a90e2069f0af3fa5930510b3f8e61e8" kindref="member">map</ref><sp/>+<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a668ddff4d0a87a0dce29f7a00b02fc2b" kindref="member">nextOffset</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="class_k_win_1_1_g_l_vertex_buffer_private_1aff1d72e637d4438b12ced8af7f3ce1aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1aff1d72e637d4438b12ced8af7f3ce1aa" kindref="member">GLVertexBufferPrivate::reallocateBuffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Round<sp/>the<sp/>size<sp/>up<sp/>to<sp/>4<sp/>Kb<sp/>for<sp/>streaming/dynamic<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>minSize<sp/>=<sp/>32768;<sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>size<sp/>for<sp/>streaming<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alloc<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a13ba77d7d655084793855cd6f51f28c1" kindref="member">usage</ref><sp/>!=<sp/>GL_STATIC_DRAW<sp/>?<sp/>std::max(size,<sp/>minSize)<sp/>:<sp/>size;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/>alloc,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a13ba77d7d655084793855cd6f51f28c1" kindref="member">usage</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" kindref="member">bufferSize</ref><sp/>=<sp/>alloc;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="class_k_win_1_1_g_l_vertex_buffer_private_1af2b2fe4bb6e6df2e71ae84d64ccbfc85" refkind="member"><highlight class="normal">GLvoid<sp/>*<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1af2b2fe4bb6e6df2e71ae84d64ccbfc85" kindref="member">GLVertexBufferPrivate::mapNextFreeRange</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>GLbitfield<sp/>access<sp/>=<sp/>GL_MAP_WRITE_BIT<sp/>|<sp/>GL_MAP_INVALIDATE_RANGE_BIT<sp/>|<sp/>GL_MAP_UNSYNCHRONIZED_BIT;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a668ddff4d0a87a0dce29f7a00b02fc2b" kindref="member">nextOffset</ref><sp/>+<sp/>size)<sp/>&gt;<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" kindref="member">bufferSize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reallocate<sp/>the<sp/>data<sp/>store<sp/>if<sp/>it&apos;s<sp/>too<sp/>small.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a3d9fb2ed5b74733b571ad275b077e4e0" kindref="member">bufferSize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1aff1d72e637d4438b12ced8af7f3ce1aa" kindref="member">reallocateBuffer</ref>(size);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>access<sp/>|=<sp/>GL_MAP_INVALIDATE_BUFFER_BIT;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>access<sp/>^=<sp/>GL_MAP_UNSYNCHRONIZED_BIT;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a668ddff4d0a87a0dce29f7a00b02fc2b" kindref="member">nextOffset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>glMapBufferRange(GL_ARRAY_BUFFER,<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_private_1a668ddff4d0a87a0dce29f7a00b02fc2b" kindref="member">nextOffset</ref>,<sp/>size,<sp/>access);</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="class_k_win_1_1_g_l_vertex_buffer_1a723e9f27a712b881f0bd048cba97e342" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a723e9f27a712b881f0bd048cba97e342" kindref="member">GLVertexBuffer::GLVertexBuffer</ref>(<ref refid="class_k_win_1_1_g_l_vertex_buffer_1aa8b304b72be4140ba69a72e2061699d3" kindref="member">UsageHint</ref><sp/>hint)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d(std::make_unique&lt;<ref refid="class_k_win_1_1_g_l_vertex_buffer_private" kindref="compound">GLVertexBufferPrivate</ref>&gt;(hint))</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_vertex_buffer_1af36620dd7745528f78413b808c0c64f1" kindref="member">GLVertexBuffer::~GLVertexBuffer</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="class_k_win_1_1_g_l_vertex_buffer_1a4ae8c8d69eb58f2c37347e0787166d89" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a4ae8c8d69eb58f2c37347e0787166d89" kindref="member">GLVertexBuffer::setData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>GLvoid<sp/>*ptr<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a943919aab590f879966a2737ac6aec47" kindref="member">map</ref>(size);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(ptr,<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a31338f49e5f7bcb61b8b733fd8cfb8f0" kindref="member">unmap</ref>();</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">GLvoid<sp/>*<ref refid="class_k_win_1_1_g_l_vertex_buffer_1a943919aab590f879966a2737ac6aec47" kindref="member">GLVertexBuffer::map</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;mappedSize<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;frameSize<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;persistent)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;getIdleRange(size);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>d-&gt;buffer);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>context<sp/>=<sp/><ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preferBufferSubData<sp/>=<sp/>context-&gt;glPlatform()-&gt;preferBufferSubData();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;hasMapBufferRange()<sp/>&amp;&amp;<sp/>!preferBufferSubData)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(GLvoid<sp/>*)d-&gt;mapNextFreeRange(size);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>can&apos;t<sp/>map<sp/>the<sp/>buffer<sp/>we<sp/>allocate<sp/>local<sp/>memory<sp/>to<sp/>hold<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>data<sp/>and<sp/>return<sp/>a<sp/>pointer<sp/>to<sp/>it.<sp/><sp/>The<sp/>data<sp/>will<sp/>be<sp/>submitted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>actual<sp/>buffer<sp/>object<sp/>when<sp/>the<sp/>user<sp/>calls<sp/>unmap().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(d-&gt;dataStore.size())<sp/>&lt;<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;dataStore.resize(size);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(GLvoid<sp/>*)d-&gt;dataStore.data();</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="class_k_win_1_1_g_l_vertex_buffer_1a31338f49e5f7bcb61b8b733fd8cfb8f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a31338f49e5f7bcb61b8b733fd8cfb8f0" kindref="member">GLVertexBuffer::unmap</ref>()</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;persistent)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;baseAddress<sp/>=<sp/>d-&gt;nextOffset;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;nextOffset<sp/>+=<sp/><ref refid="namespace_k_win_1a589f408567ff14915728d5c320d281ac" kindref="member">align</ref>(d-&gt;mappedSize,<sp/>8);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;mappedSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>context<sp/>=<sp/><ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preferBufferSubData<sp/>=<sp/>context-&gt;glPlatform()-&gt;preferBufferSubData();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;hasMapBufferRange()<sp/>&amp;&amp;<sp/>!preferBufferSubData)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUnmapBuffer(GL_ARRAY_BUFFER);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;baseAddress<sp/>=<sp/>d-&gt;nextOffset;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;nextOffset<sp/>+=<sp/><ref refid="namespace_k_win_1a589f408567ff14915728d5c320d281ac" kindref="member">align</ref>(d-&gt;mappedSize,<sp/>8);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upload<sp/>the<sp/>data<sp/>from<sp/>local<sp/>memory<sp/>to<sp/>the<sp/>buffer<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preferBufferSubData)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d-&gt;nextOffset<sp/>+<sp/>d-&gt;mappedSize)<sp/>&gt;<sp/>d-&gt;bufferSize)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;reallocateBuffer(d-&gt;mappedSize);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;nextOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBufferSubData(GL_ARRAY_BUFFER,<sp/>d-&gt;nextOffset,<sp/>d-&gt;mappedSize,<sp/>d-&gt;dataStore.constData());</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;baseAddress<sp/>=<sp/>d-&gt;nextOffset;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;nextOffset<sp/>+=<sp/><ref refid="namespace_k_win_1a589f408567ff14915728d5c320d281ac" kindref="member">align</ref>(d-&gt;mappedSize,<sp/>8);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/>d-&gt;mappedSize,<sp/>d-&gt;dataStore.data(),<sp/>d-&gt;usage);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;baseAddress<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>local<sp/>memory<sp/>buffer<sp/>if<sp/>it&apos;s<sp/>unlikely<sp/>to<sp/>be<sp/>used<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;usage<sp/>==<sp/>GL_STATIC_DRAW)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;dataStore<sp/>=<sp/>QByteArray();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;mappedSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="class_k_win_1_1_g_l_vertex_buffer_1af939add6737dda7815aceed301b17ba3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1af939add6737dda7815aceed301b17ba3" kindref="member">GLVertexBuffer::setVertexCount</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;vertexCount<sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="class_k_win_1_1_g_l_vertex_buffer_1a4550f562287163e1e64f76c32cb280c8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a4550f562287163e1e64f76c32cb280c8" kindref="member">GLVertexBuffer::setAttribLayout</ref>(std::span&lt;const<sp/>GLVertexAttrib&gt;<sp/>attribs,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;enabledArrays.reset();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;attrib<sp/>:<sp/>attribs)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(attrib.attributeIndex<sp/>&lt;<sp/>d-&gt;attrib.size());</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;attrib[attrib.attributeIndex].size<sp/>=<sp/>attrib.componentCount;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;attrib[attrib.attributeIndex].type<sp/>=<sp/>attrib.type;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;attrib[attrib.attributeIndex].offset<sp/>=<sp/>attrib.relativeOffset;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;enabledArrays[attrib.attributeIndex]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;attribStride<sp/>=<sp/>stride;</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="class_k_win_1_1_g_l_vertex_buffer_1a89f55da383c6fd166cca16c4d5e2b428" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a89f55da383c6fd166cca16c4d5e2b428" kindref="member">GLVertexBuffer::render</ref>(GLenum<sp/>primitiveMode)</highlight></codeline>
<codeline lineno="470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a89f55da383c6fd166cca16c4d5e2b428" kindref="member">render</ref>(<ref refid="namespace_k_win_1a0655524c1f1ba8dbb2cf16a1e4b9bb97" kindref="member">infiniteRegion</ref>(),<sp/>primitiveMode,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="class_k_win_1_1_g_l_vertex_buffer_1ad27485be17f787bbfa4366403e8304b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a89f55da383c6fd166cca16c4d5e2b428" kindref="member">GLVertexBuffer::render</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region,<sp/>GLenum<sp/>primitiveMode,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hardwareClipping)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;bindArrays();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a1bdaa52f784a0ba2cb195f524f9d1902" kindref="member">draw</ref>(region,<sp/>primitiveMode,<sp/>0,<sp/>d-&gt;vertexCount,<sp/>hardwareClipping);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;unbindArrays();</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="class_k_win_1_1_g_l_vertex_buffer_1ac10ee171fa414f4af92501946f147ed6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1ac10ee171fa414f4af92501946f147ed6" kindref="member">GLVertexBuffer::bindArrays</ref>()</highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;bindArrays();</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="class_k_win_1_1_g_l_vertex_buffer_1aef97e5890dc7aaedde08cbdc7c862a07" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1aef97e5890dc7aaedde08cbdc7c862a07" kindref="member">GLVertexBuffer::unbindArrays</ref>()</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;unbindArrays();</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="class_k_win_1_1_g_l_vertex_buffer_1a1bdaa52f784a0ba2cb195f524f9d1902" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a1bdaa52f784a0ba2cb195f524f9d1902" kindref="member">GLVertexBuffer::draw</ref>(GLenum<sp/>primitiveMode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a1bdaa52f784a0ba2cb195f524f9d1902" kindref="member">draw</ref>(<ref refid="namespace_k_win_1a0655524c1f1ba8dbb2cf16a1e4b9bb97" kindref="member">infiniteRegion</ref>(),<sp/>primitiveMode,<sp/>first,<sp/>count,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="class_k_win_1_1_g_l_vertex_buffer_1a18f3b62bfad4e4d25717dfe23e21390f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a1bdaa52f784a0ba2cb195f524f9d1902" kindref="member">GLVertexBuffer::draw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region,<sp/>GLenum<sp/>primitiveMode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hardwareClipping)</highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(primitiveMode<sp/>==<sp/>GL_QUADS)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>()-&gt;<ref refid="class_k_win_1_1_egl_context_1ae26ab62c890706e02750f4ce30976e84" kindref="member">indexBuffer</ref>()-&gt;<ref refid="class_k_win_1_1_index_buffer_1ad10693a06aaf98c0e36a14d2a912c3d1" kindref="member">bind</ref>();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>()-&gt;<ref refid="class_k_win_1_1_egl_context_1ae26ab62c890706e02750f4ce30976e84" kindref="member">indexBuffer</ref>()-&gt;<ref refid="class_k_win_1_1_index_buffer_1aa3d951cf3299602362505d4bdc3bfd19" kindref="member">accommodate</ref>(count<sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>count<sp/>*<sp/>6<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hardwareClipping)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDrawElementsBaseVertex(GL_TRIANGLES,<sp/>count,<sp/>GL_UNSIGNED_SHORT,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>first);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>using<sp/>scissoring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref><sp/>*current<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_framebuffer_1a17ecd994c7b3d3874fe969e548e5063c" kindref="member">GLFramebuffer::currentFramebuffer</ref>();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;r<sp/>:<sp/>region)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glScissor(r.x(),<sp/>current-&gt;<ref refid="class_k_win_1_1_g_l_framebuffer_1a01c4e5f822e4148e44ae7e03fc9620f9" kindref="member">size</ref>().height()<sp/>-<sp/>(r.y()<sp/>+<sp/>r.height()),<sp/>r.width(),<sp/>r.height());</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDrawElementsBaseVertex(GL_TRIANGLES,<sp/>count,<sp/>GL_UNSIGNED_SHORT,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>first);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hardwareClipping)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDrawArrays(primitiveMode,<sp/>first,<sp/>count);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>using<sp/>scissoring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref><sp/>*current<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_framebuffer_1a17ecd994c7b3d3874fe969e548e5063c" kindref="member">GLFramebuffer::currentFramebuffer</ref>();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;r<sp/>:<sp/>region)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glScissor(r.x(),<sp/>current-&gt;<ref refid="class_k_win_1_1_g_l_framebuffer_1a01c4e5f822e4148e44ae7e03fc9620f9" kindref="member">size</ref>().height()<sp/>-<sp/>(r.y()<sp/>+<sp/>r.height()),<sp/>r.width(),<sp/>r.height());</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDrawArrays(primitiveMode,<sp/>first,<sp/>count);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="class_k_win_1_1_g_l_vertex_buffer_1a2e51e925e06dac9fc80941f0febda075" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a2e51e925e06dac9fc80941f0febda075" kindref="member">GLVertexBuffer::reset</ref>()</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;vertexCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="class_k_win_1_1_g_l_vertex_buffer_1a1d7734f12b910b04ed06b0e345b594c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a1d7734f12b910b04ed06b0e345b594c5" kindref="member">GLVertexBuffer::endOfFrame</ref>()</highlight></codeline>
<codeline lineno="535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;persistent)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Emit<sp/>a<sp/>fence<sp/>if<sp/>we<sp/>have<sp/>uploaded<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;frameSize<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;frameSizes.push(d-&gt;frameSize);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;frameSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>the<sp/>buffer<sp/>to<sp/>be<sp/>reallocated<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>next<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>average<sp/>frame<sp/>size<sp/>is<sp/>greater<sp/>than<sp/>half<sp/>the<sp/>size<sp/>of<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;frameSizes.average()<sp/>&gt;<sp/>d-&gt;bufferSize<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deleteAll(d-&gt;fences);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteBuffers(1,<sp/>&amp;d-&gt;buffer);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;bufferSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;nextOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;map<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sync<sp/>=<sp/>glFenceSync(GL_SYNC_GPU_COMMANDS_COMPLETE,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;fences.push_back(<ref refid="struct_k_win_1_1_buffer_fence" kindref="compound">BufferFence</ref>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sync<sp/>=<sp/>sync,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.nextEnd<sp/>=<sp/>intptr_t(d-&gt;nextOffset<sp/>+<sp/>d-&gt;bufferSize)});</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="class_k_win_1_1_g_l_vertex_buffer_1a7297748d72759c31e5026a10c89fb130" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a7297748d72759c31e5026a10c89fb130" kindref="member">GLVertexBuffer::beginFrame</ref>()</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;persistent)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>finished<sp/>fences<sp/>from<sp/>the<sp/>list<sp/>and<sp/>update<sp/>the<sp/>bufferEnd<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(d-&gt;fences.size()<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>d-&gt;fences.front().signaled())<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_buffer_fence" kindref="compound">BufferFence</ref><sp/>&amp;fence<sp/>=<sp/>d-&gt;fences.front();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteSync(fence.<ref refid="struct_k_win_1_1_buffer_fence_1afa95d5161ddc23a0bf269285ae0f0f69" kindref="member">sync</ref>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;bufferEnd<sp/>=<sp/>fence.<ref refid="struct_k_win_1_1_buffer_fence_1a6d9d515e3d8271f45285afb975ff8426" kindref="member">nextEnd</ref>;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;fences.pop_front();</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="class_k_win_1_1_g_l_vertex_buffer_1a4f61e01fc150ca4d947bbf78ba2a9ab8" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a723e9f27a712b881f0bd048cba97e342" kindref="member">GLVertexBuffer</ref><sp/>*<ref refid="class_k_win_1_1_g_l_vertex_buffer_1a4f61e01fc150ca4d947bbf78ba2a9ab8" kindref="member">GLVertexBuffer::streamingBuffer</ref>()</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>()-&gt;<ref refid="class_k_win_1_1_egl_context_1a53e9229acbd52fb5cae93f78755396f5" kindref="member">streamingVbo</ref>();</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="class_k_win_1_1_g_l_vertex_buffer_1a526d9b966fdf28907e1ab7758088edca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a526d9b966fdf28907e1ab7758088edca" kindref="member">GLVertexBuffer::setPersistent</ref>()</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;persistent<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/opengl/glvertexbuffer.cpp"/>
  </compounddef>
</doxygen>
