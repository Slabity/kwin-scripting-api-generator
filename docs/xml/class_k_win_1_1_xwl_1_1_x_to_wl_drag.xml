<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_xwl_1_1_x_to_wl_drag" kind="class" language="C++" prot="public">
    <compoundname>KWin::Xwl::XToWlDrag</compoundname>
    <basecompoundref refid="class_k_win_1_1_xwl_1_1_drag" prot="public" virt="non-virtual">KWin::Xwl::Drag</basecompoundref>
    <includes refid="drag__x_8h" local="no">drag_x.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a1962a7c50516fb65a0691b28ab8bcac0" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_xwl_1_1_dnd" kindref="compound">Dnd</ref> *const</type>
        <definition>Dnd* const KWin::Xwl::XToWlDrag::m_dnd</definition>
        <argsstring></argsstring>
        <name>m_dnd</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::m_dnd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="58" column="15" bodyfile="kwin/src/xwayland/drag_x.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a1e217a39f5fa4dce4554c28e8d407428" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1_1_xwl_1a7c4df38d14fd473ab75d05f2357258ee" kindref="member">Mimes</ref></type>
        <definition>Mimes KWin::Xwl::XToWlDrag::m_offers</definition>
        <argsstring></argsstring>
        <name>m_offers</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::m_offers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="59" column="11" bodyfile="kwin/src/xwayland/drag_x.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a10c2c2c881eaf679ff87fc7396b1dc39" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_xwl_1_1_x11_source" kindref="compound">X11Source</ref> *</type>
        <definition>X11Source* KWin::Xwl::XToWlDrag::m_source</definition>
        <argsstring></argsstring>
        <name>m_source</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::m_source</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="61" column="15" bodyfile="kwin/src/xwayland/drag_x.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a918b46f9e795882340cc52f3c9270526" prot="private" static="no" mutable="no">
        <type>QList&lt; QPair&lt; xcb_timestamp_t, bool &gt; &gt;</type>
        <definition>QList&lt;QPair&lt;xcb_timestamp_t, bool&gt; &gt; KWin::Xwl::XToWlDrag::m_dataRequests</definition>
        <argsstring></argsstring>
        <name>m_dataRequests</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::m_dataRequests</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="62" column="11" bodyfile="kwin/src/xwayland/drag_x.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a4eadcf45cc9a9499ab63e4d3c2a113fb" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_xwl_1_1_wl_visit" kindref="compound">WlVisit</ref> *</type>
        <definition>WlVisit* KWin::Xwl::XToWlDrag::m_visit</definition>
        <argsstring></argsstring>
        <name>m_visit</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::m_visit</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="64" column="13" bodyfile="kwin/src/xwayland/drag_x.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a7ef0d8ff77ed741efe55b1022867fa1e" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_xwl_1_1_wl_visit" kindref="compound">WlVisit</ref> * &gt;</type>
        <definition>QList&lt;WlVisit *&gt; KWin::Xwl::XToWlDrag::m_oldVisits</definition>
        <argsstring></argsstring>
        <name>m_oldVisits</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::m_oldVisits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="65" column="11" bodyfile="kwin/src/xwayland/drag_x.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1afa852cf32c1c966202525e3e9a024481" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Xwl::XToWlDrag::m_performed</definition>
        <argsstring></argsstring>
        <name>m_performed</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::m_performed</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="67" column="10" bodyfile="kwin/src/xwayland/drag_x.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1aa2cd685d284a67be059b150231152e03" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_data_device_manager_interface_1a8aae415a2e33ca11c48d18e128f627b4" kindref="member">DataDeviceManagerInterface::DnDAction</ref></type>
        <definition>DataDeviceManagerInterface::DnDAction KWin::Xwl::XToWlDrag::m_lastSelectedDragAndDropAction</definition>
        <argsstring></argsstring>
        <name>m_lastSelectedDragAndDropAction</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::m_lastSelectedDragAndDropAction</qualifiedname>
        <initializer>= DataDeviceManagerInterface::DnDAction::None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="68" column="43" bodyfile="kwin/src/xwayland/drag_x.h" bodystart="68" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1ae38b312d15829e014c7b0c1f2a7bbb5a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Xwl::XToWlDrag::XToWlDrag</definition>
        <argsstring>(X11Source *source, Dnd *dnd)</argsstring>
        <name>XToWlDrag</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::XToWlDrag</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_xwl_1_1_x11_source" kindref="compound">X11Source</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_xwl_1_1_dnd" kindref="compound">Dnd</ref> *</type>
          <declname>dnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="38" column="14" bodyfile="kwin/src/xwayland/drag_x.cpp" bodystart="59" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1ad12fd027bb80deab21b35f4410bd9288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Xwl::XToWlDrag::~XToWlDrag</definition>
        <argsstring>() override</argsstring>
        <name>~XToWlDrag</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::~XToWlDrag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="39" column="5" bodyfile="kwin/src/xwayland/drag_x.cpp" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1ad27cc7c3688991814617d6dd27135b8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_k_win_1_1_xwl_1a4245fb9cb1310a1304868c4d99186352" kindref="member">DragEventReply</ref></type>
        <definition>DragEventReply KWin::Xwl::XToWlDrag::moveFilter</definition>
        <argsstring>(Window *target) override</argsstring>
        <name>moveFilter</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::moveFilter</qualifiedname>
        <reimplements refid="class_k_win_1_1_xwl_1_1_drag_1a24237dc1cd8920b0edf27a10910b1bbf">moveFilter</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="41" column="20" bodyfile="kwin/src/xwayland/drag_x.cpp" bodystart="116" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a203f5878982b4206b26b44135f391b4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::Xwl::XToWlDrag::handleClientMessage</definition>
        <argsstring>(xcb_client_message_event_t *event) override</argsstring>
        <name>handleClientMessage</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::handleClientMessage</qualifiedname>
        <reimplements refid="class_k_win_1_1_xwl_1_1_drag_1a6d8ff17aefee6c33e56c4562075d495a">handleClientMessage</reimplements>
        <param>
          <type>xcb_client_message_event_t *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="42" column="10" bodyfile="kwin/src/xwayland/drag_x.cpp" bodystart="155" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a2d45d471d7cd5ec58d7d98292696ef76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xwl::XToWlDrag::setDragAndDropAction</definition>
        <argsstring>(DataDeviceManagerInterface::DnDAction action)</argsstring>
        <name>setDragAndDropAction</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::setDragAndDropAction</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_data_device_manager_interface_1a8aae415a2e33ca11c48d18e128f627b4" kindref="member">DataDeviceManagerInterface::DnDAction</ref></type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="44" column="10" bodyfile="kwin/src/xwayland/drag_x.cpp" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a412f460224dba2bcb4accda88da6ba98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_data_device_manager_interface_1a8aae415a2e33ca11c48d18e128f627b4" kindref="member">DataDeviceManagerInterface::DnDAction</ref></type>
        <definition>DnDAction KWin::Xwl::XToWlDrag::selectedDragAndDropAction</definition>
        <argsstring>()</argsstring>
        <name>selectedDragAndDropAction</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::selectedDragAndDropAction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="45" column="43" bodyfile="kwin/src/xwayland/drag_x.cpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a92be741889f8a09379740d66dcc29499" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_xwl_1_1_x11_source" kindref="compound">X11Source</ref> *</type>
        <definition>X11Source * KWin::Xwl::XToWlDrag::x11Source</definition>
        <argsstring>() const</argsstring>
        <name>x11Source</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::x11Source</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="47" column="15" bodyfile="kwin/src/xwayland/drag_x.h" bodystart="47" bodyend="50"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a36470383f9c56f52c7fbe0f7b27e32aa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xwl::XToWlDrag::setOffers</definition>
        <argsstring>(const Mimes &amp;offers)</argsstring>
        <name>setOffers</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::setOffers</qualifiedname>
        <param>
          <type>const <ref refid="namespace_k_win_1_1_xwl_1a7c4df38d14fd473ab75d05f2357258ee" kindref="member">Mimes</ref> &amp;</type>
          <declname>offers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="53" column="10" bodyfile="kwin/src/xwayland/drag_x.cpp" bodystart="178" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1ac233d9da9504de43941757742d472033" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xwl::XToWlDrag::setDragTarget</definition>
        <argsstring>()</argsstring>
        <name>setDragTarget</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::setDragTarget</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="54" column="10" bodyfile="kwin/src/xwayland/drag_x.cpp" bodystart="206" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a5a23dfb3c58ca292a2df9142f9479db2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Xwl::XToWlDrag::checkForFinished</definition>
        <argsstring>()</argsstring>
        <name>checkForFinished</name>
        <qualifiedname>KWin::Xwl::XToWlDrag::checkForFinished</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/xwayland/drag_x.h" line="56" column="10" bodyfile="kwin/src/xwayland/drag_x.cpp" bodystart="223" bodyend="246"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::Xwl::Drag</label>
        <link refid="class_k_win_1_1_xwl_1_1_drag"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::Xwl::XToWlDrag</label>
        <link refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::Xwl::Drag</label>
        <link refid="class_k_win_1_1_xwl_1_1_drag"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::Xwl::XToWlDrag</label>
        <link refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/xwayland/drag_x.h" line="33" column="1" bodyfile="kwin/src/xwayland/drag_x.h" bodystart="34" bodyend="71"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a5a23dfb3c58ca292a2df9142f9479db2" prot="private" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>checkForFinished</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_drag_1a16e1194b98bb6a1b8bb6301c199a8520" prot="public" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>Drag</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_drag_1a20ab7418685ccd40d847ed25dd4fa6c0" prot="public" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>finish</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a203f5878982b4206b26b44135f391b4d" prot="public" virt="virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>handleClientMessage</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a918b46f9e795882340cc52f3c9270526" prot="private" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>m_dataRequests</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a1962a7c50516fb65a0691b28ab8bcac0" prot="private" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>m_dnd</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1aa2cd685d284a67be059b150231152e03" prot="private" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>m_lastSelectedDragAndDropAction</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a1e217a39f5fa4dce4554c28e8d407428" prot="private" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>m_offers</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a7ef0d8ff77ed741efe55b1022867fa1e" prot="private" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>m_oldVisits</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1afa852cf32c1c966202525e3e9a024481" prot="private" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>m_performed</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a10c2c2c881eaf679ff87fc7396b1dc39" prot="private" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>m_source</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a4eadcf45cc9a9499ab63e4d3c2a113fb" prot="private" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>m_visit</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1ad27cc7c3688991814617d6dd27135b8c" prot="public" virt="virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>moveFilter</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a412f460224dba2bcb4accda88da6ba98" prot="public" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>selectedDragAndDropAction</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_drag_1aa717f03b4c204762f0daaa4bb6ba34cd" prot="public" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>sendClientMessage</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a2d45d471d7cd5ec58d7d98292696ef76" prot="public" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>setDragAndDropAction</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1ac233d9da9504de43941757742d472033" prot="private" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>setDragTarget</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a36470383f9c56f52c7fbe0f7b27e32aa" prot="private" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>setOffers</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1a92be741889f8a09379740d66dcc29499" prot="public" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>x11Source</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1ae38b312d15829e014c7b0c1f2a7bbb5a" prot="public" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>XToWlDrag</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_drag_1ab350d7ec0548c5aaf241537d045c4bef" prot="public" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>~Drag</name></member>
      <member refid="class_k_win_1_1_xwl_1_1_x_to_wl_drag_1ad12fd027bb80deab21b35f4410bd9288" prot="public" virt="non-virtual"><scope>KWin::Xwl::XToWlDrag</scope><name>~XToWlDrag</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
