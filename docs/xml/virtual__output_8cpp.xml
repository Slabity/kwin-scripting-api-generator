<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="virtual__output_8cpp" kind="file" language="C++">
    <compoundname>virtual_output.cpp</compoundname>
    <includes refid="virtual__output_8h" local="yes">virtual_output.h</includes>
    <includes refid="virtual__backend_8h" local="yes">virtual_backend.h</includes>
    <includes local="yes">compositor.h</includes>
    <includes refid="outputconfiguration_8h" local="yes">core/outputconfiguration.h</includes>
    <includes refid="outputlayer_8h" local="yes">core/outputlayer.h</includes>
    <includes refid="renderbackend_8h" local="yes">core/renderbackend.h</includes>
    <includes refid="renderloop_8h" local="yes">core/renderloop.h</includes>
    <includes refid="softwarevsyncmonitor_8h" local="yes">utils/softwarevsyncmonitor.h</includes>
    <includes local="yes">moc_virtual_output.cpp</includes>
    <incdepgraph>
      <node id="24">
        <label>virtual_backend.h</label>
        <link refid="virtual__backend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/backends/virtual/virtual_output.cpp</label>
        <link refid="virtual__output_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>virtual_output.h</label>
        <link refid="virtual__output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>core/outputbackend.h</label>
        <link refid="outputbackend_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>core/outputconfiguration.h</label>
        <link refid="outputconfiguration_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>core/outputlayer.h</label>
        <link refid="outputlayer_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>utils/softwarevsyncmonitor.h</label>
        <link refid="softwarevsyncmonitor_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>utils/vsyncmonitor.h</label>
        <link refid="vsyncmonitor_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>QByteArray</label>
      </node>
      <node id="8">
        <label>QCoreApplication</label>
      </node>
      <node id="21">
        <label>QDebug</label>
      </node>
      <node id="9">
        <label>QImage</label>
      </node>
      <node id="19">
        <label>QList</label>
      </node>
      <node id="17">
        <label>QMatrix4x4</label>
      </node>
      <node id="13">
        <label>QObject</label>
      </node>
      <node id="10">
        <label>QPoint</label>
      </node>
      <node id="33">
        <label>QPointer</label>
      </node>
      <node id="22">
        <label>QRect</label>
      </node>
      <node id="34">
        <label>QRegion</label>
      </node>
      <node id="20">
        <label>QSize</label>
      </node>
      <node id="39">
        <label>QTimer</label>
      </node>
      <node id="23">
        <label>QUuid</label>
      </node>
      <node id="11">
        <label>QVariant</label>
      </node>
      <node id="12">
        <label>QVector2D</label>
      </node>
      <node id="35">
        <label>chrono</label>
      </node>
      <node id="29">
        <label>compositor.h</label>
      </node>
      <node id="7">
        <label>config-kwin.h</label>
      </node>
      <node id="26">
        <label>epoxy/egl.h</label>
      </node>
      <node id="4">
        <label>kwin_export.h</label>
      </node>
      <node id="27">
        <label>memory</label>
      </node>
      <node id="40">
        <label>moc_virtual_output.cpp</label>
      </node>
      <node id="16">
        <label>optional</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2018<sp/>Roman<sp/>Gilg<sp/>&lt;subdiff@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="virtual__output_8h" kindref="compound">virtual_output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="virtual__backend_8h" kindref="compound">virtual_backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compositor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputconfiguration_8h" kindref="compound">core/outputconfiguration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputlayer_8h" kindref="compound">core/outputlayer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderbackend_8h" kindref="compound">core/renderbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderloop_8h" kindref="compound">core/renderloop.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="softwarevsyncmonitor_8h" kindref="compound">utils/softwarevsyncmonitor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_k_win_1_1_virtual_output_1ac630451e931c60b827e8e7bedad10e35" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_virtual_output_1ac630451e931c60b827e8e7bedad10e35" kindref="member">VirtualOutput::VirtualOutput</ref>(<ref refid="class_k_win_1_1_virtual_output_1a33eb05ba4962160a3b96fd9f5ace18f9" kindref="member">VirtualBackend</ref><sp/>*parent,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>internal,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;physicalSizeInMM,<sp/><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref><sp/><ref refid="class_k_win_1_1_output_1a3ad0802ad51c27b4c8881a374cd1a4ea" kindref="member">panelOrientation</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;<ref refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" kindref="member">edid</ref>,<sp/>std::optional&lt;QByteArray&gt;<sp/>edidIdentifierOverride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;QString&gt;<sp/>&amp;connectorName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;QByteArray&gt;<sp/>&amp;<ref refid="class_k_win_1_1_output_1a8907b0474db09efb719deb5dbcdbf73d" kindref="member">mstPath</ref>)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_output_1adb8f18f47c547aad3325e08e1f3617f4" kindref="member">Output</ref>(parent)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_backend(parent)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_renderLoop(std::make_unique&lt;<ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref>&gt;(this))</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_vsyncMonitor(<ref refid="class_k_win_1_1_software_vsync_monitor" kindref="compound">SoftwareVsyncMonitor</ref>::create())</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(m_vsyncMonitor.get(),<sp/>&amp;<ref refid="class_k_win_1_1_vsync_monitor_1acb9396eda80f592fb7dd07e7a344397a" kindref="member">VsyncMonitor::vblankOccurred</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;VirtualOutput::vblank);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>identifier<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>m_identifier<sp/>=<sp/>++identifier;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a3eaae023a36256775eedb537eacce803" kindref="member">setInformation</ref>(<ref refid="struct_k_win_1_1_output_1_1_information" kindref="compound">Information</ref>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/>connectorName.value_or(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Virtual-%1&quot;</highlight><highlight class="normal">).arg(identifier)),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSize<sp/>=<sp/>physicalSizeInMM,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/><ref refid="class_k_win_1_1_edid" kindref="compound">Edid</ref>{<ref refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" kindref="member">edid</ref>,<sp/>edidIdentifierOverride},</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.panelOrientation<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a3ad0802ad51c27b4c8881a374cd1a4ea" kindref="member">panelOrientation</ref>,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/>internal,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a8907b0474db09efb719deb5dbcdbf73d" kindref="member">mstPath</ref>.value_or(QByteArray()),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_k_win_1_1_virtual_output_1a1610762060e65a4a14c056c6bbeb320e" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_virtual_output_1a1610762060e65a4a14c056c6bbeb320e" kindref="member">VirtualOutput::~VirtualOutput</ref>()</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_k_win_1_1_virtual_output_1a2698e07db1fef268f66a17bb861641f3" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref><sp/>*<ref refid="class_k_win_1_1_virtual_output_1a2698e07db1fef268f66a17bb861641f3" kindref="member">VirtualOutput::renderLoop</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="47"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_renderLoop.get();</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_k_win_1_1_virtual_output_1a1dff02e7b97349389e1a8a391ed568b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_virtual_output_1a1dff02e7b97349389e1a8a391ed568b3" kindref="member">VirtualOutput::present</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>m_frame<sp/>=<sp/>frame;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vsyncMonitor-&gt;arm();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_output_1a1a63ecbdeebcded91a913d212ed61c37" kindref="member">outputChange</ref>(frame-&gt;damage());</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_k_win_1_1_virtual_output_1aafaee54227d35530735ba4a6a1c81a24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_virtual_output_1aafaee54227d35530735ba4a6a1c81a24" kindref="member">VirtualOutput::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;logicalPosition,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;<ref refid="class_k_win_1_1_output_1aedc965facd9be832eb827ab0fe5a6fd9" kindref="member">pixelSize</ref>,<sp/>qreal<sp/><ref refid="class_k_win_1_1_output_1a26b1c3dcc612487192f4f23d11bc72b0" kindref="member">scale</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;std::tuple&lt;QSize,<sp/>uint64_t,<sp/>OutputMode::Flags&gt;&gt;<sp/>&amp;<ref refid="class_k_win_1_1_output_1a31492dff27d452f0b062cfcb85de835e" kindref="member">modes</ref>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;std::shared_ptr&lt;OutputMode&gt;&gt;<sp/>modeList;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;mode<sp/>:<sp/><ref refid="class_k_win_1_1_output_1a31492dff27d452f0b062cfcb85de835e" kindref="member">modes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[size,<sp/>refresh,<sp/>flags]<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modeList.push_back(std::make_shared&lt;OutputMode&gt;(size,<sp/>refresh,<sp/>flags));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modeList.empty())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modeList.push_back(std::make_shared&lt;OutputMode&gt;(<ref refid="class_k_win_1_1_output_1aedc965facd9be832eb827ab0fe5a6fd9" kindref="member">pixelSize</ref>,<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>m_renderLoop-&gt;setRefreshRate(modeList.front()-&gt;refreshRate());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vsyncMonitor-&gt;setRefreshRate(modeList.front()-&gt;refreshRate());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" kindref="member">setState</ref>(<ref refid="struct_k_win_1_1_output_1_1_state" kindref="compound">State</ref>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.position<sp/>=<sp/>logicalPosition,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.scale<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a26b1c3dcc612487192f4f23d11bc72b0" kindref="member">scale</ref>,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>modeList,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.currentMode<sp/>=<sp/>modeList.front(),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_k_win_1_1_virtual_output_1a3a0034a66b0db62428c188eda6f49209" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_virtual_output_1a3a0034a66b0db62428c188eda6f49209" kindref="member">VirtualOutput::applyChanges</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref><sp/>&amp;config)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>props<sp/>=<sp/>config.<ref refid="class_k_win_1_1_output_configuration_1a19fe518e8ae373149c835983d5cbe390" kindref="member">constChangeSet</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!props)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_output_1a8c730a9077f5d0a5e34a5d4a167ab2ae" kindref="member">aboutToChange</ref>(props.get());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_state" kindref="compound">State</ref><sp/>next<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a8dd139e018f150bbffe973e87e0ac866" kindref="member">enabled</ref><sp/>=<sp/>props-&gt;enabled.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.enabled);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1abe4125625182e4010189ccc27a5567c1" kindref="member">transform</ref><sp/>=<sp/>props-&gt;transform.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.transform);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1ad44bdf3839770ade88ea8448e47b4de6" kindref="member">position</ref><sp/>=<sp/>props-&gt;pos.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.position);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a311cbe404d7e2ebb0124570d83fb8293" kindref="member">scale</ref><sp/>=<sp/>props-&gt;scale.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.scale);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a4dca3602fe13143ec39621212ae9e811" kindref="member">desiredModeSize</ref><sp/>=<sp/>props-&gt;desiredModeSize.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.desiredModeSize);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1ace8f21e533d93dd6c85131dd370c93f0" kindref="member">desiredModeRefreshRate</ref><sp/>=<sp/>props-&gt;desiredModeRefreshRate.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.desiredModeRefreshRate);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c3de767ae988454ed31a89bc46fa0a6" kindref="member">currentMode</ref><sp/>=<sp/>props-&gt;mode.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.currentMode).lock();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c3de767ae988454ed31a89bc46fa0a6" kindref="member">currentMode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c3de767ae988454ed31a89bc46fa0a6" kindref="member">currentMode</ref><sp/>=<sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c4a6865c59d30418b88eea85d752ebd" kindref="member">modes</ref>.front();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" kindref="member">setState</ref>(next);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>m_renderLoop-&gt;setRefreshRate(next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c3de767ae988454ed31a89bc46fa0a6" kindref="member">currentMode</ref>-&gt;refreshRate());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vsyncMonitor-&gt;setRefreshRate(next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c3de767ae988454ed31a89bc46fa0a6" kindref="member">currentMode</ref>-&gt;refreshRate());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_output_1ac335ddfb48aa5f028a80cca1c07a3aad" kindref="member">changed</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_k_win_1_1_virtual_output_1a1b28f7facceeb02eaa5df7ca8c369c25" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_virtual_output_1a1b28f7facceeb02eaa5df7ca8c369c25" kindref="member">VirtualOutput::updateEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_state" kindref="compound">State</ref><sp/>next<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a8dd139e018f150bbffe973e87e0ac866" kindref="member">enabled</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" kindref="member">setState</ref>(next);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VirtualOutput::vblank(std::chrono::nanoseconds<sp/>timestamp)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_frame)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_frame-&gt;presented(timestamp,<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a98b06ef30caa386be0f897d0e5c5a135" kindref="member">PresentationMode::VSync</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_frame.reset();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_virtual_output.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/backends/virtual/virtual_output.cpp"/>
  </compounddef>
</doxygen>
