<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="pointer__input_8h" kind="file" language="C++">
    <compoundname>pointer_input.h</compoundname>
    <includes refid="cursor_8h" local="yes">cursor.h</includes>
    <includes refid="input_8h" local="yes">input.h</includes>
    <includes refid="cursortheme_8h" local="yes">utils/cursortheme.h</includes>
    <includes local="no">QElapsedTimer</includes>
    <includes local="no">QObject</includes>
    <includes local="no">QPointF</includes>
    <includes local="no">QPointer</includes>
    <includedby refid="device_8cpp" local="yes">kwin/src/backends/libinput/device.cpp</includedby>
    <includedby refid="x11__windowed__backend_8cpp" local="no">kwin/src/backends/x11/x11_windowed_backend.cpp</includedby>
    <includedby refid="effecthandler_8cpp" local="yes">kwin/src/effect/effecthandler.cpp</includedby>
    <includedby refid="events_8cpp" local="yes">kwin/src/events.cpp</includedby>
    <includedby refid="input_8cpp" local="yes">kwin/src/input.cpp</includedby>
    <includedby refid="inputmethod_8cpp" local="yes">kwin/src/inputmethod.cpp</includedby>
    <includedby refid="main_8cpp" local="yes">kwin/src/main.cpp</includedby>
    <includedby refid="eisinputcapture_8cpp" local="yes">kwin/src/plugins/eis/eisinputcapture.cpp</includedby>
    <includedby refid="platformcursor_8cpp" local="yes">kwin/src/plugins/qpa/platformcursor.cpp</includedby>
    <includedby refid="shakecursor_8cpp" local="yes">kwin/src/plugins/shakecursor/shakecursor.cpp</includedby>
    <includedby refid="pointer__input_8cpp" local="yes">kwin/src/pointer_input.cpp</includedby>
    <includedby refid="screenedge_8cpp" local="yes">kwin/src/screenedge.cpp</includedby>
    <includedby refid="tabbox_8cpp" local="yes">kwin/src/tabbox/tabbox.cpp</includedby>
    <includedby refid="tablet__input_8cpp" local="yes">kwin/src/tablet_input.cpp</includedby>
    <includedby refid="touch__input_8cpp" local="yes">kwin/src/touch_input.cpp</includedby>
    <includedby refid="useractions_8cpp" local="yes">kwin/src/useractions.cpp</includedby>
    <includedby refid="window_8cpp" local="yes">kwin/src/window.cpp</includedby>
    <includedby refid="workspace_8cpp" local="yes">kwin/src/workspace.cpp</includedby>
    <includedby refid="xdgshellwindow_8cpp" local="yes">kwin/src/xdgshellwindow.cpp</includedby>
    <incdepgraph>
      <node id="16">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>input.h</label>
        <link refid="input_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/pointer_input.h</label>
        <link refid="pointer__input_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>utils/cursortheme.h</label>
        <link refid="cursortheme_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>KConfigWatcher</label>
      </node>
      <node id="13">
        <label>KSharedConfig</label>
      </node>
      <node id="5">
        <label>QCoreApplication</label>
      </node>
      <node id="25">
        <label>QElapsedTimer</label>
      </node>
      <node id="11">
        <label>QHash</label>
      </node>
      <node id="6">
        <label>QImage</label>
      </node>
      <node id="22">
        <label>QList</label>
      </node>
      <node id="12">
        <label>QObject</label>
      </node>
      <node id="7">
        <label>QPoint</label>
      </node>
      <node id="26">
        <label>QPointF</label>
      </node>
      <node id="17">
        <label>QPointer</label>
      </node>
      <node id="19">
        <label>QSet</label>
      </node>
      <node id="23">
        <label>QSharedDataPointer</label>
      </node>
      <node id="8">
        <label>QVariant</label>
      </node>
      <node id="9">
        <label>QVector2D</label>
      </node>
      <node id="24">
        <label>chrono</label>
      </node>
      <node id="4">
        <label>config-kwin.h</label>
      </node>
      <node id="20">
        <label>functional</label>
      </node>
      <node id="10">
        <label>kwin_export.h</label>
      </node>
      <node id="14">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>kwin/src/backends/libinput/device.cpp</label>
        <link refid="device_8cpp"/>
      </node>
      <node id="3">
        <label>kwin/src/backends/x11/x11_windowed_backend.cpp</label>
        <link refid="x11__windowed__backend_8cpp"/>
      </node>
      <node id="4">
        <label>kwin/src/effect/effecthandler.cpp</label>
        <link refid="effecthandler_8cpp"/>
      </node>
      <node id="5">
        <label>kwin/src/events.cpp</label>
        <link refid="events_8cpp"/>
      </node>
      <node id="6">
        <label>kwin/src/input.cpp</label>
        <link refid="input_8cpp"/>
      </node>
      <node id="7">
        <label>kwin/src/inputmethod.cpp</label>
        <link refid="inputmethod_8cpp"/>
      </node>
      <node id="8">
        <label>kwin/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="9">
        <label>kwin/src/plugins/eis/eisinputcapture.cpp</label>
        <link refid="eisinputcapture_8cpp"/>
      </node>
      <node id="10">
        <label>kwin/src/plugins/qpa/platformcursor.cpp</label>
        <link refid="platformcursor_8cpp"/>
      </node>
      <node id="11">
        <label>kwin/src/plugins/shakecursor/shakecursor.cpp</label>
        <link refid="shakecursor_8cpp"/>
      </node>
      <node id="12">
        <label>kwin/src/pointer_input.cpp</label>
        <link refid="pointer__input_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/src/pointer_input.h</label>
        <link refid="pointer__input_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>kwin/src/screenedge.cpp</label>
        <link refid="screenedge_8cpp"/>
      </node>
      <node id="14">
        <label>kwin/src/tabbox/tabbox.cpp</label>
        <link refid="tabbox_8cpp"/>
      </node>
      <node id="15">
        <label>kwin/src/tablet_input.cpp</label>
        <link refid="tablet__input_8cpp"/>
      </node>
      <node id="16">
        <label>kwin/src/touch_input.cpp</label>
        <link refid="touch__input_8cpp"/>
      </node>
      <node id="17">
        <label>kwin/src/useractions.cpp</label>
        <link refid="useractions_8cpp"/>
      </node>
      <node id="18">
        <label>kwin/src/window.cpp</label>
        <link refid="window_8cpp"/>
      </node>
      <node id="19">
        <label>kwin/src/workspace.cpp</label>
        <link refid="workspace_8cpp"/>
      </node>
      <node id="20">
        <label>kwin/src/xdgshellwindow.cpp</label>
        <link refid="xdgshellwindow_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_k_win_1_1_pointer_input_redirection" prot="public">KWin::PointerInputRedirection</innerclass>
    <innerclass refid="class_k_win_1_1_wayland_cursor_image" prot="public">KWin::WaylandCursorImage</innerclass>
    <innerclass refid="class_k_win_1_1_cursor_image" prot="public">KWin::CursorImage</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <innernamespace refid="namespace_k_win_1_1_decoration">KWin::Decoration</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2013,<sp/>2016<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2018<sp/>Roman<sp/>Gilg<sp/>&lt;subdiff@gmail.com&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2019<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cursor_8h" kindref="compound">cursor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input_8h" kindref="compound">input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cursortheme_8h" kindref="compound">utils/cursortheme.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QElapsedTimer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QObject&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPointF&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPointer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QWindow;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_cursor_image" kindref="compound">CursorImage</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_input_redirection" kindref="compound">InputRedirection</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_cursor_shape" kindref="compound">CursorShape</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_shape_cursor_source" kindref="compound">ShapeCursorSource</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_surface_cursor_source" kindref="compound">SurfaceCursorSource</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_pointer_surface_cursor" kindref="compound">PointerSurfaceCursor</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1_1_decoration" kindref="compound">Decoration</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_decoration_1_1_decorated_window_impl" kindref="compound">DecoratedWindowImpl</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_k_win_1_1_pointer_input_redirection" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KWIN_EXPORT<sp/><ref refid="class_k_win_1_1_pointer_input_redirection_1a0bed60a6dd255e1a91a98c56a1a960c4" kindref="member">PointerInputRedirection</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_handler_1ab186557ecccd161f355597a6fce96d47" kindref="member">InputDeviceHandler</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_input_redirection_1a0bed60a6dd255e1a91a98c56a1a960c4" kindref="member">PointerInputRedirection</ref>(<ref refid="class_k_win_1_1_input_redirection" kindref="compound">InputRedirection</ref><sp/>*parent);</highlight></codeline>
<codeline lineno="47" refid="class_k_win_1_1_pointer_input_redirection_1af7347888dc62fbd1bc967cbde4cafd2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_input_redirection_1af7347888dc62fbd1bc967cbde4cafd2c" kindref="member">~PointerInputRedirection</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_input_redirection_1ae7c703c2163b12d59c144c63be4cde73" kindref="member">init</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_cursor_theme" kindref="compound">CursorTheme</ref><sp/><ref refid="class_k_win_1_1_pointer_input_redirection_1a00ad783097955c404a95e0a62411a578" kindref="member">cursorTheme</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Make<sp/>it<sp/>a<sp/>Cursor<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_input_redirection_1a17203377741a8d259807f352b85f241e" kindref="member">updateAfterScreenChange</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_input_redirection_1afd6552df97f1f5f4916ee23c5d7bd001" kindref="member">supportsWarping</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1a1d6b4e7210aba93390970d9ccb2f1183" kindref="member">pos</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_k_win_1_1_pointer_input_redirection_1a1d6b4e7210aba93390970d9ccb2f1183" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/><ref refid="class_k_win_1_1_pointer_input_redirection_1a1d6b4e7210aba93390970d9ccb2f1183" kindref="member">pos</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="58"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pos;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61" refid="class_k_win_1_1_pointer_input_redirection_1ac2b4c3f11254f96c43ce4a5d1c000858" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Qt::MouseButtons<sp/><ref refid="class_k_win_1_1_pointer_input_redirection_1ac2b4c3f11254f96c43ce4a5d1c000858" kindref="member">buttons</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="62"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_qtButtons;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>areButtonsPressed()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setEffectsOverrideCursor(Qt::CursorShape<sp/>shape);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeEffectsOverrideCursor();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setWindowSelectionCursor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;shape);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeWindowSelectionCursor();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updatePointerConstraints();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setEnableConstraints(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_k_win_1_1_pointer_input_redirection_1ae715c43fca2a91c116b7d4cfb63e82f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_input_redirection_1ae715c43fca2a91c116b7d4cfb63e82f3" kindref="member">isConstrained</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="77"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_confined<sp/>||<sp/>m_locked;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>focusUpdatesBlocked()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processMotionAbsolute(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processMotion(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;deltaNonAccelerated,<sp/>std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref><sp/>*device);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processButton(uint32_t<sp/>button,<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3" kindref="member">PointerButtonState</ref><sp/>state,<sp/>std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processAxis(<ref refid="namespace_k_win_1aec4516626e95b6dc22c614c769a43590" kindref="member">PointerAxis</ref><sp/>axis,<sp/>qreal<sp/>delta,<sp/>qint32<sp/>deltaV120,<sp/><ref refid="namespace_k_win_1a143704533be3f7be8a43b2b962600248" kindref="member">PointerAxisSource</ref><sp/>source,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inverted,<sp/>std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processSwipeGestureBegin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">KWin::InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processSwipeGestureUpdate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">KWin::InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processSwipeGestureEnd(std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">KWin::InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processSwipeGestureCancelled(std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">KWin::InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processPinchGestureBegin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">KWin::InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processPinchGestureUpdate(qreal<sp/>scale,<sp/>qreal<sp/>angleDelta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">KWin::InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processPinchGestureEnd(std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">KWin::InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processPinchGestureCancelled(std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">KWin::InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processHoldGestureBegin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">KWin::InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processHoldGestureEnd(std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">KWin::InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processHoldGestureCancelled(std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">KWin::InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processFrame(<ref refid="class_k_win_1_1_input_device" kindref="compound">KWin::InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>EdgeBarrierType<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormalBarrier,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowMoveBarrier,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WindowResize<sp/>is<sp/>separate<sp/>from<sp/>WindowMove<sp/>since<sp/>there<sp/>is<sp/>edge<sp/>snapping<sp/>during<sp/>resize,<sp/>so<sp/>a<sp/>different<sp/>resistance<sp/>might<sp/>be<sp/>desirable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowResizeBarrier,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EdgeElementBarrier,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CornerBarrier,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processWarp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time,<sp/><ref refid="class_input_device" kindref="compound">InputDevice</ref><sp/>*device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>MotionType<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Motion,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warp</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processMotionInternal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;deltaNonAccelerated,<sp/>std::chrono::microseconds<sp/>time,<sp/>InputDevice<sp/>*device,<sp/>MotionType<sp/>type);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cleanupDecoration(Decoration::DecoratedWindowImpl<sp/>*old,<sp/>Decoration::DecoratedWindowImpl<sp/>*now)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>focusUpdate(Window<sp/>*focusOld,<sp/>Window<sp/>*focusNow)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>position()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateOnStartMoveResize();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateToReset();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updatePosition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateButton(uint32_t<sp/>button,<sp/>PointerButtonState<sp/>state);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>applyEdgeBarrier(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Output<sp/>*currentOutput,<sp/>std::chrono::microseconds<sp/>time);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>EdgeBarrierType<sp/>edgeBarrierType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;lastOutputGeometry)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>edgeBarrier(EdgeBarrierType<sp/>type)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>applyPointerConfinement(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>disconnectConfinedPointerRegionConnection();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>disconnectLockedPointerAboutToBeUnboundConnection();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>disconnectPointerConstraintsConnection();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>breakPointerConstraints(SurfaceInterface<sp/>*surface);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>CursorImage<sp/>*m_cursor;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>m_pos;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;uint32_t,<sp/>PointerButtonState&gt;<sp/>m_buttons;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>Qt::MouseButtons<sp/>m_qtButtons;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::Connection<sp/>m_focusGeometryConnection;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::Connection<sp/>m_constraintsConnection;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::Connection<sp/>m_constraintsActivatedConnection;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::Connection<sp/>m_confinedPointerRegionConnection;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::Connection<sp/>m_lockedPointerAboutToBeUnboundConnection;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::Connection<sp/>m_decorationGeometryConnection;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::Connection<sp/>m_decorationDestroyedConnection;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::Connection<sp/>m_decorationClosedConnection;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_confined<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_locked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_enableConstraints<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_lastOutputWasPlaceholder<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>m_movementInEdgeBarrier;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::microseconds<sp/>m_lastMoveTime<sp/>=<sp/>std::chrono::microseconds::zero();</highlight></codeline>
<codeline lineno="199" refid="class_k_win_1_1_pointer_input_redirection_1a5a3928f48380b151cb38dca5ed339534" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_pointer_input_redirection_1a5a3928f48380b151cb38dca5ed339534" kindref="member">PositionUpdateBlocker</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>EdgeBarrierType<sp/>m_lastEdgeBarrierType<sp/>=<sp/>EdgeBarrierType::NormalBarrier;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">};</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="class_k_win_1_1_wayland_cursor_image" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_cursor_image_1a47872fdf5883720cb53f268696245d80" kindref="member">WaylandCursorImage</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_cursor_image_1a47872fdf5883720cb53f268696245d80" kindref="member">WaylandCursorImage</ref>(QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_cursor_theme" kindref="compound">CursorTheme</ref><sp/><ref refid="class_k_win_1_1_wayland_cursor_image_1ae22e5c83c178c833d85d97502b5ceded" kindref="member">theme</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="212" refid="class_k_win_1_1_wayland_cursor_image_1a9bba76ffa72a2235ff6c26decd8ca52e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_cursor_image_1a9bba76ffa72a2235ff6c26decd8ca52e" kindref="member">themeChanged</ref>();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateCursorTheme();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_cursor_theme" kindref="compound">CursorTheme</ref><sp/>m_cursorTheme;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="class_k_win_1_1_cursor_image" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_cursor_image_1a6c0fbf17c713eac7bebb51f36c5720c1" kindref="member">CursorImage</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_cursor_image_1a6c0fbf17c713eac7bebb51f36c5720c1" kindref="member">CursorImage</ref>(<ref refid="class_k_win_1_1_pointer_input_redirection" kindref="compound">PointerInputRedirection</ref><sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225" refid="class_k_win_1_1_cursor_image_1ad6bd72335849cd635054c593bff1ff93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_cursor_image_1ad6bd72335849cd635054c593bff1ff93" kindref="member">~CursorImage</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_cursor_image_1a65f0ad8a4f5e8e15cc3655b0ad4442f5" kindref="member">setEffectsOverrideCursor</ref>(Qt::CursorShape<sp/><ref refid="class_k_win_1_1_cursor_image_1a1c9c0353c80b5d8c46c7d3c26956009a" kindref="member">shape</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_cursor_image_1abcc24435496fa4d55bf506b01f2ebfac" kindref="member">removeEffectsOverrideCursor</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_cursor_image_1ad92777e61db2f150ba68f2c539f257c2" kindref="member">setWindowSelectionCursor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;<ref refid="class_k_win_1_1_cursor_image_1a1c9c0353c80b5d8c46c7d3c26956009a" kindref="member">shape</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_cursor_image_1a7c5eec8156ad11e30a7a1f8eacf152b8" kindref="member">removeWindowSelectionCursor</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_cursor_theme" kindref="compound">CursorTheme</ref><sp/><ref refid="class_k_win_1_1_cursor_image_1ae544a7e1f51ff81c116135e9dceeae11" kindref="member">theme</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_cursor_source" kindref="compound">CursorSource</ref><sp/>*<ref refid="class_k_win_1_1_cursor_image_1a53eaaa4f11f3d7a5df6fcfe9c6c516c7" kindref="member">source</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_cursor_image_1af75eeff0b4db02156281fb71b118ae73" kindref="member">setSource</ref>(<ref refid="class_k_win_1_1_cursor_source" kindref="compound">CursorSource</ref><sp/>*<ref refid="class_k_win_1_1_cursor_image_1a53eaaa4f11f3d7a5df6fcfe9c6c516c7" kindref="member">source</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_cursor_image_1aa778cbe3eb49714e55bdb38748ce66dc" kindref="member">updateCursorOutputs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="239" refid="class_k_win_1_1_cursor_image_1a26dd842c608dd69d94a5271d5fb95e59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_cursor_image_1a26dd842c608dd69d94a5271d5fb95e59" kindref="member">changed</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reevaluteSource();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateServerCursor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::variant&lt;PointerSurfaceCursor<sp/>*,<sp/>QByteArray&gt;<sp/>&amp;<ref refid="class_k_win_1_1_cursor_image_1a9b5e5a996c66a1103f7e8fd1b883406b" kindref="member">cursor</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateDecoration();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateDecorationCursor();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateMoveResize();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateDragCursor();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleFocusedSurfaceChanged();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_input_redirection" kindref="compound">PointerInputRedirection</ref><sp/>*m_pointer;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_cursor_source" kindref="compound">CursorSource</ref><sp/>*m_currentSource<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_cursor_image" kindref="compound">WaylandCursorImage</ref><sp/>m_waylandImage;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ShapeCursorSource&gt;<sp/>m_effectsCursor;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ShapeCursorSource&gt;<sp/>m_fallbackCursor;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ShapeCursorSource&gt;<sp/>m_moveResizeCursor;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ShapeCursorSource&gt;<sp/>m_windowSelectionCursor;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ShapeCursorSource&gt;<sp/>m_dragCursor;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263" refid="class_k_win_1_1_cursor_image_1a9b5e5a996c66a1103f7e8fd1b883406b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ShapeCursorSource&gt;<sp/><ref refid="class_k_win_1_1_cursor_image_1a9b5e5a996c66a1103f7e8fd1b883406b" kindref="member">cursor</ref>;</highlight></codeline>
<codeline lineno="264" refid="class_k_win_1_1_cursor_image_1adc3c3b030945288dd71917e895f93be3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMetaObject::Connection<sp/><ref refid="class_k_win_1_1_cursor_image_1adc3c3b030945288dd71917e895f93be3" kindref="member">connection</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>m_decoration;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMetaObject::Connection<sp/><ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>;</highlight></codeline>
<codeline lineno="269" refid="class_k_win_1_1_cursor_image_1a7487d9e25165bf230018f70cce2fb2d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;SurfaceCursorSource&gt;<sp/><ref refid="class_k_win_1_1_cursor_image_1a7487d9e25165bf230018f70cce2fb2d0" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="270" refid="class_k_win_1_1_cursor_image_1a1c9c0353c80b5d8c46c7d3c26956009a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ShapeCursorSource&gt;<sp/><ref refid="class_k_win_1_1_cursor_image_1a1c9c0353c80b5d8c46c7d3c26956009a" kindref="member">shape</ref>;</highlight></codeline>
<codeline lineno="271" refid="class_k_win_1_1_cursor_image_1ae3cca224840154c36fede56c7424c36d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_cursor_source" kindref="compound">CursorSource</ref><sp/>*<ref refid="class_k_win_1_1_cursor_image_1a9b5e5a996c66a1103f7e8fd1b883406b" kindref="member">cursor</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>m_serverCursor;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/pointer_input.h"/>
  </compounddef>
</doxygen>
