<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_compositor_window" kind="class" language="C++" prot="public">
    <compoundname>CompositorWindow</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QWidget</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_compositor_window_1a08f31ea2d1e80015b1382f10659b031a" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_xdg_toplevel_interface" kindref="compound">KWin::XdgToplevelInterface</ref> * &gt;</type>
        <definition>QList&lt;KWin::XdgToplevelInterface *&gt; CompositorWindow::m_stackingOrder</definition>
        <argsstring></argsstring>
        <name>m_stackingOrder</name>
        <qualifiedname>CompositorWindow::m_stackingOrder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/renderingservertest.cpp" line="100" column="11" bodyfile="kwin/tests/renderingservertest.cpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_compositor_window_1a59bc89a3753c0a208b579c8058473ad4" prot="private" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_k_win_1_1_seat_interface" kindref="compound">KWin::SeatInterface</ref> &gt;</type>
        <definition>QPointer&lt;KWin::SeatInterface&gt; CompositorWindow::m_seat</definition>
        <argsstring></argsstring>
        <name>m_seat</name>
        <qualifiedname>CompositorWindow::m_seat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/renderingservertest.cpp" line="101" column="14" bodyfile="kwin/tests/renderingservertest.cpp" bodystart="101" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_compositor_window_1a0148de098cc62af8b03dd88ff6e8abe1" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>CompositorWindow::CompositorWindow</definition>
        <argsstring>(QWidget *parent=nullptr)</argsstring>
        <name>CompositorWindow</name>
        <qualifiedname>CompositorWindow::CompositorWindow</qualifiedname>
        <param>
          <type>QWidget *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/renderingservertest.cpp" line="82" column="14" bodyfile="kwin/tests/renderingservertest.cpp" bodystart="104" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_compositor_window_1a71d3347e4733bc46b7451cb692d6e46e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>CompositorWindow::~CompositorWindow</definition>
        <argsstring>()</argsstring>
        <name>~CompositorWindow</name>
        <qualifiedname>CompositorWindow::~CompositorWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/renderingservertest.cpp" line="83" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_compositor_window_1a73d39fd0036ec363d366bb63b7d424e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CompositorWindow::surfaceCreated</definition>
        <argsstring>(KWin::XdgToplevelInterface *surface)</argsstring>
        <name>surfaceCreated</name>
        <qualifiedname>CompositorWindow::surfaceCreated</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_xdg_toplevel_interface" kindref="compound">KWin::XdgToplevelInterface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/renderingservertest.cpp" line="85" column="10" bodyfile="kwin/tests/renderingservertest.cpp" bodystart="112" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_compositor_window_1a4e2f6833053f25724587793dc8257208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CompositorWindow::setSeat</definition>
        <argsstring>(const QPointer&lt; KWin::SeatInterface &gt; &amp;seat)</argsstring>
        <name>setSeat</name>
        <qualifiedname>CompositorWindow::setSeat</qualifiedname>
        <param>
          <type>const QPointer&lt; <ref refid="class_k_win_1_1_seat_interface" kindref="compound">KWin::SeatInterface</ref> &gt; &amp;</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/renderingservertest.cpp" line="87" column="10" bodyfile="kwin/tests/renderingservertest.cpp" bodystart="142" bodyend="145"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_compositor_window_1afa944beb1e12032a8d575e3c2438f43b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CompositorWindow::paintEvent</definition>
        <argsstring>(QPaintEvent *event) override</argsstring>
        <name>paintEvent</name>
        <qualifiedname>CompositorWindow::paintEvent</qualifiedname>
        <param>
          <type>QPaintEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/renderingservertest.cpp" line="90" column="10" bodyfile="kwin/tests/renderingservertest.cpp" bodystart="147" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_compositor_window_1aeeb9357378479a87e695d8a89e2074bd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CompositorWindow::keyPressEvent</definition>
        <argsstring>(QKeyEvent *event) override</argsstring>
        <name>keyPressEvent</name>
        <qualifiedname>CompositorWindow::keyPressEvent</qualifiedname>
        <param>
          <type>QKeyEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/renderingservertest.cpp" line="91" column="10" bodyfile="kwin/tests/renderingservertest.cpp" bodystart="164" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_compositor_window_1a6510649cb5c10ebfdf42d9e3af1cf177" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CompositorWindow::keyReleaseEvent</definition>
        <argsstring>(QKeyEvent *event) override</argsstring>
        <name>keyReleaseEvent</name>
        <qualifiedname>CompositorWindow::keyReleaseEvent</qualifiedname>
        <param>
          <type>QKeyEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/renderingservertest.cpp" line="92" column="10" bodyfile="kwin/tests/renderingservertest.cpp" bodystart="177" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_compositor_window_1a91a72c5b48de98d35c14286d1ca2e639" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CompositorWindow::mouseMoveEvent</definition>
        <argsstring>(QMouseEvent *event) override</argsstring>
        <name>mouseMoveEvent</name>
        <qualifiedname>CompositorWindow::mouseMoveEvent</qualifiedname>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/renderingservertest.cpp" line="93" column="10" bodyfile="kwin/tests/renderingservertest.cpp" bodystart="187" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_compositor_window_1a18db280562ab2a64d08decea09c16892" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CompositorWindow::mousePressEvent</definition>
        <argsstring>(QMouseEvent *event) override</argsstring>
        <name>mousePressEvent</name>
        <qualifiedname>CompositorWindow::mousePressEvent</qualifiedname>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/renderingservertest.cpp" line="94" column="10" bodyfile="kwin/tests/renderingservertest.cpp" bodystart="198" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_compositor_window_1a33eb84e2228e2e14240ff131ea76b2bb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CompositorWindow::mouseReleaseEvent</definition>
        <argsstring>(QMouseEvent *event) override</argsstring>
        <name>mouseReleaseEvent</name>
        <qualifiedname>CompositorWindow::mouseReleaseEvent</qualifiedname>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/renderingservertest.cpp" line="95" column="10" bodyfile="kwin/tests/renderingservertest.cpp" bodystart="211" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_compositor_window_1a9eb9eea161ba23584b331fd6b7f14432" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CompositorWindow::wheelEvent</definition>
        <argsstring>(QWheelEvent *event) override</argsstring>
        <name>wheelEvent</name>
        <qualifiedname>CompositorWindow::wheelEvent</qualifiedname>
        <param>
          <type>QWheelEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/renderingservertest.cpp" line="96" column="10" bodyfile="kwin/tests/renderingservertest.cpp" bodystart="219" bodyend="231"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_compositor_window_1af8d551c98ab7283c8840573d8bdfc39a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CompositorWindow::updateFocus</definition>
        <argsstring>()</argsstring>
        <name>updateFocus</name>
        <qualifiedname>CompositorWindow::updateFocus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/renderingservertest.cpp" line="99" column="10" bodyfile="kwin/tests/renderingservertest.cpp" bodystart="126" bodyend="140"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CompositorWindow</label>
        <link refid="class_compositor_window"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QWidget</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CompositorWindow</label>
        <link refid="class_compositor_window"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QWidget</label>
      </node>
    </collaborationgraph>
    <location file="kwin/tests/renderingservertest.cpp" line="78" column="1" bodyfile="kwin/tests/renderingservertest.cpp" bodystart="79" bodyend="102"/>
    <listofallmembers>
      <member refid="class_compositor_window_1a0148de098cc62af8b03dd88ff6e8abe1" prot="public" virt="non-virtual"><scope>CompositorWindow</scope><name>CompositorWindow</name></member>
      <member refid="class_compositor_window_1aeeb9357378479a87e695d8a89e2074bd" prot="protected" virt="non-virtual"><scope>CompositorWindow</scope><name>keyPressEvent</name></member>
      <member refid="class_compositor_window_1a6510649cb5c10ebfdf42d9e3af1cf177" prot="protected" virt="non-virtual"><scope>CompositorWindow</scope><name>keyReleaseEvent</name></member>
      <member refid="class_compositor_window_1a59bc89a3753c0a208b579c8058473ad4" prot="private" virt="non-virtual"><scope>CompositorWindow</scope><name>m_seat</name></member>
      <member refid="class_compositor_window_1a08f31ea2d1e80015b1382f10659b031a" prot="private" virt="non-virtual"><scope>CompositorWindow</scope><name>m_stackingOrder</name></member>
      <member refid="class_compositor_window_1a91a72c5b48de98d35c14286d1ca2e639" prot="protected" virt="non-virtual"><scope>CompositorWindow</scope><name>mouseMoveEvent</name></member>
      <member refid="class_compositor_window_1a18db280562ab2a64d08decea09c16892" prot="protected" virt="non-virtual"><scope>CompositorWindow</scope><name>mousePressEvent</name></member>
      <member refid="class_compositor_window_1a33eb84e2228e2e14240ff131ea76b2bb" prot="protected" virt="non-virtual"><scope>CompositorWindow</scope><name>mouseReleaseEvent</name></member>
      <member refid="class_compositor_window_1afa944beb1e12032a8d575e3c2438f43b" prot="protected" virt="non-virtual"><scope>CompositorWindow</scope><name>paintEvent</name></member>
      <member refid="class_compositor_window_1a4e2f6833053f25724587793dc8257208" prot="public" virt="non-virtual"><scope>CompositorWindow</scope><name>setSeat</name></member>
      <member refid="class_compositor_window_1a73d39fd0036ec363d366bb63b7d424e6" prot="public" virt="non-virtual"><scope>CompositorWindow</scope><name>surfaceCreated</name></member>
      <member refid="class_compositor_window_1af8d551c98ab7283c8840573d8bdfc39a" prot="private" virt="non-virtual"><scope>CompositorWindow</scope><name>updateFocus</name></member>
      <member refid="class_compositor_window_1a9eb9eea161ba23584b331fd6b7f14432" prot="protected" virt="non-virtual"><scope>CompositorWindow</scope><name>wheelEvent</name></member>
      <member refid="class_compositor_window_1a71d3347e4733bc46b7451cb692d6e46e" prot="public" virt="virtual"><scope>CompositorWindow</scope><name>~CompositorWindow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
