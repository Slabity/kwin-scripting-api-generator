<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="decorationitem_8cpp" kind="file" language="C++">
    <compoundname>decorationitem.cpp</compoundname>
    <includes refid="decorationitem_8h" local="yes">scene/decorationitem.h</includes>
    <includes local="yes">compositor.h</includes>
    <includes refid="core_2output_8h" local="yes">core/output.h</includes>
    <includes refid="decoratedwindow_8h" local="yes">decorations/decoratedwindow.h</includes>
    <includes refid="workspacescene_8h" local="yes">scene/workspacescene.h</includes>
    <includes local="yes">window.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">KDecoration3/DecoratedWindow</includes>
    <includes local="no">KDecoration3/Decoration</includes>
    <includes local="yes">moc_decorationitem.cpp</includes>
    <incdepgraph>
      <node id="4">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>core/renderlayerdelegate.h</label>
        <link refid="renderlayerdelegate_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>decorations/decoratedwindow.h</label>
        <link refid="decoratedwindow_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/scene/decorationitem.cpp</label>
        <link refid="decorationitem_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>scene/decorationitem.h</label>
        <link refid="decorationitem_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>scene/item.h</label>
        <link refid="item_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>scene/itemgeometry.h</label>
        <link refid="itemgeometry_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>scene/scene.h</label>
        <link refid="scene_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>scene/workspacescene.h</label>
        <link refid="workspacescene_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>KConfigWatcher</label>
      </node>
      <node id="53">
        <label>KDecoration3/DecoratedWindow</label>
      </node>
      <node id="54">
        <label>KDecoration3/Decoration</label>
      </node>
      <node id="44">
        <label>KDecoration3/Private/DecoratedWindowPrivate</label>
      </node>
      <node id="38">
        <label>KSharedConfig</label>
      </node>
      <node id="40">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="41">
        <label>QApplication</label>
      </node>
      <node id="30">
        <label>QByteArray</label>
      </node>
      <node id="17">
        <label>QColor</label>
      </node>
      <node id="11">
        <label>QCoreApplication</label>
      </node>
      <node id="45">
        <label>QDeadlineTimer</label>
      </node>
      <node id="32">
        <label>QDebug</label>
      </node>
      <node id="12">
        <label>QImage</label>
      </node>
      <node id="22">
        <label>QList</label>
      </node>
      <node id="6">
        <label>QMatrix4x4</label>
      </node>
      <node id="23">
        <label>QObject</label>
      </node>
      <node id="13">
        <label>QPoint</label>
      </node>
      <node id="24">
        <label>QPointer</label>
      </node>
      <node id="42">
        <label>QProcessEnvironment</label>
      </node>
      <node id="33">
        <label>QRect</label>
      </node>
      <node id="18">
        <label>QRegion</label>
      </node>
      <node id="31">
        <label>QSize</label>
      </node>
      <node id="46">
        <label>QTimer</label>
      </node>
      <node id="25">
        <label>QTransform</label>
      </node>
      <node id="34">
        <label>QUuid</label>
      </node>
      <node id="14">
        <label>QVariant</label>
      </node>
      <node id="7">
        <label>QVector2D</label>
      </node>
      <node id="50">
        <label>chrono</label>
      </node>
      <node id="52">
        <label>cmath</label>
      </node>
      <node id="26">
        <label>compositor.h</label>
      </node>
      <node id="10">
        <label>config-kwin.h</label>
      </node>
      <node id="19">
        <label>epoxy/gl.h</label>
      </node>
      <node id="8">
        <label>kwin_export.h</label>
      </node>
      <node id="39">
        <label>memory</label>
      </node>
      <node id="55">
        <label>moc_decorationitem.cpp</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="20">
        <label>ranges</label>
      </node>
      <node id="21">
        <label>span</label>
      </node>
      <node id="51">
        <label>window.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2014<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="decorationitem_8h" kindref="compound">scene/decorationitem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compositor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2output_8h" kindref="compound">core/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="decoratedwindow_8h" kindref="compound">decorations/decoratedwindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspacescene_8h" kindref="compound">scene/workspacescene.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KDecoration3/DecoratedWindow&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KDecoration3/Decoration&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_k_win_1_1_decoration_renderer_1a6b0d3b790ea18bccec771e79fc51d19b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_decoration_renderer_1a6b0d3b790ea18bccec771e79fc51d19b" kindref="member">DecorationRenderer::DecorationRenderer</ref>(<ref refid="class_k_win_1_1_decoration_1_1_decorated_window_impl" kindref="compound">Decoration::DecoratedWindowImpl</ref><sp/>*<ref refid="class_k_win_1_1_decoration_renderer_1a52b8ae1cfb2dab0dbcee6e7adb5d22c8" kindref="member">client</ref>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_client(<ref refid="class_k_win_1_1_decoration_renderer_1a52b8ae1cfb2dab0dbcee6e7adb5d22c8" kindref="member">client</ref>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_imageSizesDirty(true)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_decoration_renderer_1a52b8ae1cfb2dab0dbcee6e7adb5d22c8" kindref="member">client</ref>-&gt;decoration(),<sp/>&amp;KDecoration3::Decoration::damaged,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_decoration_renderer_1ab5e22413aa60aceee7293a8e0a7e5629" kindref="member">DecorationRenderer::addDamage</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_decoration_renderer_1a52b8ae1cfb2dab0dbcee6e7adb5d22c8" kindref="member">client</ref>-&gt;decoration(),<sp/>&amp;KDecoration3::Decoration::bordersChanged,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_decoration_renderer_1a0f7f36f0776fdb2febcae8312064c109" kindref="member">DecorationRenderer::invalidate</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_decoration_renderer_1a52b8ae1cfb2dab0dbcee6e7adb5d22c8" kindref="member">client</ref>-&gt;decoratedWindow(),<sp/>&amp;KDecoration3::DecoratedWindow::sizeChanged,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_decoration_renderer_1a0f7f36f0776fdb2febcae8312064c109" kindref="member">DecorationRenderer::invalidate</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_decoration_renderer_1a0f7f36f0776fdb2febcae8312064c109" kindref="member">invalidate</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_k_win_1_1_decoration_renderer_1a52b8ae1cfb2dab0dbcee6e7adb5d22c8" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_decoration_1_1_decorated_window_impl" kindref="compound">Decoration::DecoratedWindowImpl</ref><sp/>*<ref refid="class_k_win_1_1_decoration_renderer_1a52b8ae1cfb2dab0dbcee6e7adb5d22c8" kindref="member">DecorationRenderer::client</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="39"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_client;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_k_win_1_1_decoration_renderer_1a0f7f36f0776fdb2febcae8312064c109" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_renderer_1a0f7f36f0776fdb2febcae8312064c109" kindref="member">DecorationRenderer::invalidate</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_client)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_decoration_renderer_1ab5e22413aa60aceee7293a8e0a7e5629" kindref="member">addDamage</ref>(m_client-&gt;window()-&gt;rect().toAlignedRect());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>m_imageSizesDirty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_k_win_1_1_decoration_renderer_1ac848aa2e8a42c7fb86b1423a031ed2e4" refkind="member"><highlight class="normal">QRegion<sp/><ref refid="class_k_win_1_1_decoration_renderer_1ac848aa2e8a42c7fb86b1423a031ed2e4" kindref="member">DecorationRenderer::damage</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="52"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_damage;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_k_win_1_1_decoration_renderer_1ab5e22413aa60aceee7293a8e0a7e5629" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_renderer_1ab5e22413aa60aceee7293a8e0a7e5629" kindref="member">DecorationRenderer::addDamage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>m_damage<sp/>+=<sp/>region;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_decoration_renderer_1a6e828a009a18ce4e98a865a36bef6e65" kindref="member">damaged</ref>(region);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_k_win_1_1_decoration_renderer_1a8b41978af0423e3f114cc0990f572116" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_renderer_1a8b41978af0423e3f114cc0990f572116" kindref="member">DecorationRenderer::resetDamage</ref>()</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>m_damage<sp/>=<sp/>QRegion();</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="class_k_win_1_1_decoration_renderer_1adcd894d78d515448862ebb556648cf5f" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_decoration_renderer_1adcd894d78d515448862ebb556648cf5f" kindref="member">DecorationRenderer::effectiveDevicePixelRatio</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="68"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>QPainter<sp/>won&apos;t<sp/>let<sp/>paint<sp/>with<sp/>a<sp/>device<sp/>pixel<sp/>ratio<sp/>less<sp/>than<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::max(qreal(1.0),<sp/><ref refid="class_k_win_1_1_decoration_renderer_1ab87a90e1263b3abd13738561885da7a4" kindref="member">devicePixelRatio</ref>());</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_k_win_1_1_decoration_renderer_1ab87a90e1263b3abd13738561885da7a4" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_decoration_renderer_1ab87a90e1263b3abd13738561885da7a4" kindref="member">DecorationRenderer::devicePixelRatio</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="74"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_devicePixelRatio;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_k_win_1_1_decoration_renderer_1ae01c96ee2b55d4b99fec64f50907cc10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_renderer_1ae01c96ee2b55d4b99fec64f50907cc10" kindref="member">DecorationRenderer::setDevicePixelRatio</ref>(qreal<sp/>dpr)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_devicePixelRatio<sp/>!=<sp/>dpr)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_devicePixelRatio<sp/>=<sp/>dpr;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_decoration_renderer_1a0f7f36f0776fdb2febcae8312064c109" kindref="member">invalidate</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_k_win_1_1_decoration_renderer_1afd48a15d753072379eb421c1f4128db8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_renderer_1afd48a15d753072379eb421c1f4128db8" kindref="member">DecorationRenderer::renderToPainter</ref>(QPainter<sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_decoration_renderer_1a52b8ae1cfb2dab0dbcee6e7adb5d22c8" kindref="member">client</ref>()-&gt;decoration()-&gt;paint(painter,<sp/>rect);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_k_win_1_1_decoration_item_1a802aa8c8bd26e3fa22aec90ddcfe60cf" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_decoration_item_1a802aa8c8bd26e3fa22aec90ddcfe60cf" kindref="member">DecorationItem::DecorationItem</ref>(KDecoration3::Decoration<sp/>*decoration,<sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_decoration_item_1aa75a1c3deee6f67cc99722ba791c7499" kindref="member">window</ref>,<sp/><ref refid="class_k_win_1_1_item_1ab87c45c078db860d6ffd118ecdd7843a" kindref="member">Item</ref><sp/>*parent)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_item_1ab87c45c078db860d6ffd118ecdd7843a" kindref="member">Item</ref>(parent)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_window(<ref refid="class_k_win_1_1_decoration_item_1aa75a1c3deee6f67cc99722ba791c7499" kindref="member">window</ref>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_decoration(decoration)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>m_renderer<sp/>=<sp/><ref refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" kindref="member">Compositor::self</ref>()-&gt;<ref refid="class_k_win_1_1_compositor_1a42a38d690d77c464869c520189c99904" kindref="member">scene</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_scene_1a7c308e69d81944a8e69e695b1375472e" kindref="member">createDecorationRenderer</ref>(<ref refid="class_k_win_1_1_decoration_item_1aa75a1c3deee6f67cc99722ba791c7499" kindref="member">window</ref>-&gt;decoratedWindow());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_decoration_item_1aa75a1c3deee6f67cc99722ba791c7499" kindref="member">window</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ab43215452b63309c9442dafde7f3f2c3" kindref="member">Window::targetScaleChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;DecorationItem::updateScale);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(decoration-&gt;window(),<sp/>&amp;KDecoration3::DecoratedWindow::sizeChanged,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;DecorationItem::handleDecorationGeometryChanged);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(decoration,<sp/>&amp;KDecoration3::Decoration::bordersChanged,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;DecorationItem::handleDecorationGeometryChanged);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_decoration_item_1a95850bd2c35dafcbabd74cf4bac92d59" kindref="member">renderer</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_decoration_renderer_1a6e828a009a18ce4e98a865a36bef6e65" kindref="member">DecorationRenderer::damaged</ref>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>qOverload&lt;const<sp/>QRegion<sp/>&amp;&gt;(&amp;<ref refid="class_k_win_1_1_item_1ad3ad797c32e96df4e9715cca925bc4e7" kindref="member">Item::scheduleRepaint</ref>));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1aadbea3fa26cfec91732450904af7d54e" kindref="member">setSize</ref>(decoration-&gt;size());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>updateScale();</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_k_win_1_1_decoration_item_1acac7040cb6982f55880084a0a4da5213" refkind="member"><highlight class="normal">QList&lt;QRectF&gt;<sp/><ref refid="class_k_win_1_1_decoration_item_1acac7040cb6982f55880084a0a4da5213" kindref="member">DecorationItem::shape</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="113"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>left,<sp/>top,<sp/>right,<sp/>bottom;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>m_window-&gt;layoutDecorationRects(left,<sp/>top,<sp/>right,<sp/>bottom);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{left,<sp/>top,<sp/>right,<sp/>bottom};</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_k_win_1_1_decoration_item_1af59c8e70d131da8b234136ac10d55430" refkind="member"><highlight class="normal">QRegion<sp/><ref refid="class_k_win_1_1_decoration_item_1af59c8e70d131da8b234136ac10d55430" kindref="member">DecorationItem::opaque</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="120"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_window-&gt;decorationHasAlpha())<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRegion();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>left,<sp/>top,<sp/>right,<sp/>bottom;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>m_window-&gt;layoutDecorationRects(left,<sp/>top,<sp/>right,<sp/>bottom);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>to<sp/>map<sp/>to<sp/>integers<sp/>which<sp/>has<sp/>rounding<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>safer<sp/>for<sp/>a<sp/>region<sp/>to<sp/>be<sp/>considered<sp/>transparent<sp/>than<sp/>opaque</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>always<sp/>align<sp/>inwards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMargins<sp/>roundingPad<sp/>=<sp/>QMargins(1,<sp/>1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>QRegion<sp/>roundedLeft<sp/>=<sp/>left.toAlignedRect().marginsRemoved(roundingPad);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>QRegion<sp/>roundedTop<sp/>=<sp/>top.toAlignedRect().marginsRemoved(roundingPad);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>QRegion<sp/>roundedRight<sp/>=<sp/>right.toAlignedRect().marginsRemoved(roundingPad);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>QRegion<sp/>roundedBottom<sp/>=<sp/>bottom.toAlignedRect().marginsRemoved(roundingPad);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>roundedLeft<sp/>|<sp/>roundedTop<sp/>|<sp/>roundedRight<sp/>|<sp/>roundedBottom;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_k_win_1_1_decoration_item_1a323591f88b02ac2357f78a4effda6050" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_item_1a323591f88b02ac2357f78a4effda6050" kindref="member">DecorationItem::preprocess</ref>()</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>damage<sp/>=<sp/>m_renderer-&gt;damage();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!damage.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_renderer-&gt;render(damage);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_renderer-&gt;resetDamage();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationItem::updateScale()</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>m_window-&gt;<ref refid="class_k_win_1_1_window_1a81faef3b8b494d474c8acb202f9e8ddd" kindref="member">targetScale</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_renderer-&gt;devicePixelRatio()<sp/>!=<sp/>scale)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_renderer-&gt;setDevicePixelRatio(scale);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1ab79a5c5e8295377ef19c948d53ff158f" kindref="member">discardQuads</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationItem::handleDecorationGeometryChanged()</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1aadbea3fa26cfec91732450904af7d54e" kindref="member">setSize</ref>(m_decoration-&gt;size());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_item_1ab79a5c5e8295377ef19c948d53ff158f" kindref="member">discardQuads</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_k_win_1_1_decoration_item_1a95850bd2c35dafcbabd74cf4bac92d59" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_decoration_renderer" kindref="compound">DecorationRenderer</ref><sp/>*<ref refid="class_k_win_1_1_decoration_item_1a95850bd2c35dafcbabd74cf4bac92d59" kindref="member">DecorationItem::renderer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="164"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_renderer.get();</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_k_win_1_1_decoration_item_1aa75a1c3deee6f67cc99722ba791c7499" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_decoration_item_1aa75a1c3deee6f67cc99722ba791c7499" kindref="member">DecorationItem::window</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="169"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_window;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="namespace_k_win_1ae84b579d9ddcc6d47788d061c84c2ae8" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window_quad" kindref="compound">WindowQuad</ref><sp/><ref refid="namespace_k_win_1ae84b579d9ddcc6d47788d061c84c2ae8" kindref="member">buildQuad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;partRect,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;textureOffset,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>devicePixelRatio,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rotated)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/><ref refid="class_k_win_1_1_decoration_renderer_1a15f82254e3b8dbb020e0149c6cee220b" kindref="member">DecorationRenderer::TexturePad</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>partRect.x();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y0<sp/>=<sp/>partRect.y();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>partRect.x()<sp/>+<sp/>partRect.width();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>partRect.y()<sp/>+<sp/>partRect.height();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_quad" kindref="compound">WindowQuad</ref><sp/>quad;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotated)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u0<sp/>=<sp/>textureOffset.y()<sp/>+<sp/>p;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v0<sp/>=<sp/>textureOffset.x()<sp/>+<sp/>p;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u1<sp/>=<sp/>textureOffset.y()<sp/>+<sp/>p<sp/>+<sp/>std::round(partRect.width()<sp/>*<sp/>devicePixelRatio);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v1<sp/>=<sp/>textureOffset.x()<sp/>+<sp/>p<sp/>+<sp/>std::round(partRect.height()<sp/>*<sp/>devicePixelRatio);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quad[0]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(x0,<sp/>y0,<sp/>v0,<sp/>u1);<sp/></highlight><highlight class="comment">//<sp/>Top-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quad[1]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(x1,<sp/>y0,<sp/>v0,<sp/>u0);<sp/></highlight><highlight class="comment">//<sp/>Top-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quad[2]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(x1,<sp/>y1,<sp/>v1,<sp/>u0);<sp/></highlight><highlight class="comment">//<sp/>Bottom-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quad[3]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(x0,<sp/>y1,<sp/>v1,<sp/>u1);<sp/></highlight><highlight class="comment">//<sp/>Bottom-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u0<sp/>=<sp/>textureOffset.x()<sp/>+<sp/>p;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v0<sp/>=<sp/>textureOffset.y()<sp/>+<sp/>p;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u1<sp/>=<sp/>textureOffset.x()<sp/>+<sp/>p<sp/>+<sp/>std::round(partRect.width()<sp/>*<sp/>devicePixelRatio);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v1<sp/>=<sp/>textureOffset.y()<sp/>+<sp/>p<sp/>+<sp/>std::round(partRect.height()<sp/>*<sp/>devicePixelRatio);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quad[0]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(x0,<sp/>y0,<sp/>u0,<sp/>v0);<sp/></highlight><highlight class="comment">//<sp/>Top-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quad[1]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(x1,<sp/>y0,<sp/>u1,<sp/>v0);<sp/></highlight><highlight class="comment">//<sp/>Top-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quad[2]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(x1,<sp/>y1,<sp/>u1,<sp/>v1);<sp/></highlight><highlight class="comment">//<sp/>Bottom-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quad[3]<sp/>=<sp/><ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref>(x0,<sp/>y1,<sp/>u0,<sp/>v1);<sp/></highlight><highlight class="comment">//<sp/>Bottom-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>quad;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="class_k_win_1_1_decoration_item_1a3b7be13b58572a5dc454d19bb677e5c9" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window_quad_list" kindref="compound">WindowQuadList</ref><sp/><ref refid="class_k_win_1_1_decoration_item_1a3b7be13b58572a5dc454d19bb677e5c9" kindref="member">DecorationItem::buildQuads</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="209"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_window-&gt;frameMargins().isNull())<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_quad_list" kindref="compound">WindowQuadList</ref>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>left,<sp/>top,<sp/>right,<sp/>bottom;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>devicePixelRatio<sp/>=<sp/>m_renderer-&gt;effectiveDevicePixelRatio();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>texturePad<sp/>=<sp/><ref refid="class_k_win_1_1_decoration_renderer_1a15f82254e3b8dbb020e0149c6cee220b" kindref="member">DecorationRenderer::TexturePad</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>m_window-&gt;layoutDecorationRects(left,<sp/>top,<sp/>right,<sp/>bottom);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>topHeight<sp/>=<sp/>std::round(top.height()<sp/>*<sp/>devicePixelRatio);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottomHeight<sp/>=<sp/>std::round(bottom.height()<sp/>*<sp/>devicePixelRatio);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftWidth<sp/>=<sp/>std::round(left.width()<sp/>*<sp/>devicePixelRatio);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>topPosition(0,<sp/>0);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>bottomPosition(0,<sp/>topPosition.y()<sp/>+<sp/>topHeight<sp/>+<sp/>(2<sp/>*<sp/>texturePad));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>leftPosition(0,<sp/>bottomPosition.y()<sp/>+<sp/>bottomHeight<sp/>+<sp/>(2<sp/>*<sp/>texturePad));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>rightPosition(0,<sp/>leftPosition.y()<sp/>+<sp/>leftWidth<sp/>+<sp/>(2<sp/>*<sp/>texturePad));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_quad_list" kindref="compound">WindowQuadList</ref><sp/>list;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left.isValid())<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.append(<ref refid="namespace_k_win_1ae84b579d9ddcc6d47788d061c84c2ae8" kindref="member">buildQuad</ref>(left,<sp/>leftPosition,<sp/>devicePixelRatio,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top.isValid())<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.append(<ref refid="namespace_k_win_1ae84b579d9ddcc6d47788d061c84c2ae8" kindref="member">buildQuad</ref>(top,<sp/>topPosition,<sp/>devicePixelRatio,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right.isValid())<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.append(<ref refid="namespace_k_win_1ae84b579d9ddcc6d47788d061c84c2ae8" kindref="member">buildQuad</ref>(right,<sp/>rightPosition,<sp/>devicePixelRatio,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottom.isValid())<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.append(<ref refid="namespace_k_win_1ae84b579d9ddcc6d47788d061c84c2ae8" kindref="member">buildQuad</ref>(bottom,<sp/>bottomPosition,<sp/>devicePixelRatio,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_decorationitem.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/scene/decorationitem.cpp"/>
  </compounddef>
</doxygen>
