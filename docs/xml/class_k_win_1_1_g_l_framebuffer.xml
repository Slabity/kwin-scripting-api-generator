<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_g_l_framebuffer" kind="class" language="C++" prot="public">
    <compoundname>KWin::GLFramebuffer</compoundname>
    <includes refid="glframebuffer_8h" local="no">glframebuffer.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_g_l_framebuffer_1a1df019f982cd923a053778d320ccc2b8" prot="public" static="no" strong="no">
        <type></type>
        <name>Attachment</name>
        <qualifiedname>KWin::GLFramebuffer::Attachment</qualifiedname>
        <enumvalue id="class_k_win_1_1_g_l_framebuffer_1a1df019f982cd923a053778d320ccc2b8aee368eba4132ec03eb145987c0ee55b9" prot="public">
          <name>NoAttachment</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_g_l_framebuffer_1a1df019f982cd923a053778d320ccc2b8a213e9d1d0917ed8321201bd3c599ead0" prot="public">
          <name>CombinedDepthStencil</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="39" column="5" bodyfile="kwin/src/opengl/glframebuffer.h" bodystart="39" bodyend="42"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_g_l_framebuffer_1a273bb7eb135ae6bac290aacdc421cc25" prot="protected" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint KWin::GLFramebuffer::m_handle</definition>
        <argsstring></argsstring>
        <name>m_handle</name>
        <qualifiedname>KWin::GLFramebuffer::m_handle</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="123" column="12" bodyfile="kwin/src/opengl/glframebuffer.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_g_l_framebuffer_1a4c35c7536de5aba5429d9744ad58e73c" prot="protected" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint KWin::GLFramebuffer::m_depthBuffer</definition>
        <argsstring></argsstring>
        <name>m_depthBuffer</name>
        <qualifiedname>KWin::GLFramebuffer::m_depthBuffer</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="124" column="12" bodyfile="kwin/src/opengl/glframebuffer.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_g_l_framebuffer_1a2bba250a323847b3f11127bb6f634490" prot="protected" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint KWin::GLFramebuffer::m_stencilBuffer</definition>
        <argsstring></argsstring>
        <name>m_stencilBuffer</name>
        <qualifiedname>KWin::GLFramebuffer::m_stencilBuffer</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="125" column="12" bodyfile="kwin/src/opengl/glframebuffer.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_g_l_framebuffer_1a3d1512504f29936557c9b7a9907085db" prot="protected" static="no" mutable="no">
        <type>QSize</type>
        <definition>QSize KWin::GLFramebuffer::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <qualifiedname>KWin::GLFramebuffer::m_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="126" column="11" bodyfile="kwin/src/opengl/glframebuffer.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_g_l_framebuffer_1a5f62a0771e04aaed47b695ada4268d99" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::GLFramebuffer::m_valid</definition>
        <argsstring></argsstring>
        <name>m_valid</name>
        <qualifiedname>KWin::GLFramebuffer::m_valid</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="127" column="10" bodyfile="kwin/src/opengl/glframebuffer.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_g_l_framebuffer_1a31caeb9500f36c38021d32215a624873" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::GLFramebuffer::m_foreign</definition>
        <argsstring></argsstring>
        <name>m_foreign</name>
        <qualifiedname>KWin::GLFramebuffer::m_foreign</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="128" column="10" bodyfile="kwin/src/opengl/glframebuffer.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_g_l_framebuffer_1a55adb107bb874c93691cb0f7bb1d5ba4" prot="protected" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref> *const</type>
        <definition>GLTexture* const KWin::GLFramebuffer::m_colorAttachment</definition>
        <argsstring></argsstring>
        <name>m_colorAttachment</name>
        <qualifiedname>KWin::GLFramebuffer::m_colorAttachment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="129" column="21" bodyfile="kwin/src/opengl/glframebuffer.h" bodystart="129" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1a98b39eb0540dcd95a07b85ba9e327f4c" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::GLFramebuffer::GLFramebuffer</definition>
        <argsstring>()</argsstring>
        <name>GLFramebuffer</name>
        <qualifiedname>KWin::GLFramebuffer::GLFramebuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref> <simplesect kind="since"><para>5.13 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="48" column="14" bodyfile="kwin/src/opengl/glframebuffer.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1af30a2ef3f2ebe6aa4976f185824cbaa6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::GLFramebuffer::GLFramebuffer</definition>
        <argsstring>(GLTexture *colorAttachment, Attachment attachment=NoAttachment)</argsstring>
        <name>GLFramebuffer</name>
        <qualifiedname>KWin::GLFramebuffer::GLFramebuffer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref> *</type>
          <declname>colorAttachment</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_g_l_framebuffer_1a1df019f982cd923a053778d320ccc2b8" kindref="member">Attachment</ref></type>
          <declname>attachment</declname>
          <defval><ref refid="class_k_win_1_1_g_l_framebuffer_1a1df019f982cd923a053778d320ccc2b8aee368eba4132ec03eb145987c0ee55b9" kindref="member">NoAttachment</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref>. Note that ensuring the color attachment outlives the framebuffer is the responsibility of the caller.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>colorAttachment</parametername>
</parameternamelist>
<parameterdescription>
<para>texture where the scene will be rendered onto </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="56" column="14" bodyfile="kwin/src/opengl/glframebuffer.cpp" bodystart="74" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1ac9d795cca28ab7778c20cc3eac9b8642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::GLFramebuffer::GLFramebuffer</definition>
        <argsstring>(GLuint handle, const QSize &amp;size)</argsstring>
        <name>GLFramebuffer</name>
        <qualifiedname>KWin::GLFramebuffer::GLFramebuffer</qualifiedname>
        <param>
          <type>GLuint</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const QSize &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a wrapper for an already created framebuffer object. The <ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref> does not take the ownership of the framebuffer object handle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="62" column="5" bodyfile="kwin/src/opengl/glframebuffer.cpp" bodystart="104" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1af1688ccbc82c13d2068ec4fa276d4aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::GLFramebuffer::~GLFramebuffer</definition>
        <argsstring>()</argsstring>
        <name>~GLFramebuffer</name>
        <qualifiedname>KWin::GLFramebuffer::~GLFramebuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="63" column="5" bodyfile="kwin/src/opengl/glframebuffer.cpp" bodystart="113" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1a9aee5a6576c020a3e599b21c62bddbbe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GLuint</type>
        <definition>GLuint KWin::GLFramebuffer::handle</definition>
        <argsstring>() const</argsstring>
        <name>handle</name>
        <qualifiedname>KWin::GLFramebuffer::handle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the framebuffer object handle to this framebuffer object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="68" column="12" bodyfile="kwin/src/opengl/glframebuffer.h" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1a01c4e5f822e4148e44ae7e03fc9620f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize KWin::GLFramebuffer::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>KWin::GLFramebuffer::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the size of the color attachment to this framebuffer object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="75" column="11" bodyfile="kwin/src/opengl/glframebuffer.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1a66c9d3c63c2e5d28cb8b79e2f252043a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::GLFramebuffer::valid</definition>
        <argsstring>() const</argsstring>
        <name>valid</name>
        <qualifiedname>KWin::GLFramebuffer::valid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="79" column="10" bodyfile="kwin/src/opengl/glframebuffer.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1a2067019bc592f942c3230dff447cf0e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::GLFramebuffer::blitFromFramebuffer</definition>
        <argsstring>(const QRect &amp;source=QRect(), const QRect &amp;destination=QRect(), GLenum filter=GL_LINEAR, bool flipX=false, bool flipY=false)</argsstring>
        <name>blitFromFramebuffer</name>
        <qualifiedname>KWin::GLFramebuffer::blitFromFramebuffer</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>source</declname>
          <defval>QRect()</defval>
        </param>
        <param>
          <type>const QRect &amp;</type>
          <declname>destination</declname>
          <defval>QRect()</defval>
        </param>
        <param>
          <type>GLenum</type>
          <declname>filter</declname>
          <defval>GL_LINEAR</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>flipX</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>flipY</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Blits from <emphasis>source</emphasis> rectangle in the current framebuffer to the <emphasis>destination</emphasis> rectangle in this framebuffer.</para>
<para>Be aware that framebuffer blitting may not be supported on all hardware. Use blitSupported() to check whether it is supported.</para>
<para>The <emphasis>source</emphasis> and the <emphasis>destination</emphasis> rectangles can have different sizes. The <emphasis>filter</emphasis> indicates what filter will be used in case scaling needs to be performed.</para>
<para><simplesect kind="see"><para>blitSupported </para>
</simplesect>
<simplesect kind="since"><para>4.8 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="105" column="10" bodyfile="kwin/src/opengl/glframebuffer.cpp" bodystart="211" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1a78558356c5d51cd145e1eb4aae245188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::GLFramebuffer::blitFromRenderTarget</definition>
        <argsstring>(const RenderTarget &amp;sourceRenderTarget, const RenderViewport &amp;sourceViewport, const QRect &amp;source, const QRect &amp;destination)</argsstring>
        <name>blitFromRenderTarget</name>
        <qualifiedname>KWin::GLFramebuffer::blitFromRenderTarget</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>sourceRenderTarget</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref> &amp;</type>
          <declname>sourceViewport</declname>
        </param>
        <param>
          <type>const QRect &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const QRect &amp;</type>
          <declname>destination</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Blits from <emphasis>source</emphasis> rectangle in logical coordinates in the current framebuffer to the <emphasis>destination</emphasis> rectangle in texture-local coordinates in this framebuffer, taking into account any transformations the source render target may have </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="111" column="10" bodyfile="kwin/src/opengl/glframebuffer.cpp" bodystart="269" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1a996388fc88f3335215a0c1a97a5e8177" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref> *</type>
        <definition>GLTexture * KWin::GLFramebuffer::colorAttachment</definition>
        <argsstring>() const</argsstring>
        <name>colorAttachment</name>
        <qualifiedname>KWin::GLFramebuffer::colorAttachment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the color attachment of this fbo. May be nullptr </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="116" column="15" bodyfile="kwin/src/opengl/glframebuffer.cpp" bodystart="305" bodyend="308"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1a17ecd994c7b3d3874fe969e548e5063c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref> *</type>
        <definition>GLFramebuffer * KWin::GLFramebuffer::currentFramebuffer</definition>
        <argsstring>()</argsstring>
        <name>currentFramebuffer</name>
        <qualifiedname>KWin::GLFramebuffer::currentFramebuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the last bound framebuffer, or <computeroutput>null</computeroutput> if no framebuffer is current. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="87" column="26" bodyfile="kwin/src/opengl/glframebuffer.cpp" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1a7eb3049da73a065dcf8ff137fd9b5e3f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::GLFramebuffer::pushFramebuffer</definition>
        <argsstring>(GLFramebuffer *fbo)</argsstring>
        <name>pushFramebuffer</name>
        <qualifiedname>KWin::GLFramebuffer::pushFramebuffer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref> *</type>
          <declname>fbo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="89" column="17" bodyfile="kwin/src/opengl/glframebuffer.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1a3f7265ef927c8b0ab82728c5118c7bed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref> *</type>
        <definition>GLFramebuffer * KWin::GLFramebuffer::popFramebuffer</definition>
        <argsstring>()</argsstring>
        <name>popFramebuffer</name>
        <qualifiedname>KWin::GLFramebuffer::popFramebuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="90" column="26" bodyfile="kwin/src/opengl/glframebuffer.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1abb78ddb7e6af15b5207dc2c0735356a2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::GLFramebuffer::initColorAttachment</definition>
        <argsstring>(GLTexture *colorAttachment)</argsstring>
        <name>initColorAttachment</name>
        <qualifiedname>KWin::GLFramebuffer::initColorAttachment</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref> *</type>
          <declname>colorAttachment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="119" column="10" bodyfile="kwin/src/opengl/glframebuffer.cpp" bodystart="143" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1a4a7d5327e5e38cb5e6b15e196c82ab1f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::GLFramebuffer::initDepthStencilAttachment</definition>
        <argsstring>()</argsstring>
        <name>initDepthStencilAttachment</name>
        <qualifiedname>KWin::GLFramebuffer::initDepthStencilAttachment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="120" column="10" bodyfile="kwin/src/opengl/glframebuffer.cpp" bodystart="149" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_framebuffer_1ae47549feb1bda2259e8aaaa229489900" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::GLFramebuffer::bind</definition>
        <argsstring>()</argsstring>
        <name>bind</name>
        <qualifiedname>KWin::GLFramebuffer::bind</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glframebuffer.h" line="121" column="10" bodyfile="kwin/src/opengl/glframebuffer.cpp" bodystart="130" bodyend="141"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>OpenGL framebuffer object. </para>
    </briefdescription>
    <detaileddescription>
<para>Framebuffer object enables you to render onto a texture. This texture can later be used to e.g. do post-processing of the scene.</para>
<para><simplesect kind="author"><para>Rivo Laks <ulink url="mailto:rivolaks@hot.ee">rivolaks@hot.ee</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>KWin::GLFramebuffer</label>
        <link refid="class_k_win_1_1_g_l_framebuffer"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_colorAttachment</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>KWin::GLTexture</label>
        <link refid="class_k_win_1_1_g_l_texture"/>
      </node>
    </collaborationgraph>
    <location file="kwin/src/opengl/glframebuffer.h" line="36" column="1" bodyfile="kwin/src/opengl/glframebuffer.h" bodystart="37" bodyend="130"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a1df019f982cd923a053778d320ccc2b8" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>Attachment</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1ae47549feb1bda2259e8aaaa229489900" prot="protected" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>bind</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a2067019bc592f942c3230dff447cf0e0" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>blitFromFramebuffer</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a78558356c5d51cd145e1eb4aae245188" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>blitFromRenderTarget</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a996388fc88f3335215a0c1a97a5e8177" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>colorAttachment</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a1df019f982cd923a053778d320ccc2b8a213e9d1d0917ed8321201bd3c599ead0" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>CombinedDepthStencil</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a17ecd994c7b3d3874fe969e548e5063c" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>currentFramebuffer</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a98b39eb0540dcd95a07b85ba9e327f4c" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>GLFramebuffer</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1af30a2ef3f2ebe6aa4976f185824cbaa6" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>GLFramebuffer</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1ac9d795cca28ab7778c20cc3eac9b8642" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>GLFramebuffer</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a9aee5a6576c020a3e599b21c62bddbbe" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>handle</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1abb78ddb7e6af15b5207dc2c0735356a2" prot="protected" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>initColorAttachment</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a4a7d5327e5e38cb5e6b15e196c82ab1f" prot="protected" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>initDepthStencilAttachment</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a55adb107bb874c93691cb0f7bb1d5ba4" prot="protected" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>m_colorAttachment</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a4c35c7536de5aba5429d9744ad58e73c" prot="protected" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>m_depthBuffer</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a31caeb9500f36c38021d32215a624873" prot="protected" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>m_foreign</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a273bb7eb135ae6bac290aacdc421cc25" prot="protected" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>m_handle</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a3d1512504f29936557c9b7a9907085db" prot="protected" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>m_size</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a2bba250a323847b3f11127bb6f634490" prot="protected" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>m_stencilBuffer</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a5f62a0771e04aaed47b695ada4268d99" prot="protected" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>m_valid</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a1df019f982cd923a053778d320ccc2b8aee368eba4132ec03eb145987c0ee55b9" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>NoAttachment</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a3f7265ef927c8b0ab82728c5118c7bed" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>popFramebuffer</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a7eb3049da73a065dcf8ff137fd9b5e3f" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>pushFramebuffer</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a01c4e5f822e4148e44ae7e03fc9620f9" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>size</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1a66c9d3c63c2e5d28cb8b79e2f252043a" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>valid</name></member>
      <member refid="class_k_win_1_1_g_l_framebuffer_1af1688ccbc82c13d2068ec4fa276d4aca" prot="public" virt="non-virtual"><scope>KWin::GLFramebuffer</scope><name>~GLFramebuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
