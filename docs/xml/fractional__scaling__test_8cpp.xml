<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="fractional__scaling__test_8cpp" kind="file" language="C++">
    <compoundname>fractional_scaling_test.cpp</compoundname>
    <includes refid="kwin__wayland__test_8h" local="yes">kwin_wayland_test.h</includes>
    <includes refid="core_2output_8h" local="yes">core/output.h</includes>
    <includes refid="pointer__input_8h" local="yes">pointer_input.h</includes>
    <includes refid="clientconnection_8h" local="yes">wayland/clientconnection.h</includes>
    <includes refid="display_8h" local="yes">wayland/display.h</includes>
    <includes refid="wayland__server_8h" local="yes">wayland_server.h</includes>
    <includes local="yes">window.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes local="no">KWayland/Client/compositor.h</includes>
    <includes local="no">KWayland/Client/connection_thread.h</includes>
    <includes local="no">KWayland/Client/output.h</includes>
    <includes local="no">KWayland/Client/surface.h</includes>
    <includes local="no">QDBusConnection</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">csignal</includes>
    <includes local="yes">fractional_scaling_test.moc</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/autotests/integration/fractional_scaling_test.cpp</label>
        <link refid="fractional__scaling__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kwin_wayland_test.h</label>
        <link refid="kwin__wayland__test_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>input.h</label>
        <link refid="input_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>pointer_input.h</label>
        <link refid="pointer__input_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>utils/cursortheme.h</label>
        <link refid="cursortheme_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>wayland/clientconnection.h</label>
        <link refid="clientconnection_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>wayland/display.h</label>
        <link refid="display_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>wayland_server.h</label>
        <link refid="wayland__server_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>KConfigGroup</label>
      </node>
      <node id="53">
        <label>KConfigWatcher</label>
      </node>
      <node id="49">
        <label>KSharedConfig</label>
      </node>
      <node id="84">
        <label>KWayland/Client/compositor.h</label>
      </node>
      <node id="85">
        <label>KWayland/Client/connection_thread.h</label>
      </node>
      <node id="86">
        <label>KWayland/Client/output.h</label>
      </node>
      <node id="17">
        <label>KWayland/Client/surface.h</label>
      </node>
      <node id="69">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="70">
        <label>QApplication</label>
      </node>
      <node id="40">
        <label>QByteArray</label>
      </node>
      <node id="6">
        <label>QCoreApplication</label>
      </node>
      <node id="87">
        <label>QDBusConnection</label>
      </node>
      <node id="73">
        <label>QDBusContext</label>
      </node>
      <node id="74">
        <label>QDataStream</label>
      </node>
      <node id="43">
        <label>QDebug</label>
      </node>
      <node id="59">
        <label>QElapsedTimer</label>
      </node>
      <node id="48">
        <label>QHash</label>
      </node>
      <node id="7">
        <label>QImage</label>
      </node>
      <node id="41">
        <label>QList</label>
      </node>
      <node id="81">
        <label>QLoggingCategory</label>
      </node>
      <node id="39">
        <label>QMatrix4x4</label>
      </node>
      <node id="12">
        <label>QObject</label>
      </node>
      <node id="8">
        <label>QPoint</label>
      </node>
      <node id="60">
        <label>QPointF</label>
      </node>
      <node id="52">
        <label>QPointer</label>
      </node>
      <node id="71">
        <label>QProcessEnvironment</label>
      </node>
      <node id="44">
        <label>QRect</label>
      </node>
      <node id="54">
        <label>QSet</label>
      </node>
      <node id="57">
        <label>QSharedDataPointer</label>
      </node>
      <node id="15">
        <label>QSignalSpy</label>
      </node>
      <node id="42">
        <label>QSize</label>
      </node>
      <node id="80">
        <label>QString</label>
      </node>
      <node id="75">
        <label>QStringList</label>
      </node>
      <node id="16">
        <label>QTest</label>
      </node>
      <node id="76">
        <label>QTimer</label>
      </node>
      <node id="45">
        <label>QUuid</label>
      </node>
      <node id="9">
        <label>QVariant</label>
      </node>
      <node id="10">
        <label>QVector2D</label>
      </node>
      <node id="58">
        <label>chrono</label>
      </node>
      <node id="82">
        <label>climits</label>
      </node>
      <node id="5">
        <label>config-kwin.h</label>
      </node>
      <node id="90">
        <label>csignal</label>
      </node>
      <node id="91">
        <label>fractional_scaling_test.moc</label>
      </node>
      <node id="55">
        <label>functional</label>
      </node>
      <node id="11">
        <label>kwin_export.h</label>
      </node>
      <node id="13">
        <label>main.h</label>
      </node>
      <node id="63">
        <label>memory</label>
      </node>
      <node id="83">
        <label>netwm_def.h</label>
      </node>
      <node id="18">
        <label>optional</label>
      </node>
      <node id="19">
        <label>qwayland-color-management-v1.h</label>
      </node>
      <node id="20">
        <label>qwayland-cursor-shape-v1.h</label>
      </node>
      <node id="21">
        <label>qwayland-fake-input.h</label>
      </node>
      <node id="22">
        <label>qwayland-fractional-scale-v1.h</label>
      </node>
      <node id="23">
        <label>qwayland-idle-inhibit-unstable-v1.h</label>
      </node>
      <node id="24">
        <label>qwayland-input-method-unstable-v1.h</label>
      </node>
      <node id="25">
        <label>qwayland-kde-output-device-v2.h</label>
      </node>
      <node id="26">
        <label>qwayland-kde-output-management-v2.h</label>
      </node>
      <node id="27">
        <label>qwayland-kde-screen-edge-v1.h</label>
      </node>
      <node id="28">
        <label>qwayland-security-context-v1.h</label>
      </node>
      <node id="29">
        <label>qwayland-text-input-unstable-v3.h</label>
      </node>
      <node id="30">
        <label>qwayland-wlr-layer-shell-unstable-v1.h</label>
      </node>
      <node id="31">
        <label>qwayland-xdg-decoration-unstable-v1.h</label>
      </node>
      <node id="32">
        <label>qwayland-xdg-dialog-v1.h</label>
      </node>
      <node id="33">
        <label>qwayland-xdg-shell.h</label>
      </node>
      <node id="34">
        <label>qwayland-zkde-screencast-unstable-v1.h</label>
      </node>
      <node id="88">
        <label>sys/socket.h</label>
      </node>
      <node id="62">
        <label>sys/types.h</label>
      </node>
      <node id="89">
        <label>unistd.h</label>
      </node>
      <node id="14">
        <label>window.h</label>
      </node>
      <node id="50">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_fractional_scale" prot="public">TestFractionalScale</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="fractional__scaling__test_8cpp_1a485d6ddd568caea0908934bfdb9fbadb" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString s_socketName</definition>
        <argsstring></argsstring>
        <name>s_socketName</name>
        <initializer>= QStringLiteral(&quot;wayland_test_kwin_fractionalScale-0&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/fractional_scaling_test.cpp" line="35" column="22" bodyfile="kwin/autotests/integration/fractional_scaling_test.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2022<sp/>David<sp/>Edmundson<sp/>&lt;davidedmundson@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kwin__wayland__test_8h" kindref="compound">kwin_wayland_test.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2output_8h" kindref="compound">core/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer__input_8h" kindref="compound">pointer_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="clientconnection_8h" kindref="compound">wayland/clientconnection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">wayland/display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland__server_8h" kindref="compound">wayland_server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/compositor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/connection_thread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/output.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/surface.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDBusConnection&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;csignal&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>s_socketName<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;wayland_test_kwin_fractionalScale-0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_test_fractional_scale" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_fractional_scale" kindref="compound">TestFractionalScale</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Q_SLOTS:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cleanup();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testToplevel();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testPopup();</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestFractionalScale::initTestCase()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;KWin::Window<sp/>*&gt;();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;KWayland::Client::Output<sp/>*&gt;();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;init(s_socketName));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>1280<sp/>/<sp/>1.25,<sp/>1024<sp/>/<sp/>1.25),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.scale<sp/>=<sp/>1.25,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test::OutputInfo{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(1280,<sp/>0,<sp/>1280<sp/>/<sp/>2,<sp/>1024<sp/>/<sp/>2),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.scale<sp/>=<sp/>2.0,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>kwinApp()-&gt;start();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aaee7f44422f40ea8256b2f54e83a2b37" kindref="member">outputs</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputs.count(),<sp/>2);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputs[0]-&gt;geometry(),<sp/>QRect(0,<sp/>0,<sp/>1024,<sp/>819));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputs[1]-&gt;geometry(),<sp/>QRect(1280,<sp/>0,<sp/>640,<sp/>512));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputs[0]-&gt;scale(),<sp/>1.25);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputs[1]-&gt;scale(),<sp/>2.0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestFractionalScale::init()</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1a36c6e87757c3c97858c55b650c9d304c" kindref="member">Test::setupWaylandConnection</ref>(Test::AdditionalWaylandInterface::FractionalScaleManagerV1));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1abe694aeb41eaff7b515070ad0c11dba4" kindref="member">setActiveOutput</ref>(QPoint(640,<sp/>512));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>put<sp/>mouse<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>screen<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">KWin::input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(QPoint(640,<sp/>512));</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestFractionalScale::cleanup()</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a12755bae9118cb958baf0efbd222d7c8" kindref="member">Test::destroyWaylandConnection</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestFractionalScale::testToplevel()</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::FractionalScaleV1&gt;<sp/>fractionalScale(<ref refid="namespace_k_win_1_1_test_1ad5d6ef68dc8af138ba9e75cf3844524b" kindref="member">Test::createFractionalScaleV1</ref>(surface.get()));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>fractionalScaleChanged(fractionalScale.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_fractional_scale_v1_1a7161437a6eebe192be79678512db413d" kindref="member">Test::FractionalScaleV1::preferredScaleChanged</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>above<sp/>call<sp/>commits<sp/>the<sp/>surface<sp/>and<sp/>blocks<sp/>for<sp/>the<sp/>configure<sp/>event.<sp/>We<sp/>should<sp/>have<sp/>received<sp/>the<sp/>scale<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>sent<sp/>the<sp/>value<sp/>in<sp/>120ths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(fractionalScaleChanged.count(),<sp/>1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(fractionalScale-&gt;preferredScale(),<sp/>std::round(1.25<sp/>*<sp/>120));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(fractionalScaleChanged.count(),<sp/>1);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(fractionalScale-&gt;preferredScale(),<sp/>std::round(1.25<sp/>*<sp/>120));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>screen<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPoint(1280,<sp/>0));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1ab48f9c39f88089daf08aaa45759f7299" kindref="member">Test::waylandSync</ref>());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(fractionalScaleChanged.count(),<sp/>2);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(fractionalScale-&gt;preferredScale(),<sp/>std::round(2.0<sp/>*<sp/>120));</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestFractionalScale::testPopup()</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>toplevelSurface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::FractionalScaleV1&gt;<sp/>toplevelFractionalScale(<ref refid="namespace_k_win_1_1_test_1ad5d6ef68dc8af138ba9e75cf3844524b" kindref="member">Test::createFractionalScaleV1</ref>(toplevelSurface.get()));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>toplevelFractionalScaleChanged(toplevelFractionalScale.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_fractional_scale_v1_1a7161437a6eebe192be79678512db413d" kindref="member">Test::FractionalScaleV1::preferredScaleChanged</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>toplevel(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(toplevelSurface.get()));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>above<sp/>call<sp/>commits<sp/>the<sp/>surface<sp/>and<sp/>blocks<sp/>for<sp/>the<sp/>configure<sp/>event.<sp/>We<sp/>should<sp/>have<sp/>received<sp/>the<sp/>scale<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>sent<sp/>the<sp/>value<sp/>in<sp/>120ths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelFractionalScaleChanged.count(),<sp/>1);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelFractionalScale-&gt;preferredScale(),<sp/>std::round(1.25<sp/>*<sp/>120));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>toplevelWindow<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(toplevelSurface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(toplevelWindow);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelFractionalScaleChanged.count(),<sp/>1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelFractionalScale-&gt;preferredScale(),<sp/>std::round(1.25<sp/>*<sp/>120));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>popupSurface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::FractionalScaleV1&gt;<sp/>popupFractionalScale(<ref refid="namespace_k_win_1_1_test_1ad5d6ef68dc8af138ba9e75cf3844524b" kindref="member">Test::createFractionalScaleV1</ref>(popupSurface.get()));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>popupFractionalScaleChanged(popupFractionalScale.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_fractional_scale_v1_1a7161437a6eebe192be79678512db413d" kindref="member">Test::FractionalScaleV1::preferredScaleChanged</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgPositioner&gt;<sp/>positioner(<ref refid="namespace_k_win_1_1_test_1a735a2b3ebb5e8d173daba48b745871a4" kindref="member">Test::createXdgPositioner</ref>());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>positioner-&gt;set_size(10,<sp/>10);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>positioner-&gt;set_anchor_rect(10,<sp/>10,<sp/>10,<sp/>10);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgPopup&gt;<sp/>popup(<ref refid="namespace_k_win_1_1_test_1a52039e32ae72c4329a4720d32469a385" kindref="member">Test::createXdgPopupSurface</ref>(popupSurface.get(),<sp/>toplevel-&gt;xdgSurface(),<sp/>positioner.get()));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>above<sp/>call<sp/>commits<sp/>the<sp/>surface<sp/>and<sp/>blocks<sp/>for<sp/>the<sp/>configure<sp/>event.<sp/>We<sp/>should<sp/>have<sp/>received<sp/>the<sp/>scale<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>sent<sp/>the<sp/>value<sp/>in<sp/>120ths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(popupFractionalScaleChanged.count(),<sp/>1);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(popupFractionalScale-&gt;preferredScale(),<sp/>std::round(1.25<sp/>*<sp/>120));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>popupWindow<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(popupSurface.get(),<sp/>QSize(10,<sp/>10),<sp/>Qt::cyan);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(popupWindow);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(popupFractionalScaleChanged.count(),<sp/>1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(popupFractionalScale-&gt;preferredScale(),<sp/>std::round(1.25<sp/>*<sp/>120));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>the<sp/>parent<sp/>to<sp/>screen<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>toplevelWindow-&gt;move(QPoint(1280,<sp/>0));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1ab48f9c39f88089daf08aaa45759f7299" kindref="member">Test::waylandSync</ref>());</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelFractionalScaleChanged.count(),<sp/>2);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelFractionalScale-&gt;preferredScale(),<sp/>std::round(2.0<sp/>*<sp/>120));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(popupFractionalScaleChanged.count(),<sp/>2);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(popupFractionalScale-&gt;preferredScale(),<sp/>std::round(2.0<sp/>*<sp/>120));</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="kwin__wayland__test_8h_1a105fcd0c1d5eb52370ab30db8ad37c4c" kindref="member">WAYLANDTEST_MAIN</ref>(<ref refid="class_test_fractional_scale" kindref="compound">TestFractionalScale</ref>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fractional_scaling_test.moc&quot;</highlight></codeline>
    </programlisting>
    <location file="kwin/autotests/integration/fractional_scaling_test.cpp"/>
  </compounddef>
</doxygen>
