<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_invert_effect" kind="class" language="C++" prot="public">
    <compoundname>KWin::InvertEffect</compoundname>
    <basecompoundref refid="class_k_win_1_1_offscreen_effect" prot="public" virt="non-virtual">KWin::OffscreenEffect</basecompoundref>
    <includes refid="invert_8h" local="no">invert.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_invert_effect_1ab4b7f85a5b5f1b10d357eb38c6129f27" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::InvertEffect::m_inited</definition>
        <argsstring></argsstring>
        <name>m_inited</name>
        <qualifiedname>KWin::InvertEffect::m_inited</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="51" column="10" bodyfile="kwin/src/plugins/invert/invert.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_invert_effect_1a4a2f8b2607eafda066b69c8780695e2a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::InvertEffect::m_valid</definition>
        <argsstring></argsstring>
        <name>m_valid</name>
        <qualifiedname>KWin::InvertEffect::m_valid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="52" column="10" bodyfile="kwin/src/plugins/invert/invert.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_invert_effect_1a77ea9bbc3c5ac621a36f821275cdcafc" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_g_l_shader" kindref="compound">GLShader</ref> &gt;</type>
        <definition>std::unique_ptr&lt;GLShader&gt; KWin::InvertEffect::m_shader</definition>
        <argsstring></argsstring>
        <name>m_shader</name>
        <qualifiedname>KWin::InvertEffect::m_shader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="53" column="21" bodyfile="kwin/src/plugins/invert/invert.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_invert_effect_1adae44fc27f0d6ffa12a89a461d59ea88" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::InvertEffect::m_allWindows</definition>
        <argsstring></argsstring>
        <name>m_allWindows</name>
        <qualifiedname>KWin::InvertEffect::m_allWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="54" column="10" bodyfile="kwin/src/plugins/invert/invert.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_invert_effect_1aa22a68f20835708e20027ba279e308cd" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> * &gt;</type>
        <definition>QList&lt;EffectWindow *&gt; KWin::InvertEffect::m_windows</definition>
        <argsstring></argsstring>
        <name>m_windows</name>
        <qualifiedname>KWin::InvertEffect::m_windows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="55" column="11" bodyfile="kwin/src/plugins/invert/invert.h" bodystart="55" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_invert_effect_1a799e291abaf75a4e5ed92637b3bdb6f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::InvertEffect::InvertEffect</definition>
        <argsstring>()</argsstring>
        <name>InvertEffect</name>
        <qualifiedname>KWin::InvertEffect::InvertEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="27" column="5" bodyfile="kwin/src/plugins/invert/invert.cpp" bodystart="35" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_invert_effect_1ae2b350fce1d29c1946cdfec1f9088d08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::InvertEffect::~InvertEffect</definition>
        <argsstring>() override</argsstring>
        <name>~InvertEffect</name>
        <qualifiedname>KWin::InvertEffect::~InvertEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="28" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_invert_effect_1aee1dfa11d9a3eae2de6ec3daa2e1ab18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InvertEffect::isActive</definition>
        <argsstring>() const override</argsstring>
        <name>isActive</name>
        <qualifiedname>KWin::InvertEffect::isActive</qualifiedname>
        <reimplements refid="group__kwineffects_1ga596b6c0ed146b97b293f5db5f27fc40f">isActive</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overwrite this method to indicate whether your effect will be doing something in the next frame to be rendered. If the method returns <computeroutput>false</computeroutput> the effect will be excluded from the chained methods in the next rendered frame.</para>
<para>This method is called always directly before the paint loop begins. So it is totally fine to e.g. react on a window event, issue a repaint to trigger an animation and change a flag to indicate that this method returns <computeroutput>true</computeroutput>.</para>
<para>As the method is called each frame, you should not perform complex calculations. Best use just a boolean flag.</para>
<para>The default implementation of this method returns <computeroutput>true</computeroutput>. <simplesect kind="since"><para>4.8 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="30" column="10" bodyfile="kwin/src/plugins/invert/invert.cpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_invert_effect_1aafeb3f5320263aade98b09f0c60956c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InvertEffect::provides</definition>
        <argsstring>(Feature) override</argsstring>
        <name>provides</name>
        <qualifiedname>KWin::InvertEffect::provides</qualifiedname>
        <reimplements refid="group__kwineffects_1ga30fc2cbbdd90f95568a9e350f34bf2b7">provides</reimplements>
        <param>
          <type><ref refid="group__kwineffects_1ga6337b2a9b5aadfbb6b696119144b56ae" kindref="member">Feature</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called on Transparent resizes. return true if your effect substitutes questioned feature </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="31" column="10" bodyfile="kwin/src/plugins/invert/invert.cpp" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_invert_effect_1a08af5fbcff074719e15b01ebffa2098b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int KWin::InvertEffect::requestedEffectChainPosition</definition>
        <argsstring>() const override</argsstring>
        <name>requestedEffectChainPosition</name>
        <qualifiedname>KWin::InvertEffect::requestedEffectChainPosition</qualifiedname>
        <reimplements refid="group__kwineffects_1ga120531588e58691a5a18028158d2947a">requestedEffectChainPosition</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reimplement this method to indicate where in the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> chain the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> should be placed.</para>
<para>A low number indicates early chain position, thus before other Effects got called, a high number indicates a late position. The returned number should be in the interval [0, 100]. The default value is 0.</para>
<para>In KWin4 this information was provided in the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref>&apos;s desktop file as property X-KDE-Ordering. In the case of Scripted Effects this property is still used.</para>
<para><simplesect kind="since"><para>5.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="32" column="9" bodyfile="kwin/src/plugins/invert/invert.h" bodystart="58" bodyend="61"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_invert_effect_1a4886d0dd2b7185fba605fc107d08b54f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::InvertEffect::supported</definition>
        <argsstring>()</argsstring>
        <name>supported</name>
        <qualifiedname>KWin::InvertEffect::supported</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="34" column="17" bodyfile="kwin/src/plugins/invert/invert.cpp" bodystart="68" bodyend="71"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_k_win_1_1_invert_effect_1af9d2f9a7e804daae23d96cff11f1e524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InvertEffect::toggleScreenInversion</definition>
        <argsstring>()</argsstring>
        <name>toggleScreenInversion</name>
        <qualifiedname>KWin::InvertEffect::toggleScreenInversion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="37" column="10" bodyfile="kwin/src/plugins/invert/invert.cpp" bodystart="119" bodyend="133"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_invert_effect_1a0473b8a052df7f396d9561a59e8864a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InvertEffect::toggleWindow</definition>
        <argsstring>()</argsstring>
        <name>toggleWindow</name>
        <qualifiedname>KWin::InvertEffect::toggleWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="38" column="10" bodyfile="kwin/src/plugins/invert/invert.cpp" bodystart="135" bodyend="151"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_invert_effect_1a7435aa6c2a2402f60a15b9ec51ee9c83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InvertEffect::slotWindowAdded</definition>
        <argsstring>(KWin::EffectWindow *w)</argsstring>
        <name>slotWindowAdded</name>
        <qualifiedname>KWin::InvertEffect::slotWindowAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="40" column="10" bodyfile="kwin/src/plugins/invert/invert.cpp" bodystart="107" bodyend="112"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_invert_effect_1a8783ddc4a0dec392350f420a4dfe1486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InvertEffect::slotWindowClosed</definition>
        <argsstring>(KWin::EffectWindow *w)</argsstring>
        <name>slotWindowClosed</name>
        <qualifiedname>KWin::InvertEffect::slotWindowClosed</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="41" column="10" bodyfile="kwin/src/plugins/invert/invert.cpp" bodystart="114" bodyend="117"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_invert_effect_1aa190cbb4d3b2435aaf7c1db586e55a73" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::InvertEffect::loadData</definition>
        <argsstring>()</argsstring>
        <name>loadData</name>
        <qualifiedname>KWin::InvertEffect::loadData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="44" column="10" bodyfile="kwin/src/plugins/invert/invert.cpp" bodystart="93" bodyend="105"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_invert_effect_1a1b03a413eb8ff901d9c57f3a2578e807" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::InvertEffect::isInvertable</definition>
        <argsstring>(EffectWindow *window) const</argsstring>
        <name>isInvertable</name>
        <qualifiedname>KWin::InvertEffect::isInvertable</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="47" column="10" bodyfile="kwin/src/plugins/invert/invert.cpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_invert_effect_1afbeae5dcefefa4c403f4fc9cdd04e936" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InvertEffect::invert</definition>
        <argsstring>(EffectWindow *window)</argsstring>
        <name>invert</name>
        <qualifiedname>KWin::InvertEffect::invert</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="48" column="10" bodyfile="kwin/src/plugins/invert/invert.cpp" bodystart="78" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_invert_effect_1a169d870f02d0ea160f6c7368ae152683" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InvertEffect::uninvert</definition>
        <argsstring>(EffectWindow *window)</argsstring>
        <name>uninvert</name>
        <qualifiedname>KWin::InvertEffect::uninvert</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/invert/invert.h" line="49" column="10" bodyfile="kwin/src/plugins/invert/invert.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Inverts desktop&apos;s colors </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::InvertEffect</label>
        <link refid="class_k_win_1_1_invert_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::OffscreenEffect</label>
        <link refid="class_k_win_1_1_offscreen_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::InvertEffect</label>
        <link refid="class_k_win_1_1_invert_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::OffscreenEffect</label>
        <link refid="class_k_win_1_1_offscreen_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/plugins/invert/invert.h" line="23" column="1" bodyfile="kwin/src/plugins/invert/invert.h" bodystart="24" bodyend="56"/>
    <listofallmembers>
      <member refid="group__kwineffects_1gab9bcf52072fe74567496b0a894d1d873" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga3a167fe6d9c46376ed46db13caf2d135" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga0ba05f1463195d0f92ea1dd3396a5d16" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>animationTime</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a770fb27f108f87402051ca3f320092b2" prot="protected" virt="virtual"><scope>KWin::InvertEffect</scope><name>apply</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a112119e708233a1ddcfac249089f2fee" prot="protected" virt="virtual"><scope>KWin::InvertEffect</scope><name>blocksDirectScanout</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea67d120ab5ce1dc424476e63c132af6c1" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>Blur</name></member>
      <member refid="group__kwineffects_1gab8a94f591b743b59b7285911e641e7d5" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>borderActivated</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aead805f717a48c23959a1e9ecd7722d15d" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>Contrast</name></member>
      <member refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>cursorPos</name></member>
      <member refid="group__kwineffects_1ga0c159e00c3a51ca733bea49cf8d52691" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>debug</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a0a6ba121aa03a17457d3080054ef1615" prot="protected" virt="virtual"><scope>KWin::InvertEffect</scope><name>drawWindow</name></member>
      <member refid="group__kwineffects_1ga7bd8262f4cb2c5c3090c748eb388ad7e" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>Effect</name></member>
      <member refid="group__kwineffects_1ga6337b2a9b5aadfbb6b696119144b56ae" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>Feature</name></member>
      <member refid="group__kwineffects_1gab5e0581ae4b2dffe8014ff5cf6c21158" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>grabbedKeyboardEvent</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aeaecbb77ad241419970ece3d45296c4838" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>HighlightWindows</name></member>
      <member refid="group__kwineffects_1ga7b0ecb57667179e95c188f0ee7416d00" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>interpolate</name></member>
      <member refid="class_k_win_1_1_invert_effect_1afbeae5dcefefa4c403f4fc9cdd04e936" prot="private" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>invert</name></member>
      <member refid="class_k_win_1_1_invert_effect_1a799e291abaf75a4e5ed92637b3bdb6f5" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>InvertEffect</name></member>
      <member refid="class_k_win_1_1_invert_effect_1aee1dfa11d9a3eae2de6ec3daa2e1ab18" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>isActive</name></member>
      <member refid="class_k_win_1_1_invert_effect_1a1b03a413eb8ff901d9c57f3a2578e807" prot="private" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>isInvertable</name></member>
      <member refid="class_k_win_1_1_invert_effect_1aa190cbb4d3b2435aaf7c1db586e55a73" prot="protected" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>loadData</name></member>
      <member refid="class_k_win_1_1_invert_effect_1adae44fc27f0d6ffa12a89a461d59ea88" prot="private" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>m_allWindows</name></member>
      <member refid="class_k_win_1_1_invert_effect_1ab4b7f85a5b5f1b10d357eb38c6129f27" prot="private" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>m_inited</name></member>
      <member refid="class_k_win_1_1_invert_effect_1a77ea9bbc3c5ac621a36f821275cdcafc" prot="private" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>m_shader</name></member>
      <member refid="class_k_win_1_1_invert_effect_1a4a2f8b2607eafda066b69c8780695e2a" prot="private" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>m_valid</name></member>
      <member refid="class_k_win_1_1_invert_effect_1aa22a68f20835708e20027ba279e308cd" prot="private" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>m_windows</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea170229312ed2ec0e446ee89ba7f6b6ca" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>Nothing</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ac2af5bb9d718ff03474cdd2d6715a055" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>OffscreenEffect</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dab0de2932c45bde6df3de10d00dbd6fcd" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>PAINT_SCREEN_BACKGROUND_FIRST</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da43acbfc913cae9eb3c363aeb0524f18f" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>PAINT_SCREEN_REGION</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da3e731594d83c3e92742bff7c420fb7f8" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>PAINT_SCREEN_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da124dd798e5f793087e81da77e11a9b1e" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>PAINT_SCREEN_WITH_TRANSFORMED_WINDOWS</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac606d3dcf2dd150234f71c4c39083c7d" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>PAINT_WINDOW_OPAQUE</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da684bb6c6c278b900b6d0c889e79233b8" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>PAINT_WINDOW_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac7237bf4bb4d6ea6d6fb1215db19b45e" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>PAINT_WINDOW_TRANSLUCENT</name></member>
      <member refid="group__kwineffects_1ga44ee94161446ce6fb2502376af6515a8" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>paintScreen</name></member>
      <member refid="group__kwineffects_1ga0f0292db2bf016a0843ef7cc06219378" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>paintWindow</name></member>
      <member refid="group__kwineffects_1ga5fb1bc87ff54dcc2cfe87b070816ab00" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>perform</name></member>
      <member refid="group__kwineffects_1ga10021cf9704c00d60beae284d53846e2" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>postPaintScreen</name></member>
      <member refid="group__kwineffects_1ga9b7cf82c6f74331cffabb06c63ef914c" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>postPaintWindow</name></member>
      <member refid="group__kwineffects_1ga2edc1b757e36bb6bcbbacde454dfc05c" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>prePaintScreen</name></member>
      <member refid="group__kwineffects_1ga2832c7831c0f49f9f5cf0267ffc53672" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>prePaintWindow</name></member>
      <member refid="class_k_win_1_1_invert_effect_1aafeb3f5320263aade98b09f0c60956c3" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>provides</name></member>
      <member refid="group__kwineffects_1ga737c6d80eb8f8b24fdc6398209c38e3d" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>reconfigure</name></member>
      <member refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>ReconfigureAll</name></member>
      <member refid="group__kwineffects_1ga4aebd7d0f695e37678debaa118fa92dc" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>ReconfigureFlag</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a6f9911e49dbaf73975c2f238937930be" prot="protected" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>redirect</name></member>
      <member refid="class_k_win_1_1_invert_effect_1a08af5fbcff074719e15b01ebffa2098b" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>requestedEffectChainPosition</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea592ea0de7a4d658a1ef9bbb48b18e15a" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>ScreenInversion</name></member>
      <member refid="group__kwineffects_1ga1efc42cd9be15e8200c6e55f6bf47cb8" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>setPositionTransformations</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ae98f808ad3750003d4a1f7f24fa284a5" prot="protected" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>setShader</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ae390a8c07620d899b467b6c919901649" prot="protected" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>setVertexSnappingMode</name></member>
      <member refid="class_k_win_1_1_invert_effect_1a7435aa6c2a2402f60a15b9ec51ee9c83" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>slotWindowAdded</name></member>
      <member refid="class_k_win_1_1_invert_effect_1a8783ddc4a0dec392350f420a4dfe1486" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>slotWindowClosed</name></member>
      <member refid="class_k_win_1_1_invert_effect_1a4886d0dd2b7185fba605fc107d08b54f" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>supported</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea19036d413806c53978a3234e7eb197c4" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>SystemBell</name></member>
      <member refid="group__kwineffects_1ga2d22a8f0b8a4d81615dff67dc1ef970f" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>tabletPadButtonEvent</name></member>
      <member refid="group__kwineffects_1gaa084e5a45597f5775213715eb5506f63" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>tabletPadRingEvent</name></member>
      <member refid="group__kwineffects_1ga4998fb0983bd97163935cad2c4dedd76" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>tabletPadStripEvent</name></member>
      <member refid="group__kwineffects_1ga1d4ae01f5935ea887a12018d59191cbf" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>tabletToolAxis</name></member>
      <member refid="group__kwineffects_1ga7a984d7d83dfa97962b8404301c6aba9" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>tabletToolButtonEvent</name></member>
      <member refid="group__kwineffects_1ga4ed77506be381680bf664dbc8c20e036" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>tabletToolProximity</name></member>
      <member refid="group__kwineffects_1gaf16e9ca42cceb738fb859d1a1a462548" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>tabletToolTip</name></member>
      <member refid="class_k_win_1_1_invert_effect_1af9d2f9a7e804daae23d96cff11f1e524" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>toggleScreenInversion</name></member>
      <member refid="class_k_win_1_1_invert_effect_1a0473b8a052df7f396d9561a59e8864a0" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>toggleWindow</name></member>
      <member refid="group__kwineffects_1gaa31554949bc00085e6380b50be16138e" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>touchCancel</name></member>
      <member refid="group__kwineffects_1ga315fd305e7570f41e7bce7db6812381f" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>touchDown</name></member>
      <member refid="group__kwineffects_1ga54d00a9e05b5d4597db40c2f5b1d36de" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>touchMotion</name></member>
      <member refid="group__kwineffects_1gaf3871967d6199eb7c87621bc75b925bb" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>touchUp</name></member>
      <member refid="class_k_win_1_1_invert_effect_1a169d870f02d0ea160f6c7368ae152683" prot="private" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>uninvert</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a503d5105f32353e6a0046b8a0ea91b22" prot="protected" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>unredirect</name></member>
      <member refid="group__kwineffects_1ga7b142933c38cb9b4a433b768b266e7cb" prot="public" virt="virtual"><scope>KWin::InvertEffect</scope><name>windowInputMouseEvent</name></member>
      <member refid="group__kwineffects_1ga50174eb0169aebceb78ebd5aff71c481" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>~Effect</name></member>
      <member refid="class_k_win_1_1_invert_effect_1ae2b350fce1d29c1946cdfec1f9088d08" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>~InvertEffect</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ac913e0092c54576890821b0bcb3e7033" prot="public" virt="non-virtual"><scope>KWin::InvertEffect</scope><name>~OffscreenEffect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
