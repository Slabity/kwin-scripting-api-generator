<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_drm_q_painter_layer" kind="class" language="C++" prot="public">
    <compoundname>KWin::DrmQPainterLayer</compoundname>
    <basecompoundref refid="class_k_win_1_1_drm_pipeline_layer" prot="public" virt="non-virtual">KWin::DrmPipelineLayer</basecompoundref>
    <includes refid="drm__qpainter__layer_8h" local="no">drm_qpainter_layer.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_drm_q_painter_layer_1aba57f60caeb1cfc5d70002525a557798" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_q_painter_swapchain" kindref="compound">QPainterSwapchain</ref> &gt;</type>
        <definition>std::shared_ptr&lt;QPainterSwapchain&gt; KWin::DrmQPainterLayer::m_swapchain</definition>
        <argsstring></argsstring>
        <name>m_swapchain</name>
        <qualifiedname>KWin::DrmQPainterLayer::m_swapchain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="44" column="21" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_q_painter_layer_1a0240e1e2e2b446ea0f09e31dcab1cce5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_q_painter_swapchain_slot" kindref="compound">QPainterSwapchainSlot</ref> &gt;</type>
        <definition>std::shared_ptr&lt;QPainterSwapchainSlot&gt; KWin::DrmQPainterLayer::m_currentBuffer</definition>
        <argsstring></argsstring>
        <name>m_currentBuffer</name>
        <qualifiedname>KWin::DrmQPainterLayer::m_currentBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="45" column="21" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_q_painter_layer_1a720a5c86968921d68ac9db0f22f7bbdb" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_drm_framebuffer" kindref="compound">DrmFramebuffer</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DrmFramebuffer&gt; KWin::DrmQPainterLayer::m_currentFramebuffer</definition>
        <argsstring></argsstring>
        <name>m_currentFramebuffer</name>
        <qualifiedname>KWin::DrmQPainterLayer::m_currentFramebuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="46" column="21" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_q_painter_layer_1a45c37c873ed9e29fbacbef117c9089a1" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_damage_journal" kindref="compound">DamageJournal</ref></type>
        <definition>DamageJournal KWin::DrmQPainterLayer::m_damageJournal</definition>
        <argsstring></argsstring>
        <name>m_damageJournal</name>
        <qualifiedname>KWin::DrmQPainterLayer::m_damageJournal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="47" column="19" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_q_painter_layer_1a63135bf7d86d76efa0adc9118a1e79be" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_cpu_render_time_query" kindref="compound">CpuRenderTimeQuery</ref> &gt;</type>
        <definition>std::unique_ptr&lt;CpuRenderTimeQuery&gt; KWin::DrmQPainterLayer::m_renderTime</definition>
        <argsstring></argsstring>
        <name>m_renderTime</name>
        <qualifiedname>KWin::DrmQPainterLayer::m_renderTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="48" column="21" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.h" bodystart="48" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_layer_1a1923b8c449b7f0fad549c9fb44d0df4a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::DrmQPainterLayer::DrmQPainterLayer</definition>
        <argsstring>(DrmPipeline *pipeline, DrmPlane::TypeIndex type)</argsstring>
        <name>DrmQPainterLayer</name>
        <qualifiedname>KWin::DrmQPainterLayer::DrmQPainterLayer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_drm_pipeline" kindref="compound">DrmPipeline</ref> *</type>
          <declname>pipeline</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_drm_plane_1a3cf72c069e4b10ac10646deba960d050" kindref="member">DrmPlane::TypeIndex</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="29" column="14" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_layer_1a162e750c739fa22e2194a9c310ca7311" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::optional&lt; <ref refid="struct_k_win_1_1_output_layer_begin_frame_info" kindref="compound">OutputLayerBeginFrameInfo</ref> &gt;</type>
        <definition>std::optional&lt; OutputLayerBeginFrameInfo &gt; KWin::DrmQPainterLayer::doBeginFrame</definition>
        <argsstring>() override</argsstring>
        <name>doBeginFrame</name>
        <qualifiedname>KWin::DrmQPainterLayer::doBeginFrame</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_layer_1aa468802d01855b8978b27bbc03be0c5b">doBeginFrame</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="31" column="19" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.cpp" bodystart="30" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_layer_1aadccd2bd988317e2ba78dad27b35231f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::DrmQPainterLayer::doEndFrame</definition>
        <argsstring>(const QRegion &amp;renderedRegion, const QRegion &amp;damagedRegion, OutputFrame *frame) override</argsstring>
        <name>doEndFrame</name>
        <qualifiedname>KWin::DrmQPainterLayer::doEndFrame</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_layer_1a693ed0b18329db5416bab2c60b00304b">doEndFrame</reimplements>
        <param>
          <type>const QRegion &amp;</type>
          <declname>renderedRegion</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>damagedRegion</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="32" column="10" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.cpp" bodystart="50" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_layer_1ab1311bb2520dac4deebd7715a87eb005" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::DrmQPainterLayer::checkTestBuffer</definition>
        <argsstring>() override</argsstring>
        <name>checkTestBuffer</name>
        <qualifiedname>KWin::DrmQPainterLayer::checkTestBuffer</qualifiedname>
        <reimplements refid="class_k_win_1_1_drm_pipeline_layer_1ae3a21624783099f9ba10799df13643f4">checkTestBuffer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="33" column="10" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.cpp" bodystart="65" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_layer_1acfb5fa8f9cd4d260742fad7cfb005a08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_drm_framebuffer" kindref="compound">DrmFramebuffer</ref> &gt;</type>
        <definition>std::shared_ptr&lt; DrmFramebuffer &gt; KWin::DrmQPainterLayer::currentBuffer</definition>
        <argsstring>() const override</argsstring>
        <name>currentBuffer</name>
        <qualifiedname>KWin::DrmQPainterLayer::currentBuffer</qualifiedname>
        <reimplements refid="class_k_win_1_1_drm_pipeline_layer_1ac97777cca6e507b3e9fba0b38f87fe49">currentBuffer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="34" column="21" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_layer_1afe4fcb0a4b2d0083a82fd0e83670c306" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::DrmQPainterLayer::releaseBuffers</definition>
        <argsstring>() override</argsstring>
        <name>releaseBuffers</name>
        <qualifiedname>KWin::DrmQPainterLayer::releaseBuffers</qualifiedname>
        <reimplements refid="class_k_win_1_1_drm_output_layer_1a30e1157ad2d4eea343afb35e8186e4cb">releaseBuffers</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="35" column="10" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_layer_1a8b750dfbe83ad5a7831821c13d8d5251" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref> *</type>
        <definition>DrmDevice * KWin::DrmQPainterLayer::scanoutDevice</definition>
        <argsstring>() const override</argsstring>
        <name>scanoutDevice</name>
        <qualifiedname>KWin::DrmQPainterLayer::scanoutDevice</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_layer_1ab43b39c7559453fd517bc4f1ee726784">scanoutDevice</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="36" column="15" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_layer_1a4a37c0d5a374dfaa2c9b03499330d846" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt;</type>
        <definition>QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt; KWin::DrmQPainterLayer::supportedDrmFormats</definition>
        <argsstring>() const override</argsstring>
        <name>supportedDrmFormats</name>
        <qualifiedname>KWin::DrmQPainterLayer::supportedDrmFormats</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_layer_1ace0c0e616f28f53a53498291526ff62d">supportedDrmFormats</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="37" column="11" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.cpp" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_layer_1a397525d4c7a350ece84d126feb50e735" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QList&lt; QSize &gt;</type>
        <definition>QList&lt; QSize &gt; KWin::DrmQPainterLayer::recommendedSizes</definition>
        <argsstring>() const override</argsstring>
        <name>recommendedSizes</name>
        <qualifiedname>KWin::DrmQPainterLayer::recommendedSizes</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_layer_1ac9ce2d0a04165b7d23f4229c0ed8e0e0">recommendedSizes</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For some layers it can be beneficial to use specific sizes only. This returns those specific sizes, if present </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="38" column="11" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.cpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_layer_1a538abed0f0071c7ce5d86709113f68d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref></type>
        <definition>ColorDescription KWin::DrmQPainterLayer::colorDescription</definition>
        <argsstring>() const override</argsstring>
        <name>colorDescription</name>
        <qualifiedname>KWin::DrmQPainterLayer::colorDescription</qualifiedname>
        <reimplements refid="class_k_win_1_1_drm_pipeline_layer_1ab82697821437795b5fd0481f43d72095">colorDescription</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="39" column="22" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.cpp" bodystart="113" bodyend="116"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_drm_q_painter_layer_1ab024001138271504f4015db6b3a2da12" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::DrmQPainterLayer::doesSwapchainFit</definition>
        <argsstring>() const</argsstring>
        <name>doesSwapchainFit</name>
        <qualifiedname>KWin::DrmQPainterLayer::doesSwapchainFit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="42" column="10" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.cpp" bodystart="83" bodyend="86"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>KWin::DrmOutputLayer</label>
        <link refid="class_k_win_1_1_drm_output_layer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::DrmPipelineLayer</label>
        <link refid="class_k_win_1_1_drm_pipeline_layer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::DrmQPainterLayer</label>
        <link refid="class_k_win_1_1_drm_q_painter_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>KWin::OutputLayer</label>
        <link refid="class_k_win_1_1_output_layer"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12">
        <label>KWin::BrightnessDevice</label>
        <link refid="class_k_win_1_1_brightness_device"/>
      </node>
      <node id="9">
        <label>KWin::ColorDescription</label>
        <link refid="class_k_win_1_1_color_description"/>
        <childnode refid="9" relation="usage">
          <edgelabel>sRGB</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>KWin::ColorPipeline</label>
        <link refid="class_k_win_1_1_color_pipeline"/>
        <childnode refid="15" relation="usage">
          <edgelabel>inputRange</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KWin::DrmOutputLayer</label>
        <link refid="class_k_win_1_1_drm_output_layer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>KWin::DrmPipeline</label>
        <link refid="class_k_win_1_1_drm_pipeline"/>
      </node>
      <node id="2">
        <label>KWin::DrmPipelineLayer</label>
        <link refid="class_k_win_1_1_drm_pipeline_layer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_pipeline</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_colorPipeline</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>KWin::DrmQPainterLayer</label>
        <link refid="class_k_win_1_1_drm_q_painter_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>KWin::Edid</label>
        <link refid="class_k_win_1_1_edid"/>
      </node>
      <node id="7">
        <label>KWin::Output</label>
        <link refid="class_k_win_1_1_output"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_state</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_information</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_brightnessDevice</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>KWin::Output::Information</label>
        <link refid="struct_k_win_1_1_output_1_1_information"/>
        <childnode refid="11" relation="usage">
          <edgelabel>edid</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>panelOrientation</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>KWin::Output::State</label>
        <link refid="struct_k_win_1_1_output_1_1_state"/>
        <childnode refid="6" relation="usage">
          <edgelabel>manualTransform</edgelabel>
          <edgelabel>transform</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>colorDescription</edgelabel>
          <edgelabel>originalColorDescription</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>KWin::OutputLayer</label>
        <link refid="class_k_win_1_1_output_layer"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_bufferTransform</edgelabel>
          <edgelabel>m_offloadTransform</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_output</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>KWin::OutputTransform</label>
        <link refid="class_k_win_1_1_output_transform"/>
      </node>
      <node id="15">
        <label>KWin::ValueRange</label>
        <link refid="class_k_win_1_1_value_range"/>
      </node>
      <node id="5">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/backends/drm/drm_qpainter_layer.h" line="26" column="1" bodyfile="kwin/src/backends/drm/drm_qpainter_layer.h" bodystart="27" bodyend="49"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_output_layer_1a2f2b3779acdac137f313af1b1d19aa57" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>addRepaint</name></member>
      <member refid="class_k_win_1_1_output_layer_1a0c35fab74670dc55d6778c0ba83f65b3" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>beginFrame</name></member>
      <member refid="class_k_win_1_1_output_layer_1abcd7fbb2032b11fdd392da6b6247c725" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>bufferTransform</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1ab1311bb2520dac4deebd7715a87eb005" prot="public" virt="virtual"><scope>KWin::DrmQPainterLayer</scope><name>checkTestBuffer</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1a538abed0f0071c7ce5d86709113f68d3" prot="public" virt="virtual"><scope>KWin::DrmQPainterLayer</scope><name>colorDescription</name></member>
      <member refid="class_k_win_1_1_drm_pipeline_layer_1a5ab33ce5d97b6b96b1bc52a2f8a6c80f" prot="public" virt="virtual"><scope>KWin::DrmQPainterLayer</scope><name>colorPipeline</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1acfb5fa8f9cd4d260742fad7cfb005a08" prot="public" virt="virtual"><scope>KWin::DrmQPainterLayer</scope><name>currentBuffer</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1a162e750c739fa22e2194a9c310ca7311" prot="public" virt="virtual"><scope>KWin::DrmQPainterLayer</scope><name>doBeginFrame</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1aadccd2bd988317e2ba78dad27b35231f" prot="public" virt="virtual"><scope>KWin::DrmQPainterLayer</scope><name>doEndFrame</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1ab024001138271504f4015db6b3a2da12" prot="private" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>doesSwapchainFit</name></member>
      <member refid="class_k_win_1_1_output_layer_1a1843ff1def5379cfad784d76df2b5bbb" prot="protected" virt="virtual"><scope>KWin::DrmQPainterLayer</scope><name>doImportScanoutBuffer</name></member>
      <member refid="class_k_win_1_1_drm_output_layer_1ae1bce9bf8c27ad2d31fc5ec5e01e1e64" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>DrmOutputLayer</name></member>
      <member refid="class_k_win_1_1_drm_pipeline_layer_1a7af9fd43c5d0168e7d8b1017de2038f4" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>DrmPipelineLayer</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1a1923b8c449b7f0fad549c9fb44d0df4a" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>DrmQPainterLayer</name></member>
      <member refid="class_k_win_1_1_output_layer_1a742e96adf296b32a4f1efaca57d602fe" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>endFrame</name></member>
      <member refid="class_k_win_1_1_output_layer_1ab5b0f0faaea0c7e881db718a64658dc0" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>hotspot</name></member>
      <member refid="class_k_win_1_1_output_layer_1a54ee1bcc42a4346ddce4860b37339203" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>importScanoutBuffer</name></member>
      <member refid="class_k_win_1_1_output_layer_1ade038d52e72b155d6ee023524d066d7d" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>isEnabled</name></member>
      <member refid="class_k_win_1_1_output_layer_1ae5b61066054d6f2f817700a2ad38c338" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_bufferTransform</name></member>
      <member refid="class_k_win_1_1_drm_pipeline_layer_1a63f9b83e6ab3412b77e810eaddb2d662" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_colorPipeline</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1a0240e1e2e2b446ea0f09e31dcab1cce5" prot="private" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_currentBuffer</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1a720a5c86968921d68ac9db0f22f7bbdb" prot="private" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_currentFramebuffer</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1a45c37c873ed9e29fbacbef117c9089a1" prot="private" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_damageJournal</name></member>
      <member refid="class_k_win_1_1_output_layer_1a8b34de14c7ce7f8f60fbb0899afd9d42" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_enabled</name></member>
      <member refid="class_k_win_1_1_output_layer_1a30b570aaca0b11d2a9d395703dedfa2e" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_hotspot</name></member>
      <member refid="class_k_win_1_1_output_layer_1abe5864edf1b1412b7a922151b603907d" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_offloadTransform</name></member>
      <member refid="class_k_win_1_1_output_layer_1a9b035f27d0ea567a73bf27f9ef82f744" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_output</name></member>
      <member refid="class_k_win_1_1_drm_pipeline_layer_1a0e12e4a1139ddeddcb79038036035473" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_pipeline</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1a63135bf7d86d76efa0adc9118a1e79be" prot="private" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_renderTime</name></member>
      <member refid="class_k_win_1_1_output_layer_1a55f0b76d433dc0f1dcbb41ca834e5d00" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_repaints</name></member>
      <member refid="class_k_win_1_1_output_layer_1a00e5d48f76d5f74421c89655a66824b7" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_scale</name></member>
      <member refid="class_k_win_1_1_output_layer_1a008ca7b899cf515c4483c3f45f543b9a" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_scanoutCandidate</name></member>
      <member refid="class_k_win_1_1_output_layer_1a81b53e2bbdca8faeb1fe25f53da077e6" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_sourceRect</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1aba57f60caeb1cfc5d70002525a557798" prot="private" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_swapchain</name></member>
      <member refid="class_k_win_1_1_output_layer_1abf7d3cc9dff1017d98b72640f3a775f0" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_targetRect</name></member>
      <member refid="class_k_win_1_1_drm_pipeline_layer_1a9235d470099c0a7d0d034b1689c87cbf" prot="protected" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>m_type</name></member>
      <member refid="class_k_win_1_1_output_layer_1ab44b7af337ba615f5e5550586b99ecc9" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>needsRepaint</name></member>
      <member refid="class_k_win_1_1_output_layer_1accd1ac89381d7761a47ba22f94200000" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>notifyNoScanoutCandidate</name></member>
      <member refid="class_k_win_1_1_output_layer_1abcbc86757c8850d18529bddc3d537160" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>offloadTransform</name></member>
      <member refid="class_k_win_1_1_output_layer_1a9ee261bca4012bac914df29d5ebf4117" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>OutputLayer</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1a397525d4c7a350ece84d126feb50e735" prot="public" virt="virtual"><scope>KWin::DrmQPainterLayer</scope><name>recommendedSizes</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1afe4fcb0a4b2d0083a82fd0e83670c306" prot="public" virt="virtual"><scope>KWin::DrmQPainterLayer</scope><name>releaseBuffers</name></member>
      <member refid="class_k_win_1_1_output_layer_1a213d86c0f4be0c717d5e734d43224d01" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>repaints</name></member>
      <member refid="class_k_win_1_1_output_layer_1a7e9983dfc6583b829e85961112a76646" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>resetRepaints</name></member>
      <member refid="class_k_win_1_1_output_layer_1a75cc900617e49a9125da7bf26f3ab986" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>scale</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1a8b750dfbe83ad5a7831821c13d8d5251" prot="public" virt="virtual"><scope>KWin::DrmQPainterLayer</scope><name>scanoutDevice</name></member>
      <member refid="class_k_win_1_1_output_layer_1a44ada592a0855658e6e5fa96b5b67c04" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>setEnabled</name></member>
      <member refid="class_k_win_1_1_output_layer_1af15fe575d7268641fccc72b1f91b96aa" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>setHotspot</name></member>
      <member refid="class_k_win_1_1_output_layer_1a4dfcbf3650f97a4f072008773c981a03" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>setScale</name></member>
      <member refid="class_k_win_1_1_output_layer_1a4836d5c759356c56eb085f9d51f6b9df" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>setSourceRect</name></member>
      <member refid="class_k_win_1_1_output_layer_1a85709e6e7f9019c3a16a362d041a8569" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>setTargetRect</name></member>
      <member refid="class_k_win_1_1_output_layer_1a2ae106b6b52ad73ff92ae9f0aa667461" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>sourceRect</name></member>
      <member refid="class_k_win_1_1_drm_q_painter_layer_1a4a37c0d5a374dfaa2c9b03499330d846" prot="public" virt="virtual"><scope>KWin::DrmQPainterLayer</scope><name>supportedDrmFormats</name></member>
      <member refid="class_k_win_1_1_output_layer_1a55b2e80edaf7ad94832884608aca8042" prot="public" virt="non-virtual"><scope>KWin::DrmQPainterLayer</scope><name>targetRect</name></member>
      <member refid="class_k_win_1_1_drm_output_layer_1a21dd20caca96f686a9b4f96b92f516a0" prot="public" virt="virtual"><scope>KWin::DrmQPainterLayer</scope><name>texture</name></member>
      <member refid="class_k_win_1_1_drm_output_layer_1ac18f189121b670f907382224f53a5fc9" prot="public" virt="virtual"><scope>KWin::DrmQPainterLayer</scope><name>~DrmOutputLayer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
