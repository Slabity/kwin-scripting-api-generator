<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="wayland__qpainter__backend_8h" kind="file" language="C++">
    <compoundname>wayland_qpainter_backend.h</compoundname>
    <includes refid="outputlayer_8h" local="yes">core/outputlayer.h</includes>
    <includes refid="qpainterbackend_8h" local="yes">platformsupport/scenes/qpainter/qpainterbackend.h</includes>
    <includes refid="damagejournal_8h" local="yes">utils/damagejournal.h</includes>
    <includes local="no">QImage</includes>
    <includes local="no">QObject</includes>
    <includes local="no">chrono</includes>
    <includedby refid="wayland__backend_8cpp" local="yes">kwin/src/backends/wayland/wayland_backend.cpp</includedby>
    <includedby refid="wayland__qpainter__backend_8cpp" local="yes">kwin/src/backends/wayland/wayland_qpainter_backend.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/backends/wayland/wayland_qpainter_backend.h</label>
        <link refid="wayland__qpainter__backend_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/outputlayer.h</label>
        <link refid="outputlayer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>platformsupport/scenes/qpainter/qpainterbackend.h</label>
        <link refid="qpainterbackend_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>utils/damagejournal.h</label>
        <link refid="damagejournal_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>QByteArray</label>
      </node>
      <node id="13">
        <label>QCoreApplication</label>
      </node>
      <node id="22">
        <label>QDebug</label>
      </node>
      <node id="14">
        <label>QImage</label>
      </node>
      <node id="20">
        <label>QList</label>
      </node>
      <node id="6">
        <label>QMatrix4x4</label>
      </node>
      <node id="17">
        <label>QObject</label>
      </node>
      <node id="15">
        <label>QPoint</label>
      </node>
      <node id="25">
        <label>QPointer</label>
      </node>
      <node id="23">
        <label>QRect</label>
      </node>
      <node id="26">
        <label>QRegion</label>
      </node>
      <node id="21">
        <label>QSize</label>
      </node>
      <node id="24">
        <label>QUuid</label>
      </node>
      <node id="16">
        <label>QVariant</label>
      </node>
      <node id="7">
        <label>QVector2D</label>
      </node>
      <node id="27">
        <label>chrono</label>
      </node>
      <node id="12">
        <label>config-kwin.h</label>
      </node>
      <node id="8">
        <label>kwin_export.h</label>
      </node>
      <node id="31">
        <label>memory</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>kwin/src/backends/wayland/wayland_backend.cpp</label>
        <link refid="wayland__backend_8cpp"/>
      </node>
      <node id="3">
        <label>kwin/src/backends/wayland/wayland_qpainter_backend.cpp</label>
        <link refid="wayland__qpainter__backend_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/src/backends/wayland/wayland_qpainter_backend.h</label>
        <link refid="wayland__qpainter__backend_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer" prot="public">KWin::Wayland::WaylandQPainterPrimaryLayer</innerclass>
    <innerclass refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer" prot="public">KWin::Wayland::WaylandQPainterCursorLayer</innerclass>
    <innerclass refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend" prot="public">KWin::Wayland::WaylandQPainterBackend</innerclass>
    <innerclass refid="struct_k_win_1_1_wayland_1_1_wayland_q_painter_backend_1_1_layers" prot="private">KWin::Wayland::WaylandQPainterBackend::Layers</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <innernamespace refid="namespace_k_win_1_1_wayland">KWin::Wayland</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2019<sp/>Roman<sp/>Gilg<sp/>&lt;subdiff@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2013,<sp/>2015<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputlayer_8h" kindref="compound">core/outputlayer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="qpainterbackend_8h" kindref="compound">platformsupport/scenes/qpainter/qpainterbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="damagejournal_8h" kindref="compound">utils/damagejournal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QImage&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QObject&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_graphics_buffer_allocator" kindref="compound">GraphicsBufferAllocator</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_q_painter_swapchain_slot" kindref="compound">QPainterSwapchainSlot</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_q_painter_swapchain" kindref="compound">QPainterSwapchain</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1_1_wayland" kindref="compound">Wayland</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_display" kindref="compound">WaylandDisplay</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_output" kindref="compound">WaylandOutput</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend" kindref="compound">WaylandQPainterBackend</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1a88c2e79deeb6739004293e91cf0d22be" kindref="member">WaylandQPainterPrimaryLayer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a9ee261bca4012bac914df29d5ebf4117" kindref="member">OutputLayer</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1a88c2e79deeb6739004293e91cf0d22be" kindref="member">WaylandQPainterPrimaryLayer</ref>(<ref refid="class_k_win_1_1_wayland_1_1_wayland_output" kindref="compound">WaylandOutput</ref><sp/>*output,<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1a7b6b398fd4d27266b8e86c6c408ad351" kindref="member">WaylandQPainterBackend</ref><sp/>*backend);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1afd5f9524fea478083b16f8c4e515390d" kindref="member">~WaylandQPainterPrimaryLayer</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;OutputLayerBeginFrameInfo&gt;<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1ae8e5e56033d0b2eb99b3389f19176e05" kindref="member">doBeginFrame</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1ab0b5a981b36019aa242ecaef8accadfb" kindref="member">doEndFrame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;renderedRegion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;damagedRegion,<sp/><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref><sp/>*frame)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1a2df80abaa96ecfae0d8bede10926883b" kindref="member">scanoutDevice</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1a04fc92e3f2eeec67e4e213818b86b3c2" kindref="member">supportedDrmFormats</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>QRegion<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1a4352eda50dc3e789693aa41c473d7cde" kindref="member">accumulateDamage</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufferAge)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output" kindref="compound">WaylandOutput</ref><sp/>*m_waylandOutput;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1a7b6b398fd4d27266b8e86c6c408ad351" kindref="member">WaylandQPainterBackend</ref><sp/>*m_backend;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_damage_journal" kindref="compound">DamageJournal</ref><sp/>m_damageJournal;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;QPainterSwapchain&gt;<sp/>m_swapchain;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;QPainterSwapchainSlot&gt;<sp/>m_back;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;CpuRenderTimeQuery&gt;<sp/>m_renderTime;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1a7b6b398fd4d27266b8e86c6c408ad351" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_primary_layer_1a7b6b398fd4d27266b8e86c6c408ad351" kindref="member">WaylandQPainterBackend</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer_1ab025308b13a1bb51ccd7d5b4626c55a5" kindref="member">WaylandQPainterCursorLayer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a9ee261bca4012bac914df29d5ebf4117" kindref="member">OutputLayer</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer_1ab025308b13a1bb51ccd7d5b4626c55a5" kindref="member">WaylandQPainterCursorLayer</ref>(<ref refid="class_k_win_1_1_wayland_1_1_wayland_output" kindref="compound">WaylandOutput</ref><sp/>*output,<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend" kindref="compound">WaylandQPainterBackend</ref><sp/>*backend);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer_1a4b5e3ae887f80a0959767a59f91bbe3e" kindref="member">~WaylandQPainterCursorLayer</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;OutputLayerBeginFrameInfo&gt;<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer_1af40a33c0ac973d90b68d699fdd10f77b" kindref="member">doBeginFrame</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer_1a479ffc8dab2b545d4c00324a820f5b77" kindref="member">doEndFrame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;renderedRegion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;damagedRegion,<sp/><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref><sp/>*frame)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer_1a5ac103e6eacebfd85c121d07ee76e27d" kindref="member">scanoutDevice</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_cursor_layer_1a057f3ca5070aaa1e62e653f0f0f08251" kindref="member">supportedDrmFormats</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend" kindref="compound">WaylandQPainterBackend</ref><sp/>*m_backend;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;QPainterSwapchain&gt;<sp/>m_swapchain;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;QPainterSwapchainSlot&gt;<sp/>m_back;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;CpuRenderTimeQuery&gt;<sp/>m_renderTime;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend_1a25edad794a7518bc2695a30e07093a4e" kindref="member">WaylandQPainterBackend</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_q_painter_backend_1aea8d4b3476c2a0d7f05bfc31173e5dd5" kindref="member">QPainterBackend</ref></highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend_1a25edad794a7518bc2695a30e07093a4e" kindref="member">WaylandQPainterBackend</ref>(<ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref><sp/>*b);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend_1a6683a87d28008befc871fea6d2807592" kindref="member">~WaylandQPainterBackend</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_graphics_buffer_allocator" kindref="compound">GraphicsBufferAllocator</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend_1aaed8734b3a2b36f5580fdfae0390212a" kindref="member">graphicsBufferAllocator</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend_1a2783fd1ddb47a5c623928ed405a6e389" kindref="member">present</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend_1a051124ccefff0581ac7dde354eaf03ac" kindref="member">primaryLayer</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend_1ad043ca14ccf880e10a4c42c58be88316" kindref="member">cursorLayer</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createOutput(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*waylandOutput);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Layers</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;WaylandQPainterPrimaryLayer&gt;<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend_1a051124ccefff0581ac7dde354eaf03ac" kindref="member">primaryLayer</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;WaylandQPainterCursorLayer&gt;<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend_1ad043ca14ccf880e10a4c42c58be88316" kindref="member">cursorLayer</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref><sp/>*m_backend;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;GraphicsBufferAllocator&gt;<sp/>m_allocator;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;Output<sp/>*,<sp/>Layers&gt;<sp/>m_outputs;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Wayland</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/backends/wayland/wayland_qpainter_backend.h"/>
  </compounddef>
</doxygen>
