<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_dma_buf_screen_cast_buffer" kind="class" language="C++" prot="public">
    <compoundname>KWin::DmaBufScreenCastBuffer</compoundname>
    <basecompoundref refid="class_k_win_1_1_screen_cast_buffer" prot="public" virt="non-virtual">KWin::ScreenCastBuffer</basecompoundref>
    <includes refid="screencastbuffer_8h" local="no">screencastbuffer.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_dma_buf_screen_cast_buffer_1ab0b29adabbc752cb7f782e56f4a11c36" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref> &gt;</type>
        <definition>std::shared_ptr&lt;GLTexture&gt; KWin::DmaBufScreenCastBuffer::texture</definition>
        <argsstring></argsstring>
        <name>texture</name>
        <qualifiedname>KWin::DmaBufScreenCastBuffer::texture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastbuffer.h" line="37" column="21" bodyfile="kwin/src/plugins/screencast/screencastbuffer.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_dma_buf_screen_cast_buffer_1a53f0e2abe90acbecd7194b1c0ef6f2c3" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref> &gt;</type>
        <definition>std::unique_ptr&lt;GLFramebuffer&gt; KWin::DmaBufScreenCastBuffer::framebuffer</definition>
        <argsstring></argsstring>
        <name>framebuffer</name>
        <qualifiedname>KWin::DmaBufScreenCastBuffer::framebuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastbuffer.h" line="38" column="21" bodyfile="kwin/src/plugins/screencast/screencastbuffer.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_dma_buf_screen_cast_buffer_1a87a86f4ed29597dfacdb8212846e0625" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_sync_timeline" kindref="compound">SyncTimeline</ref> &gt;</type>
        <definition>std::unique_ptr&lt;SyncTimeline&gt; KWin::DmaBufScreenCastBuffer::synctimeline</definition>
        <argsstring></argsstring>
        <name>synctimeline</name>
        <qualifiedname>KWin::DmaBufScreenCastBuffer::synctimeline</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastbuffer.h" line="39" column="21" bodyfile="kwin/src/plugins/screencast/screencastbuffer.h" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_dma_buf_screen_cast_buffer_1a26e76c0f5e7385ab28f9957d1c35c1e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_dma_buf_screen_cast_buffer" kindref="compound">DmaBufScreenCastBuffer</ref> *</type>
        <definition>DmaBufScreenCastBuffer * KWin::DmaBufScreenCastBuffer::create</definition>
        <argsstring>(pw_buffer *pwBuffer, const GraphicsBufferOptions &amp;options)</argsstring>
        <name>create</name>
        <qualifiedname>KWin::DmaBufScreenCastBuffer::create</qualifiedname>
        <param>
          <type>pw_buffer *</type>
          <declname>pwBuffer</declname>
        </param>
        <param>
          <type>const <ref refid="struct_k_win_1_1_graphics_buffer_options" kindref="compound">GraphicsBufferOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastbuffer.h" line="35" column="35" bodyfile="kwin/src/plugins/screencast/screencastbuffer.cpp" bodystart="35" bodyend="111"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_dma_buf_screen_cast_buffer_1a9de7cb94bcc41dc35687478bd8dc21f9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::DmaBufScreenCastBuffer::DmaBufScreenCastBuffer</definition>
        <argsstring>(GraphicsBuffer *buffer, std::shared_ptr&lt; GLTexture &gt; &amp;&amp;texture, std::unique_ptr&lt; GLFramebuffer &gt; &amp;&amp;framebuffer, std::unique_ptr&lt; SyncTimeline &gt; &amp;&amp;synctimeline)</argsstring>
        <name>DmaBufScreenCastBuffer</name>
        <qualifiedname>KWin::DmaBufScreenCastBuffer::DmaBufScreenCastBuffer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref> &gt; &amp;&amp;</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref> &gt; &amp;&amp;</type>
          <declname>framebuffer</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_sync_timeline" kindref="compound">SyncTimeline</ref> &gt; &amp;&amp;</type>
          <declname>synctimeline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastbuffer.h" line="42" column="5" bodyfile="kwin/src/plugins/screencast/screencastbuffer.cpp" bodystart="27" bodyend="33"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::DmaBufScreenCastBuffer</label>
        <link refid="class_k_win_1_1_dma_buf_screen_cast_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::ScreenCastBuffer</label>
        <link refid="class_k_win_1_1_screen_cast_buffer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::DmaBufScreenCastBuffer</label>
        <link refid="class_k_win_1_1_dma_buf_screen_cast_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::ScreenCastBuffer</label>
        <link refid="class_k_win_1_1_screen_cast_buffer"/>
      </node>
    </collaborationgraph>
    <location file="kwin/src/plugins/screencast/screencastbuffer.h" line="32" column="1" bodyfile="kwin/src/plugins/screencast/screencastbuffer.h" bodystart="33" bodyend="43"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1a26e76c0f5e7385ab28f9957d1c35c1e3" prot="public" virt="non-virtual"><scope>KWin::DmaBufScreenCastBuffer</scope><name>create</name></member>
      <member refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1a9de7cb94bcc41dc35687478bd8dc21f9" prot="private" virt="non-virtual"><scope>KWin::DmaBufScreenCastBuffer</scope><name>DmaBufScreenCastBuffer</name></member>
      <member refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1a53f0e2abe90acbecd7194b1c0ef6f2c3" prot="public" virt="non-virtual"><scope>KWin::DmaBufScreenCastBuffer</scope><name>framebuffer</name></member>
      <member refid="class_k_win_1_1_screen_cast_buffer_1a25592993a495d100db800634460aa621" prot="public" virt="non-virtual"><scope>KWin::DmaBufScreenCastBuffer</scope><name>ScreenCastBuffer</name></member>
      <member refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1a87a86f4ed29597dfacdb8212846e0625" prot="public" virt="non-virtual"><scope>KWin::DmaBufScreenCastBuffer</scope><name>synctimeline</name></member>
      <member refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1ab0b29adabbc752cb7f782e56f4a11c36" prot="public" virt="non-virtual"><scope>KWin::DmaBufScreenCastBuffer</scope><name>texture</name></member>
      <member refid="class_k_win_1_1_screen_cast_buffer_1a788e5d3d51d29f800fbeb39a2a98be33" prot="public" virt="virtual"><scope>KWin::DmaBufScreenCastBuffer</scope><name>~ScreenCastBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
