<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_output" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>KWin::Output</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <derivedcompoundref refid="class_k_win_1_1_drm_abstract_output" prot="public" virt="non-virtual">KWin::DrmAbstractOutput</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_placeholder_output" prot="public" virt="non-virtual">KWin::PlaceholderOutput</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_virtual_output" prot="public" virt="non-virtual">KWin::VirtualOutput</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_wayland_1_1_wayland_output" prot="public" virt="non-virtual">KWin::Wayland::WaylandOutput</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_x11_windowed_output" prot="public" virt="non-virtual">KWin::X11WindowedOutput</derivedcompoundref>
    <includes refid="core_2output_8h" local="no">output.h</includes>
    <innerclass refid="struct_k_win_1_1_output_1_1_information" prot="protected">KWin::Output::Information</innerclass>
    <innerclass refid="struct_k_win_1_1_output_1_1_state" prot="protected">KWin::Output::State</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1" prot="public" static="no" strong="yes">
        <type></type>
        <name>DpmsMode</name>
        <qualifiedname>KWin::Output::DpmsMode</qualifiedname>
        <enumvalue id="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1a521c36a31c2762741cf0f8890cbe05e3" prot="public">
          <name>On</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1a2dbec34a65724db94f81e8533ee18192" prot="public">
          <name>Standby</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1ab3834d6f7a63e5e750e0ca5ecf31e3b9" prot="public">
          <name>Suspend</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1ad15305d7a4e34e02489c74a5ef542f36" prot="public">
          <name>Off</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1ad6aaff92576b8b0f01acf319e60d60b6" prot="public">
          <name>AboutToTurnOff</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="146" column="5" bodyfile="kwin/src/core/output.h" bodystart="146" bodyend="152"/>
      </memberdef>
      <memberdef kind="enum" id="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1ab" prot="public" static="no" strong="yes">
        <type>uint</type>
        <name>Capability</name>
        <qualifiedname>KWin::Output::Capability</qualifiedname>
        <enumvalue id="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba1ff6c6a5c838a0a469f7399750739d77" prot="public">
          <name>Dpms</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba6eacaa4297544d969196ada558d13d48" prot="public">
          <name>Overscan</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba3a394d060d89a636b17ed1b0245e451e" prot="public">
          <name>Vrr</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba7f8846e7bd3db90c8f9ad960057cf88c" prot="public">
          <name>RgbRange</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1abaa50b1086d53490c37d64866a7e0e19bc" prot="public">
          <name>HighDynamicRange</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba49f9141759924af3a3ce27fda67567f4" prot="public">
          <name>WideColorGamut</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1abaaf4ca6e0ec410aea5f5456336daf7685" prot="public">
          <name>AutoRotation</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba322ae772348bc17fc5df99671b1eddd5" prot="public">
          <name>IccProfile</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1ababc97e17938444d61093d256d32a62342" prot="public">
          <name>Tearing</name>
          <initializer>= 1 &lt;&lt; 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1abaea7591eb886897c4205884f6b868ee37" prot="public">
          <name>BrightnessControl</name>
          <initializer>= 1 &lt;&lt; 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1abace26d0fe857fe87595eb5d0ce0ac6bfa" prot="public">
          <name>BuiltInColorProfile</name>
          <initializer>= 1 &lt;&lt; 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="155" column="5" bodyfile="kwin/src/core/output.h" bodystart="155" bodyend="167"/>
      </memberdef>
      <memberdef kind="enum" id="class_k_win_1_1_output_1ab37109b7ceca7fe10292bb19a3cbc925" prot="public" static="no" strong="yes">
        <type></type>
        <name>SubPixel</name>
        <qualifiedname>KWin::Output::SubPixel</qualifiedname>
        <enumvalue id="class_k_win_1_1_output_1ab37109b7ceca7fe10292bb19a3cbc925a88183b946cc5f0e8c96b2e66e1c74a7e" prot="public">
          <name>Unknown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1ab37109b7ceca7fe10292bb19a3cbc925a6adf97f83acf6453d4a6a4b1070f3754" prot="public">
          <name>None</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1ab37109b7ceca7fe10292bb19a3cbc925ae576a4c802fa4b25a28679878729dda4" prot="public">
          <name>Horizontal_RGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1ab37109b7ceca7fe10292bb19a3cbc925af9277f4ae32f1d740cbf0ba967b9966a" prot="public">
          <name>Horizontal_BGR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1ab37109b7ceca7fe10292bb19a3cbc925a3914ab1d8f69b4cff4a9ef3a90b6de99" prot="public">
          <name>Vertical_RGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1ab37109b7ceca7fe10292bb19a3cbc925a5351c17c334ea7677efeaeb3fa11c7ed" prot="public">
          <name>Vertical_BGR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="170" column="5" bodyfile="kwin/src/core/output.h" bodystart="170" bodyend="177"/>
      </memberdef>
      <memberdef kind="enum" id="class_k_win_1_1_output_1a091c0b392d5241b7208e2a63d0f89a83" prot="public" static="no" strong="yes">
        <type></type>
        <name>RgbRange</name>
        <qualifiedname>KWin::Output::RgbRange</qualifiedname>
        <enumvalue id="class_k_win_1_1_output_1a091c0b392d5241b7208e2a63d0f89a83a086247a9b57fde6eefee2a0c4752242d" prot="public">
          <name>Automatic</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1a091c0b392d5241b7208e2a63d0f89a83abbd47109890259c0127154db1af26c75" prot="public">
          <name>Full</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1a091c0b392d5241b7208e2a63d0f89a83a7c2131ec78876ce749c2dadd24d47065" prot="public">
          <name>Limited</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="180" column="5" bodyfile="kwin/src/core/output.h" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="enum" id="class_k_win_1_1_output_1ac33fe80a4384201645790e9706b8582b" prot="public" static="no" strong="yes">
        <type></type>
        <name>AutoRotationPolicy</name>
        <qualifiedname>KWin::Output::AutoRotationPolicy</qualifiedname>
        <enumvalue id="class_k_win_1_1_output_1ac33fe80a4384201645790e9706b8582ba6e7b34fa59e1bd229b207892956dc41c" prot="public">
          <name>Never</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1ac33fe80a4384201645790e9706b8582bae1d7532addbbe801632ce21fde0e0658" prot="public">
          <name>InTabletMode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1ac33fe80a4384201645790e9706b8582ba68eec46437c384d8dad18d5464ebc35c" prot="public">
          <name>Always</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="187" column="5" bodyfile="kwin/src/core/output.h" bodystart="187" bodyend="191"/>
      </memberdef>
      <memberdef kind="enum" id="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94" prot="public" static="no" strong="yes">
        <type></type>
        <name>ColorProfileSource</name>
        <qualifiedname>KWin::Output::ColorProfileSource</qualifiedname>
        <enumvalue id="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94a9ed33d9be17d174aeb4393a989586ed9" prot="public">
          <name>sRGB</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94ab6b8d73d401b7611fac37ab11898f598" prot="public">
          <name>ICC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94a6d75ca1747b97e77bed1d83ff47aa92c" prot="public">
          <name>EDID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="193" column="5" bodyfile="kwin/src/core/output.h" bodystart="193" bodyend="197"/>
      </memberdef>
      <memberdef kind="enum" id="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198" prot="public" static="no" strong="yes">
        <type></type>
        <name>ColorPowerTradeoff</name>
        <qualifiedname>KWin::Output::ColorPowerTradeoff</qualifiedname>
        <enumvalue id="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198a3ef0f539abd3021f89f1d61123ef155b" prot="public">
          <name>PreferEfficiency</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198a46f9df4006ba6fcb93a19323bb2d45e9" prot="public">
          <name>PreferAccuracy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="198" column="5" bodyfile="kwin/src/core/output.h" bodystart="198" bodyend="201"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_k_win_1_1_output_1acf46dad2b0990591fdebe45b4877ab16" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>QRect</type>
        <definition>QRect KWin::Output::geometry</definition>
        <argsstring></argsstring>
        <name>geometry</name>
        <qualifiedname>KWin::Output::geometry</qualifiedname>
        <read>geometry</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="138" column="5" bodyfile="kwin/src/core/output.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_output_1a101934f190d844ffc5ee29d716067ffd" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::Output::devicePixelRatio</definition>
        <argsstring></argsstring>
        <name>devicePixelRatio</name>
        <qualifiedname>KWin::Output::devicePixelRatio</qualifiedname>
        <read>scale</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="139" column="5" bodyfile="kwin/src/core/output.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_output_1ad56a9a779a9bbe7149428a1aa42abeee" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>QString</type>
        <definition>QString KWin::Output::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>KWin::Output::name</qualifiedname>
        <read>name</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="140" column="5" bodyfile="kwin/src/core/output.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_output_1a18af9cd1a90948e0375eac86b7665368" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>QString</type>
        <definition>QString KWin::Output::manufacturer</definition>
        <argsstring></argsstring>
        <name>manufacturer</name>
        <qualifiedname>KWin::Output::manufacturer</qualifiedname>
        <read>manufacturer</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="141" column="5" bodyfile="kwin/src/core/output.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_output_1a41f6de69b05a8be304049fdee6917eb9" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>QString</type>
        <definition>QString KWin::Output::model</definition>
        <argsstring></argsstring>
        <name>model</name>
        <qualifiedname>KWin::Output::model</qualifiedname>
        <read>model</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="142" column="5" bodyfile="kwin/src/core/output.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_output_1acb9b277fb8f5a5a533d5c21d93682b7a" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>QString</type>
        <definition>QString KWin::Output::serialNumber</definition>
        <argsstring></argsstring>
        <name>serialNumber</name>
        <qualifiedname>KWin::Output::serialNumber</qualifiedname>
        <read>serialNumber</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="143" column="5" bodyfile="kwin/src/core/output.h" bodystart="143" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_k_win_1_1_output_1_1_state" kindref="compound">State</ref></type>
        <definition>State KWin::Output::m_state</definition>
        <argsstring></argsstring>
        <name>m_state</name>
        <qualifiedname>KWin::Output::m_state</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="520" column="11" bodyfile="kwin/src/core/output.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_1ad75806b23fa7bd8bfacd2bb667d8d542" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_k_win_1_1_output_1_1_information" kindref="compound">Information</ref></type>
        <definition>Information KWin::Output::m_information</definition>
        <argsstring></argsstring>
        <name>m_information</name>
        <qualifiedname>KWin::Output::m_information</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="521" column="17" bodyfile="kwin/src/core/output.h" bodystart="521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_1aed972ddf4a99912856a09f1bb766ee5a" prot="protected" static="no" mutable="no">
        <type>QUuid</type>
        <definition>QUuid KWin::Output::m_uuid</definition>
        <argsstring></argsstring>
        <name>m_uuid</name>
        <qualifiedname>KWin::Output::m_uuid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="522" column="11" bodyfile="kwin/src/core/output.h" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_1a59f8b108a1b1c7ab65a1980e72c51aa9" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::Output::m_refCount</definition>
        <argsstring></argsstring>
        <name>m_refCount</name>
        <qualifiedname>KWin::Output::m_refCount</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="523" column="9" bodyfile="kwin/src/core/output.h" bodystart="523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_1ac236c1f3abd3fd913682c0ae7ca10ef0" prot="protected" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_brightness_device" kindref="compound">BrightnessDevice</ref> *</type>
        <definition>BrightnessDevice* KWin::Output::m_brightnessDevice</definition>
        <argsstring></argsstring>
        <name>m_brightnessDevice</name>
        <qualifiedname>KWin::Output::m_brightnessDevice</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="524" column="22" bodyfile="kwin/src/core/output.h" bodystart="524" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_output_1a36334461e8e8bf435629389fbf50a8a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Output::Q_ENUM</definition>
        <argsstring>(AutoRotationPolicy)</argsstring>
        <name>Q_ENUM</name>
        <qualifiedname>KWin::Output::Q_ENUM</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output_1ac33fe80a4384201645790e9706b8582b" kindref="member">AutoRotationPolicy</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="192" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a31f049ca6ddfc03620193a9c63a6b791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Output::Q_ENUM</definition>
        <argsstring>(ColorPowerTradeoff)</argsstring>
        <name>Q_ENUM</name>
        <qualifiedname>KWin::Output::Q_ENUM</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198" kindref="member">ColorPowerTradeoff</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="202" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1adb8f18f47c547aad3325e08e1f3617f4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Output::Output</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>Output</name>
        <qualifiedname>KWin::Output::Output</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="204" column="14" bodyfile="kwin/src/core/output.cpp" bodystart="344" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a28905c591239cd30358a9a1a33eed602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Output::~Output</definition>
        <argsstring>() override</argsstring>
        <name>~Output</name>
        <qualifiedname>KWin::Output::~Output</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="205" column="5" bodyfile="kwin/src/core/output.cpp" bodystart="350" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a898e164f3e5af7e88855a563410646f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::ref</definition>
        <argsstring>()</argsstring>
        <name>ref</name>
        <qualifiedname>KWin::Output::ref</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="207" column="10" bodyfile="kwin/src/core/output.cpp" bodystart="357" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a036f0372f9a864df2bbb535b02b9a4c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::unref</definition>
        <argsstring>()</argsstring>
        <name>unref</name>
        <qualifiedname>KWin::Output::unref</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="208" column="10" bodyfile="kwin/src/core/output.cpp" bodystart="362" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a6f3bab77f17faa59e5a2e0ce351cdccb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRect</type>
        <definition>QRect KWin::Output::mapFromGlobal</definition>
        <argsstring>(const QRect &amp;rect) const</argsstring>
        <name>mapFromGlobal</name>
        <qualifiedname>KWin::Output::mapFromGlobal</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maps the specified <emphasis>rect</emphasis> from the global coordinate system to the output-local coords. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="213" column="11" bodyfile="kwin/src/core/output.cpp" bodystart="422" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1ae5dccce3a13141e5b8021d9d6edbd8e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Output::mapFromGlobal</definition>
        <argsstring>(const QRectF &amp;rect) const</argsstring>
        <name>mapFromGlobal</name>
        <qualifiedname>KWin::Output::mapFromGlobal</qualifiedname>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maps the specified <emphasis>rect</emphasis> from the global coordinate system to the output-local coords. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="218" column="12" bodyfile="kwin/src/core/output.cpp" bodystart="427" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a745437a3dd637542df3a504b5c9df630" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Output::mapToGlobal</definition>
        <argsstring>(const QRectF &amp;rect) const</argsstring>
        <name>mapToGlobal</name>
        <qualifiedname>KWin::Output::mapToGlobal</qualifiedname>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maps a <emphasis>rect</emphasis> in this output coordinates to the global coordinate system. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="223" column="12" bodyfile="kwin/src/core/output.cpp" bodystart="432" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a43cc3da5f707a25eab10f5f9941bae30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE QPointF</type>
        <definition>QPointF KWin::Output::mapToGlobal</definition>
        <argsstring>(const QPointF &amp;pos) const</argsstring>
        <name>mapToGlobal</name>
        <qualifiedname>KWin::Output::mapToGlobal</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="225" column="25" bodyfile="kwin/src/core/output.cpp" bodystart="437" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a9464dfd54e8cc02de4e15592ead5191f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE QPointF</type>
        <definition>QPointF KWin::Output::mapFromGlobal</definition>
        <argsstring>(const QPointF &amp;pos) const</argsstring>
        <name>mapFromGlobal</name>
        <qualifiedname>KWin::Output::mapFromGlobal</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="226" column="25" bodyfile="kwin/src/core/output.cpp" bodystart="442" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a653c5bcf40098e30f26105f6b884dba9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Output::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>KWin::Output::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a short identifiable name of this output. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="231" column="13" bodyfile="kwin/src/core/output.cpp" bodystart="371" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a57a16eb2ce011666fc8f7fa5704923f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QUuid</type>
        <definition>QUuid KWin::Output::uuid</definition>
        <argsstring>() const</argsstring>
        <name>uuid</name>
        <qualifiedname>KWin::Output::uuid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the identifying uuid of this output. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="236" column="11" bodyfile="kwin/src/core/output.cpp" bodystart="376" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1ae3ba33a8ace198be4ba398ca4c691689" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Output::isEnabled</definition>
        <argsstring>() const</argsstring>
        <name>isEnabled</name>
        <qualifiedname>KWin::Output::isEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>true</computeroutput> if the output is enabled; otherwise returns <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="241" column="10" bodyfile="kwin/src/core/output.cpp" bodystart="545" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1ab68ba2a0470a4836649a67328946c2a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRect</type>
        <definition>QRect KWin::Output::geometry</definition>
        <argsstring>() const</argsstring>
        <name>geometry</name>
        <qualifiedname>KWin::Output::geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns geometry of this output in device independent pixels. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="246" column="11" bodyfile="kwin/src/core/output.cpp" bodystart="457" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a2b8bf63ca113d1cded5922033efbb5c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Output::geometryF</definition>
        <argsstring>() const</argsstring>
        <name>geometryF</name>
        <qualifiedname>KWin::Output::geometryF</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns geometry of this output in device independent pixels, without rounding </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="251" column="12" bodyfile="kwin/src/core/output.cpp" bodystart="462" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a0fa72e536bfcf0b8fbe60333eb5a15ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QRect</type>
        <definition>QRect KWin::Output::rect</definition>
        <argsstring>() const</argsstring>
        <name>rect</name>
        <qualifiedname>KWin::Output::rect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <computeroutput>QRect(QPoint(0, 0), <ref refid="class_k_win_1_1_output_1acf46dad2b0990591fdebe45b4877ab16" kindref="member">geometry()</ref>.size())</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="256" column="11" bodyfile="kwin/src/core/output.h" bodystart="527" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a96175d3a3c98a1c9f216f95470a2f5b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Output::rectF</definition>
        <argsstring>() const</argsstring>
        <name>rectF</name>
        <qualifiedname>KWin::Output::rectF</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <computeroutput>QRectF(QPointF(0, 0), <ref refid="class_k_win_1_1_output_1a2b8bf63ca113d1cded5922033efbb5c1" kindref="member">geometryF()</ref>.size())</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="261" column="12" bodyfile="kwin/src/core/output.h" bodystart="532" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a3e1d2698295c7897ca32593d1022449d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t KWin::Output::refreshRate</definition>
        <argsstring>() const</argsstring>
        <name>refreshRate</name>
        <qualifiedname>KWin::Output::refreshRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the approximate vertical refresh rate of this output, in mHz. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="266" column="14" bodyfile="kwin/src/core/output.cpp" bodystart="472" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1aa3c5635645acf9d5f9b969111896f538" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Output::isInternal</definition>
        <argsstring>() const</argsstring>
        <name>isInternal</name>
        <qualifiedname>KWin::Output::isInternal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether this output is connected through an internal connector, e.g. LVDS, or eDP. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="272" column="10" bodyfile="kwin/src/core/output.cpp" bodystart="411" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a26b1c3dcc612487192f4f23d11bc72b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::Output::scale</definition>
        <argsstring>() const</argsstring>
        <name>scale</name>
        <qualifiedname>KWin::Output::scale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the ratio between physical pixels and logical pixels. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="277" column="11" bodyfile="kwin/src/core/output.cpp" bodystart="452" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1af4b1a3e66823aa1e9c6b9522ee7c2f6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize KWin::Output::physicalSize</definition>
        <argsstring>() const</argsstring>
        <name>physicalSize</name>
        <qualifiedname>KWin::Output::physicalSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the non-rotated physical size of this output, in millimeters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="282" column="11" bodyfile="kwin/src/core/output.cpp" bodystart="467" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1aedc965facd9be832eb827ab0fe5a6fd9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize KWin::Output::pixelSize</definition>
        <argsstring>() const</argsstring>
        <name>pixelSize</name>
        <qualifiedname>KWin::Output::pixelSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the resolution of the output. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="285" column="11" bodyfile="kwin/src/core/output.cpp" bodystart="482" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a6429302a9498ad18c919a2c035021c61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize KWin::Output::modeSize</definition>
        <argsstring>() const</argsstring>
        <name>modeSize</name>
        <qualifiedname>KWin::Output::modeSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="286" column="11" bodyfile="kwin/src/core/output.cpp" bodystart="477" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a07af862f480a8f505dddba57cc22eca4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Output::eisaId</definition>
        <argsstring>() const</argsstring>
        <name>eisaId</name>
        <qualifiedname>KWin::Output::eisaId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="288" column="13" bodyfile="kwin/src/core/output.cpp" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1abadfe01c1c6b6db9b68a9d196438df4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Output::manufacturer</definition>
        <argsstring>() const</argsstring>
        <name>manufacturer</name>
        <qualifiedname>KWin::Output::manufacturer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the manufacturer of the screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="293" column="13" bodyfile="kwin/src/core/output.cpp" bodystart="396" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a7ee07be9ca9d43874bf4b7eb52412c00" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Output::model</definition>
        <argsstring>() const</argsstring>
        <name>model</name>
        <qualifiedname>KWin::Output::model</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the model of the screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="297" column="13" bodyfile="kwin/src/core/output.cpp" bodystart="401" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1ae67f67696d9b6edc6ae9f0d600a7c6dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Output::serialNumber</definition>
        <argsstring>() const</argsstring>
        <name>serialNumber</name>
        <qualifiedname>KWin::Output::serialNumber</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the serial number of the screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="301" column="13" bodyfile="kwin/src/core/output.cpp" bodystart="406" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a7369afc9566e97e778f7364ad699dee3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref> *</type>
        <definition>virtual RenderLoop * KWin::Output::renderLoop</definition>
        <argsstring>() const =0</argsstring>
        <name>renderLoop</name>
        <qualifiedname>KWin::Output::renderLoop</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_abstract_output_1ae92f4b12869021b84a68eb373f75922e">renderLoop</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_placeholder_output_1abc41db54836db80cbbc2e682f4e96d07">renderLoop</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_output_1a2698e07db1fef268f66a17bb861641f3">renderLoop</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_output_1af77c1cd87eb830e18cea44ca63c56b25">renderLoop</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_output_1abd65035ee0c69a59e1ef413c40897d3c">renderLoop</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref> for this output. If the platform does not support per screen rendering, all outputs will share the same render loop. FIXME: remove this and decouple <ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref> from <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="308" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a66b40f1d46629cf20190d6f23224966f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref></type>
        <definition>OutputTransform KWin::Output::transform</definition>
        <argsstring>() const</argsstring>
        <name>transform</name>
        <qualifiedname>KWin::Output::transform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="320" column="21" bodyfile="kwin/src/core/output.cpp" bodystart="381" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1aac98b9756aa3f948ad8a1ae008d6bb37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref></type>
        <definition>OutputTransform KWin::Output::manualTransform</definition>
        <argsstring>() const</argsstring>
        <name>manualTransform</name>
        <qualifiedname>KWin::Output::manualTransform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The transform that the user has configured, and which doesn&apos;t get changed by automatic rotation </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="325" column="21" bodyfile="kwin/src/core/output.cpp" bodystart="386" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a0d05f9630e7411b0485d09cfc3f252ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize KWin::Output::orientateSize</definition>
        <argsstring>(const QSize &amp;size) const</argsstring>
        <name>orientateSize</name>
        <qualifiedname>KWin::Output::orientateSize</qualifiedname>
        <param>
          <type>const QSize &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="326" column="11" bodyfile="kwin/src/core/output.cpp" bodystart="655" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1aa9c2f0eb47a4de8c08f1998056a7ca4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::Output::applyChanges</definition>
        <argsstring>(const OutputConfiguration &amp;config)</argsstring>
        <name>applyChanges</name>
        <qualifiedname>KWin::Output::applyChanges</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_virtual_output_1a3a0034a66b0db62428c188eda6f49209">applyChanges</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_output_1a21f772e516bd3a0d4f3765ceb31de2ab">applyChanges</reimplementedby>
        <param>
          <type>const <ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="328" column="18" bodyfile="kwin/src/core/output.cpp" bodystart="517" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a80f4870d37e9b765e2c56091d1844ee1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output_1ab37109b7ceca7fe10292bb19a3cbc925" kindref="member">SubPixel</ref></type>
        <definition>Output::SubPixel KWin::Output::subPixel</definition>
        <argsstring>() const</argsstring>
        <name>subPixel</name>
        <qualifiedname>KWin::Output::subPixel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="330" column="14" bodyfile="kwin/src/core/output.cpp" bodystart="512" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a20fea699e81a6dc5c6b5429d2778f7fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Output::description</definition>
        <argsstring>() const</argsstring>
        <name>description</name>
        <qualifiedname>KWin::Output::description</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="331" column="13" bodyfile="kwin/src/core/output.cpp" bodystart="550" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Capabilities</type>
        <definition>Output::Capabilities KWin::Output::capabilities</definition>
        <argsstring>() const</argsstring>
        <name>capabilities</name>
        <qualifiedname>KWin::Output::capabilities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="332" column="18" bodyfile="kwin/src/core/output.cpp" bodystart="447" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_k_win_1_1_edid" kindref="compound">Edid</ref> &amp;</type>
        <definition>const Edid &amp; KWin::Output::edid</definition>
        <argsstring>() const</argsstring>
        <name>edid</name>
        <qualifiedname>KWin::Output::edid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="333" column="16" bodyfile="kwin/src/core/output.cpp" bodystart="487" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a31492dff27d452f0b062cfcb85de835e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_mode" kindref="compound">OutputMode</ref> &gt; &gt;</type>
        <definition>QList&lt; std::shared_ptr&lt; OutputMode &gt; &gt; KWin::Output::modes</definition>
        <argsstring>() const</argsstring>
        <name>modes</name>
        <qualifiedname>KWin::Output::modes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="334" column="11" bodyfile="kwin/src/core/output.cpp" bodystart="492" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a04418b1957d886a4a01ccc73eb5c8fca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_mode" kindref="compound">OutputMode</ref> &gt;</type>
        <definition>std::shared_ptr&lt; OutputMode &gt; KWin::Output::currentMode</definition>
        <argsstring>() const</argsstring>
        <name>currentMode</name>
        <qualifiedname>KWin::Output::currentMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="335" column="21" bodyfile="kwin/src/core/output.cpp" bodystart="497" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a901d35b02d284ab6406f2fea25b84841" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize KWin::Output::desiredModeSize</definition>
        <argsstring>() const</argsstring>
        <name>desiredModeSize</name>
        <qualifiedname>KWin::Output::desiredModeSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="336" column="11" bodyfile="kwin/src/core/output.cpp" bodystart="502" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a9f775051738a68891d6e76f18a4c40d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t KWin::Output::desiredModeRefreshRate</definition>
        <argsstring>() const</argsstring>
        <name>desiredModeRefreshRate</name>
        <qualifiedname>KWin::Output::desiredModeRefreshRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="337" column="14" bodyfile="kwin/src/core/output.cpp" bodystart="507" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1af206c9aa8a7591fbcfe7e9aaeb9ce57e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1" kindref="member">DpmsMode</ref></type>
        <definition>Output::DpmsMode KWin::Output::dpmsMode</definition>
        <argsstring>() const</argsstring>
        <name>dpmsMode</name>
        <qualifiedname>KWin::Output::dpmsMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="338" column="14" bodyfile="kwin/src/core/output.cpp" bodystart="672" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a049f33519b2aa31e8e17f6f52e35151f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::Output::setDpmsMode</definition>
        <argsstring>(DpmsMode mode)</argsstring>
        <name>setDpmsMode</name>
        <qualifiedname>KWin::Output::setDpmsMode</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_output_1a6756a3067990f8f65a9f27f935247ca9">setDpmsMode</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_drm_virtual_output_1ab41b938d7325aadb79716ace10cff998">setDpmsMode</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_output_1ab71f863584545570c2791e43f92104b3">setDpmsMode</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1" kindref="member">DpmsMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="339" column="18" bodyfile="kwin/src/core/output.cpp" bodystart="668" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a33eda9c57a6d7834424c3165cc9207bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t KWin::Output::overscan</definition>
        <argsstring>() const</argsstring>
        <name>overscan</name>
        <qualifiedname>KWin::Output::overscan</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="341" column="14" bodyfile="kwin/src/core/output.cpp" bodystart="677" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a02c8558a99a92cda53b522eeb51e7e0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a30ebd92a502242a9e136f070cbf9192b" kindref="member">VrrPolicy</ref></type>
        <definition>VrrPolicy KWin::Output::vrrPolicy</definition>
        <argsstring>() const</argsstring>
        <name>vrrPolicy</name>
        <qualifiedname>KWin::Output::vrrPolicy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="343" column="15" bodyfile="kwin/src/core/output.cpp" bodystart="682" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a653742c03f688e0e0a1cb4d52355d5ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output_1a091c0b392d5241b7208e2a63d0f89a83" kindref="member">RgbRange</ref></type>
        <definition>Output::RgbRange KWin::Output::rgbRange</definition>
        <argsstring>() const</argsstring>
        <name>rgbRange</name>
        <qualifiedname>KWin::Output::rgbRange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="344" column="14" bodyfile="kwin/src/core/output.cpp" bodystart="697" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a080fb0689b3cb06ab20f94c936d01890" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Output::isPlaceholder</definition>
        <argsstring>() const</argsstring>
        <name>isPlaceholder</name>
        <qualifiedname>KWin::Output::isPlaceholder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="346" column="10" bodyfile="kwin/src/core/output.cpp" bodystart="687" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1af0a3accd0bee2ac11439e2ddad2b45e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Output::isNonDesktop</definition>
        <argsstring>() const</argsstring>
        <name>isNonDesktop</name>
        <qualifiedname>KWin::Output::isNonDesktop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="347" column="10" bodyfile="kwin/src/core/output.cpp" bodystart="692" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a3ad0802ad51c27b4c8881a374cd1a4ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref></type>
        <definition>OutputTransform KWin::Output::panelOrientation</definition>
        <argsstring>() const</argsstring>
        <name>panelOrientation</name>
        <qualifiedname>KWin::Output::panelOrientation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="348" column="21" bodyfile="kwin/src/core/output.cpp" bodystart="707" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1ab09055ab4b113efe20d9ae0f6ef5b07d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Output::wideColorGamut</definition>
        <argsstring>() const</argsstring>
        <name>wideColorGamut</name>
        <qualifiedname>KWin::Output::wideColorGamut</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="349" column="10" bodyfile="kwin/src/core/output.cpp" bodystart="712" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a5532e60228ba83969c15f1f6f42a991d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Output::highDynamicRange</definition>
        <argsstring>() const</argsstring>
        <name>highDynamicRange</name>
        <qualifiedname>KWin::Output::highDynamicRange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="350" column="10" bodyfile="kwin/src/core/output.cpp" bodystart="717" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a3618863de6836ef810b3429b89095977" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t KWin::Output::referenceLuminance</definition>
        <argsstring>() const</argsstring>
        <name>referenceLuminance</name>
        <qualifiedname>KWin::Output::referenceLuminance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="351" column="14" bodyfile="kwin/src/core/output.cpp" bodystart="722" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a78a9933dbd65ade310d22742867af5c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output_1ac33fe80a4384201645790e9706b8582b" kindref="member">AutoRotationPolicy</ref></type>
        <definition>Output::AutoRotationPolicy KWin::Output::autoRotationPolicy</definition>
        <argsstring>() const</argsstring>
        <name>autoRotationPolicy</name>
        <qualifiedname>KWin::Output::autoRotationPolicy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="352" column="24" bodyfile="kwin/src/core/output.cpp" bodystart="727" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1ac9b10f45492af10851edba805f3d9768" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_icc_profile" kindref="compound">IccProfile</ref> &gt;</type>
        <definition>std::shared_ptr&lt; IccProfile &gt; KWin::Output::iccProfile</definition>
        <argsstring>() const</argsstring>
        <name>iccProfile</name>
        <qualifiedname>KWin::Output::iccProfile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="353" column="21" bodyfile="kwin/src/core/output.cpp" bodystart="732" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a8557248992fcdeb3baf1de29113a7e08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Output::iccProfilePath</definition>
        <argsstring>() const</argsstring>
        <name>iccProfilePath</name>
        <qualifiedname>KWin::Output::iccProfilePath</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="354" column="13" bodyfile="kwin/src/core/output.cpp" bodystart="737" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a8907b0474db09efb719deb5dbcdbf73d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QByteArray</type>
        <definition>QByteArray KWin::Output::mstPath</definition>
        <argsstring>() const</argsstring>
        <name>mstPath</name>
        <qualifiedname>KWin::Output::mstPath</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the mst path of this output. Is empty if invalid </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="358" column="16" bodyfile="kwin/src/core/output.cpp" bodystart="742" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1acdc1a2c8833b9b635bf8f2c6addf181f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::Output::setChannelFactors</definition>
        <argsstring>(const QVector3D &amp;rgb)</argsstring>
        <name>setChannelFactors</name>
        <qualifiedname>KWin::Output::setChannelFactors</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_output_1a0712b60ab01273ae49cd9509b1b81675">setChannelFactors</reimplementedby>
        <param>
          <type>const QVector3D &amp;</type>
          <declname>rgb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="360" column="18" bodyfile="kwin/src/core/output.cpp" bodystart="702" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1ad0db444631ca9bd660c2c1c81bda8693" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::Output::updateCursorLayer</definition>
        <argsstring>(std::optional&lt; std::chrono::nanoseconds &gt; allowedVrrDelay)</argsstring>
        <name>updateCursorLayer</name>
        <qualifiedname>KWin::Output::updateCursorLayer</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_output_1a9d0904c953bdbeb1152547cc3b69becd">updateCursorLayer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_output_1a4d7e838e17d654e89eaec4e25a0b1ab3">updateCursorLayer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_output_1a346e612dd37292a5727ff0b107f9cabe">updateCursorLayer</reimplementedby>
        <param>
          <type>std::optional&lt; std::chrono::nanoseconds &gt;</type>
          <declname>allowedVrrDelay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="362" column="18" bodyfile="kwin/src/core/output.cpp" bodystart="747" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a904f72b9faedcf2df3319d94a3ec5840" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt; double &gt; KWin::Output::maxPeakBrightness</definition>
        <argsstring>() const</argsstring>
        <name>maxPeakBrightness</name>
        <qualifiedname>KWin::Output::maxPeakBrightness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="364" column="19" bodyfile="kwin/src/core/output.cpp" bodystart="757" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a8550a6db203735694a816476d3c2f330" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt; double &gt; KWin::Output::maxAverageBrightness</definition>
        <argsstring>() const</argsstring>
        <name>maxAverageBrightness</name>
        <qualifiedname>KWin::Output::maxAverageBrightness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="365" column="19" bodyfile="kwin/src/core/output.cpp" bodystart="762" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a41b6d37e945be6ad810c211003b31104" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double KWin::Output::minBrightness</definition>
        <argsstring>() const</argsstring>
        <name>minBrightness</name>
        <qualifiedname>KWin::Output::minBrightness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="366" column="12" bodyfile="kwin/src/core/output.cpp" bodystart="767" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1af1969aa25faeccee6ac4ebfbdeeafb3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt; double &gt; KWin::Output::maxPeakBrightnessOverride</definition>
        <argsstring>() const</argsstring>
        <name>maxPeakBrightnessOverride</name>
        <qualifiedname>KWin::Output::maxPeakBrightnessOverride</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="367" column="19" bodyfile="kwin/src/core/output.cpp" bodystart="772" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a5c5a4900d2f5508aa2bcf6cbb721d4fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt; double &gt; KWin::Output::maxAverageBrightnessOverride</definition>
        <argsstring>() const</argsstring>
        <name>maxAverageBrightnessOverride</name>
        <qualifiedname>KWin::Output::maxAverageBrightnessOverride</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="368" column="19" bodyfile="kwin/src/core/output.cpp" bodystart="777" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1abc0bf990016a50f5093d721674f40a50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt; double &gt; KWin::Output::minBrightnessOverride</definition>
        <argsstring>() const</argsstring>
        <name>minBrightnessOverride</name>
        <qualifiedname>KWin::Output::minBrightnessOverride</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="369" column="19" bodyfile="kwin/src/core/output.cpp" bodystart="782" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a1d05286dd7119bb3d2cf4d1497d08a4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double KWin::Output::sdrGamutWideness</definition>
        <argsstring>() const</argsstring>
        <name>sdrGamutWideness</name>
        <qualifiedname>KWin::Output::sdrGamutWideness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="371" column="12" bodyfile="kwin/src/core/output.cpp" bodystart="787" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a4fac789216029b4362ef31480b1e49b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94" kindref="member">ColorProfileSource</ref></type>
        <definition>Output::ColorProfileSource KWin::Output::colorProfileSource</definition>
        <argsstring>() const</argsstring>
        <name>colorProfileSource</name>
        <qualifiedname>KWin::Output::colorProfileSource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="372" column="24" bodyfile="kwin/src/core/output.cpp" bodystart="792" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1ac218b9693b36abc3381fd851633c6eee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double KWin::Output::brightnessSetting</definition>
        <argsstring>() const</argsstring>
        <name>brightnessSetting</name>
        <qualifiedname>KWin::Output::brightnessSetting</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="374" column="12" bodyfile="kwin/src/core/output.cpp" bodystart="797" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a3d6f4cb8a9ea656aa00a8137d4c5c325" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt; double &gt; KWin::Output::currentBrightness</definition>
        <argsstring>() const</argsstring>
        <name>currentBrightness</name>
        <qualifiedname>KWin::Output::currentBrightness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="375" column="19" bodyfile="kwin/src/core/output.cpp" bodystart="807" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a8295e1b73fde3b2ca60ef94bcdbc77a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double KWin::Output::artificialHdrHeadroom</definition>
        <argsstring>() const</argsstring>
        <name>artificialHdrHeadroom</name>
        <qualifiedname>KWin::Output::artificialHdrHeadroom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="376" column="12" bodyfile="kwin/src/core/output.cpp" bodystart="812" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a309f06b3854f4c634ce1ebffbae96771" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double KWin::Output::dimming</definition>
        <argsstring>() const</argsstring>
        <name>dimming</name>
        <qualifiedname>KWin::Output::dimming</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="377" column="12" bodyfile="kwin/src/core/output.cpp" bodystart="802" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a649d342c77e276a2af243919c8f24fed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref> &amp;</type>
        <definition>const ColorDescription &amp; KWin::Output::colorDescription</definition>
        <argsstring>() const</argsstring>
        <name>colorDescription</name>
        <qualifiedname>KWin::Output::colorDescription</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="379" column="28" bodyfile="kwin/src/core/output.cpp" bodystart="752" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1abb89bb68cd6857ddde801f16528b6580" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_brightness_device" kindref="compound">BrightnessDevice</ref> *</type>
        <definition>BrightnessDevice * KWin::Output::brightnessDevice</definition>
        <argsstring>() const</argsstring>
        <name>brightnessDevice</name>
        <qualifiedname>KWin::Output::brightnessDevice</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="381" column="22" bodyfile="kwin/src/core/output.cpp" bodystart="817" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a0f89221e8f4fa1f7edbdc7d873e687b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::Output::setBrightnessDevice</definition>
        <argsstring>(BrightnessDevice *device)</argsstring>
        <name>setBrightnessDevice</name>
        <qualifiedname>KWin::Output::setBrightnessDevice</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_output_1a490e56ad4d3d6ff8b8a68e9f16033b63">setBrightnessDevice</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_brightness_device" kindref="compound">BrightnessDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="382" column="18" bodyfile="kwin/src/core/output.cpp" bodystart="822" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1aab165586f8dd37ca8f53de7898b51e03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Output::allowSdrSoftwareBrightness</definition>
        <argsstring>() const</argsstring>
        <name>allowSdrSoftwareBrightness</name>
        <qualifiedname>KWin::Output::allowSdrSoftwareBrightness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="383" column="10" bodyfile="kwin/src/core/output.cpp" bodystart="827" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1ae6e9082834c517e3df5509cb82217ac9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198" kindref="member">ColorPowerTradeoff</ref></type>
        <definition>Output::ColorPowerTradeoff KWin::Output::colorPowerTradeoff</definition>
        <argsstring>() const</argsstring>
        <name>colorPowerTradeoff</name>
        <qualifiedname>KWin::Output::colorPowerTradeoff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="385" column="24" bodyfile="kwin/src/core/output.cpp" bodystart="832" bodyend="835"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_output_1a7f6c9d10afb24eb2bb5183cb5dcbe61c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::chrono::milliseconds</type>
        <definition>std::chrono::milliseconds KWin::Output::dimAnimationTime</definition>
        <argsstring>()</argsstring>
        <name>dimAnimationTime</name>
        <qualifiedname>KWin::Output::dimAnimationTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the configured time for an output to dim</para>
</simplesect>
This allows the backends to coordinate with the front-end the time they allow to decorate the dimming until the display is turned off</para>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_output_1ac3b7a29fe56366ce6b96f3e6609ca455" kindref="member">aboutToTurnOff</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="318" column="38" bodyfile="kwin/src/core/output.cpp" bodystart="416" bodyend="420"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_output_1a645e6097f705c5d42e2a40ab13489e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::geometryChanged</definition>
        <argsstring>()</argsstring>
        <name>geometryChanged</name>
        <qualifiedname>KWin::Output::geometryChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the geometry of this output has changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="391" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a0c0e1118b0f333539e1a185edfdbd9cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::enabledChanged</definition>
        <argsstring>()</argsstring>
        <name>enabledChanged</name>
        <qualifiedname>KWin::Output::enabledChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the output has been enabled or disabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="395" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a6d784164a30461f60488d1ef7a47d787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::scaleChanged</definition>
        <argsstring>()</argsstring>
        <name>scaleChanged</name>
        <qualifiedname>KWin::Output::scaleChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the device pixel ratio of the output has changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="399" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1ac3b7a29fe56366ce6b96f3e6609ca455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::aboutToTurnOff</definition>
        <argsstring>(std::chrono::milliseconds time)</argsstring>
        <name>aboutToTurnOff</name>
        <qualifiedname>KWin::Output::aboutToTurnOff</qualifiedname>
        <param>
          <type>std::chrono::milliseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notifies that the display will be dimmed in <computeroutput>time</computeroutput> ms. This allows effects to plan for it and hopefully animate it </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="405" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1ade80d75bdff0b3a8d98dc9b63f2ad179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::wakeUp</definition>
        <argsstring>()</argsstring>
        <name>wakeUp</name>
        <qualifiedname>KWin::Output::wakeUp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notifies that the output has been turned on and the wake can be decorated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="410" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a8c730a9077f5d0a5e34a5d4a167ab2ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::aboutToChange</definition>
        <argsstring>(OutputChangeSet *changeSet)</argsstring>
        <name>aboutToChange</name>
        <qualifiedname>KWin::Output::aboutToChange</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output_change_set" kindref="compound">OutputChangeSet</ref> *</type>
          <declname>changeSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notifies that the output is about to change configuration based on a user interaction.</para>
<para>Be it because it gets a transformation or moved around.</para>
<para>Only to be used for effects </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="420" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1ac335ddfb48aa5f028a80cca1c07a3aad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::changed</definition>
        <argsstring>()</argsstring>
        <name>changed</name>
        <qualifiedname>KWin::Output::changed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notifies that the output changed based on a user interaction.</para>
<para>Be it because it gets a transformation or moved around.</para>
<para>Only to be used for effects </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="429" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a534780e6e116defcd72a1b6f58a3dcc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::currentModeChanged</definition>
        <argsstring>()</argsstring>
        <name>currentModeChanged</name>
        <qualifiedname>KWin::Output::currentModeChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="431" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a79573114196ef06b923699de2bc30fe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::modesChanged</definition>
        <argsstring>()</argsstring>
        <name>modesChanged</name>
        <qualifiedname>KWin::Output::modesChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="432" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a1a63ecbdeebcded91a913d212ed61c37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::outputChange</definition>
        <argsstring>(const QRegion &amp;damagedRegion)</argsstring>
        <name>outputChange</name>
        <qualifiedname>KWin::Output::outputChange</qualifiedname>
        <param>
          <type>const QRegion &amp;</type>
          <declname>damagedRegion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="433" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1ac1e24bed156ab39494dfd360e277635d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::transformChanged</definition>
        <argsstring>()</argsstring>
        <name>transformChanged</name>
        <qualifiedname>KWin::Output::transformChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="434" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1ae52011ce61ae5b1b4bab46947044c7f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::dpmsModeChanged</definition>
        <argsstring>()</argsstring>
        <name>dpmsModeChanged</name>
        <qualifiedname>KWin::Output::dpmsModeChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="435" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a77b1653dbbbf75f5dca80ec649eb0929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::capabilitiesChanged</definition>
        <argsstring>()</argsstring>
        <name>capabilitiesChanged</name>
        <qualifiedname>KWin::Output::capabilitiesChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="436" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a4aec1909dc862d143884013214682494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::overscanChanged</definition>
        <argsstring>()</argsstring>
        <name>overscanChanged</name>
        <qualifiedname>KWin::Output::overscanChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="437" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a84bac9b4da1f8af82041ee2c375eaa3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::vrrPolicyChanged</definition>
        <argsstring>()</argsstring>
        <name>vrrPolicyChanged</name>
        <qualifiedname>KWin::Output::vrrPolicyChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="438" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a12d7fe30ce08fb961d038af680e73f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::rgbRangeChanged</definition>
        <argsstring>()</argsstring>
        <name>rgbRangeChanged</name>
        <qualifiedname>KWin::Output::rgbRangeChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="439" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1ace4d1451150371d0726e7c89f69fd8eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::wideColorGamutChanged</definition>
        <argsstring>()</argsstring>
        <name>wideColorGamutChanged</name>
        <qualifiedname>KWin::Output::wideColorGamutChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="440" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a2f77d224b57226b799c863f4d2909fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::referenceLuminanceChanged</definition>
        <argsstring>()</argsstring>
        <name>referenceLuminanceChanged</name>
        <qualifiedname>KWin::Output::referenceLuminanceChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="441" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a5c6908a304e917cf489d525a1e5c9a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::highDynamicRangeChanged</definition>
        <argsstring>()</argsstring>
        <name>highDynamicRangeChanged</name>
        <qualifiedname>KWin::Output::highDynamicRangeChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="442" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a66ecc7bfb723f3702693af17fe1d67a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::autoRotationPolicyChanged</definition>
        <argsstring>()</argsstring>
        <name>autoRotationPolicyChanged</name>
        <qualifiedname>KWin::Output::autoRotationPolicyChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="443" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1aaf09a31e0b0f9b98607789c3ce801c96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::iccProfileChanged</definition>
        <argsstring>()</argsstring>
        <name>iccProfileChanged</name>
        <qualifiedname>KWin::Output::iccProfileChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="444" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a7efde201f9ba470622b0f5e28a207eb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::iccProfilePathChanged</definition>
        <argsstring>()</argsstring>
        <name>iccProfilePathChanged</name>
        <qualifiedname>KWin::Output::iccProfilePathChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="445" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1aba799d2210ca65c7eb826267f970dcbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::brightnessMetadataChanged</definition>
        <argsstring>()</argsstring>
        <name>brightnessMetadataChanged</name>
        <qualifiedname>KWin::Output::brightnessMetadataChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="446" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1ab49ae70df864b8939d4a012e4b4d8660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::sdrGamutWidenessChanged</definition>
        <argsstring>()</argsstring>
        <name>sdrGamutWidenessChanged</name>
        <qualifiedname>KWin::Output::sdrGamutWidenessChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="447" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a28b08e9f87c706f7bef73a9d437823b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::colorDescriptionChanged</definition>
        <argsstring>()</argsstring>
        <name>colorDescriptionChanged</name>
        <qualifiedname>KWin::Output::colorDescriptionChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="448" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1afaab79a918ccf0b37d99a38f4ce59a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::colorProfileSourceChanged</definition>
        <argsstring>()</argsstring>
        <name>colorProfileSourceChanged</name>
        <qualifiedname>KWin::Output::colorProfileSourceChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="449" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1af9df7fcd498a5281398095aec310ffc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::brightnessChanged</definition>
        <argsstring>()</argsstring>
        <name>brightnessChanged</name>
        <qualifiedname>KWin::Output::brightnessChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="450" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1ad161558acc4cb7f921800e0942cd4733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::colorPowerTradeoffChanged</definition>
        <argsstring>()</argsstring>
        <name>colorPowerTradeoffChanged</name>
        <qualifiedname>KWin::Output::colorPowerTradeoffChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="451" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_output_1a3fd2d05ae6a721bf258bd36fb7cbf758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::dimmingChanged</definition>
        <argsstring>()</argsstring>
        <name>dimmingChanged</name>
        <qualifiedname>KWin::Output::dimmingChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="452" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_output_1a3eaae023a36256775eedb537eacce803" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::setInformation</definition>
        <argsstring>(const Information &amp;information)</argsstring>
        <name>setInformation</name>
        <qualifiedname>KWin::Output::setInformation</qualifiedname>
        <param>
          <type>const <ref refid="struct_k_win_1_1_output_1_1_information" kindref="compound">Information</ref> &amp;</type>
          <declname>information</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="517" column="10" bodyfile="kwin/src/core/output.cpp" bodystart="565" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Output::setState</definition>
        <argsstring>(const State &amp;state)</argsstring>
        <name>setState</name>
        <qualifiedname>KWin::Output::setState</qualifiedname>
        <param>
          <type>const <ref refid="struct_k_win_1_1_output_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/output.h" line="518" column="10" bodyfile="kwin/src/core/output.cpp" bodystart="575" bodyend="653"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Generic output representation. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>KWin::DrmAbstractOutput</label>
        <link refid="class_k_win_1_1_drm_abstract_output"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>KWin::DrmOutput</label>
        <link refid="class_k_win_1_1_drm_output"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>KWin::DrmVirtualOutput</label>
        <link refid="class_k_win_1_1_drm_virtual_output"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::Output</label>
        <link refid="class_k_win_1_1_output"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>KWin::PlaceholderOutput</label>
        <link refid="class_k_win_1_1_placeholder_output"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>KWin::VirtualOutput</label>
        <link refid="class_k_win_1_1_virtual_output"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>KWin::Wayland::WaylandOutput</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_output"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>KWin::X11WindowedOutput</label>
        <link refid="class_k_win_1_1_x11_windowed_output"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>KWin::BrightnessDevice</label>
        <link refid="class_k_win_1_1_brightness_device"/>
      </node>
      <node id="5">
        <label>KWin::ColorDescription</label>
        <link refid="class_k_win_1_1_color_description"/>
        <childnode refid="5" relation="usage">
          <edgelabel>sRGB</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>KWin::Edid</label>
        <link refid="class_k_win_1_1_edid"/>
      </node>
      <node id="1">
        <label>KWin::Output</label>
        <link refid="class_k_win_1_1_output"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_state</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_information</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_brightnessDevice</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>KWin::Output::Information</label>
        <link refid="struct_k_win_1_1_output_1_1_information"/>
        <childnode refid="7" relation="usage">
          <edgelabel>edid</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>panelOrientation</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KWin::Output::State</label>
        <link refid="struct_k_win_1_1_output_1_1_state"/>
        <childnode refid="4" relation="usage">
          <edgelabel>manualTransform</edgelabel>
          <edgelabel>transform</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>colorDescription</edgelabel>
          <edgelabel>originalColorDescription</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>KWin::OutputTransform</label>
        <link refid="class_k_win_1_1_output_transform"/>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/core/output.h" line="135" column="1" bodyfile="kwin/src/core/output.h" bodystart="136" bodyend="525"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_output_1a8c730a9077f5d0a5e34a5d4a167ab2ae" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>aboutToChange</name></member>
      <member refid="class_k_win_1_1_output_1ac3b7a29fe56366ce6b96f3e6609ca455" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>aboutToTurnOff</name></member>
      <member refid="class_k_win_1_1_output_1aab165586f8dd37ca8f53de7898b51e03" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>allowSdrSoftwareBrightness</name></member>
      <member refid="class_k_win_1_1_output_1aa9c2f0eb47a4de8c08f1998056a7ca4f" prot="public" virt="virtual"><scope>KWin::Output</scope><name>applyChanges</name></member>
      <member refid="class_k_win_1_1_output_1a8295e1b73fde3b2ca60ef94bcdbc77a4" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>artificialHdrHeadroom</name></member>
      <member refid="class_k_win_1_1_output_1ac33fe80a4384201645790e9706b8582b" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>AutoRotationPolicy</name></member>
      <member refid="class_k_win_1_1_output_1a78a9933dbd65ade310d22742867af5c1" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>autoRotationPolicy</name></member>
      <member refid="class_k_win_1_1_output_1a66ecc7bfb723f3702693af17fe1d67a3" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>autoRotationPolicyChanged</name></member>
      <member refid="class_k_win_1_1_output_1af9df7fcd498a5281398095aec310ffc4" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>brightnessChanged</name></member>
      <member refid="class_k_win_1_1_output_1abb89bb68cd6857ddde801f16528b6580" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>brightnessDevice</name></member>
      <member refid="class_k_win_1_1_output_1aba799d2210ca65c7eb826267f970dcbd" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>brightnessMetadataChanged</name></member>
      <member refid="class_k_win_1_1_output_1ac218b9693b36abc3381fd851633c6eee" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>brightnessSetting</name></member>
      <member refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>capabilities</name></member>
      <member refid="class_k_win_1_1_output_1a77b1653dbbbf75f5dca80ec649eb0929" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>capabilitiesChanged</name></member>
      <member refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1ab" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>Capability</name></member>
      <member refid="class_k_win_1_1_output_1ac335ddfb48aa5f028a80cca1c07a3aad" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>changed</name></member>
      <member refid="class_k_win_1_1_output_1a649d342c77e276a2af243919c8f24fed" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>colorDescription</name></member>
      <member refid="class_k_win_1_1_output_1a28b08e9f87c706f7bef73a9d437823b6" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>colorDescriptionChanged</name></member>
      <member refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>ColorPowerTradeoff</name></member>
      <member refid="class_k_win_1_1_output_1ae6e9082834c517e3df5509cb82217ac9" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>colorPowerTradeoff</name></member>
      <member refid="class_k_win_1_1_output_1ad161558acc4cb7f921800e0942cd4733" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>colorPowerTradeoffChanged</name></member>
      <member refid="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>ColorProfileSource</name></member>
      <member refid="class_k_win_1_1_output_1a4fac789216029b4362ef31480b1e49b8" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>colorProfileSource</name></member>
      <member refid="class_k_win_1_1_output_1afaab79a918ccf0b37d99a38f4ce59a87" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>colorProfileSourceChanged</name></member>
      <member refid="class_k_win_1_1_output_1a3d6f4cb8a9ea656aa00a8137d4c5c325" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>currentBrightness</name></member>
      <member refid="class_k_win_1_1_output_1a04418b1957d886a4a01ccc73eb5c8fca" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>currentMode</name></member>
      <member refid="class_k_win_1_1_output_1a534780e6e116defcd72a1b6f58a3dcc8" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>currentModeChanged</name></member>
      <member refid="class_k_win_1_1_output_1a20fea699e81a6dc5c6b5429d2778f7fd" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>description</name></member>
      <member refid="class_k_win_1_1_output_1a9f775051738a68891d6e76f18a4c40d3" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>desiredModeRefreshRate</name></member>
      <member refid="class_k_win_1_1_output_1a901d35b02d284ab6406f2fea25b84841" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>desiredModeSize</name></member>
      <member refid="class_k_win_1_1_output_1a101934f190d844ffc5ee29d716067ffd" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>devicePixelRatio</name></member>
      <member refid="class_k_win_1_1_output_1a7f6c9d10afb24eb2bb5183cb5dcbe61c" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>dimAnimationTime</name></member>
      <member refid="class_k_win_1_1_output_1a309f06b3854f4c634ce1ebffbae96771" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>dimming</name></member>
      <member refid="class_k_win_1_1_output_1a3fd2d05ae6a721bf258bd36fb7cbf758" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>dimmingChanged</name></member>
      <member refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>DpmsMode</name></member>
      <member refid="class_k_win_1_1_output_1af206c9aa8a7591fbcfe7e9aaeb9ce57e" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>dpmsMode</name></member>
      <member refid="class_k_win_1_1_output_1ae52011ce61ae5b1b4bab46947044c7f0" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>dpmsModeChanged</name></member>
      <member refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>edid</name></member>
      <member refid="class_k_win_1_1_output_1a07af862f480a8f505dddba57cc22eca4" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>eisaId</name></member>
      <member refid="class_k_win_1_1_output_1a0c0e1118b0f333539e1a185edfdbd9cf" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>enabledChanged</name></member>
      <member refid="class_k_win_1_1_output_1acf46dad2b0990591fdebe45b4877ab16" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>geometry</name></member>
      <member refid="class_k_win_1_1_output_1ab68ba2a0470a4836649a67328946c2a4" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>geometry</name></member>
      <member refid="class_k_win_1_1_output_1a645e6097f705c5d42e2a40ab13489e04" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>geometryChanged</name></member>
      <member refid="class_k_win_1_1_output_1a2b8bf63ca113d1cded5922033efbb5c1" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>geometryF</name></member>
      <member refid="class_k_win_1_1_output_1a5532e60228ba83969c15f1f6f42a991d" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>highDynamicRange</name></member>
      <member refid="class_k_win_1_1_output_1a5c6908a304e917cf489d525a1e5c9a64" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>highDynamicRangeChanged</name></member>
      <member refid="class_k_win_1_1_output_1ac9b10f45492af10851edba805f3d9768" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>iccProfile</name></member>
      <member refid="class_k_win_1_1_output_1aaf09a31e0b0f9b98607789c3ce801c96" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>iccProfileChanged</name></member>
      <member refid="class_k_win_1_1_output_1a8557248992fcdeb3baf1de29113a7e08" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>iccProfilePath</name></member>
      <member refid="class_k_win_1_1_output_1a7efde201f9ba470622b0f5e28a207eb1" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>iccProfilePathChanged</name></member>
      <member refid="class_k_win_1_1_output_1ae3ba33a8ace198be4ba398ca4c691689" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>isEnabled</name></member>
      <member refid="class_k_win_1_1_output_1aa3c5635645acf9d5f9b969111896f538" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>isInternal</name></member>
      <member refid="class_k_win_1_1_output_1af0a3accd0bee2ac11439e2ddad2b45e6" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>isNonDesktop</name></member>
      <member refid="class_k_win_1_1_output_1a080fb0689b3cb06ab20f94c936d01890" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>isPlaceholder</name></member>
      <member refid="class_k_win_1_1_output_1ac236c1f3abd3fd913682c0ae7ca10ef0" prot="protected" virt="non-virtual"><scope>KWin::Output</scope><name>m_brightnessDevice</name></member>
      <member refid="class_k_win_1_1_output_1ad75806b23fa7bd8bfacd2bb667d8d542" prot="protected" virt="non-virtual"><scope>KWin::Output</scope><name>m_information</name></member>
      <member refid="class_k_win_1_1_output_1a59f8b108a1b1c7ab65a1980e72c51aa9" prot="protected" virt="non-virtual"><scope>KWin::Output</scope><name>m_refCount</name></member>
      <member refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" prot="protected" virt="non-virtual"><scope>KWin::Output</scope><name>m_state</name></member>
      <member refid="class_k_win_1_1_output_1aed972ddf4a99912856a09f1bb766ee5a" prot="protected" virt="non-virtual"><scope>KWin::Output</scope><name>m_uuid</name></member>
      <member refid="class_k_win_1_1_output_1aac98b9756aa3f948ad8a1ae008d6bb37" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>manualTransform</name></member>
      <member refid="class_k_win_1_1_output_1a18af9cd1a90948e0375eac86b7665368" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>manufacturer</name></member>
      <member refid="class_k_win_1_1_output_1abadfe01c1c6b6db9b68a9d196438df4d" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>manufacturer</name></member>
      <member refid="class_k_win_1_1_output_1a6f3bab77f17faa59e5a2e0ce351cdccb" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_output_1ae5dccce3a13141e5b8021d9d6edbd8e2" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_output_1a9464dfd54e8cc02de4e15592ead5191f" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_output_1a745437a3dd637542df3a504b5c9df630" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>mapToGlobal</name></member>
      <member refid="class_k_win_1_1_output_1a43cc3da5f707a25eab10f5f9941bae30" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>mapToGlobal</name></member>
      <member refid="class_k_win_1_1_output_1a8550a6db203735694a816476d3c2f330" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>maxAverageBrightness</name></member>
      <member refid="class_k_win_1_1_output_1a5c5a4900d2f5508aa2bcf6cbb721d4fe" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>maxAverageBrightnessOverride</name></member>
      <member refid="class_k_win_1_1_output_1a904f72b9faedcf2df3319d94a3ec5840" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>maxPeakBrightness</name></member>
      <member refid="class_k_win_1_1_output_1af1969aa25faeccee6ac4ebfbdeeafb3a" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>maxPeakBrightnessOverride</name></member>
      <member refid="class_k_win_1_1_output_1a41b6d37e945be6ad810c211003b31104" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>minBrightness</name></member>
      <member refid="class_k_win_1_1_output_1abc0bf990016a50f5093d721674f40a50" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>minBrightnessOverride</name></member>
      <member refid="class_k_win_1_1_output_1a41f6de69b05a8be304049fdee6917eb9" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>model</name></member>
      <member refid="class_k_win_1_1_output_1a7ee07be9ca9d43874bf4b7eb52412c00" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>model</name></member>
      <member refid="class_k_win_1_1_output_1a31492dff27d452f0b062cfcb85de835e" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>modes</name></member>
      <member refid="class_k_win_1_1_output_1a79573114196ef06b923699de2bc30fe0" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>modesChanged</name></member>
      <member refid="class_k_win_1_1_output_1a6429302a9498ad18c919a2c035021c61" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>modeSize</name></member>
      <member refid="class_k_win_1_1_output_1a8907b0474db09efb719deb5dbcdbf73d" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>mstPath</name></member>
      <member refid="class_k_win_1_1_output_1ad56a9a779a9bbe7149428a1aa42abeee" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>name</name></member>
      <member refid="class_k_win_1_1_output_1a653c5bcf40098e30f26105f6b884dba9" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>name</name></member>
      <member refid="class_k_win_1_1_output_1a0d05f9630e7411b0485d09cfc3f252ec" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>orientateSize</name></member>
      <member refid="class_k_win_1_1_output_1adb8f18f47c547aad3325e08e1f3617f4" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>Output</name></member>
      <member refid="class_k_win_1_1_output_1a1a63ecbdeebcded91a913d212ed61c37" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>outputChange</name></member>
      <member refid="class_k_win_1_1_output_1a33eda9c57a6d7834424c3165cc9207bd" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>overscan</name></member>
      <member refid="class_k_win_1_1_output_1a4aec1909dc862d143884013214682494" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>overscanChanged</name></member>
      <member refid="class_k_win_1_1_output_1a3ad0802ad51c27b4c8881a374cd1a4ea" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>panelOrientation</name></member>
      <member refid="class_k_win_1_1_output_1af4b1a3e66823aa1e9c6b9522ee7c2f6f" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>physicalSize</name></member>
      <member refid="class_k_win_1_1_output_1aedc965facd9be832eb827ab0fe5a6fd9" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>pixelSize</name></member>
      <member refid="class_k_win_1_1_output_1a36334461e8e8bf435629389fbf50a8a3" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>Q_ENUM</name></member>
      <member refid="class_k_win_1_1_output_1a31f049ca6ddfc03620193a9c63a6b791" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>Q_ENUM</name></member>
      <member refid="class_k_win_1_1_output_1a0fa72e536bfcf0b8fbe60333eb5a15ad" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>rect</name></member>
      <member refid="class_k_win_1_1_output_1a96175d3a3c98a1c9f216f95470a2f5b2" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>rectF</name></member>
      <member refid="class_k_win_1_1_output_1a898e164f3e5af7e88855a563410646f3" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>ref</name></member>
      <member refid="class_k_win_1_1_output_1a3618863de6836ef810b3429b89095977" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>referenceLuminance</name></member>
      <member refid="class_k_win_1_1_output_1a2f77d224b57226b799c863f4d2909fc5" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>referenceLuminanceChanged</name></member>
      <member refid="class_k_win_1_1_output_1a3e1d2698295c7897ca32593d1022449d" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>refreshRate</name></member>
      <member refid="class_k_win_1_1_output_1a7369afc9566e97e778f7364ad699dee3" prot="public" virt="pure-virtual"><scope>KWin::Output</scope><name>renderLoop</name></member>
      <member refid="class_k_win_1_1_output_1a091c0b392d5241b7208e2a63d0f89a83" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>RgbRange</name></member>
      <member refid="class_k_win_1_1_output_1a653742c03f688e0e0a1cb4d52355d5ad" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>rgbRange</name></member>
      <member refid="class_k_win_1_1_output_1a12d7fe30ce08fb961d038af680e73f7e" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>rgbRangeChanged</name></member>
      <member refid="class_k_win_1_1_output_1a26b1c3dcc612487192f4f23d11bc72b0" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>scale</name></member>
      <member refid="class_k_win_1_1_output_1a6d784164a30461f60488d1ef7a47d787" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>scaleChanged</name></member>
      <member refid="class_k_win_1_1_output_1a1d05286dd7119bb3d2cf4d1497d08a4e" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>sdrGamutWideness</name></member>
      <member refid="class_k_win_1_1_output_1ab49ae70df864b8939d4a012e4b4d8660" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>sdrGamutWidenessChanged</name></member>
      <member refid="class_k_win_1_1_output_1acb9b277fb8f5a5a533d5c21d93682b7a" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>serialNumber</name></member>
      <member refid="class_k_win_1_1_output_1ae67f67696d9b6edc6ae9f0d600a7c6dd" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>serialNumber</name></member>
      <member refid="class_k_win_1_1_output_1a0f89221e8f4fa1f7edbdc7d873e687b7" prot="public" virt="virtual"><scope>KWin::Output</scope><name>setBrightnessDevice</name></member>
      <member refid="class_k_win_1_1_output_1acdc1a2c8833b9b635bf8f2c6addf181f" prot="public" virt="virtual"><scope>KWin::Output</scope><name>setChannelFactors</name></member>
      <member refid="class_k_win_1_1_output_1a049f33519b2aa31e8e17f6f52e35151f" prot="public" virt="virtual"><scope>KWin::Output</scope><name>setDpmsMode</name></member>
      <member refid="class_k_win_1_1_output_1a3eaae023a36256775eedb537eacce803" prot="protected" virt="non-virtual"><scope>KWin::Output</scope><name>setInformation</name></member>
      <member refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" prot="protected" virt="non-virtual"><scope>KWin::Output</scope><name>setState</name></member>
      <member refid="class_k_win_1_1_output_1ab37109b7ceca7fe10292bb19a3cbc925" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>SubPixel</name></member>
      <member refid="class_k_win_1_1_output_1a80f4870d37e9b765e2c56091d1844ee1" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>subPixel</name></member>
      <member refid="class_k_win_1_1_output_1a66b40f1d46629cf20190d6f23224966f" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>transform</name></member>
      <member refid="class_k_win_1_1_output_1ac1e24bed156ab39494dfd360e277635d" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>transformChanged</name></member>
      <member refid="class_k_win_1_1_output_1a036f0372f9a864df2bbb535b02b9a4c5" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>unref</name></member>
      <member refid="class_k_win_1_1_output_1ad0db444631ca9bd660c2c1c81bda8693" prot="public" virt="virtual"><scope>KWin::Output</scope><name>updateCursorLayer</name></member>
      <member refid="class_k_win_1_1_output_1a57a16eb2ce011666fc8f7fa5704923f8" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>uuid</name></member>
      <member refid="class_k_win_1_1_output_1a02c8558a99a92cda53b522eeb51e7e0f" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>vrrPolicy</name></member>
      <member refid="class_k_win_1_1_output_1a84bac9b4da1f8af82041ee2c375eaa3b" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>vrrPolicyChanged</name></member>
      <member refid="class_k_win_1_1_output_1ade80d75bdff0b3a8d98dc9b63f2ad179" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>wakeUp</name></member>
      <member refid="class_k_win_1_1_output_1ab09055ab4b113efe20d9ae0f6ef5b07d" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>wideColorGamut</name></member>
      <member refid="class_k_win_1_1_output_1ace4d1451150371d0726e7c89f69fd8eb" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>wideColorGamutChanged</name></member>
      <member refid="class_k_win_1_1_output_1a28905c591239cd30358a9a1a33eed602" prot="public" virt="non-virtual"><scope>KWin::Output</scope><name>~Output</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
