<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_test_drag_and_drop" kind="class" language="C++" prot="public">
    <compoundname>TestDragAndDrop</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_test_drag_and_drop_1af045041b491d541dc8511a3bd4769527" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_display" kindref="compound">KWin::Display</ref> *</type>
        <definition>KWin::Display* TestDragAndDrop::m_display</definition>
        <argsstring></argsstring>
        <name>m_display</name>
        <qualifiedname>TestDragAndDrop::m_display</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="55" column="19" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1a2d691a1af520741814d79484d1559174" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_compositor_interface" kindref="compound">KWin::CompositorInterface</ref> *</type>
        <definition>KWin::CompositorInterface* TestDragAndDrop::m_compositorInterface</definition>
        <argsstring></argsstring>
        <name>m_compositorInterface</name>
        <qualifiedname>TestDragAndDrop::m_compositorInterface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="56" column="31" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1ab240259b2e96a59b3991e971eea8ecc3" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_sub_compositor_interface" kindref="compound">KWin::SubCompositorInterface</ref> *</type>
        <definition>KWin::SubCompositorInterface* TestDragAndDrop::m_subcompositorInterface</definition>
        <argsstring></argsstring>
        <name>m_subcompositorInterface</name>
        <qualifiedname>TestDragAndDrop::m_subcompositorInterface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="57" column="34" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1ace7f1105bffe40b0b030776e2aac2f1e" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_data_device_manager_interface" kindref="compound">KWin::DataDeviceManagerInterface</ref> *</type>
        <definition>KWin::DataDeviceManagerInterface* TestDragAndDrop::m_dataDeviceManagerInterface</definition>
        <argsstring></argsstring>
        <name>m_dataDeviceManagerInterface</name>
        <qualifiedname>TestDragAndDrop::m_dataDeviceManagerInterface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="58" column="38" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1ac2ef6720a7038b7791f6401c71df0195" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_seat_interface" kindref="compound">KWin::SeatInterface</ref> *</type>
        <definition>KWin::SeatInterface* TestDragAndDrop::m_seatInterface</definition>
        <argsstring></argsstring>
        <name>m_seatInterface</name>
        <qualifiedname>TestDragAndDrop::m_seatInterface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="59" column="25" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1a58f09667fc2154939cdfe360f145a4dc" prot="private" static="no" mutable="no">
        <type>KWayland::Client::ConnectionThread *</type>
        <definition>KWayland::Client::ConnectionThread* TestDragAndDrop::m_connection</definition>
        <argsstring></argsstring>
        <name>m_connection</name>
        <qualifiedname>TestDragAndDrop::m_connection</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="60" column="40" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1ad03250b475c4c40a5983e983f2eb69df" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Compositor *</type>
        <definition>KWayland::Client::Compositor* TestDragAndDrop::m_compositor</definition>
        <argsstring></argsstring>
        <name>m_compositor</name>
        <qualifiedname>TestDragAndDrop::m_compositor</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="61" column="34" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1a435f82574f95024664bba375dc53071d" prot="private" static="no" mutable="no">
        <type>KWayland::Client::SubCompositor *</type>
        <definition>KWayland::Client::SubCompositor* TestDragAndDrop::m_subcompositor</definition>
        <argsstring></argsstring>
        <name>m_subcompositor</name>
        <qualifiedname>TestDragAndDrop::m_subcompositor</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="62" column="37" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1ab317d5bfd6345b7302abd8017f110cfd" prot="private" static="no" mutable="no">
        <type>KWayland::Client::EventQueue *</type>
        <definition>KWayland::Client::EventQueue* TestDragAndDrop::m_queue</definition>
        <argsstring></argsstring>
        <name>m_queue</name>
        <qualifiedname>TestDragAndDrop::m_queue</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="63" column="34" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1aa2ead8edf9e88753bbd9fe8ae30c0d8d" prot="private" static="no" mutable="no">
        <type>KWayland::Client::DataDevice *</type>
        <definition>KWayland::Client::DataDevice* TestDragAndDrop::m_dataDevice</definition>
        <argsstring></argsstring>
        <name>m_dataDevice</name>
        <qualifiedname>TestDragAndDrop::m_dataDevice</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="64" column="34" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1a8cf8100cd9ae09b040f2e901dbe3891c" prot="private" static="no" mutable="no">
        <type>KWayland::Client::DataSource *</type>
        <definition>KWayland::Client::DataSource* TestDragAndDrop::m_dataSource</definition>
        <argsstring></argsstring>
        <name>m_dataSource</name>
        <qualifiedname>TestDragAndDrop::m_dataSource</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="65" column="34" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1ad10549df473b233c2f3fd4d18d252337" prot="private" static="no" mutable="no">
        <type>QThread *</type>
        <definition>QThread* TestDragAndDrop::m_thread</definition>
        <argsstring></argsstring>
        <name>m_thread</name>
        <qualifiedname>TestDragAndDrop::m_thread</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="66" column="13" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1a4aa2e9e0370e8fd75230e931893bbdf9" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Registry *</type>
        <definition>KWayland::Client::Registry* TestDragAndDrop::m_registry</definition>
        <argsstring></argsstring>
        <name>m_registry</name>
        <qualifiedname>TestDragAndDrop::m_registry</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="67" column="32" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1a448e300101ca94fcdb137e19f9a86a26" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Seat *</type>
        <definition>KWayland::Client::Seat* TestDragAndDrop::m_seat</definition>
        <argsstring></argsstring>
        <name>m_seat</name>
        <qualifiedname>TestDragAndDrop::m_seat</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="68" column="28" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1ad7f038306e4467d39c66a274f59f2344" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Pointer *</type>
        <definition>KWayland::Client::Pointer* TestDragAndDrop::m_pointer</definition>
        <argsstring></argsstring>
        <name>m_pointer</name>
        <qualifiedname>TestDragAndDrop::m_pointer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="69" column="31" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1afa398cef39736a535e753b6bab3197dc" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Touch *</type>
        <definition>KWayland::Client::Touch* TestDragAndDrop::m_touch</definition>
        <argsstring></argsstring>
        <name>m_touch</name>
        <qualifiedname>TestDragAndDrop::m_touch</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="70" column="29" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1a59e94305bd58ca99c0bad90a1cd90555" prot="private" static="no" mutable="no">
        <type>KWayland::Client::DataDeviceManager *</type>
        <definition>KWayland::Client::DataDeviceManager* TestDragAndDrop::m_ddm</definition>
        <argsstring></argsstring>
        <name>m_ddm</name>
        <qualifiedname>TestDragAndDrop::m_ddm</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="71" column="41" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_drag_and_drop_1ac4da0c4155d174eb19f8bb69ac2fff07" prot="private" static="no" mutable="no">
        <type>KWayland::Client::ShmPool *</type>
        <definition>KWayland::Client::ShmPool* TestDragAndDrop::m_shm</definition>
        <argsstring></argsstring>
        <name>m_shm</name>
        <qualifiedname>TestDragAndDrop::m_shm</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="72" column="31" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_test_drag_and_drop_1a97d434383b92f382939a757f6e473664" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestDragAndDrop::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>TestDragAndDrop::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="41" column="10" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="77" bodyend="146"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_drag_and_drop_1aa9208a45f2b333e5c323da91ddb924da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestDragAndDrop::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>TestDragAndDrop::cleanup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="42" column="10" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="148" bodyend="176"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_drag_and_drop_1a002793e8ac5c45c6fcf61556fd36cb0c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestDragAndDrop::testPointerDragAndDrop</definition>
        <argsstring>()</argsstring>
        <name>testPointerDragAndDrop</name>
        <qualifiedname>TestDragAndDrop::testPointerDragAndDrop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="44" column="10" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="210" bodyend="294"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_drag_and_drop_1a0a723e76252cc7e55ea67b6e24beb916" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestDragAndDrop::testTouchDragAndDrop</definition>
        <argsstring>()</argsstring>
        <name>testTouchDragAndDrop</name>
        <qualifiedname>TestDragAndDrop::testTouchDragAndDrop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="45" column="10" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="395" bodyend="482"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_drag_and_drop_1a87452e438eaa72fc6e984d54ab15fb49" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestDragAndDrop::testTouchSubsurfacesDragAndDrop</definition>
        <argsstring>()</argsstring>
        <name>testTouchSubsurfacesDragAndDrop</name>
        <qualifiedname>TestDragAndDrop::testTouchSubsurfacesDragAndDrop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="46" column="10" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="296" bodyend="393"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_drag_and_drop_1ab3771cb09a0f222f8d4593cd332b2452" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestDragAndDrop::testDragAndDropWithCancelByDestroyDataSource</definition>
        <argsstring>()</argsstring>
        <name>testDragAndDropWithCancelByDestroyDataSource</name>
        <qualifiedname>TestDragAndDrop::testDragAndDropWithCancelByDestroyDataSource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="47" column="10" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="484" bodyend="572"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_drag_and_drop_1aa0666797acd2771abfde083601305449" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestDragAndDrop::testPointerEventsIgnored</definition>
        <argsstring>()</argsstring>
        <name>testPointerEventsIgnored</name>
        <qualifiedname>TestDragAndDrop::testPointerEventsIgnored</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="48" column="10" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="574" bodyend="653"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_test_drag_and_drop_1a666e40d926a0f49134399b43daaf9adc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KWayland::Client::Surface *</type>
        <definition>KWayland::Client::Surface * TestDragAndDrop::createSurface</definition>
        <argsstring>()</argsstring>
        <name>createSurface</name>
        <qualifiedname>TestDragAndDrop::createSurface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="51" column="31" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="178" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_test_drag_and_drop_1a83c8cbede67191f70b3fc3d0a7857d03" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KWayland::Client::SubSurface *</type>
        <definition>KWayland::Client::SubSurface * TestDragAndDrop::createSubSurface</definition>
        <argsstring>(KWayland::Client::Surface *surface, KWayland::Client::Surface *parentSurface)</argsstring>
        <name>createSubSurface</name>
        <qualifiedname>TestDragAndDrop::createSubSurface</qualifiedname>
        <param>
          <type>KWayland::Client::Surface *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>KWayland::Client::Surface *</type>
          <declname>parentSurface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="52" column="34" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="190" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_test_drag_and_drop_1a2c9015b728838f3722efbe3286599cc7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">KWin::SurfaceInterface</ref> *</type>
        <definition>KWin::SurfaceInterface * TestDragAndDrop::getServerSurface</definition>
        <argsstring>()</argsstring>
        <name>getServerSurface</name>
        <qualifiedname>TestDragAndDrop::getServerSurface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="53" column="28" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="197" bodyend="208"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestDragAndDrop</label>
        <link refid="class_test_drag_and_drop"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestDragAndDrop</label>
        <link refid="class_test_drag_and_drop"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/wayland/client/test_drag_drop.cpp" line="36" column="1" bodyfile="kwin/autotests/wayland/client/test_drag_drop.cpp" bodystart="37" bodyend="73"/>
    <listofallmembers>
      <member refid="class_test_drag_and_drop_1aa9208a45f2b333e5c323da91ddb924da" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>cleanup</name></member>
      <member refid="class_test_drag_and_drop_1a83c8cbede67191f70b3fc3d0a7857d03" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>createSubSurface</name></member>
      <member refid="class_test_drag_and_drop_1a666e40d926a0f49134399b43daaf9adc" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>createSurface</name></member>
      <member refid="class_test_drag_and_drop_1a2c9015b728838f3722efbe3286599cc7" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>getServerSurface</name></member>
      <member refid="class_test_drag_and_drop_1a97d434383b92f382939a757f6e473664" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>init</name></member>
      <member refid="class_test_drag_and_drop_1ad03250b475c4c40a5983e983f2eb69df" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_compositor</name></member>
      <member refid="class_test_drag_and_drop_1a2d691a1af520741814d79484d1559174" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_compositorInterface</name></member>
      <member refid="class_test_drag_and_drop_1a58f09667fc2154939cdfe360f145a4dc" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_connection</name></member>
      <member refid="class_test_drag_and_drop_1aa2ead8edf9e88753bbd9fe8ae30c0d8d" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_dataDevice</name></member>
      <member refid="class_test_drag_and_drop_1ace7f1105bffe40b0b030776e2aac2f1e" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_dataDeviceManagerInterface</name></member>
      <member refid="class_test_drag_and_drop_1a8cf8100cd9ae09b040f2e901dbe3891c" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_dataSource</name></member>
      <member refid="class_test_drag_and_drop_1a59e94305bd58ca99c0bad90a1cd90555" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_ddm</name></member>
      <member refid="class_test_drag_and_drop_1af045041b491d541dc8511a3bd4769527" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_display</name></member>
      <member refid="class_test_drag_and_drop_1ad7f038306e4467d39c66a274f59f2344" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_pointer</name></member>
      <member refid="class_test_drag_and_drop_1ab317d5bfd6345b7302abd8017f110cfd" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_queue</name></member>
      <member refid="class_test_drag_and_drop_1a4aa2e9e0370e8fd75230e931893bbdf9" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_registry</name></member>
      <member refid="class_test_drag_and_drop_1a448e300101ca94fcdb137e19f9a86a26" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_seat</name></member>
      <member refid="class_test_drag_and_drop_1ac2ef6720a7038b7791f6401c71df0195" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_seatInterface</name></member>
      <member refid="class_test_drag_and_drop_1ac4da0c4155d174eb19f8bb69ac2fff07" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_shm</name></member>
      <member refid="class_test_drag_and_drop_1a435f82574f95024664bba375dc53071d" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_subcompositor</name></member>
      <member refid="class_test_drag_and_drop_1ab240259b2e96a59b3991e971eea8ecc3" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_subcompositorInterface</name></member>
      <member refid="class_test_drag_and_drop_1ad10549df473b233c2f3fd4d18d252337" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_thread</name></member>
      <member refid="class_test_drag_and_drop_1afa398cef39736a535e753b6bab3197dc" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>m_touch</name></member>
      <member refid="class_test_drag_and_drop_1ab3771cb09a0f222f8d4593cd332b2452" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>testDragAndDropWithCancelByDestroyDataSource</name></member>
      <member refid="class_test_drag_and_drop_1a002793e8ac5c45c6fcf61556fd36cb0c" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>testPointerDragAndDrop</name></member>
      <member refid="class_test_drag_and_drop_1aa0666797acd2771abfde083601305449" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>testPointerEventsIgnored</name></member>
      <member refid="class_test_drag_and_drop_1a0a723e76252cc7e55ea67b6e24beb916" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>testTouchDragAndDrop</name></member>
      <member refid="class_test_drag_and_drop_1a87452e438eaa72fc6e984d54ab15fb49" prot="private" virt="non-virtual"><scope>TestDragAndDrop</scope><name>testTouchSubsurfacesDragAndDrop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
