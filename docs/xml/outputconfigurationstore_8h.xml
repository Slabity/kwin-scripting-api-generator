<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="outputconfigurationstore_8h" kind="file" language="C++">
    <compoundname>outputconfigurationstore.h</compoundname>
    <includes refid="core_2output_8h" local="yes">core/output.h</includes>
    <includes local="no">QList</includes>
    <includes local="no">QPoint</includes>
    <includes local="no">QSize</includes>
    <includes local="no">memory</includes>
    <includes local="no">optional</includes>
    <includes local="no">tuple</includes>
    <includes local="no">unordered_map</includes>
    <includedby refid="outputconfigurationstore_8cpp" local="yes">kwin/src/outputconfigurationstore.cpp</includedby>
    <includedby refid="workspace_8cpp" local="yes">kwin/src/workspace.cpp</includedby>
    <incdepgraph>
      <node id="14">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/outputconfigurationstore.h</label>
        <link refid="outputconfigurationstore_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>QByteArray</label>
      </node>
      <node id="7">
        <label>QCoreApplication</label>
      </node>
      <node id="20">
        <label>QDebug</label>
      </node>
      <node id="8">
        <label>QImage</label>
      </node>
      <node id="18">
        <label>QList</label>
      </node>
      <node id="16">
        <label>QMatrix4x4</label>
      </node>
      <node id="12">
        <label>QObject</label>
      </node>
      <node id="9">
        <label>QPoint</label>
      </node>
      <node id="21">
        <label>QRect</label>
      </node>
      <node id="19">
        <label>QSize</label>
      </node>
      <node id="22">
        <label>QUuid</label>
      </node>
      <node id="10">
        <label>QVariant</label>
      </node>
      <node id="11">
        <label>QVector2D</label>
      </node>
      <node id="6">
        <label>config-kwin.h</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
      <node id="23">
        <label>memory</label>
      </node>
      <node id="15">
        <label>optional</label>
      </node>
      <node id="24">
        <label>tuple</label>
      </node>
      <node id="25">
        <label>unordered_map</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>kwin/src/outputconfigurationstore.cpp</label>
        <link refid="outputconfigurationstore_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/src/outputconfigurationstore.h</label>
        <link refid="outputconfigurationstore_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>kwin/src/workspace.cpp</label>
        <link refid="workspace_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_k_win_1_1_output_configuration_store" prot="public">KWin::OutputConfigurationStore</innerclass>
    <innerclass refid="struct_k_win_1_1_output_configuration_store_1_1_mode_data" prot="private">KWin::OutputConfigurationStore::ModeData</innerclass>
    <innerclass refid="struct_k_win_1_1_output_configuration_store_1_1_output_state" prot="private">KWin::OutputConfigurationStore::OutputState</innerclass>
    <innerclass refid="struct_k_win_1_1_output_configuration_store_1_1_setup_state" prot="private">KWin::OutputConfigurationStore::SetupState</innerclass>
    <innerclass refid="struct_k_win_1_1_output_configuration_store_1_1_setup" prot="private">KWin::OutputConfigurationStore::Setup</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2output_8h" kindref="compound">core/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QList&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPoint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSize&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QOrientationReading;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_k_win_1_1_output_configuration_store" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KWIN_EXPORT<sp/><ref refid="class_k_win_1_1_output_configuration_store_1a59aac47cccf1f91dc68ebdf7244cb4bb" kindref="member">OutputConfigurationStore</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_store_1a59aac47cccf1f91dc68ebdf7244cb4bb" kindref="member">OutputConfigurationStore</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_store_1a59aac47cccf1f91dc68ebdf7244cb4bb" kindref="member">~OutputConfigurationStore</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_k_win_1_1_output_configuration_store_1a8481f7c9645ddde31a284378bb580d5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration_store_1a8481f7c9645ddde31a284378bb580d5d" kindref="member">ConfigType</ref><sp/>{</highlight></codeline>
<codeline lineno="35" refid="class_k_win_1_1_output_configuration_store_1a8481f7c9645ddde31a284378bb580d5da0022667e8ec30cacbd6ba784899fb9fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_store_1a8481f7c9645ddde31a284378bb580d5da0022667e8ec30cacbd6ba784899fb9fe" kindref="member">Preexisting</ref>,</highlight></codeline>
<codeline lineno="36" refid="class_k_win_1_1_output_configuration_store_1a8481f7c9645ddde31a284378bb580d5da5c5f06440fcb85cd5c8cfafe32e34b78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_configuration_store_1a8481f7c9645ddde31a284378bb580d5da5c5f06440fcb85cd5c8cfafe32e34b78" kindref="member">Generated</ref>,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;std::tuple&lt;OutputConfiguration,<sp/>QList&lt;Output<sp/>*&gt;,<sp/>ConfigType&gt;&gt;<sp/>queryConfig(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Output<sp/>*&gt;<sp/>&amp;outputs,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLidClosed,<sp/>QOrientationReading<sp/>*orientation,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTabletMode);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>storeConfig(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Output<sp/>*&gt;<sp/>&amp;allOutputs,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLidClosed,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref><sp/>&amp;config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Output<sp/>*&gt;<sp/>&amp;outputOrder);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;OutputConfiguration,<sp/>QList&lt;Output<sp/>*&gt;&gt;<sp/>generateConfig(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Output<sp/>*&gt;<sp/>&amp;outputs,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLidClosed);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isAutoRotateActive(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Output<sp/>*&gt;<sp/>&amp;outputs,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTabletMode)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyOrientationReading(<ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref><sp/>&amp;config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Output<sp/>*&gt;<sp/>&amp;outputs,<sp/>QOrientationReading<sp/>*orientation,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTabletMode);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;std::pair&lt;OutputConfiguration,<sp/>QList&lt;Output<sp/>*&gt;&gt;&gt;<sp/>generateLidClosedConfig(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Output<sp/>*&gt;<sp/>&amp;outputs);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OutputMode&gt;<sp/>chooseMode(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>chooseScale(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output,<sp/><ref refid="class_k_win_1_1_output_mode" kindref="compound">OutputMode</ref><sp/>*mode)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>load();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>save();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ModeData</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSize<sp/>size;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>refreshRate;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">OutputState</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>identification<sp/>data.<sp/>Empty<sp/>if<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>edidIdentifier;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>connectorName;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>edidHash;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>mstPath;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actual<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;ModeData&gt;<sp/>mode;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/>scale;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;OutputTransform&gt;<sp/>transform;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;OutputTransform&gt;<sp/>manualTransform;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;uint32_t&gt;<sp/>overscan;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;Output::RgbRange&gt;<sp/>rgbRange;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;VrrPolicy&gt;<sp/>vrrPolicy;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/>highDynamicRange;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;uint32_t&gt;<sp/>referenceLuminance;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/>wideColorGamut;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;Output::AutoRotationPolicy&gt;<sp/>autoRotation;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;QString&gt;<sp/>iccProfilePath;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;Output::ColorProfileSource&gt;<sp/>colorProfileSource;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/>maxPeakBrightnessOverride;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/>maxAverageBrightnessOverride;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/>minBrightnessOverride;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/>sdrGamutWideness;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/>brightness;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/>allowSdrSoftwareBrightness;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;Output::ColorPowerTradeoff&gt;<sp/>colorPowerTradeoff;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SetupState</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outputIndex;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPoint<sp/>position;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Setup</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lidClosed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;SetupState&gt;<sp/>outputs;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;OutputConfiguration,<sp/>QList&lt;Output<sp/>*&gt;&gt;<sp/>setupToConfig(Setup<sp/>*setup,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;Output<sp/>*,<sp/>size_t&gt;<sp/>&amp;outputMap)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;std::pair&lt;Setup<sp/>*,<sp/>std::unordered_map&lt;Output<sp/>*,<sp/>size_t&gt;&gt;&gt;<sp/>findSetup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Output<sp/>*&gt;<sp/>&amp;outputs,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lidClosed);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;size_t&gt;<sp/>findOutput(Output<sp/>*output,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Output<sp/>*&gt;<sp/>&amp;allOutputs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;OutputState&gt;<sp/>m_outputs;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;Setup&gt;<sp/>m_setups;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/outputconfigurationstore.h"/>
  </compounddef>
</doxygen>
