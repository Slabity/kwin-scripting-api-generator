<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_test_window_management" kind="class" language="C++" prot="public">
    <compoundname>TestWindowManagement</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_test_window_management_1a49b5f94874056c540f77ac1e6a8a3c63" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_display" kindref="compound">KWin::Display</ref> *</type>
        <definition>KWin::Display* TestWindowManagement::m_display</definition>
        <argsstring></argsstring>
        <name>m_display</name>
        <qualifiedname>TestWindowManagement::m_display</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="65" column="19" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_window_management_1ac6f304b230512677fd1b74594dd3a4fa" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_compositor_interface" kindref="compound">KWin::CompositorInterface</ref> *</type>
        <definition>KWin::CompositorInterface* TestWindowManagement::m_compositorInterface</definition>
        <argsstring></argsstring>
        <name>m_compositorInterface</name>
        <qualifiedname>TestWindowManagement::m_compositorInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="66" column="31" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_window_management_1a9937a2f2c4d579c977d1c1415d734cfb" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_plasma_window_management_interface" kindref="compound">KWin::PlasmaWindowManagementInterface</ref> *</type>
        <definition>KWin::PlasmaWindowManagementInterface* TestWindowManagement::m_windowManagementInterface</definition>
        <argsstring></argsstring>
        <name>m_windowManagementInterface</name>
        <qualifiedname>TestWindowManagement::m_windowManagementInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="67" column="43" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_window_management_1a60889fe901b59eb60d0d8f73888462d0" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_plasma_window_interface" kindref="compound">KWin::PlasmaWindowInterface</ref> *</type>
        <definition>KWin::PlasmaWindowInterface* TestWindowManagement::m_windowInterface</definition>
        <argsstring></argsstring>
        <name>m_windowInterface</name>
        <qualifiedname>TestWindowManagement::m_windowInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="68" column="33" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_window_management_1a1a3cc6543df5d4a02e2dfe255771a25e" prot="private" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_k_win_1_1_surface_interface" kindref="compound">KWin::SurfaceInterface</ref> &gt;</type>
        <definition>QPointer&lt;KWin::SurfaceInterface&gt; TestWindowManagement::m_surfaceInterface</definition>
        <argsstring></argsstring>
        <name>m_surfaceInterface</name>
        <qualifiedname>TestWindowManagement::m_surfaceInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="69" column="14" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_window_management_1a83c1bf8fe20c7b89e8a9267ff571790c" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Surface *</type>
        <definition>KWayland::Client::Surface* TestWindowManagement::m_surface</definition>
        <argsstring></argsstring>
        <name>m_surface</name>
        <qualifiedname>TestWindowManagement::m_surface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="71" column="31" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_window_management_1a9d8fbcdd33183c382b68168e266cff4e" prot="private" static="no" mutable="no">
        <type>KWayland::Client::ConnectionThread *</type>
        <definition>KWayland::Client::ConnectionThread* TestWindowManagement::m_connection</definition>
        <argsstring></argsstring>
        <name>m_connection</name>
        <qualifiedname>TestWindowManagement::m_connection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="72" column="40" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_window_management_1a65e322ec039dbc15e7f80d1cf166e5c5" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Compositor *</type>
        <definition>KWayland::Client::Compositor* TestWindowManagement::m_compositor</definition>
        <argsstring></argsstring>
        <name>m_compositor</name>
        <qualifiedname>TestWindowManagement::m_compositor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="73" column="34" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_window_management_1a92a860cec8d1ed9ce9f251b2d9689483" prot="private" static="no" mutable="no">
        <type>KWayland::Client::EventQueue *</type>
        <definition>KWayland::Client::EventQueue* TestWindowManagement::m_queue</definition>
        <argsstring></argsstring>
        <name>m_queue</name>
        <qualifiedname>TestWindowManagement::m_queue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="74" column="34" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_window_management_1ab8265aa774ef3247c008d19f68ea99a2" prot="private" static="no" mutable="no">
        <type>KWayland::Client::PlasmaWindowManagement *</type>
        <definition>KWayland::Client::PlasmaWindowManagement* TestWindowManagement::m_windowManagement</definition>
        <argsstring></argsstring>
        <name>m_windowManagement</name>
        <qualifiedname>TestWindowManagement::m_windowManagement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="75" column="46" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_window_management_1a78594d6bcc1e0a98d176fb7f1f3558ee" prot="private" static="no" mutable="no">
        <type>KWayland::Client::PlasmaWindow *</type>
        <definition>KWayland::Client::PlasmaWindow* TestWindowManagement::m_window</definition>
        <argsstring></argsstring>
        <name>m_window</name>
        <qualifiedname>TestWindowManagement::m_window</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="76" column="36" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_window_management_1af8a25d87120235728e8a043d221ad26e" prot="private" static="no" mutable="no">
        <type>QThread *</type>
        <definition>QThread* TestWindowManagement::m_thread</definition>
        <argsstring></argsstring>
        <name>m_thread</name>
        <qualifiedname>TestWindowManagement::m_thread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="77" column="13" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_window_management_1a3456b4ccf2aff1086ac19970705a83b1" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Registry *</type>
        <definition>KWayland::Client::Registry* TestWindowManagement::m_registry</definition>
        <argsstring></argsstring>
        <name>m_registry</name>
        <qualifiedname>TestWindowManagement::m_registry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="78" column="32" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_test_window_management_1a4527781d9df0614beda16ca3c7d23eed" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestWindowManagement::TestWindowManagement</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>TestWindowManagement</name>
        <qualifiedname>TestWindowManagement::TestWindowManagement</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="35" column="14" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="83" bodyend="92"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_test_window_management_1a937c3b0a263a4148aff9fcfbec5c9b3f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>TestWindowManagement::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="37" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="94" bodyend="158"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1ae10e073efba054608a4c70e7a0e878e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testWindowTitle</definition>
        <argsstring>()</argsstring>
        <name>testWindowTitle</name>
        <qualifiedname>TestWindowManagement::testWindowTitle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="39" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="160" bodyend="169"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a74d49485335ac6eee369dfadb3b122dc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testReallyLongTitle</definition>
        <argsstring>()</argsstring>
        <name>testReallyLongTitle</name>
        <qualifiedname>TestWindowManagement::testReallyLongTitle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="40" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="171" bodyend="181"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a81aab090ae9f55d7b0fc1ee7b126d433" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testMinimizedGeometry</definition>
        <argsstring>()</argsstring>
        <name>testMinimizedGeometry</name>
        <qualifiedname>TestWindowManagement::testMinimizedGeometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="41" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="183" bodyend="195"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1ac7a01028f139bbcc14fd9f433adf0171" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testUseAfterUnmap</definition>
        <argsstring>()</argsstring>
        <name>testUseAfterUnmap</name>
        <qualifiedname>TestWindowManagement::testUseAfterUnmap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="42" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="243" bodyend="254"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a6cb12e07ee34bd1f3c58c83044ababb9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testServerDelete</definition>
        <argsstring>()</argsstring>
        <name>testServerDelete</name>
        <qualifiedname>TestWindowManagement::testServerDelete</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="43" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="256" bodyend="265"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a435113e8c27f10a3dc871b87bce5cb50" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testActiveWindowOnUnmapped</definition>
        <argsstring>()</argsstring>
        <name>testActiveWindowOnUnmapped</name>
        <qualifiedname>TestWindowManagement::testActiveWindowOnUnmapped</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="44" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="267" bodyend="286"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1ace828555916687ffffeba3bf37a1be80" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testDeleteActiveWindow</definition>
        <argsstring>()</argsstring>
        <name>testDeleteActiveWindow</name>
        <qualifiedname>TestWindowManagement::testDeleteActiveWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="45" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="288" bodyend="306"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a2ee04a8deff20b54bac6bce0e7fa1e69" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testCreateAfterUnmap</definition>
        <argsstring>()</argsstring>
        <name>testCreateAfterUnmap</name>
        <qualifiedname>TestWindowManagement::testCreateAfterUnmap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="46" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="308" bodyend="331"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a78c1e5b6d11422abe1663e7c054111e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testRequests_data</definition>
        <argsstring>()</argsstring>
        <name>testRequests_data</name>
        <qualifiedname>TestWindowManagement::testRequests_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="47" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="333" bodyend="342"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a5f659af306710be3ef0f7851d16a76be" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testRequests</definition>
        <argsstring>()</argsstring>
        <name>testRequests</name>
        <qualifiedname>TestWindowManagement::testRequests</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="48" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="344" bodyend="352"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a6a6204d9d523a8def5b022b92ce82338" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testRequestsBoolean_data</definition>
        <argsstring>()</argsstring>
        <name>testRequestsBoolean_data</name>
        <qualifiedname>TestWindowManagement::testRequestsBoolean_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="49" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="354" bodyend="379"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a93a4db4425bd331eb9ae9364bfc79154" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testRequestsBoolean</definition>
        <argsstring>()</argsstring>
        <name>testRequestsBoolean</name>
        <qualifiedname>TestWindowManagement::testRequestsBoolean</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="50" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="381" bodyend="395"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a83b107dfd0c43ae655c2d9e3169d6cae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testKeepAbove</definition>
        <argsstring>()</argsstring>
        <name>testKeepAbove</name>
        <qualifiedname>TestWindowManagement::testKeepAbove</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="51" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="443" bodyend="462"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a93a125a5afbea23f0cda4c27ddd1c812" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testKeepBelow</definition>
        <argsstring>()</argsstring>
        <name>testKeepBelow</name>
        <qualifiedname>TestWindowManagement::testKeepBelow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="52" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="464" bodyend="483"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a00785b0fc0839ac5f5bdc99c1aa41650" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testShowingDesktop</definition>
        <argsstring>()</argsstring>
        <name>testShowingDesktop</name>
        <qualifiedname>TestWindowManagement::testShowingDesktop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="53" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="397" bodyend="419"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a2da3dc63db93d506629e0d8272ebd83f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testRequestShowingDesktop_data</definition>
        <argsstring>()</argsstring>
        <name>testRequestShowingDesktop_data</name>
        <qualifiedname>TestWindowManagement::testRequestShowingDesktop_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="54" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="421" bodyend="429"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a6d95f67bd39328b9270cd537f0fcd3a3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testRequestShowingDesktop</definition>
        <argsstring>()</argsstring>
        <name>testRequestShowingDesktop</name>
        <qualifiedname>TestWindowManagement::testRequestShowingDesktop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="55" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="431" bodyend="441"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a131d0bfd9651a9c7e99706837ced9cae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testParentWindow</definition>
        <argsstring>()</argsstring>
        <name>testParentWindow</name>
        <qualifiedname>TestWindowManagement::testParentWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="56" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="485" bodyend="518"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1ac84be63d3b02160293d4db22c7b7f7fa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testGeometry</definition>
        <argsstring>()</argsstring>
        <name>testGeometry</name>
        <qualifiedname>TestWindowManagement::testGeometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="57" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="520" bodyend="549"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1ae8552fa701022d9c018be3a40ac806ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testIcon</definition>
        <argsstring>()</argsstring>
        <name>testIcon</name>
        <qualifiedname>TestWindowManagement::testIcon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="58" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="551" bodyend="574"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1a9b5c5b4ae669e50291d5894fd5785cb7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testPid</definition>
        <argsstring>()</argsstring>
        <name>testPid</name>
        <qualifiedname>TestWindowManagement::testPid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="59" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="576" bodyend="588"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1ab2cbe85fe2ad90bd882b8590689e8c68" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::testApplicationMenu</definition>
        <argsstring>()</argsstring>
        <name>testApplicationMenu</name>
        <qualifiedname>TestWindowManagement::testApplicationMenu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="60" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="590" bodyend="602"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_window_management_1ab73c8e6e2e45910ec2f1c6f05b5df59a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWindowManagement::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>TestWindowManagement::cleanup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="62" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="197" bodyend="241"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestWindowManagement</label>
        <link refid="class_test_window_management"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestWindowManagement</label>
        <link refid="class_test_window_management"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" line="31" column="1" bodyfile="kwin/autotests/wayland/client/test_wayland_windowmanagement.cpp" bodystart="32" bodyend="79"/>
    <listofallmembers>
      <member refid="class_test_window_management_1ab73c8e6e2e45910ec2f1c6f05b5df59a" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>cleanup</name></member>
      <member refid="class_test_window_management_1a937c3b0a263a4148aff9fcfbec5c9b3f" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>init</name></member>
      <member refid="class_test_window_management_1a65e322ec039dbc15e7f80d1cf166e5c5" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>m_compositor</name></member>
      <member refid="class_test_window_management_1ac6f304b230512677fd1b74594dd3a4fa" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>m_compositorInterface</name></member>
      <member refid="class_test_window_management_1a9d8fbcdd33183c382b68168e266cff4e" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>m_connection</name></member>
      <member refid="class_test_window_management_1a49b5f94874056c540f77ac1e6a8a3c63" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>m_display</name></member>
      <member refid="class_test_window_management_1a92a860cec8d1ed9ce9f251b2d9689483" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>m_queue</name></member>
      <member refid="class_test_window_management_1a3456b4ccf2aff1086ac19970705a83b1" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>m_registry</name></member>
      <member refid="class_test_window_management_1a83c1bf8fe20c7b89e8a9267ff571790c" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>m_surface</name></member>
      <member refid="class_test_window_management_1a1a3cc6543df5d4a02e2dfe255771a25e" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>m_surfaceInterface</name></member>
      <member refid="class_test_window_management_1af8a25d87120235728e8a043d221ad26e" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>m_thread</name></member>
      <member refid="class_test_window_management_1a78594d6bcc1e0a98d176fb7f1f3558ee" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>m_window</name></member>
      <member refid="class_test_window_management_1a60889fe901b59eb60d0d8f73888462d0" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>m_windowInterface</name></member>
      <member refid="class_test_window_management_1ab8265aa774ef3247c008d19f68ea99a2" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>m_windowManagement</name></member>
      <member refid="class_test_window_management_1a9937a2f2c4d579c977d1c1415d734cfb" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>m_windowManagementInterface</name></member>
      <member refid="class_test_window_management_1a435113e8c27f10a3dc871b87bce5cb50" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testActiveWindowOnUnmapped</name></member>
      <member refid="class_test_window_management_1ab2cbe85fe2ad90bd882b8590689e8c68" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testApplicationMenu</name></member>
      <member refid="class_test_window_management_1a2ee04a8deff20b54bac6bce0e7fa1e69" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testCreateAfterUnmap</name></member>
      <member refid="class_test_window_management_1ace828555916687ffffeba3bf37a1be80" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testDeleteActiveWindow</name></member>
      <member refid="class_test_window_management_1ac84be63d3b02160293d4db22c7b7f7fa" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testGeometry</name></member>
      <member refid="class_test_window_management_1ae8552fa701022d9c018be3a40ac806ec" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testIcon</name></member>
      <member refid="class_test_window_management_1a83b107dfd0c43ae655c2d9e3169d6cae" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testKeepAbove</name></member>
      <member refid="class_test_window_management_1a93a125a5afbea23f0cda4c27ddd1c812" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testKeepBelow</name></member>
      <member refid="class_test_window_management_1a81aab090ae9f55d7b0fc1ee7b126d433" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testMinimizedGeometry</name></member>
      <member refid="class_test_window_management_1a131d0bfd9651a9c7e99706837ced9cae" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testParentWindow</name></member>
      <member refid="class_test_window_management_1a9b5c5b4ae669e50291d5894fd5785cb7" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testPid</name></member>
      <member refid="class_test_window_management_1a74d49485335ac6eee369dfadb3b122dc" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testReallyLongTitle</name></member>
      <member refid="class_test_window_management_1a5f659af306710be3ef0f7851d16a76be" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testRequests</name></member>
      <member refid="class_test_window_management_1a78c1e5b6d11422abe1663e7c054111e8" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testRequests_data</name></member>
      <member refid="class_test_window_management_1a93a4db4425bd331eb9ae9364bfc79154" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testRequestsBoolean</name></member>
      <member refid="class_test_window_management_1a6a6204d9d523a8def5b022b92ce82338" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testRequestsBoolean_data</name></member>
      <member refid="class_test_window_management_1a6d95f67bd39328b9270cd537f0fcd3a3" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testRequestShowingDesktop</name></member>
      <member refid="class_test_window_management_1a2da3dc63db93d506629e0d8272ebd83f" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testRequestShowingDesktop_data</name></member>
      <member refid="class_test_window_management_1a6cb12e07ee34bd1f3c58c83044ababb9" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testServerDelete</name></member>
      <member refid="class_test_window_management_1a00785b0fc0839ac5f5bdc99c1aa41650" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testShowingDesktop</name></member>
      <member refid="class_test_window_management_1ac7a01028f139bbcc14fd9f433adf0171" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testUseAfterUnmap</name></member>
      <member refid="class_test_window_management_1a4527781d9df0614beda16ca3c7d23eed" prot="public" virt="non-virtual"><scope>TestWindowManagement</scope><name>TestWindowManagement</name></member>
      <member refid="class_test_window_management_1ae10e073efba054608a4c70e7a0e878e9" prot="private" virt="non-virtual"><scope>TestWindowManagement</scope><name>testWindowTitle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
