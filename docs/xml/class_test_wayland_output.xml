<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_test_wayland_output" kind="class" language="C++" prot="public">
    <compoundname>TestWaylandOutput</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_test_wayland_output_1ae2473b6454c80a5d80538be54866c598" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_display" kindref="compound">KWin::Display</ref> *</type>
        <definition>KWin::Display* TestWaylandOutput::m_display</definition>
        <argsstring></argsstring>
        <name>m_display</name>
        <qualifiedname>TestWaylandOutput::m_display</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="43" column="19" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_output_1a12661d935831f02f18740bd46497d519" prot="private" static="no" mutable="no">
        <type>KWayland::Client::ConnectionThread *</type>
        <definition>KWayland::Client::ConnectionThread* TestWaylandOutput::m_connection</definition>
        <argsstring></argsstring>
        <name>m_connection</name>
        <qualifiedname>TestWaylandOutput::m_connection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="44" column="40" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_output_1a2d5e9dde27a2626361dcd2424a9997cc" prot="private" static="no" mutable="no">
        <type>KWayland::Client::EventQueue *</type>
        <definition>KWayland::Client::EventQueue* TestWaylandOutput::m_queue</definition>
        <argsstring></argsstring>
        <name>m_queue</name>
        <qualifiedname>TestWaylandOutput::m_queue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="45" column="34" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_wayland_output_1ad8322f2e3e8853c6851976e0c0cf1037" prot="private" static="no" mutable="no">
        <type>QThread *</type>
        <definition>QThread* TestWaylandOutput::m_thread</definition>
        <argsstring></argsstring>
        <name>m_thread</name>
        <qualifiedname>TestWaylandOutput::m_thread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="46" column="13" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_test_wayland_output_1a1c7aac0c0e155036b592931c29b50cb5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestWaylandOutput::TestWaylandOutput</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>TestWaylandOutput</name>
        <qualifiedname>TestWaylandOutput::TestWaylandOutput</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="27" column="14" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="51" bodyend="57"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_test_wayland_output_1a98b8b3d7cd9f8312d5eccfac9044dd38" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandOutput::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>TestWaylandOutput::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="29" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="59" bodyend="83"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_output_1a55a51572a4022167414d9ef8edfd1b2e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandOutput::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>TestWaylandOutput::cleanup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="30" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="85" bodyend="102"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_output_1af8941f782b2ff75811f78abf6657f96b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandOutput::testRegistry</definition>
        <argsstring>()</argsstring>
        <name>testRegistry</name>
        <qualifiedname>TestWaylandOutput::testRegistry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="32" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="104" bodyend="154"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_output_1a521134b7dafbeaa991585fe9ed41690d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandOutput::testModeChange</definition>
        <argsstring>()</argsstring>
        <name>testModeChange</name>
        <qualifiedname>TestWaylandOutput::testModeChange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="33" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="156" bodyend="196"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_output_1ad6f5449f56ff47d6016a20195f7f57ca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandOutput::testScaleChange</definition>
        <argsstring>()</argsstring>
        <name>testScaleChange</name>
        <qualifiedname>TestWaylandOutput::testScaleChange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="34" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="198" bodyend="234"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_output_1a45285add0b294bc421d11e332122c0fc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandOutput::testSubPixel_data</definition>
        <argsstring>()</argsstring>
        <name>testSubPixel_data</name>
        <qualifiedname>TestWaylandOutput::testSubPixel_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="36" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="236" bodyend="246"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_output_1acb782709adcbc6db93f4ca00c8590202" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandOutput::testSubPixel</definition>
        <argsstring>()</argsstring>
        <name>testSubPixel</name>
        <qualifiedname>TestWaylandOutput::testSubPixel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="37" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="248" bodyend="275"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_output_1a69416c3ab8373fa93dec7cd674dfcb9f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandOutput::testTransform_data</definition>
        <argsstring>()</argsstring>
        <name>testTransform_data</name>
        <qualifiedname>TestWaylandOutput::testTransform_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="39" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="277" bodyend="289"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_wayland_output_1ade23b79093a3aed6715561ccac4c3ba9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestWaylandOutput::testTransform</definition>
        <argsstring>()</argsstring>
        <name>testTransform</name>
        <qualifiedname>TestWaylandOutput::testTransform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="40" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="291" bodyend="327"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestWaylandOutput</label>
        <link refid="class_test_wayland_output"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestWaylandOutput</label>
        <link refid="class_test_wayland_output"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/wayland/client/test_wayland_output.cpp" line="23" column="1" bodyfile="kwin/autotests/wayland/client/test_wayland_output.cpp" bodystart="24" bodyend="47"/>
    <listofallmembers>
      <member refid="class_test_wayland_output_1a55a51572a4022167414d9ef8edfd1b2e" prot="private" virt="non-virtual"><scope>TestWaylandOutput</scope><name>cleanup</name></member>
      <member refid="class_test_wayland_output_1a98b8b3d7cd9f8312d5eccfac9044dd38" prot="private" virt="non-virtual"><scope>TestWaylandOutput</scope><name>init</name></member>
      <member refid="class_test_wayland_output_1a12661d935831f02f18740bd46497d519" prot="private" virt="non-virtual"><scope>TestWaylandOutput</scope><name>m_connection</name></member>
      <member refid="class_test_wayland_output_1ae2473b6454c80a5d80538be54866c598" prot="private" virt="non-virtual"><scope>TestWaylandOutput</scope><name>m_display</name></member>
      <member refid="class_test_wayland_output_1a2d5e9dde27a2626361dcd2424a9997cc" prot="private" virt="non-virtual"><scope>TestWaylandOutput</scope><name>m_queue</name></member>
      <member refid="class_test_wayland_output_1ad8322f2e3e8853c6851976e0c0cf1037" prot="private" virt="non-virtual"><scope>TestWaylandOutput</scope><name>m_thread</name></member>
      <member refid="class_test_wayland_output_1a521134b7dafbeaa991585fe9ed41690d" prot="private" virt="non-virtual"><scope>TestWaylandOutput</scope><name>testModeChange</name></member>
      <member refid="class_test_wayland_output_1af8941f782b2ff75811f78abf6657f96b" prot="private" virt="non-virtual"><scope>TestWaylandOutput</scope><name>testRegistry</name></member>
      <member refid="class_test_wayland_output_1ad6f5449f56ff47d6016a20195f7f57ca" prot="private" virt="non-virtual"><scope>TestWaylandOutput</scope><name>testScaleChange</name></member>
      <member refid="class_test_wayland_output_1acb782709adcbc6db93f4ca00c8590202" prot="private" virt="non-virtual"><scope>TestWaylandOutput</scope><name>testSubPixel</name></member>
      <member refid="class_test_wayland_output_1a45285add0b294bc421d11e332122c0fc" prot="private" virt="non-virtual"><scope>TestWaylandOutput</scope><name>testSubPixel_data</name></member>
      <member refid="class_test_wayland_output_1ade23b79093a3aed6715561ccac4c3ba9" prot="private" virt="non-virtual"><scope>TestWaylandOutput</scope><name>testTransform</name></member>
      <member refid="class_test_wayland_output_1a69416c3ab8373fa93dec7cd674dfcb9f" prot="private" virt="non-virtual"><scope>TestWaylandOutput</scope><name>testTransform_data</name></member>
      <member refid="class_test_wayland_output_1a1c7aac0c0e155036b592931c29b50cb5" prot="public" virt="non-virtual"><scope>TestWaylandOutput</scope><name>TestWaylandOutput</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
