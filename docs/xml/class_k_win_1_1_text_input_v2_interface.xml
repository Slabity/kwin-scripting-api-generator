<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_text_input_v2_interface" kind="class" language="C++" prot="public">
    <compoundname>KWin::TextInputV2Interface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="textinput__v2_8h" local="no">textinput_v2.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_text_input_v2_interface_1adad732ca7646e799e0faa0845c558ad3" prot="public" static="no" strong="yes">
        <type>uint32_t</type>
        <name>UpdateReason</name>
        <qualifiedname>KWin::TextInputV2Interface::UpdateReason</qualifiedname>
        <enumvalue id="class_k_win_1_1_text_input_v2_interface_1adad732ca7646e799e0faa0845c558ad3a2739cce740bc50af9f1b9ddfe1379fb7" prot="public">
          <name>StateChange</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_text_input_v2_interface_1adad732ca7646e799e0faa0845c558ad3a71d749a6172ecbe606e9459d9c2e803a" prot="public">
          <name>StateFull</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_text_input_v2_interface_1adad732ca7646e799e0faa0845c558ad3a0322a86435e588dcf35c347ceb2c313c" prot="public">
          <name>StateReset</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_text_input_v2_interface_1adad732ca7646e799e0faa0845c558ad3aeb06aec00d27811e119e65554df2f9ce" prot="public">
          <name>StateEnter</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="68" column="5" bodyfile="kwin/src/wayland/textinput_v2.h" bodystart="68" bodyend="73"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_k_win_1_1_text_input_v2_interface_1ac32faa1a798f7fa0967a9c0eedb10e16" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class TextInputManagerV2InterfacePrivate</definition>
        <argsstring></argsstring>
        <name>TextInputManagerV2InterfacePrivate</name>
        <qualifiedname>KWin::TextInputV2Interface::TextInputManagerV2InterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_text_input_manager_v2_interface_private" kindref="compound">TextInputManagerV2InterfacePrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="283" column="18" bodyfile="kwin/src/wayland/textinput_v2.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_k_win_1_1_text_input_v2_interface_1a8f81b716c1934613824f671c3d19f14b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class SeatInterface</definition>
        <argsstring></argsstring>
        <name>SeatInterface</name>
        <qualifiedname>KWin::TextInputV2Interface::SeatInterface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="284" column="18" bodyfile="kwin/src/wayland/textinput_v2.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_k_win_1_1_text_input_v2_interface_1a16d024c3158e5383ab63231b9a4eff14" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class SeatInterfacePrivate</definition>
        <argsstring></argsstring>
        <name>SeatInterfacePrivate</name>
        <qualifiedname>KWin::TextInputV2Interface::SeatInterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_seat_interface_private" kindref="compound">SeatInterfacePrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="285" column="18" bodyfile="kwin/src/wayland/textinput_v2.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_k_win_1_1_text_input_v2_interface_1af702fa0efb86d0584b5d2c4e77865e87" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class TextInputV2InterfacePrivate</definition>
        <argsstring></argsstring>
        <name>TextInputV2InterfacePrivate</name>
        <qualifiedname>KWin::TextInputV2Interface::TextInputV2InterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_text_input_v2_interface_private" kindref="compound">TextInputV2InterfacePrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="286" column="18" bodyfile="kwin/src/wayland/textinput_v2.h" bodystart="286" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_text_input_v2_interface_1a4d652d3fd3826b023f4708046c9f5b1e" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_text_input_v2_interface_private" kindref="compound">TextInputV2InterfacePrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;TextInputV2InterfacePrivate&gt; KWin::TextInputV2Interface::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::TextInputV2Interface::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="289" column="21" bodyfile="kwin/src/wayland/textinput_v2.h" bodystart="289" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a4bc536e5bf0879f3e38c7107df5eb026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::TextInputV2Interface::~TextInputV2Interface</definition>
        <argsstring>() override</argsstring>
        <name>~TextInputV2Interface</name>
        <qualifiedname>KWin::TextInputV2Interface::~TextInputV2Interface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="66" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a809e4069093bceb920da115c889dcc65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::TextInputV2Interface::preferredLanguage</definition>
        <argsstring>() const</argsstring>
        <name>preferredLanguage</name>
        <qualifiedname>KWin::TextInputV2Interface::preferredLanguage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The preferred language as a RFC-3066 format language tag.</para>
<para>This can be used by the server to show a language specific virtual keyboard layout. <simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a889644e56bd963a19602cc74539168e4" kindref="member">preferredLanguageChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="81" column="13" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="426" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a457c38e5adabca56ffe6c5ab4aa9dbd9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRect</type>
        <definition>QRect KWin::TextInputV2Interface::cursorRectangle</definition>
        <argsstring>() const</argsstring>
        <name>cursorRectangle</name>
        <qualifiedname>KWin::TextInputV2Interface::cursorRectangle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1ac63989235f8046191561d1a37a2e20f3" kindref="member">cursorRectangleChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="86" column="11" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="545" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a9baaddb979fdfdeda512970abb737590" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26" kindref="member">TextInputContentPurpose</ref></type>
        <definition>TextInputContentPurpose KWin::TextInputV2Interface::contentPurpose</definition>
        <argsstring>() const</argsstring>
        <name>contentPurpose</name>
        <qualifiedname>KWin::TextInputV2Interface::contentPurpose</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1ad0a0711807bc2ff254f24d6010fb442d" kindref="member">contentTypeChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="91" column="29" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="436" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a38fd851b1849db34bb9025e9abd962cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TextInputContentHints</type>
        <definition>TextInputContentHints KWin::TextInputV2Interface::contentHints</definition>
        <argsstring>() const</argsstring>
        <name>contentHints</name>
        <qualifiedname>KWin::TextInputV2Interface::contentHints</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1ad0a0711807bc2ff254f24d6010fb442d" kindref="member">contentTypeChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="96" column="27" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="431" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a4fdaae5773e36344647189efd4dc4518" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::TextInputV2Interface::surroundingText</definition>
        <argsstring>() const</argsstring>
        <name>surroundingText</name>
        <qualifiedname>KWin::TextInputV2Interface::surroundingText</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The plain surrounding text around the input position. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1acee806f7091659f6ce2c96891920fa3c" kindref="member">surroundingTextChanged</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a3cc4c40e3938510148735ad3fe5f705a" kindref="member">surroundingTextCursorPosition</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1ad11791d10f6401ac16ce34fbe010481a" kindref="member">surroundingTextSelectionAnchor</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="104" column="13" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="441" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a3cc4c40e3938510148735ad3fe5f705a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qint32</type>
        <definition>qint32 KWin::TextInputV2Interface::surroundingTextCursorPosition</definition>
        <argsstring>() const</argsstring>
        <name>surroundingTextCursorPosition</name>
        <qualifiedname>KWin::TextInputV2Interface::surroundingTextCursorPosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The byte offset of current cursor position within the <computeroutput><ref refid="class_k_win_1_1_text_input_v2_interface_1a4fdaae5773e36344647189efd4dc4518" kindref="member">surroundingText</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a4fdaae5773e36344647189efd4dc4518" kindref="member">surroundingText</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1acee806f7091659f6ce2c96891920fa3c" kindref="member">surroundingTextChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="110" column="12" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="446" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1ad11791d10f6401ac16ce34fbe010481a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qint32</type>
        <definition>qint32 KWin::TextInputV2Interface::surroundingTextSelectionAnchor</definition>
        <argsstring>() const</argsstring>
        <name>surroundingTextSelectionAnchor</name>
        <qualifiedname>KWin::TextInputV2Interface::surroundingTextSelectionAnchor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The byte offset of the selection anchor within the <computeroutput><ref refid="class_k_win_1_1_text_input_v2_interface_1a4fdaae5773e36344647189efd4dc4518" kindref="member">surroundingText</ref></computeroutput>.</para>
<para>If there is no selected text this is the same as cursor. <simplesect kind="return"><para>The byte offset of the selection anchor </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a4fdaae5773e36344647189efd4dc4518" kindref="member">surroundingText</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1acee806f7091659f6ce2c96891920fa3c" kindref="member">surroundingTextChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="119" column="12" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="451" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a8acf37ce1cc08937eb31ffcc9550b29a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointer&lt; <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> &gt;</type>
        <definition>QPointer&lt; SurfaceInterface &gt; KWin::TextInputV2Interface::surface</definition>
        <argsstring>() const</argsstring>
        <name>surface</name>
        <qualifiedname>KWin::TextInputV2Interface::surface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The surface the <ref refid="class_k_win_1_1_text_input_v2_interface" kindref="compound">TextInputV2Interface</ref> is enabled on </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a333891a4e63b1015c06c2670494d9b9c" kindref="member">isEnabled</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a68c0704883d068db14b10ffe800632c4" kindref="member">enabledChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="126" column="14" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="532" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a33d6125a613e14ce61c2174ac1f908fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TextInputV2Interface::clientSupportsTextInput</definition>
        <argsstring>(ClientConnection *client) const</argsstring>
        <name>clientSupportsTextInput</name>
        <qualifiedname>KWin::TextInputV2Interface::clientSupportsTextInput</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether <computeroutput>client</computeroutput> supports text-input-v2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="131" column="10" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="555" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a333891a4e63b1015c06c2670494d9b9c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TextInputV2Interface::isEnabled</definition>
        <argsstring>() const</argsstring>
        <name>isEnabled</name>
        <qualifiedname>KWin::TextInputV2Interface::isEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether the <ref refid="class_k_win_1_1_text_input_v2_interface" kindref="compound">TextInputV2Interface</ref> is currently enabled for a <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a8acf37ce1cc08937eb31ffcc9550b29a" kindref="member">surface</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a68c0704883d068db14b10ffe800632c4" kindref="member">enabledChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="138" column="10" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="550" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a108f112deef29bb87f81d556090c8824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::preEdit</definition>
        <argsstring>(const QString &amp;text, const QString &amp;commitText)</argsstring>
        <name>preEdit</name>
        <qualifiedname>KWin::TextInputV2Interface::preEdit</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>commitText</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notify when a new composing <computeroutput>text</computeroutput> (pre-edit) should be set around the current cursor position. Any previously set composing text should be removed.</para>
<para>The <computeroutput>commitText</computeroutput> can be used to replace the preedit text on reset (for example on unfocus).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The new utf8-encoded pre-edit text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>commitText</parametername>
</parameternamelist>
<parameterdescription>
<para>Utf8-encoded text to replace preedit text on reset </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>commit </para>
</simplesect>
<simplesect kind="see"><para>preEditCursor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="153" column="10" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="456" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1aa2b7c59a03835088ddc4fd22d335191b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::commitString</definition>
        <argsstring>(const QString &amp;text)</argsstring>
        <name>commitString</name>
        <qualifiedname>KWin::TextInputV2Interface::commitString</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notify when <computeroutput>text</computeroutput> should be inserted into the editor widget. The text to commit could be either just a single character after a key press or the result of some composing (<computeroutput><ref refid="class_k_win_1_1_text_input_v2_interface_1a108f112deef29bb87f81d556090c8824" kindref="member">preEdit</ref></computeroutput>). It could be also an empty text when some text should be removed (see <computeroutput><ref refid="class_k_win_1_1_text_input_v2_interface_1a1f289056df3cdfcc3cb70597f97065be" kindref="member">deleteSurroundingText</ref></computeroutput>) or when the input cursor should be moved (see <computeroutput><ref refid="" kindref="compound">cursorPosition</ref></computeroutput>).</para>
<para>Any previously set composing text should be removed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The utf8-encoded text to be inserted into the editor widget </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a108f112deef29bb87f81d556090c8824" kindref="member">preEdit</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a1f289056df3cdfcc3cb70597f97065be" kindref="member">deleteSurroundingText</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="167" column="10" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="466" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a1adfcdf08ff1cd427b5e62a6b26c4976" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::setPreEditCursor</definition>
        <argsstring>(qint32 index)</argsstring>
        <name>setPreEditCursor</name>
        <qualifiedname>KWin::TextInputV2Interface::setPreEditCursor</qualifiedname>
        <param>
          <type>qint32</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the cursor position inside the composing text (as byte offset) relative to the start of the composing text. When <computeroutput>index</computeroutput> is a negative number no cursor is shown.</para>
<para>The <ref refid="class_client" kindref="compound">Client</ref> applies the <computeroutput>index</computeroutput> together with <computeroutput><ref refid="class_k_win_1_1_text_input_v2_interface_1a108f112deef29bb87f81d556090c8824" kindref="member">preEdit</ref></computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The cursor position relative to the start of the composing text </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a108f112deef29bb87f81d556090c8824" kindref="member">preEdit</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="177" column="10" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="496" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a67d35326c4957d75d2ae7729621b1b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::preEditStyling</definition>
        <argsstring>(uint32_t index, uint32_t length, uint32_t style)</argsstring>
        <name>preEditStyling</name>
        <qualifiedname>KWin::TextInputV2Interface::preEditStyling</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the style for a range of text for the composing text (as byte offset).</para>
<para>The <ref refid="class_client" kindref="compound">Client</ref> applies the <computeroutput>index</computeroutput> together with <computeroutput><ref refid="class_k_win_1_1_text_input_v2_interface_1a108f112deef29bb87f81d556090c8824" kindref="member">preEdit</ref></computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The position relative to the start of the composing text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the style to apply on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>style flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a108f112deef29bb87f81d556090c8824" kindref="member">preEdit</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="188" column="10" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="461" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a1f289056df3cdfcc3cb70597f97065be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::deleteSurroundingText</definition>
        <argsstring>(quint32 beforeLength, quint32 afterLength)</argsstring>
        <name>deleteSurroundingText</name>
        <qualifiedname>KWin::TextInputV2Interface::deleteSurroundingText</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>beforeLength</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>afterLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notify when the text around the current cursor position should be deleted.</para>
<para>The <ref refid="class_client" kindref="compound">Client</ref> processes this event together with the commit string</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>beforeLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of text before current cursor position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>afterLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of text after current cursor position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>commit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="199" column="10" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="481" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a73f3264eb84feebab0b5919dcf60800d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::setCursorPosition</definition>
        <argsstring>(qint32 index, qint32 anchor)</argsstring>
        <name>setCursorPosition</name>
        <qualifiedname>KWin::TextInputV2Interface::setCursorPosition</qualifiedname>
        <param>
          <type>qint32</type>
          <declname>index</declname>
        </param>
        <param>
          <type>qint32</type>
          <declname>anchor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notify when the cursor <computeroutput>index</computeroutput> or <computeroutput>anchor</computeroutput> position should be modified.</para>
<para>The <ref refid="class_client" kindref="compound">Client</ref> applies this together with the commit string. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="206" column="10" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="486" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a50399271617c29306e6af1c223361f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::setTextDirection</definition>
        <argsstring>(Qt::LayoutDirection direction)</argsstring>
        <name>setTextDirection</name>
        <qualifiedname>KWin::TextInputV2Interface::setTextDirection</qualifiedname>
        <param>
          <type>Qt::LayoutDirection</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the text <computeroutput>direction</computeroutput> of input text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="211" column="10" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="491" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a4838e0bc993199baf49eb4e927a58097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::keysymPressed</definition>
        <argsstring>(quint32 keysym, quint32 modifiers=0)</argsstring>
        <name>keysymPressed</name>
        <qualifiedname>KWin::TextInputV2Interface::keysymPressed</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>keysym</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>modifiers</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="213" column="10" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="471" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1ac762e54d654f943ddb1b953569c26f94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::keysymReleased</definition>
        <argsstring>(quint32 keysym, quint32 modifiers=0)</argsstring>
        <name>keysymReleased</name>
        <qualifiedname>KWin::TextInputV2Interface::keysymReleased</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>keysym</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>modifiers</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="214" column="10" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="476" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a2fb448f4c22329e831e9c999e09d7000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::setInputPanelState</definition>
        <argsstring>(bool visible, const QRect &amp;overlappedSurfaceArea)</argsstring>
        <name>setInputPanelState</name>
        <qualifiedname>KWin::TextInputV2Interface::setInputPanelState</qualifiedname>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <param>
          <type>const QRect &amp;</type>
          <declname>overlappedSurfaceArea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Informs the client about changes in the visibility of the input panel (virtual keyboard).</para>
<para>The <computeroutput>overlappedSurfaceArea</computeroutput> defines the area overlapped by the input panel (virtual keyboard) on the <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> having the text focus in surface local coordinates.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visible</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the input panel is currently visible </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>overlappedSurfaceArea</parametername>
</parameternamelist>
<parameterdescription>
<para>The overlapping area in surface local coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="225" column="10" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="501" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1ad2880a12cfe9b8d75e99c7902a819745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::setLanguage</definition>
        <argsstring>(const QString &amp;languageTag)</argsstring>
        <name>setLanguage</name>
        <qualifiedname>KWin::TextInputV2Interface::setLanguage</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>languageTag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the language of the input text. The <computeroutput>languageTag</computeroutput> is a RFC-3066 format language tag. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="230" column="10" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="512" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1aae64766d0e239eaaaa24da9ceb47459a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::setModifiersMap</definition>
        <argsstring>(const QByteArray &amp;modifiersMap)</argsstring>
        <name>setModifiersMap</name>
        <qualifiedname>KWin::TextInputV2Interface::setModifiersMap</qualifiedname>
        <param>
          <type>const QByteArray &amp;</type>
          <declname>modifiersMap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the modifiers map to use when modifiers are included in a key event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="235" column="10" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="522" bodyend="530"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_text_input_v2_interface_1a602a34853071d93b425b9a4321182d6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::requestShowInputPanel</definition>
        <argsstring>()</argsstring>
        <name>requestShowInputPanel</name>
        <qualifiedname>KWin::TextInputV2Interface::requestShowInputPanel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Requests input panels (virtual keyboard) to show. <simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1aa9b3be75b167c91df859c6c26fddccc5" kindref="member">requestHideInputPanel</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="242" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_text_input_v2_interface_1aa9b3be75b167c91df859c6c26fddccc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::requestHideInputPanel</definition>
        <argsstring>()</argsstring>
        <name>requestHideInputPanel</name>
        <qualifiedname>KWin::TextInputV2Interface::requestHideInputPanel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Requests input panels (virtual keyboard) to hide. <simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a602a34853071d93b425b9a4321182d6e" kindref="member">requestShowInputPanel</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="247" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_text_input_v2_interface_1a889644e56bd963a19602cc74539168e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::preferredLanguageChanged</definition>
        <argsstring>(const QString &amp;language)</argsstring>
        <name>preferredLanguageChanged</name>
        <qualifiedname>KWin::TextInputV2Interface::preferredLanguageChanged</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>language</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Emitted whenever the preferred <computeroutput>language</computeroutput> changes. <simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a809e4069093bceb920da115c889dcc65" kindref="member">preferredLanguage</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="252" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_text_input_v2_interface_1ac63989235f8046191561d1a37a2e20f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::cursorRectangleChanged</definition>
        <argsstring>(const QRect &amp;rect)</argsstring>
        <name>cursorRectangleChanged</name>
        <qualifiedname>KWin::TextInputV2Interface::cursorRectangleChanged</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a457c38e5adabca56ffe6c5ab4aa9dbd9" kindref="member">cursorRectangle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="256" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_text_input_v2_interface_1ad0a0711807bc2ff254f24d6010fb442d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::contentTypeChanged</definition>
        <argsstring>()</argsstring>
        <name>contentTypeChanged</name>
        <qualifiedname>KWin::TextInputV2Interface::contentTypeChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Emitted when the <computeroutput><ref refid="class_k_win_1_1_text_input_v2_interface_1a9baaddb979fdfdeda512970abb737590" kindref="member">contentPurpose</ref></computeroutput> and/or <computeroutput><ref refid="class_k_win_1_1_text_input_v2_interface_1a38fd851b1849db34bb9025e9abd962cf" kindref="member">contentHints</ref></computeroutput> changes. <simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a9baaddb979fdfdeda512970abb737590" kindref="member">contentPurpose</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a38fd851b1849db34bb9025e9abd962cf" kindref="member">contentHints</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="262" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_text_input_v2_interface_1acee806f7091659f6ce2c96891920fa3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::surroundingTextChanged</definition>
        <argsstring>()</argsstring>
        <name>surroundingTextChanged</name>
        <qualifiedname>KWin::TextInputV2Interface::surroundingTextChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Emitted when the <computeroutput><ref refid="class_k_win_1_1_text_input_v2_interface_1a4fdaae5773e36344647189efd4dc4518" kindref="member">surroundingText</ref></computeroutput>, <computeroutput><ref refid="class_k_win_1_1_text_input_v2_interface_1a3cc4c40e3938510148735ad3fe5f705a" kindref="member">surroundingTextCursorPosition</ref></computeroutput> and/or <computeroutput><ref refid="class_k_win_1_1_text_input_v2_interface_1ad11791d10f6401ac16ce34fbe010481a" kindref="member">surroundingTextSelectionAnchor</ref></computeroutput> changed. <simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a4fdaae5773e36344647189efd4dc4518" kindref="member">surroundingText</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a3cc4c40e3938510148735ad3fe5f705a" kindref="member">surroundingTextCursorPosition</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1ad11791d10f6401ac16ce34fbe010481a" kindref="member">surroundingTextSelectionAnchor</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="270" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_text_input_v2_interface_1a68c0704883d068db14b10ffe800632c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::enabledChanged</definition>
        <argsstring>()</argsstring>
        <name>enabledChanged</name>
        <qualifiedname>KWin::TextInputV2Interface::enabledChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Emitted whenever this <ref refid="class_k_win_1_1_text_input_v2_interface" kindref="compound">TextInputV2Interface</ref> gets enabled or disabled for a <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref>. <simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a333891a4e63b1015c06c2670494d9b9c" kindref="member">isEnabled</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_v2_interface_1a8acf37ce1cc08937eb31ffcc9550b29a" kindref="member">surface</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="276" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_text_input_v2_interface_1a850bd301107c096a0fa1326fe2a6fca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TextInputV2Interface::stateUpdated</definition>
        <argsstring>(uint32_t serial, UpdateReason reason)</argsstring>
        <name>stateUpdated</name>
        <qualifiedname>KWin::TextInputV2Interface::stateUpdated</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_text_input_v2_interface_1adad732ca7646e799e0faa0845c558ad3" kindref="member">UpdateReason</ref></type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Emitted whenever TextInputInterface should update the current state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="280" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_text_input_v2_interface_1a72e263bd7c4cc34be17ce76d7ebbbb5e" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::TextInputV2Interface::TextInputV2Interface</definition>
        <argsstring>(SeatInterface *seat)</argsstring>
        <name>TextInputV2Interface</name>
        <qualifiedname>KWin::TextInputV2Interface::TextInputV2Interface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/textinput_v2.h" line="287" column="14" bodyfile="kwin/src/wayland/textinput_v2.cpp" bodystart="418" bodyend="422"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents a generic Resource for a text input object. </para>
    </briefdescription>
    <detaileddescription>
<para>This class does not directly correspond to a <ref refid="namespace_k_win_1_1_wayland" kindref="compound">Wayland</ref> resource, but is a generic contract for any interface which implements a text input, e.g. the unstable wl_text_input interface.</para>
<para>It does not expose the actual interface to cover up the fact that the interface is unstable and might change. If one needs to know the actual used protocol, use the method <computeroutput><ref refid="" kindref="compound">interfaceVersion</ref></computeroutput>.</para>
<para>A <ref refid="class_k_win_1_1_text_input_v2_interface" kindref="compound">TextInputV2Interface</ref> gets created by the <computeroutput><ref refid="class_k_win_1_1_text_input_manager_v2_interface" kindref="compound">TextInputManagerV2Interface</ref></computeroutput>. The individual instances are not exposed directly. The <ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref> provides access to the currently active <ref refid="class_k_win_1_1_text_input_v2_interface" kindref="compound">TextInputV2Interface</ref>. This is evaluated automatically based on which <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> has keyboard focus.</para>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_text_input_manager_v2_interface" kindref="compound">TextInputManagerV2Interface</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::TextInputV2Interface</label>
        <link refid="class_k_win_1_1_text_input_v2_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::TextInputV2Interface</label>
        <link refid="class_k_win_1_1_text_input_v2_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/textinput_v2.h" line="62" column="1" bodyfile="kwin/src/wayland/textinput_v2.h" bodystart="63" bodyend="290"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a33d6125a613e14ce61c2174ac1f908fe" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>clientSupportsTextInput</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1aa2b7c59a03835088ddc4fd22d335191b" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>commitString</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a38fd851b1849db34bb9025e9abd962cf" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>contentHints</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a9baaddb979fdfdeda512970abb737590" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>contentPurpose</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1ad0a0711807bc2ff254f24d6010fb442d" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>contentTypeChanged</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a457c38e5adabca56ffe6c5ab4aa9dbd9" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>cursorRectangle</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1ac63989235f8046191561d1a37a2e20f3" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>cursorRectangleChanged</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a4d652d3fd3826b023f4708046c9f5b1e" prot="private" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>d</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a1f289056df3cdfcc3cb70597f97065be" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>deleteSurroundingText</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a68c0704883d068db14b10ffe800632c4" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>enabledChanged</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a333891a4e63b1015c06c2670494d9b9c" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>isEnabled</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a4838e0bc993199baf49eb4e927a58097" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>keysymPressed</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1ac762e54d654f943ddb1b953569c26f94" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>keysymReleased</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a108f112deef29bb87f81d556090c8824" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>preEdit</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a67d35326c4957d75d2ae7729621b1b9c" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>preEditStyling</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a809e4069093bceb920da115c889dcc65" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>preferredLanguage</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a889644e56bd963a19602cc74539168e4" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>preferredLanguageChanged</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1aa9b3be75b167c91df859c6c26fddccc5" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>requestHideInputPanel</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a602a34853071d93b425b9a4321182d6e" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>requestShowInputPanel</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a8f81b716c1934613824f671c3d19f14b" prot="private" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>SeatInterface</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a16d024c3158e5383ab63231b9a4eff14" prot="private" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>SeatInterfacePrivate</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a73f3264eb84feebab0b5919dcf60800d" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>setCursorPosition</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a2fb448f4c22329e831e9c999e09d7000" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>setInputPanelState</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1ad2880a12cfe9b8d75e99c7902a819745" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>setLanguage</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1aae64766d0e239eaaaa24da9ceb47459a" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>setModifiersMap</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a1adfcdf08ff1cd427b5e62a6b26c4976" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>setPreEditCursor</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a50399271617c29306e6af1c223361f52" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>setTextDirection</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a850bd301107c096a0fa1326fe2a6fca1" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>stateUpdated</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a8acf37ce1cc08937eb31ffcc9550b29a" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>surface</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a4fdaae5773e36344647189efd4dc4518" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>surroundingText</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1acee806f7091659f6ce2c96891920fa3c" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>surroundingTextChanged</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a3cc4c40e3938510148735ad3fe5f705a" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>surroundingTextCursorPosition</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1ad11791d10f6401ac16ce34fbe010481a" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>surroundingTextSelectionAnchor</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1ac32faa1a798f7fa0967a9c0eedb10e16" prot="private" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>TextInputManagerV2InterfacePrivate</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a72e263bd7c4cc34be17ce76d7ebbbb5e" prot="private" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>TextInputV2Interface</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1af702fa0efb86d0584b5d2c4e77865e87" prot="private" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>TextInputV2InterfacePrivate</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1adad732ca7646e799e0faa0845c558ad3" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>UpdateReason</name></member>
      <member refid="class_k_win_1_1_text_input_v2_interface_1a4bc536e5bf0879f3e38c7107df5eb026" prot="public" virt="non-virtual"><scope>KWin::TextInputV2Interface</scope><name>~TextInputV2Interface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
