<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="linuxdmabufv1clientbuffer_8cpp" kind="file" language="C++">
    <compoundname>linuxdmabufv1clientbuffer.cpp</compoundname>
    <includes refid="linuxdmabufv1clientbuffer_8h" local="yes">linuxdmabufv1clientbuffer.h</includes>
    <includes refid="drmdevice_8h" local="yes">core/drmdevice.h</includes>
    <includes refid="renderbackend_8h" local="yes">core/renderbackend.h</includes>
    <includes refid="linuxdmabufv1clientbuffer__p_8h" local="yes">linuxdmabufv1clientbuffer_p.h</includes>
    <includes refid="surface__p_8h" local="yes">surface_p.h</includes>
    <includes refid="common_8h" local="yes">utils/common.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="yes">moc_linuxdmabufv1clientbuffer_p.cpp</includes>
    <includes local="yes">moc_linuxdmabufv1clientbuffer.cpp</includes>
    <incdepgraph>
      <node id="19">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>core/drmdevice.h</label>
        <link refid="drmdevice_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>graphicsbufferallocator.h</label>
        <link refid="graphicsbufferallocator_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>utils/ramfile.h</label>
        <link refid="ramfile_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>display.h</label>
        <link refid="display_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/linuxdmabufv1clientbuffer.cpp</label>
        <link refid="linuxdmabufv1clientbuffer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>linuxdmabufv1clientbuffer.h</label>
        <link refid="linuxdmabufv1clientbuffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>linuxdmabufv1clientbuffer_p.h</label>
        <link refid="linuxdmabufv1clientbuffer__p_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>surface.h</label>
        <link refid="surface_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>surface_p.h</label>
        <link refid="surface__p_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>QByteArray</label>
      </node>
      <node id="27">
        <label>QCoreApplication</label>
      </node>
      <node id="33">
        <label>QDebug</label>
      </node>
      <node id="42">
        <label>QFlag</label>
      </node>
      <node id="9">
        <label>QHash</label>
      </node>
      <node id="28">
        <label>QImage</label>
      </node>
      <node id="16">
        <label>QList</label>
      </node>
      <node id="52">
        <label>QLoggingCategory</label>
      </node>
      <node id="21">
        <label>QMatrix4x4</label>
      </node>
      <node id="6">
        <label>QObject</label>
      </node>
      <node id="29">
        <label>QPoint</label>
      </node>
      <node id="36">
        <label>QPointer</label>
      </node>
      <node id="34">
        <label>QRect</label>
      </node>
      <node id="47">
        <label>QRegion</label>
      </node>
      <node id="10">
        <label>QSet</label>
      </node>
      <node id="7">
        <label>QSize</label>
      </node>
      <node id="14">
        <label>QString</label>
      </node>
      <node id="41">
        <label>QTemporaryFile</label>
      </node>
      <node id="35">
        <label>QUuid</label>
      </node>
      <node id="30">
        <label>QVariant</label>
      </node>
      <node id="22">
        <label>QVector2D</label>
      </node>
      <node id="53">
        <label>climits</label>
      </node>
      <node id="26">
        <label>config-kwin.h</label>
      </node>
      <node id="49">
        <label>deque</label>
      </node>
      <node id="44">
        <label>drm_fourcc.h</label>
      </node>
      <node id="54">
        <label>errno.h</label>
      </node>
      <node id="55">
        <label>fcntl.h</label>
      </node>
      <node id="4">
        <label>kwin_export.h</label>
      </node>
      <node id="37">
        <label>memory</label>
      </node>
      <node id="58">
        <label>moc_linuxdmabufv1clientbuffer.cpp</label>
      </node>
      <node id="57">
        <label>moc_linuxdmabufv1clientbuffer_p.cpp</label>
      </node>
      <node id="20">
        <label>optional</label>
      </node>
      <node id="43">
        <label>qwayland-server-linux-dmabuf-unstable-v1.h</label>
      </node>
      <node id="48">
        <label>qwayland-server-wayland.h</label>
      </node>
      <node id="11">
        <label>sys/types.h</label>
      </node>
      <node id="56">
        <label>unistd.h</label>
      </node>
      <node id="8">
        <label>utility</label>
      </node>
      <node id="12">
        <label>wayland-server.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_k_win_1_1linux__dmabuf__feedback__v1__table__entry" prot="public">KWin::linux_dmabuf_feedback_v1_table_entry</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2018<sp/>Fredrik<sp/>Höglund<sp/>&lt;fredrik@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2019<sp/>Roman<sp/>Gilg<sp/>&lt;subdiff@gmail.com&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>Based<sp/>on<sp/>the<sp/>libweston<sp/>implementation,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2014,<sp/>2015<sp/>Collabora,<sp/>Ltd.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linuxdmabufv1clientbuffer_8h" kindref="compound">linuxdmabufv1clientbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drmdevice_8h" kindref="compound">core/drmdevice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderbackend_8h" kindref="compound">core/renderbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linuxdmabufv1clientbuffer__p_8h" kindref="compound">linuxdmabufv1clientbuffer_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface__p_8h" kindref="compound">surface_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">utils/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_version<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1ac0de0258fd14022eacad39678e4c9291" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1ac0de0258fd14022eacad39678e4c9291" kindref="member">LinuxDmaBufV1ClientBufferIntegrationPrivate::LinuxDmaBufV1ClientBufferIntegrationPrivate</ref>(<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration" kindref="compound">LinuxDmaBufV1ClientBufferIntegration</ref><sp/>*<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1a2c56a52bc40a6635bd9c0f1371ddba09" kindref="member">q</ref>,<sp/><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QtWaylandServer::zwp_linux_dmabuf_v1(*display,<sp/>s_version)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1a2c56a52bc40a6635bd9c0f1371ddba09" kindref="member">q</ref>(<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1a2c56a52bc40a6635bd9c0f1371ddba09" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1a96752985669b7636f8f2978c611954ad" kindref="member">defaultFeedback</ref>(new<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback" kindref="compound">LinuxDmaBufV1Feedback</ref>(this))</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1a5e10918ab144c68622210f64ea265556" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1a5e10918ab144c68622210f64ea265556" kindref="member">LinuxDmaBufV1ClientBufferIntegrationPrivate::zwp_linux_dmabuf_v1_bind_resource</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource-&gt;version()<sp/>&lt;<sp/>ZWP_LINUX_DMABUF_V1_GET_DEFAULT_FEEDBACK_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1a7f5b18088e958896b201e6f0cfb86ec1" kindref="member">supportedModifiers</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1a7f5b18088e958896b201e6f0cfb86ec1" kindref="member">supportedModifiers</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>&amp;<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>=<sp/>it.key();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;modifiers<sp/>=<sp/>it.value();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>&amp;modifier<sp/>:<sp/>std::as_const(modifiers))<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource-&gt;version()<sp/>&gt;=<sp/>ZWP_LINUX_DMABUF_V1_MODIFIER_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>modifier_lo<sp/>=<sp/>modifier<sp/>&amp;<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>modifier_hi<sp/>=<sp/>modifier<sp/>&gt;&gt;<sp/>32;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_modifier(resource-&gt;handle,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>modifier_hi,<sp/>modifier_lo);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modifier<sp/>==<sp/>DRM_FORMAT_MOD_LINEAR<sp/>||<sp/>modifier<sp/>==<sp/>DRM_FORMAT_MOD_INVALID)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_format(resource-&gt;handle,<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1a645bd25b76fc31cf9cc8f7ae4b99be37" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1a645bd25b76fc31cf9cc8f7ae4b99be37" kindref="member">LinuxDmaBufV1ClientBufferIntegrationPrivate::zwp_linux_dmabuf_v1_get_default_feedback</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1a5d209055b94d3dc475e313441b6711de" kindref="member">LinuxDmaBufV1FeedbackPrivate::get</ref>(<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1a96752985669b7636f8f2978c611954ad" kindref="member">defaultFeedback</ref>.get())-&gt;add(resource-&gt;client(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>resource-&gt;version());</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1aa76e72f09b476699fe7284b340c335af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1aa76e72f09b476699fe7284b340c335af" kindref="member">LinuxDmaBufV1ClientBufferIntegrationPrivate::zwp_linux_dmabuf_v1_get_surface_feedback</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>wl_resource<sp/>*surfaceResource)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>surface<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a24ac16f7936d889771c2ab09d973175b" kindref="member">SurfaceInterface::get</ref>(surfaceResource);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!surface)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;requested<sp/>surface<sp/>feedback<sp/>for<sp/>nonexistant<sp/>surface!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>surfacePrivate<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a78c6d25b9d679356cef73bb14ca36138" kindref="member">SurfaceInterfacePrivate::get</ref>(surface);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!surfacePrivate-&gt;dmabufFeedbackV1)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surfacePrivate-&gt;dmabufFeedbackV1.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback" kindref="compound">LinuxDmaBufV1Feedback</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1a5d209055b94d3dc475e313441b6711de" kindref="member">LinuxDmaBufV1FeedbackPrivate::get</ref>(surfacePrivate-&gt;dmabufFeedbackV1.get())-&gt;add(resource-&gt;client(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>resource-&gt;version());</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1a329ce25c3c5ed32b3160952de410947d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1a329ce25c3c5ed32b3160952de410947d" kindref="member">LinuxDmaBufV1ClientBufferIntegrationPrivate::zwp_linux_dmabuf_v1_destroy</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1afeb37c408b1e60a8f2445fd15fa1aafd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1afeb37c408b1e60a8f2445fd15fa1aafd" kindref="member">LinuxDmaBufV1ClientBufferIntegrationPrivate::zwp_linux_dmabuf_v1_create_params</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>params_id)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource<sp/>*paramsResource<sp/>=<sp/>wl_resource_create(resource-&gt;client(),<sp/>&amp;zwp_linux_buffer_params_v1_interface,<sp/>resource-&gt;version(),<sp/>params_id);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!paramsResource)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(resource-&gt;handle);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_params_v1" kindref="compound">LinuxDmaBufParamsV1</ref>(<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private_1a2c56a52bc40a6635bd9c0f1371ddba09" kindref="member">q</ref>,<sp/>paramsResource);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_k_win_1_1_linux_dma_buf_params_v1_1a1e58f61a7764f2749611dad00cbc3a82" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_params_v1_1a1e58f61a7764f2749611dad00cbc3a82" kindref="member">LinuxDmaBufParamsV1::LinuxDmaBufParamsV1</ref>(<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration" kindref="compound">LinuxDmaBufV1ClientBufferIntegration</ref><sp/>*integration,<sp/>::wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QtWaylandServer::zwp_linux_buffer_params_v1(resource)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_integration(integration)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="class_k_win_1_1_linux_dma_buf_params_v1_1ad1d4d0bfc549d2217297124bcbacd5d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_params_v1_1ad1d4d0bfc549d2217297124bcbacd5d6" kindref="member">LinuxDmaBufParamsV1::zwp_linux_buffer_params_v1_destroy_resource</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_k_win_1_1_linux_dma_buf_params_v1_1a613d9cdb709617b4f8482c0c4524c2a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_params_v1_1a613d9cdb709617b4f8482c0c4524c2a9" kindref="member">LinuxDmaBufParamsV1::zwp_linux_buffer_params_v1_destroy</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_k_win_1_1_linux_dma_buf_params_v1_1a69ef62166512f975b2424b7168f8523f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_params_v1_1a69ef62166512f975b2424b7168f8523f" kindref="member">LinuxDmaBufParamsV1::zwp_linux_buffer_params_v1_add</ref>(Resource<sp/>*resource,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>fd,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>plane_idx,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>offset,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>stride,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>modifier_hi,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>modifier_lo)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(m_isUsed))<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_already_used,<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>params<sp/>object<sp/>has<sp/>already<sp/>been<sp/>used<sp/>to<sp/>create<sp/>a<sp/>wl_buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(plane_idx<sp/>&gt;=<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_plane_idx,<sp/></highlight><highlight class="stringliteral">&quot;plane<sp/>index<sp/>%d<sp/>is<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal">,<sp/>plane_idx);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(m_attrs.fd[plane_idx].isValid()))<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_plane_set,<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>plane<sp/>index<sp/>%d<sp/>was<sp/>already<sp/>set&quot;</highlight><highlight class="normal">,<sp/>plane_idx);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>m_attrs.fd[plane_idx]<sp/>=<sp/><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref>{fd};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>m_attrs.offset[plane_idx]<sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>m_attrs.pitch[plane_idx]<sp/>=<sp/>stride;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>m_attrs.modifier<sp/>=<sp/>(quint64(modifier_hi)<sp/>&lt;&lt;<sp/>32)<sp/>|<sp/>modifier_lo;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>m_attrs.planeCount++;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_k_win_1_1_linux_dma_buf_params_v1_1ae54fcdad88112a8580fd7c0406bf2fa5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_params_v1_1ae54fcdad88112a8580fd7c0406bf2fa5" kindref="member">LinuxDmaBufParamsV1::zwp_linux_buffer_params_v1_create</ref>(Resource<sp/>*resource,<sp/>int32_t<sp/>width,<sp/>int32_t<sp/>height,<sp/>uint32_t<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>uint32_t<sp/>flags)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(m_isUsed))<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_already_used,<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>params<sp/>object<sp/>has<sp/>already<sp/>been<sp/>used<sp/>to<sp/>create<sp/>a<sp/>wl_buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(!test(resource,<sp/>width,<sp/>height)))<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_backend" kindref="compound">RenderBackend</ref><sp/>*renderBackend<sp/>=<sp/>m_integration-&gt;renderBackend();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(!renderBackend))<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_failed(resource-&gt;handle);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_failed(resource-&gt;handle);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isUsed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>m_attrs.width<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>m_attrs.height<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>m_attrs.format<sp/>=<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>clientBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer" kindref="compound">LinuxDmaBufV1ClientBuffer</ref>(std::move(m_attrs));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!renderBackend-&gt;<ref refid="class_k_win_1_1_render_backend_1a19fb9a934538fe684e8fe9725f253904" kindref="member">testImportBuffer</ref>(clientBuffer))<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_failed(resource-&gt;handle);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>clientBuffer;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource<sp/>*bufferResource<sp/>=<sp/>wl_resource_create(resource-&gt;client(),<sp/>&amp;wl_buffer_interface,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bufferResource)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(resource-&gt;handle);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>clientBuffer;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>clientBuffer-&gt;initialize(bufferResource);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>send_created(resource-&gt;handle,<sp/>bufferResource);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="class_k_win_1_1_linux_dma_buf_params_v1_1acf07757ac2c1c1de913124f537965f2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_params_v1_1acf07757ac2c1c1de913124f537965f2f" kindref="member">LinuxDmaBufParamsV1::zwp_linux_buffer_params_v1_create_immed</ref>(Resource<sp/>*resource,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>buffer_id,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>width,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>height,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>flags)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(m_isUsed))<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_already_used,<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>params<sp/>object<sp/>has<sp/>already<sp/>been<sp/>used<sp/>to<sp/>create<sp/>a<sp/>wl_buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(!test(resource,<sp/>width,<sp/>height)))<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_backend" kindref="compound">RenderBackend</ref><sp/>*renderBackend<sp/>=<sp/>m_integration-&gt;renderBackend();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(!renderBackend))<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_invalid_wl_buffer,<sp/></highlight><highlight class="stringliteral">&quot;importing<sp/>the<sp/>supplied<sp/>dmabufs<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_invalid_wl_buffer,<sp/></highlight><highlight class="stringliteral">&quot;dma-buf<sp/>flags<sp/>are<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isUsed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>m_attrs.width<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>m_attrs.height<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>m_attrs.format<sp/>=<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>clientBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer" kindref="compound">LinuxDmaBufV1ClientBuffer</ref>(std::move(m_attrs));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!renderBackend-&gt;<ref refid="class_k_win_1_1_render_backend_1a19fb9a934538fe684e8fe9725f253904" kindref="member">testImportBuffer</ref>(clientBuffer))<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_invalid_wl_buffer,<sp/></highlight><highlight class="stringliteral">&quot;importing<sp/>the<sp/>supplied<sp/>dmabufs<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>clientBuffer;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource<sp/>*bufferResource<sp/>=<sp/>wl_resource_create(resource-&gt;client(),<sp/>&amp;wl_buffer_interface,<sp/>1,<sp/>buffer_id);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bufferResource)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(resource-&gt;handle);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>clientBuffer;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>clientBuffer-&gt;initialize(bufferResource);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LinuxDmaBufParamsV1::test(Resource<sp/>*resource,<sp/>uint32_t<sp/>width,<sp/>uint32_t<sp/>height)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(!m_attrs.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a15ba47bf6d50be34dc01fa524675dee6" kindref="member">planeCount</ref>))<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_incomplete,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>planes<sp/>have<sp/>been<sp/>specified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>holes<sp/>in<sp/>the<sp/>dmabuf<sp/>set<sp/>(e.g.<sp/>[0,<sp/>1,<sp/>3]).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_attrs.<ref refid="struct_k_win_1_1_dma_buf_attributes_1a15ba47bf6d50be34dc01fa524675dee6" kindref="member">planeCount</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_attrs.<ref refid="struct_k_win_1_1_dma_buf_attributes_1ab08504d7f6b7b4d362538b0ec2c5a70b" kindref="member">fd</ref>[i].isValid())<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_incomplete,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>dmabuf<sp/>has<sp/>been<sp/>added<sp/>for<sp/>plane<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(width<sp/>==<sp/>0<sp/>||<sp/>height<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_invalid_dimensions,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>width<sp/>%d<sp/>or<sp/>height<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_attrs.planeCount;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>overflows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(uint64_t(m_attrs.offset[i])<sp/>+<sp/>m_attrs.pitch[i]<sp/>&gt;<sp/>UINT32_MAX))<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_out_of_bounds,<sp/></highlight><highlight class="stringliteral">&quot;size<sp/>overflow<sp/>for<sp/>plane<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(i<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>uint64_t(m_attrs.offset[i])<sp/>+<sp/>uint64_t(m_attrs.pitch[i])<sp/>*<sp/>height<sp/>&gt;<sp/>UINT32_MAX))<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_out_of_bounds,<sp/></highlight><highlight class="stringliteral">&quot;size<sp/>overflow<sp/>for<sp/>plane<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>report<sp/>an<sp/>error<sp/>as<sp/>it<sp/>might<sp/>be<sp/>caused<sp/>by<sp/>the<sp/>kernel<sp/>not<sp/>supporting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>seeking<sp/>on<sp/>dmabuf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>off_t<sp/>size<sp/>=<sp/>lseek(m_attrs.fd[i].get(),<sp/>0,<sp/>SEEK_END);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(m_attrs.offset[i]<sp/>&gt;=<sp/>size))<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_out_of_bounds,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>offset<sp/>%i<sp/>for<sp/>plane<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>m_attrs.offset[i],<sp/>i);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(m_attrs.offset[i]<sp/>+<sp/>m_attrs.pitch[i]<sp/>&gt;<sp/>size))<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_out_of_bounds,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>stride<sp/>%i<sp/>for<sp/>plane<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>m_attrs.pitch[i],<sp/>i);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>valid<sp/>for<sp/>first<sp/>plane<sp/>as<sp/>other<sp/>planes<sp/>might<sp/>be<sp/>sub-sampled<sp/>according<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fourcc<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(i<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>m_attrs.offset[i]<sp/>+<sp/>m_attrs.pitch[i]<sp/>*<sp/>height<sp/>&gt;<sp/>size))<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_out_of_bounds,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>buffer<sp/>stride<sp/>of<sp/>height<sp/>for<sp/>plane<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1a5e168b8158bf237b28a37b83e02e3192" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1a5e168b8158bf237b28a37b83e02e3192" kindref="member">LinuxDmaBufV1ClientBufferIntegration::LinuxDmaBufV1ClientBufferIntegration</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(display)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>d(new<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1a749a2b769cb0a85adba0dd660291a9e1" kindref="member">LinuxDmaBufV1ClientBufferIntegrationPrivate</ref>(this,<sp/>display))</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1aef670fb043e802fda98b10b500c43ad2" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1aef670fb043e802fda98b10b500c43ad2" kindref="member">LinuxDmaBufV1ClientBufferIntegration::~LinuxDmaBufV1ClientBufferIntegration</ref>()</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="namespace_k_win_1aa6557b559c91a82807c9a641d9da57ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aa6557b559c91a82807c9a641d9da57ce" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche" kindref="compound">LinuxDmaBufV1Feedback::Tranche</ref><sp/>&amp;t1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche" kindref="compound">LinuxDmaBufV1Feedback::Tranche</ref><sp/>&amp;t2)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t1.<ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1a51b0800259d4bc6a3b97bbd57cfa223f" kindref="member">device</ref><sp/>==<sp/>t2.<ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1a51b0800259d4bc6a3b97bbd57cfa223f" kindref="member">device</ref><sp/>&amp;&amp;<sp/>t1.<ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1abe896e94cd29b46f2cd455bb35c8d76e" kindref="member">flags</ref><sp/>==<sp/>t2.<ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1abe896e94cd29b46f2cd455bb35c8d76e" kindref="member">flags</ref><sp/>&amp;&amp;<sp/>t1.<ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1a4e2809b8d43d7cd800938c989b05ee5b" kindref="member">formatTable</ref><sp/>==<sp/>t2.<ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1a4e2809b8d43d7cd800938c989b05ee5b" kindref="member">formatTable</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1aa1ee9c12fb297e1b1576fc5833947c98" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_render_backend" kindref="compound">RenderBackend</ref><sp/>*<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1aa1ee9c12fb297e1b1576fc5833947c98" kindref="member">LinuxDmaBufV1ClientBufferIntegration::renderBackend</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="308"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;renderBackend;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1ac18b775d57ec632a1ce3a838c978773c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1ac18b775d57ec632a1ce3a838c978773c" kindref="member">LinuxDmaBufV1ClientBufferIntegration::setRenderBackend</ref>(<ref refid="class_k_win_1_1_render_backend" kindref="compound">RenderBackend</ref><sp/>*<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1aa1ee9c12fb297e1b1576fc5833947c98" kindref="member">renderBackend</ref>)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;renderBackend<sp/>=<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1aa1ee9c12fb297e1b1576fc5833947c98" kindref="member">renderBackend</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1a1d22d4d965678d74aa253e460371a109" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1a1d22d4d965678d74aa253e460371a109" kindref="member">LinuxDmaBufV1ClientBufferIntegration::setSupportedFormatsWithModifiers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;LinuxDmaBufV1Feedback::Tranche&gt;<sp/>&amp;tranches)</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1a5d209055b94d3dc475e313441b6711de" kindref="member">LinuxDmaBufV1FeedbackPrivate::get</ref>(d-&gt;defaultFeedback.get())-&gt;m_tranches<sp/>!=<sp/>tranches)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/>set;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;tranche<sp/>:<sp/>tranches)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set.insert(tranche.formatTable);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;supportedModifiers<sp/>=<sp/>set;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;mainDevice<sp/>=<sp/>tranches.first().device;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;table<sp/>=<sp/>std::make_unique&lt;LinuxDmaBufV1FormatTable&gt;(set);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;defaultFeedback-&gt;setTranches(tranches);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LinuxDmaBufV1ClientBuffer::buffer_destroy_resource(wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer" kindref="compound">LinuxDmaBufV1ClientBuffer</ref><sp/>*buffer<sp/>=<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_1a2d1691e221f0ce752c5670173e9b22fb" kindref="member">LinuxDmaBufV1ClientBuffer::get</ref>(resource))<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;m_resource<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;drop();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LinuxDmaBufV1ClientBuffer::buffer_destroy(wl_client<sp/>*client,<sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_buffer_interface<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer" kindref="compound">LinuxDmaBufV1ClientBuffer</ref>::implementation<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>.destroy<sp/>=<sp/>buffer_destroy,</highlight></codeline>
<codeline lineno="346"><highlight class="normal">};</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_1a8ccd32f3b4d8c923c35814fb4c598ea1" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_1a8ccd32f3b4d8c923c35814fb4c598ea1" kindref="member">LinuxDmaBufV1ClientBuffer::LinuxDmaBufV1ClientBuffer</ref>(<ref refid="struct_k_win_1_1_dma_buf_attributes" kindref="compound">DmaBufAttributes</ref><sp/>&amp;&amp;attrs)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>m_attrs<sp/>=<sp/>std::move(attrs);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>m_hasAlphaChannel<sp/>=<sp/><ref refid="class_k_win_1_1_graphics_buffer_1a7233a35f2682c6564fe7dcab11704d19" kindref="member">alphaChannelFromDrmFormat</ref>(m_attrs.format);</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LinuxDmaBufV1ClientBuffer::initialize(wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>m_resource<sp/>=<sp/>resource;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_set_implementation(resource,<sp/>&amp;implementation,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>buffer_destroy_resource);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_graphics_buffer_1af3c47088ddbdb12a67df0417be2f7347" kindref="member">GraphicsBuffer::released</ref>,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_buffer_send_release(m_resource);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_1a4d9ed004aa8901b69f73be7224bd7031" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_dma_buf_attributes" kindref="compound">DmaBufAttributes</ref><sp/>*<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_1a4d9ed004aa8901b69f73be7224bd7031" kindref="member">LinuxDmaBufV1ClientBuffer::dmabufAttributes</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="365"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_attrs;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_1acfbf2d91b26013e32fe782147f056e3a" refkind="member"><highlight class="normal">QSize<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_1acfbf2d91b26013e32fe782147f056e3a" kindref="member">LinuxDmaBufV1ClientBuffer::size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="370"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QSize(m_attrs.width,<sp/>m_attrs.height);</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_1aad3f752031150e6c9a703cde1a871c86" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_1aad3f752031150e6c9a703cde1a871c86" kindref="member">LinuxDmaBufV1ClientBuffer::hasAlphaChannel</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="375"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_hasAlphaChannel;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_1a2d1691e221f0ce752c5670173e9b22fb" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_1a8ccd32f3b4d8c923c35814fb4c598ea1" kindref="member">LinuxDmaBufV1ClientBuffer</ref><sp/>*<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_1a2d1691e221f0ce752c5670173e9b22fb" kindref="member">LinuxDmaBufV1ClientBuffer::get</ref>(wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_instance_of(resource,<sp/>&amp;wl_buffer_interface,<sp/>&amp;implementation))<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_1a8ccd32f3b4d8c923c35814fb4c598ea1" kindref="member">LinuxDmaBufV1ClientBuffer</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(wl_resource_get_user_data(resource));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal">LinuxDmaBufV1Feedback::LinuxDmaBufV1Feedback(<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private" kindref="compound">LinuxDmaBufV1ClientBufferIntegrationPrivate</ref><sp/>*integration)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d(new<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private" kindref="compound">LinuxDmaBufV1FeedbackPrivate</ref>(integration))</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1ad4edd3d95013f5186646b38b8451e678" kindref="member">LinuxDmaBufV1Feedback::~LinuxDmaBufV1Feedback</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a383af90709901eb93f22cf8aa6a8a0bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a383af90709901eb93f22cf8aa6a8a0bd" kindref="member">LinuxDmaBufV1Feedback::setScanoutTranches</ref>(<ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref><sp/>*device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/>&amp;formats)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1ac50eb179d4e2eec0ff84329a762cea2f" kindref="member">setTranches</ref>(createScanoutTranches(d-&gt;m_bufferintegration-&gt;defaultFeedback-&gt;d-&gt;m_tranches,<sp/>device,<sp/>formats));</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1ac50eb179d4e2eec0ff84329a762cea2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1ac50eb179d4e2eec0ff84329a762cea2f" kindref="member">LinuxDmaBufV1Feedback::setTranches</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Tranche&gt;<sp/>&amp;tranches)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;m_tranches<sp/>!=<sp/>tranches)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;m_tranches<sp/>=<sp/>tranches;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;map<sp/>=<sp/>d-&gt;resourceMap();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;resource<sp/>:<sp/>map)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send(resource);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal">QList&lt;LinuxDmaBufV1Feedback::Tranche&gt;<sp/>LinuxDmaBufV1Feedback::createScanoutTranches(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Tranche&gt;<sp/>&amp;tranches,<sp/><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref><sp/>*device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/>&amp;formats)</highlight></codeline>
<codeline lineno="411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;LinuxDmaBufV1Feedback::Tranche&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;tranche<sp/>:<sp/>tranches)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche" kindref="compound">LinuxDmaBufV1Feedback::Tranche</ref><sp/>scanoutTranche;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>tranche.formatTable.constBegin();<sp/>it<sp/>!=<sp/>tranche.formatTable.constEnd();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>=<sp/>it.key();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>trancheModifiers<sp/>=<sp/>it.value();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>drmModifiers<sp/>=<sp/>formats[<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>];</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;mod<sp/>:<sp/>trancheModifiers)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(drmModifiers.contains(mod))<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanoutTranche.<ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1a4e2809b8d43d7cd800938c989b05ee5b" kindref="member">formatTable</ref>[<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>]<sp/>&lt;&lt;<sp/>mod;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!scanoutTranche.<ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1a4e2809b8d43d7cd800938c989b05ee5b" kindref="member">formatTable</ref>.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanoutTranche.<ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1a51b0800259d4bc6a3b97bbd57cfa223f" kindref="member">device</ref><sp/>=<sp/>device-&gt;<ref refid="class_k_win_1_1_drm_device_1a301b6afe2cdd7fe925bd58f9e280f7ba" kindref="member">deviceId</ref>();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanoutTranche.<ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1abe896e94cd29b46f2cd455bb35c8d76e" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a9b0afcafb17d66d526a7075627c51308a981c09d70fb19f05c134f81c7d608ebb" kindref="member">LinuxDmaBufV1Feedback::TrancheFlag::Scanout</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.push_back(scanoutTranche);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1a5d209055b94d3dc475e313441b6711de" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1a263e7815c30aef818d11a0057cd04a70" kindref="member">LinuxDmaBufV1FeedbackPrivate</ref><sp/>*<ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1a5d209055b94d3dc475e313441b6711de" kindref="member">LinuxDmaBufV1FeedbackPrivate::get</ref>(<ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback" kindref="compound">LinuxDmaBufV1Feedback</ref><sp/>*q)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>q-&gt;d.get();</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1a263e7815c30aef818d11a0057cd04a70" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1a263e7815c30aef818d11a0057cd04a70" kindref="member">LinuxDmaBufV1FeedbackPrivate::LinuxDmaBufV1FeedbackPrivate</ref>(<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private" kindref="compound">LinuxDmaBufV1ClientBufferIntegrationPrivate</ref><sp/>*bufferintegration)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1aba060e9a239dbfc8ba41d8d24c584248" kindref="member">m_bufferintegration</ref>(bufferintegration)</highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1a0508f2990e508dad41fe0ed9d4216b9a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1a0508f2990e508dad41fe0ed9d4216b9a" kindref="member">LinuxDmaBufV1FeedbackPrivate::send</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>send_format_table(resource-&gt;handle,<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1aba060e9a239dbfc8ba41d8d24c584248" kindref="member">m_bufferintegration</ref>-&gt;table-&gt;file.fd(),<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1aba060e9a239dbfc8ba41d8d24c584248" kindref="member">m_bufferintegration</ref>-&gt;table-&gt;file.size());</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>bytes;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes.append(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;<ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1aba060e9a239dbfc8ba41d8d24c584248" kindref="member">m_bufferintegration</ref>-&gt;mainDevice),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dev_t));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>send_main_device(resource-&gt;handle,<sp/>bytes);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;sendTranche<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>resource](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche" kindref="compound">LinuxDmaBufV1Feedback::Tranche</ref><sp/>&amp;tranche)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QByteArray<sp/>targetDevice;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetDevice.append(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;tranche.device),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dev_t));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QByteArray<sp/>indices;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>tranche.formatTable.begin();<sp/>it<sp/>!=<sp/>tranche.formatTable.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>=<sp/>it.key();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;mod<sp/>:<sp/>std::as_const(it.value()))<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>index<sp/>=<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1aba060e9a239dbfc8ba41d8d24c584248" kindref="member">m_bufferintegration</ref>-&gt;table-&gt;indices[std::pair&lt;uint32_t,<sp/>uint64_t&gt;(<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>mod)];</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.append(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;index),<sp/>2);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_tranche_target_device(resource-&gt;handle,<sp/>targetDevice);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_tranche_formats(resource-&gt;handle,<sp/>indices);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_tranche_flags(resource-&gt;handle,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tranche.flags));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_tranche_done(resource-&gt;handle);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;tranche<sp/>:<sp/>std::as_const(<ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1a8b1522dd1f06ccd7846ddf85964de960" kindref="member">m_tranches</ref>))<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendTranche(tranche);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>default<sp/>hints<sp/>as<sp/>the<sp/>last<sp/>fallback<sp/>tranche</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>defaultFeedbackPrivate<sp/>=<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1a5d209055b94d3dc475e313441b6711de" kindref="member">get</ref>(<ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1aba060e9a239dbfc8ba41d8d24c584248" kindref="member">m_bufferintegration</ref>-&gt;defaultFeedback.get());</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>defaultFeedbackPrivate)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;tranche<sp/>:<sp/>std::as_const(defaultFeedbackPrivate-&gt;m_tranches))<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendTranche(tranche);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>send_done(resource-&gt;handle);</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1ab46181db8004677d264579d846c89cf9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1ab46181db8004677d264579d846c89cf9" kindref="member">LinuxDmaBufV1FeedbackPrivate::zwp_linux_dmabuf_feedback_v1_bind_resource</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1a0508f2990e508dad41fe0ed9d4216b9a" kindref="member">send</ref>(resource);</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1afa07fe547ed48d91160dbbe153b35c18" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private_1afa07fe547ed48d91160dbbe153b35c18" kindref="member">LinuxDmaBufV1FeedbackPrivate::zwp_linux_dmabuf_feedback_v1_destroy</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="struct_k_win_1_1linux__dmabuf__feedback__v1__table__entry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1linux__dmabuf__feedback__v1__table__entry" kindref="compound">linux_dmabuf_feedback_v1_table_entry</ref></highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491" refid="struct_k_win_1_1linux__dmabuf__feedback__v1__table__entry_1a290177c1d8735086a34f124144d924b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_k_win_1_1linux__dmabuf__feedback__v1__table__entry_1a290177c1d8735086a34f124144d924b1" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="492" refid="struct_k_win_1_1linux__dmabuf__feedback__v1__table__entry_1a248097475d24003b9b926d972137bb33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_k_win_1_1linux__dmabuf__feedback__v1__table__entry_1a248097475d24003b9b926d972137bb33" kindref="member">pad</ref>;<sp/></highlight><highlight class="comment">//<sp/>unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="struct_k_win_1_1linux__dmabuf__feedback__v1__table__entry_1a11a2c7153bc9255d9ea6690e5c5584ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="struct_k_win_1_1linux__dmabuf__feedback__v1__table__entry_1a11a2c7153bc9255d9ea6690e5c5584ad" kindref="member">modifier</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal">};</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="class_k_win_1_1_linux_dma_buf_v1_format_table_1a74bf53c164315acf7e10b10bd5060a7c" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_format_table_1a74bf53c164315acf7e10b10bd5060a7c" kindref="member">LinuxDmaBufV1FormatTable::LinuxDmaBufV1FormatTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/>&amp;supportedModifiers)</highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;linux_dmabuf_feedback_v1_table_entry&gt;<sp/>data;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>supportedModifiers.begin();<sp/>it<sp/>!=<sp/>supportedModifiers.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>=<sp/>it.key();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>&amp;mod<sp/>:<sp/>*it)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_format_table_1a5dcc6b44bdd4af66c4ec4833f9e12ebd" kindref="member">indices</ref>.insert({<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>mod},<sp/>data.size());</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.append({<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/>0,<sp/>mod});</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>data.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_k_win_1_1linux__dmabuf__feedback__v1__table__entry" kindref="compound">linux_dmabuf_feedback_v1_table_entry</ref>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_format_table_1a2d6ed63dd594aa7246cbb4adbd5855e9" kindref="member">file</ref><sp/>=<sp/><ref refid="class_k_win_1_1_ram_file" kindref="compound">RamFile</ref>(</highlight><highlight class="stringliteral">&quot;kwin-dmabuf-feedback-table&quot;</highlight><highlight class="normal">,<sp/>data.constData(),<sp/>size,<sp/><ref refid="class_k_win_1_1_ram_file_1aa6220723e82ce49c7cf06248f28caf5aa131f7a8057d8bfd6b4e8e52694e36412" kindref="member">RamFile::Flag::SealWrite</ref>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_linux_dma_buf_v1_format_table_1a2d6ed63dd594aa7246cbb4adbd5855e9" kindref="member">file</ref>.isValid())<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>RamFile<sp/>for<sp/>LinuxDmaBufV1FormatTable&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_linuxdmabufv1clientbuffer_p.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_linuxdmabufv1clientbuffer.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/linuxdmabufv1clientbuffer.cpp"/>
  </compounddef>
</doxygen>
