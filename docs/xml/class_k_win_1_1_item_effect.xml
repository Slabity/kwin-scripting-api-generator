<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_item_effect" kind="class" language="C++" prot="public">
    <compoundname>KWin::ItemEffect</compoundname>
    <includes refid="item_8h" local="no">item.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_item_effect_1a1d90ad7ceaf8e3f3d03cdf3c5046dc65" prot="private" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_k_win_1_1_item" kindref="compound">Item</ref> &gt;</type>
        <definition>QPointer&lt;Item&gt; KWin::ItemEffect::m_item</definition>
        <argsstring></argsstring>
        <name>m_item</name>
        <qualifiedname>KWin::ItemEffect::m_item</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/item.h" line="42" column="14" bodyfile="kwin/src/scene/item.h" bodystart="42" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_item_effect_1abfa44c9b34ddcac58b0d36e3a1570336" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ItemEffect::ItemEffect</definition>
        <argsstring>(Item *item)</argsstring>
        <name>ItemEffect</name>
        <qualifiedname>KWin::ItemEffect::ItemEffect</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_item" kindref="compound">Item</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/item.h" line="32" column="14" bodyfile="kwin/src/scene/item.cpp" bodystart="16" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_item_effect_1afed48ce1ef74521d2e0f10aada06d836" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ItemEffect::ItemEffect</definition>
        <argsstring>(const ItemEffect &amp;copy)=delete</argsstring>
        <name>ItemEffect</name>
        <qualifiedname>KWin::ItemEffect::ItemEffect</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_item_effect" kindref="compound">ItemEffect</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/item.h" line="33" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_item_effect_1a673f86da6d6ae4cc20c5f3ed3d7879bb" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ItemEffect::ItemEffect</definition>
        <argsstring>(ItemEffect &amp;&amp;move)</argsstring>
        <name>ItemEffect</name>
        <qualifiedname>KWin::ItemEffect::ItemEffect</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_item_effect" kindref="compound">ItemEffect</ref> &amp;&amp;</type>
          <declname>move</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/item.h" line="34" column="14" bodyfile="kwin/src/scene/item.cpp" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_item_effect_1a344d288215c36e565c004ed5898ef158" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ItemEffect::ItemEffect</definition>
        <argsstring>()</argsstring>
        <name>ItemEffect</name>
        <qualifiedname>KWin::ItemEffect::ItemEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/item.h" line="35" column="14" bodyfile="kwin/src/scene/item.cpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_item_effect_1a17aad1e51db7f8c6f12da7c27857ee9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>KWin::ItemEffect::~ItemEffect</definition>
        <argsstring>()</argsstring>
        <name>~ItemEffect</name>
        <qualifiedname>KWin::ItemEffect::~ItemEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/item.h" line="36" column="13" bodyfile="kwin/src/scene/item.cpp" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_item_effect_1a3da19723b71f2b0c2e15eaf8bb8bc803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_item_effect" kindref="compound">ItemEffect</ref> &amp;</type>
        <definition>ItemEffect &amp; KWin::ItemEffect::operator=</definition>
        <argsstring>(const ItemEffect &amp;copy)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>KWin::ItemEffect::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_item_effect" kindref="compound">ItemEffect</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/item.h" line="38" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_item_effect_1afb422bb5e845720e24b5f2d22992fddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_item_effect" kindref="compound">ItemEffect</ref> &amp;</type>
        <definition>ItemEffect &amp; KWin::ItemEffect::operator=</definition>
        <argsstring>(ItemEffect &amp;&amp;move)</argsstring>
        <name>operator=</name>
        <qualifiedname>KWin::ItemEffect::operator=</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_item_effect" kindref="compound">ItemEffect</ref> &amp;&amp;</type>
          <declname>move</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/item.h" line="39" column="16" bodyfile="kwin/src/scene/item.cpp" bodystart="38" bodyend="42"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="kwin/src/scene/item.h" line="29" column="1" bodyfile="kwin/src/scene/item.h" bodystart="30" bodyend="43"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_item_effect_1abfa44c9b34ddcac58b0d36e3a1570336" prot="public" virt="non-virtual"><scope>KWin::ItemEffect</scope><name>ItemEffect</name></member>
      <member refid="class_k_win_1_1_item_effect_1afed48ce1ef74521d2e0f10aada06d836" prot="public" virt="non-virtual"><scope>KWin::ItemEffect</scope><name>ItemEffect</name></member>
      <member refid="class_k_win_1_1_item_effect_1a673f86da6d6ae4cc20c5f3ed3d7879bb" prot="public" virt="non-virtual"><scope>KWin::ItemEffect</scope><name>ItemEffect</name></member>
      <member refid="class_k_win_1_1_item_effect_1a344d288215c36e565c004ed5898ef158" prot="public" virt="non-virtual"><scope>KWin::ItemEffect</scope><name>ItemEffect</name></member>
      <member refid="class_k_win_1_1_item_effect_1a1d90ad7ceaf8e3f3d03cdf3c5046dc65" prot="private" virt="non-virtual"><scope>KWin::ItemEffect</scope><name>m_item</name></member>
      <member refid="class_k_win_1_1_item_effect_1a3da19723b71f2b0c2e15eaf8bb8bc803" prot="public" virt="non-virtual"><scope>KWin::ItemEffect</scope><name>operator=</name></member>
      <member refid="class_k_win_1_1_item_effect_1afb422bb5e845720e24b5f2d22992fddb" prot="public" virt="non-virtual"><scope>KWin::ItemEffect</scope><name>operator=</name></member>
      <member refid="class_k_win_1_1_item_effect_1a17aad1e51db7f8c6f12da7c27857ee9c" prot="public" virt="virtual"><scope>KWin::ItemEffect</scope><name>~ItemEffect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
