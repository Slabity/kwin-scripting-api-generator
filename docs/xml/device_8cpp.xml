<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="device_8cpp" kind="file" language="C++">
    <compoundname>device.cpp</compoundname>
    <includes refid="device_8h" local="yes">device.h</includes>
    <includes local="yes">config-kwin.h</includes>
    <includes refid="core_2output_8h" local="yes">core/output.h</includes>
    <includes refid="outputbackend_8h" local="yes">core/outputbackend.h</includes>
    <includes refid="libinput__logging_8h" local="yes">libinput_logging.h</includes>
    <includes local="yes">main.h</includes>
    <includes refid="mousebuttons_8h" local="yes">mousebuttons.h</includes>
    <includes refid="pointer__input_8h" local="yes">pointer_input.h</includes>
    <includes local="no">QCryptographicHash</includes>
    <includes local="no">QDBusArgument</includes>
    <includes local="no">QDBusConnection</includes>
    <includes local="no">QDBusMetaType</includes>
    <includes local="no">linux/input.h</includes>
    <includes local="yes">moc_device.cpp</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/backends/libinput/device.cpp</label>
        <link refid="device_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>libinput_logging.h</label>
        <link refid="libinput__logging_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>core/outputbackend.h</label>
        <link refid="outputbackend_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>input.h</label>
        <link refid="input_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>mousebuttons.h</label>
        <link refid="mousebuttons_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>pointer_input.h</label>
        <link refid="pointer__input_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>utils/cursortheme.h</label>
        <link refid="cursortheme_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>KConfigGroup</label>
      </node>
      <node id="44">
        <label>KConfigWatcher</label>
      </node>
      <node id="41">
        <label>KSharedConfig</label>
      </node>
      <node id="25">
        <label>QByteArray</label>
      </node>
      <node id="6">
        <label>QCoreApplication</label>
      </node>
      <node id="52">
        <label>QCryptographicHash</label>
      </node>
      <node id="53">
        <label>QDBusArgument</label>
      </node>
      <node id="54">
        <label>QDBusConnection</label>
      </node>
      <node id="55">
        <label>QDBusMetaType</label>
      </node>
      <node id="27">
        <label>QDebug</label>
      </node>
      <node id="15">
        <label>QEasingCurve</label>
      </node>
      <node id="50">
        <label>QElapsedTimer</label>
      </node>
      <node id="40">
        <label>QHash</label>
      </node>
      <node id="7">
        <label>QImage</label>
      </node>
      <node id="16">
        <label>QList</label>
      </node>
      <node id="34">
        <label>QLoggingCategory</label>
      </node>
      <node id="17">
        <label>QMatrix4x4</label>
      </node>
      <node id="12">
        <label>QObject</label>
      </node>
      <node id="8">
        <label>QPoint</label>
      </node>
      <node id="51">
        <label>QPointF</label>
      </node>
      <node id="18">
        <label>QPointer</label>
      </node>
      <node id="28">
        <label>QRect</label>
      </node>
      <node id="45">
        <label>QSet</label>
      </node>
      <node id="48">
        <label>QSharedDataPointer</label>
      </node>
      <node id="26">
        <label>QSize</label>
      </node>
      <node id="19">
        <label>QSizeF</label>
      </node>
      <node id="29">
        <label>QUuid</label>
      </node>
      <node id="9">
        <label>QVariant</label>
      </node>
      <node id="10">
        <label>QVector2D</label>
      </node>
      <node id="49">
        <label>chrono</label>
      </node>
      <node id="5">
        <label>config-kwin.h</label>
      </node>
      <node id="31">
        <label>epoxy/egl.h</label>
      </node>
      <node id="46">
        <label>functional</label>
      </node>
      <node id="11">
        <label>kwin_export.h</label>
      </node>
      <node id="13">
        <label>libinput.h</label>
      </node>
      <node id="56">
        <label>linux/input.h</label>
      </node>
      <node id="35">
        <label>main.h</label>
      </node>
      <node id="32">
        <label>memory</label>
      </node>
      <node id="57">
        <label>moc_device.cpp</label>
      </node>
      <node id="24">
        <label>optional</label>
      </node>
      <node id="37">
        <label>qnamespace.h</label>
      </node>
      <node id="42">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_k_win_1_1_lib_input_1_1_config_data_base" prot="public">KWin::LibInput::ConfigDataBase</innerclass>
    <innerclass refid="struct_k_win_1_1_lib_input_1_1_config_data" prot="public">KWin::LibInput::ConfigData</innerclass>
    <innerclass refid="struct_k_win_1_1_lib_input_1_1_config_data_3_01_device_orientation_01_4" prot="public">KWin::LibInput::ConfigData&lt; DeviceOrientation &gt;</innerclass>
    <innerclass refid="struct_k_win_1_1_lib_input_1_1_config_data_3_01_calibration_matrix_01_4" prot="public">KWin::LibInput::ConfigData&lt; CalibrationMatrix &gt;</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <innernamespace refid="namespace_k_win_1_1_lib_input">KWin::LibInput</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="device_8cpp_1a6ecac60f60e33e16863345a4893306cd" prot="public" static="no">
        <name>CONFIG</name>
        <param><defname>method</defname></param>
        <param><defname>condition</defname></param>
        <param><defname>function</defname></param>
        <param><defname>variable</defname></param>
        <param><defname>key</defname></param>
        <initializer>    void Device::method(bool set)                                                                 \
    {                                                                                             \
        if (condition) {                                                                          \
            return;                                                                               \
        }                                                                                         \
        if (libinput_device_config_##function(m_device, set) == LIBINPUT_CONFIG_STATUS_SUCCESS) { \
            if (m_##variable != set) {                                                            \
                m_##variable = set;                                                               \
                writeEntry(ConfigKey::key, m_##variable);                                         \
                Q_EMIT variable##Changed();                                                       \
            }                                                                                     \
        }                                                                                         \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/libinput/device.cpp" line="658" column="9" bodyfile="kwin/src/backends/libinput/device.cpp" bodystart="658" bodyend="671"/>
      </memberdef>
      <memberdef kind="define" id="device_8cpp_1aff12b7fe61f14a13633b0982d5340c75" prot="public" static="no">
        <name>CONFIG</name>
        <param><defname>method</defname></param>
        <param><defname>condition</defname></param>
        <param><defname>function</defname></param>
        <param><defname>enum</defname></param>
        <param><defname>variable</defname></param>
        <param><defname>key</defname></param>
        <initializer>    void Device::method(bool set)                                                                                                                                        \
    {                                                                                                                                                                    \
        if (condition) {                                                                                                                                                 \
            return;                                                                                                                                                      \
        }                                                                                                                                                                \
        if (libinput_device_config_##function(m_device, set ? LIBINPUT_CONFIG_##enum##_ENABLED : LIBINPUT_CONFIG_##enum##_DISABLED) == LIBINPUT_CONFIG_STATUS_SUCCESS) { \
            if (m_##variable != set) {                                                                                                                                   \
                m_##variable = set;                                                                                                                                      \
                writeEntry(ConfigKey::key, m_##variable);                                                                                                                \
                Q_EMIT variable##Changed();                                                                                                                              \
            }                                                                                                                                                            \
        }                                                                                                                                                                \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/libinput/device.cpp" line="678" column="9" bodyfile="kwin/src/backends/libinput/device.cpp" bodystart="658" bodyend="671"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2016<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="device_8h" kindref="compound">device.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config-kwin.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2output_8h" kindref="compound">core/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputbackend_8h" kindref="compound">core/outputbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libinput__logging_8h" kindref="compound">libinput_logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;main.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mousebuttons_8h" kindref="compound">mousebuttons.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer__input_8h" kindref="compound">pointer_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QCryptographicHash&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDBusArgument&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDBusConnection&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDBusMetaType&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/input.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1_1_lib_input" kindref="compound">LibInput</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>s_identityRect<sp/>=<sp/>QRectF(0,<sp/>0,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1aeb94c9261ca98a9367ac9d719f2c0ad8" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1aeb94c9261ca98a9367ac9d719f2c0ad8" kindref="member">TabletTool::TabletTool</ref>(libinput_tablet_tool<sp/>*<ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a4ce3221cdfb93ae07bee214c4b5fb1fa" kindref="member">handle</ref>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_handle(libinput_tablet_tool_ref(<ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a4ce3221cdfb93ae07bee214c4b5fb1fa" kindref="member">handle</ref>))</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1aa9664f467da105c21fd360dfb3b7bc4f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1aa9664f467da105c21fd360dfb3b7bc4f" kindref="member">TabletTool::~TabletTool</ref>()</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>libinput_tablet_tool_unref(m_handle);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a4ce3221cdfb93ae07bee214c4b5fb1fa" refkind="member"><highlight class="normal">libinput_tablet_tool<sp/>*<ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a4ce3221cdfb93ae07bee214c4b5fb1fa" kindref="member">TabletTool::handle</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="44"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_handle;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a20a82455d0bcbe6ba3dcf5c452c126ae" refkind="member"><highlight class="normal">quint64<sp/><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a20a82455d0bcbe6ba3dcf5c452c126ae" kindref="member">TabletTool::serialId</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="49"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_tablet_tool_get_serial(m_handle);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a8d4e6bf9fd24284dc7da5a6097bbb162" refkind="member"><highlight class="normal">quint64<sp/><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a8d4e6bf9fd24284dc7da5a6097bbb162" kindref="member">TabletTool::uniqueId</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="54"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_tablet_tool_get_tool_id(m_handle);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a3d203af75a2c374cc8513c578b7b6473" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_input_device_tablet_tool_1adc0cf396bee4488bddb8c152be87b77e" kindref="member">TabletTool::Type</ref><sp/><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a3d203af75a2c374cc8513c578b7b6473" kindref="member">TabletTool::type</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="59"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(libinput_tablet_tool_get_type(m_handle))<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_TABLET_TOOL_TYPE_PEN:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1adc0cf396bee4488bddb8c152be87b77ea06c2060175060ae5c3b5124ce012708f" kindref="member">Type::Pen</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_TABLET_TOOL_TYPE_ERASER:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1adc0cf396bee4488bddb8c152be87b77eac251a99c1b14516f8fc7a20594e19fe5" kindref="member">Type::Eraser</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_TABLET_TOOL_TYPE_BRUSH:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1adc0cf396bee4488bddb8c152be87b77ea7cd99b7f1edabe9b734fa26672445bc9" kindref="member">Type::Brush</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_TABLET_TOOL_TYPE_PENCIL:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1adc0cf396bee4488bddb8c152be87b77ea059660cb09cf94fee2f32833ad4ff9fe" kindref="member">Type::Pencil</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_TABLET_TOOL_TYPE_AIRBRUSH:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1adc0cf396bee4488bddb8c152be87b77ea3ce54edaf941979a61deba5f5398431d" kindref="member">Type::Airbrush</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_TABLET_TOOL_TYPE_MOUSE:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1adc0cf396bee4488bddb8c152be87b77ea95bb49d9996ec26ee3c945f3bb7fc236" kindref="member">Type::Mouse</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_TABLET_TOOL_TYPE_LENS:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1adc0cf396bee4488bddb8c152be87b77ea2eef047ad71829e5e5cf78aecc795ae2" kindref="member">Type::Lens</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LIBINPUT_TABLET_TOOL_TYPE_TOTEM:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1adc0cf396bee4488bddb8c152be87b77ea4366d4ee3704dcd756e3bb230fd8b46d" kindref="member">Type::Totem</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1adc0cf396bee4488bddb8c152be87b77e" kindref="member">Type</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a8352e4c2a861e4c876f96a139502b0a8" refkind="member"><highlight class="normal">QList&lt;TabletTool::Capability&gt;<sp/><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a8352e4c2a861e4c876f96a139502b0a8" kindref="member">TabletTool::capabilities</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="83"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;Capability&gt;<sp/><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a8352e4c2a861e4c876f96a139502b0a8" kindref="member">capabilities</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_tablet_tool_has_pressure(m_handle))<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a8352e4c2a861e4c876f96a139502b0a8" kindref="member">capabilities</ref><sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1a7c7fe721845e2125ae9a23cbbbd2f7a9a1e7477eda498eded07d839cacc438cae" kindref="member">Capability::Pressure</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_tablet_tool_has_distance(m_handle))<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a8352e4c2a861e4c876f96a139502b0a8" kindref="member">capabilities</ref><sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1a7c7fe721845e2125ae9a23cbbbd2f7a9a9a11a70faeeff8e05b16793231655bd9" kindref="member">Capability::Distance</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_tablet_tool_has_rotation(m_handle))<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a8352e4c2a861e4c876f96a139502b0a8" kindref="member">capabilities</ref><sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1a7c7fe721845e2125ae9a23cbbbd2f7a9ac8a1d4accb311cf283c71fae66934ab4" kindref="member">Capability::Rotation</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_tablet_tool_has_tilt(m_handle))<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a8352e4c2a861e4c876f96a139502b0a8" kindref="member">capabilities</ref><sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1a7c7fe721845e2125ae9a23cbbbd2f7a9a697bbc2458660418e1908420c8c492f7" kindref="member">Capability::Tilt</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_tablet_tool_has_slider(m_handle))<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a8352e4c2a861e4c876f96a139502b0a8" kindref="member">capabilities</ref><sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1a7c7fe721845e2125ae9a23cbbbd2f7a9a0080136f657a16e7dc720095e2387451" kindref="member">Capability::Slider</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_tablet_tool_has_wheel(m_handle))<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a8352e4c2a861e4c876f96a139502b0a8" kindref="member">capabilities</ref><sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1a7c7fe721845e2125ae9a23cbbbd2f7a9a4a7bd09eeb28f19298326f1874928ef2" kindref="member">Capability::Wheel</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_tablet_tool_1a8352e4c2a861e4c876f96a139502b0a8" kindref="member">capabilities</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkAlphaNumericKeyboard(libinput_device<sp/>*device)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>KEY_1;<sp/>i<sp/>&lt;=<sp/>KEY_0;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_device_keyboard_has_key(device,<sp/>i)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>KEY_Q;<sp/>i<sp/>&lt;=<sp/>KEY_P;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_device_keyboard_has_key(device,<sp/>i)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>KEY_A;<sp/>i<sp/>&lt;=<sp/>KEY_L;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_device_keyboard_has_key(device,<sp/>i)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>KEY_Z;<sp/>i<sp/>&lt;=<sp/>KEY_M;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_device_keyboard_has_key(device,<sp/>i)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397" kindref="member">ConfigKey</ref><sp/>{</highlight></codeline>
<codeline lineno="132" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a00d23a76e43b46dae9ec7aa9dcbebb32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a00d23a76e43b46dae9ec7aa9dcbebb32" kindref="member">Enabled</ref>,</highlight></codeline>
<codeline lineno="133" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac6bea395f71bea36062bb602746247c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac6bea395f71bea36062bb602746247c2" kindref="member">DisableEventsOnExternalMouse</ref>,</highlight></codeline>
<codeline lineno="134" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397acd5d8803eaa45145192f16041a365ee8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397acd5d8803eaa45145192f16041a365ee8" kindref="member">LeftHanded</ref>,</highlight></codeline>
<codeline lineno="135" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a424408fe6cf1ba52184ee97de079cac9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a424408fe6cf1ba52184ee97de079cac9" kindref="member">DisableWhileTyping</ref>,</highlight></codeline>
<codeline lineno="136" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a8bcf24de521b2a74074d3ce787441755" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a8bcf24de521b2a74074d3ce787441755" kindref="member">PointerAcceleration</ref>,</highlight></codeline>
<codeline lineno="137" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aea11b95b1402f5219e60e0bde653d10e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aea11b95b1402f5219e60e0bde653d10e" kindref="member">PointerAccelerationProfile</ref>,</highlight></codeline>
<codeline lineno="138" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac864a03c896dbf40378b4e46694b8844" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac864a03c896dbf40378b4e46694b8844" kindref="member">TapToClick</ref>,</highlight></codeline>
<codeline lineno="139" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a215dd27493aa6d6e4cecb22d069577bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a215dd27493aa6d6e4cecb22d069577bd" kindref="member">LmrTapButtonMap</ref>,</highlight></codeline>
<codeline lineno="140" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a60acb1e4f527b90d634a97120c54d1d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a60acb1e4f527b90d634a97120c54d1d7" kindref="member">TapAndDrag</ref>,</highlight></codeline>
<codeline lineno="141" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aa6ba5058e45884c3b0639395b568d596" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aa6ba5058e45884c3b0639395b568d596" kindref="member">TapDragLock</ref>,</highlight></codeline>
<codeline lineno="142" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a0b39e040cf0c7683085aa71d07dc366f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a0b39e040cf0c7683085aa71d07dc366f" kindref="member">MiddleButtonEmulation</ref>,</highlight></codeline>
<codeline lineno="143" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a9c06bef418b1b3bfd8e716ce5609040e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a9c06bef418b1b3bfd8e716ce5609040e" kindref="member">NaturalScroll</ref>,</highlight></codeline>
<codeline lineno="144" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac95d6c82d9f67daaf8eaa7ee7b028beb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac95d6c82d9f67daaf8eaa7ee7b028beb" kindref="member">ScrollMethod</ref>,</highlight></codeline>
<codeline lineno="145" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a967c70cd81088d5b970460f1bf759af1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a967c70cd81088d5b970460f1bf759af1" kindref="member">ScrollButton</ref>,</highlight></codeline>
<codeline lineno="146" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a5e353826040f1deca2868f5c91d54f20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a5e353826040f1deca2868f5c91d54f20" kindref="member">ClickMethod</ref>,</highlight></codeline>
<codeline lineno="147" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397af126a071f7cb4398a9bf2fc3ed8f61e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397af126a071f7cb4398a9bf2fc3ed8f61e7" kindref="member">ScrollFactor</ref>,</highlight></codeline>
<codeline lineno="148" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aabbd64f40c34c537d3a571af068fce29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aabbd64f40c34c537d3a571af068fce29" kindref="member">Orientation</ref>,</highlight></codeline>
<codeline lineno="149" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397af6147c9c9b908be9b52803698be57ad2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397af6147c9c9b908be9b52803698be57ad2" kindref="member">Calibration</ref>,</highlight></codeline>
<codeline lineno="150" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a5fd7f823f0d2e8e6122f4bdc092a96b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a5fd7f823f0d2e8e6122f4bdc092a96b8" kindref="member">OutputName</ref>,</highlight></codeline>
<codeline lineno="151" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a9610c3da9431dda497d42a716148a987" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a9610c3da9431dda497d42a716148a987" kindref="member">OutputArea</ref>,</highlight></codeline>
<codeline lineno="152" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a94dc42cfaa02318976d69c546cd48143" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a94dc42cfaa02318976d69c546cd48143" kindref="member">MapToWorkspace</ref>,</highlight></codeline>
<codeline lineno="153" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a2f281fd8ff55314a5b68e29b4316f6b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a2f281fd8ff55314a5b68e29b4316f6b4" kindref="member">TabletToolPressureCurve</ref>,</highlight></codeline>
<codeline lineno="154" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aa2a566acb8ba59a37e3dffc7336c9156" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aa2a566acb8ba59a37e3dffc7336c9156" kindref="member">TabletToolPressureRangeMin</ref>,</highlight></codeline>
<codeline lineno="155" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397adb7931d8e5b7c1bd0679915de017a2f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397adb7931d8e5b7c1bd0679915de017a2f5" kindref="member">TabletToolPressureRangeMax</ref>,</highlight></codeline>
<codeline lineno="156" refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac05d9c06e9bdfc8fcda4f769a97271c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac05d9c06e9bdfc8fcda4f769a97271c3" kindref="member">InputArea</ref>,</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="struct_k_win_1_1_lib_input_1_1_config_data_base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a48d2685f384d43d094dd11ffbe68c15d" kindref="member">ConfigDataBase</ref></highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161" refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a48d2685f384d43d094dd11ffbe68c15d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a48d2685f384d43d094dd11ffbe68c15d" kindref="member">ConfigDataBase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;_key)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a86ec31ac59fd9a5ed4569d67478c87ad" kindref="member">key</ref>(_key)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165" refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1ade3a720e38126126deebacdabbddd14d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1ade3a720e38126126deebacdabbddd14d" kindref="member">~ConfigDataBase</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a86ec31ac59fd9a5ed4569d67478c87ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a86ec31ac59fd9a5ed4569d67478c87ad" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="168" refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1ae7fefedb585a53cb7e4c6685f5e0e735" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1ae7fefedb585a53cb7e4c6685f5e0e735" kindref="member">read</ref>(<ref refid="class_k_win_1_1_lib_input_1_1_device" kindref="compound">Device</ref><sp/>*<sp/></highlight><highlight class="comment">/*device*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KConfigGroup<sp/>&amp;<sp/></highlight><highlight class="comment">/*values*/</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="172" refid="struct_k_win_1_1_lib_input_1_1_config_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a68cf518816e8f3f42b69698738fe35a7" kindref="member">ConfigData</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a48d2685f384d43d094dd11ffbe68c15d" kindref="member">ConfigDataBase</ref></highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174" refid="struct_k_win_1_1_lib_input_1_1_config_data_1a478f4877e0ce30f9f72ec805e210c4fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a478f4877e0ce30f9f72ec805e210c4fd" kindref="member">SetterFunction</ref><sp/>=<sp/>std::function&lt;void(<ref refid="class_k_win_1_1_lib_input_1_1_device" kindref="compound">Device</ref><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;)&gt;;</highlight></codeline>
<codeline lineno="175" refid="struct_k_win_1_1_lib_input_1_1_config_data_1a1f1345b03954b6a9e0c039312f9c1b20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a1f1345b03954b6a9e0c039312f9c1b20" kindref="member">DefaultValueFunction</ref><sp/>=<sp/>std::function&lt;T(<ref refid="class_k_win_1_1_lib_input_1_1_device" kindref="compound">Device</ref><sp/>*)&gt;;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="struct_k_win_1_1_lib_input_1_1_config_data_1a68cf518816e8f3f42b69698738fe35a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a68cf518816e8f3f42b69698738fe35a7" kindref="member">ConfigData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;_key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a478f4877e0ce30f9f72ec805e210c4fd" kindref="member">SetterFunction</ref><sp/>&amp;_setter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a1f1345b03954b6a9e0c039312f9c1b20" kindref="member">DefaultValueFunction</ref><sp/>&amp;_defaultValue)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a48d2685f384d43d094dd11ffbe68c15d" kindref="member">ConfigDataBase</ref>(_key)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a49de55582ead630bbb20785a110f7e7f" kindref="member">setterFunction</ref>(_setter)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a689c1246163d1e695d2616ae95448702" kindref="member">defaultValueFunction</ref>(_defaultValue)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="struct_k_win_1_1_lib_input_1_1_config_data_1ab6293a8895e3818ac0b4f9af1db870ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1ab6293a8895e3818ac0b4f9af1db870ad" kindref="member">read</ref>(<ref refid="class_k_win_1_1_lib_input_1_1_device" kindref="compound">Device</ref><sp/>*device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KConfigGroup<sp/>&amp;values)</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="185"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a49de55582ead630bbb20785a110f7e7f" kindref="member">setterFunction</ref><sp/>||<sp/>!<ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a689c1246163d1e695d2616ae95448702" kindref="member">defaultValueFunction</ref>)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a49de55582ead630bbb20785a110f7e7f" kindref="member">setterFunction</ref>(device,<sp/>values.readEntry(<ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a86ec31ac59fd9a5ed4569d67478c87ad" kindref="member">key</ref>.constData(),<sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a689c1246163d1e695d2616ae95448702" kindref="member">defaultValueFunction</ref>(device)));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="struct_k_win_1_1_lib_input_1_1_config_data_1a49de55582ead630bbb20785a110f7e7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a478f4877e0ce30f9f72ec805e210c4fd" kindref="member">SetterFunction</ref><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a49de55582ead630bbb20785a110f7e7f" kindref="member">setterFunction</ref>;</highlight></codeline>
<codeline lineno="194" refid="struct_k_win_1_1_lib_input_1_1_config_data_1a689c1246163d1e695d2616ae95448702" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a1f1345b03954b6a9e0c039312f9c1b20" kindref="member">DefaultValueFunction</ref><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_1a689c1246163d1e695d2616ae95448702" kindref="member">defaultValueFunction</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Template<sp/>specializations<sp/>for<sp/>some<sp/>specific<sp/>config<sp/>types<sp/>that<sp/>can&apos;t<sp/>be<sp/>handled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>through<sp/>plain<sp/>readEntry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>uses<sp/>tagged<sp/>types<sp/>to<sp/>avoid<sp/>specialising<sp/>the<sp/>general<sp/>type<sp/>since<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>directly<sp/>call<sp/>the<sp/>getters/setters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="namespace_k_win_1_1_lib_input_1a7748de82b10018e766444c907fa9f243" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1_1_lib_input_1a7748de82b10018e766444c907fa9f243" kindref="member">DeviceOrientation</ref><sp/>=<sp/>Qt::ScreenOrientation;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="206" refid="struct_k_win_1_1_lib_input_1_1_config_data_3_01_device_orientation_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_3_01_device_orientation_01_4_1af0a7f524b717758355e0b4b156a508f8" kindref="member">ConfigData</ref>&lt;<ref refid="namespace_k_win_1_1_lib_input_1a7748de82b10018e766444c907fa9f243" kindref="member">DeviceOrientation</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a48d2685f384d43d094dd11ffbe68c15d" kindref="member">ConfigDataBase</ref></highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208" refid="struct_k_win_1_1_lib_input_1_1_config_data_3_01_device_orientation_01_4_1af0a7f524b717758355e0b4b156a508f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_3_01_device_orientation_01_4_1af0a7f524b717758355e0b4b156a508f8" kindref="member">ConfigData</ref>()</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a48d2685f384d43d094dd11ffbe68c15d" kindref="member">ConfigDataBase</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;Orientation&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="struct_k_win_1_1_lib_input_1_1_config_data_3_01_device_orientation_01_4_1a3722e5f337398fa17c1ee390e2fde9b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_3_01_device_orientation_01_4_1a3722e5f337398fa17c1ee390e2fde9b9" kindref="member">read</ref>(<ref refid="class_k_win_1_1_lib_input_1_1_device" kindref="compound">Device</ref><sp/>*device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KConfigGroup<sp/>&amp;values)</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="214"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>defaultValue<sp/>=<sp/>device-&gt;<ref refid="class_k_win_1_1_lib_input_1_1_device_1ad2560ab611df3853f0868c00dcd2da16" kindref="member">defaultOrientation</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device-&gt;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a8ee650ede6662cc2298c1bdd0fbfb71d" kindref="member">setOrientation</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Qt::ScreenOrientation</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(values.readEntry(<ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a86ec31ac59fd9a5ed4569d67478c87ad" kindref="member">key</ref>.constData(),<sp/>defaultValue)));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal">};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="namespace_k_win_1_1_lib_input_1aa52febbd11f6e5440c5da949ae11511a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1_1_lib_input_1aa52febbd11f6e5440c5da949ae11511a" kindref="member">CalibrationMatrix</ref><sp/>=<sp/>QMatrix4x4;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="223" refid="struct_k_win_1_1_lib_input_1_1_config_data_3_01_calibration_matrix_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_3_01_calibration_matrix_01_4_1a5792511edd5c4741edbf6f98d0a23225" kindref="member">ConfigData</ref>&lt;<ref refid="namespace_k_win_1_1_lib_input_1aa52febbd11f6e5440c5da949ae11511a" kindref="member">CalibrationMatrix</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a48d2685f384d43d094dd11ffbe68c15d" kindref="member">ConfigDataBase</ref></highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225" refid="struct_k_win_1_1_lib_input_1_1_config_data_3_01_calibration_matrix_01_4_1a5792511edd5c4741edbf6f98d0a23225" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_3_01_calibration_matrix_01_4_1a5792511edd5c4741edbf6f98d0a23225" kindref="member">ConfigData</ref>()</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a48d2685f384d43d094dd11ffbe68c15d" kindref="member">ConfigDataBase</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;CalibrationMatrix&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="struct_k_win_1_1_lib_input_1_1_config_data_3_01_calibration_matrix_01_4_1a398eb3bc0392d5349a99259bbaba7b31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_lib_input_1_1_config_data_3_01_calibration_matrix_01_4_1a398eb3bc0392d5349a99259bbaba7b31" kindref="member">read</ref>(<ref refid="class_k_win_1_1_lib_input_1_1_device" kindref="compound">Device</ref><sp/>*device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KConfigGroup<sp/>&amp;values)</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="231"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device-&gt;<ref refid="class_k_win_1_1_lib_input_1_1_device_1abe899540829b5ceb589e7d1dce34ad3d" kindref="member">setCalibrationMatrix</ref>(values.readEntry(<ref refid="struct_k_win_1_1_lib_input_1_1_config_data_base_1a86ec31ac59fd9a5ed4569d67478c87ad" kindref="member">key</ref>.constData(),<sp/>device-&gt;<ref refid="class_k_win_1_1_lib_input_1_1_device_1ad10e7ddf3f1fca753369a8b9daaba124" kindref="member">defaultCalibrationMatrix</ref>()));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal">};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMap&lt;ConfigKey,<sp/>std::shared_ptr&lt;ConfigDataBase&gt;&gt;<sp/>s_configData{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a00d23a76e43b46dae9ec7aa9dcbebb32" kindref="member">ConfigKey::Enabled</ref>,<sp/>std::make_shared&lt;ConfigData&lt;bool&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;Enabled&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1afe9cbb8fa09567e4af3d0ea7e6e95459" kindref="member">Device::setEnabled</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a779b6edba5e8f5979dcb72ab2a190ac7" kindref="member">Device::isEnabledByDefault</ref>)},</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac6bea395f71bea36062bb602746247c2" kindref="member">ConfigKey::DisableEventsOnExternalMouse</ref>,<sp/>std::make_shared&lt;ConfigData&lt;bool&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;DisableEventsOnExternalMouse&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1aa005a77c58f028d1981c8fff0bbd9ded" kindref="member">Device::setDisableEventsOnExternalMouse</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1afb3f5132a52109b534d14384cbfff9d1" kindref="member">Device::disableEventsOnExternalMouseEnabledByDefault</ref>)},</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397acd5d8803eaa45145192f16041a365ee8" kindref="member">ConfigKey::LeftHanded</ref>,<sp/>std::make_shared&lt;ConfigData&lt;bool&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;LeftHanded&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1aba070f37c95a1e956b5c81a836e26767" kindref="member">Device::setLeftHanded</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a24343cc07c2bc43ee2c3b9731484bcec" kindref="member">Device::leftHandedEnabledByDefault</ref>)},</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a424408fe6cf1ba52184ee97de079cac9" kindref="member">ConfigKey::DisableWhileTyping</ref>,<sp/>std::make_shared&lt;ConfigData&lt;bool&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;DisableWhileTyping&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a3f2269c7fd1d946c03abadeac9c700fb" kindref="member">Device::setDisableWhileTyping</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a4a3512c0800160f15e4c78e5af369755" kindref="member">Device::disableWhileTypingEnabledByDefault</ref>)},</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a8bcf24de521b2a74074d3ce787441755" kindref="member">ConfigKey::PointerAcceleration</ref>,<sp/>std::make_shared&lt;ConfigData&lt;QString&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;PointerAcceleration&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1acfd64ffc0740f6864f68a6ef74988f34" kindref="member">Device::setPointerAccelerationFromString</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a789cfeaa5686ee1d44582d6759494504" kindref="member">Device::defaultPointerAccelerationToString</ref>)},</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aea11b95b1402f5219e60e0bde653d10e" kindref="member">ConfigKey::PointerAccelerationProfile</ref>,<sp/>std::make_shared&lt;ConfigData&lt;quint32&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;PointerAccelerationProfile&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1afd47899edd36e55b3304c9584359fc14" kindref="member">Device::setPointerAccelerationProfileFromInt</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a626700a00bf5969f3c08490a074d04dc" kindref="member">Device::defaultPointerAccelerationProfileToInt</ref>)},</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac864a03c896dbf40378b4e46694b8844" kindref="member">ConfigKey::TapToClick</ref>,<sp/>std::make_shared&lt;ConfigData&lt;bool&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;TapToClick&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a979ca7dc7fcc7cafd848060f01455846" kindref="member">Device::setTapToClick</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a4346ba49173bf2cba7b119f5aab7ec04" kindref="member">Device::tapToClickEnabledByDefault</ref>)},</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a60acb1e4f527b90d634a97120c54d1d7" kindref="member">ConfigKey::TapAndDrag</ref>,<sp/>std::make_shared&lt;ConfigData&lt;bool&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;TapAndDrag&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a3995f96fcc1f8b88b85bf1f0560f5b0f" kindref="member">Device::setTapAndDrag</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a0c456233d9976b1fa7d4fb1226f3e93a" kindref="member">Device::tapAndDragEnabledByDefault</ref>)},</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aa6ba5058e45884c3b0639395b568d596" kindref="member">ConfigKey::TapDragLock</ref>,<sp/>std::make_shared&lt;ConfigData&lt;bool&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;TapDragLock&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a3c1d72b52c361320a74929144dc05cd7" kindref="member">Device::setTapDragLock</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a1b1ac0c449026f431ba1166fca7176a0" kindref="member">Device::tapDragLockEnabledByDefault</ref>)},</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a0b39e040cf0c7683085aa71d07dc366f" kindref="member">ConfigKey::MiddleButtonEmulation</ref>,<sp/>std::make_shared&lt;ConfigData&lt;bool&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MiddleButtonEmulation&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a6fd91f6d5e85749983a5a56ef533ba65" kindref="member">Device::setMiddleEmulation</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1ae1705271ca48c97496bec2dad0a668e1" kindref="member">Device::middleEmulationEnabledByDefault</ref>)},</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a215dd27493aa6d6e4cecb22d069577bd" kindref="member">ConfigKey::LmrTapButtonMap</ref>,<sp/>std::make_shared&lt;ConfigData&lt;bool&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;LmrTapButtonMap&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a3563e689957b5dcc6f23dbf89ea43a37" kindref="member">Device::setLmrTapButtonMap</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1aeb4771db8a7d9a07e754bc2f5621bcbe" kindref="member">Device::lmrTapButtonMapEnabledByDefault</ref>)},</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a9c06bef418b1b3bfd8e716ce5609040e" kindref="member">ConfigKey::NaturalScroll</ref>,<sp/>std::make_shared&lt;ConfigData&lt;bool&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;NaturalScroll&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a12dc4e7acd6b2f9eee16629bbbb5cbb5" kindref="member">Device::setNaturalScroll</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1abfd5204a14812fc7eccb0461fc1fb2a1" kindref="member">Device::naturalScrollEnabledByDefault</ref>)},</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac95d6c82d9f67daaf8eaa7ee7b028beb" kindref="member">ConfigKey::ScrollMethod</ref>,<sp/>std::make_shared&lt;ConfigData&lt;quint32&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;ScrollMethod&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a72c560f47c4109997a558625145a9abb" kindref="member">Device::activateScrollMethodFromInt</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a0e463d6fb6329397e6a7e981db54822c" kindref="member">Device::defaultScrollMethodToInt</ref>)},</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a967c70cd81088d5b970460f1bf759af1" kindref="member">ConfigKey::ScrollButton</ref>,<sp/>std::make_shared&lt;ConfigData&lt;quint32&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;ScrollButton&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a362f2fe4d9b78730006b9a5e14b2829f" kindref="member">Device::setScrollButton</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a157f2eaf68aea15b3e47b61fe289bc53" kindref="member">Device::defaultScrollButton</ref>)},</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a5e353826040f1deca2868f5c91d54f20" kindref="member">ConfigKey::ClickMethod</ref>,<sp/>std::make_shared&lt;ConfigData&lt;quint32&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;ClickMethod&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1aceaa04c7ebc4fe079dbeb17cc2b272ec" kindref="member">Device::setClickMethodFromInt</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a11d2fea7454d598c214a8d79a2cc8256" kindref="member">Device::defaultClickMethodToInt</ref>)},</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397af126a071f7cb4398a9bf2fc3ed8f61e7" kindref="member">ConfigKey::ScrollFactor</ref>,<sp/>std::make_shared&lt;ConfigData&lt;qreal&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;ScrollFactor&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a46c6d1f8399f3c09dab3b174224888a7" kindref="member">Device::setScrollFactor</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1abb62753994d3586d5e0d80b12db4a58b" kindref="member">Device::scrollFactorDefault</ref>)},</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aabbd64f40c34c537d3a571af068fce29" kindref="member">ConfigKey::Orientation</ref>,<sp/>std::make_shared&lt;ConfigData&lt;DeviceOrientation&gt;&gt;()},</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397af6147c9c9b908be9b52803698be57ad2" kindref="member">ConfigKey::Calibration</ref>,<sp/>std::make_shared&lt;ConfigData&lt;CalibrationMatrix&gt;&gt;()},</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a2f281fd8ff55314a5b68e29b4316f6b4" kindref="member">ConfigKey::TabletToolPressureCurve</ref>,<sp/>std::make_shared&lt;ConfigData&lt;QString&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;TabletToolPressureCurve&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a45c0187a601d70d561e03a203e9dc2b0" kindref="member">Device::setPressureCurve</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a0a8ad458e720e36f0ba839f0a3952af4" kindref="member">Device::defaultPressureCurve</ref>)},</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a5fd7f823f0d2e8e6122f4bdc092a96b8" kindref="member">ConfigKey::OutputName</ref>,<sp/>std::make_shared&lt;ConfigData&lt;QString&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;OutputName&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a6ef85624f2379730b1e953a5c03e99ac" kindref="member">Device::setOutputName</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a25e06b631cc6570797cbd6ca9f478ef8" kindref="member">Device::defaultOutputName</ref>)},</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a9610c3da9431dda497d42a716148a987" kindref="member">ConfigKey::OutputArea</ref>,<sp/>std::make_shared&lt;ConfigData&lt;QRectF&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;OutputArea&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a2a2a7e9cbd0d24c14e77109c3c76e08d" kindref="member">Device::setOutputArea</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1ad085fa1cc1af1105a0949d256595ef54" kindref="member">Device::defaultOutputArea</ref>)},</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a94dc42cfaa02318976d69c546cd48143" kindref="member">ConfigKey::MapToWorkspace</ref>,<sp/>std::make_shared&lt;ConfigData&lt;bool&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MapToWorkspace&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1ab94f89c3312dc91bd9c6de481b70b438" kindref="member">Device::setMapToWorkspace</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1af3c47d018d86f63940116c800e2bb2c2" kindref="member">Device::defaultMapToWorkspace</ref>)},</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aa2a566acb8ba59a37e3dffc7336c9156" kindref="member">ConfigKey::TabletToolPressureRangeMin</ref>,<sp/>std::make_shared&lt;ConfigData&lt;double&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;TabletToolPressureRangeMin&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1afa424832cca0d086a84bb26558c05142" kindref="member">Device::setPressureRangeMin</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1af9bc107ef1aad593d385c0b002b2707c" kindref="member">Device::defaultPressureRangeMin</ref>)},</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397adb7931d8e5b7c1bd0679915de017a2f5" kindref="member">ConfigKey::TabletToolPressureRangeMax</ref>,<sp/>std::make_shared&lt;ConfigData&lt;double&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;TabletToolPressureRangeMax&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1af770d6f337a4c4f1b962d6ee37b1d824" kindref="member">Device::setPressureRangeMax</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a166f507ce9d47885bab55af3e65aae0a" kindref="member">Device::defaultPressureRangeMax</ref>)},</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac05d9c06e9bdfc8fcda4f769a97271c3" kindref="member">ConfigKey::InputArea</ref>,<sp/>std::make_shared&lt;ConfigData&lt;QRectF&gt;&gt;(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;InputArea&quot;</highlight><highlight class="normal">),<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a3be4919b13e7f1bb7a7ab7edfb0cd28e" kindref="member">Device::setInputArea</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1a7febeb418f7dee12aeca4c5d81da5d99" kindref="member">Device::defaultInputArea</ref>)},</highlight></codeline>
<codeline lineno="262"><highlight class="normal">};</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal">QMatrix4x4<sp/>getMatrix(libinput_device<sp/>*device,<sp/>std::function&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(libinput_device<sp/>*,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[6])&gt;<sp/>getter)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>matrix[6];</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!getter(device,<sp/>matrix))<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QMatrix4x4{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix[0],<sp/>matrix[1],<sp/>matrix[2],<sp/>0.0f,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix[3],<sp/>matrix[4],<sp/>matrix[5],<sp/>0.0f,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f};</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setOrientedCalibrationMatrix(libinput_device<sp/>*device,<sp/>QMatrix4x4<sp/>matrix,<sp/>Qt::ScreenOrientation<sp/>orientation)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>90<sp/>deg<sp/>cw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>portraitMatrix{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>-1.0f,<sp/>1.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>180<sp/>deg<sp/>cw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>invertedLandscapeMatrix{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>-1.0f,<sp/>1.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f};</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>270<sp/>deg<sp/>cw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>invertedPortraitMatrix{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f};</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(orientation)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::PortraitOrientation:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>*=<sp/>portraitMatrix;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::InvertedLandscapeOrientation:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>*=<sp/>invertedLandscapeMatrix;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::InvertedPortraitOrientation:</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>*=<sp/>invertedPortraitMatrix;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::PrimaryOrientation:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::LandscapeOrientation:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>data[6]{matrix(0,<sp/>0),<sp/>matrix(0,<sp/>1),<sp/>matrix(0,<sp/>2),<sp/>matrix(1,<sp/>0),<sp/>matrix(1,<sp/>1),<sp/>matrix(1,<sp/>2)};</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_device_config_calibration_set_matrix(device,<sp/>data)<sp/>==<sp/>LIBINPUT_CONFIG_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="class_k_win_1_1_lib_input_1_1_device_1adf46be20b1e5c2d6e17636494d88f563" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_device_1adf46be20b1e5c2d6e17636494d88f563" kindref="member">Device::Device</ref>(libinput_device<sp/>*<ref refid="class_k_win_1_1_lib_input_1_1_device_1ae45b841848f428fed572bb576829d47e" kindref="member">device</ref>,<sp/>QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_input_device_1aa28bcff91a76e7c2b405dc6cc895cde6" kindref="member">InputDevice</ref>(parent)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_device(<ref refid="class_k_win_1_1_lib_input_1_1_device_1ae45b841848f428fed572bb576829d47e" kindref="member">device</ref>)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_keyboard(libinput_device_has_capability(m_device,<sp/>LIBINPUT_DEVICE_CAP_KEYBOARD))</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_pointer(libinput_device_has_capability(m_device,<sp/>LIBINPUT_DEVICE_CAP_POINTER))</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_touch(libinput_device_has_capability(m_device,<sp/>LIBINPUT_DEVICE_CAP_TOUCH))</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tabletTool(libinput_device_has_capability(m_device,<sp/>LIBINPUT_DEVICE_CAP_TABLET_TOOL))</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tabletPad(libinput_device_has_capability(m_device,<sp/>LIBINPUT_DEVICE_CAP_TABLET_PAD))</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsGesture(libinput_device_has_capability(m_device,<sp/>LIBINPUT_DEVICE_CAP_GESTURE))</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_switch(libinput_device_has_capability(m_device,<sp/>LIBINPUT_DEVICE_CAP_SWITCH))</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_lidSwitch(m_switch<sp/>?<sp/>libinput_device_switch_has_switch(m_device,<sp/>LIBINPUT_SWITCH_LID)<sp/>:<sp/>false)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tabletSwitch(m_switch<sp/>?<sp/>libinput_device_switch_has_switch(m_device,<sp/>LIBINPUT_SWITCH_TABLET_MODE)<sp/>:<sp/>false)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_touchpad(m_pointer<sp/>&amp;&amp;<sp/>udev_device_get_property_value(libinput_device_get_udev_device(m_device),<sp/></highlight><highlight class="stringliteral">&quot;ID_INPUT_TOUCHPAD&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_name(QString::fromLocal8Bit(libinput_device_get_name(m_device)))</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_sysName(QString::fromLocal8Bit(libinput_device_get_sysname(m_device)))</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_sysPath(QString::fromLocal8Bit(udev_device_get_syspath(libinput_device_get_udev_device(m_device))))</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_outputName(QString::fromLocal8Bit(libinput_device_get_output_name(m_device)))</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_product(libinput_device_get_id_product(m_device))</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_vendor(libinput_device_get_id_vendor(m_device))</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tapFingerCount(libinput_device_config_tap_get_finger_count(m_device))</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_defaultTapButtonMap(libinput_device_config_tap_get_default_button_map(m_device))</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tapButtonMap(libinput_device_config_tap_get_button_map(m_device))</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tapToClickEnabledByDefault(true)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tapToClick(libinput_device_config_tap_get_enabled(m_device))</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tapAndDragEnabledByDefault(true)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tapAndDrag(libinput_device_config_tap_get_drag_enabled(m_device))</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tapDragLockEnabledByDefault(libinput_device_config_tap_get_default_drag_lock_enabled(m_device))</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tapDragLock(libinput_device_config_tap_get_drag_lock_enabled(m_device))</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsDisableWhileTyping(libinput_device_config_dwt_is_available(m_device))</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsPointerAcceleration(libinput_device_config_accel_is_available(m_device))</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsLeftHanded(libinput_device_config_left_handed_is_available(m_device))</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsCalibrationMatrix(libinput_device_config_calibration_has_matrix(m_device))</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsDisableEvents(libinput_device_config_send_events_get_modes(m_device)<sp/>&amp;<sp/>LIBINPUT_CONFIG_SEND_EVENTS_DISABLED)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsDisableEventsOnExternalMouse(libinput_device_config_send_events_get_modes(m_device)<sp/>&amp;<sp/>LIBINPUT_CONFIG_SEND_EVENTS_DISABLED_ON_EXTERNAL_MOUSE)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsMiddleEmulation(libinput_device_config_middle_emulation_is_available(m_device))</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsNaturalScroll(libinput_device_config_scroll_has_natural_scroll(m_device))</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportedScrollMethods(libinput_device_config_scroll_get_methods(m_device))</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_leftHandedEnabledByDefault(libinput_device_config_left_handed_get_default(m_device))</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_middleEmulationEnabledByDefault(libinput_device_config_middle_emulation_get_default_enabled(m_device)<sp/>==<sp/>LIBINPUT_CONFIG_MIDDLE_EMULATION_ENABLED)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_naturalScrollEnabledByDefault(libinput_device_config_scroll_get_default_natural_scroll_enabled(m_device))</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_defaultScrollMethod(libinput_device_config_scroll_get_default_method(m_device))</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_defaultScrollButton(libinput_device_config_scroll_get_default_button(m_device))</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_disableWhileTypingEnabledByDefault(libinput_device_config_dwt_get_default_enabled(m_device))</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_disableWhileTyping(m_supportsDisableWhileTyping<sp/>?<sp/>libinput_device_config_dwt_get_enabled(m_device)<sp/>==<sp/>LIBINPUT_CONFIG_DWT_ENABLED<sp/>:<sp/>false)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_middleEmulation(libinput_device_config_middle_emulation_get_enabled(m_device)<sp/>==<sp/>LIBINPUT_CONFIG_MIDDLE_EMULATION_ENABLED)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_leftHanded(m_supportsLeftHanded<sp/>?<sp/>libinput_device_config_left_handed_get(m_device)<sp/>:<sp/>false)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_naturalScroll(m_supportsNaturalScroll<sp/>?<sp/>libinput_device_config_scroll_get_natural_scroll_enabled(m_device)<sp/>:<sp/>false)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_scrollMethod(libinput_device_config_scroll_get_method(m_device))</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_scrollButton(libinput_device_config_scroll_get_button(m_device))</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_defaultPointerAcceleration(libinput_device_config_accel_get_default_speed(m_device))</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_pointerAcceleration(libinput_device_config_accel_get_speed(m_device))</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_scrollFactor(1.0)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportedPointerAccelerationProfiles(libinput_device_config_accel_get_profiles(m_device))</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_defaultPointerAccelerationProfile(libinput_device_config_accel_get_default_profile(m_device))</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_pointerAccelerationProfile(libinput_device_config_accel_get_profile(m_device))</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_enabled(m_supportsDisableEvents<sp/>?<sp/>(libinput_device_config_send_events_get_mode(m_device)<sp/>&amp;<sp/>LIBINPUT_CONFIG_SEND_EVENTS_DISABLED)<sp/>==<sp/>0<sp/>:<sp/>true)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_disableEventsOnExternalMouseEnabledByDefault(m_supportsDisableEventsOnExternalMouse<sp/>&amp;&amp;<sp/>(libinput_device_config_send_events_get_default_mode(m_device)<sp/>&amp;<sp/>LIBINPUT_CONFIG_SEND_EVENTS_DISABLED_ON_EXTERNAL_MOUSE))</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_disableEventsOnExternalMouse(m_supportsDisableEventsOnExternalMouse<sp/>&amp;&amp;<sp/>(libinput_device_config_send_events_get_mode(m_device)<sp/>&amp;<sp/>LIBINPUT_CONFIG_SEND_EVENTS_DISABLED_ON_EXTERNAL_MOUSE))</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_config()</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_defaultCalibrationMatrix(getMatrix(m_device,<sp/>&amp;libinput_device_config_calibration_get_default_matrix))</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_calibrationMatrix(getMatrix(m_device,<sp/>&amp;libinput_device_config_calibration_get_matrix))</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_pressureCurve(<ref refid="class_k_win_1_1_lib_input_1_1_device_1a7b4a616cfa82b59b87e6d37e2114f371" kindref="member">deserializePressureCurve</ref>(<ref refid="class_k_win_1_1_lib_input_1_1_device_1a0a8ad458e720e36f0ba839f0a3952af4" kindref="member">defaultPressureCurve</ref>()))</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportedClickMethods(libinput_device_config_click_get_methods(m_device))</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_defaultClickMethod(libinput_device_config_click_get_default_method(m_device))</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_clickMethod(libinput_device_config_click_get_method(m_device))</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_outputArea(s_identityRect)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_supportsPressureRange(false)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_pressureRangeMin(0.0)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_pressureRangeMax(1.0)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_defaultPressureRangeMin(0.0)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_defaultPressureRangeMax(1.0)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_inputArea(s_identityRect)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>libinput_device_ref(m_device);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>libinput_device_set_user_data(m_device,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_device_get_size(m_device,<sp/>&amp;width,<sp/>&amp;height)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>QSizeF(width,<sp/>height);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pointer)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x120<sp/>is<sp/>the<sp/>first<sp/>joystick<sp/>Button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>button<sp/>=<sp/>BTN_LEFT;<sp/>button<sp/>&lt;<sp/>0x120;<sp/>++button)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_device_pointer_has_button(m_device,<sp/>button))<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_supportedButtons<sp/>|=<sp/><ref refid="namespace_k_win_1af6793b7f4fe2ec8bb24230b47c9dc66b" kindref="member">buttonToQtMouseButton</ref>(button);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_keyboard)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_alphaNumericKeyboard<sp/>=<sp/>checkAlphaNumericKeyboard(m_device);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_supportsCalibrationMatrix<sp/>&amp;&amp;<sp/>m_calibrationMatrix<sp/>!=<sp/>m_defaultCalibrationMatrix)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>matrix[]{m_defaultCalibrationMatrix(0,<sp/>0),</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_defaultCalibrationMatrix(0,<sp/>1),</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_defaultCalibrationMatrix(0,<sp/>2),</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_defaultCalibrationMatrix(1,<sp/>0),</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_defaultCalibrationMatrix(1,<sp/>1),</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_defaultCalibrationMatrix(1,<sp/>2)};</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinput_device_config_calibration_set_matrix(m_device,<sp/>matrix);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_calibrationMatrix<sp/>=<sp/>m_defaultCalibrationMatrix;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_lib_input_1_1_device_1a99eae42b4d7cc2a8841c5692c7c8bab1" kindref="member">supportsInputArea</ref>()<sp/>&amp;&amp;<sp/>m_inputArea<sp/>!=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a7febeb418f7dee12aeca4c5d81da5d99" kindref="member">defaultInputArea</ref>())<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_LIBINPUT_INPUT_AREA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>libinput_config_area_rectangle<sp/>rect{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.x1<sp/>=<sp/>m_inputArea.topLeft().x(),</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y1<sp/>=<sp/>m_inputArea.topLeft().y(),</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.x2<sp/>=<sp/>m_inputArea.bottomRight().x(),</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y2<sp/>=<sp/>m_inputArea.bottomRight().y(),</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinput_device_config_area_set_rectangle(m_device,<sp/>&amp;rect);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>libinput_device_group<sp/>*<ref refid="class_k_win_1_1_lib_input_1_1_device_1adb6eb52cdfda19e5e88f2ae8dca0f404" kindref="member">group</ref><sp/>=<sp/>libinput_device_get_device_group(<ref refid="class_k_win_1_1_lib_input_1_1_device_1ae45b841848f428fed572bb576829d47e" kindref="member">device</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>m_deviceGroupId<sp/>=<sp/>QCryptographicHash::hash(QString::asprintf(</highlight><highlight class="stringliteral">&quot;%p&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1adb6eb52cdfda19e5e88f2ae8dca0f404" kindref="member">group</ref>).toLatin1(),<sp/>QCryptographicHash::Sha1).toBase64();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>QDBusConnection::sessionBus().registerObject(QStringLiteral(</highlight><highlight class="stringliteral">&quot;/org/kde/KWin/InputDevice/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>m_sysName,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;org.kde.KWin.InputDevice&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QDBusConnection::ExportAllProperties);</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="class_k_win_1_1_lib_input_1_1_device_1ae43154fa696060063c8c9c90be2ac214" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_device_1ae43154fa696060063c8c9c90be2ac214" kindref="member">Device::~Device</ref>()</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>QDBusConnection::sessionBus().unregisterObject(QStringLiteral(</highlight><highlight class="stringliteral">&quot;/org/kde/KWin/InputDevice/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>m_sysName);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>libinput_device_set_user_data(m_device,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>libinput_device_unref(m_device);</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="class_k_win_1_1_lib_input_1_1_device_1a7aed37a42f19931cb87007fb35f5038a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_device_1adf46be20b1e5c2d6e17636494d88f563" kindref="member">Device</ref><sp/>*<ref refid="class_k_win_1_1_lib_input_1_1_device_1a7aed37a42f19931cb87007fb35f5038a" kindref="member">Device::get</ref>(libinput_device<sp/>*native)</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_lib_input_1_1_device_1adf46be20b1e5c2d6e17636494d88f563" kindref="member">Device</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(libinput_device_get_user_data(native));</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Device::writeEntry(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397" kindref="member">ConfigKey</ref><sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;value)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_config.isValid())<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_loading)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>s_configData.find(key);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(it<sp/>!=<sp/>s_configData.end());</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>m_config.writeEntry(it.value()-&gt;key.constData(),<sp/>value);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>m_config.sync();</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="class_k_win_1_1_lib_input_1_1_device_1a567eef4285b0be6db85a0dc58a4e39f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a567eef4285b0be6db85a0dc58a4e39f4" kindref="member">Device::loadConfiguration</ref>()</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_config.isValid()<sp/>&amp;&amp;<sp/>!m_defaultConfig.isValid())<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>m_loading<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>s_configData.begin(),<sp/>end<sp/>=<sp/>s_configData.end();<sp/>it<sp/>!=<sp/>end;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;read(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>m_config);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>m_loading<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="class_k_win_1_1_lib_input_1_1_device_1a052196e208e7ace0af32bcd17eaba1a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a052196e208e7ace0af32bcd17eaba1a0" kindref="member">Device::setPointerAcceleration</ref>(qreal<sp/>acceleration)</highlight></codeline>
<codeline lineno="489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_supportsPointerAcceleration)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>acceleration<sp/>=<sp/>std::clamp(acceleration,<sp/>-1.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_device_config_accel_set_speed(m_device,<sp/>acceleration)<sp/>==<sp/>LIBINPUT_CONFIG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pointerAcceleration<sp/>!=<sp/>acceleration)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointerAcceleration<sp/>=<sp/>acceleration;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a4a9169a9ef1cbf463c738a224b877a5d" kindref="member">pointerAccelerationChanged</ref>();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a8bcf24de521b2a74074d3ce787441755" kindref="member">ConfigKey::PointerAcceleration</ref>,<sp/>QString::number(acceleration,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>3));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="class_k_win_1_1_lib_input_1_1_device_1a362f2fe4d9b78730006b9a5e14b2829f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a362f2fe4d9b78730006b9a5e14b2829f" kindref="member">Device::setScrollButton</ref>(quint32<sp/>button)</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(m_supportedScrollMethods<sp/>&amp;<sp/>LIBINPUT_CONFIG_SCROLL_ON_BUTTON_DOWN))<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_device_config_scroll_set_button(m_device,<sp/>button)<sp/>==<sp/>LIBINPUT_CONFIG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scrollButton<sp/>!=<sp/>button)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scrollButton<sp/>=<sp/>button;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a967c70cd81088d5b970460f1bf759af1" kindref="member">ConfigKey::ScrollButton</ref>,<sp/>m_scrollButton);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a1eba558c36bf5dc350eef15d3e2d3887" kindref="member">scrollButtonChanged</ref>();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="class_k_win_1_1_lib_input_1_1_device_1a5dd37ab1a72656d0d0acbdaf0d65e55f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a5dd37ab1a72656d0d0acbdaf0d65e55f" kindref="member">Device::setPointerAccelerationProfile</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>libinput_config_accel_profile<sp/>profile)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(m_supportedPointerAccelerationProfiles<sp/>&amp;<sp/>profile))<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!set)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile<sp/>=<sp/>(profile<sp/>==<sp/>LIBINPUT_CONFIG_ACCEL_PROFILE_FLAT)<sp/>?<sp/>LIBINPUT_CONFIG_ACCEL_PROFILE_ADAPTIVE<sp/>:<sp/>LIBINPUT_CONFIG_ACCEL_PROFILE_FLAT;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(m_supportedPointerAccelerationProfiles<sp/>&amp;<sp/>profile))<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_device_config_accel_set_profile(m_device,<sp/>profile)<sp/>==<sp/>LIBINPUT_CONFIG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pointerAccelerationProfile<sp/>!=<sp/>profile)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointerAccelerationProfile<sp/>=<sp/>profile;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ae7de4147ad02e831ec65cccf6117604b" kindref="member">pointerAccelerationProfileChanged</ref>();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aea11b95b1402f5219e60e0bde653d10e" kindref="member">ConfigKey::PointerAccelerationProfile</ref>,<sp/>(quint32)profile);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="class_k_win_1_1_lib_input_1_1_device_1a68d9de282eb6960066d36a3e56f51251" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a68d9de282eb6960066d36a3e56f51251" kindref="member">Device::setClickMethod</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>libinput_config_click_method<sp/>method)</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(m_supportedClickMethods<sp/>&amp;<sp/>method))<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!set)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>method<sp/>=<sp/>(method<sp/>==<sp/>LIBINPUT_CONFIG_CLICK_METHOD_BUTTON_AREAS)<sp/>?<sp/>LIBINPUT_CONFIG_CLICK_METHOD_CLICKFINGER<sp/>:<sp/>LIBINPUT_CONFIG_CLICK_METHOD_BUTTON_AREAS;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(m_supportedClickMethods<sp/>&amp;<sp/>method))<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_device_config_click_set_method(m_device,<sp/>method)<sp/>==<sp/>LIBINPUT_CONFIG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_clickMethod<sp/>!=<sp/>method)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_clickMethod<sp/>=<sp/>method;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1aed7920e104bf37e5d96cc77387dba2a3" kindref="member">clickMethodChanged</ref>();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a5e353826040f1deca2868f5c91d54f20" kindref="member">ConfigKey::ClickMethod</ref>,<sp/>(quint32)method);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="class_k_win_1_1_lib_input_1_1_device_1a0e956431ff5c5b0bb15cc4681dcbb1f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a0e956431ff5c5b0bb15cc4681dcbb1f3" kindref="member">Device::setScrollMethod</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>libinput_config_scroll_method<sp/>method)</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(m_supportedScrollMethods<sp/>&amp;<sp/>method))<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isCurrent<sp/>=<sp/>m_scrollMethod<sp/>==<sp/>method;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!set)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isCurrent)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>method<sp/>=<sp/>LIBINPUT_CONFIG_SCROLL_NO_SCROLL;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isCurrent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_device_config_scroll_set_method(m_device,<sp/>method)<sp/>==<sp/>LIBINPUT_CONFIG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isCurrent)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scrollMethod<sp/>=<sp/>method;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a4f7d32272cd2325cd32fc763d0c1a401" kindref="member">scrollMethodChanged</ref>();</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac95d6c82d9f67daaf8eaa7ee7b028beb" kindref="member">ConfigKey::ScrollMethod</ref>,<sp/>(quint32)method);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584" refid="class_k_win_1_1_lib_input_1_1_device_1a3563e689957b5dcc6f23dbf89ea43a37" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a3563e689957b5dcc6f23dbf89ea43a37" kindref="member">Device::setLmrTapButtonMap</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set)</highlight></codeline>
<codeline lineno="585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>libinput_config_tap_button_map<sp/>map<sp/>=<sp/>set<sp/>?<sp/>LIBINPUT_CONFIG_TAP_MAP_LMR<sp/>:<sp/>LIBINPUT_CONFIG_TAP_MAP_LRM;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_tapFingerCount<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!set)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map<sp/>=<sp/>LIBINPUT_CONFIG_TAP_MAP_LRM;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_device_config_tap_set_button_map(m_device,<sp/>map)<sp/>==<sp/>LIBINPUT_CONFIG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_tapButtonMap<sp/>!=<sp/>map)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tapButtonMap<sp/>=<sp/>map;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a215dd27493aa6d6e4cecb22d069577bd" kindref="member">ConfigKey::LmrTapButtonMap</ref>,<sp/>set);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ab442c6faf227f6fe8f759be454ecc994" kindref="member">tapButtonMapChanged</ref>();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="class_k_win_1_1_lib_input_1_1_device_1adb6eb52cdfda19e5e88f2ae8dca0f404" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_k_win_1_1_lib_input_1_1_device_1adb6eb52cdfda19e5e88f2ae8dca0f404" kindref="member">Device::group</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="605"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_device_get_device_group(m_device);</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="class_k_win_1_1_lib_input_1_1_device_1a7939ee8a56213c144207841e8ebfc458" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a7f169002e07b5e5a6947de9d270f1ff7" kindref="member">Device::tabletPadButtonCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="610"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_device_tablet_pad_get_num_buttons(m_device);</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="class_k_win_1_1_lib_input_1_1_device_1a52697f73b8e38dd8fb3f79f75325cf82" refkind="member"><highlight class="normal">QList&lt;InputDeviceTabletPadModeGroup&gt;<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a52697f73b8e38dd8fb3f79f75325cf82" kindref="member">Device::modeGroups</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="615"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;InputDeviceTabletPadModeGroup&gt;<sp/>result;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numGroups<sp/>=<sp/>libinput_device_tablet_pad_get_num_mode_groups(m_device);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>groupIndex<sp/>=<sp/>0;<sp/>groupIndex<sp/>&lt;<sp/>numGroups;<sp/>++groupIndex)<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinput_tablet_pad_mode_group<sp/>*<ref refid="class_k_win_1_1_lib_input_1_1_device_1adb6eb52cdfda19e5e88f2ae8dca0f404" kindref="member">group</ref><sp/>=<sp/>libinput_device_tablet_pad_get_mode_group(m_device,<sp/>groupIndex);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modeCount<sp/>=<sp/>libinput_tablet_pad_mode_group_get_num_modes(<ref refid="class_k_win_1_1_lib_input_1_1_device_1adb6eb52cdfda19e5e88f2ae8dca0f404" kindref="member">group</ref>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;int&gt;<sp/>buttons;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalButtons<sp/>=<sp/>libinput_device_tablet_pad_get_num_buttons(m_device);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buttonIndex<sp/>=<sp/>0;<sp/>buttonIndex<sp/>&lt;<sp/>totalButtons;<sp/>++buttonIndex)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_tablet_pad_mode_group_has_button(<ref refid="class_k_win_1_1_lib_input_1_1_device_1adb6eb52cdfda19e5e88f2ae8dca0f404" kindref="member">group</ref>,<sp/>buttonIndex))<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buttons<sp/>&lt;&lt;<sp/>buttonIndex;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;int&gt;<sp/>rings;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalRings<sp/>=<sp/>libinput_device_tablet_pad_get_num_rings(m_device);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ringIndex<sp/>=<sp/>0;<sp/>ringIndex<sp/>&lt;<sp/>totalRings;<sp/>++ringIndex)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_tablet_pad_mode_group_has_ring(<ref refid="class_k_win_1_1_lib_input_1_1_device_1adb6eb52cdfda19e5e88f2ae8dca0f404" kindref="member">group</ref>,<sp/>ringIndex))<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rings<sp/>&lt;&lt;<sp/>ringIndex;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;int&gt;<sp/>strips;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalStrips<sp/>=<sp/>libinput_device_tablet_pad_get_num_strips(m_device);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stripIndex<sp/>=<sp/>0;<sp/>stripIndex<sp/>&lt;<sp/>totalStrips;<sp/>++stripIndex)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_tablet_pad_mode_group_has_strip(<ref refid="class_k_win_1_1_lib_input_1_1_device_1adb6eb52cdfda19e5e88f2ae8dca0f404" kindref="member">group</ref>,<sp/>stripIndex))<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strips<sp/>&lt;&lt;<sp/>stripIndex;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_input_device_tablet_pad_mode_group" kindref="compound">InputDeviceTabletPadModeGroup</ref>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modeCount<sp/>=<sp/>modeCount,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.buttons<sp/>=<sp/>buttons,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rings<sp/>=<sp/>rings,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.strips<sp/>=<sp/>strips,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658" refid="device_8cpp_1a6ecac60f60e33e16863345a4893306cd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONFIG(method,<sp/>condition,<sp/>function,<sp/>variable,<sp/>key)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="659"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>void<sp/>Device::method(bool<sp/>set)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="660"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="661"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(condition)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="662"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="663"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="664"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(libinput_device_config_##function(m_device,<sp/>set)<sp/>==<sp/>LIBINPUT_CONFIG_STATUS_SUCCESS)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="665"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(m_##variable<sp/>!=<sp/>set)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="666"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_##variable<sp/>=<sp/>set;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="667"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(ConfigKey::key,<sp/>m_##variable);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="668"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>variable##Changed();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="669"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="670"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="671"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><ref refid="device_8cpp_1a6ecac60f60e33e16863345a4893306cd" kindref="member">CONFIG</ref>(setLeftHanded,<sp/>!m_supportsLeftHanded,<sp/>left_handed_set,<sp/>leftHanded,<sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397acd5d8803eaa45145192f16041a365ee8" kindref="member">LeftHanded</ref>)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><ref refid="device_8cpp_1a6ecac60f60e33e16863345a4893306cd" kindref="member">CONFIG</ref>(setNaturalScroll,<sp/>!m_supportsNaturalScroll,<sp/>scroll_set_natural_scroll_enabled,<sp/>naturalScroll,<sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a9c06bef418b1b3bfd8e716ce5609040e" kindref="member">NaturalScroll</ref>)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>CONFIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONFIG(method,<sp/>condition,<sp/>function,<sp/>enum,<sp/>variable,<sp/>key)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="679"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>void<sp/>Device::method(bool<sp/>set)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="680"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="681"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(condition)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="682"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="683"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="684"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(libinput_device_config_##function(m_device,<sp/>set<sp/>?<sp/>LIBINPUT_CONFIG_##enum##_ENABLED<sp/>:<sp/>LIBINPUT_CONFIG_##enum##_DISABLED)<sp/>==<sp/>LIBINPUT_CONFIG_STATUS_SUCCESS)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="685"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(m_##variable<sp/>!=<sp/>set)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="686"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_##variable<sp/>=<sp/>set;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="687"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(ConfigKey::key,<sp/>m_##variable);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="688"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>variable##Changed();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="689"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="690"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="691"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><ref refid="device_8cpp_1a6ecac60f60e33e16863345a4893306cd" kindref="member">CONFIG</ref>(setDisableWhileTyping,<sp/>!m_supportsDisableWhileTyping,<sp/>dwt_set_enabled,<sp/>DWT,<sp/>disableWhileTyping,<sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a424408fe6cf1ba52184ee97de079cac9" kindref="member">DisableWhileTyping</ref>)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><ref refid="device_8cpp_1a6ecac60f60e33e16863345a4893306cd" kindref="member">CONFIG</ref>(setTapToClick,<sp/>m_tapFingerCount<sp/>==<sp/>0,<sp/>tap_set_enabled,<sp/>TAP,<sp/>tapToClick,<sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac864a03c896dbf40378b4e46694b8844" kindref="member">TapToClick</ref>)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><ref refid="device_8cpp_1a6ecac60f60e33e16863345a4893306cd" kindref="member">CONFIG</ref>(setTapAndDrag,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>tap_set_drag_enabled,<sp/>DRAG,<sp/>tapAndDrag,<sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a60acb1e4f527b90d634a97120c54d1d7" kindref="member">TapAndDrag</ref>)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><ref refid="device_8cpp_1a6ecac60f60e33e16863345a4893306cd" kindref="member">CONFIG</ref>(setTapDragLock,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>tap_set_drag_lock_enabled,<sp/>DRAG_LOCK,<sp/>tapDragLock,<sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aa6ba5058e45884c3b0639395b568d596" kindref="member">TapDragLock</ref>)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><ref refid="device_8cpp_1a6ecac60f60e33e16863345a4893306cd" kindref="member">CONFIG</ref>(setMiddleEmulation,<sp/>m_supportsMiddleEmulation<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>middle_emulation_set_enabled,<sp/>MIDDLE_EMULATION,<sp/>middleEmulation,<sp/><ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a0b39e040cf0c7683085aa71d07dc366f" kindref="member">MiddleButtonEmulation</ref>)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>CONFIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701" refid="class_k_win_1_1_lib_input_1_1_device_1afe9cbb8fa09567e4af3d0ea7e6e95459" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1afe9cbb8fa09567e4af3d0ea7e6e95459" kindref="member">Device::setEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set)</highlight></codeline>
<codeline lineno="702"><highlight class="normal">{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_supportsDisableEvents)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>enabledMode<sp/>=<sp/>(m_supportsDisableEventsOnExternalMouse<sp/>&amp;&amp;<sp/>m_disableEventsOnExternalMouse)<sp/>?<sp/>LIBINPUT_CONFIG_SEND_EVENTS_DISABLED_ON_EXTERNAL_MOUSE<sp/>:<sp/>LIBINPUT_CONFIG_SEND_EVENTS_ENABLED;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>set<sp/>?<sp/>enabledMode<sp/>:<sp/>LIBINPUT_CONFIG_SEND_EVENTS_DISABLED;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libinput_device_config_send_events_set_mode(m_device,<sp/>mode)<sp/>==<sp/>LIBINPUT_CONFIG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_enabled<sp/>!=<sp/>set)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_enabled<sp/>=<sp/>set;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a00d23a76e43b46dae9ec7aa9dcbebb32" kindref="member">ConfigKey::Enabled</ref>,<sp/>m_enabled);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a95ae4317415d9f9ce41cca2f3bfda67e" kindref="member">enabledChanged</ref>();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718" refid="class_k_win_1_1_lib_input_1_1_device_1aa005a77c58f028d1981c8fff0bbd9ded" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1aa005a77c58f028d1981c8fff0bbd9ded" kindref="member">Device::setDisableEventsOnExternalMouse</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_supportsDisableEventsOnExternalMouse)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>enabledMode<sp/>=<sp/>set<sp/>?<sp/>LIBINPUT_CONFIG_SEND_EVENTS_DISABLED_ON_EXTERNAL_MOUSE<sp/>:<sp/>LIBINPUT_CONFIG_SEND_EVENTS_ENABLED;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_enabled<sp/>||<sp/>libinput_device_config_send_events_set_mode(m_device,<sp/>enabledMode)<sp/>==<sp/>LIBINPUT_CONFIG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_disableEventsOnExternalMouse<sp/>!=<sp/>set)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_disableEventsOnExternalMouse<sp/>=<sp/>set;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac6bea395f71bea36062bb602746247c2" kindref="member">ConfigKey::DisableEventsOnExternalMouse</ref>,<sp/>m_disableEventsOnExternalMouse);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a39d521acf00e50ba34b865fc76b2d65f" kindref="member">disableEventsOnExternalMouseChanged</ref>();</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734" refid="class_k_win_1_1_lib_input_1_1_device_1a46c6d1f8399f3c09dab3b174224888a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a46c6d1f8399f3c09dab3b174224888a7" kindref="member">Device::setScrollFactor</ref>(qreal<sp/>factor)</highlight></codeline>
<codeline lineno="735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scrollFactor<sp/>!=<sp/>factor)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scrollFactor<sp/>=<sp/>factor;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397af126a071f7cb4398a9bf2fc3ed8f61e7" kindref="member">ConfigKey::ScrollFactor</ref>,<sp/>m_scrollFactor);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a5b8d916826b1528cc3d4b8a3755d29d4" kindref="member">scrollFactorChanged</ref>();</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="class_k_win_1_1_lib_input_1_1_device_1abe899540829b5ceb589e7d1dce34ad3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1abe899540829b5ceb589e7d1dce34ad3d" kindref="member">Device::setCalibrationMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;value)</highlight></codeline>
<codeline lineno="744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>matrix<sp/>=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a923c9e05e7ced5e0ca5f6932babffde8" kindref="member">deserializeMatrix</ref>(value);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_supportsCalibrationMatrix<sp/>||<sp/>m_calibrationMatrix<sp/>==<sp/>matrix)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setOrientedCalibrationMatrix(m_device,<sp/>matrix,<sp/>m_orientation))<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;float&gt;<sp/>list;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.reserve(16);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uchar<sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>4;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uchar<sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>4;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>&lt;&lt;<sp/>matrix(row,<sp/>col);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397af6147c9c9b908be9b52803698be57ad2" kindref="member">ConfigKey::Calibration</ref>,<sp/>list);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_calibrationMatrix<sp/>=<sp/>matrix;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1abec13e4f56e891f5d7121ed447e07617" kindref="member">calibrationMatrixChanged</ref>();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764" refid="class_k_win_1_1_lib_input_1_1_device_1a3261499896ec150cf7e5e34ce1a5c5ee" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a0a8ad458e720e36f0ba839f0a3952af4" kindref="member">Device::defaultPressureCurve</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="765"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>QEasingCurve<sp/>curve(QEasingCurve::Type::BezierSpline);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>curve.addCubicBezierSegment(QPointF{0.0f,<sp/>0.0f},<sp/>QPointF{1.0f,<sp/>1.0f},<sp/>QPointF{1.0f,<sp/>1.0f});</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a066857cf5a86be677c5c73b4049f8d3e" kindref="member">serializePressureCurve</ref>(curve);</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="class_k_win_1_1_lib_input_1_1_device_1a91c5e054c3e61bc64874da18cfa7351c" refkind="member"><highlight class="normal">QEasingCurve<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ad3f1f638dabeaf949b7b5b887faa8bbc" kindref="member">Device::pressureCurve</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="772"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pressureCurve;</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776" refid="class_k_win_1_1_lib_input_1_1_device_1a8f926df97ebd161320e6fee9c299d1ff" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a8f926df97ebd161320e6fee9c299d1ff" kindref="member">Device::serializedPressureCurve</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="777"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a066857cf5a86be677c5c73b4049f8d3e" kindref="member">serializePressureCurve</ref>(m_pressureCurve);</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781" refid="class_k_win_1_1_lib_input_1_1_device_1a45c0187a601d70d561e03a203e9dc2b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a45c0187a601d70d561e03a203e9dc2b0" kindref="member">Device::setPressureCurve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;curve)</highlight></codeline>
<codeline lineno="782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>easingCurve<sp/>=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a7b4a616cfa82b59b87e6d37e2114f371" kindref="member">deserializePressureCurve</ref>(curve);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pressureCurve<sp/>!=<sp/>easingCurve)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a2f281fd8ff55314a5b68e29b4316f6b4" kindref="member">ConfigKey::TabletToolPressureCurve</ref>,<sp/>curve);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pressureCurve<sp/>=<sp/>easingCurve;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1aa75996105259ace3694096df87becbc7" kindref="member">pressureCurveChanged</ref>();</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791" refid="class_k_win_1_1_lib_input_1_1_device_1a066857cf5a86be677c5c73b4049f8d3e" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a066857cf5a86be677c5c73b4049f8d3e" kindref="member">Device::serializePressureCurve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QEasingCurve<sp/>&amp;curve)</highlight></codeline>
<codeline lineno="792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>care<sp/>about<sp/>the<sp/>first<sp/>two<sp/>points.<sp/>toCubicSpline<sp/>adds<sp/>the<sp/>end<sp/>point<sp/>as<sp/>the<sp/>third,<sp/>but<sp/>to<sp/>us<sp/>that&apos;s<sp/>always<sp/>(1,1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points<sp/>=<sp/>curve.toCubicSpline().first(2);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>serializedString;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pair<sp/>:<sp/>points)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serializedString<sp/>+=<sp/>QString::number(pair.x());</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serializedString<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serializedString<sp/>+=<sp/>QString::number(pair.y());</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serializedString<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>serializedString;</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806" refid="class_k_win_1_1_lib_input_1_1_device_1a7b4a616cfa82b59b87e6d37e2114f371" refkind="member"><highlight class="normal">QEasingCurve<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a7b4a616cfa82b59b87e6d37e2114f371" kindref="member">Device::deserializePressureCurve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;curve)</highlight></codeline>
<codeline lineno="807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>data<sp/>=<sp/>curve.split(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;QPointF&gt;<sp/>points;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;pair<sp/>:<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pair.indexOf(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)<sp/>&gt;<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points.append({pair.section(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>0).toDouble(),</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair.section(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/>1,<sp/>1).toDouble()});</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>easingCurve<sp/>=<sp/>QEasingCurve(QEasingCurve::Type::BezierSpline);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>support<sp/>2<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(points.size()<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>easingCurve.addCubicBezierSegment(points.at(0),<sp/>points.at(1),<sp/>QPointF{1.0f,<sp/>1.0f});</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>easingCurve;</highlight></codeline>
<codeline lineno="825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827" refid="class_k_win_1_1_lib_input_1_1_device_1a8ee650ede6662cc2298c1bdd0fbfb71d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a8ee650ede6662cc2298c1bdd0fbfb71d" kindref="member">Device::setOrientation</ref>(Qt::ScreenOrientation<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a515f8433ca0c9430dd458504eaa60df2" kindref="member">orientation</ref>)</highlight></codeline>
<codeline lineno="828"><highlight class="normal">{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_supportsCalibrationMatrix<sp/>||<sp/>m_orientation<sp/>==<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a515f8433ca0c9430dd458504eaa60df2" kindref="member">orientation</ref>)<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setOrientedCalibrationMatrix(m_device,<sp/>m_calibrationMatrix,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a515f8433ca0c9430dd458504eaa60df2" kindref="member">orientation</ref>))<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aabbd64f40c34c537d3a571af068fce29" kindref="member">ConfigKey::Orientation</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_k_win_1_1_lib_input_1_1_device_1a515f8433ca0c9430dd458504eaa60df2" kindref="member">orientation</ref>));</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_orientation<sp/>=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a515f8433ca0c9430dd458504eaa60df2" kindref="member">orientation</ref>;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a319b0552f84e5b0679d43e001b54909b" kindref="member">orientationChanged</ref>();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840" refid="class_k_win_1_1_lib_input_1_1_device_1a6ef85624f2379730b1e953a5c03e99ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a6ef85624f2379730b1e953a5c03e99ac" kindref="member">Device::setOutputName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1aace3bfd3fb64dbe18e143bdb731c506b" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>KWIN_BUILD_TESTING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_lib_input_1_1_device_1aace3bfd3fb64dbe18e143bdb731c506b" kindref="member">name</ref><sp/>==<sp/>m_outputName)<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ab68d081aca66ca5102b7473e81a9ee1e" kindref="member">setOutput</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>outputs.count();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outputs[i]-&gt;<ref refid="class_k_win_1_1_lib_input_1_1_device_1afde052dbca3df7f85eedac78a0447a20" kindref="member">isEnabled</ref>())<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outputs[i]-&gt;<ref refid="class_k_win_1_1_lib_input_1_1_device_1aace3bfd3fb64dbe18e143bdb731c506b" kindref="member">name</ref>()<sp/>==<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1aace3bfd3fb64dbe18e143bdb731c506b" kindref="member">name</ref>)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ab68d081aca66ca5102b7473e81a9ee1e" kindref="member">setOutput</ref>(outputs[i]);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>m_outputName<sp/>=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1aace3bfd3fb64dbe18e143bdb731c506b" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a5fd7f823f0d2e8e6122f4bdc092a96b8" kindref="member">ConfigKey::OutputName</ref>,<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1aace3bfd3fb64dbe18e143bdb731c506b" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ab78797c32a02fababee8b8810f9b904b" kindref="member">outputNameChanged</ref>();</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865" refid="class_k_win_1_1_lib_input_1_1_device_1a92c29f32b0bc2c194be9aeae2fd91e5a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*<ref refid="class_k_win_1_1_lib_input_1_1_device_1a92c29f32b0bc2c194be9aeae2fd91e5a" kindref="member">Device::output</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="866"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_output;</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870" refid="class_k_win_1_1_lib_input_1_1_device_1ab68d081aca66ca5102b7473e81a9ee1e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ab68d081aca66ca5102b7473e81a9ee1e" kindref="member">Device::setOutput</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*<ref refid="class_k_win_1_1_lib_input_1_1_device_1a92c29f32b0bc2c194be9aeae2fd91e5a" kindref="member">output</ref>)</highlight></codeline>
<codeline lineno="871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>m_output<sp/>=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a92c29f32b0bc2c194be9aeae2fd91e5a" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>libinput_led<sp/>toLibinputLEDS(LEDs<sp/>leds)</highlight></codeline>
<codeline lineno="876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>libinputLeds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leds.testFlag(<ref refid="namespace_k_win_1a3f02fe5c7167a1a46177d3e01f3c694eacf6cc0261135c6d163fd4305375773d2" kindref="member">LED::NumLock</ref>))<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinputLeds<sp/>=<sp/>libinputLeds<sp/>|<sp/>LIBINPUT_LED_NUM_LOCK;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leds.testFlag(<ref refid="namespace_k_win_1a3f02fe5c7167a1a46177d3e01f3c694ea8d0f4171170104d094d8b6d4f8bf49e6" kindref="member">LED::CapsLock</ref>))<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinputLeds<sp/>=<sp/>libinputLeds<sp/>|<sp/>LIBINPUT_LED_CAPS_LOCK;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leds.testFlag(<ref refid="namespace_k_win_1a3f02fe5c7167a1a46177d3e01f3c694ea7d7902d5e2998e4fb2b8694a2de4ff65" kindref="member">LED::ScrollLock</ref>))<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinputLeds<sp/>=<sp/>libinputLeds<sp/>|<sp/>LIBINPUT_LED_SCROLL_LOCK;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leds.testFlag(<ref refid="namespace_k_win_1a3f02fe5c7167a1a46177d3e01f3c694eaa0c29a6fe815b4e79cafb36a6714094c" kindref="member">LED::Compose</ref>))<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinputLeds<sp/>=<sp/>libinputLeds<sp/>|<sp/>LIBINPUT_LED_COMPOSE;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leds.testFlag(<ref refid="namespace_k_win_1a3f02fe5c7167a1a46177d3e01f3c694ea3713cbc241fd95e9d579846d44774452" kindref="member">LED::Kana</ref>))<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinputLeds<sp/>=<sp/>libinputLeds<sp/>|<sp/>LIBINPUT_LED_KANA;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>libinput_led(libinputLeds);</highlight></codeline>
<codeline lineno="894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896" refid="class_k_win_1_1_lib_input_1_1_device_1a6e9806b99c360d65559bf70f1660128f" refkind="member"><highlight class="normal">LEDs<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a6e9806b99c360d65559bf70f1660128f" kindref="member">Device::leds</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="897"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_leds;</highlight></codeline>
<codeline lineno="899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901" refid="class_k_win_1_1_lib_input_1_1_device_1a1d45620c1742cee17855bd9a8b647850" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a1d45620c1742cee17855bd9a8b647850" kindref="member">Device::setLeds</ref>(LEDs<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a6e9806b99c360d65559bf70f1660128f" kindref="member">leds</ref>)</highlight></codeline>
<codeline lineno="902"><highlight class="normal">{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_leds<sp/>!=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a6e9806b99c360d65559bf70f1660128f" kindref="member">leds</ref>)<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_leds<sp/>=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a6e9806b99c360d65559bf70f1660128f" kindref="member">leds</ref>;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinput_device_led_update(m_device,<sp/>toLibinputLEDS(m_leds));</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909" refid="class_k_win_1_1_lib_input_1_1_device_1af10132f71c97fe6ecd6cc9ad9653d4b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a35abe290438efd20b775efdbd4cd159e" kindref="member">Device::supportsOutputArea</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="910"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tabletTool;</highlight></codeline>
<codeline lineno="912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914" refid="class_k_win_1_1_lib_input_1_1_device_1a3aac5da4ba5ffe6706826feb4fe0c896" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ad085fa1cc1af1105a0949d256595ef54" kindref="member">Device::defaultOutputArea</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="915"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_identityRect;</highlight></codeline>
<codeline lineno="917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919" refid="class_k_win_1_1_lib_input_1_1_device_1a384a0dc7ee8739f7426f3afbe077e754" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ae0e9f9670bc33b6079a1d69351b2947e" kindref="member">Device::outputArea</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="920"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_outputArea;</highlight></codeline>
<codeline lineno="922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924" refid="class_k_win_1_1_lib_input_1_1_device_1a2a2a7e9cbd0d24c14e77109c3c76e08d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a2a2a7e9cbd0d24c14e77109c3c76e08d" kindref="member">Device::setOutputArea</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1ae0e9f9670bc33b6079a1d69351b2947e" kindref="member">outputArea</ref>)</highlight></codeline>
<codeline lineno="925"><highlight class="normal">{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_outputArea<sp/>!=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ae0e9f9670bc33b6079a1d69351b2947e" kindref="member">outputArea</ref>)<sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_outputArea<sp/>=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ae0e9f9670bc33b6079a1d69351b2947e" kindref="member">outputArea</ref>;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a9610c3da9431dda497d42a716148a987" kindref="member">ConfigKey::OutputArea</ref>,<sp/>m_outputArea);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a28a70e4107d6d7126f48dae39b7dd379" kindref="member">outputAreaChanged</ref>();</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933" refid="class_k_win_1_1_lib_input_1_1_device_1ab94f89c3312dc91bd9c6de481b70b438" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ab94f89c3312dc91bd9c6de481b70b438" kindref="member">Device::setMapToWorkspace</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a432990155715a105fe12faa236337a6b" kindref="member">mapToWorkspace</ref>)</highlight></codeline>
<codeline lineno="934"><highlight class="normal">{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_mapToWorkspace<sp/>!=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a432990155715a105fe12faa236337a6b" kindref="member">mapToWorkspace</ref>)<sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_mapToWorkspace<sp/>=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a432990155715a105fe12faa236337a6b" kindref="member">mapToWorkspace</ref>;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397a94dc42cfaa02318976d69c546cd48143" kindref="member">ConfigKey::MapToWorkspace</ref>,<sp/>m_mapToWorkspace);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a1cae3c177029a16786259c775c40312e" kindref="member">mapToWorkspaceChanged</ref>();</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942" refid="class_k_win_1_1_lib_input_1_1_device_1a689c3d1bc2dc8047a49ee6971e5a7882" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a9df358ceb9d2b16f6e10721dafd62aef" kindref="member">Device::supportsPressureRange</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="943"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_supportsPressureRange;</highlight></codeline>
<codeline lineno="945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947" refid="class_k_win_1_1_lib_input_1_1_device_1a2998b7731b7b0c9c1a3e877d1b35a5ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a2998b7731b7b0c9c1a3e877d1b35a5ee" kindref="member">Device::setSupportsPressureRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supported)</highlight></codeline>
<codeline lineno="948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_supportsPressureRange<sp/>!=<sp/>supported)<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_supportsPressureRange<sp/>=<sp/>supported;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ae043a175faf90406023d5ea1e477a92d" kindref="member">supportsPressureRangeChanged</ref>();</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955" refid="class_k_win_1_1_lib_input_1_1_device_1ad114c62c0928cd9a4a7f02848c411adb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ac714475a98b7b10e9feabfd17d954f4b" kindref="member">Device::pressureRangeMin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="956"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pressureRangeMin;</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960" refid="class_k_win_1_1_lib_input_1_1_device_1afa424832cca0d086a84bb26558c05142" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1afa424832cca0d086a84bb26558c05142" kindref="member">Device::setPressureRangeMin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="961"><highlight class="normal">{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pressureRangeMin<sp/>!=<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pressureRangeMin<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397aa2a566acb8ba59a37e3dffc7336c9156" kindref="member">ConfigKey::TabletToolPressureRangeMin</ref>,<sp/>m_pressureRangeMin);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ab9d986987f7af50377446615d492f199" kindref="member">pressureRangeMinChanged</ref>();</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969" refid="class_k_win_1_1_lib_input_1_1_device_1aa3b02afa79188acaa2a9d550f0bff081" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a8700604848435515ab21147d5e3bfd4a" kindref="member">Device::pressureRangeMax</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="970"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pressureRangeMax;</highlight></codeline>
<codeline lineno="972"><highlight class="normal">}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974" refid="class_k_win_1_1_lib_input_1_1_device_1af770d6f337a4c4f1b962d6ee37b1d824" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1af770d6f337a4c4f1b962d6ee37b1d824" kindref="member">Device::setPressureRangeMax</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="975"><highlight class="normal">{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pressureRangeMax<sp/>!=<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pressureRangeMax<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397adb7931d8e5b7c1bd0679915de017a2f5" kindref="member">ConfigKey::TabletToolPressureRangeMax</ref>,<sp/>m_pressureRangeMax);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a74d3f4de99076082148e176ff728cbe9" kindref="member">pressureRangeMaxChanged</ref>();</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983" refid="class_k_win_1_1_lib_input_1_1_device_1ae9408957e0600e17869439c86fe26c78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1af9bc107ef1aad593d385c0b002b2707c" kindref="member">Device::defaultPressureRangeMin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="984"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_defaultPressureRangeMin;</highlight></codeline>
<codeline lineno="986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988" refid="class_k_win_1_1_lib_input_1_1_device_1a614175f35bf29b1b476c29a659e2ab46" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a166f507ce9d47885bab55af3e65aae0a" kindref="member">Device::defaultPressureRangeMax</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="989"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_defaultPressureRangeMax;</highlight></codeline>
<codeline lineno="991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993" refid="class_k_win_1_1_lib_input_1_1_device_1a4e94229e72949b2198bd6a93a6840f91" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a99eae42b4d7cc2a8841c5692c7c8bab1" kindref="member">Device::supportsInputArea</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="994"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_LIBINPUT_INPUT_AREA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002" refid="class_k_win_1_1_lib_input_1_1_device_1a5e42fc2b532e62eb2db5158c8682e31c" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1affb3285c23424a8e479a27271fc5889e" kindref="member">Device::inputArea</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1003"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_inputArea;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007" refid="class_k_win_1_1_lib_input_1_1_device_1a3be4919b13e7f1bb7a7ab7edfb0cd28e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a3be4919b13e7f1bb7a7ab7edfb0cd28e" kindref="member">Device::setInputArea</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;<ref refid="class_k_win_1_1_lib_input_1_1_device_1affb3285c23424a8e479a27271fc5889e" kindref="member">inputArea</ref>)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_inputArea<sp/>!=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1affb3285c23424a8e479a27271fc5889e" kindref="member">inputArea</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_inputArea<sp/>=<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1affb3285c23424a8e479a27271fc5889e" kindref="member">inputArea</ref>;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_LIBINPUT_INPUT_AREA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>libinput_config_area_rectangle<sp/>rect{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.x1<sp/>=<sp/>m_inputArea.topLeft().x(),</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y1<sp/>=<sp/>m_inputArea.topLeft().y(),</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.x2<sp/>=<sp/>m_inputArea.bottomRight().x(),</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y2<sp/>=<sp/>m_inputArea.bottomRight().y(),</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libinput_device_config_area_set_rectangle(m_device,<sp/>&amp;rect);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeEntry(<ref refid="namespace_k_win_1_1_lib_input_1acd2c5e445ea81d70667643176b197397ac05d9c06e9bdfc8fcda4f769a97271c3" kindref="member">ConfigKey::InputArea</ref>,<sp/>m_inputArea);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1ae47909fd1ff3a6bb72ba3fb1ad2bcd84" kindref="member">inputAreaChanged</ref>();</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027" refid="class_k_win_1_1_lib_input_1_1_device_1a5c4bdc0e377f2a0f5fb2725a09972cea" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a7febeb418f7dee12aeca4c5d81da5d99" kindref="member">Device::defaultInputArea</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1028"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_identityRect;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032" refid="class_k_win_1_1_lib_input_1_1_device_1a076457f9edb95537894608a2550f3173" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a076457f9edb95537894608a2550f3173" kindref="member">Device::serializeMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>&amp;matrix)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>result;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(QString::number(matrix.constData()[i]));</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(QLatin1Char(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044" refid="class_k_win_1_1_lib_input_1_1_device_1a923c9e05e7ced5e0ca5f6932babffde8" refkind="member"><highlight class="normal">QMatrix4x4<sp/><ref refid="class_k_win_1_1_lib_input_1_1_device_1a923c9e05e7ced5e0ca5f6932babffde8" kindref="member">Device::deserializeMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;matrix)</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>items<sp/>=<sp/>QStringView(matrix).split(QLatin1Char(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(items.size()<sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;float&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.reserve(16);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ranges::transform(std::as_const(items),<sp/>std::back_inserter(data),<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringView<sp/>&amp;item)<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item.toFloat();</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QMatrix4x4{data.constData()};</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QMatrix4x4{};</highlight></codeline>
<codeline lineno="1058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_device.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/backends/libinput/device.cpp"/>
  </compounddef>
</doxygen>
