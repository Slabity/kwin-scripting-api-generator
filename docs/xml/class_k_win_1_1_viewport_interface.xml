<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_viewport_interface" kind="class" language="C++" prot="public">
    <compoundname>KWin::ViewportInterface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QtWaylandServer::wp_viewport</basecompoundref>
    <includes refid="viewporter__p_8h" local="no">viewporter_p.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_viewport_interface_1af44cf183b8abb558140a907e2cece4f9" prot="public" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> &gt;</type>
        <definition>QPointer&lt;SurfaceInterface&gt; KWin::ViewportInterface::surface</definition>
        <argsstring></argsstring>
        <name>surface</name>
        <qualifiedname>KWin::ViewportInterface::surface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/viewporter_p.h" line="25" column="14" bodyfile="kwin/src/wayland/viewporter_p.h" bodystart="25" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_viewport_interface_1a39e4a63be6d4c7682a4d0e7dc1453b98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ViewportInterface::ViewportInterface</definition>
        <argsstring>(SurfaceInterface *surface, wl_resource *resource)</argsstring>
        <name>ViewportInterface</name>
        <qualifiedname>KWin::ViewportInterface::ViewportInterface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/viewporter_p.h" line="20" column="5" bodyfile="kwin/src/wayland/viewporter.cpp" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_viewport_interface_1a400210d9d49a85cd2bbea23637f38f2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ViewportInterface::~ViewportInterface</definition>
        <argsstring>() override</argsstring>
        <name>~ViewportInterface</name>
        <qualifiedname>KWin::ViewportInterface::~ViewportInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/viewporter_p.h" line="21" column="5" bodyfile="kwin/src/wayland/viewporter.cpp" bodystart="51" bodyend="57"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_viewport_interface_1ac525bb979d663ab3de79bd89c2a07cfa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_viewport_interface" kindref="compound">ViewportInterface</ref> *</type>
        <definition>ViewportInterface * KWin::ViewportInterface::get</definition>
        <argsstring>(SurfaceInterface *surface)</argsstring>
        <name>get</name>
        <qualifiedname>KWin::ViewportInterface::get</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/viewporter_p.h" line="23" column="30" bodyfile="kwin/src/wayland/viewporter.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_viewport_interface_1abe409204361b86f3e0b4992d92df108f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ViewportInterface::wp_viewport_destroy_resource</definition>
        <argsstring>(Resource *resource) override</argsstring>
        <name>wp_viewport_destroy_resource</name>
        <qualifiedname>KWin::ViewportInterface::wp_viewport_destroy_resource</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/viewporter_p.h" line="28" column="10" bodyfile="kwin/src/wayland/viewporter.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_viewport_interface_1a636eb4be73a6e35ae7fd24a88edea432" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ViewportInterface::wp_viewport_destroy</definition>
        <argsstring>(Resource *resource) override</argsstring>
        <name>wp_viewport_destroy</name>
        <qualifiedname>KWin::ViewportInterface::wp_viewport_destroy</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/viewporter_p.h" line="29" column="10" bodyfile="kwin/src/wayland/viewporter.cpp" bodystart="69" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_viewport_interface_1a324194bded80330e2167b69436379a37" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ViewportInterface::wp_viewport_set_source</definition>
        <argsstring>(Resource *resource, wl_fixed_t x, wl_fixed_t y, wl_fixed_t width, wl_fixed_t height) override</argsstring>
        <name>wp_viewport_set_source</name>
        <qualifiedname>KWin::ViewportInterface::wp_viewport_set_source</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/viewporter_p.h" line="30" column="10" bodyfile="kwin/src/wayland/viewporter.cpp" bodystart="82" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_viewport_interface_1ab98441be9d3036148569005786091ea9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ViewportInterface::wp_viewport_set_destination</definition>
        <argsstring>(Resource *resource, int32_t width, int32_t height) override</argsstring>
        <name>wp_viewport_set_destination</name>
        <qualifiedname>KWin::ViewportInterface::wp_viewport_set_destination</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/viewporter_p.h" line="31" column="10" bodyfile="kwin/src/wayland/viewporter.cpp" bodystart="111" bodyend="133"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::ViewportInterface</label>
        <link refid="class_k_win_1_1_viewport_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QtWaylandServer::wp_viewport</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::ViewportInterface</label>
        <link refid="class_k_win_1_1_viewport_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QtWaylandServer::wp_viewport</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/viewporter_p.h" line="17" column="1" bodyfile="kwin/src/wayland/viewporter_p.h" bodystart="18" bodyend="32"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_viewport_interface_1ac525bb979d663ab3de79bd89c2a07cfa" prot="public" virt="non-virtual"><scope>KWin::ViewportInterface</scope><name>get</name></member>
      <member refid="class_k_win_1_1_viewport_interface_1af44cf183b8abb558140a907e2cece4f9" prot="public" virt="non-virtual"><scope>KWin::ViewportInterface</scope><name>surface</name></member>
      <member refid="class_k_win_1_1_viewport_interface_1a39e4a63be6d4c7682a4d0e7dc1453b98" prot="public" virt="non-virtual"><scope>KWin::ViewportInterface</scope><name>ViewportInterface</name></member>
      <member refid="class_k_win_1_1_viewport_interface_1a636eb4be73a6e35ae7fd24a88edea432" prot="protected" virt="non-virtual"><scope>KWin::ViewportInterface</scope><name>wp_viewport_destroy</name></member>
      <member refid="class_k_win_1_1_viewport_interface_1abe409204361b86f3e0b4992d92df108f" prot="protected" virt="non-virtual"><scope>KWin::ViewportInterface</scope><name>wp_viewport_destroy_resource</name></member>
      <member refid="class_k_win_1_1_viewport_interface_1ab98441be9d3036148569005786091ea9" prot="protected" virt="non-virtual"><scope>KWin::ViewportInterface</scope><name>wp_viewport_set_destination</name></member>
      <member refid="class_k_win_1_1_viewport_interface_1a324194bded80330e2167b69436379a37" prot="protected" virt="non-virtual"><scope>KWin::ViewportInterface</scope><name>wp_viewport_set_source</name></member>
      <member refid="class_k_win_1_1_viewport_interface_1a400210d9d49a85cd2bbea23637f38f2a" prot="public" virt="non-virtual"><scope>KWin::ViewportInterface</scope><name>~ViewportInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
