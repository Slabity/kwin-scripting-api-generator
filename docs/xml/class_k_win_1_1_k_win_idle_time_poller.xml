<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_k_win_idle_time_poller" kind="class" language="C++" prot="public">
    <compoundname>KWin::KWinIdleTimePoller</compoundname>
    <basecompoundref prot="public" virt="non-virtual">KAbstractIdleTimePoller</basecompoundref>
    <includes refid="poller_8h" local="no">poller.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_k_win_idle_time_poller_1a30768e785747f253f8631728be0ae61b" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_idle_detector" kindref="compound">IdleDetector</ref> *</type>
        <definition>IdleDetector* KWin::KWinIdleTimePoller::m_catchResumeTimeout</definition>
        <argsstring></argsstring>
        <name>m_catchResumeTimeout</name>
        <qualifiedname>KWin::KWinIdleTimePoller::m_catchResumeTimeout</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/idletime/poller.h" line="43" column="18" bodyfile="kwin/src/plugins/idletime/poller.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_k_win_idle_time_poller_1a65ab8bcf14a35f101721ca2d387147f6" prot="private" static="no" mutable="no">
        <type>QHash&lt; int, <ref refid="class_k_win_1_1_idle_detector" kindref="compound">IdleDetector</ref> * &gt;</type>
        <definition>QHash&lt;int, IdleDetector *&gt; KWin::KWinIdleTimePoller::m_timeouts</definition>
        <argsstring></argsstring>
        <name>m_timeouts</name>
        <qualifiedname>KWin::KWinIdleTimePoller::m_timeouts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/idletime/poller.h" line="44" column="11" bodyfile="kwin/src/plugins/idletime/poller.h" bodystart="44" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_k_win_idle_time_poller_1a241e29d513971e07c44bb27b96e6a1ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::KWinIdleTimePoller::KWinIdleTimePoller</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>KWinIdleTimePoller</name>
        <qualifiedname>KWin::KWinIdleTimePoller::KWinIdleTimePoller</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/idletime/poller.h" line="27" column="5" bodyfile="kwin/src/plugins/idletime/poller.cpp" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_k_win_idle_time_poller_1ad513c32db7a10cb34f6af100e4e6ab6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::KWinIdleTimePoller::isAvailable</definition>
        <argsstring>() override</argsstring>
        <name>isAvailable</name>
        <qualifiedname>KWin::KWinIdleTimePoller::isAvailable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/idletime/poller.h" line="29" column="10" bodyfile="kwin/src/plugins/idletime/poller.cpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_k_win_idle_time_poller_1a0016076f955d3aba104306609036b83e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::KWinIdleTimePoller::setUpPoller</definition>
        <argsstring>() override</argsstring>
        <name>setUpPoller</name>
        <qualifiedname>KWin::KWinIdleTimePoller::setUpPoller</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/idletime/poller.h" line="30" column="10" bodyfile="kwin/src/plugins/idletime/poller.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_k_win_idle_time_poller_1a30c04aa46c3b0368054f5ac5f86af9ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::KWinIdleTimePoller::unloadPoller</definition>
        <argsstring>() override</argsstring>
        <name>unloadPoller</name>
        <qualifiedname>KWin::KWinIdleTimePoller::unloadPoller</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/idletime/poller.h" line="31" column="10" bodyfile="kwin/src/plugins/idletime/poller.cpp" bodystart="31" bodyend="33"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_k_win_1_1_k_win_idle_time_poller_1a6f461b387bd850a51135e04468efc2f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::KWinIdleTimePoller::addTimeout</definition>
        <argsstring>(int nextTimeout) override</argsstring>
        <name>addTimeout</name>
        <qualifiedname>KWin::KWinIdleTimePoller::addTimeout</qualifiedname>
        <param>
          <type>int</type>
          <declname>nextTimeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/idletime/poller.h" line="34" column="10" bodyfile="kwin/src/plugins/idletime/poller.cpp" bodystart="35" bodyend="47"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_k_win_idle_time_poller_1a68fab0ce52c0edc2134573e4a88957b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::KWinIdleTimePoller::removeTimeout</definition>
        <argsstring>(int nextTimeout) override</argsstring>
        <name>removeTimeout</name>
        <qualifiedname>KWin::KWinIdleTimePoller::removeTimeout</qualifiedname>
        <param>
          <type>int</type>
          <declname>nextTimeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/idletime/poller.h" line="35" column="10" bodyfile="kwin/src/plugins/idletime/poller.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_k_win_idle_time_poller_1a51ff6b86ea1a9058e8da63201aef30ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; int &gt;</type>
        <definition>QList&lt; int &gt; KWin::KWinIdleTimePoller::timeouts</definition>
        <argsstring>() const override</argsstring>
        <name>timeouts</name>
        <qualifiedname>KWin::KWinIdleTimePoller::timeouts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/idletime/poller.h" line="36" column="11" bodyfile="kwin/src/plugins/idletime/poller.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_k_win_idle_time_poller_1a0afc39e9b9cd95a1dc5fed2848647467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::KWinIdleTimePoller::forcePollRequest</definition>
        <argsstring>() override</argsstring>
        <name>forcePollRequest</name>
        <qualifiedname>KWin::KWinIdleTimePoller::forcePollRequest</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/idletime/poller.h" line="37" column="9" bodyfile="kwin/src/plugins/idletime/poller.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_k_win_idle_time_poller_1a1e718a2ec797912a7d8ffcda843aa2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::KWinIdleTimePoller::catchIdleEvent</definition>
        <argsstring>() override</argsstring>
        <name>catchIdleEvent</name>
        <qualifiedname>KWin::KWinIdleTimePoller::catchIdleEvent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/idletime/poller.h" line="38" column="10" bodyfile="kwin/src/plugins/idletime/poller.cpp" bodystart="59" bodyend="71"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_k_win_idle_time_poller_1aca584c060411b71fc5b297ef94833c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::KWinIdleTimePoller::stopCatchingIdleEvents</definition>
        <argsstring>() override</argsstring>
        <name>stopCatchingIdleEvents</name>
        <qualifiedname>KWin::KWinIdleTimePoller::stopCatchingIdleEvents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/idletime/poller.h" line="39" column="10" bodyfile="kwin/src/plugins/idletime/poller.cpp" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_k_win_idle_time_poller_1a63a875b20988958bd6f4cdb9dd6a1055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::KWinIdleTimePoller::simulateUserActivity</definition>
        <argsstring>() override</argsstring>
        <name>simulateUserActivity</name>
        <qualifiedname>KWin::KWinIdleTimePoller::simulateUserActivity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/idletime/poller.h" line="40" column="10" bodyfile="kwin/src/plugins/idletime/poller.cpp" bodystart="84" bodyend="87"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KAbstractIdleTimePoller</label>
      </node>
      <node id="1">
        <label>KWin::KWinIdleTimePoller</label>
        <link refid="class_k_win_1_1_k_win_idle_time_poller"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KAbstractIdleTimePoller</label>
      </node>
      <node id="1">
        <label>KWin::KWinIdleTimePoller</label>
        <link refid="class_k_win_1_1_k_win_idle_time_poller"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/src/plugins/idletime/poller.h" line="20" column="1" bodyfile="kwin/src/plugins/idletime/poller.h" bodystart="21" bodyend="45"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_k_win_idle_time_poller_1a6f461b387bd850a51135e04468efc2f1" prot="public" virt="non-virtual"><scope>KWin::KWinIdleTimePoller</scope><name>addTimeout</name></member>
      <member refid="class_k_win_1_1_k_win_idle_time_poller_1a1e718a2ec797912a7d8ffcda843aa2ef" prot="public" virt="non-virtual"><scope>KWin::KWinIdleTimePoller</scope><name>catchIdleEvent</name></member>
      <member refid="class_k_win_1_1_k_win_idle_time_poller_1a0afc39e9b9cd95a1dc5fed2848647467" prot="public" virt="non-virtual"><scope>KWin::KWinIdleTimePoller</scope><name>forcePollRequest</name></member>
      <member refid="class_k_win_1_1_k_win_idle_time_poller_1ad513c32db7a10cb34f6af100e4e6ab6d" prot="public" virt="non-virtual"><scope>KWin::KWinIdleTimePoller</scope><name>isAvailable</name></member>
      <member refid="class_k_win_1_1_k_win_idle_time_poller_1a241e29d513971e07c44bb27b96e6a1ca" prot="public" virt="non-virtual"><scope>KWin::KWinIdleTimePoller</scope><name>KWinIdleTimePoller</name></member>
      <member refid="class_k_win_1_1_k_win_idle_time_poller_1a30768e785747f253f8631728be0ae61b" prot="private" virt="non-virtual"><scope>KWin::KWinIdleTimePoller</scope><name>m_catchResumeTimeout</name></member>
      <member refid="class_k_win_1_1_k_win_idle_time_poller_1a65ab8bcf14a35f101721ca2d387147f6" prot="private" virt="non-virtual"><scope>KWin::KWinIdleTimePoller</scope><name>m_timeouts</name></member>
      <member refid="class_k_win_1_1_k_win_idle_time_poller_1a68fab0ce52c0edc2134573e4a88957b5" prot="public" virt="non-virtual"><scope>KWin::KWinIdleTimePoller</scope><name>removeTimeout</name></member>
      <member refid="class_k_win_1_1_k_win_idle_time_poller_1a0016076f955d3aba104306609036b83e" prot="public" virt="non-virtual"><scope>KWin::KWinIdleTimePoller</scope><name>setUpPoller</name></member>
      <member refid="class_k_win_1_1_k_win_idle_time_poller_1a63a875b20988958bd6f4cdb9dd6a1055" prot="public" virt="non-virtual"><scope>KWin::KWinIdleTimePoller</scope><name>simulateUserActivity</name></member>
      <member refid="class_k_win_1_1_k_win_idle_time_poller_1aca584c060411b71fc5b297ef94833c8e" prot="public" virt="non-virtual"><scope>KWin::KWinIdleTimePoller</scope><name>stopCatchingIdleEvents</name></member>
      <member refid="class_k_win_1_1_k_win_idle_time_poller_1a51ff6b86ea1a9058e8da63201aef30ff" prot="public" virt="non-virtual"><scope>KWin::KWinIdleTimePoller</scope><name>timeouts</name></member>
      <member refid="class_k_win_1_1_k_win_idle_time_poller_1a30c04aa46c3b0368054f5ac5f86af9ab" prot="public" virt="non-virtual"><scope>KWin::KWinIdleTimePoller</scope><name>unloadPoller</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
