<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_test_xcb_window" kind="class" language="C++" prot="public">
    <compoundname>TestXcbWindow</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_test_xcb_window_1a7257c20a22b4f9aef5688fb7eec1dd72" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestXcbWindow::initTestCase</definition>
        <argsstring>()</argsstring>
        <name>initTestCase</name>
        <qualifiedname>TestXcbWindow::initTestCase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/test_xcb_window.cpp" line="25" column="10" bodyfile="kwin/autotests/test_xcb_window.cpp" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_xcb_window_1a7ef893380e54b8e2a1d1dcb0203ba3b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestXcbWindow::defaultCtor</definition>
        <argsstring>()</argsstring>
        <name>defaultCtor</name>
        <qualifiedname>TestXcbWindow::defaultCtor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/test_xcb_window.cpp" line="26" column="10" bodyfile="kwin/autotests/test_xcb_window.cpp" bodystart="42" bodyend="54"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_xcb_window_1abd318943210330ddb3635a3a3154cf7a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestXcbWindow::ctor</definition>
        <argsstring>()</argsstring>
        <name>ctor</name>
        <qualifiedname>TestXcbWindow::ctor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/test_xcb_window.cpp" line="27" column="10" bodyfile="kwin/autotests/test_xcb_window.cpp" bodystart="56" bodyend="66"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_xcb_window_1aa01fc4083be71fd65ab5c8b98d3f2c9d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestXcbWindow::classCtor</definition>
        <argsstring>()</argsstring>
        <name>classCtor</name>
        <qualifiedname>TestXcbWindow::classCtor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/test_xcb_window.cpp" line="28" column="10" bodyfile="kwin/autotests/test_xcb_window.cpp" bodystart="68" bodyend="82"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_xcb_window_1a8cb9f3b7bb92490a364ce9ac67be4c9c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestXcbWindow::create</definition>
        <argsstring>()</argsstring>
        <name>create</name>
        <qualifiedname>TestXcbWindow::create</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/test_xcb_window.cpp" line="29" column="10" bodyfile="kwin/autotests/test_xcb_window.cpp" bodystart="84" bodyend="100"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_xcb_window_1ac02d4ee178176c21fb0e2d53cd5734fc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestXcbWindow::mapUnmap</definition>
        <argsstring>()</argsstring>
        <name>mapUnmap</name>
        <qualifiedname>TestXcbWindow::mapUnmap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/test_xcb_window.cpp" line="30" column="10" bodyfile="kwin/autotests/test_xcb_window.cpp" bodystart="102" bodyend="125"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_xcb_window_1ae3592a7cf4265bbf061f387015cd661f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestXcbWindow::geometry</definition>
        <argsstring>()</argsstring>
        <name>geometry</name>
        <qualifiedname>TestXcbWindow::geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/test_xcb_window.cpp" line="31" column="10" bodyfile="kwin/autotests/test_xcb_window.cpp" bodystart="127" bodyend="147"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_xcb_window_1aea4ca53d4e96ddc55bae666c761aaf33" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestXcbWindow::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <qualifiedname>TestXcbWindow::destroy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/test_xcb_window.cpp" line="32" column="10" bodyfile="kwin/autotests/test_xcb_window.cpp" bodystart="149" bodyend="184"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_xcb_window_1a2bc1666f8087e57fc73848050294ff00" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestXcbWindow::destroyNotManaged</definition>
        <argsstring>()</argsstring>
        <name>destroyNotManaged</name>
        <qualifiedname>TestXcbWindow::destroyNotManaged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/test_xcb_window.cpp" line="33" column="10" bodyfile="kwin/autotests/test_xcb_window.cpp" bodystart="186" bodyend="198"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestXcbWindow</label>
        <link refid="class_test_xcb_window"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestXcbWindow</label>
        <link refid="class_test_xcb_window"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/test_xcb_window.cpp" line="21" column="1" bodyfile="kwin/autotests/test_xcb_window.cpp" bodystart="22" bodyend="34"/>
    <listofallmembers>
      <member refid="class_test_xcb_window_1aa01fc4083be71fd65ab5c8b98d3f2c9d" prot="private" virt="non-virtual"><scope>TestXcbWindow</scope><name>classCtor</name></member>
      <member refid="class_test_xcb_window_1a8cb9f3b7bb92490a364ce9ac67be4c9c" prot="private" virt="non-virtual"><scope>TestXcbWindow</scope><name>create</name></member>
      <member refid="class_test_xcb_window_1abd318943210330ddb3635a3a3154cf7a" prot="private" virt="non-virtual"><scope>TestXcbWindow</scope><name>ctor</name></member>
      <member refid="class_test_xcb_window_1a7ef893380e54b8e2a1d1dcb0203ba3b1" prot="private" virt="non-virtual"><scope>TestXcbWindow</scope><name>defaultCtor</name></member>
      <member refid="class_test_xcb_window_1aea4ca53d4e96ddc55bae666c761aaf33" prot="private" virt="non-virtual"><scope>TestXcbWindow</scope><name>destroy</name></member>
      <member refid="class_test_xcb_window_1a2bc1666f8087e57fc73848050294ff00" prot="private" virt="non-virtual"><scope>TestXcbWindow</scope><name>destroyNotManaged</name></member>
      <member refid="class_test_xcb_window_1ae3592a7cf4265bbf061f387015cd661f" prot="private" virt="non-virtual"><scope>TestXcbWindow</scope><name>geometry</name></member>
      <member refid="class_test_xcb_window_1a7257c20a22b4f9aef5688fb7eec1dd72" prot="private" virt="non-virtual"><scope>TestXcbWindow</scope><name>initTestCase</name></member>
      <member refid="class_test_xcb_window_1ac02d4ee178176c21fb0e2d53cd5734fc" prot="private" virt="non-virtual"><scope>TestXcbWindow</scope><name>mapUnmap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
