<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_x_backend" kind="class" language="C++" prot="public">
    <compoundname>XBackend</compoundname>
    <basecompoundref refid="class_backend" prot="public" virt="non-virtual">Backend</basecompoundref>
    <includes refid="pointerconstraintstest_8h" local="no">pointerconstraintstest.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_x_backend_1a502d105fbb367c17c35274b9fd92e75e" prot="private" static="no" mutable="no">
        <type>xcb_connection_t *</type>
        <definition>xcb_connection_t* XBackend::m_xcbConn</definition>
        <argsstring></argsstring>
        <name>m_xcbConn</name>
        <qualifiedname>XBackend::m_xcbConn</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="176" column="22" bodyfile="kwin/tests/pointerconstraintstest.h" bodystart="176" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_x_backend_1ad5e0dc7884a570f027748115aaad304f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XBackend::XBackend</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>XBackend</name>
        <qualifiedname>XBackend::XBackend</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="161" column="5" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="229" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_x_backend_1aa966657ea2778ccfdf93274076c1d12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBackend::init</definition>
        <argsstring>(QQuickView *view) override</argsstring>
        <name>init</name>
        <qualifiedname>XBackend::init</qualifiedname>
        <reimplements refid="class_backend_1a922f911e48ead0c4df7f0acd700e3cd9">init</reimplements>
        <param>
          <type>QQuickView *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="163" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="239" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_x_backend_1af30b9b3968800ff2a708c44c02a7231b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBackend::lockRequest</definition>
        <argsstring>(bool persistent, QRect region) override</argsstring>
        <name>lockRequest</name>
        <qualifiedname>XBackend::lockRequest</qualifiedname>
        <reimplements refid="class_backend_1aedd0d08660af5a2342f5fe0f895713c2">lockRequest</reimplements>
        <param>
          <type>bool</type>
          <declname>persistent</declname>
        </param>
        <param>
          <type>QRect</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="165" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="250" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_x_backend_1a4ed3ac30406c5fdcdf5df004910f6282" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBackend::unlockRequest</definition>
        <argsstring>() override</argsstring>
        <name>unlockRequest</name>
        <qualifiedname>XBackend::unlockRequest</qualifiedname>
        <reimplements refid="class_backend_1aaaeac86fecd1cbb2e1c2e31e68f1355e">unlockRequest</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="166" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="279" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="class_x_backend_1a6cebc2c7533e2d01939c0d5ebb37ca74" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBackend::confineRequest</definition>
        <argsstring>(bool persistent, QRect region) override</argsstring>
        <name>confineRequest</name>
        <qualifiedname>XBackend::confineRequest</qualifiedname>
        <reimplements refid="class_backend_1a858b038da22f8f0c96f51aa3d44a1dd0">confineRequest</reimplements>
        <param>
          <type>bool</type>
          <declname>persistent</declname>
        </param>
        <param>
          <type>QRect</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="168" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="287" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="class_x_backend_1ab20b45d3d60a64bee3859bcfa0401605" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBackend::unconfineRequest</definition>
        <argsstring>() override</argsstring>
        <name>unconfineRequest</name>
        <qualifiedname>XBackend::unconfineRequest</qualifiedname>
        <reimplements refid="class_backend_1a24f84ba0e2ac3112f12c993e9eee8d5e">unconfineRequest</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="169" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="298" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="class_x_backend_1af2806000888b7357d2394cc3d25acdd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBackend::hideAndConfineRequest</definition>
        <argsstring>(bool confineBeforeHide) override</argsstring>
        <name>hideAndConfineRequest</name>
        <qualifiedname>XBackend::hideAndConfineRequest</qualifiedname>
        <reimplements refid="class_backend_1a346634cbbb0b586c8abbfb1fa7745307">hideAndConfineRequest</reimplements>
        <param>
          <type>bool</type>
          <declname>confineBeforeHide</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="171" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="313" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="class_x_backend_1a1f94caefefc3321f72bfbeadcc97815f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBackend::undoHideRequest</definition>
        <argsstring>() override</argsstring>
        <name>undoHideRequest</name>
        <qualifiedname>XBackend::undoHideRequest</qualifiedname>
        <reimplements refid="class_backend_1afa628a0785cc8110c033f13f5ebc0d55">undoHideRequest</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="172" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="334" bodyend="338"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_x_backend_1ae074beaa5830dd2f6cea33a1209190f2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XBackend::tryConfine</definition>
        <argsstring>(int &amp;error)</argsstring>
        <name>tryConfine</name>
        <qualifiedname>XBackend::tryConfine</qualifiedname>
        <param>
          <type>int &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="175" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="340" bodyend="365"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Backend</label>
        <link refid="class_backend"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>XBackend</label>
        <link refid="class_x_backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Backend</label>
        <link refid="class_backend"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>XBackend</label>
        <link refid="class_x_backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/tests/pointerconstraintstest.h" line="157" column="1" bodyfile="kwin/tests/pointerconstraintstest.h" bodystart="158" bodyend="177"/>
    <listofallmembers>
      <member refid="class_backend_1a5bc0e9ea135112c07e021ebde56ec44f" prot="public" virt="non-virtual"><scope>XBackend</scope><name>Backend</name></member>
      <member refid="class_backend_1abae42e001ae46520622eee4b0057ae6e" prot="public" virt="non-virtual"><scope>XBackend</scope><name>confineChanged</name></member>
      <member refid="class_x_backend_1a6cebc2c7533e2d01939c0d5ebb37ca74" prot="public" virt="virtual"><scope>XBackend</scope><name>confineRequest</name></member>
      <member refid="class_backend_1a4c7d3e2da4b46223e7173bf0dc48bb35" prot="public" virt="non-virtual"><scope>XBackend</scope><name>errorsAllowed</name></member>
      <member refid="class_backend_1a1c0576d117873460a4c68ab5c66d9bad" prot="public" virt="non-virtual"><scope>XBackend</scope><name>errorsAllowed</name></member>
      <member refid="class_backend_1a41a60536ee920afd0d172c8e8863a134" prot="public" virt="non-virtual"><scope>XBackend</scope><name>errorsAllowedChanged</name></member>
      <member refid="class_backend_1a8260b3774634dfe2cf1816da47f7d764" prot="public" virt="non-virtual"><scope>XBackend</scope><name>forceSurfaceCommit</name></member>
      <member refid="class_x_backend_1af2806000888b7357d2394cc3d25acdd1" prot="public" virt="virtual"><scope>XBackend</scope><name>hideAndConfineRequest</name></member>
      <member refid="class_x_backend_1aa966657ea2778ccfdf93274076c1d12f" prot="public" virt="virtual"><scope>XBackend</scope><name>init</name></member>
      <member refid="class_backend_1a30fc3e2a094ede1ac540a1e10fdc9f25" prot="public" virt="non-virtual"><scope>XBackend</scope><name>lockChanged</name></member>
      <member refid="class_backend_1a4258f56a05d77aa43630d3997ec308d4" prot="public" virt="non-virtual"><scope>XBackend</scope><name>lockHint</name></member>
      <member refid="class_backend_1a0e751b0cd0a4e204772f6c5bda422d96" prot="public" virt="non-virtual"><scope>XBackend</scope><name>lockHint</name></member>
      <member refid="class_backend_1a8734aa3612cd8d8694bee1c43d3e5218" prot="public" virt="non-virtual"><scope>XBackend</scope><name>lockHintChanged</name></member>
      <member refid="class_x_backend_1af30b9b3968800ff2a708c44c02a7231b" prot="public" virt="virtual"><scope>XBackend</scope><name>lockRequest</name></member>
      <member refid="class_x_backend_1a502d105fbb367c17c35274b9fd92e75e" prot="private" virt="non-virtual"><scope>XBackend</scope><name>m_xcbConn</name></member>
      <member refid="class_backend_1a3146ef7bb0edf5352175361f04bfa48c" prot="protected" virt="non-virtual"><scope>XBackend</scope><name>Mode</name></member>
      <member refid="class_backend_1a0afd492c3853d7451edbfadd710445e6" prot="public" virt="non-virtual"><scope>XBackend</scope><name>mode</name></member>
      <member refid="class_backend_1ad550fa5f0c97f4f409ac321a18f98726" prot="public" virt="non-virtual"><scope>XBackend</scope><name>mode</name></member>
      <member refid="class_backend_1a93043fcdc55e5cffd5c96d1b3ae64861" prot="public" virt="non-virtual"><scope>XBackend</scope><name>setErrorsAllowed</name></member>
      <member refid="class_backend_1ad44f31164228a1fecdf6534ea68e4cad" prot="protected" virt="non-virtual"><scope>XBackend</scope><name>setMode</name></member>
      <member refid="class_x_backend_1ae074beaa5830dd2f6cea33a1209190f2" prot="private" virt="non-virtual"><scope>XBackend</scope><name>tryConfine</name></member>
      <member refid="class_x_backend_1ab20b45d3d60a64bee3859bcfa0401605" prot="public" virt="virtual"><scope>XBackend</scope><name>unconfineRequest</name></member>
      <member refid="class_x_backend_1a1f94caefefc3321f72bfbeadcc97815f" prot="public" virt="virtual"><scope>XBackend</scope><name>undoHideRequest</name></member>
      <member refid="class_x_backend_1a4ed3ac30406c5fdcdf5df004910f6282" prot="public" virt="virtual"><scope>XBackend</scope><name>unlockRequest</name></member>
      <member refid="class_backend_1a12349d7c60386523404ffa73cdee07de" prot="protected" virt="non-virtual"><scope>XBackend</scope><name>view</name></member>
      <member refid="class_x_backend_1ad5e0dc7884a570f027748115aaad304f" prot="public" virt="non-virtual"><scope>XBackend</scope><name>XBackend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
