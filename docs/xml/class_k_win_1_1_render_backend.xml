<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_render_backend" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>KWin::RenderBackend</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <derivedcompoundref refid="class_k_win_1_1_open_g_l_backend" prot="public" virt="non-virtual">KWin::OpenGLBackend</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_q_painter_backend" prot="public" virt="non-virtual">KWin::QPainterBackend</derivedcompoundref>
    <includes refid="renderbackend_8h" local="no">renderbackend.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_render_backend_1a84af4f818dd7b805d02ce523b8a5e7bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_k_win_1aa1e33474a7077a13169f350a5949a79a" kindref="member">CompositingType</ref></type>
        <definition>virtual CompositingType KWin::RenderBackend::compositingType</definition>
        <argsstring>() const =0</argsstring>
        <name>compositingType</name>
        <qualifiedname>KWin::RenderBackend::compositingType</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_open_g_l_backend_1a068a4aa41e2476b9d25fdbd32e7f8e4a">compositingType</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_q_painter_backend_1aa900b8b99a52720ee4a4755004dd223f">compositingType</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="128" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_backend_1a995e6152b42f76691d296e99780ef707" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::RenderBackend::checkGraphicsReset</definition>
        <argsstring>()</argsstring>
        <name>checkGraphicsReset</name>
        <qualifiedname>KWin::RenderBackend::checkGraphicsReset</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_open_g_l_backend_1a237ff28011d49332970f9dc347f8608a">checkGraphicsReset</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="130" column="18" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_backend_1a0862ffb5aba97ee2d82e6488e4d1471d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref> *</type>
        <definition>virtual OutputLayer * KWin::RenderBackend::primaryLayer</definition>
        <argsstring>(Output *output)=0</argsstring>
        <name>primaryLayer</name>
        <qualifiedname>KWin::RenderBackend::primaryLayer</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_q_painter_backend_1a5381eb01f08d98f014d0ff06e4ced3f3">primaryLayer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_egl_gbm_backend_1a3c8d81e4218f913fb7e4d1fb5e8a855e">primaryLayer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_egl_backend_1ac9802be128b412f04534fcbcc167d4a1">primaryLayer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_q_painter_backend_1aa67952a9c655f49cb2ff29dd87c6b557">primaryLayer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a7d6f6ceef3324c8cd79748d0fa8c4b43">primaryLayer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend_1a051124ccefff0581ac7dde354eaf03ac">primaryLayer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_egl_backend_1a0490b0bbbde48fd1c69c7b422d91a832">primaryLayer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_q_painter_backend_1abf1be194075d9271eaad62886bc491f5">primaryLayer</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="132" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_backend_1abe178a184592ff07e972f4971de5f964" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref> *</type>
        <definition>OutputLayer * KWin::RenderBackend::cursorLayer</definition>
        <argsstring>(Output *output)</argsstring>
        <name>cursorLayer</name>
        <qualifiedname>KWin::RenderBackend::cursorLayer</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_q_painter_backend_1abed1391198b4029f6fa39d3ca70d8a49">cursorLayer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_egl_gbm_backend_1abda79d646c4699c2f1ce0568ea8cc382">cursorLayer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a1ef7ec6cbab7e83b9af307c7762442fb">cursorLayer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend_1ad043ca14ccf880e10a4c42c58be88316">cursorLayer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_egl_backend_1a3382ef1705a0ce3d511edaae026a252e">cursorLayer</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_q_painter_backend_1a3e7447dafa9524bd0c892d25c56ed583">cursorLayer</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="133" column="25" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_backend_1ad9736308199d71cdd97755a111f5abbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::RenderBackend::present</definition>
        <argsstring>(Output *output, const std::shared_ptr&lt; OutputFrame &gt; &amp;frame)=0</argsstring>
        <name>present</name>
        <qualifiedname>KWin::RenderBackend::present</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_q_painter_backend_1ab84f9ff10d2b4e19caae63a79cc5e500">present</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_egl_gbm_backend_1aa35f9183cc4fde3d05c17d7937ac1dc4">present</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_egl_backend_1abf3e4dc6165d4e3fe4508764b50c2320">present</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_q_painter_backend_1ac51c7163720432be25bec240063b719d">present</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a955c2fccd1e609d7e49815bfa300c6c3">present</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend_1a2783fd1ddb47a5c623928ed405a6e389">present</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_egl_backend_1ad95072fad105959aafe2af3ebaf4f8e4">present</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_q_painter_backend_1ae5c1404d0ed442eaa4f90c3f4774abb9">present</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> &gt; &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="134" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_backend_1a64651d2ee05d39d5e1df7391036198d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::RenderBackend::repairPresentation</definition>
        <argsstring>(Output *output)</argsstring>
        <name>repairPresentation</name>
        <qualifiedname>KWin::RenderBackend::repairPresentation</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_q_painter_backend_1a969d52f08c3e9ca1736b81459c09954e">repairPresentation</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_egl_gbm_backend_1a8c73b63da97376301fb4ffc16f011799">repairPresentation</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="135" column="18" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_backend_1a9135e39ee4f8aed8dcfd2771fe0a7773" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref> *</type>
        <definition>DrmDevice * KWin::RenderBackend::drmDevice</definition>
        <argsstring>() const</argsstring>
        <name>drmDevice</name>
        <qualifiedname>KWin::RenderBackend::drmDevice</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drm_q_painter_backend_1ab51dd7d7b302e166d3f5db25dbafa7a7">drmDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_egl_gbm_backend_1ae816e194e4b781a539fa2a7717eca006">drmDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_egl_backend_1ae421794aa98fbf71eca5ca1ce52a4008">drmDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a6ee85ab80ecd21d86bf2f9b265f0d709">drmDevice</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_x11_windowed_egl_backend_1acb57557a9ad86b482eaabe0f33447cac">drmDevice</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="137" column="23" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_backend_1a19fb9a934538fe684e8fe9725f253904" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::RenderBackend::testImportBuffer</definition>
        <argsstring>(GraphicsBuffer *buffer)</argsstring>
        <name>testImportBuffer</name>
        <qualifiedname>KWin::RenderBackend::testImportBuffer</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_abstract_egl_backend_1ae899fcb2071701328a9d2d346bea4793">testImportBuffer</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="139" column="18" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_backend_1aca3c178c2ab62c1b5f1074200b066c53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt;</type>
        <definition>QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt; KWin::RenderBackend::supportedFormats</definition>
        <argsstring>() const</argsstring>
        <name>supportedFormats</name>
        <qualifiedname>KWin::RenderBackend::supportedFormats</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_abstract_egl_backend_1aaa797548c180d8321f431322e00e063f">supportedFormats</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="140" column="19" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_render_backend_1ae04af70cc6faab27ad41086935c2601c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_surface_texture" kindref="compound">SurfaceTexture</ref> &gt;</type>
        <definition>std::unique_ptr&lt; SurfaceTexture &gt; KWin::RenderBackend::createSurfaceTextureWayland</definition>
        <argsstring>(SurfacePixmap *pixmap)</argsstring>
        <name>createSurfaceTextureWayland</name>
        <qualifiedname>KWin::RenderBackend::createSurfaceTextureWayland</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_abstract_egl_backend_1a1e9e39ced4836a1d2cffe7f3aba2cc81">createSurfaceTextureWayland</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_q_painter_backend_1aff220169aa2dab357193134bcf2b2614">createSurfaceTextureWayland</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_surface_pixmap" kindref="compound">SurfacePixmap</ref> *</type>
          <declname>pixmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="142" column="29" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="197" bodyend="200"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_render_backend" kindref="compound">RenderBackend</ref> class is the base class for all rendering backends. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>KWin::AbstractEglBackend</label>
        <link refid="class_k_win_1_1_abstract_egl_backend"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>KWin::DrmQPainterBackend</label>
        <link refid="class_k_win_1_1_drm_q_painter_backend"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>KWin::EglGbmBackend</label>
        <link refid="class_k_win_1_1_egl_gbm_backend"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KWin::OpenGLBackend</label>
        <link refid="class_k_win_1_1_open_g_l_backend"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>KWin::QPainterBackend</label>
        <link refid="class_k_win_1_1_q_painter_backend"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::RenderBackend</label>
        <link refid="class_k_win_1_1_render_backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>KWin::VirtualEglBackend</label>
        <link refid="class_k_win_1_1_virtual_egl_backend"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>KWin::VirtualQPainterBackend</label>
        <link refid="class_k_win_1_1_virtual_q_painter_backend"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>KWin::Wayland::WaylandEglBackend</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>KWin::Wayland::WaylandQPainterBackend</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_q_painter_backend"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>KWin::X11WindowedEglBackend</label>
        <link refid="class_k_win_1_1_x11_windowed_egl_backend"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>KWin::X11WindowedQPainterBackend</label>
        <link refid="class_k_win_1_1_x11_windowed_q_painter_backend"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::RenderBackend</label>
        <link refid="class_k_win_1_1_render_backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/core/renderbackend.h" line="123" column="1" bodyfile="kwin/src/core/renderbackend.h" bodystart="124" bodyend="143"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_render_backend_1a995e6152b42f76691d296e99780ef707" prot="public" virt="virtual"><scope>KWin::RenderBackend</scope><name>checkGraphicsReset</name></member>
      <member refid="class_k_win_1_1_render_backend_1a84af4f818dd7b805d02ce523b8a5e7bc" prot="public" virt="pure-virtual"><scope>KWin::RenderBackend</scope><name>compositingType</name></member>
      <member refid="class_k_win_1_1_render_backend_1ae04af70cc6faab27ad41086935c2601c" prot="public" virt="virtual"><scope>KWin::RenderBackend</scope><name>createSurfaceTextureWayland</name></member>
      <member refid="class_k_win_1_1_render_backend_1abe178a184592ff07e972f4971de5f964" prot="public" virt="virtual"><scope>KWin::RenderBackend</scope><name>cursorLayer</name></member>
      <member refid="class_k_win_1_1_render_backend_1a9135e39ee4f8aed8dcfd2771fe0a7773" prot="public" virt="virtual"><scope>KWin::RenderBackend</scope><name>drmDevice</name></member>
      <member refid="class_k_win_1_1_render_backend_1ad9736308199d71cdd97755a111f5abbe" prot="public" virt="pure-virtual"><scope>KWin::RenderBackend</scope><name>present</name></member>
      <member refid="class_k_win_1_1_render_backend_1a0862ffb5aba97ee2d82e6488e4d1471d" prot="public" virt="pure-virtual"><scope>KWin::RenderBackend</scope><name>primaryLayer</name></member>
      <member refid="class_k_win_1_1_render_backend_1a64651d2ee05d39d5e1df7391036198d8" prot="public" virt="virtual"><scope>KWin::RenderBackend</scope><name>repairPresentation</name></member>
      <member refid="class_k_win_1_1_render_backend_1aca3c178c2ab62c1b5f1074200b066c53" prot="public" virt="virtual"><scope>KWin::RenderBackend</scope><name>supportedFormats</name></member>
      <member refid="class_k_win_1_1_render_backend_1a19fb9a934538fe684e8fe9725f253904" prot="public" virt="virtual"><scope>KWin::RenderBackend</scope><name>testImportBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
