<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="outputlayer_8cpp" kind="file" language="C++">
    <compoundname>outputlayer.cpp</compoundname>
    <includes refid="outputlayer_8h" local="yes">outputlayer.h</includes>
    <includes refid="surfaceitem_8h" local="yes">scene/surfaceitem.h</includes>
    <includes refid="surfaceitem__wayland_8h" local="yes">scene/surfaceitem_wayland.h</includes>
    <includes refid="surface_8h" local="yes">wayland/surface.h</includes>
    <includes local="yes">moc_outputlayer.cpp</includes>
    <incdepgraph>
      <node id="4">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/core/outputlayer.cpp</label>
        <link refid="outputlayer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>outputlayer.h</label>
        <link refid="outputlayer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>scene/item.h</label>
        <link refid="item_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>scene/itemgeometry.h</label>
        <link refid="itemgeometry_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>scene/surfaceitem.h</label>
        <link refid="surfaceitem_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>scene/surfaceitem_wayland.h</label>
        <link refid="surfaceitem__wayland_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>wayland/surface.h</label>
        <link refid="surface_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>QByteArray</label>
      </node>
      <node id="35">
        <label>QColor</label>
      </node>
      <node id="13">
        <label>QCoreApplication</label>
      </node>
      <node id="22">
        <label>QDebug</label>
      </node>
      <node id="14">
        <label>QImage</label>
      </node>
      <node id="20">
        <label>QList</label>
      </node>
      <node id="6">
        <label>QMatrix4x4</label>
      </node>
      <node id="17">
        <label>QObject</label>
      </node>
      <node id="15">
        <label>QPoint</label>
      </node>
      <node id="25">
        <label>QPointer</label>
      </node>
      <node id="23">
        <label>QRect</label>
      </node>
      <node id="26">
        <label>QRegion</label>
      </node>
      <node id="21">
        <label>QSize</label>
      </node>
      <node id="39">
        <label>QTransform</label>
      </node>
      <node id="24">
        <label>QUuid</label>
      </node>
      <node id="16">
        <label>QVariant</label>
      </node>
      <node id="7">
        <label>QVector2D</label>
      </node>
      <node id="27">
        <label>chrono</label>
      </node>
      <node id="12">
        <label>config-kwin.h</label>
      </node>
      <node id="40">
        <label>deque</label>
      </node>
      <node id="36">
        <label>epoxy/gl.h</label>
      </node>
      <node id="8">
        <label>kwin_export.h</label>
      </node>
      <node id="45">
        <label>memory</label>
      </node>
      <node id="46">
        <label>moc_outputlayer.cpp</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="37">
        <label>ranges</label>
      </node>
      <node id="38">
        <label>span</label>
      </node>
      <node id="42">
        <label>unordered_map</label>
      </node>
      <node id="31">
        <label>utility</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2022<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputlayer_8h" kindref="compound">outputlayer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surfaceitem_8h" kindref="compound">scene/surfaceitem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surfaceitem__wayland_8h" kindref="compound">scene/surfaceitem_wayland.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface_8h" kindref="compound">wayland/surface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_k_win_1_1_output_layer_1a9ee261bca4012bac914df29d5ebf4117" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_layer_1a9ee261bca4012bac914df29d5ebf4117" kindref="member">OutputLayer::OutputLayer</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_output_layer_1a9b035f27d0ea567a73bf27f9ef82f744" kindref="member">m_output</ref>(output)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_k_win_1_1_output_layer_1a75cc900617e49a9125da7bf26f3ab986" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_output_layer_1a75cc900617e49a9125da7bf26f3ab986" kindref="member">OutputLayer::scale</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a00e5d48f76d5f74421c89655a66824b7" kindref="member">m_scale</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_k_win_1_1_output_layer_1a4dfcbf3650f97a4f072008773c981a03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a4dfcbf3650f97a4f072008773c981a03" kindref="member">OutputLayer::setScale</ref>(qreal<sp/><ref refid="class_k_win_1_1_output_layer_1a75cc900617e49a9125da7bf26f3ab986" kindref="member">scale</ref>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1a00e5d48f76d5f74421c89655a66824b7" kindref="member">m_scale</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_layer_1a75cc900617e49a9125da7bf26f3ab986" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_k_win_1_1_output_layer_1ab5b0f0faaea0c7e881db718a64658dc0" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_output_layer_1ab5b0f0faaea0c7e881db718a64658dc0" kindref="member">OutputLayer::hotspot</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="31"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a30b570aaca0b11d2a9d395703dedfa2e" kindref="member">m_hotspot</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_k_win_1_1_output_layer_1af15fe575d7268641fccc72b1f91b96aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1af15fe575d7268641fccc72b1f91b96aa" kindref="member">OutputLayer::setHotspot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;<ref refid="class_k_win_1_1_output_layer_1ab5b0f0faaea0c7e881db718a64658dc0" kindref="member">hotspot</ref>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1a30b570aaca0b11d2a9d395703dedfa2e" kindref="member">m_hotspot</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_layer_1ab5b0f0faaea0c7e881db718a64658dc0" kindref="member">hotspot</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_k_win_1_1_output_layer_1ac9ce2d0a04165b7d23f4229c0ed8e0e0" refkind="member"><highlight class="normal">QList&lt;QSize&gt;<sp/><ref refid="class_k_win_1_1_output_layer_1ac9ce2d0a04165b7d23f4229c0ed8e0e0" kindref="member">OutputLayer::recommendedSizes</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="41"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_k_win_1_1_output_layer_1a213d86c0f4be0c717d5e734d43224d01" refkind="member"><highlight class="normal">QRegion<sp/><ref refid="class_k_win_1_1_output_layer_1a213d86c0f4be0c717d5e734d43224d01" kindref="member">OutputLayer::repaints</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="46"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a55f0b76d433dc0f1dcbb41ca834e5d00" kindref="member">m_repaints</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_k_win_1_1_output_layer_1a2f2b3779acdac137f313af1b1d19aa57" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a2f2b3779acdac137f313af1b1d19aa57" kindref="member">OutputLayer::addRepaint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1a55f0b76d433dc0f1dcbb41ca834e5d00" kindref="member">m_repaints</ref><sp/>+=<sp/>region;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1a9b035f27d0ea567a73bf27f9ef82f744" kindref="member">m_output</ref>-&gt;renderLoop()-&gt;scheduleRepaint(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_k_win_1_1_output_layer_1a7e9983dfc6583b829e85961112a76646" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a7e9983dfc6583b829e85961112a76646" kindref="member">OutputLayer::resetRepaints</ref>()</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1a55f0b76d433dc0f1dcbb41ca834e5d00" kindref="member">m_repaints</ref><sp/>=<sp/>QRegion();</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_k_win_1_1_output_layer_1ab44b7af337ba615f5e5550586b99ecc9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1ab44b7af337ba615f5e5550586b99ecc9" kindref="member">OutputLayer::needsRepaint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="62"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_k_win_1_1_output_layer_1a55f0b76d433dc0f1dcbb41ca834e5d00" kindref="member">m_repaints</ref>.isEmpty();</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_k_win_1_1_output_layer_1a1843ff1def5379cfad784d76df2b5bbb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a1843ff1def5379cfad784d76df2b5bbb" kindref="member">OutputLayer::doImportScanoutBuffer</ref>(<ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref><sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>&amp;color,<sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9" kindref="member">RenderingIntent</ref><sp/>intent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_k_win_1_1_output_layer_1a54ee1bcc42a4346ddce4860b37339203" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a54ee1bcc42a4346ddce4860b37339203" kindref="member">OutputLayer::importScanoutBuffer</ref>(<ref refid="class_k_win_1_1_surface_item" kindref="compound">SurfaceItem</ref><sp/>*surfaceItem,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_item_wayland" kindref="compound">SurfaceItemWayland</ref><sp/>*wayland<sp/>=<sp/>qobject_cast&lt;SurfaceItemWayland<sp/>*&gt;(surfaceItem);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wayland<sp/>||<sp/>!wayland-&gt;<ref refid="class_k_win_1_1_surface_item_wayland_1a871c0473ec30040901ac25526443de7f" kindref="member">surface</ref>())<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buffer<sp/>=<sp/>wayland-&gt;<ref refid="class_k_win_1_1_surface_item_wayland_1a871c0473ec30040901ac25526443de7f" kindref="member">surface</ref>()-&gt;<ref refid="class_k_win_1_1_surface_interface_1a6f53ff0fca97e468e7ccf6681f4a5030" kindref="member">buffer</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buffer)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>attrs<sp/>=<sp/>buffer-&gt;<ref refid="class_k_win_1_1_graphics_buffer_1a975e80a802fa0d119921c13d4f06e576" kindref="member">dmabufAttributes</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!attrs)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>formats<sp/>=<sp/><ref refid="class_k_win_1_1_output_layer_1ace0c0e616f28f53a53498291526ff62d" kindref="member">supportedDrmFormats</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>formats.find(attrs-&gt;format);<sp/>it<sp/>!=<sp/>formats.end()<sp/>&amp;&amp;<sp/>!it-&gt;contains(attrs-&gt;modifier))<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_layer_1a008ca7b899cf515c4483c3f45f543b9a" kindref="member">m_scanoutCandidate</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_output_layer_1a008ca7b899cf515c4483c3f45f543b9a" kindref="member">m_scanoutCandidate</ref><sp/>!=<sp/>surfaceItem)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1a008ca7b899cf515c4483c3f45f543b9a" kindref="member">m_scanoutCandidate</ref>-&gt;setScanoutHint(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>{});</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1a008ca7b899cf515c4483c3f45f543b9a" kindref="member">m_scanoutCandidate</ref><sp/>=<sp/>surfaceItem;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surfaceItem-&gt;<ref refid="class_k_win_1_1_surface_item_1a735244ab809edf82283f1ee3d0c0fe52" kindref="member">setScanoutHint</ref>(<ref refid="class_k_win_1_1_output_layer_1ab43b39c7559453fd517bc4f1ee726784" kindref="member">scanoutDevice</ref>(),<sp/>formats);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1a81b53e2bbdca8faeb1fe25f53da077e6" kindref="member">m_sourceRect</ref><sp/>=<sp/>surfaceItem-&gt;<ref refid="class_k_win_1_1_surface_item_1a78e419406749e6261b8a12df9765ee7c" kindref="member">bufferSourceBox</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1ae5b61066054d6f2f817700a2ad38c338" kindref="member">m_bufferTransform</ref><sp/>=<sp/>surfaceItem-&gt;<ref refid="class_k_win_1_1_surface_item_1a0bcdf240eb231b5600df35be245e4e94" kindref="member">bufferTransform</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>desiredTransform<sp/>=<sp/><ref refid="class_k_win_1_1_output_layer_1a9b035f27d0ea567a73bf27f9ef82f744" kindref="member">m_output</ref><sp/>?<sp/><ref refid="class_k_win_1_1_output_layer_1a9b035f27d0ea567a73bf27f9ef82f744" kindref="member">m_output</ref>-&gt;transform()<sp/>:<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Kind::Normal</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1abe5864edf1b1412b7a922151b603907d" kindref="member">m_offloadTransform</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_layer_1ae5b61066054d6f2f817700a2ad38c338" kindref="member">m_bufferTransform</ref>.combine(desiredTransform.inverted());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="class_k_win_1_1_output_layer_1a1843ff1def5379cfad784d76df2b5bbb" kindref="member">doImportScanoutBuffer</ref>(buffer,<sp/>surfaceItem-&gt;<ref refid="class_k_win_1_1_item_1ab938104b60ece620180da2d602eb3982" kindref="member">colorDescription</ref>(),<sp/>surfaceItem-&gt;<ref refid="class_k_win_1_1_item_1a30178857b737d8c5a512b5bba9827989" kindref="member">renderingIntent</ref>(),<sp/>frame);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surfaceItem-&gt;<ref refid="class_k_win_1_1_surface_item_1a5cd3acd381df2d4a4937588cc97a9ef5" kindref="member">resetDamage</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>the<sp/>pixmap<sp/>is<sp/>updated<sp/>when<sp/>direct<sp/>scanout<sp/>ends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surfaceItem-&gt;<ref refid="class_k_win_1_1_surface_item_1a4e773587fe807c5683a9bf1c120f7976" kindref="member">destroyPixmap</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="class_k_win_1_1_output_layer_1a0c35fab74670dc55d6778c0ba83f65b3" refkind="member"><highlight class="normal">std::optional&lt;OutputLayerBeginFrameInfo&gt;<sp/><ref refid="class_k_win_1_1_output_layer_1a0c35fab74670dc55d6778c0ba83f65b3" kindref="member">OutputLayer::beginFrame</ref>()</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1a81b53e2bbdca8faeb1fe25f53da077e6" kindref="member">m_sourceRect</ref><sp/>=<sp/>QRectF(QPointF(0,<sp/>0),<sp/><ref refid="class_k_win_1_1_output_layer_1abf7d3cc9dff1017d98b72640f3a775f0" kindref="member">m_targetRect</ref>.size());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1ae5b61066054d6f2f817700a2ad38c338" kindref="member">m_bufferTransform</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_layer_1a9b035f27d0ea567a73bf27f9ef82f744" kindref="member">m_output</ref><sp/>?<sp/><ref refid="class_k_win_1_1_output_layer_1a9b035f27d0ea567a73bf27f9ef82f744" kindref="member">m_output</ref>-&gt;transform()<sp/>:<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Kind::Normal</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1abe5864edf1b1412b7a922151b603907d" kindref="member">m_offloadTransform</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Kind::Normal</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1aa468802d01855b8978b27bbc03be0c5b" kindref="member">doBeginFrame</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_k_win_1_1_output_layer_1a742e96adf296b32a4f1efaca57d602fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a742e96adf296b32a4f1efaca57d602fe" kindref="member">OutputLayer::endFrame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;renderedRegion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;damagedRegion,<sp/><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref><sp/>*frame)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a693ed0b18329db5416bab2c60b00304b" kindref="member">doEndFrame</ref>(renderedRegion,<sp/>damagedRegion,<sp/>frame);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_k_win_1_1_output_layer_1accd1ac89381d7761a47ba22f94200000" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1accd1ac89381d7761a47ba22f94200000" kindref="member">OutputLayer::notifyNoScanoutCandidate</ref>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_layer_1a008ca7b899cf515c4483c3f45f543b9a" kindref="member">m_scanoutCandidate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1a008ca7b899cf515c4483c3f45f543b9a" kindref="member">m_scanoutCandidate</ref>-&gt;setScanoutHint(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>{});</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1a008ca7b899cf515c4483c3f45f543b9a" kindref="member">m_scanoutCandidate</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_k_win_1_1_output_layer_1a44ada592a0855658e6e5fa96b5b67c04" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a44ada592a0855658e6e5fa96b5b67c04" kindref="member">OutputLayer::setEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1a8b34de14c7ce7f8f60fbb0899afd9d42" kindref="member">m_enabled</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="class_k_win_1_1_output_layer_1ade038d52e72b155d6ee023524d066d7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1ade038d52e72b155d6ee023524d066d7d" kindref="member">OutputLayer::isEnabled</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="134"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a8b34de14c7ce7f8f60fbb0899afd9d42" kindref="member">m_enabled</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_k_win_1_1_output_layer_1a2ae106b6b52ad73ff92ae9f0aa667461" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_output_layer_1a2ae106b6b52ad73ff92ae9f0aa667461" kindref="member">OutputLayer::sourceRect</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="139"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a81b53e2bbdca8faeb1fe25f53da077e6" kindref="member">m_sourceRect</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_k_win_1_1_output_layer_1a4836d5c759356c56eb085f9d51f6b9df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a4836d5c759356c56eb085f9d51f6b9df" kindref="member">OutputLayer::setSourceRect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1a81b53e2bbdca8faeb1fe25f53da077e6" kindref="member">m_sourceRect</ref><sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="class_k_win_1_1_output_layer_1abcbc86757c8850d18529bddc3d537160" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref><sp/><ref refid="class_k_win_1_1_output_layer_1abcbc86757c8850d18529bddc3d537160" kindref="member">OutputLayer::offloadTransform</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="149"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1abe5864edf1b1412b7a922151b603907d" kindref="member">m_offloadTransform</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="class_k_win_1_1_output_layer_1abcd7fbb2032b11fdd392da6b6247c725" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref><sp/><ref refid="class_k_win_1_1_output_layer_1abcd7fbb2032b11fdd392da6b6247c725" kindref="member">OutputLayer::bufferTransform</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="154"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1ae5b61066054d6f2f817700a2ad38c338" kindref="member">m_bufferTransform</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="class_k_win_1_1_output_layer_1a55b2e80edaf7ad94832884608aca8042" refkind="member"><highlight class="normal">QRect<sp/><ref refid="class_k_win_1_1_output_layer_1a55b2e80edaf7ad94832884608aca8042" kindref="member">OutputLayer::targetRect</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="159"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1abf7d3cc9dff1017d98b72640f3a775f0" kindref="member">m_targetRect</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_k_win_1_1_output_layer_1a85709e6e7f9019c3a16a362d041a8569" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_layer_1a85709e6e7f9019c3a16a362d041a8569" kindref="member">OutputLayer::setTargetRect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_layer_1abf7d3cc9dff1017d98b72640f3a775f0" kindref="member">m_targetRect</ref><sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_outputlayer.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/core/outputlayer.cpp"/>
  </compounddef>
</doxygen>
