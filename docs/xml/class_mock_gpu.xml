<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_mock_gpu" kind="class" language="C++" prot="public">
    <compoundname>MockGpu</compoundname>
    <includes refid="mock__drm_8h" local="no">mock_drm.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_mock_gpu_1af5351fd0eb06b646c0ea2ec2602b4ab4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int MockGpu::fd</definition>
        <argsstring></argsstring>
        <name>fd</name>
        <qualifiedname>MockGpu::fd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="162" column="9" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1ad0c1c380ad4c73d10055ed4b6a16b796" prot="public" static="no" mutable="no">
        <type>QString</type>
        <definition>QString MockGpu::devNode</definition>
        <argsstring></argsstring>
        <name>devNode</name>
        <qualifiedname>MockGpu::devNode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="163" column="13" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a5d50a657bb07e62cafa89dc91660ec0b" prot="public" static="no" mutable="no">
        <type>QByteArray</type>
        <definition>QByteArray MockGpu::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>MockGpu::name</qualifiedname>
        <initializer>= QByteArrayLiteral(&quot;mock&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="164" column="16" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a926b863f5f45fdc22a8474421274e043" prot="public" static="no" mutable="no">
        <type>QMap&lt; uint32_t, uint64_t &gt;</type>
        <definition>QMap&lt;uint32_t, uint64_t&gt; MockGpu::clientCaps</definition>
        <argsstring></argsstring>
        <name>clientCaps</name>
        <qualifiedname>MockGpu::clientCaps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="165" column="10" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a04f44a862d91b1be9f85430be09bda0d" prot="public" static="no" mutable="no">
        <type>QMap&lt; uint32_t, uint64_t &gt;</type>
        <definition>QMap&lt;uint32_t, uint64_t&gt; MockGpu::deviceCaps</definition>
        <argsstring></argsstring>
        <name>deviceCaps</name>
        <qualifiedname>MockGpu::deviceCaps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="166" column="10" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a4c7378ffc35996666c5da7cc24bb2e73" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t MockGpu::idCounter</definition>
        <argsstring></argsstring>
        <name>idCounter</name>
        <qualifiedname>MockGpu::idCounter</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="168" column="14" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1af228becb570bd6c7ba0aa74abe0fa246" prot="public" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_mock_object" kindref="compound">MockObject</ref> * &gt;</type>
        <definition>QList&lt;MockObject *&gt; MockGpu::objects</definition>
        <argsstring></argsstring>
        <name>objects</name>
        <qualifiedname>MockGpu::objects</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="169" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1ae385e7151cc0ba270fd92fd9b597c7fb" prot="public" static="no" mutable="no">
        <type>QList&lt; std::shared_ptr&lt; <ref refid="class_mock_connector" kindref="compound">MockConnector</ref> &gt; &gt;</type>
        <definition>QList&lt;std::shared_ptr&lt;MockConnector&gt; &gt; MockGpu::connectors</definition>
        <argsstring></argsstring>
        <name>connectors</name>
        <qualifiedname>MockGpu::connectors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="171" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a4db44c183cfe6b86c2aba593ba8abac1" prot="public" static="no" mutable="no">
        <type>QList&lt; drmModeConnectorPtr &gt;</type>
        <definition>QList&lt;drmModeConnectorPtr&gt; MockGpu::drmConnectors</definition>
        <argsstring></argsstring>
        <name>drmConnectors</name>
        <qualifiedname>MockGpu::drmConnectors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="172" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a6ff8af8b7190595f236d6b70798f05c3" prot="public" static="no" mutable="no">
        <type>QList&lt; std::shared_ptr&lt; <ref refid="class_mock_encoder" kindref="compound">MockEncoder</ref> &gt; &gt;</type>
        <definition>QList&lt;std::shared_ptr&lt;MockEncoder&gt; &gt; MockGpu::encoders</definition>
        <argsstring></argsstring>
        <name>encoders</name>
        <qualifiedname>MockGpu::encoders</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="174" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1af35965dad6c5e6b91ff77c5f1d3be3a2" prot="public" static="no" mutable="no">
        <type>QList&lt; drmModeEncoderPtr &gt;</type>
        <definition>QList&lt;drmModeEncoderPtr&gt; MockGpu::drmEncoders</definition>
        <argsstring></argsstring>
        <name>drmEncoders</name>
        <qualifiedname>MockGpu::drmEncoders</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="175" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a099a159db7e9d7c71ef51fa8160e113e" prot="public" static="no" mutable="no">
        <type>QList&lt; std::shared_ptr&lt; <ref refid="class_mock_crtc" kindref="compound">MockCrtc</ref> &gt; &gt;</type>
        <definition>QList&lt;std::shared_ptr&lt;MockCrtc&gt; &gt; MockGpu::crtcs</definition>
        <argsstring></argsstring>
        <name>crtcs</name>
        <qualifiedname>MockGpu::crtcs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="177" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1adc76c685139cc925cb73de9f4edaa4f7" prot="public" static="no" mutable="no">
        <type>QList&lt; drmModeCrtcPtr &gt;</type>
        <definition>QList&lt;drmModeCrtcPtr&gt; MockGpu::drmCrtcs</definition>
        <argsstring></argsstring>
        <name>drmCrtcs</name>
        <qualifiedname>MockGpu::drmCrtcs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="178" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a82ee29b7bfcb3c9b214c0b06e9a06638" prot="public" static="no" mutable="no">
        <type>QList&lt; std::shared_ptr&lt; <ref refid="class_mock_plane" kindref="compound">MockPlane</ref> &gt; &gt;</type>
        <definition>QList&lt;std::shared_ptr&lt;MockPlane&gt; &gt; MockGpu::planes</definition>
        <argsstring></argsstring>
        <name>planes</name>
        <qualifiedname>MockGpu::planes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="180" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a46189b8fffdf443ba058cb50a37ff89e" prot="public" static="no" mutable="no">
        <type>QList&lt; drmModePlanePtr &gt;</type>
        <definition>QList&lt;drmModePlanePtr&gt; MockGpu::drmPlanes</definition>
        <argsstring></argsstring>
        <name>drmPlanes</name>
        <qualifiedname>MockGpu::drmPlanes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="181" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a48fcd9ef84c479bc90d52e7046ed4b8d" prot="public" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_mock_fb" kindref="compound">MockFb</ref> * &gt;</type>
        <definition>QList&lt;MockFb *&gt; MockGpu::fbs</definition>
        <argsstring></argsstring>
        <name>fbs</name>
        <qualifiedname>MockGpu::fbs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="183" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a5c3921b692cdb5b5b10022dc1d75fc4e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="class_mock_property_blob" kindref="compound">MockPropertyBlob</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;MockPropertyBlob&gt; &gt; MockGpu::propertyBlobs</definition>
        <argsstring></argsstring>
        <name>propertyBlobs</name>
        <qualifiedname>MockGpu::propertyBlobs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="184" column="17" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a116fb093cec6f86e69c83bd894f2d8f0" prot="public" static="no" mutable="no">
        <type>QList&lt; drmModeResPtr &gt;</type>
        <definition>QList&lt;drmModeResPtr&gt; MockGpu::resPtrs</definition>
        <argsstring></argsstring>
        <name>resPtrs</name>
        <qualifiedname>MockGpu::resPtrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="186" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a63c82d673f4f569627a8d177a7662437" prot="public" static="no" mutable="no">
        <type>QList&lt; drmModePropertyPtr &gt;</type>
        <definition>QList&lt;drmModePropertyPtr&gt; MockGpu::drmProps</definition>
        <argsstring></argsstring>
        <name>drmProps</name>
        <qualifiedname>MockGpu::drmProps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="187" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a8d3a1ef4d55a1235ebbab526a26b99d7" prot="public" static="no" mutable="no">
        <type>QList&lt; drmModePropertyBlobPtr &gt;</type>
        <definition>QList&lt;drmModePropertyBlobPtr&gt; MockGpu::drmPropertyBlobs</definition>
        <argsstring></argsstring>
        <name>drmPropertyBlobs</name>
        <qualifiedname>MockGpu::drmPropertyBlobs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="188" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a7c10720c29580871293ad95cc54b4bf2" prot="public" static="no" mutable="no">
        <type>QList&lt; drmModeObjectPropertiesPtr &gt;</type>
        <definition>QList&lt;drmModeObjectPropertiesPtr&gt; MockGpu::drmObjectProperties</definition>
        <argsstring></argsstring>
        <name>drmObjectProperties</name>
        <qualifiedname>MockGpu::drmObjectProperties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="189" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a94bba5871c7c9376e5c6819750f9bb57" prot="public" static="no" mutable="no">
        <type>QList&lt; drmModePlaneResPtr &gt;</type>
        <definition>QList&lt;drmModePlaneResPtr&gt; MockGpu::drmPlaneRes</definition>
        <argsstring></argsstring>
        <name>drmPlaneRes</name>
        <qualifiedname>MockGpu::drmPlaneRes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="190" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_gpu_1a2278cd179c300c691e8451ff75f1841c" prot="public" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex MockGpu::m_mutex</definition>
        <argsstring></argsstring>
        <name>m_mutex</name>
        <qualifiedname>MockGpu::m_mutex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="191" column="16" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="191" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mock_gpu_1ae354f1a9166a6dcaf4506723f9a1ada0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockGpu::MockGpu</definition>
        <argsstring>(int fd, const QString &amp;devNode, int numCrtcs, int gammaSize=255)</argsstring>
        <name>MockGpu</name>
        <qualifiedname>MockGpu::MockGpu</qualifiedname>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>devNode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numCrtcs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gammaSize</declname>
          <defval>255</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="152" column="5" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="31" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_gpu_1ad49c2886c32ff785d72ae9c3565d338c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockGpu::~MockGpu</definition>
        <argsstring>()</argsstring>
        <name>~MockGpu</name>
        <qualifiedname>MockGpu::~MockGpu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="153" column="5" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_gpu_1aefee8ba24883f2b3ac70d30c5a07afc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_mock_connector" kindref="compound">MockConnector</ref> *</type>
        <definition>MockConnector * MockGpu::findConnector</definition>
        <argsstring>(uint32_t id) const</argsstring>
        <name>findConnector</name>
        <qualifiedname>MockGpu::findConnector</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="155" column="19" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_gpu_1a9b2c20aa21560e073aa27042690591b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_mock_crtc" kindref="compound">MockCrtc</ref> *</type>
        <definition>MockCrtc * MockGpu::findCrtc</definition>
        <argsstring>(uint32_t id) const</argsstring>
        <name>findCrtc</name>
        <qualifiedname>MockGpu::findCrtc</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="156" column="14" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_gpu_1aa26af920e7adb460784136c0a1f528f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_mock_plane" kindref="compound">MockPlane</ref> *</type>
        <definition>MockPlane * MockGpu::findPlane</definition>
        <argsstring>(uint32_t id) const</argsstring>
        <name>findPlane</name>
        <qualifiedname>MockGpu::findPlane</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="157" column="15" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_gpu_1af43f2cb9895d07cfece378389be0397b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_mock_property_blob" kindref="compound">MockPropertyBlob</ref> *</type>
        <definition>MockPropertyBlob * MockGpu::getBlob</definition>
        <argsstring>(uint32_t id) const</argsstring>
        <name>getBlob</name>
        <qualifiedname>MockGpu::getBlob</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="158" column="22" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_gpu_1ad294b2530950a96055ef2c659fb8a320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MockGpu::flipPage</definition>
        <argsstring>(uint32_t crtcId)</argsstring>
        <name>flipPage</name>
        <qualifiedname>MockGpu::flipPage</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>crtcId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="160" column="10" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="79" bodyend="89"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="kwin/autotests/drm/mock_drm.h" line="150" column="1" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="150" bodyend="192"/>
    <listofallmembers>
      <member refid="class_mock_gpu_1a926b863f5f45fdc22a8474421274e043" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>clientCaps</name></member>
      <member refid="class_mock_gpu_1ae385e7151cc0ba270fd92fd9b597c7fb" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>connectors</name></member>
      <member refid="class_mock_gpu_1a099a159db7e9d7c71ef51fa8160e113e" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>crtcs</name></member>
      <member refid="class_mock_gpu_1a04f44a862d91b1be9f85430be09bda0d" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>deviceCaps</name></member>
      <member refid="class_mock_gpu_1ad0c1c380ad4c73d10055ed4b6a16b796" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>devNode</name></member>
      <member refid="class_mock_gpu_1a4db44c183cfe6b86c2aba593ba8abac1" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>drmConnectors</name></member>
      <member refid="class_mock_gpu_1adc76c685139cc925cb73de9f4edaa4f7" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>drmCrtcs</name></member>
      <member refid="class_mock_gpu_1af35965dad6c5e6b91ff77c5f1d3be3a2" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>drmEncoders</name></member>
      <member refid="class_mock_gpu_1a7c10720c29580871293ad95cc54b4bf2" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>drmObjectProperties</name></member>
      <member refid="class_mock_gpu_1a94bba5871c7c9376e5c6819750f9bb57" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>drmPlaneRes</name></member>
      <member refid="class_mock_gpu_1a46189b8fffdf443ba058cb50a37ff89e" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>drmPlanes</name></member>
      <member refid="class_mock_gpu_1a8d3a1ef4d55a1235ebbab526a26b99d7" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>drmPropertyBlobs</name></member>
      <member refid="class_mock_gpu_1a63c82d673f4f569627a8d177a7662437" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>drmProps</name></member>
      <member refid="class_mock_gpu_1a6ff8af8b7190595f236d6b70798f05c3" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>encoders</name></member>
      <member refid="class_mock_gpu_1a48fcd9ef84c479bc90d52e7046ed4b8d" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>fbs</name></member>
      <member refid="class_mock_gpu_1af5351fd0eb06b646c0ea2ec2602b4ab4" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>fd</name></member>
      <member refid="class_mock_gpu_1aefee8ba24883f2b3ac70d30c5a07afc4" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>findConnector</name></member>
      <member refid="class_mock_gpu_1a9b2c20aa21560e073aa27042690591b9" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>findCrtc</name></member>
      <member refid="class_mock_gpu_1aa26af920e7adb460784136c0a1f528f9" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>findPlane</name></member>
      <member refid="class_mock_gpu_1ad294b2530950a96055ef2c659fb8a320" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>flipPage</name></member>
      <member refid="class_mock_gpu_1af43f2cb9895d07cfece378389be0397b" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>getBlob</name></member>
      <member refid="class_mock_gpu_1a4c7378ffc35996666c5da7cc24bb2e73" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>idCounter</name></member>
      <member refid="class_mock_gpu_1a2278cd179c300c691e8451ff75f1841c" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>m_mutex</name></member>
      <member refid="class_mock_gpu_1ae354f1a9166a6dcaf4506723f9a1ada0" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>MockGpu</name></member>
      <member refid="class_mock_gpu_1a5d50a657bb07e62cafa89dc91660ec0b" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>name</name></member>
      <member refid="class_mock_gpu_1af228becb570bd6c7ba0aa74abe0fa246" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>objects</name></member>
      <member refid="class_mock_gpu_1a82ee29b7bfcb3c9b214c0b06e9a06638" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>planes</name></member>
      <member refid="class_mock_gpu_1a5c3921b692cdb5b5b10022dc1d75fc4e" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>propertyBlobs</name></member>
      <member refid="class_mock_gpu_1a116fb093cec6f86e69c83bd894f2d8f0" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>resPtrs</name></member>
      <member refid="class_mock_gpu_1ad49c2886c32ff785d72ae9c3565d338c" prot="public" virt="non-virtual"><scope>MockGpu</scope><name>~MockGpu</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
