<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_drm_framebuffer" kind="class" language="C++" prot="public">
    <compoundname>KWin::DrmFramebuffer</compoundname>
    <includes refid="drm__buffer_8h" local="no">drm_buffer.h</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_drm_framebuffer_1a96c096929fa20fc2cb4cdac012b37597" prot="protected" static="no" mutable="no">
        <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_drm_framebuffer_data" kindref="compound">DrmFramebufferData</ref> &gt;</type>
        <definition>const std::shared_ptr&lt;DrmFramebufferData&gt; KWin::DrmFramebuffer::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <qualifiedname>KWin::DrmFramebuffer::m_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_buffer.h" line="54" column="27" bodyfile="kwin/src/backends/drm/drm_buffer.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_framebuffer_1a989520d636f8fd16bae6b480a1d6d730" prot="protected" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_graphics_buffer_ref" kindref="compound">GraphicsBufferRef</ref></type>
        <definition>GraphicsBufferRef KWin::DrmFramebuffer::m_bufferRef</definition>
        <argsstring></argsstring>
        <name>m_bufferRef</name>
        <qualifiedname>KWin::DrmFramebuffer::m_bufferRef</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_buffer.h" line="55" column="23" bodyfile="kwin/src/backends/drm/drm_buffer.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_framebuffer_1a5f06c799c2f2c9f80bdf325389cf462e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::DrmFramebuffer::m_readable</definition>
        <argsstring></argsstring>
        <name>m_readable</name>
        <qualifiedname>KWin::DrmFramebuffer::m_readable</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_buffer.h" line="56" column="10" bodyfile="kwin/src/backends/drm/drm_buffer.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_framebuffer_1a9daf9244c9f02b28facf0fd285111ccf" prot="protected" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref></type>
        <definition>FileDescriptor KWin::DrmFramebuffer::m_syncFd</definition>
        <argsstring></argsstring>
        <name>m_syncFd</name>
        <qualifiedname>KWin::DrmFramebuffer::m_syncFd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_buffer.h" line="57" column="20" bodyfile="kwin/src/backends/drm/drm_buffer.h" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_drm_framebuffer_1aafc5012ab4b4e49294210d405c409098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::DrmFramebuffer::DrmFramebuffer</definition>
        <argsstring>(const std::shared_ptr&lt; DrmFramebufferData &gt; &amp;data, GraphicsBuffer *buffer, FileDescriptor &amp;&amp;readFence)</argsstring>
        <name>DrmFramebuffer</name>
        <qualifiedname>KWin::DrmFramebuffer::DrmFramebuffer</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_drm_framebuffer_data" kindref="compound">DrmFramebufferData</ref> &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref> &amp;&amp;</type>
          <declname>readFence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_buffer.h" line="36" column="5" bodyfile="kwin/src/backends/drm/drm_buffer.cpp" bodystart="63" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_framebuffer_1a5a7edef1784baf721588949d343605ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t KWin::DrmFramebuffer::framebufferId</definition>
        <argsstring>() const</argsstring>
        <name>framebufferId</name>
        <qualifiedname>KWin::DrmFramebuffer::framebufferId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_buffer.h" line="38" column="14" bodyfile="kwin/src/backends/drm/drm_buffer.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_framebuffer_1a94380ffcf7ae2171c288095bce1dce78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref> *</type>
        <definition>GraphicsBuffer * KWin::DrmFramebuffer::buffer</definition>
        <argsstring>() const</argsstring>
        <name>buffer</name>
        <qualifiedname>KWin::DrmFramebuffer::buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>may be nullptr </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_buffer.h" line="43" column="20" bodyfile="kwin/src/backends/drm/drm_buffer.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_framebuffer_1a6273e083c919c043c1b5ebddda7c59ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DrmFramebuffer::releaseBuffer</definition>
        <argsstring>()</argsstring>
        <name>releaseBuffer</name>
        <qualifiedname>KWin::DrmFramebuffer::releaseBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_buffer.h" line="45" column="10" bodyfile="kwin/src/backends/drm/drm_buffer.cpp" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_framebuffer_1a95747046fb48250cfbc8120323e62b84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::DrmFramebuffer::isReadable</definition>
        <argsstring>()</argsstring>
        <name>isReadable</name>
        <qualifiedname>KWin::DrmFramebuffer::isReadable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_buffer.h" line="46" column="10" bodyfile="kwin/src/backends/drm/drm_buffer.cpp" bodystart="105" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_framebuffer_1a68ce8bb78f24edb0d0dd1499db7f6978" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref> &amp;</type>
        <definition>const FileDescriptor &amp; KWin::DrmFramebuffer::syncFd</definition>
        <argsstring>() const</argsstring>
        <name>syncFd</name>
        <qualifiedname>KWin::DrmFramebuffer::syncFd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_buffer.h" line="48" column="26" bodyfile="kwin/src/backends/drm/drm_buffer.cpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_framebuffer_1a725acf7d05b41dbe2e4d98a592226683" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DrmFramebuffer::setDeadline</definition>
        <argsstring>(std::chrono::steady_clock::time_point deadline)</argsstring>
        <name>setDeadline</name>
        <qualifiedname>KWin::DrmFramebuffer::setDeadline</qualifiedname>
        <param>
          <type>std::chrono::steady_clock::time_point</type>
          <declname>deadline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_buffer.h" line="49" column="10" bodyfile="kwin/src/backends/drm/drm_buffer.cpp" bodystart="120" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_framebuffer_1aedaef0fa1ebfa5c1f1d11e4ac0269171" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_drm_framebuffer_data" kindref="compound">DrmFramebufferData</ref> &gt;</type>
        <definition>std::shared_ptr&lt; KWin::DrmFramebufferData &gt; KWin::DrmFramebuffer::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <qualifiedname>KWin::DrmFramebuffer::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_buffer.h" line="51" column="21" bodyfile="kwin/src/backends/drm/drm_buffer.cpp" bodystart="134" bodyend="137"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>KWin::DrmFramebuffer</label>
        <link refid="class_k_win_1_1_drm_framebuffer"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_bufferRef</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_syncFd</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KWin::FileDescriptor</label>
        <link refid="class_k_win_1_1_file_descriptor"/>
      </node>
      <node id="2">
        <label>KWin::GraphicsBufferRef</label>
        <link refid="class_k_win_1_1_graphics_buffer_ref"/>
      </node>
    </collaborationgraph>
    <location file="kwin/src/backends/drm/drm_buffer.h" line="33" column="1" bodyfile="kwin/src/backends/drm/drm_buffer.h" bodystart="34" bodyend="58"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_drm_framebuffer_1a94380ffcf7ae2171c288095bce1dce78" prot="public" virt="non-virtual"><scope>KWin::DrmFramebuffer</scope><name>buffer</name></member>
      <member refid="class_k_win_1_1_drm_framebuffer_1aedaef0fa1ebfa5c1f1d11e4ac0269171" prot="public" virt="non-virtual"><scope>KWin::DrmFramebuffer</scope><name>data</name></member>
      <member refid="class_k_win_1_1_drm_framebuffer_1aafc5012ab4b4e49294210d405c409098" prot="public" virt="non-virtual"><scope>KWin::DrmFramebuffer</scope><name>DrmFramebuffer</name></member>
      <member refid="class_k_win_1_1_drm_framebuffer_1a5a7edef1784baf721588949d343605ed" prot="public" virt="non-virtual"><scope>KWin::DrmFramebuffer</scope><name>framebufferId</name></member>
      <member refid="class_k_win_1_1_drm_framebuffer_1a95747046fb48250cfbc8120323e62b84" prot="public" virt="non-virtual"><scope>KWin::DrmFramebuffer</scope><name>isReadable</name></member>
      <member refid="class_k_win_1_1_drm_framebuffer_1a989520d636f8fd16bae6b480a1d6d730" prot="protected" virt="non-virtual"><scope>KWin::DrmFramebuffer</scope><name>m_bufferRef</name></member>
      <member refid="class_k_win_1_1_drm_framebuffer_1a96c096929fa20fc2cb4cdac012b37597" prot="protected" virt="non-virtual"><scope>KWin::DrmFramebuffer</scope><name>m_data</name></member>
      <member refid="class_k_win_1_1_drm_framebuffer_1a5f06c799c2f2c9f80bdf325389cf462e" prot="protected" virt="non-virtual"><scope>KWin::DrmFramebuffer</scope><name>m_readable</name></member>
      <member refid="class_k_win_1_1_drm_framebuffer_1a9daf9244c9f02b28facf0fd285111ccf" prot="protected" virt="non-virtual"><scope>KWin::DrmFramebuffer</scope><name>m_syncFd</name></member>
      <member refid="class_k_win_1_1_drm_framebuffer_1a6273e083c919c043c1b5ebddda7c59ea" prot="public" virt="non-virtual"><scope>KWin::DrmFramebuffer</scope><name>releaseBuffer</name></member>
      <member refid="class_k_win_1_1_drm_framebuffer_1a725acf7d05b41dbe2e4d98a592226683" prot="public" virt="non-virtual"><scope>KWin::DrmFramebuffer</scope><name>setDeadline</name></member>
      <member refid="class_k_win_1_1_drm_framebuffer_1a68ce8bb78f24edb0d0dd1499db7f6978" prot="public" virt="non-virtual"><scope>KWin::DrmFramebuffer</scope><name>syncFd</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
