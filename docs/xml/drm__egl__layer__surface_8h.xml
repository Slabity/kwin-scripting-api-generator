<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="drm__egl__layer__surface_8h" kind="file" language="C++">
    <compoundname>drm_egl_layer_surface.h</compoundname>
    <includes local="no">QHash</includes>
    <includes local="no">QMap</includes>
    <includes local="no">QPointer</includes>
    <includes local="no">QRegion</includes>
    <includes local="no">chrono</includes>
    <includes local="no">optional</includes>
    <includes refid="outputlayer_8h" local="yes">core/outputlayer.h</includes>
    <includes refid="drm__plane_8h" local="yes">drm_plane.h</includes>
    <includes refid="gltexture_8h" local="yes">opengl/gltexture.h</includes>
    <includes refid="damagejournal_8h" local="yes">utils/damagejournal.h</includes>
    <includes refid="filedescriptor_8h" local="yes">utils/filedescriptor.h</includes>
    <includedby refid="drm__egl__layer_8h" local="yes">kwin/src/backends/drm/drm_egl_layer.h</includedby>
    <includedby refid="drm__egl__layer__surface_8cpp" local="yes">kwin/src/backends/drm/drm_egl_layer_surface.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/backends/drm/drm_egl_layer_surface.h</label>
        <link refid="drm__egl__layer__surface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>drm_logging.h</label>
        <link refid="drm__logging_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>drm_object.h</label>
        <link refid="drm__object_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>drm_plane.h</label>
        <link refid="drm__plane_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>drm_pointer.h</label>
        <link refid="drm__pointer_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>drm_property.h</label>
        <link refid="drm__property_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>core/outputlayer.h</label>
        <link refid="outputlayer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>opengl/gltexture.h</label>
        <link refid="gltexture_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>utils/damagejournal.h</label>
        <link refid="damagejournal_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>QByteArray</label>
      </node>
      <node id="18">
        <label>QCoreApplication</label>
      </node>
      <node id="27">
        <label>QDebug</label>
      </node>
      <node id="42">
        <label>QExplicitlySharedDataPointer</label>
      </node>
      <node id="2">
        <label>QHash</label>
      </node>
      <node id="19">
        <label>QImage</label>
      </node>
      <node id="25">
        <label>QList</label>
      </node>
      <node id="39">
        <label>QLoggingCategory</label>
      </node>
      <node id="3">
        <label>QMap</label>
      </node>
      <node id="11">
        <label>QMatrix4x4</label>
      </node>
      <node id="22">
        <label>QObject</label>
      </node>
      <node id="20">
        <label>QPoint</label>
      </node>
      <node id="4">
        <label>QPointer</label>
      </node>
      <node id="28">
        <label>QRect</label>
      </node>
      <node id="5">
        <label>QRegion</label>
      </node>
      <node id="26">
        <label>QSize</label>
      </node>
      <node id="29">
        <label>QUuid</label>
      </node>
      <node id="21">
        <label>QVariant</label>
      </node>
      <node id="12">
        <label>QVector2D</label>
      </node>
      <node id="6">
        <label>chrono</label>
      </node>
      <node id="17">
        <label>config-kwin.h</label>
      </node>
      <node id="43">
        <label>epoxy/gl.h</label>
      </node>
      <node id="13">
        <label>kwin_export.h</label>
      </node>
      <node id="35">
        <label>memory</label>
      </node>
      <node id="7">
        <label>optional</label>
      </node>
      <node id="40">
        <label>qobjectdefs.h</label>
      </node>
      <node id="32">
        <label>vector</label>
      </node>
      <node id="36">
        <label>xf86drm.h</label>
      </node>
      <node id="33">
        <label>xf86drmMode.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>kwin/src/backends/drm/drm_egl_backend.cpp</label>
        <link refid="drm__egl__backend_8cpp"/>
      </node>
      <node id="4">
        <label>kwin/src/backends/drm/drm_egl_layer.cpp</label>
        <link refid="drm__egl__layer_8cpp"/>
      </node>
      <node id="2">
        <label>kwin/src/backends/drm/drm_egl_layer.h</label>
        <link refid="drm__egl__layer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>kwin/src/backends/drm/drm_egl_layer_surface.cpp</label>
        <link refid="drm__egl__layer__surface_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/src/backends/drm/drm_egl_layer_surface.h</label>
        <link refid="drm__egl__layer__surface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_k_win_1_1_egl_gbm_layer_surface" prot="public">KWin::EglGbmLayerSurface</innerclass>
    <innerclass refid="struct_k_win_1_1_egl_gbm_layer_surface_1_1_surface" prot="private">KWin::EglGbmLayerSurface::Surface</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2022<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QHash&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QMap&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPointer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QRegion&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputlayer_8h" kindref="compound">core/outputlayer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__plane_8h" kindref="compound">drm_plane.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gltexture_8h" kindref="compound">opengl/gltexture.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="damagejournal_8h" kindref="compound">utils/damagejournal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filedescriptor_8h" kindref="compound">utils/filedescriptor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_drm_framebuffer" kindref="compound">DrmFramebuffer</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_egl_swapchain" kindref="compound">EglSwapchain</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_egl_swapchain_slot" kindref="compound">EglSwapchainSlot</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_q_painter_swapchain" kindref="compound">QPainterSwapchain</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ShadowBuffer;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_egl_context" kindref="compound">EglContext</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_egl_gbm_backend" kindref="compound">EglGbmBackend</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_surface_item" kindref="compound">SurfaceItem</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_g_l_render_time_query" kindref="compound">GLRenderTimeQuery</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_color_transformation" kindref="compound">ColorTransformation</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_gl_look_up_table" kindref="compound">GlLookUpTable</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_icc_profile" kindref="compound">IccProfile</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_icc_shader" kindref="compound">IccShader</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_k_win_1_1_egl_gbm_layer_surface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a5c81bddb000a904983e38cecb1a4c8ca" kindref="member">EglGbmLayerSurface</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47" refid="class_k_win_1_1_egl_gbm_layer_surface_1ab17635882d2915f6aa7fdcdca0c639c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1ab17635882d2915f6aa7fdcdca0c639c2" kindref="member">BufferTarget</ref><sp/>{</highlight></codeline>
<codeline lineno="48" refid="class_k_win_1_1_egl_gbm_layer_surface_1ab17635882d2915f6aa7fdcdca0c639c2a960b44c579bc2f6818d2daaf9e4c16f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1ab17635882d2915f6aa7fdcdca0c639c2a960b44c579bc2f6818d2daaf9e4c16f0" kindref="member">Normal</ref>,</highlight></codeline>
<codeline lineno="49" refid="class_k_win_1_1_egl_gbm_layer_surface_1ab17635882d2915f6aa7fdcdca0c639c2a32a843da6ea40ab3b17a3421ccdf671b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1ab17635882d2915f6aa7fdcdca0c639c2a32a843da6ea40ab3b17a3421ccdf671b" kindref="member">Linear</ref>,</highlight></codeline>
<codeline lineno="50" refid="class_k_win_1_1_egl_gbm_layer_surface_1ab17635882d2915f6aa7fdcdca0c639c2aee3baea5004e82ea07484fe8aa0f5507" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1ab17635882d2915f6aa7fdcdca0c639c2aee3baea5004e82ea07484fe8aa0f5507" kindref="member">Dumb</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="52" refid="class_k_win_1_1_egl_gbm_layer_surface_1a37b5b81ab1dc7375fa786fee10448f94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a37b5b81ab1dc7375fa786fee10448f94" kindref="member">FormatOption</ref><sp/>{</highlight></codeline>
<codeline lineno="53" refid="class_k_win_1_1_egl_gbm_layer_surface_1a37b5b81ab1dc7375fa786fee10448f94a7b96b22436d220ca5aa482f2ec88bbb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a37b5b81ab1dc7375fa786fee10448f94a7b96b22436d220ca5aa482f2ec88bbb6" kindref="member">PreferAlpha</ref>,</highlight></codeline>
<codeline lineno="54" refid="class_k_win_1_1_egl_gbm_layer_surface_1a37b5b81ab1dc7375fa786fee10448f94a661129824965c92fb9b8a29a1a3e4950" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a37b5b81ab1dc7375fa786fee10448f94a661129824965c92fb9b8a29a1a3e4950" kindref="member">RequireAlpha</ref></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a5c81bddb000a904983e38cecb1a4c8ca" kindref="member">EglGbmLayerSurface</ref>(<ref refid="class_k_win_1_1_drm_gpu" kindref="compound">DrmGpu</ref><sp/>*gpu,<sp/><ref refid="class_k_win_1_1_egl_gbm_backend" kindref="compound">EglGbmBackend</ref><sp/>*<ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a2ae23f4a1e03a9360026733c6a12f0c8" kindref="member">eglBackend</ref>,<sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1ab17635882d2915f6aa7fdcdca0c639c2" kindref="member">BufferTarget</ref><sp/>target<sp/>=<sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1ab17635882d2915f6aa7fdcdca0c639c2a960b44c579bc2f6818d2daaf9e4c16f0" kindref="member">BufferTarget::Normal</ref>,<sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a37b5b81ab1dc7375fa786fee10448f94" kindref="member">FormatOption</ref><sp/>formatOption<sp/>=<sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a37b5b81ab1dc7375fa786fee10448f94a7b96b22436d220ca5aa482f2ec88bbb6" kindref="member">FormatOption::PreferAlpha</ref>);</highlight></codeline>
<codeline lineno="57" refid="class_k_win_1_1_egl_gbm_layer_surface_1a63a8b9a3135016a2cc9a9c0dd16a2729" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a63a8b9a3135016a2cc9a9c0dd16a2729" kindref="member">~EglGbmLayerSurface</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;OutputLayerBeginFrameInfo&gt;<sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a69c736678348de031f20dc516e8cde18" kindref="member">startRendering</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;bufferSize,<sp/><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref><sp/>transformation,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/>&amp;formats,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>&amp;blendingColor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>&amp;scanoutColor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;IccProfile&gt;<sp/>&amp;iccProfile,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale,<sp/><ref refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198" kindref="member">Output::ColorPowerTradeoff</ref><sp/>tradeoff,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useShadowBuffer);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1ac8165f59dfb47113d29185bf8f80b59a" kindref="member">endRendering</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;damagedRegion,<sp/><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref><sp/>*frame);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;GLTexture&gt;<sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a0555979b4030f88fc83a2ef6f1c38ae0" kindref="member">texture</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1ab577f37f293d4009569b967bb489b11f" kindref="member">destroyResources</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_gbm_backend" kindref="compound">EglGbmBackend</ref><sp/>*<ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a2ae23f4a1e03a9360026733c6a12f0c8" kindref="member">eglBackend</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DrmFramebuffer&gt;<sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a09c9c5d0a0e09087a1cc0c0470388d04" kindref="member">renderTestBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;bufferSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/>&amp;formats,<sp/><ref refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198" kindref="member">Output::ColorPowerTradeoff</ref><sp/>tradeoff);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a692a8ddb1aab358c55c800da5c485aa9" kindref="member">forgetDamage</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DrmFramebuffer&gt;<sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1acad52411a996038c6bfe2b22c657004b" kindref="member">currentBuffer</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>&amp;<ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a692f754130a2bbe356dd16cddde7e164" kindref="member">colorDescription</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>MultiGpuImportMode<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>None,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dmabuf,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearDmabuf,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Egl,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DumbBuffer</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Surface</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~Surface();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;EglContext&gt;<sp/>context;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;EglSwapchain&gt;<sp/>gbmSwapchain;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;EglSwapchainSlot&gt;<sp/>currentSlot;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_damage_journal" kindref="compound">DamageJournal</ref><sp/>damageJournal;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;QPainterSwapchain&gt;<sp/>importDumbSwapchain;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;EglContext&gt;<sp/>importContext;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;EglSwapchain&gt;<sp/>importGbmSwapchain;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QHash&lt;GraphicsBuffer<sp/>*,<sp/>std::shared_ptr&lt;GLTexture&gt;&gt;<sp/>importedTextureCache;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QImage<sp/>cpuCopyCache;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiGpuImportMode<sp/>importMode;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_damage_journal" kindref="compound">DamageJournal</ref><sp/>importDamageJournal;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DrmFramebuffer&gt;<sp/>currentFramebuffer;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1ab17635882d2915f6aa7fdcdca0c639c2" kindref="member">BufferTarget</ref><sp/>bufferTarget;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>color<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needsShadowBuffer<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;EglSwapchain&gt;<sp/>shadowSwapchain;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;EglSwapchainSlot&gt;<sp/>currentShadowSlot;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>scanoutColor<sp/>=<sp/><ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>blendingColor<sp/>=<sp/><ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>brightness<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;IccShader&gt;<sp/>iccShader;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;IccProfile&gt;<sp/>iccProfile;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_damage_journal" kindref="compound">DamageJournal</ref><sp/>shadowDamageJournal;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198" kindref="member">Output::ColorPowerTradeoff</ref><sp/>tradeoff<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198a3ef0f539abd3021f89f1d61123ef155b" kindref="member">Output::ColorPowerTradeoff::PreferEfficiency</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;GLRenderTimeQuery&gt;<sp/>compositingTimeQuery;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkSurface(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/>&amp;formats,<sp/><ref refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198" kindref="member">Output::ColorPowerTradeoff</ref><sp/>tradeoff);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doesSurfaceFit(Surface<sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/>&amp;formats,<sp/><ref refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198" kindref="member">Output::ColorPowerTradeoff</ref><sp/>tradeoff)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Surface&gt;<sp/>createSurface(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/>&amp;formats,<sp/><ref refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198" kindref="member">Output::ColorPowerTradeoff</ref><sp/>tradeoff)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Surface&gt;<sp/>createSurface(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/>uint32_t<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;uint64_t&gt;<sp/>&amp;modifiers,<sp/>MultiGpuImportMode<sp/>importMode,<sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1ab17635882d2915f6aa7fdcdca0c639c2" kindref="member">BufferTarget</ref><sp/>bufferTarget,<sp/><ref refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198" kindref="member">Output::ColorPowerTradeoff</ref><sp/>tradeoff)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;EglSwapchain&gt;<sp/>createGbmSwapchain(DrmGpu<sp/>*gpu,<sp/>EglContext<sp/>*context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/>uint32_t<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;uint64_t&gt;<sp/>&amp;modifiers,<sp/>MultiGpuImportMode<sp/>importMode,<sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1ab17635882d2915f6aa7fdcdca0c639c2" kindref="member">BufferTarget</ref><sp/>bufferTarget)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DrmFramebuffer&gt;<sp/>doRenderTestBuffer(Surface<sp/>*surface)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DrmFramebuffer&gt;<sp/>importBuffer(Surface<sp/>*surface,<sp/>EglSwapchainSlot<sp/>*source,<sp/>FileDescriptor<sp/>&amp;&amp;readFence,<sp/>OutputFrame<sp/>*frame,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;damagedRegion)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DrmFramebuffer&gt;<sp/>importWithEgl(Surface<sp/>*surface,<sp/>GraphicsBuffer<sp/>*sourceBuffer,<sp/>FileDescriptor<sp/>&amp;&amp;readFence,<sp/>OutputFrame<sp/>*frame,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;damagedRegion)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DrmFramebuffer&gt;<sp/>importWithCpu(Surface<sp/>*surface,<sp/>EglSwapchainSlot<sp/>*source,<sp/>OutputFrame<sp/>*frame)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Surface&gt;<sp/>m_surface;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Surface&gt;<sp/>m_oldSurface;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>DrmGpu<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m_gpu;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>EglGbmBackend<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m_eglBackend;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1ab17635882d2915f6aa7fdcdca0c639c2" kindref="member">BufferTarget</ref><sp/>m_requestedBufferTarget;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_egl_gbm_layer_surface_1a37b5b81ab1dc7375fa786fee10448f94" kindref="member">FormatOption</ref><sp/>m_formatOption;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/backends/drm/drm_egl_layer_surface.h"/>
  </compounddef>
</doxygen>
