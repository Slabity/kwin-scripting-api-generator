<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_panel_test" kind="class" language="C++" prot="public">
    <compoundname>PanelTest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_panel_test_1a3df598d887e320b713649ae74b5e3710" prot="private" static="no" mutable="no">
        <type>QThread *</type>
        <definition>QThread* PanelTest::m_connectionThread</definition>
        <argsstring></argsstring>
        <name>m_connectionThread</name>
        <qualifiedname>PanelTest::m_connectionThread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="50" column="13" bodyfile="kwin/tests/paneltest.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1a8924e939fb5d0ecf9230ac3bfdad91f7" prot="private" static="no" mutable="no">
        <type>ConnectionThread *</type>
        <definition>ConnectionThread* PanelTest::m_connectionThreadObject</definition>
        <argsstring></argsstring>
        <name>m_connectionThreadObject</name>
        <qualifiedname>PanelTest::m_connectionThreadObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="51" column="22" bodyfile="kwin/tests/paneltest.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1a3f528832a62cff58b56ffff6dd50d2bf" prot="private" static="no" mutable="no">
        <type>EventQueue *</type>
        <definition>EventQueue* PanelTest::m_eventQueue</definition>
        <argsstring></argsstring>
        <name>m_eventQueue</name>
        <qualifiedname>PanelTest::m_eventQueue</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="52" column="16" bodyfile="kwin/tests/paneltest.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1a747cdc21dd7ce60c78f01921b434a9bc" prot="private" static="no" mutable="no">
        <type>Compositor *</type>
        <definition>Compositor* PanelTest::m_compositor</definition>
        <argsstring></argsstring>
        <name>m_compositor</name>
        <qualifiedname>PanelTest::m_compositor</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="53" column="16" bodyfile="kwin/tests/paneltest.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1afd32284b0c4df9db28c5afa11b18cece" prot="private" static="no" mutable="no">
        <type>Seat *</type>
        <definition>Seat* PanelTest::m_seat</definition>
        <argsstring></argsstring>
        <name>m_seat</name>
        <qualifiedname>PanelTest::m_seat</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="54" column="10" bodyfile="kwin/tests/paneltest.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1a166a26abf8f8e00351527496658b9bd9" prot="private" static="no" mutable="no">
        <type>Shell *</type>
        <definition>Shell* PanelTest::m_shell</definition>
        <argsstring></argsstring>
        <name>m_shell</name>
        <qualifiedname>PanelTest::m_shell</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="55" column="11" bodyfile="kwin/tests/paneltest.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1a54cedb83f8fdc8dd19333d704d7e4f53" prot="private" static="no" mutable="no">
        <type>ShellSurface *</type>
        <definition>ShellSurface* PanelTest::m_shellSurface</definition>
        <argsstring></argsstring>
        <name>m_shellSurface</name>
        <qualifiedname>PanelTest::m_shellSurface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="56" column="18" bodyfile="kwin/tests/paneltest.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1a12b1d9c64d9d80f5a722bb12fcc38719" prot="private" static="no" mutable="no">
        <type>ShmPool *</type>
        <definition>ShmPool* PanelTest::m_shm</definition>
        <argsstring></argsstring>
        <name>m_shm</name>
        <qualifiedname>PanelTest::m_shm</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="57" column="13" bodyfile="kwin/tests/paneltest.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1aa3e79ee6b21968087590669ff27f076e" prot="private" static="no" mutable="no">
        <type>Surface *</type>
        <definition>Surface* PanelTest::m_surface</definition>
        <argsstring></argsstring>
        <name>m_surface</name>
        <qualifiedname>PanelTest::m_surface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="58" column="13" bodyfile="kwin/tests/paneltest.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1acc5634b5a2152d8ef1a707693cf05a10" prot="private" static="no" mutable="no">
        <type>PlasmaShell *</type>
        <definition>PlasmaShell* PanelTest::m_plasmaShell</definition>
        <argsstring></argsstring>
        <name>m_plasmaShell</name>
        <qualifiedname>PanelTest::m_plasmaShell</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="59" column="17" bodyfile="kwin/tests/paneltest.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1aed95b04482f21bcfc000e9bf3672170b" prot="private" static="no" mutable="no">
        <type>PlasmaShellSurface *</type>
        <definition>PlasmaShellSurface* PanelTest::m_plasmaShellSurface</definition>
        <argsstring></argsstring>
        <name>m_plasmaShellSurface</name>
        <qualifiedname>PanelTest::m_plasmaShellSurface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="60" column="24" bodyfile="kwin/tests/paneltest.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1a7d44aabc95c9eeb5a319c6d40c8afa6b" prot="private" static="no" mutable="no">
        <type>PlasmaWindowManagement *</type>
        <definition>PlasmaWindowManagement* PanelTest::m_windowManagement</definition>
        <argsstring></argsstring>
        <name>m_windowManagement</name>
        <qualifiedname>PanelTest::m_windowManagement</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="61" column="28" bodyfile="kwin/tests/paneltest.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1aac0e9c24c1b7fe44bddee5d3ee1dc922" prot="private" static="no" mutable="no">
        <type>struct <ref refid="class_panel_test" kindref="compound">PanelTest</ref></type>
        <definition>struct PanelTest PanelTest::m_tooltip</definition>
        <argsstring></argsstring>
        <name>m_tooltip</name>
        <qualifiedname>PanelTest::m_tooltip</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="68" column="15"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_panel_test_1a069bcd25af6ff2f95438c03e3d90768f" prot="public" static="no" mutable="no">
        <type>Surface *</type>
        <definition>Surface* PanelTest::surface</definition>
        <argsstring></argsstring>
        <name>surface</name>
        <qualifiedname>PanelTest::surface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="64" column="17" bodyfile="kwin/tests/paneltest.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1a33960458ea5fc245ef58af094ad0d326" prot="public" static="no" mutable="no">
        <type>ShellSurface *</type>
        <definition>ShellSurface* PanelTest::shellSurface</definition>
        <argsstring></argsstring>
        <name>shellSurface</name>
        <qualifiedname>PanelTest::shellSurface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="65" column="22" bodyfile="kwin/tests/paneltest.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1a0eef67494e91b03be89e266225429d27" prot="public" static="no" mutable="no">
        <type>PlasmaShellSurface *</type>
        <definition>PlasmaShellSurface* PanelTest::plasmaSurface</definition>
        <argsstring></argsstring>
        <name>plasmaSurface</name>
        <qualifiedname>PanelTest::plasmaSurface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="66" column="28" bodyfile="kwin/tests/paneltest.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_panel_test_1a16b70aa1a240cafc970a47730d6975fd" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PanelTest::visible</definition>
        <argsstring></argsstring>
        <name>visible</name>
        <qualifiedname>PanelTest::visible</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="67" column="14" bodyfile="kwin/tests/paneltest.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_panel_test_1a90c3c26d9f4305771e4c4eb1d766e88d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>PanelTest::PanelTest</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>PanelTest</name>
        <qualifiedname>PanelTest::PanelTest</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="39" column="14" bodyfile="kwin/tests/paneltest.cpp" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_panel_test_1a2fa754b57ade3dbb1f9a466b990b1905" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>PanelTest::~PanelTest</definition>
        <argsstring>()</argsstring>
        <name>~PanelTest</name>
        <qualifiedname>PanelTest::~PanelTest</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="40" column="13" bodyfile="kwin/tests/paneltest.cpp" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_panel_test_1a059a739d4c6f1275421a9c248fcf513a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PanelTest::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>PanelTest::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="42" column="10" bodyfile="kwin/tests/paneltest.cpp" bodystart="85" bodyend="103"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_panel_test_1a618e3fb8917bb90d6b10f968dc2f5791" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PanelTest::setupRegistry</definition>
        <argsstring>(Registry *registry)</argsstring>
        <name>setupRegistry</name>
        <qualifiedname>PanelTest::setupRegistry</qualifiedname>
        <param>
          <type>Registry *</type>
          <declname>registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="45" column="10" bodyfile="kwin/tests/paneltest.cpp" bodystart="147" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_panel_test_1a14f9716ffec8ac4813102deb5c304195" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PanelTest::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <qualifiedname>PanelTest::render</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="46" column="10" bodyfile="kwin/tests/paneltest.cpp" bodystart="269" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_panel_test_1a2f92f440207f17a8e9494bf4d4cdff3b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PanelTest::showTooltip</definition>
        <argsstring>(const QPointF &amp;pos)</argsstring>
        <name>showTooltip</name>
        <qualifiedname>PanelTest::showTooltip</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="47" column="10" bodyfile="kwin/tests/paneltest.cpp" bodystart="105" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_panel_test_1ab7331f5e17291db25450d641d5f3d526" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PanelTest::hideTooltip</definition>
        <argsstring>()</argsstring>
        <name>hideTooltip</name>
        <qualifiedname>PanelTest::hideTooltip</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="48" column="10" bodyfile="kwin/tests/paneltest.cpp" bodystart="130" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_panel_test_1a20b6715807e931055cb3e5cf91121221" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PanelTest::moveTooltip</definition>
        <argsstring>(const QPointF &amp;pos)</argsstring>
        <name>moveTooltip</name>
        <qualifiedname>PanelTest::moveTooltip</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/paneltest.cpp" line="49" column="10" bodyfile="kwin/tests/paneltest.cpp" bodystart="140" bodyend="145"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>PanelTest</label>
        <link refid="class_panel_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>PanelTest</label>
        <link refid="class_panel_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/tests/paneltest.cpp" line="35" column="1" bodyfile="kwin/tests/paneltest.cpp" bodystart="36" bodyend="69"/>
    <listofallmembers>
      <member refid="class_panel_test_1ab7331f5e17291db25450d641d5f3d526" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>hideTooltip</name></member>
      <member refid="class_panel_test_1a059a739d4c6f1275421a9c248fcf513a" prot="public" virt="non-virtual"><scope>PanelTest</scope><name>init</name></member>
      <member refid="class_panel_test_1a747cdc21dd7ce60c78f01921b434a9bc" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>m_compositor</name></member>
      <member refid="class_panel_test_1a3df598d887e320b713649ae74b5e3710" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>m_connectionThread</name></member>
      <member refid="class_panel_test_1a8924e939fb5d0ecf9230ac3bfdad91f7" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>m_connectionThreadObject</name></member>
      <member refid="class_panel_test_1a3f528832a62cff58b56ffff6dd50d2bf" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>m_eventQueue</name></member>
      <member refid="class_panel_test_1acc5634b5a2152d8ef1a707693cf05a10" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>m_plasmaShell</name></member>
      <member refid="class_panel_test_1aed95b04482f21bcfc000e9bf3672170b" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>m_plasmaShellSurface</name></member>
      <member refid="class_panel_test_1afd32284b0c4df9db28c5afa11b18cece" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>m_seat</name></member>
      <member refid="class_panel_test_1a166a26abf8f8e00351527496658b9bd9" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>m_shell</name></member>
      <member refid="class_panel_test_1a54cedb83f8fdc8dd19333d704d7e4f53" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>m_shellSurface</name></member>
      <member refid="class_panel_test_1a12b1d9c64d9d80f5a722bb12fcc38719" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>m_shm</name></member>
      <member refid="class_panel_test_1aa3e79ee6b21968087590669ff27f076e" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>m_surface</name></member>
      <member refid="class_panel_test_1aac0e9c24c1b7fe44bddee5d3ee1dc922" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>m_tooltip</name></member>
      <member refid="class_panel_test_1a7d44aabc95c9eeb5a319c6d40c8afa6b" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>m_windowManagement</name></member>
      <member refid="class_panel_test_1a20b6715807e931055cb3e5cf91121221" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>moveTooltip</name></member>
      <member refid="class_panel_test_1a90c3c26d9f4305771e4c4eb1d766e88d" prot="public" virt="non-virtual"><scope>PanelTest</scope><name>PanelTest</name></member>
      <member refid="class_panel_test_1a0eef67494e91b03be89e266225429d27" prot="public" virt="non-virtual"><scope>PanelTest</scope><name>plasmaSurface</name></member>
      <member refid="class_panel_test_1a14f9716ffec8ac4813102deb5c304195" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>render</name></member>
      <member refid="class_panel_test_1a618e3fb8917bb90d6b10f968dc2f5791" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>setupRegistry</name></member>
      <member refid="class_panel_test_1a33960458ea5fc245ef58af094ad0d326" prot="public" virt="non-virtual"><scope>PanelTest</scope><name>shellSurface</name></member>
      <member refid="class_panel_test_1a2f92f440207f17a8e9494bf4d4cdff3b" prot="private" virt="non-virtual"><scope>PanelTest</scope><name>showTooltip</name></member>
      <member refid="class_panel_test_1a069bcd25af6ff2f95438c03e3d90768f" prot="public" virt="non-virtual"><scope>PanelTest</scope><name>surface</name></member>
      <member refid="class_panel_test_1a16b70aa1a240cafc970a47730d6975fd" prot="public" virt="non-virtual"><scope>PanelTest</scope><name>visible</name></member>
      <member refid="class_panel_test_1a2fa754b57ade3dbb1f9a466b990b1905" prot="public" virt="virtual"><scope>PanelTest</scope><name>~PanelTest</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
