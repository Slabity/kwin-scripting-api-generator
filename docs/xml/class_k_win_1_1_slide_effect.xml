<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_slide_effect" kind="class" language="C++" prot="public">
    <compoundname>KWin::SlideEffect</compoundname>
    <basecompoundref refid="class_k_win_1_1_effect" prot="public" virt="non-virtual">KWin::Effect</basecompoundref>
    <includes refid="plugins_2slide_2slide_8h" local="no">slide.h</includes>
    <innerclass refid="struct_k_win_1_1_slide_effect_1_1_window_data" prot="private">KWin::SlideEffect::WindowData</innerclass>
    <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_k_win_1_1_slide_effect_1a25cf1e79e008acf92ae90f895b6d07fd" prot="private" static="no" strong="yes">
        <type></type>
        <name>State</name>
        <qualifiedname>KWin::SlideEffect::State</qualifiedname>
        <enumvalue id="class_k_win_1_1_slide_effect_1a25cf1e79e008acf92ae90f895b6d07fda3cab03c00dbd11bc3569afa0748013f0" prot="private">
          <name>Inactive</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_slide_effect_1a25cf1e79e008acf92ae90f895b6d07fda3e929cb282c6ef58d114fd2268bb0bce" prot="private">
          <name>ActiveAnimation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_slide_effect_1a25cf1e79e008acf92ae90f895b6d07fda72e911aef1a137e850dedd030c5a961a" prot="private">
          <name>ActiveGesture</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="101" column="5" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="101" bodyend="105"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_k_win_1_1_slide_effect_1a7e8259f87cad3d304ac6c8fa0f8ec926" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::SlideEffect::horizontalGap</definition>
        <argsstring></argsstring>
        <name>horizontalGap</name>
        <qualifiedname>KWin::SlideEffect::horizontalGap</qualifiedname>
        <read>horizontalGap</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="49" column="5" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_slide_effect_1a9c7ca700c3dec12cbdf5d01aa39dcdff" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::SlideEffect::verticalGap</definition>
        <argsstring></argsstring>
        <name>verticalGap</name>
        <qualifiedname>KWin::SlideEffect::verticalGap</qualifiedname>
        <read>verticalGap</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="50" column="5" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_slide_effect_1a5ba5de0e996874c62c2b6433b512c4a6" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool KWin::SlideEffect::slideBackground</definition>
        <argsstring></argsstring>
        <name>slideBackground</name>
        <qualifiedname>KWin::SlideEffect::slideBackground</qualifiedname>
        <read>slideBackground</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="51" column="5" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="51" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1a57f3ffd56b39c8fddf993b588cc9848b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::SlideEffect::m_hGap</definition>
        <argsstring></argsstring>
        <name>m_hGap</name>
        <qualifiedname>KWin::SlideEffect::m_hGap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="97" column="9" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1ad0bf7ff4325bc721306e09e67bdd3d24" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::SlideEffect::m_vGap</definition>
        <argsstring></argsstring>
        <name>m_vGap</name>
        <qualifiedname>KWin::SlideEffect::m_vGap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="98" column="9" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1a1e6e9c54227331afa07777cc31913e09" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::SlideEffect::m_slideBackground</definition>
        <argsstring></argsstring>
        <name>m_slideBackground</name>
        <qualifiedname>KWin::SlideEffect::m_slideBackground</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="99" column="10" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1a725af7a94a029f84fd86757998daf4ef" prot="private" static="no" mutable="no">
        <type>State</type>
        <definition>State KWin::SlideEffect::m_state</definition>
        <argsstring></argsstring>
        <name>m_state</name>
        <qualifiedname>KWin::SlideEffect::m_state</qualifiedname>
        <initializer>= State::Inactive</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="107" column="11" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1a9b76d05bc812ac61a1e02ed7d3126816" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_spring_motion" kindref="compound">SpringMotion</ref></type>
        <definition>SpringMotion KWin::SlideEffect::m_motionX</definition>
        <argsstring></argsstring>
        <name>m_motionX</name>
        <qualifiedname>KWin::SlideEffect::m_motionX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="108" column="18" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1a09808296c511bf81f509d6d020603097" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_spring_motion" kindref="compound">SpringMotion</ref></type>
        <definition>SpringMotion KWin::SlideEffect::m_motionY</definition>
        <argsstring></argsstring>
        <name>m_motionY</name>
        <qualifiedname>KWin::SlideEffect::m_motionY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="109" column="18" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1a53d2266df7b9c5525237f3a4726fab75" prot="private" static="no" mutable="no">
        <type>QPointF</type>
        <definition>QPointF KWin::SlideEffect::m_startPos</definition>
        <argsstring></argsstring>
        <name>m_startPos</name>
        <qualifiedname>KWin::SlideEffect::m_startPos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="113" column="13" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1a4257a16e97fc9892ae6561a34b0316f6" prot="private" static="no" mutable="no">
        <type>QPointF</type>
        <definition>QPointF KWin::SlideEffect::m_endPos</definition>
        <argsstring></argsstring>
        <name>m_endPos</name>
        <qualifiedname>KWin::SlideEffect::m_endPos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="114" column="13" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1a3a77c104df4c3cedd1e6a85502bb0573" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
        <definition>EffectWindow* KWin::SlideEffect::m_movingWindow</definition>
        <argsstring></argsstring>
        <name>m_movingWindow</name>
        <qualifiedname>KWin::SlideEffect::m_movingWindow</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="116" column="18" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1a94a49f761d3c5d8f0a83f8ddfa9c2e9b" prot="private" static="no" mutable="no">
        <type>std::chrono::milliseconds</type>
        <definition>std::chrono::milliseconds KWin::SlideEffect::m_lastPresentTime</definition>
        <argsstring></argsstring>
        <name>m_lastPresentTime</name>
        <qualifiedname>KWin::SlideEffect::m_lastPresentTime</qualifiedname>
        <initializer>= std::chrono::milliseconds::zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="117" column="31" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1aac4808c69437e1a8467eda00b9bcc47e" prot="private" static="no" mutable="no">
        <type>QPointF</type>
        <definition>QPointF KWin::SlideEffect::m_currentPosition</definition>
        <argsstring></argsstring>
        <name>m_currentPosition</name>
        <qualifiedname>KWin::SlideEffect::m_currentPosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="118" column="13" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1af70f099cacd4afe2b17119a59816a6c7" prot="private" static="no" mutable="no">
        <type>struct <ref refid="class_k_win_1_1_slide_effect" kindref="compound">KWin::SlideEffect</ref></type>
        <definition>struct KWin::SlideEffect KWin::SlideEffect::m_paintCtx</definition>
        <argsstring></argsstring>
        <name>m_paintCtx</name>
        <qualifiedname>KWin::SlideEffect::m_paintCtx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="124" column="16"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1ac1e5f3d9c5a98771a099daedb1ace116" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> * &gt;</type>
        <definition>QList&lt;EffectWindow *&gt; KWin::SlideEffect::m_elevatedWindows</definition>
        <argsstring></argsstring>
        <name>m_elevatedWindows</name>
        <qualifiedname>KWin::SlideEffect::m_elevatedWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="131" column="11" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1ad0d82a2d280be73c45e9a1a2e967c347" prot="private" static="no" mutable="no">
        <type>QHash&lt; <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *, WindowData &gt;</type>
        <definition>QHash&lt;EffectWindow *, WindowData&gt; KWin::SlideEffect::m_windowData</definition>
        <argsstring></argsstring>
        <name>m_windowData</name>
        <qualifiedname>KWin::SlideEffect::m_windowData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="132" column="11" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1a1a55c1429ba28995ee6aa28c8d9da510" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::SlideEffect::m_switchingActivity</definition>
        <argsstring></argsstring>
        <name>m_switchingActivity</name>
        <qualifiedname>KWin::SlideEffect::m_switchingActivity</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="133" column="10" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="133" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1a030ac9288d3b63ed9cb4ad2f986f1518" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::SlideEffect::wrap</definition>
        <argsstring></argsstring>
        <name>wrap</name>
        <qualifiedname>KWin::SlideEffect::wrap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="122" column="14" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_slide_effect_1ae2fd0d90b973288912c4cb583550b3d6" prot="public" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> * &gt;</type>
        <definition>QList&lt;VirtualDesktop *&gt; KWin::SlideEffect::visibleDesktops</definition>
        <argsstring></argsstring>
        <name>visibleDesktops</name>
        <qualifiedname>KWin::SlideEffect::visibleDesktops</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="123" column="15" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="123" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1af396b5209ebc6a9a416b4ee23c45f66b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::SlideEffect::SlideEffect</definition>
        <argsstring>()</argsstring>
        <name>SlideEffect</name>
        <qualifiedname>KWin::SlideEffect::SlideEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="54" column="5" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="25" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1a103384709deaddde9fa30235305d459e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::SlideEffect::~SlideEffect</definition>
        <argsstring>() override</argsstring>
        <name>~SlideEffect</name>
        <qualifiedname>KWin::SlideEffect::~SlideEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="55" column="5" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1a4543e5720fd4f237931e08f97b53f49d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::reconfigure</definition>
        <argsstring>(ReconfigureFlags) override</argsstring>
        <name>reconfigure</name>
        <qualifiedname>KWin::SlideEffect::reconfigure</qualifiedname>
        <reimplements refid="group__kwineffects_1ga737c6d80eb8f8b24fdc6398209c38e3d">reconfigure</reimplements>
        <param>
          <type>ReconfigureFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called when configuration changes (either the effect&apos;s or <ref refid="namespace_k_win" kindref="compound">KWin</ref>&apos;s global).</para>
<para>In OpenGL based compositing, the frameworks ensures that the context is current when the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> is reconfigured. If this method is called from within the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> it is required to ensure that the context is current if the implementation does OpenGL calls. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="57" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="68" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1a5735587217f0004c988d69e4ce701a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::prePaintScreen</definition>
        <argsstring>(ScreenPrePaintData &amp;data, std::chrono::milliseconds presentTime) override</argsstring>
        <name>prePaintScreen</name>
        <qualifiedname>KWin::SlideEffect::prePaintScreen</qualifiedname>
        <reimplements refid="group__kwineffects_1ga2edc1b757e36bb6bcbbacde454dfc05c">prePaintScreen</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_screen_pre_paint_data" kindref="compound">ScreenPrePaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::chrono::milliseconds</type>
          <declname>presentTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called before starting to paint the screen. In this method you can: <itemizedlist>
<listitem><para>set whether the windows or the entire screen will be transformed </para>
</listitem>
<listitem><para>change the region of the screen that will be painted </para>
</listitem>
<listitem><para>do various housekeeping tasks such as initing your effect&apos;s variables for the upcoming paint pass or updating animation&apos;s progress</para>
</listitem>
</itemizedlist>
<emphasis>presentTime</emphasis> specifies the expected monotonic time when the rendered frame will be displayed on the screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="59" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="102" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1ae9d2f5c858bef31be832e7d63ac839a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::paintScreen</definition>
        <argsstring>(const RenderTarget &amp;renderTarget, const RenderViewport &amp;viewport, int mask, const QRegion &amp;region, Output *screen) override</argsstring>
        <name>paintScreen</name>
        <qualifiedname>KWin::SlideEffect::paintScreen</qualifiedname>
        <reimplements refid="group__kwineffects_1ga44ee94161446ce6fb2502376af6515a8">paintScreen</reimplements>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>screen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In this method you can: <itemizedlist>
<listitem><para>paint something on top of the windows (by painting after calling effects-&gt;<ref refid="class_k_win_1_1_slide_effect_1ae9d2f5c858bef31be832e7d63ac839a5" kindref="member">paintScreen()</ref>) </para>
</listitem>
<listitem><para>paint multiple desktops and/or multiple copies of the same desktop by calling effects-&gt;<ref refid="class_k_win_1_1_slide_effect_1ae9d2f5c858bef31be832e7d63ac839a5" kindref="member">paintScreen()</ref> multiple times</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="60" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="149" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1a863c59a4d211fe806b34e20c4d509a4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::postPaintScreen</definition>
        <argsstring>() override</argsstring>
        <name>postPaintScreen</name>
        <qualifiedname>KWin::SlideEffect::postPaintScreen</qualifiedname>
        <reimplements refid="group__kwineffects_1ga10021cf9704c00d60beae284d53846e2">postPaintScreen</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called after all the painting has been finished. In this method you can: <itemizedlist>
<listitem><para>schedule next repaint in case of animations You shouldn&apos;t paint anything here.</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="61" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="260" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1a6474e7f391e32914d46385ef1c0391b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::prePaintWindow</definition>
        <argsstring>(EffectWindow *w, WindowPrePaintData &amp;data, std::chrono::milliseconds presentTime) override</argsstring>
        <name>prePaintWindow</name>
        <qualifiedname>KWin::SlideEffect::prePaintWindow</qualifiedname>
        <reimplements refid="group__kwineffects_1ga2832c7831c0f49f9f5cf0267ffc53672">prePaintWindow</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_pre_paint_data" kindref="compound">WindowPrePaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::chrono::milliseconds</type>
          <declname>presentTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called for every window before the actual paint pass In this method you can: <itemizedlist>
<listitem><para>enable or disable painting of the window (e.g. enable paiting of minimized window) </para>
</listitem>
<listitem><para>set window to be painted with translucency </para>
</listitem>
<listitem><para>set window to be transformed </para>
</listitem>
<listitem><para>request the window to be divided into multiple parts</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked.</para>
<para><emphasis>presentTime</emphasis> specifies the expected monotonic time when the rendered frame will be displayed on the screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="63" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="199" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1ab20bb8079454129461c2f63f598f46a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::paintWindow</definition>
        <argsstring>(const RenderTarget &amp;renderTarget, const RenderViewport &amp;viewport, EffectWindow *w, int mask, QRegion region, WindowPaintData &amp;data) override</argsstring>
        <name>paintWindow</name>
        <qualifiedname>KWin::SlideEffect::paintWindow</qualifiedname>
        <reimplements refid="group__kwineffects_1ga0f0292db2bf016a0843ef7cc06219378">paintWindow</reimplements>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>QRegion</type>
          <declname>region</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is the main method for painting windows. In this method you can: <itemizedlist>
<listitem><para>do various transformations </para>
</listitem>
<listitem><para>change opacity of the window </para>
</listitem>
<listitem><para>change brightness and/or saturation, if it&apos;s supported</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="64" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="205" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1a63ee05a844e140d4f0060e72eb85884b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::SlideEffect::isActive</definition>
        <argsstring>() const override</argsstring>
        <name>isActive</name>
        <qualifiedname>KWin::SlideEffect::isActive</qualifiedname>
        <reimplements refid="group__kwineffects_1ga596b6c0ed146b97b293f5db5f27fc40f">isActive</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overwrite this method to indicate whether your effect will be doing something in the next frame to be rendered. If the method returns <computeroutput>false</computeroutput> the effect will be excluded from the chained methods in the next rendered frame.</para>
<para>This method is called always directly before the paint loop begins. So it is totally fine to e.g. react on a window event, issue a repaint to trigger an animation and change a flag to indicate that this method returns <computeroutput>true</computeroutput>.</para>
<para>As the method is called each frame, you should not perform complex calculations. Best use just a boolean flag.</para>
<para>The default implementation of this method returns <computeroutput>true</computeroutput>. <simplesect kind="since"><para>4.8 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="66" column="10" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1ae1894a93388ff7fa3d65b922034d3800" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int KWin::SlideEffect::requestedEffectChainPosition</definition>
        <argsstring>() const override</argsstring>
        <name>requestedEffectChainPosition</name>
        <qualifiedname>KWin::SlideEffect::requestedEffectChainPosition</qualifiedname>
        <reimplements refid="group__kwineffects_1ga120531588e58691a5a18028158d2947a">requestedEffectChainPosition</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reimplement this method to indicate where in the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> chain the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> should be placed.</para>
<para>A low number indicates early chain position, thus before other Effects got called, a high number indicates a late position. The returned number should be in the interval [0, 100]. The default value is 0.</para>
<para>In KWin4 this information was provided in the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref>&apos;s desktop file as property X-KDE-Ordering. In the case of Scripted Effects this property is still used.</para>
<para><simplesect kind="since"><para>5.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="67" column="9" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1a6610524690df6514360dfaae9649c98b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::SlideEffect::horizontalGap</definition>
        <argsstring>() const</argsstring>
        <name>horizontalGap</name>
        <qualifiedname>KWin::SlideEffect::horizontalGap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="71" column="9" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1af9f691456791f5b91f0372526495f59e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::SlideEffect::verticalGap</definition>
        <argsstring>() const</argsstring>
        <name>verticalGap</name>
        <qualifiedname>KWin::SlideEffect::verticalGap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="72" column="9" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1a6401de08a3d73e0608f441b65a214c11" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SlideEffect::slideBackground</definition>
        <argsstring>() const</argsstring>
        <name>slideBackground</name>
        <qualifiedname>KWin::SlideEffect::slideBackground</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="73" column="10" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="146" bodyend="149"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1abc9c75e9841383110c2f8c4d6501dc5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SlideEffect::supported</definition>
        <argsstring>()</argsstring>
        <name>supported</name>
        <qualifiedname>KWin::SlideEffect::supported</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="69" column="17" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_slide_effect_1a6bdea3191958dc62d22c0edaf5755172" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::desktopChanged</definition>
        <argsstring>(VirtualDesktop *old, VirtualDesktop *current, EffectWindow *with)</argsstring>
        <name>desktopChanged</name>
        <qualifiedname>KWin::SlideEffect::desktopChanged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>old</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>current</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>with</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="76" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="365" bodyend="373"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_slide_effect_1a09505f16532ec58d9a87b7d8001e6b83" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::desktopChanging</definition>
        <argsstring>(VirtualDesktop *old, QPointF desktopOffset, EffectWindow *with)</argsstring>
        <name>desktopChanging</name>
        <qualifiedname>KWin::SlideEffect::desktopChanging</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>old</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>desktopOffset</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>with</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="77" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="375" bodyend="401"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_slide_effect_1a89da4e9b107c425ac928c98d8e580851" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::desktopChangingCancelled</definition>
        <argsstring>()</argsstring>
        <name>desktopChangingCancelled</name>
        <qualifiedname>KWin::SlideEffect::desktopChangingCancelled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="78" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="403" bodyend="410"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_slide_effect_1a4931735bdf54552e7a28da24fd064339" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::windowAdded</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>windowAdded</name>
        <qualifiedname>KWin::SlideEffect::windowAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="79" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="429" bodyend="444"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_slide_effect_1aca73c1ef322e2630087dc3f705d843ea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::windowDeleted</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>windowDeleted</name>
        <qualifiedname>KWin::SlideEffect::windowDeleted</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="80" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="446" bodyend="456"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1af1942c7070cb868ab35c4f9d35f33722" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QPoint</type>
        <definition>QPoint KWin::SlideEffect::getDrawCoords</definition>
        <argsstring>(QPointF pos, Output *screen)</argsstring>
        <name>getDrawCoords</name>
        <qualifiedname>KWin::SlideEffect::getDrawCoords</qualifiedname>
        <param>
          <type>QPointF</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>screen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="83" column="12" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="155" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1acd2f5d0114ecb0d22d8689de9c186738" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SlideEffect::isTranslated</definition>
        <argsstring>(const EffectWindow *w) const</argsstring>
        <name>isTranslated</name>
        <qualifiedname>KWin::SlideEffect::isTranslated</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decide whether given window <computeroutput>w</computeroutput> should be transformed/translated. <simplesect kind="return"><para><computeroutput>true</computeroutput> if given window <computeroutput>w</computeroutput> should be transformed, otherwise <computeroutput>false</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="84" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="167" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1ac8d490b1d54416fe6ff88f42f7eedcc7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SlideEffect::willBePainted</definition>
        <argsstring>(const EffectWindow *w) const</argsstring>
        <name>willBePainted</name>
        <qualifiedname>KWin::SlideEffect::willBePainted</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Will a window be painted during this frame? </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="85" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="183" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1a888e82bfa4eb7154c021d7f8248dd38d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SlideEffect::shouldElevate</definition>
        <argsstring>(const EffectWindow *w) const</argsstring>
        <name>shouldElevate</name>
        <qualifiedname>KWin::SlideEffect::shouldElevate</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="86" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="284" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1a978dc5133f1c1ddc6543397495e1386a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF KWin::SlideEffect::moveInsideDesktopGrid</definition>
        <argsstring>(QPointF p)</argsstring>
        <name>moveInsideDesktopGrid</name>
        <qualifiedname>KWin::SlideEffect::moveInsideDesktopGrid</qualifiedname>
        <param>
          <type>QPointF</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="87" column="13" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="412" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1aeab8db3178727cfd7b9dd145ce3a4fe2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF KWin::SlideEffect::constrainToDrawableRange</definition>
        <argsstring>(QPointF p)</argsstring>
        <name>constrainToDrawableRange</name>
        <qualifiedname>KWin::SlideEffect::constrainToDrawableRange</qualifiedname>
        <param>
          <type>QPointF</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="88" column="13" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="523" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1af8f490647ab2f2e991038c87f5813d00" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF KWin::SlideEffect::forcePositivePosition</definition>
        <argsstring>(QPointF p) const</argsstring>
        <name>forcePositivePosition</name>
        <qualifiedname>KWin::SlideEffect::forcePositivePosition</qualifiedname>
        <param>
          <type>QPointF</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="89" column="13" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="273" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1a330efe171b27229570659cdf3d54f1e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::optimizePath</definition>
        <argsstring>()</argsstring>
        <name>optimizePath</name>
        <qualifiedname>KWin::SlideEffect::optimizePath</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="90" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="463" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1a8486bfdfc63fee5bfb772b3fe1a88da2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::startAnimation</definition>
        <argsstring>(VirtualDesktop *old, VirtualDesktop *current, EffectWindow *movingWindow=nullptr)</argsstring>
        <name>startAnimation</name>
        <qualifiedname>KWin::SlideEffect::startAnimation</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>old</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>current</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>movingWindow</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="92" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="297" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1aab227965deeb54183f34295a59cdaad6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::prepareSwitching</definition>
        <argsstring>()</argsstring>
        <name>prepareSwitching</name>
        <qualifiedname>KWin::SlideEffect::prepareSwitching</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="93" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="322" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_slide_effect_1a54272a419ab33c6a09478760e23a34a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlideEffect::finishedSwitching</definition>
        <argsstring>()</argsstring>
        <name>finishedSwitching</name>
        <qualifiedname>KWin::SlideEffect::finishedSwitching</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slide/slide.h" line="94" column="10" bodyfile="kwin/src/plugins/slide/slide.cpp" bodystart="341" bodyend="363"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::SlideEffect</label>
        <link refid="class_k_win_1_1_slide_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::SlideEffect</label>
        <link refid="class_k_win_1_1_slide_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/plugins/slide/slide.h" line="46" column="1" bodyfile="kwin/src/plugins/slide/slide.h" bodystart="47" bodyend="134"/>
    <listofallmembers>
      <member refid="group__kwineffects_1gab9bcf52072fe74567496b0a894d1d873" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga3a167fe6d9c46376ed46db13caf2d135" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga0ba05f1463195d0f92ea1dd3396a5d16" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga7cf8035c970fcde177e3038d79015289" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>blocksDirectScanout</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea67d120ab5ce1dc424476e63c132af6c1" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>Blur</name></member>
      <member refid="group__kwineffects_1gab8a94f591b743b59b7285911e641e7d5" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>borderActivated</name></member>
      <member refid="class_k_win_1_1_slide_effect_1aeab8db3178727cfd7b9dd145ce3a4fe2" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>constrainToDrawableRange</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aead805f717a48c23959a1e9ecd7722d15d" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>Contrast</name></member>
      <member refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>cursorPos</name></member>
      <member refid="group__kwineffects_1ga0c159e00c3a51ca733bea49cf8d52691" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>debug</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a6bdea3191958dc62d22c0edaf5755172" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>desktopChanged</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a09505f16532ec58d9a87b7d8001e6b83" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>desktopChanging</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a89da4e9b107c425ac928c98d8e580851" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>desktopChangingCancelled</name></member>
      <member refid="group__kwineffects_1ga254b1a3e8bb8b9b671e9b000ca027b7c" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>drawWindow</name></member>
      <member refid="group__kwineffects_1ga7bd8262f4cb2c5c3090c748eb388ad7e" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>Effect</name></member>
      <member refid="group__kwineffects_1ga6337b2a9b5aadfbb6b696119144b56ae" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>Feature</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a54272a419ab33c6a09478760e23a34a2" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>finishedSwitching</name></member>
      <member refid="class_k_win_1_1_slide_effect_1af8f490647ab2f2e991038c87f5813d00" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>forcePositivePosition</name></member>
      <member refid="class_k_win_1_1_slide_effect_1af1942c7070cb868ab35c4f9d35f33722" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>getDrawCoords</name></member>
      <member refid="group__kwineffects_1gab5e0581ae4b2dffe8014ff5cf6c21158" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>grabbedKeyboardEvent</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aeaecbb77ad241419970ece3d45296c4838" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>HighlightWindows</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a7e8259f87cad3d304ac6c8fa0f8ec926" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>horizontalGap</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a6610524690df6514360dfaae9649c98b" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>horizontalGap</name></member>
      <member refid="group__kwineffects_1ga7b0ecb57667179e95c188f0ee7416d00" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>interpolate</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a63ee05a844e140d4f0060e72eb85884b" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>isActive</name></member>
      <member refid="class_k_win_1_1_slide_effect_1acd2f5d0114ecb0d22d8689de9c186738" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>isTranslated</name></member>
      <member refid="class_k_win_1_1_slide_effect_1aac4808c69437e1a8467eda00b9bcc47e" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_currentPosition</name></member>
      <member refid="class_k_win_1_1_slide_effect_1ac1e5f3d9c5a98771a099daedb1ace116" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_elevatedWindows</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a4257a16e97fc9892ae6561a34b0316f6" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_endPos</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a57f3ffd56b39c8fddf993b588cc9848b" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_hGap</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a94a49f761d3c5d8f0a83f8ddfa9c2e9b" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_lastPresentTime</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a9b76d05bc812ac61a1e02ed7d3126816" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_motionX</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a09808296c511bf81f509d6d020603097" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_motionY</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a3a77c104df4c3cedd1e6a85502bb0573" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_movingWindow</name></member>
      <member refid="class_k_win_1_1_slide_effect_1af70f099cacd4afe2b17119a59816a6c7" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_paintCtx</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a1e6e9c54227331afa07777cc31913e09" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_slideBackground</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a53d2266df7b9c5525237f3a4726fab75" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_startPos</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a725af7a94a029f84fd86757998daf4ef" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_state</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a1a55c1429ba28995ee6aa28c8d9da510" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_switchingActivity</name></member>
      <member refid="class_k_win_1_1_slide_effect_1ad0bf7ff4325bc721306e09e67bdd3d24" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_vGap</name></member>
      <member refid="class_k_win_1_1_slide_effect_1ad0d82a2d280be73c45e9a1a2e967c347" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>m_windowData</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a978dc5133f1c1ddc6543397495e1386a" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>moveInsideDesktopGrid</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea170229312ed2ec0e446ee89ba7f6b6ca" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>Nothing</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a330efe171b27229570659cdf3d54f1e2" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>optimizePath</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dab0de2932c45bde6df3de10d00dbd6fcd" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>PAINT_SCREEN_BACKGROUND_FIRST</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da43acbfc913cae9eb3c363aeb0524f18f" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>PAINT_SCREEN_REGION</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da3e731594d83c3e92742bff7c420fb7f8" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>PAINT_SCREEN_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da124dd798e5f793087e81da77e11a9b1e" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>PAINT_SCREEN_WITH_TRANSFORMED_WINDOWS</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac606d3dcf2dd150234f71c4c39083c7d" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>PAINT_WINDOW_OPAQUE</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da684bb6c6c278b900b6d0c889e79233b8" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>PAINT_WINDOW_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac7237bf4bb4d6ea6d6fb1215db19b45e" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>PAINT_WINDOW_TRANSLUCENT</name></member>
      <member refid="class_k_win_1_1_slide_effect_1ae9d2f5c858bef31be832e7d63ac839a5" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>paintScreen</name></member>
      <member refid="class_k_win_1_1_slide_effect_1ab20bb8079454129461c2f63f598f46a5" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>paintWindow</name></member>
      <member refid="group__kwineffects_1ga5fb1bc87ff54dcc2cfe87b070816ab00" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>perform</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a863c59a4d211fe806b34e20c4d509a4a" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>postPaintScreen</name></member>
      <member refid="group__kwineffects_1ga9b7cf82c6f74331cffabb06c63ef914c" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>postPaintWindow</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a5735587217f0004c988d69e4ce701a40" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>prePaintScreen</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a6474e7f391e32914d46385ef1c0391b9" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>prePaintWindow</name></member>
      <member refid="class_k_win_1_1_slide_effect_1aab227965deeb54183f34295a59cdaad6" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>prepareSwitching</name></member>
      <member refid="group__kwineffects_1ga30fc2cbbdd90f95568a9e350f34bf2b7" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>provides</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a4543e5720fd4f237931e08f97b53f49d" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>reconfigure</name></member>
      <member refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>ReconfigureAll</name></member>
      <member refid="group__kwineffects_1ga4aebd7d0f695e37678debaa118fa92dc" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>ReconfigureFlag</name></member>
      <member refid="class_k_win_1_1_slide_effect_1ae1894a93388ff7fa3d65b922034d3800" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>requestedEffectChainPosition</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea592ea0de7a4d658a1ef9bbb48b18e15a" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>ScreenInversion</name></member>
      <member refid="group__kwineffects_1ga1efc42cd9be15e8200c6e55f6bf47cb8" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>setPositionTransformations</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a888e82bfa4eb7154c021d7f8248dd38d" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>shouldElevate</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a5ba5de0e996874c62c2b6433b512c4a6" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>slideBackground</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a6401de08a3d73e0608f441b65a214c11" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>slideBackground</name></member>
      <member refid="class_k_win_1_1_slide_effect_1af396b5209ebc6a9a416b4ee23c45f66b" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>SlideEffect</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a8486bfdfc63fee5bfb772b3fe1a88da2" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>startAnimation</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a25cf1e79e008acf92ae90f895b6d07fd" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>State</name></member>
      <member refid="class_k_win_1_1_slide_effect_1abc9c75e9841383110c2f8c4d6501dc5e" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>supported</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea19036d413806c53978a3234e7eb197c4" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>SystemBell</name></member>
      <member refid="group__kwineffects_1ga2d22a8f0b8a4d81615dff67dc1ef970f" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>tabletPadButtonEvent</name></member>
      <member refid="group__kwineffects_1gaa084e5a45597f5775213715eb5506f63" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>tabletPadRingEvent</name></member>
      <member refid="group__kwineffects_1ga4998fb0983bd97163935cad2c4dedd76" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>tabletPadStripEvent</name></member>
      <member refid="group__kwineffects_1ga1d4ae01f5935ea887a12018d59191cbf" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>tabletToolAxis</name></member>
      <member refid="group__kwineffects_1ga7a984d7d83dfa97962b8404301c6aba9" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>tabletToolButtonEvent</name></member>
      <member refid="group__kwineffects_1ga4ed77506be381680bf664dbc8c20e036" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>tabletToolProximity</name></member>
      <member refid="group__kwineffects_1gaf16e9ca42cceb738fb859d1a1a462548" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>tabletToolTip</name></member>
      <member refid="group__kwineffects_1gaa31554949bc00085e6380b50be16138e" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>touchCancel</name></member>
      <member refid="group__kwineffects_1ga315fd305e7570f41e7bce7db6812381f" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>touchDown</name></member>
      <member refid="group__kwineffects_1ga54d00a9e05b5d4597db40c2f5b1d36de" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>touchMotion</name></member>
      <member refid="group__kwineffects_1gaf3871967d6199eb7c87621bc75b925bb" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>touchUp</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a9c7ca700c3dec12cbdf5d01aa39dcdff" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>verticalGap</name></member>
      <member refid="class_k_win_1_1_slide_effect_1af9f691456791f5b91f0372526495f59e" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>verticalGap</name></member>
      <member refid="class_k_win_1_1_slide_effect_1ae2fd0d90b973288912c4cb583550b3d6" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>visibleDesktops</name></member>
      <member refid="class_k_win_1_1_slide_effect_1ac8d490b1d54416fe6ff88f42f7eedcc7" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>willBePainted</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a4931735bdf54552e7a28da24fd064339" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>windowAdded</name></member>
      <member refid="class_k_win_1_1_slide_effect_1aca73c1ef322e2630087dc3f705d843ea" prot="private" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>windowDeleted</name></member>
      <member refid="group__kwineffects_1ga7b142933c38cb9b4a433b768b266e7cb" prot="public" virt="virtual"><scope>KWin::SlideEffect</scope><name>windowInputMouseEvent</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a030ac9288d3b63ed9cb4ad2f986f1518" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>wrap</name></member>
      <member refid="group__kwineffects_1ga50174eb0169aebceb78ebd5aff71c481" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>~Effect</name></member>
      <member refid="class_k_win_1_1_slide_effect_1a103384709deaddde9fa30235305d459e" prot="public" virt="non-virtual"><scope>KWin::SlideEffect</scope><name>~SlideEffect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
