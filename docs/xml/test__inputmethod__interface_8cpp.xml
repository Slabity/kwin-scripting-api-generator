<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="test__inputmethod__interface_8cpp" kind="file" language="C++">
    <compoundname>test_inputmethod_interface.cpp</compoundname>
    <includes local="no">QHash</includes>
    <includes local="no">QSignalSpy</includes>
    <includes local="no">QTest</includes>
    <includes local="no">QThread</includes>
    <includes refid="fakeoutput_8h" local="yes">../../../tests/fakeoutput.h</includes>
    <includes refid="wayland_2compositor_8h" local="yes">wayland/compositor.h</includes>
    <includes refid="display_8h" local="yes">wayland/display.h</includes>
    <includes refid="inputmethod__v1_8h" local="yes">wayland/inputmethod_v1.h</includes>
    <includes refid="wayland_2output_8h" local="yes">wayland/output.h</includes>
    <includes refid="seat_8h" local="yes">wayland/seat.h</includes>
    <includes local="yes">KWayland/Client/compositor.h</includes>
    <includes local="yes">KWayland/Client/connection_thread.h</includes>
    <includes local="yes">KWayland/Client/event_queue.h</includes>
    <includes local="yes">KWayland/Client/keyboard.h</includes>
    <includes local="yes">KWayland/Client/output.h</includes>
    <includes local="yes">KWayland/Client/registry.h</includes>
    <includes local="yes">KWayland/Client/seat.h</includes>
    <includes local="yes">KWayland/Client/surface.h</includes>
    <includes local="yes">qwayland-input-method-unstable-v1.h</includes>
    <includes local="yes">qwayland-server-text-input-unstable-v1.h</includes>
    <includes local="no">linux/input-event-codes.h</includes>
    <includes local="yes">test_inputmethod_interface.moc</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/autotests/wayland/server/test_inputmethod_interface.cpp</label>
        <link refid="test__inputmethod__interface_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>wayland/compositor.h</label>
        <link refid="wayland_2compositor_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>wayland/display.h</label>
        <link refid="display_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>wayland/inputmethod_v1.h</label>
        <link refid="inputmethod__v1_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>wayland/output.h</label>
        <link refid="wayland_2output_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>wayland/seat.h</label>
        <link refid="seat_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>surface.h</label>
        <link refid="surface_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>textinput.h</label>
        <link refid="textinput_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../../../tests/fakeoutput.h</label>
        <link refid="fakeoutput_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>KWayland/Client/compositor.h</label>
      </node>
      <node id="45">
        <label>KWayland/Client/connection_thread.h</label>
      </node>
      <node id="46">
        <label>KWayland/Client/event_queue.h</label>
      </node>
      <node id="47">
        <label>KWayland/Client/keyboard.h</label>
      </node>
      <node id="48">
        <label>KWayland/Client/output.h</label>
      </node>
      <node id="49">
        <label>KWayland/Client/registry.h</label>
      </node>
      <node id="50">
        <label>KWayland/Client/seat.h</label>
      </node>
      <node id="51">
        <label>KWayland/Client/surface.h</label>
      </node>
      <node id="22">
        <label>QByteArray</label>
      </node>
      <node id="12">
        <label>QCoreApplication</label>
      </node>
      <node id="25">
        <label>QDebug</label>
      </node>
      <node id="2">
        <label>QHash</label>
      </node>
      <node id="13">
        <label>QImage</label>
      </node>
      <node id="23">
        <label>QList</label>
      </node>
      <node id="21">
        <label>QMatrix4x4</label>
      </node>
      <node id="40">
        <label>QMetaType</label>
      </node>
      <node id="17">
        <label>QObject</label>
      </node>
      <node id="14">
        <label>QPoint</label>
      </node>
      <node id="33">
        <label>QPointer</label>
      </node>
      <node id="26">
        <label>QRect</label>
      </node>
      <node id="35">
        <label>QRegion</label>
      </node>
      <node id="3">
        <label>QSignalSpy</label>
      </node>
      <node id="24">
        <label>QSize</label>
      </node>
      <node id="4">
        <label>QTest</label>
      </node>
      <node id="5">
        <label>QThread</label>
      </node>
      <node id="27">
        <label>QUuid</label>
      </node>
      <node id="15">
        <label>QVariant</label>
      </node>
      <node id="16">
        <label>QVector2D</label>
      </node>
      <node id="41">
        <label>QtGlobal</label>
      </node>
      <node id="11">
        <label>config-kwin.h</label>
      </node>
      <node id="8">
        <label>kwin_export.h</label>
      </node>
      <node id="54">
        <label>linux/input-event-codes.h</label>
      </node>
      <node id="34">
        <label>memory</label>
      </node>
      <node id="20">
        <label>optional</label>
      </node>
      <node id="52">
        <label>qwayland-input-method-unstable-v1.h</label>
      </node>
      <node id="53">
        <label>qwayland-server-text-input-unstable-v1.h</label>
      </node>
      <node id="55">
        <label>test_inputmethod_interface.moc</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_input_panel_surface" prot="public">InputPanelSurface</innerclass>
    <innerclass refid="class_input_panel" prot="public">InputPanel</innerclass>
    <innerclass refid="class_input_method_v1_context" prot="public">InputMethodV1Context</innerclass>
    <innerclass refid="class_input_method_v1" prot="public">InputMethodV1</innerclass>
    <innerclass refid="class_test_input_method_interface" prot="public">TestInputMethodInterface</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="test__inputmethod__interface_8cpp_1a485d6ddd568caea0908934bfdb9fbadb" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString s_socketName</definition>
        <argsstring></argsstring>
        <name>s_socketName</name>
        <initializer>= QStringLiteral(&quot;kwin-wayland-server-inputmethod-test-0&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/server/test_inputmethod_interface.cpp" line="190" column="22" bodyfile="kwin/autotests/wayland/server/test_inputmethod_interface.cpp" bodystart="190" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>Aleix<sp/>Pol<sp/>Gonzalez<sp/>&lt;aleixpol@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>Bhushan<sp/>Shah<sp/>&lt;bshah@kde.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QHash&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSignalSpy&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QThread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fakeoutput_8h" kindref="compound">../../../tests/fakeoutput.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WaylandServer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland_2compositor_8h" kindref="compound">wayland/compositor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">wayland/display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inputmethod__v1_8h" kindref="compound">wayland/inputmethod_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland_2output_8h" kindref="compound">wayland/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="seat_8h" kindref="compound">wayland/seat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;KWayland/Client/compositor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;KWayland/Client/connection_thread.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;KWayland/Client/event_queue.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;KWayland/Client/keyboard.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;KWayland/Client/output.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;KWayland/Client/registry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;KWayland/Client/seat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;KWayland/Client/surface.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-input-method-unstable-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-server-text-input-unstable-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/input-event-codes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_input_panel_surface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_input_panel_surface_1aeaa1b25600e3b920bd0940cb6a7016f4" kindref="member">InputPanelSurface</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zwp_input_panel_surface_v1</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42" refid="class_input_panel_surface_1aeaa1b25600e3b920bd0940cb6a7016f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_input_panel_surface_1aeaa1b25600e3b920bd0940cb6a7016f4" kindref="member">InputPanelSurface</ref>(::zwp_input_panel_surface_v1<sp/>*t)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespace_qt_wayland" kindref="compound">QtWayland</ref>::zwp_input_panel_surface_v1(t)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_input_panel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_input_panel_1ae9cfaa634274f9c88cef286880be5f08" kindref="member">InputPanel</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zwp_input_panel_v1</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51" refid="class_input_panel_1ae9cfaa634274f9c88cef286880be5f08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_input_panel_1ae9cfaa634274f9c88cef286880be5f08" kindref="member">InputPanel</ref>(struct<sp/>::wl_registry<sp/>*registry,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespace_qt_wayland" kindref="compound">QtWayland</ref>::zwp_input_panel_v1(registry,<sp/>id,<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_input_panel_1a42d0df256ac3bdd2d4b271667e52ff5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_input_panel_surface" kindref="compound">InputPanelSurface</ref><sp/>*<ref refid="class_input_panel_1a42d0df256ac3bdd2d4b271667e52ff5a" kindref="member">panelForSurface</ref>(KWayland::Client::Surface<sp/>*surface)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>panelSurface<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_input_panel_surface" kindref="compound">InputPanelSurface</ref>(get_input_panel_surface(*surface));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject::connect(surface,<sp/>&amp;QObject::destroyed,<sp/>panelSurface,<sp/>&amp;QObject::deleteLater);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>panelSurface;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_input_method_v1_context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_input_method_v1_context" kindref="compound">InputMethodV1Context</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zwp_input_method_context_v1</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68" refid="class_input_method_v1_context_1af7461e573c70a2bf586576e31b73a25e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/><ref refid="class_input_method_v1_context_1af7461e573c70a2bf586576e31b73a25e" kindref="member">contentPurpose</ref>()</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>imPurpose;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72" refid="class_input_method_v1_context_1ab376ecb34670e6bc73e339e1892712f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/><ref refid="class_input_method_v1_context_1ab376ecb34670e6bc73e339e1892712f4" kindref="member">contentHints</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>imHint;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="77" refid="class_input_method_v1_context_1a5ab711b02184d122cb968d2c481a0436" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_context_1a5ab711b02184d122cb968d2c481a0436" kindref="member">content_type_changed</ref>();</highlight></codeline>
<codeline lineno="78" refid="class_input_method_v1_context_1a7e42a30af700f44cf9675bfe1140c73b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_context_1a7e42a30af700f44cf9675bfe1140c73b" kindref="member">invoke_action</ref>(quint32<sp/>button,<sp/>quint32<sp/>index);</highlight></codeline>
<codeline lineno="79" refid="class_input_method_v1_context_1a037cec5b866c741a1a23df364a9a4a9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_context_1a037cec5b866c741a1a23df364a9a4a9a" kindref="member">preferred_language</ref>(QString<sp/>lang);</highlight></codeline>
<codeline lineno="80" refid="class_input_method_v1_context_1a09ed66e3a79ab1ae56c06b81bdd2a7fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_context_1a09ed66e3a79ab1ae56c06b81bdd2a7fb" kindref="member">surrounding_text</ref>(QString<sp/>lang,<sp/>quint32<sp/>cursor,<sp/>quint32<sp/>anchor);</highlight></codeline>
<codeline lineno="81" refid="class_input_method_v1_context_1a1ce465fa62daf1998e3ae4dc800750d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_context_1a1ce465fa62daf1998e3ae4dc800750d2" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84" refid="class_input_method_v1_context_1a0e99bd657f974abd9754e24844a13ae7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_context_1a0e99bd657f974abd9754e24844a13ae7" kindref="member">zwp_input_method_context_v1_content_type</ref>(uint32_t<sp/>hint,<sp/>uint32_t<sp/>purpose)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="85"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imHint<sp/>=<sp/>hint;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imPurpose<sp/>=<sp/>purpose;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_input_method_v1_context_1a5ab711b02184d122cb968d2c481a0436" kindref="member">content_type_changed</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90" refid="class_input_method_v1_context_1a505ec79a8a63fd9cedf5061db7be0b30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_context_1a505ec79a8a63fd9cedf5061db7be0b30" kindref="member">zwp_input_method_context_v1_invoke_action</ref>(uint32_t<sp/>button,<sp/>uint32_t<sp/>index)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="91"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_input_method_v1_context_1a7e42a30af700f44cf9675bfe1140c73b" kindref="member">invoke_action</ref>(button,<sp/>index);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94" refid="class_input_method_v1_context_1acb5c826419b149711d8ae39bd398d7cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_context_1acb5c826419b149711d8ae39bd398d7cf" kindref="member">zwp_input_method_context_v1_preferred_language</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;language)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="95"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_input_method_v1_context_1a037cec5b866c741a1a23df364a9a4a9a" kindref="member">preferred_language</ref>(language);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98" refid="class_input_method_v1_context_1a928f79a37a166ba72f0231d2fd57a489" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_context_1a928f79a37a166ba72f0231d2fd57a489" kindref="member">zwp_input_method_context_v1_surrounding_text</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/>uint32_t<sp/>cursor,<sp/>uint32_t<sp/>anchor)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="99"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_input_method_v1_context_1a09ed66e3a79ab1ae56c06b81bdd2a7fb" kindref="member">surrounding_text</ref>(text,<sp/>cursor,<sp/>anchor);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102" refid="class_input_method_v1_context_1a731130e2c72c19fc4b959a7db3f4cf7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_context_1a731130e2c72c19fc4b959a7db3f4cf7a" kindref="member">zwp_input_method_context_v1_reset</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="103"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_input_method_v1_context_1a1ce465fa62daf1998e3ae4dc800750d2" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>imHint<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>imPurpose<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_input_method_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_input_method_v1_1ab96c344d23d89efa10ee563de17282fc" kindref="member">InputMethodV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zwp_input_method_v1</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116" refid="class_input_method_v1_1ab96c344d23d89efa10ee563de17282fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_input_method_v1_1ab96c344d23d89efa10ee563de17282fc" kindref="member">InputMethodV1</ref>(struct<sp/>::wl_registry<sp/>*registry,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespace_qt_wayland" kindref="compound">QtWayland</ref>::zwp_input_method_v1(registry,<sp/>id,<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120" refid="class_input_method_v1_1a5bba537bcb907d2702f530a3edeb8d6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_input_method_v1_context" kindref="compound">InputMethodV1Context</ref><sp/>*<ref refid="class_input_method_v1_1a5bba537bcb907d2702f530a3edeb8d6e" kindref="member">context</ref>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_context;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="126" refid="class_input_method_v1_1a86703b9861ac210cdc6a1e30d5f7f42f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_1a86703b9861ac210cdc6a1e30d5f7f42f" kindref="member">activated</ref>();</highlight></codeline>
<codeline lineno="127" refid="class_input_method_v1_1a1453b94a803908a0131ac11fef574782" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_1a1453b94a803908a0131ac11fef574782" kindref="member">deactivated</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="130" refid="class_input_method_v1_1a1c2605a3487e1d0e0e9daf0e18ecd162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_1a1c2605a3487e1d0e0e9daf0e18ecd162" kindref="member">zwp_input_method_v1_activate</ref>(struct<sp/>::zwp_input_method_context_v1<sp/>*<ref refid="class_input_method_v1_1a5bba537bcb907d2702f530a3edeb8d6e" kindref="member">context</ref>)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="131"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_context<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_context" kindref="compound">InputMethodV1Context</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_context-&gt;init(<ref refid="class_input_method_v1_1a5bba537bcb907d2702f530a3edeb8d6e" kindref="member">context</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_input_method_v1_1a86703b9861ac210cdc6a1e30d5f7f42f" kindref="member">activated</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="136" refid="class_input_method_v1_1aa0e1e08d0ac6b208c63226c939ea3718" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_method_v1_1aa0e1e08d0ac6b208c63226c939ea3718" kindref="member">zwp_input_method_v1_deactivate</ref>(struct<sp/>::zwp_input_method_context_v1<sp/>*<ref refid="class_input_method_v1_1a5bba537bcb907d2702f530a3edeb8d6e" kindref="member">context</ref>)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="137"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_context;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_context<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_input_method_v1_1a1453b94a803908a0131ac11fef574782" kindref="member">deactivated</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_input_method_v1_context" kindref="compound">InputMethodV1Context</ref><sp/>*m_context;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="class_test_input_method_interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_input_method_interface_1aa54c27b3f340a9a93b6d861985e2f402" kindref="member">TestInputMethodInterface</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="151" refid="class_test_input_method_interface_1aa54c27b3f340a9a93b6d861985e2f402" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_test_input_method_interface_1aa54c27b3f340a9a93b6d861985e2f402" kindref="member">TestInputMethodInterface</ref>()</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_test_input_method_interface_1afb4b322d0bbe38bf4296d0a643182b2c" kindref="member">~TestInputMethodInterface</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Q_SLOTS:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testAdd();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testActivate();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testContext();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testGrabkeyboard();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testContentHints_data();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testContentHints();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testContentPurpose_data();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testContentPurpose();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testKeyboardGrab();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::ConnectionThread<sp/>*m_connection;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::EventQueue<sp/>*m_queue;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Compositor<sp/>*m_clientCompositor;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Seat<sp/>*m_clientSeat<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Output<sp/>*m_output<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_input_method_v1" kindref="compound">InputMethodV1</ref><sp/>*m_inputMethod;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_input_panel" kindref="compound">InputPanel</ref><sp/>*m_inputPanel;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>QThread<sp/>*m_thread;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_display" kindref="compound">KWin::Display</ref><sp/>m_display;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*m_seat;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_compositor_interface" kindref="compound">CompositorInterface</ref><sp/>*m_serverCompositor;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;FakeOutput&gt;<sp/>m_outputHandle;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;OutputInterface&gt;<sp/>m_outputInterface;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_method_v1_interface" kindref="compound">KWin::InputMethodV1Interface</ref><sp/>*m_inputMethodIface;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_panel_v1_interface" kindref="compound">KWin::InputPanelV1Interface</ref><sp/>*m_inputPanelIface;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;SurfaceInterface<sp/>*&gt;<sp/>m_surfaces;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>s_socketName<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;kwin-wayland-server-inputmethod-test-0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestInputMethodInterface::initTestCase()</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>m_display.addSocketName(s_socketName);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>m_display.start();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(m_display.isRunning());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>m_seat<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SeatInterface(&amp;m_display,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;seat0&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>m_serverCompositor<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompositorInterface(&amp;m_display,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>InputMethodV1Interface(&amp;m_display,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputPanelIface<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>InputPanelV1Interface(&amp;m_display,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>m_outputHandle<sp/>=<sp/>std::make_unique&lt;FakeOutput&gt;();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>m_outputInterface<sp/>=<sp/>std::make_unique&lt;OutputInterface&gt;(&amp;m_display,<sp/>m_outputHandle.get());</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(m_serverCompositor,<sp/>&amp;<ref refid="class_k_win_1_1_compositor_interface_1a4a560a885ed69d43af0c857331e25592" kindref="member">CompositorInterface::surfaceCreated</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](SurfaceInterface<sp/>*surface)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_surfaces<sp/>+=<sp/>surface;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>m_connection<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KWayland::Client::ConnectionThread;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>connectedSpy(m_connection,<sp/>&amp;KWayland::Client::ConnectionThread::connected);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>m_connection-&gt;setSocketName(s_socketName);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>m_thread<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QThread(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>m_connection-&gt;moveToThread(m_thread);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>m_thread-&gt;start();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>m_connection-&gt;initConnection();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(connectedSpy.wait());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_connection-&gt;connections().isEmpty());</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>m_queue<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KWayland::Client::EventQueue(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_queue-&gt;isValid());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>m_queue-&gt;setup(m_connection);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(m_queue-&gt;isValid());</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>registry<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KWayland::Client::Registry(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>interfacesSpy(registry,<sp/>&amp;KWayland::Client::Registry::interfacesAnnounced);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(registry,<sp/>&amp;KWayland::Client::Registry::outputAnnounced,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>registry](quint32<sp/>name,<sp/>quint32<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_output<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KWayland::Client::Output(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_output-&gt;setup(registry-&gt;bindOutput(name,<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(registry,<sp/>&amp;KWayland::Client::Registry::interfaceAnnounced,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>registry](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;interface,<sp/>quint32<sp/>name,<sp/>quint32<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interface<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;zwp_input_panel_v1&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_inputPanel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>InputPanel(registry-&gt;registry(),<sp/>name,<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interface<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;zwp_input_method_v1&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_inputMethod<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a0119a2852474a1f2e7c9fcdca19cf5f1" kindref="member">InputMethodV1</ref>(registry-&gt;registry(),<sp/>name,<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(registry,<sp/>&amp;KWayland::Client::Registry::seatAnnounced,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>registry](quint32<sp/>name,<sp/>quint32<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_clientSeat<sp/>=<sp/>registry-&gt;createSeat(name,<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>registry-&gt;setEventQueue(m_queue);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>compositorSpy(registry,<sp/>&amp;KWayland::Client::Registry::compositorAnnounced);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>registry-&gt;create(m_connection-&gt;display());</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(registry-&gt;isValid());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>registry-&gt;setup();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_display_flush(m_connection-&gt;display());</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(compositorSpy.wait());</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>m_clientCompositor<sp/>=<sp/>registry-&gt;createCompositor(compositorSpy.first().first().value&lt;quint32&gt;(),<sp/>compositorSpy.first().last().value&lt;quint32&gt;(),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(m_clientCompositor-&gt;isValid());</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(interfacesSpy.count()<sp/>||<sp/>interfacesSpy.wait());</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceSpy(m_serverCompositor,<sp/>&amp;<ref refid="class_k_win_1_1_compositor_interface_1a4a560a885ed69d43af0c857331e25592" kindref="member">CompositorInterface::surfaceCreated</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_clientCompositor-&gt;createSurface(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceSpy.count()<sp/>&lt;<sp/>3<sp/>&amp;&amp;<sp/>surfaceSpy.wait(200));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(m_surfaces.count()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(m_inputPanel);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(m_output);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="class_test_input_method_interface_1afb4b322d0bbe38bf4296d0a643182b2c" refkind="member"><highlight class="normal"><ref refid="class_test_input_method_interface_1afb4b322d0bbe38bf4296d0a643182b2c" kindref="member">TestInputMethodInterface::~TestInputMethodInterface</ref>()</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_queue)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_queue;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_queue<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_thread)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_thread-&gt;quit();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_thread-&gt;wait();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_thread;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_thread<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_inputPanel;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_inputMethod;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_inputMethodIface;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_inputPanelIface;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>m_connection-&gt;deleteLater();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>m_connection<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestInputMethodInterface::testAdd()</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>panelSpy(m_inputPanelIface,<sp/>&amp;<ref refid="class_k_win_1_1_input_panel_v1_interface_1a9577e1a54c29bde444ec55a12d20c1d8" kindref="member">InputPanelV1Interface::inputPanelSurfaceAdded</ref>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointer&lt;InputPanelSurfaceV1Interface&gt;<sp/>panelSurfaceIface;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(m_inputPanelIface,<sp/>&amp;<ref refid="class_k_win_1_1_input_panel_v1_interface_1a9577e1a54c29bde444ec55a12d20c1d8" kindref="member">InputPanelV1Interface::inputPanelSurfaceAdded</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[&amp;panelSurfaceIface](<ref refid="class_k_win_1_1_input_panel_surface_v1_interface" kindref="compound">InputPanelSurfaceV1Interface</ref><sp/>*surface)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>panelSurfaceIface<sp/>=<sp/>surface;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>surface<sp/>=<sp/>m_clientCompositor-&gt;createSurface(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>panelSurface<sp/>=<sp/>m_inputPanel-&gt;panelForSurface(surface);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(panelSpy.wait()<sp/>||<sp/>panelSurfaceIface);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(panelSurfaceIface);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(panelSurfaceIface-&gt;surface()<sp/>==<sp/>m_surfaces.constLast());</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>panelTopLevelSpy(panelSurfaceIface,<sp/>&amp;<ref refid="class_k_win_1_1_input_panel_surface_v1_interface_1aeef9fc73cbe0fb39ba3a3c2022f35b9a" kindref="member">InputPanelSurfaceV1Interface::topLevel</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>panelSurface-&gt;set_toplevel(*m_output,<sp/>InputPanelSurface::position_center_bottom);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(panelTopLevelSpy.wait());</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestInputMethodInterface::testActivate()</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(m_inputMethodIface);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>inputMethodActivateSpy(m_inputMethod,<sp/>&amp;<ref refid="class_input_method_v1_1a86703b9861ac210cdc6a1e30d5f7f42f" kindref="member">InputMethodV1::activated</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>inputMethodDeactivateSpy(m_inputMethod,<sp/>&amp;<ref refid="class_input_method_v1_1a1453b94a803908a0131ac11fef574782" kindref="member">InputMethodV1::deactivated</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>sending<sp/>activate<sp/>the<sp/>context<sp/>should<sp/>be<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_inputMethodIface-&gt;context());</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>activate<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface-&gt;sendActivate();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(inputMethodActivateSpy.wait());</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(inputMethodActivateSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(m_inputMethodIface-&gt;context());</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>deactivate<sp/>and<sp/>verify<sp/>server<sp/>interface<sp/>resets<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface-&gt;sendDeactivate();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(inputMethodDeactivateSpy.wait());</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(inputMethodActivateSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_inputMethodIface-&gt;context());</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestInputMethodInterface::testContext()</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(m_inputMethodIface);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>inputMethodActivateSpy(m_inputMethod,<sp/>&amp;<ref refid="class_input_method_v1_1a86703b9861ac210cdc6a1e30d5f7f42f" kindref="member">InputMethodV1::activated</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>inputMethodDeactivateSpy(m_inputMethod,<sp/>&amp;<ref refid="class_input_method_v1_1a1453b94a803908a0131ac11fef574782" kindref="member">InputMethodV1::deactivated</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>sending<sp/>activate<sp/>the<sp/>context<sp/>should<sp/>be<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_inputMethodIface-&gt;context());</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>activate<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface-&gt;sendActivate();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(inputMethodActivateSpy.wait());</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(inputMethodActivateSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>KWin::InputMethodContextV1Interface<sp/>*serverContext<sp/>=<sp/>m_inputMethodIface-&gt;context();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(serverContext);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>InputMethodV1Context<sp/>*imContext<sp/>=<sp/>m_inputMethod-&gt;context();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(imContext);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>serial<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>commit<sp/>some<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>commitStringSpy(serverContext,<sp/>&amp;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1af3b8f29768d2b79d46cb9806585a113d" kindref="member">KWin::InputMethodContextV1Interface::commitString</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>imContext-&gt;commit_string(serial,<sp/></highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(commitStringSpy.wait());</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(commitStringSpy.count(),<sp/>serial);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(commitStringSpy.last().at(0).value&lt;quint32&gt;(),<sp/>serial);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(commitStringSpy.last().at(1).value&lt;QString&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>serial++;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>preedit<sp/>styling<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>preeditStylingSpy(serverContext,<sp/>&amp;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1aee9c2d3a700f8e432dcb36559d736907" kindref="member">KWin::InputMethodContextV1Interface::preeditStyling</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>protocol<sp/>does<sp/>not<sp/>document<sp/>3rd<sp/>argument<sp/>mean<sp/>in<sp/>much<sp/>details<sp/>(styling)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>imContext-&gt;preedit_styling(0,<sp/>5,<sp/>1);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(preeditStylingSpy.wait());</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(preeditStylingSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(preeditStylingSpy.last().at(0).value&lt;quint32&gt;(),<sp/>0);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(preeditStylingSpy.last().at(1).value&lt;quint32&gt;(),<sp/>5);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(preeditStylingSpy.last().at(2).value&lt;quint32&gt;(),<sp/>1);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>preedit<sp/>cursor<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>preeditCursorSpy(serverContext,<sp/>&amp;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1a968be8a0a615381e2c47023841dd768c" kindref="member">KWin::InputMethodContextV1Interface::preeditCursor</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>imContext-&gt;preedit_cursor(3);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(preeditCursorSpy.wait());</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(preeditCursorSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(preeditCursorSpy.last().at(0).value&lt;quint32&gt;(),<sp/>3);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>commit<sp/>preedit_string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>preeditStringSpy(serverContext,<sp/>&amp;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1a9e08ef549619180697df1e1506bb27eb" kindref="member">KWin::InputMethodContextV1Interface::preeditString</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>imContext-&gt;preedit_string(serial,<sp/></highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;kde&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(preeditStringSpy.wait());</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(preeditStringSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(preeditStringSpy.last().at(0).value&lt;quint32&gt;(),<sp/>serial);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(preeditStringSpy.last().at(1).value&lt;QString&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(preeditStringSpy.last().at(2).value&lt;QString&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;kde&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>serial++;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>surrounding<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>deleteSurroundingSpy(serverContext,<sp/>&amp;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1a43fec6c1fe96c7319adb827098393da5" kindref="member">KWin::InputMethodContextV1Interface::deleteSurroundingText</ref>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>imContext-&gt;delete_surrounding_text(0,<sp/>5);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(deleteSurroundingSpy.wait());</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(deleteSurroundingSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(deleteSurroundingSpy.last().at(0).value&lt;quint32&gt;(),<sp/>0);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(deleteSurroundingSpy.last().at(1).value&lt;quint32&gt;(),<sp/>5);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>cursor<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>cursorPositionSpy(serverContext,<sp/>&amp;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1abdb9b22864423aba41e422f13bd407b7" kindref="member">KWin::InputMethodContextV1Interface::cursorPosition</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>imContext-&gt;cursor_position(2,<sp/>4);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(cursorPositionSpy.wait());</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cursorPositionSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cursorPositionSpy.last().at(0).value&lt;quint32&gt;(),<sp/>2);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(cursorPositionSpy.last().at(1).value&lt;quint32&gt;(),<sp/>4);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invoke<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>invokeActionSpy(imContext,<sp/>&amp;<ref refid="class_input_method_v1_context_1a7e42a30af700f44cf9675bfe1140c73b" kindref="member">InputMethodV1Context::invoke_action</ref>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>serverContext-&gt;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1a9a96c49e775086543949aa3980c1b495" kindref="member">sendInvokeAction</ref>(3,<sp/>5);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(invokeActionSpy.wait());</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(invokeActionSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(invokeActionSpy.last().at(0).value&lt;quint32&gt;(),<sp/>3);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(invokeActionSpy.last().at(1).value&lt;quint32&gt;(),<sp/>5);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>preferred<sp/>language</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>preferredLanguageSpy(imContext,<sp/>&amp;<ref refid="class_input_method_v1_context_1a037cec5b866c741a1a23df364a9a4a9a" kindref="member">InputMethodV1Context::preferred_language</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>serverContext-&gt;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1acecbde4e08c09756d2981eacee5c348e" kindref="member">sendPreferredLanguage</ref>(</highlight><highlight class="stringliteral">&quot;gu_IN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(preferredLanguageSpy.wait());</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(preferredLanguageSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(preferredLanguageSpy.last().at(0).value&lt;QString&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;gu_IN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>surrounding<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surroundingTextSpy(imContext,<sp/>&amp;<ref refid="class_input_method_v1_context_1a09ed66e3a79ab1ae56c06b81bdd2a7fb" kindref="member">InputMethodV1Context::surrounding_text</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>serverContext-&gt;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1a87c58cc879a9cc0a1173124609e2e194" kindref="member">sendSurroundingText</ref>(</highlight><highlight class="stringliteral">&quot;Hello<sp/>Plasma!&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>4);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surroundingTextSpy.wait());</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(surroundingTextSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(surroundingTextSpy.last().at(0).value&lt;QString&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;Hello<sp/>Plasma!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(surroundingTextSpy.last().at(1).value&lt;quint32&gt;(),<sp/>2);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(surroundingTextSpy.last().at(2).value&lt;quint32&gt;(),<sp/>4);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>resetSpy(imContext,<sp/>&amp;<ref refid="class_input_method_v1_context_1a1ce465fa62daf1998e3ae4dc800750d2" kindref="member">InputMethodV1Context::reset</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>serverContext-&gt;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1a0f38cfa9a76dfa13bec4287877dcfa42" kindref="member">sendReset</ref>();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(resetSpy.wait());</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(resetSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>deactivate<sp/>and<sp/>verify<sp/>server<sp/>interface<sp/>resets<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface-&gt;sendDeactivate();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(inputMethodDeactivateSpy.wait());</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(inputMethodActivateSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_inputMethodIface-&gt;context());</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_inputMethod-&gt;context());</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestInputMethodInterface::testGrabkeyboard()</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(m_inputMethodIface);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>inputMethodActivateSpy(m_inputMethod,<sp/>&amp;<ref refid="class_input_method_v1_1a86703b9861ac210cdc6a1e30d5f7f42f" kindref="member">InputMethodV1::activated</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>inputMethodDeactivateSpy(m_inputMethod,<sp/>&amp;<ref refid="class_input_method_v1_1a1453b94a803908a0131ac11fef574782" kindref="member">InputMethodV1::deactivated</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>sending<sp/>activate<sp/>the<sp/>context<sp/>should<sp/>be<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_inputMethodIface-&gt;context());</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>activate<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface-&gt;sendActivate();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(inputMethodActivateSpy.wait());</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(inputMethodActivateSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>KWin::InputMethodContextV1Interface<sp/>*serverContext<sp/>=<sp/>m_inputMethodIface-&gt;context();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(serverContext);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>InputMethodV1Context<sp/>*imContext<sp/>=<sp/>m_inputMethod-&gt;context();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(imContext);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>keyEventSpy(serverContext,<sp/>&amp;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1ab57c7a2403e7a326141203e6cab29572" kindref="member">KWin::InputMethodContextV1Interface::key</ref>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>imContext-&gt;key(0,<sp/>123,<sp/>56,<sp/>1);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>QEXPECT_FAIL(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;We<sp/>should<sp/>be<sp/>not<sp/>get<sp/>key<sp/>event<sp/>if<sp/>keyboard<sp/>is<sp/>not<sp/>grabbed&quot;</highlight><highlight class="normal">,<sp/>Continue);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!keyEventSpy.wait(200));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>modifierEventSpy(serverContext,<sp/>&amp;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1abb93cd85e0e4c6e85a08819916e2091e" kindref="member">KWin::InputMethodContextV1Interface::modifiers</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>imContext-&gt;modifiers(1234,<sp/>0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>QEXPECT_FAIL(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;We<sp/>should<sp/>be<sp/>not<sp/>get<sp/>modifiers<sp/>event<sp/>if<sp/>keyboard<sp/>is<sp/>not<sp/>grabbed&quot;</highlight><highlight class="normal">,<sp/>Continue);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!modifierEventSpy.wait(200));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grab<sp/>the<sp/>keyboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_keyboard<sp/>*keyboard<sp/>=<sp/>imContext-&gt;grab_keyboard();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(keyboard);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>add<sp/>more<sp/>tests<sp/>about<sp/>keyboard<sp/>grab<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>deactivate<sp/>and<sp/>verify<sp/>server<sp/>interface<sp/>resets<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface-&gt;sendDeactivate();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(inputMethodDeactivateSpy.wait());</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(inputMethodActivateSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_inputMethodIface-&gt;context());</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_inputMethod-&gt;context());</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestInputMethodInterface::testContentHints_data()</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;KWin::TextInputContentHints&gt;(</highlight><highlight class="stringliteral">&quot;serverHints&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;quint32&gt;(</highlight><highlight class="stringliteral">&quot;imHint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Spellcheck&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentHints(TextInputContentHint::AutoCorrection)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_hint_auto_correction);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;AutoCapital&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentHints(TextInputContentHint::AutoCapitalization)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_hint_auto_capitalization);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Lowercase&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentHints(TextInputContentHint::LowerCase)<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_hint_lowercase);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Uppercase&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentHints(TextInputContentHint::UpperCase)<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_hint_uppercase);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Titlecase&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentHints(TextInputContentHint::TitleCase)<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_hint_titlecase);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;HiddenText&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentHints(TextInputContentHint::HiddenText)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_hint_hidden_text);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;SensitiveData&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentHints(TextInputContentHint::SensitiveData)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_hint_sensitive_data);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Latin&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentHints(TextInputContentHint::Latin)<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_hint_latin);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Multiline&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentHints(TextInputContentHint::MultiLine)<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_hint_multiline);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Auto&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentHints(TextInputContentHint::AutoCorrection<sp/>|<sp/>TextInputContentHint::AutoCapitalization)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_hint_auto_correction</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>QtWaylandServer::zwp_text_input_v1::content_hint_auto_capitalization);</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestInputMethodInterface::testContentHints()</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(m_inputMethodIface);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>inputMethodActivateSpy(m_inputMethod,<sp/>&amp;<ref refid="class_input_method_v1_1a86703b9861ac210cdc6a1e30d5f7f42f" kindref="member">InputMethodV1::activated</ref>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>inputMethodDeactivateSpy(m_inputMethod,<sp/>&amp;<ref refid="class_input_method_v1_1a1453b94a803908a0131ac11fef574782" kindref="member">InputMethodV1::deactivated</ref>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>sending<sp/>activate<sp/>the<sp/>context<sp/>should<sp/>be<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_inputMethodIface-&gt;context());</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>activate<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface-&gt;sendActivate();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(inputMethodActivateSpy.wait());</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(inputMethodActivateSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>KWin::InputMethodContextV1Interface<sp/>*serverContext<sp/>=<sp/>m_inputMethodIface-&gt;context();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(serverContext);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>InputMethodV1Context<sp/>*imContext<sp/>=<sp/>m_inputMethod-&gt;context();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(imContext);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>contentTypeChangedSpy(imContext,<sp/>&amp;<ref refid="class_input_method_v1_context_1a5ab711b02184d122cb968d2c481a0436" kindref="member">InputMethodV1Context::content_type_changed</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(KWin::TextInputContentHints,<sp/>serverHints);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>serverContext-&gt;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1ac3327ace10bcec2b8113e4bc2092a688" kindref="member">sendContentType</ref>(serverHints,<sp/><ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26a960b44c579bc2f6818d2daaf9e4c16f0" kindref="member">KWin::TextInputContentPurpose::Normal</ref>);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(contentTypeChangedSpy.wait());</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(contentTypeChangedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>QEXPECT_FAIL(</highlight><highlight class="stringliteral">&quot;SensitiveData&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SensitiveData<sp/>content<sp/>hint<sp/>need<sp/>fixing&quot;</highlight><highlight class="normal">,<sp/>Continue);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>QTEST(imContext-&gt;<ref refid="class_input_method_v1_context_1ab376ecb34670e6bc73e339e1892712f4" kindref="member">contentHints</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;imHint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>deactivate<sp/>and<sp/>verify<sp/>server<sp/>interface<sp/>resets<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface-&gt;sendDeactivate();</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(inputMethodDeactivateSpy.wait());</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(inputMethodActivateSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_inputMethodIface-&gt;context());</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_inputMethod-&gt;context());</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestInputMethodInterface::testContentPurpose_data()</highlight></codeline>
<codeline lineno="545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;KWin::TextInputContentPurpose&gt;(</highlight><highlight class="stringliteral">&quot;serverPurpose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;quint32&gt;(</highlight><highlight class="stringliteral">&quot;imPurpose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Alpha&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentPurpose::Alpha<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_purpose_alpha);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Digits&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentPurpose::Digits<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_purpose_digits);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Number&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentPurpose::Number<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_purpose_number);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Phone&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentPurpose::Phone<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_purpose_phone);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Url&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentPurpose::Url<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_purpose_url);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Email&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentPurpose::Email<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_purpose_email);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentPurpose::Name<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_purpose_name);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Password&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentPurpose::Password<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_purpose_password);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Date&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentPurpose::Date<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_purpose_date);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Time&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentPurpose::Time<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_purpose_time);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;DateTime&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentPurpose::DateTime<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_purpose_datetime);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Terminal&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentPurpose::Terminal<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_purpose_terminal);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentPurpose::Normal<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_purpose_normal);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Pin&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>TextInputContentPurpose::Pin<sp/>&lt;&lt;<sp/>quint32(QtWaylandServer::zwp_text_input_v1::content_purpose_password);</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestInputMethodInterface::testContentPurpose()</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(m_inputMethodIface);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>inputMethodActivateSpy(m_inputMethod,<sp/>&amp;<ref refid="class_input_method_v1_1a86703b9861ac210cdc6a1e30d5f7f42f" kindref="member">InputMethodV1::activated</ref>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>inputMethodDeactivateSpy(m_inputMethod,<sp/>&amp;<ref refid="class_input_method_v1_1a1453b94a803908a0131ac11fef574782" kindref="member">InputMethodV1::deactivated</ref>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>sending<sp/>activate<sp/>the<sp/>context<sp/>should<sp/>be<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_inputMethodIface-&gt;context());</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>activate<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface-&gt;sendActivate();</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(inputMethodActivateSpy.wait());</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(inputMethodActivateSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>KWin::InputMethodContextV1Interface<sp/>*serverContext<sp/>=<sp/>m_inputMethodIface-&gt;context();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(serverContext);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>InputMethodV1Context<sp/>*imContext<sp/>=<sp/>m_inputMethod-&gt;context();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(imContext);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>contentTypeChangedSpy(imContext,<sp/>&amp;<ref refid="class_input_method_v1_context_1a5ab711b02184d122cb968d2c481a0436" kindref="member">InputMethodV1Context::content_type_changed</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(<ref refid="namespace_k_win_1ab2addc3b8b9ec94f61414f824dd23c26" kindref="member">KWin::TextInputContentPurpose</ref>,<sp/>serverPurpose);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>serverContext-&gt;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1ac3327ace10bcec2b8113e4bc2092a688" kindref="member">sendContentType</ref>(KWin::TextInputContentHints(<ref refid="namespace_k_win_1a0b54d29cd5d4773605dbba26934d6197a6adf97f83acf6453d4a6a4b1070f3754" kindref="member">KWin::TextInputContentHint::None</ref>),<sp/>serverPurpose);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(contentTypeChangedSpy.wait());</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(contentTypeChangedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>QEXPECT_FAIL(</highlight><highlight class="stringliteral">&quot;Pin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Pin<sp/>should<sp/>return<sp/>content_purpose_password&quot;</highlight><highlight class="normal">,<sp/>Continue);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>QTEST(imContext-&gt;<ref refid="class_input_method_v1_context_1af7461e573c70a2bf586576e31b73a25e" kindref="member">contentPurpose</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;imPurpose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>deactivate<sp/>and<sp/>verify<sp/>server<sp/>interface<sp/>resets<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface-&gt;sendDeactivate();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(inputMethodDeactivateSpy.wait());</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(inputMethodActivateSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_inputMethodIface-&gt;context());</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!m_inputMethod-&gt;context());</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestInputMethodInterface::testKeyboardGrab()</highlight></codeline>
<codeline lineno="603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(m_inputMethodIface);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>inputMethodActivateSpy(m_inputMethod,<sp/>&amp;<ref refid="class_input_method_v1_1a86703b9861ac210cdc6a1e30d5f7f42f" kindref="member">InputMethodV1::activated</ref>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface-&gt;sendActivate();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(inputMethodActivateSpy.wait());</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>keyboardGrabSpy(m_inputMethodIface-&gt;context(),<sp/>&amp;<ref refid="class_k_win_1_1_input_method_context_v1_interface_1ac46dda0d769f6432675e6b573c6ba74a" kindref="member">InputMethodContextV1Interface::keyboardGrabRequested</ref>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>InputMethodV1Context<sp/>*imContext<sp/>=<sp/>m_inputMethod-&gt;context();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(imContext);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Keyboard<sp/>*keyboard<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KWayland::Client::Keyboard(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>keyboard-&gt;setup(imContext-&gt;grab_keyboard());</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(keyboard-&gt;isValid());</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(keyboardGrabSpy.count()<sp/>||<sp/>keyboardGrabSpy.wait());</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>keyboardSpy(keyboard,<sp/>&amp;KWayland::Client::Keyboard::keyChanged);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface-&gt;context()-&gt;keyboardGrab()-&gt;sendKey(0,<sp/>0,<sp/>KEY_F1,<sp/>KeyboardKeyState::Pressed);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface-&gt;context()-&gt;keyboardGrab()-&gt;sendKey(0,<sp/>0,<sp/>KEY_F1,<sp/>KeyboardKeyState::Released);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>keyboardSpy.wait();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(keyboardSpy.count(),<sp/>2);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputMethodIface-&gt;sendDeactivate();</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal">QTEST_GUILESS_MAIN(<ref refid="class_test_input_method_interface" kindref="compound">TestInputMethodInterface</ref>)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_inputmethod_interface.moc&quot;</highlight></codeline>
    </programlisting>
    <location file="kwin/autotests/wayland/server/test_inputmethod_interface.cpp"/>
  </compounddef>
</doxygen>
