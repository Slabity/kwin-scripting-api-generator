<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_compositor" kind="class" language="C++" prot="public">
    <compoundname>KWin::Compositor</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="compositor_8h" local="no">compositor.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_compositor_1afcefeec913ad4ca71af10c69469b473c" prot="public" static="no" strong="yes">
        <type></type>
        <name>State</name>
        <qualifiedname>KWin::Compositor::State</qualifiedname>
        <enumvalue id="class_k_win_1_1_compositor_1afcefeec913ad4ca71af10c69469b473ca521c36a31c2762741cf0f8890cbe05e3" prot="public">
          <name>On</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_compositor_1afcefeec913ad4ca71af10c69469b473cad15305d7a4e34e02489c74a5ef542f36" prot="public">
          <name>Off</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_compositor_1afcefeec913ad4ca71af10c69469b473cac2efe4bbd13e6cb0db293e72884273c0" prot="public">
          <name>Starting</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_compositor_1afcefeec913ad4ca71af10c69469b473ca7b7ecb39b9e110c2a31409a1672bad23" prot="public">
          <name>Stopping</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="40" column="5" bodyfile="kwin/src/compositor.h" bodystart="40" bodyend="45"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_compositor_1a0fec27876729a5848c06320b68097d98" prot="protected" static="yes" mutable="no">
        <type><ref refid="class_k_win_1_1_compositor" kindref="compound">Compositor</ref> *</type>
        <definition>Compositor * KWin::Compositor::s_compositor</definition>
        <argsstring></argsstring>
        <name>s_compositor</name>
        <qualifiedname>KWin::Compositor::s_compositor</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="89" column="23" bodyfile="kwin/src/compositor.h" bodystart="89" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_compositor_1adb47923c5c973528c0138d9d3afe5da6" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1aa1e33474a7077a13169f350a5949a79a" kindref="member">CompositingType</ref></type>
        <definition>CompositingType KWin::Compositor::m_selectedCompositor</definition>
        <argsstring></argsstring>
        <name>m_selectedCompositor</name>
        <qualifiedname>KWin::Compositor::m_selectedCompositor</qualifiedname>
        <initializer>= <ref refid="namespace_k_win_1aa1e33474a7077a13169f350a5949a79aa28e3e1a5f320d10fe0aeea04c5d3871f" kindref="member">NoCompositing</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="114" column="21" bodyfile="kwin/src/compositor.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_compositor_1a25b1aa3faa3fdc97067b378031f81a83" prot="protected" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_compositor_1afcefeec913ad4ca71af10c69469b473c" kindref="member">State</ref></type>
        <definition>State KWin::Compositor::m_state</definition>
        <argsstring></argsstring>
        <name>m_state</name>
        <qualifiedname>KWin::Compositor::m_state</qualifiedname>
        <initializer>= <ref refid="class_k_win_1_1_compositor_1afcefeec913ad4ca71af10c69469b473cad15305d7a4e34e02489c74a5ef542f36" kindref="member">State::Off</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="116" column="11" bodyfile="kwin/src/compositor.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_compositor_1a99787af68e7937d9f58a16033bbffe69" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_workspace_scene" kindref="compound">WorkspaceScene</ref> &gt;</type>
        <definition>std::unique_ptr&lt;WorkspaceScene&gt; KWin::Compositor::m_scene</definition>
        <argsstring></argsstring>
        <name>m_scene</name>
        <qualifiedname>KWin::Compositor::m_scene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="117" column="21" bodyfile="kwin/src/compositor.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_compositor_1a258fe9d665c33b15ca1aa27ca7aee878" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_cursor_scene" kindref="compound">CursorScene</ref> &gt;</type>
        <definition>std::unique_ptr&lt;CursorScene&gt; KWin::Compositor::m_cursorScene</definition>
        <argsstring></argsstring>
        <name>m_cursorScene</name>
        <qualifiedname>KWin::Compositor::m_cursorScene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="118" column="21" bodyfile="kwin/src/compositor.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_compositor_1a13e5a0d0cc78e3391024f216f3da49d5" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_render_backend" kindref="compound">RenderBackend</ref> &gt;</type>
        <definition>std::unique_ptr&lt;RenderBackend&gt; KWin::Compositor::m_backend</definition>
        <argsstring></argsstring>
        <name>m_backend</name>
        <qualifiedname>KWin::Compositor::m_backend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="119" column="21" bodyfile="kwin/src/compositor.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_compositor_1a9b56d908e9f3eec558e799b6ec470276" prot="protected" static="no" mutable="no">
        <type>QHash&lt; <ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref> *, <ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> * &gt;</type>
        <definition>QHash&lt;RenderLoop *, RenderLayer *&gt; KWin::Compositor::m_superlayers</definition>
        <argsstring></argsstring>
        <name>m_superlayers</name>
        <qualifiedname>KWin::Compositor::m_superlayers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="120" column="11" bodyfile="kwin/src/compositor.h" bodystart="120" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_compositor_1a013be9abf43a1e0960cd60c79c2c7f50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_compositor" kindref="compound">Compositor</ref> *</type>
        <definition>Compositor * KWin::Compositor::create</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>create</name>
        <qualifiedname>KWin::Compositor::create</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="38" column="23" bodyfile="kwin/src/compositor.cpp" bodystart="55" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_compositor" kindref="compound">Compositor</ref> *</type>
        <definition>Compositor * KWin::Compositor::self</definition>
        <argsstring>()</argsstring>
        <name>self</name>
        <qualifiedname>KWin::Compositor::self</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="48" column="23" bodyfile="kwin/src/compositor.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_compositor_1ac282aeda3014d5165d4f62a121fed87c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Compositor::~Compositor</definition>
        <argsstring>() override</argsstring>
        <name>~Compositor</name>
        <qualifiedname>KWin::Compositor::~Compositor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="47" column="5" bodyfile="kwin/src/compositor.cpp" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1abe6615b80b959c47fae82e36f637498a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <qualifiedname>KWin::Compositor::start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="50" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="285" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1a9fcef9cad86c0400d771b2fe68028869" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <qualifiedname>KWin::Compositor::stop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="51" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="347" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1a66ea6f3213ce7178248c24a8a6d01993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::reinitialize</definition>
        <argsstring>()</argsstring>
        <name>reinitialize</name>
        <qualifiedname>KWin::Compositor::reinitialize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Re-initializes the <ref refid="class_k_win_1_1_compositor" kindref="compound">Compositor</ref> completely. Connected to the D-Bus signal org.kde.KWin /KWin reinitCompositing </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="57" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1ab72e6e360477d5cfd27f5f25cfa1470c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Compositor::isActive</definition>
        <argsstring>()</argsstring>
        <name>isActive</name>
        <qualifiedname>KWin::Compositor::isActive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether the <ref refid="class_k_win_1_1_compositor" kindref="compound">Compositor</ref> is active. That is a <ref refid="class_k_win_1_1_scene" kindref="compound">Scene</ref> is present and the <ref refid="class_k_win_1_1_compositor" kindref="compound">Compositor</ref> is not shutting down itself. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="63" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1a42a38d690d77c464869c520189c99904" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_workspace_scene" kindref="compound">WorkspaceScene</ref> *</type>
        <definition>WorkspaceScene * KWin::Compositor::scene</definition>
        <argsstring>() const</argsstring>
        <name>scene</name>
        <qualifiedname>KWin::Compositor::scene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="65" column="20" bodyfile="kwin/src/compositor.h" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1a047a855b9cf2a49b52478f98f0e558b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_cursor_scene" kindref="compound">CursorScene</ref> *</type>
        <definition>CursorScene * KWin::Compositor::cursorScene</definition>
        <argsstring>() const</argsstring>
        <name>cursorScene</name>
        <qualifiedname>KWin::Compositor::cursorScene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="69" column="17" bodyfile="kwin/src/compositor.h" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1a7dfc838e5a8eb0a42d1e1007cd9c2b76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_render_backend" kindref="compound">RenderBackend</ref> *</type>
        <definition>RenderBackend * KWin::Compositor::backend</definition>
        <argsstring>() const</argsstring>
        <name>backend</name>
        <qualifiedname>KWin::Compositor::backend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="73" column="19" bodyfile="kwin/src/compositor.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1a3892810f29eaf1e74fea9a38dc02480d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::createRenderer</definition>
        <argsstring>()</argsstring>
        <name>createRenderer</name>
        <qualifiedname>KWin::Compositor::createRenderer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="78" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="226" bodyend="270"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_compositor_1a04c48b6cdd3fee5e2999b6d95af41ab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::compositingToggled</definition>
        <argsstring>(bool active)</argsstring>
        <name>compositingToggled</name>
        <qualifiedname>KWin::Compositor::compositingToggled</qualifiedname>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="81" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_compositor_1a71b4bb692cbea8615aff42db417ac965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::aboutToDestroy</definition>
        <argsstring>()</argsstring>
        <name>aboutToDestroy</name>
        <qualifiedname>KWin::Compositor::aboutToDestroy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="82" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_compositor_1a339b45ef1f23460988c64545f71a8b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::aboutToToggleCompositing</definition>
        <argsstring>()</argsstring>
        <name>aboutToToggleCompositing</name>
        <qualifiedname>KWin::Compositor::aboutToToggleCompositing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="83" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_compositor_1a87f603b7b663cf65e1855fc21aeae435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::sceneCreated</definition>
        <argsstring>()</argsstring>
        <name>sceneCreated</name>
        <qualifiedname>KWin::Compositor::sceneCreated</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="84" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_compositor_1aa0f03570039e4c70bf142f01d89dd44b" prot="protected" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Compositor::Compositor</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>Compositor</name>
        <qualifiedname>KWin::Compositor::Compositor</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="87" column="14" bodyfile="kwin/src/compositor.cpp" bodystart="69" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1ab98d35bb853cc11fc185f6f02b6b3a4b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
        <definition>Output * KWin::Compositor::findOutput</definition>
        <argsstring>(RenderLoop *loop) const</argsstring>
        <name>findOutput</name>
        <qualifiedname>KWin::Compositor::findOutput</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="98" column="12" bodyfile="kwin/src/compositor.cpp" bodystart="84" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1adc8eaa6d90ebd320ee5becc144c3c3f2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::addSuperLayer</definition>
        <argsstring>(RenderLayer *layer)</argsstring>
        <name>addSuperLayer</name>
        <qualifiedname>KWin::Compositor::addSuperLayer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="100" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1a3df604669bab3c1077e0605dc2546f98" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::removeSuperLayer</definition>
        <argsstring>(RenderLayer *layer)</argsstring>
        <name>removeSuperLayer</name>
        <qualifiedname>KWin::Compositor::removeSuperLayer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="101" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1ab80bb6804a7b422778fbbbc70ffb1467" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::prePaintPass</definition>
        <argsstring>(RenderLayer *layer, QRegion *damage)</argsstring>
        <name>prePaintPass</name>
        <qualifiedname>KWin::Compositor::prePaintPass</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>QRegion *</type>
          <declname>damage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="103" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="129" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1a1a488a8a089df8b499f1a21b481f73f7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::postPaintPass</definition>
        <argsstring>(RenderLayer *layer)</argsstring>
        <name>postPaintPass</name>
        <qualifiedname>KWin::Compositor::postPaintPass</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="104" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="149" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1ab1d0eb40f88aeb8df9ce30ac04e58bcb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::paintPass</definition>
        <argsstring>(RenderLayer *layer, const RenderTarget &amp;renderTarget, const QRegion &amp;region)</argsstring>
        <name>paintPass</name>
        <qualifiedname>KWin::Compositor::paintPass</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="105" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="160" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1a74a7969ea4d8090398338875fe6fed22" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::framePass</definition>
        <argsstring>(RenderLayer *layer, OutputFrame *frame)</argsstring>
        <name>framePass</name>
        <qualifiedname>KWin::Compositor::framePass</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_layer" kindref="compound">RenderLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="106" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="120" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1a0c5c80d6d4844e2efe7f2dc696649dc9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::createScene</definition>
        <argsstring>()</argsstring>
        <name>createScene</name>
        <qualifiedname>KWin::Compositor::createScene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="108" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="272" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1a1d7592b89434a078015327c2986079e6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Compositor::attemptOpenGLCompositing</definition>
        <argsstring>()</argsstring>
        <name>attemptOpenGLCompositing</name>
        <qualifiedname>KWin::Compositor::attemptOpenGLCompositing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="109" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="177" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1a19e746e895007650ecec4e9748b8462d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Compositor::attemptQPainterCompositing</definition>
        <argsstring>()</argsstring>
        <name>attemptQPainterCompositing</name>
        <qualifiedname>KWin::Compositor::attemptQPainterCompositing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="110" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="215" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1a50deb2e5440c7595a0dcb04b5a3091d3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::addOutput</definition>
        <argsstring>(Output *output)</argsstring>
        <name>addOutput</name>
        <qualifiedname>KWin::Compositor::addOutput</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="111" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="586" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_1adba7e77e3024adf0d767575247b587a4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::removeOutput</definition>
        <argsstring>(Output *output)</argsstring>
        <name>removeOutput</name>
        <qualifiedname>KWin::Compositor::removeOutput</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="112" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="733" bodyend="739"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-slot">
      <memberdef kind="slot" id="class_k_win_1_1_compositor_1a4f616ff6505cedfbfa4b0cb0c9a924fe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::composite</definition>
        <argsstring>(RenderLoop *renderLoop)</argsstring>
        <name>composite</name>
        <qualifiedname>KWin::Compositor::composite</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref> *</type>
          <declname>renderLoop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="92" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="433" bodyend="584"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_compositor_1a5ab7e6f56dca8eabacbd590c0f36ecd5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Compositor::handleFrameRequested</definition>
        <argsstring>(RenderLoop *renderLoop)</argsstring>
        <name>handleFrameRequested</name>
        <qualifiedname>KWin::Compositor::handleFrameRequested</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref> *</type>
          <declname>renderLoop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/compositor.h" line="95" column="10" bodyfile="kwin/src/compositor.cpp" bodystart="115" bodyend="118"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::Compositor</label>
        <link refid="class_k_win_1_1_compositor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::Compositor</label>
        <link refid="class_k_win_1_1_compositor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>s_compositor</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/compositor.h" line="34" column="1" bodyfile="kwin/src/compositor.h" bodystart="35" bodyend="121"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_compositor_1a71b4bb692cbea8615aff42db417ac965" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>aboutToDestroy</name></member>
      <member refid="class_k_win_1_1_compositor_1a339b45ef1f23460988c64545f71a8b68" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>aboutToToggleCompositing</name></member>
      <member refid="class_k_win_1_1_compositor_1a50deb2e5440c7595a0dcb04b5a3091d3" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>addOutput</name></member>
      <member refid="class_k_win_1_1_compositor_1adc8eaa6d90ebd320ee5becc144c3c3f2" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>addSuperLayer</name></member>
      <member refid="class_k_win_1_1_compositor_1a1d7592b89434a078015327c2986079e6" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>attemptOpenGLCompositing</name></member>
      <member refid="class_k_win_1_1_compositor_1a19e746e895007650ecec4e9748b8462d" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>attemptQPainterCompositing</name></member>
      <member refid="class_k_win_1_1_compositor_1a7dfc838e5a8eb0a42d1e1007cd9c2b76" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>backend</name></member>
      <member refid="class_k_win_1_1_compositor_1a4f616ff6505cedfbfa4b0cb0c9a924fe" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>composite</name></member>
      <member refid="class_k_win_1_1_compositor_1a04c48b6cdd3fee5e2999b6d95af41ab1" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>compositingToggled</name></member>
      <member refid="class_k_win_1_1_compositor_1aa0f03570039e4c70bf142f01d89dd44b" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>Compositor</name></member>
      <member refid="class_k_win_1_1_compositor_1a013be9abf43a1e0960cd60c79c2c7f50" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>create</name></member>
      <member refid="class_k_win_1_1_compositor_1a3892810f29eaf1e74fea9a38dc02480d" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>createRenderer</name></member>
      <member refid="class_k_win_1_1_compositor_1a0c5c80d6d4844e2efe7f2dc696649dc9" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>createScene</name></member>
      <member refid="class_k_win_1_1_compositor_1a047a855b9cf2a49b52478f98f0e558b0" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>cursorScene</name></member>
      <member refid="class_k_win_1_1_compositor_1ab98d35bb853cc11fc185f6f02b6b3a4b" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>findOutput</name></member>
      <member refid="class_k_win_1_1_compositor_1a74a7969ea4d8090398338875fe6fed22" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>framePass</name></member>
      <member refid="class_k_win_1_1_compositor_1a5ab7e6f56dca8eabacbd590c0f36ecd5" prot="private" virt="non-virtual"><scope>KWin::Compositor</scope><name>handleFrameRequested</name></member>
      <member refid="class_k_win_1_1_compositor_1ab72e6e360477d5cfd27f5f25cfa1470c" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>isActive</name></member>
      <member refid="class_k_win_1_1_compositor_1a13e5a0d0cc78e3391024f216f3da49d5" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>m_backend</name></member>
      <member refid="class_k_win_1_1_compositor_1a258fe9d665c33b15ca1aa27ca7aee878" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>m_cursorScene</name></member>
      <member refid="class_k_win_1_1_compositor_1a99787af68e7937d9f58a16033bbffe69" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>m_scene</name></member>
      <member refid="class_k_win_1_1_compositor_1adb47923c5c973528c0138d9d3afe5da6" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>m_selectedCompositor</name></member>
      <member refid="class_k_win_1_1_compositor_1a25b1aa3faa3fdc97067b378031f81a83" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>m_state</name></member>
      <member refid="class_k_win_1_1_compositor_1a9b56d908e9f3eec558e799b6ec470276" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>m_superlayers</name></member>
      <member refid="class_k_win_1_1_compositor_1ab1d0eb40f88aeb8df9ce30ac04e58bcb" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>paintPass</name></member>
      <member refid="class_k_win_1_1_compositor_1a1a488a8a089df8b499f1a21b481f73f7" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>postPaintPass</name></member>
      <member refid="class_k_win_1_1_compositor_1ab80bb6804a7b422778fbbbc70ffb1467" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>prePaintPass</name></member>
      <member refid="class_k_win_1_1_compositor_1a66ea6f3213ce7178248c24a8a6d01993" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>reinitialize</name></member>
      <member refid="class_k_win_1_1_compositor_1adba7e77e3024adf0d767575247b587a4" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>removeOutput</name></member>
      <member refid="class_k_win_1_1_compositor_1a3df604669bab3c1077e0605dc2546f98" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>removeSuperLayer</name></member>
      <member refid="class_k_win_1_1_compositor_1a0fec27876729a5848c06320b68097d98" prot="protected" virt="non-virtual"><scope>KWin::Compositor</scope><name>s_compositor</name></member>
      <member refid="class_k_win_1_1_compositor_1a42a38d690d77c464869c520189c99904" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>scene</name></member>
      <member refid="class_k_win_1_1_compositor_1a87f603b7b663cf65e1855fc21aeae435" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>sceneCreated</name></member>
      <member refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>self</name></member>
      <member refid="class_k_win_1_1_compositor_1abe6615b80b959c47fae82e36f637498a" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>start</name></member>
      <member refid="class_k_win_1_1_compositor_1afcefeec913ad4ca71af10c69469b473c" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>State</name></member>
      <member refid="class_k_win_1_1_compositor_1a9fcef9cad86c0400d771b2fe68028869" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>stop</name></member>
      <member refid="class_k_win_1_1_compositor_1ac282aeda3014d5165d4f62a121fed87c" prot="public" virt="non-virtual"><scope>KWin::Compositor</scope><name>~Compositor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
