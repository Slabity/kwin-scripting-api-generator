<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_g_l_render_time_query" kind="class" language="C++" prot="public">
    <compoundname>KWin::GLRenderTimeQuery</compoundname>
    <basecompoundref refid="class_k_win_1_1_render_time_query" prot="public" virt="non-virtual">KWin::RenderTimeQuery</basecompoundref>
    <includes refid="glrendertimequery_8h" local="no">glrendertimequery.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_g_l_render_time_query_1ada55da376a55dfccb43a9f1a44d74855" prot="private" static="no" mutable="no">
        <type>const std::weak_ptr&lt; <ref refid="class_k_win_1_1_egl_context" kindref="compound">EglContext</ref> &gt;</type>
        <definition>const std::weak_ptr&lt;EglContext&gt; KWin::GLRenderTimeQuery::m_context</definition>
        <argsstring></argsstring>
        <name>m_context</name>
        <qualifiedname>KWin::GLRenderTimeQuery::m_context</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glrendertimequery.h" line="37" column="25" bodyfile="kwin/src/opengl/glrendertimequery.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_g_l_render_time_query_1a503e9cd65855af53f6938c1d0031644a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::GLRenderTimeQuery::m_hasResult</definition>
        <argsstring></argsstring>
        <name>m_hasResult</name>
        <qualifiedname>KWin::GLRenderTimeQuery::m_hasResult</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glrendertimequery.h" line="38" column="10" bodyfile="kwin/src/opengl/glrendertimequery.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_g_l_render_time_query_1a00618a4c5db223b51b4dd9d5de48c1d6" prot="private" static="no" mutable="no">
        <type>struct <ref refid="class_k_win_1_1_g_l_render_time_query" kindref="compound">KWin::GLRenderTimeQuery</ref></type>
        <definition>struct KWin::GLRenderTimeQuery KWin::GLRenderTimeQuery::m_cpuProbe</definition>
        <argsstring></argsstring>
        <name>m_cpuProbe</name>
        <qualifiedname>KWin::GLRenderTimeQuery::m_cpuProbe</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glrendertimequery.h" line="44" column="16"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_g_l_render_time_query_1a7ea006a751a5d7cd5a892dc9fcc7e59a" prot="private" static="no" mutable="no">
        <type>struct <ref refid="class_k_win_1_1_g_l_render_time_query" kindref="compound">KWin::GLRenderTimeQuery</ref></type>
        <definition>struct KWin::GLRenderTimeQuery KWin::GLRenderTimeQuery::m_gpuProbe</definition>
        <argsstring></argsstring>
        <name>m_gpuProbe</name>
        <qualifiedname>KWin::GLRenderTimeQuery::m_gpuProbe</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glrendertimequery.h" line="51" column="16"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_g_l_render_time_query_1a1824b08053967a4c5f08d7c57de43981" prot="public" static="no" mutable="no">
        <type>std::chrono::steady_clock::time_point</type>
        <definition>std::chrono::steady_clock::time_point KWin::GLRenderTimeQuery::start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <qualifiedname>KWin::GLRenderTimeQuery::start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glrendertimequery.h" line="42" column="47" bodyfile="kwin/src/opengl/glrendertimequery.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_g_l_render_time_query_1a4530fbc645f017a9604e04bd63fcb00c" prot="public" static="no" mutable="no">
        <type>std::chrono::steady_clock::time_point</type>
        <definition>void KWin::GLRenderTimeQuery::end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <qualifiedname>KWin::GLRenderTimeQuery::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glrendertimequery.h" line="43" column="47" bodyfile="kwin/src/opengl/glrendertimequery.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_g_l_render_time_query_1a327fa81f7964e9cd09f0bc4098ea5039" prot="public" static="no" mutable="no">
        <type>GLuint</type>
        <definition>std::optional&lt; RenderTimeSpan &gt; KWin::GLRenderTimeQuery::query</definition>
        <argsstring></argsstring>
        <name>query</name>
        <qualifiedname>KWin::GLRenderTimeQuery::query</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glrendertimequery.h" line="48" column="16" bodyfile="kwin/src/opengl/glrendertimequery.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_g_l_render_time_query_1aaa1126ff3e16bef1da31b112196a56a5" prot="public" static="no" mutable="no">
        <type>std::chrono::nanoseconds</type>
        <definition>std::chrono::nanoseconds KWin::GLRenderTimeQuery::start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <qualifiedname>KWin::GLRenderTimeQuery::start</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glrendertimequery.h" line="49" column="34" bodyfile="kwin/src/opengl/glrendertimequery.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_g_l_render_time_query_1ac52cea38b825ac623122baebfe38ea96" prot="public" static="no" mutable="no">
        <type>std::chrono::nanoseconds</type>
        <definition>std::chrono::nanoseconds KWin::GLRenderTimeQuery::end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <qualifiedname>KWin::GLRenderTimeQuery::end</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glrendertimequery.h" line="50" column="34" bodyfile="kwin/src/opengl/glrendertimequery.h" bodystart="50" bodyend="50"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_g_l_render_time_query_1a5e3bbf13750f4b7035c8592c1385ce18" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::GLRenderTimeQuery::GLRenderTimeQuery</definition>
        <argsstring>(const std::shared_ptr&lt; EglContext &gt; &amp;context)</argsstring>
        <name>GLRenderTimeQuery</name>
        <qualifiedname>KWin::GLRenderTimeQuery::GLRenderTimeQuery</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_egl_context" kindref="compound">EglContext</ref> &gt; &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glrendertimequery.h" line="25" column="14" bodyfile="kwin/src/opengl/glrendertimequery.cpp" bodystart="16" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_render_time_query_1aa223effa60421b8866f9cb67809be27e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::GLRenderTimeQuery::~GLRenderTimeQuery</definition>
        <argsstring>()</argsstring>
        <name>~GLRenderTimeQuery</name>
        <qualifiedname>KWin::GLRenderTimeQuery::~GLRenderTimeQuery</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glrendertimequery.h" line="26" column="5" bodyfile="kwin/src/opengl/glrendertimequery.cpp" bodystart="24" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_render_time_query_1ad51a7b04709ed4ff8c40e1f0fcc7c5b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::GLRenderTimeQuery::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>KWin::GLRenderTimeQuery::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glrendertimequery.h" line="28" column="10" bodyfile="kwin/src/opengl/glrendertimequery.cpp" bodystart="41" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_render_time_query_1abebc1a0ce5575479daacff9ee1fa8e64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::GLRenderTimeQuery::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>KWin::GLRenderTimeQuery::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glrendertimequery.h" line="29" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_g_l_render_time_query_1ac3883d7ddbab5bffa959f8894a5b8c8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::optional&lt; <ref refid="struct_k_win_1_1_render_time_span" kindref="compound">RenderTimeSpan</ref> &gt;</type>
        <definition>std::optional&lt; RenderTimeSpan &gt; KWin::GLRenderTimeQuery::query</definition>
        <argsstring>() override</argsstring>
        <name>query</name>
        <qualifiedname>KWin::GLRenderTimeQuery::query</qualifiedname>
        <reimplements refid="class_k_win_1_1_render_time_query_1a1ce92145b9e98eb3e320ab02231b88bd">query</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>fetches the result of the query. If rendering is not done yet, this will block! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/glrendertimequery.h" line="34" column="19"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::GLRenderTimeQuery</label>
        <link refid="class_k_win_1_1_g_l_render_time_query"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::RenderTimeQuery</label>
        <link refid="class_k_win_1_1_render_time_query"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::GLRenderTimeQuery</label>
        <link refid="class_k_win_1_1_g_l_render_time_query"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::RenderTimeQuery</label>
        <link refid="class_k_win_1_1_render_time_query"/>
      </node>
    </collaborationgraph>
    <location file="kwin/src/opengl/glrendertimequery.h" line="22" column="1" bodyfile="kwin/src/opengl/glrendertimequery.h" bodystart="23" bodyend="52"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_g_l_render_time_query_1ad51a7b04709ed4ff8c40e1f0fcc7c5b9" prot="public" virt="non-virtual"><scope>KWin::GLRenderTimeQuery</scope><name>begin</name></member>
      <member refid="class_k_win_1_1_g_l_render_time_query_1a4530fbc645f017a9604e04bd63fcb00c" prot="public" virt="non-virtual"><scope>KWin::GLRenderTimeQuery</scope><name>end</name></member>
      <member refid="class_k_win_1_1_g_l_render_time_query_1ac52cea38b825ac623122baebfe38ea96" prot="public" virt="non-virtual"><scope>KWin::GLRenderTimeQuery</scope><name>end</name></member>
      <member refid="class_k_win_1_1_g_l_render_time_query_1abebc1a0ce5575479daacff9ee1fa8e64" prot="public" virt="non-virtual"><scope>KWin::GLRenderTimeQuery</scope><name>end</name></member>
      <member refid="class_k_win_1_1_g_l_render_time_query_1a5e3bbf13750f4b7035c8592c1385ce18" prot="public" virt="non-virtual"><scope>KWin::GLRenderTimeQuery</scope><name>GLRenderTimeQuery</name></member>
      <member refid="class_k_win_1_1_g_l_render_time_query_1ada55da376a55dfccb43a9f1a44d74855" prot="private" virt="non-virtual"><scope>KWin::GLRenderTimeQuery</scope><name>m_context</name></member>
      <member refid="class_k_win_1_1_g_l_render_time_query_1a00618a4c5db223b51b4dd9d5de48c1d6" prot="private" virt="non-virtual"><scope>KWin::GLRenderTimeQuery</scope><name>m_cpuProbe</name></member>
      <member refid="class_k_win_1_1_g_l_render_time_query_1a7ea006a751a5d7cd5a892dc9fcc7e59a" prot="private" virt="non-virtual"><scope>KWin::GLRenderTimeQuery</scope><name>m_gpuProbe</name></member>
      <member refid="class_k_win_1_1_g_l_render_time_query_1a503e9cd65855af53f6938c1d0031644a" prot="private" virt="non-virtual"><scope>KWin::GLRenderTimeQuery</scope><name>m_hasResult</name></member>
      <member refid="class_k_win_1_1_g_l_render_time_query_1a327fa81f7964e9cd09f0bc4098ea5039" prot="public" virt="non-virtual"><scope>KWin::GLRenderTimeQuery</scope><name>query</name></member>
      <member refid="class_k_win_1_1_g_l_render_time_query_1ac3883d7ddbab5bffa959f8894a5b8c8f" prot="public" virt="virtual"><scope>KWin::GLRenderTimeQuery</scope><name>query</name></member>
      <member refid="class_k_win_1_1_g_l_render_time_query_1a1824b08053967a4c5f08d7c57de43981" prot="public" virt="non-virtual"><scope>KWin::GLRenderTimeQuery</scope><name>start</name></member>
      <member refid="class_k_win_1_1_g_l_render_time_query_1aaa1126ff3e16bef1da31b112196a56a5" prot="public" virt="non-virtual"><scope>KWin::GLRenderTimeQuery</scope><name>start</name></member>
      <member refid="class_k_win_1_1_g_l_render_time_query_1aa223effa60421b8866f9cb67809be27e" prot="public" virt="non-virtual"><scope>KWin::GLRenderTimeQuery</scope><name>~GLRenderTimeQuery</name></member>
      <member refid="class_k_win_1_1_render_time_query_1adec5e3f284ab3393e6d1c8e6e41d5c9c" prot="public" virt="virtual"><scope>KWin::GLRenderTimeQuery</scope><name>~RenderTimeQuery</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
