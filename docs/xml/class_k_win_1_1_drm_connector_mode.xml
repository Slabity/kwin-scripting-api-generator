<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_drm_connector_mode" kind="class" language="C++" prot="public">
    <compoundname>KWin::DrmConnectorMode</compoundname>
    <basecompoundref refid="class_k_win_1_1_output_mode" prot="public" virt="non-virtual">KWin::OutputMode</basecompoundref>
    <includes refid="drm__connector_8h" local="no">drm_connector.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_drm_connector_mode_1adb6b21a93fe42c8e14f65ae022cc51a9" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_drm_connector" kindref="compound">DrmConnector</ref> *</type>
        <definition>DrmConnector* KWin::DrmConnectorMode::m_connector</definition>
        <argsstring></argsstring>
        <name>m_connector</name>
        <qualifiedname>KWin::DrmConnectorMode::m_connector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_connector.h" line="45" column="18" bodyfile="kwin/src/backends/drm/drm_connector.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_connector_mode_1a3a109eb9fa189fd7fd5fb19a34961287" prot="private" static="no" mutable="no">
        <type>drmModeModeInfo</type>
        <definition>drmModeModeInfo KWin::DrmConnectorMode::m_nativeMode</definition>
        <argsstring></argsstring>
        <name>m_nativeMode</name>
        <qualifiedname>KWin::DrmConnectorMode::m_nativeMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_connector.h" line="46" column="21" bodyfile="kwin/src/backends/drm/drm_connector.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_connector_mode_1a886f9130c197d3395a3083d9917b6cb6" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_drm_blob" kindref="compound">DrmBlob</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DrmBlob&gt; KWin::DrmConnectorMode::m_blob</definition>
        <argsstring></argsstring>
        <name>m_blob</name>
        <qualifiedname>KWin::DrmConnectorMode::m_blob</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_connector.h" line="47" column="21" bodyfile="kwin/src/backends/drm/drm_connector.h" bodystart="47" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_drm_connector_mode_1ade135e6f5bff95fb069c50f6ac93fbea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::DrmConnectorMode::DrmConnectorMode</definition>
        <argsstring>(DrmConnector *connector, drmModeModeInfo nativeMode, Flags additionalFlags)</argsstring>
        <name>DrmConnectorMode</name>
        <qualifiedname>KWin::DrmConnectorMode::DrmConnectorMode</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_drm_connector" kindref="compound">DrmConnector</ref> *</type>
          <declname>connector</declname>
        </param>
        <param>
          <type>drmModeModeInfo</type>
          <declname>nativeMode</declname>
        </param>
        <param>
          <type>Flags</type>
          <declname>additionalFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_connector.h" line="35" column="5" bodyfile="kwin/src/backends/drm/drm_connector.cpp" bodystart="57" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_connector_mode_1adf315fd3599cd4aabe0e0c18fc6e8262" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>drmModeModeInfo *</type>
        <definition>drmModeModeInfo * KWin::DrmConnectorMode::nativeMode</definition>
        <argsstring>()</argsstring>
        <name>nativeMode</name>
        <qualifiedname>KWin::DrmConnectorMode::nativeMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_connector.h" line="37" column="21" bodyfile="kwin/src/backends/drm/drm_connector.cpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_connector_mode_1a623b583d932eec17f701299b86ef883d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_drm_blob" kindref="compound">DrmBlob</ref> &gt;</type>
        <definition>std::shared_ptr&lt; DrmBlob &gt; KWin::DrmConnectorMode::blob</definition>
        <argsstring>()</argsstring>
        <name>blob</name>
        <qualifiedname>KWin::DrmConnectorMode::blob</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_connector.h" line="38" column="21" bodyfile="kwin/src/backends/drm/drm_connector.cpp" bodystart="64" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_connector_mode_1aeb680b2ec10d778fc9a703a427abc9bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::chrono::nanoseconds</type>
        <definition>std::chrono::nanoseconds KWin::DrmConnectorMode::vblankTime</definition>
        <argsstring>() const</argsstring>
        <name>vblankTime</name>
        <qualifiedname>KWin::DrmConnectorMode::vblankTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_connector.h" line="39" column="30" bodyfile="kwin/src/backends/drm/drm_connector.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_connector_mode_1aad829ae7230775bb67a8d95a3f27274c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::DrmConnectorMode::operator==</definition>
        <argsstring>(const DrmConnectorMode &amp;otherMode)</argsstring>
        <name>operator==</name>
        <qualifiedname>KWin::DrmConnectorMode::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_drm_connector_mode" kindref="compound">DrmConnectorMode</ref> &amp;</type>
          <declname>otherMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_connector.h" line="41" column="10" bodyfile="kwin/src/backends/drm/drm_connector.cpp" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_connector_mode_1a37b8d5cc4354d3d3bc9e840c9db7a034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::DrmConnectorMode::operator==</definition>
        <argsstring>(const drmModeModeInfo &amp;otherMode)</argsstring>
        <name>operator==</name>
        <qualifiedname>KWin::DrmConnectorMode::operator==</qualifiedname>
        <param>
          <type>const drmModeModeInfo &amp;</type>
          <declname>otherMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_connector.h" line="42" column="10" bodyfile="kwin/src/backends/drm/drm_connector.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_drm_connector_mode" kindref="compound">DrmConnectorMode</ref> class represents a native mode and the associated blob. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::DrmConnectorMode</label>
        <link refid="class_k_win_1_1_drm_connector_mode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::OutputMode</label>
        <link refid="class_k_win_1_1_output_mode"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::DrmConnectorMode</label>
        <link refid="class_k_win_1_1_drm_connector_mode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::OutputMode</label>
        <link refid="class_k_win_1_1_output_mode"/>
      </node>
    </collaborationgraph>
    <location file="kwin/src/backends/drm/drm_connector.h" line="32" column="1" bodyfile="kwin/src/backends/drm/drm_connector.h" bodystart="33" bodyend="48"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_drm_connector_mode_1a623b583d932eec17f701299b86ef883d" prot="public" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>blob</name></member>
      <member refid="class_k_win_1_1_drm_connector_mode_1ade135e6f5bff95fb069c50f6ac93fbea" prot="public" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>DrmConnectorMode</name></member>
      <member refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0" prot="public" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>Flag</name></member>
      <member refid="class_k_win_1_1_output_mode_1a0e63e51cdef19543fd0d4bde6996251e" prot="public" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>flags</name></member>
      <member refid="class_k_win_1_1_drm_connector_mode_1a886f9130c197d3395a3083d9917b6cb6" prot="private" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>m_blob</name></member>
      <member refid="class_k_win_1_1_drm_connector_mode_1adb6b21a93fe42c8e14f65ae022cc51a9" prot="private" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>m_connector</name></member>
      <member refid="class_k_win_1_1_drm_connector_mode_1a3a109eb9fa189fd7fd5fb19a34961287" prot="private" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>m_nativeMode</name></member>
      <member refid="class_k_win_1_1_drm_connector_mode_1adf315fd3599cd4aabe0e0c18fc6e8262" prot="public" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>nativeMode</name></member>
      <member refid="class_k_win_1_1_drm_connector_mode_1aad829ae7230775bb67a8d95a3f27274c" prot="public" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>operator==</name></member>
      <member refid="class_k_win_1_1_drm_connector_mode_1a37b8d5cc4354d3d3bc9e840c9db7a034" prot="public" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>operator==</name></member>
      <member refid="class_k_win_1_1_output_mode_1acc31428ef42eb4b49a3b2fbbbe77d8ba" prot="public" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>OutputMode</name></member>
      <member refid="class_k_win_1_1_output_mode_1a5d9ecbf9be55393417cb958198013d04" prot="public" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>refreshRate</name></member>
      <member refid="class_k_win_1_1_output_mode_1ad0659a8127519e9577370252fc59ce5a" prot="public" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>setRemoved</name></member>
      <member refid="class_k_win_1_1_output_mode_1a943d8de54fd9e13e118d5de139cb0bcf" prot="public" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>size</name></member>
      <member refid="class_k_win_1_1_drm_connector_mode_1aeb680b2ec10d778fc9a703a427abc9bf" prot="public" virt="non-virtual"><scope>KWin::DrmConnectorMode</scope><name>vblankTime</name></member>
      <member refid="class_k_win_1_1_output_mode_1ac1b55ceb6ee3a943d68b0e78a67bb408" prot="public" virt="virtual"><scope>KWin::DrmConnectorMode</scope><name>~OutputMode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
