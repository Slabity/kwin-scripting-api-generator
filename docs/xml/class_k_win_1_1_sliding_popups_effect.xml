<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_sliding_popups_effect" kind="class" language="C++" prot="public">
    <compoundname>KWin::SlidingPopupsEffect</compoundname>
    <basecompoundref refid="class_k_win_1_1_effect" prot="public" virt="non-virtual">KWin::Effect</basecompoundref>
    <includes refid="slidingpopups_8h" local="no">slidingpopups.h</includes>
    <innerclass refid="struct_k_win_1_1_sliding_popups_effect_1_1_animation" prot="private">KWin::SlidingPopupsEffect::Animation</innerclass>
    <innerclass refid="struct_k_win_1_1_sliding_popups_effect_1_1_animation_data" prot="private">KWin::SlidingPopupsEffect::AnimationData</innerclass>
    <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_k_win_1_1_sliding_popups_effect_1a47d46e9551c501c4ba2d00b2844d414d" prot="private" static="no" strong="yes">
        <type></type>
        <name>AnimationKind</name>
        <qualifiedname>KWin::SlidingPopupsEffect::AnimationKind</qualifiedname>
        <enumvalue id="class_k_win_1_1_sliding_popups_effect_1a47d46e9551c501c4ba2d00b2844d414daefeb369cccbd560588a756610865664c" prot="private">
          <name>In</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_sliding_popups_effect_1a47d46e9551c501c4ba2d00b2844d414da7c147cda9e49590f6abe83d118b7353b" prot="private">
          <name>Out</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="85" column="5" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="enum" id="class_k_win_1_1_sliding_popups_effect_1ae3b1dc9dd5113daada9b9ac87d2dc929" prot="private" static="no" strong="yes">
        <type></type>
        <name>Location</name>
        <qualifiedname>KWin::SlidingPopupsEffect::Location</qualifiedname>
        <enumvalue id="class_k_win_1_1_sliding_popups_effect_1ae3b1dc9dd5113daada9b9ac87d2dc929a945d5e233cf7d6240f6b783b36a374ff" prot="private">
          <name>Left</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_sliding_popups_effect_1ae3b1dc9dd5113daada9b9ac87d2dc929aa4ffdcf0dc1f31b9acaf295d75b51d00" prot="private">
          <name>Top</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_sliding_popups_effect_1ae3b1dc9dd5113daada9b9ac87d2dc929a92b09c7c48c520c3c55e497875da437c" prot="private">
          <name>Right</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_sliding_popups_effect_1ae3b1dc9dd5113daada9b9ac87d2dc929a2ad9d63b69c4a10a5cc9cad923133bc4" prot="private">
          <name>Bottom</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="100" column="5" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="100" bodyend="105"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_k_win_1_1_sliding_popups_effect_1aac7ff2014cdd4f3817869e18784b83d6" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::SlidingPopupsEffect::slideInDuration</definition>
        <argsstring></argsstring>
        <name>slideInDuration</name>
        <qualifiedname>KWin::SlidingPopupsEffect::slideInDuration</qualifiedname>
        <read>slideInDuration</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="29" column="5" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_sliding_popups_effect_1aa4370354b5af19675b81cef718328160" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::SlidingPopupsEffect::slideOutDuration</definition>
        <argsstring></argsstring>
        <name>slideOutDuration</name>
        <qualifiedname>KWin::SlidingPopupsEffect::slideOutDuration</qualifiedname>
        <read>slideOutDuration</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="30" column="5" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="30" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_sliding_popups_effect_1a7ac1a0259f706dfde9bda7172684c1a5" prot="private" static="yes" mutable="no">
        <type><ref refid="class_k_win_1_1_slide_manager_interface" kindref="compound">SlideManagerInterface</ref> *</type>
        <definition>SlideManagerInterface * KWin::SlidingPopupsEffect::s_slideManager</definition>
        <argsstring></argsstring>
        <name>s_slideManager</name>
        <qualifiedname>KWin::SlidingPopupsEffect::s_slideManager</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="75" column="34" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_sliding_popups_effect_1a17784466fe883ced10c677f02666b8c7" prot="private" static="yes" mutable="no">
        <type>QTimer *</type>
        <definition>QTimer * KWin::SlidingPopupsEffect::s_slideManagerRemoveTimer</definition>
        <argsstring></argsstring>
        <name>s_slideManagerRemoveTimer</name>
        <qualifiedname>KWin::SlidingPopupsEffect::s_slideManagerRemoveTimer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="76" column="19" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="76" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_sliding_popups_effect_1acfbba5f56f2b8f08735f097d01bb5426" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::SlidingPopupsEffect::m_slideLength</definition>
        <argsstring></argsstring>
        <name>m_slideLength</name>
        <qualifiedname>KWin::SlidingPopupsEffect::m_slideLength</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="81" column="9" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_sliding_popups_effect_1ac63411eb003d52e7e3fb95c500f075ec" prot="private" static="no" mutable="no">
        <type>std::chrono::milliseconds</type>
        <definition>std::chrono::milliseconds KWin::SlidingPopupsEffect::m_slideInDuration</definition>
        <argsstring></argsstring>
        <name>m_slideInDuration</name>
        <qualifiedname>KWin::SlidingPopupsEffect::m_slideInDuration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="82" column="31" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_sliding_popups_effect_1ad045273fbea410533944c210d8d76313" prot="private" static="no" mutable="no">
        <type>std::chrono::milliseconds</type>
        <definition>std::chrono::milliseconds KWin::SlidingPopupsEffect::m_slideOutDuration</definition>
        <argsstring></argsstring>
        <name>m_slideOutDuration</name>
        <qualifiedname>KWin::SlidingPopupsEffect::m_slideOutDuration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="83" column="31" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_sliding_popups_effect_1a97e02eb5d140d4dc9c274694af6fb235" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *, Animation &gt;</type>
        <definition>std::unordered_map&lt;EffectWindow *, Animation&gt; KWin::SlidingPopupsEffect::m_animations</definition>
        <argsstring></argsstring>
        <name>m_animations</name>
        <qualifiedname>KWin::SlidingPopupsEffect::m_animations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="98" column="24" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_sliding_popups_effect_1a7a807ace75cf7ee955d28cc4dc5cbb6f" prot="private" static="no" mutable="no">
        <type>QHash&lt; const <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *, AnimationData &gt;</type>
        <definition>QHash&lt;const EffectWindow *, AnimationData&gt; KWin::SlidingPopupsEffect::m_animationsData</definition>
        <argsstring></argsstring>
        <name>m_animationsData</name>
        <qualifiedname>KWin::SlidingPopupsEffect::m_animationsData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="115" column="11" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="115" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1a0f2e9bdbc8b1a35ebf53bd893e33009a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::SlidingPopupsEffect::SlidingPopupsEffect</definition>
        <argsstring>()</argsstring>
        <name>SlidingPopupsEffect</name>
        <qualifiedname>KWin::SlidingPopupsEffect::SlidingPopupsEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="33" column="5" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="37" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1abb3f1f03f5a981ecbd3b46b21bbd9e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::SlidingPopupsEffect::~SlidingPopupsEffect</definition>
        <argsstring>() override</argsstring>
        <name>~SlidingPopupsEffect</name>
        <qualifiedname>KWin::SlidingPopupsEffect::~SlidingPopupsEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="34" column="5" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="81" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1ab60bf0b3f2bcd6539e6d0d72e8306a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::prePaintWindow</definition>
        <argsstring>(EffectWindow *w, WindowPrePaintData &amp;data, std::chrono::milliseconds presentTime) override</argsstring>
        <name>prePaintWindow</name>
        <qualifiedname>KWin::SlidingPopupsEffect::prePaintWindow</qualifiedname>
        <reimplements refid="group__kwineffects_1ga2832c7831c0f49f9f5cf0267ffc53672">prePaintWindow</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_pre_paint_data" kindref="compound">WindowPrePaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::chrono::milliseconds</type>
          <declname>presentTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called for every window before the actual paint pass In this method you can: <itemizedlist>
<listitem><para>enable or disable painting of the window (e.g. enable paiting of minimized window) </para>
</listitem>
<listitem><para>set window to be painted with translucency </para>
</listitem>
<listitem><para>set window to be transformed </para>
</listitem>
<listitem><para>request the window to be divided into multiple parts</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked.</para>
<para><emphasis>presentTime</emphasis> specifies the expected monotonic time when the rendered frame will be displayed on the screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="36" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="120" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1a55c5a4bbd0beb7aa0f98a222e62e2c98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::paintWindow</definition>
        <argsstring>(const RenderTarget &amp;renderTarget, const RenderViewport &amp;viewport, EffectWindow *w, int mask, QRegion region, WindowPaintData &amp;data) override</argsstring>
        <name>paintWindow</name>
        <qualifiedname>KWin::SlidingPopupsEffect::paintWindow</qualifiedname>
        <reimplements refid="group__kwineffects_1ga0f0292db2bf016a0843ef7cc06219378">paintWindow</reimplements>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>QRegion</type>
          <declname>region</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is the main method for painting windows. In this method you can: <itemizedlist>
<listitem><para>do various transformations </para>
</listitem>
<listitem><para>change opacity of the window </para>
</listitem>
<listitem><para>change brightness and/or saturation, if it&apos;s supported</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="37" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="134" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1a7c34f618e639f35f1045f9a9bf44b0b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::postPaintWindow</definition>
        <argsstring>(EffectWindow *w) override</argsstring>
        <name>postPaintWindow</name>
        <qualifiedname>KWin::SlidingPopupsEffect::postPaintWindow</qualifiedname>
        <reimplements refid="group__kwineffects_1ga9b7cf82c6f74331cffabb06c63ef914c">postPaintWindow</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called for every window after all painting has been finished. In this method you can: <itemizedlist>
<listitem><para>schedule next repaint for individual window(s) in case of animations You shouldn&apos;t paint anything here.</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="38" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="188" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1a3b7a7f7f2147b074fed99bdacfff0732" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::reconfigure</definition>
        <argsstring>(ReconfigureFlags flags) override</argsstring>
        <name>reconfigure</name>
        <qualifiedname>KWin::SlidingPopupsEffect::reconfigure</qualifiedname>
        <reimplements refid="group__kwineffects_1ga737c6d80eb8f8b24fdc6398209c38e3d">reconfigure</reimplements>
        <param>
          <type>ReconfigureFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called when configuration changes (either the effect&apos;s or <ref refid="namespace_k_win" kindref="compound">KWin</ref>&apos;s global).</para>
<para>In OpenGL based compositing, the frameworks ensures that the context is current when the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> is reconfigured. If this method is called from within the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> it is required to ensure that the context is current if the implementation does OpenGL calls. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="39" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="99" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1a3ee50d74e6d43fd8168bc04fdb7c6d78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::SlidingPopupsEffect::isActive</definition>
        <argsstring>() const override</argsstring>
        <name>isActive</name>
        <qualifiedname>KWin::SlidingPopupsEffect::isActive</qualifiedname>
        <reimplements refid="group__kwineffects_1ga596b6c0ed146b97b293f5db5f27fc40f">isActive</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overwrite this method to indicate whether your effect will be doing something in the next frame to be rendered. If the method returns <computeroutput>false</computeroutput> the effect will be excluded from the chained methods in the next rendered frame.</para>
<para>This method is called always directly before the paint loop begins. So it is totally fine to e.g. react on a window event, issue a repaint to trigger an animation and change a flag to indicate that this method returns <computeroutput>true</computeroutput>.</para>
<para>As the method is called each frame, you should not perform complex calculations. Best use just a boolean flag.</para>
<para>The default implementation of this method returns <computeroutput>true</computeroutput>. <simplesect kind="since"><para>4.8 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="40" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="593" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1ae7c2b1edfcab347f7022992f11cbf4cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int KWin::SlidingPopupsEffect::requestedEffectChainPosition</definition>
        <argsstring>() const override</argsstring>
        <name>requestedEffectChainPosition</name>
        <qualifiedname>KWin::SlidingPopupsEffect::requestedEffectChainPosition</qualifiedname>
        <reimplements refid="group__kwineffects_1ga120531588e58691a5a18028158d2947a">requestedEffectChainPosition</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reimplement this method to indicate where in the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> chain the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> should be placed.</para>
<para>A low number indicates early chain position, thus before other Effects got called, a high number indicates a late position. The returned number should be in the interval [0, 100]. The default value is 0.</para>
<para>In KWin4 this information was provided in the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref>&apos;s desktop file as property X-KDE-Ordering. In the case of Scripted Effects this property is still used.</para>
<para><simplesect kind="since"><para>5.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="42" column="9" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1adb08eea27966df3f28392d182f9e2f85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::SlidingPopupsEffect::slideInDuration</definition>
        <argsstring>() const</argsstring>
        <name>slideInDuration</name>
        <qualifiedname>KWin::SlidingPopupsEffect::slideInDuration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="49" column="9" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1a22efe1b0ebb18aed687d3fe9493068f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::SlidingPopupsEffect::slideOutDuration</definition>
        <argsstring>() const</argsstring>
        <name>slideOutDuration</name>
        <qualifiedname>KWin::SlidingPopupsEffect::slideOutDuration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="50" column="9" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1a93ebc7c8297ebbe9485e2f849c51d47e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SlidingPopupsEffect::eventFilter</definition>
        <argsstring>(QObject *watched, QEvent *event) override</argsstring>
        <name>eventFilter</name>
        <qualifiedname>KWin::SlidingPopupsEffect::eventFilter</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>watched</declname>
        </param>
        <param>
          <type>QEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="52" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="493" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1abebda0519daab8ac68275237f455d522" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::SlidingPopupsEffect::blocksDirectScanout</definition>
        <argsstring>() const override</argsstring>
        <name>blocksDirectScanout</name>
        <qualifiedname>KWin::SlidingPopupsEffect::blocksDirectScanout</qualifiedname>
        <reimplements refid="group__kwineffects_1ga7cf8035c970fcde177e3038d79015289">blocksDirectScanout</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>overwrite this method to return false if your effect does not need to be drawn over opaque fullscreen windows </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="53" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="598" bodyend="601"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1a021ad31b401e3a7180748219ef3497d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SlidingPopupsEffect::supported</definition>
        <argsstring>()</argsstring>
        <name>supported</name>
        <qualifiedname>KWin::SlidingPopupsEffect::supported</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="47" column="17" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_sliding_popups_effect_1ae4c86f2e7a3a134f194527575c68e39d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::slotWindowAdded</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>slotWindowAdded</name>
        <qualifiedname>KWin::SlidingPopupsEffect::slotWindowAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="56" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="232" bodyend="238"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_sliding_popups_effect_1aa1e57b2b91dbc1fa1770986e6e6f9a59" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::slotWindowClosed</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>slotWindowClosed</name>
        <qualifiedname>KWin::SlidingPopupsEffect::slotWindowClosed</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="57" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="240" bodyend="245"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_sliding_popups_effect_1a8ae6cbc264cdb7a8cbb1da61ac332ee6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::slotWindowDeleted</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>slotWindowDeleted</name>
        <qualifiedname>KWin::SlidingPopupsEffect::slotWindowDeleted</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="58" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="247" bodyend="250"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_sliding_popups_effect_1a914535b68d3f94dad97f1383099b5897" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::slotWaylandSlideOnShowChanged</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>slotWaylandSlideOnShowChanged</name>
        <qualifiedname>KWin::SlidingPopupsEffect::slotWaylandSlideOnShowChanged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="62" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="392" bodyend="429"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_sliding_popups_effect_1a4a0fbe6706592cc632d937871a2f24ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::slotWindowHiddenChanged</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>slotWindowHiddenChanged</name>
        <qualifiedname>KWin::SlidingPopupsEffect::slotWindowHiddenChanged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="63" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="252" bodyend="259"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_sliding_popups_effect_1a91224ecac794f22afcf1b1497027ab9e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::slideIn</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>slideIn</name>
        <qualifiedname>KWin::SlidingPopupsEffect::slideIn</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="65" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="507" bodyend="541"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_sliding_popups_effect_1a2d4b447bda622246d720e6950170fa22" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::slideOut</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>slideOut</name>
        <qualifiedname>KWin::SlidingPopupsEffect::slideOut</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="66" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="543" bodyend="579"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_sliding_popups_effect_1a720e3914887001a17e90cf9c70d218bd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::stopAnimations</definition>
        <argsstring>()</argsstring>
        <name>stopAnimations</name>
        <qualifiedname>KWin::SlidingPopupsEffect::stopAnimations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="67" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="581" bodyend="591"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1a08ce77919e894366bedc26c5f408e5fa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::setupAnimData</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>setupAnimData</name>
        <qualifiedname>KWin::SlidingPopupsEffect::setupAnimData</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="70" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="340" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1ad98330f945f8639aa5867bd20ff2e7a8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::setupInternalWindowSlide</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>setupInternalWindowSlide</name>
        <qualifiedname>KWin::SlidingPopupsEffect::setupInternalWindowSlide</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="71" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="431" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1a4b7960f032ac41ae1f0371307e68f317" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::setupSlideData</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>setupSlideData</name>
        <qualifiedname>KWin::SlidingPopupsEffect::setupSlideData</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="72" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="205" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sliding_popups_effect_1a55ebaf3ac5e42a1eff886b11efc0350f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SlidingPopupsEffect::setupInputPanelSlide</definition>
        <argsstring>()</argsstring>
        <name>setupInputPanelSlide</name>
        <qualifiedname>KWin::SlidingPopupsEffect::setupInputPanelSlide</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="73" column="10" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.cpp" bodystart="475" bodyend="491"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::SlidingPopupsEffect</label>
        <link refid="class_k_win_1_1_sliding_popups_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::SlidingPopupsEffect</label>
        <link refid="class_k_win_1_1_sliding_popups_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/plugins/slidingpopups/slidingpopups.h" line="26" column="1" bodyfile="kwin/src/plugins/slidingpopups/slidingpopups.h" bodystart="27" bodyend="116"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a47d46e9551c501c4ba2d00b2844d414d" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>AnimationKind</name></member>
      <member refid="group__kwineffects_1gab9bcf52072fe74567496b0a894d1d873" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga3a167fe6d9c46376ed46db13caf2d135" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga0ba05f1463195d0f92ea1dd3396a5d16" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>animationTime</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1abebda0519daab8ac68275237f455d522" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>blocksDirectScanout</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea67d120ab5ce1dc424476e63c132af6c1" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>Blur</name></member>
      <member refid="group__kwineffects_1gab8a94f591b743b59b7285911e641e7d5" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>borderActivated</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aead805f717a48c23959a1e9ecd7722d15d" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>Contrast</name></member>
      <member refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>cursorPos</name></member>
      <member refid="group__kwineffects_1ga0c159e00c3a51ca733bea49cf8d52691" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>debug</name></member>
      <member refid="group__kwineffects_1ga254b1a3e8bb8b9b671e9b000ca027b7c" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>drawWindow</name></member>
      <member refid="group__kwineffects_1ga7bd8262f4cb2c5c3090c748eb388ad7e" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>Effect</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a93ebc7c8297ebbe9485e2f849c51d47e" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>eventFilter</name></member>
      <member refid="group__kwineffects_1ga6337b2a9b5aadfbb6b696119144b56ae" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>Feature</name></member>
      <member refid="group__kwineffects_1gab5e0581ae4b2dffe8014ff5cf6c21158" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>grabbedKeyboardEvent</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aeaecbb77ad241419970ece3d45296c4838" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>HighlightWindows</name></member>
      <member refid="group__kwineffects_1ga7b0ecb57667179e95c188f0ee7416d00" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>interpolate</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a3ee50d74e6d43fd8168bc04fdb7c6d78" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>isActive</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1ae3b1dc9dd5113daada9b9ac87d2dc929" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>Location</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a97e02eb5d140d4dc9c274694af6fb235" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>m_animations</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a7a807ace75cf7ee955d28cc4dc5cbb6f" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>m_animationsData</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1ac63411eb003d52e7e3fb95c500f075ec" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>m_slideInDuration</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1acfbba5f56f2b8f08735f097d01bb5426" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>m_slideLength</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1ad045273fbea410533944c210d8d76313" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>m_slideOutDuration</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea170229312ed2ec0e446ee89ba7f6b6ca" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>Nothing</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dab0de2932c45bde6df3de10d00dbd6fcd" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>PAINT_SCREEN_BACKGROUND_FIRST</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da43acbfc913cae9eb3c363aeb0524f18f" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>PAINT_SCREEN_REGION</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da3e731594d83c3e92742bff7c420fb7f8" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>PAINT_SCREEN_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da124dd798e5f793087e81da77e11a9b1e" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>PAINT_SCREEN_WITH_TRANSFORMED_WINDOWS</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac606d3dcf2dd150234f71c4c39083c7d" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>PAINT_WINDOW_OPAQUE</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da684bb6c6c278b900b6d0c889e79233b8" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>PAINT_WINDOW_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac7237bf4bb4d6ea6d6fb1215db19b45e" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>PAINT_WINDOW_TRANSLUCENT</name></member>
      <member refid="group__kwineffects_1ga44ee94161446ce6fb2502376af6515a8" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>paintScreen</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a55c5a4bbd0beb7aa0f98a222e62e2c98" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>paintWindow</name></member>
      <member refid="group__kwineffects_1ga5fb1bc87ff54dcc2cfe87b070816ab00" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>perform</name></member>
      <member refid="group__kwineffects_1ga10021cf9704c00d60beae284d53846e2" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>postPaintScreen</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a7c34f618e639f35f1045f9a9bf44b0b4" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>postPaintWindow</name></member>
      <member refid="group__kwineffects_1ga2edc1b757e36bb6bcbbacde454dfc05c" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>prePaintScreen</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1ab60bf0b3f2bcd6539e6d0d72e8306a3d" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>prePaintWindow</name></member>
      <member refid="group__kwineffects_1ga30fc2cbbdd90f95568a9e350f34bf2b7" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>provides</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a3b7a7f7f2147b074fed99bdacfff0732" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>reconfigure</name></member>
      <member refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>ReconfigureAll</name></member>
      <member refid="group__kwineffects_1ga4aebd7d0f695e37678debaa118fa92dc" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>ReconfigureFlag</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1ae7c2b1edfcab347f7022992f11cbf4cc" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>requestedEffectChainPosition</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a7ac1a0259f706dfde9bda7172684c1a5" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>s_slideManager</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a17784466fe883ced10c677f02666b8c7" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>s_slideManagerRemoveTimer</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea592ea0de7a4d658a1ef9bbb48b18e15a" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>ScreenInversion</name></member>
      <member refid="group__kwineffects_1ga1efc42cd9be15e8200c6e55f6bf47cb8" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>setPositionTransformations</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a08ce77919e894366bedc26c5f408e5fa" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>setupAnimData</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a55ebaf3ac5e42a1eff886b11efc0350f" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>setupInputPanelSlide</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1ad98330f945f8639aa5867bd20ff2e7a8" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>setupInternalWindowSlide</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a4b7960f032ac41ae1f0371307e68f317" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>setupSlideData</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a91224ecac794f22afcf1b1497027ab9e" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>slideIn</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1aac7ff2014cdd4f3817869e18784b83d6" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>slideInDuration</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1adb08eea27966df3f28392d182f9e2f85" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>slideInDuration</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a2d4b447bda622246d720e6950170fa22" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>slideOut</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1aa4370354b5af19675b81cef718328160" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>slideOutDuration</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a22efe1b0ebb18aed687d3fe9493068f0" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>slideOutDuration</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a0f2e9bdbc8b1a35ebf53bd893e33009a" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>SlidingPopupsEffect</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a914535b68d3f94dad97f1383099b5897" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>slotWaylandSlideOnShowChanged</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1ae4c86f2e7a3a134f194527575c68e39d" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>slotWindowAdded</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1aa1e57b2b91dbc1fa1770986e6e6f9a59" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>slotWindowClosed</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a8ae6cbc264cdb7a8cbb1da61ac332ee6" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>slotWindowDeleted</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a4a0fbe6706592cc632d937871a2f24ec" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>slotWindowHiddenChanged</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a720e3914887001a17e90cf9c70d218bd" prot="private" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>stopAnimations</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1a021ad31b401e3a7180748219ef3497d7" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>supported</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea19036d413806c53978a3234e7eb197c4" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>SystemBell</name></member>
      <member refid="group__kwineffects_1ga2d22a8f0b8a4d81615dff67dc1ef970f" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>tabletPadButtonEvent</name></member>
      <member refid="group__kwineffects_1gaa084e5a45597f5775213715eb5506f63" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>tabletPadRingEvent</name></member>
      <member refid="group__kwineffects_1ga4998fb0983bd97163935cad2c4dedd76" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>tabletPadStripEvent</name></member>
      <member refid="group__kwineffects_1ga1d4ae01f5935ea887a12018d59191cbf" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>tabletToolAxis</name></member>
      <member refid="group__kwineffects_1ga7a984d7d83dfa97962b8404301c6aba9" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>tabletToolButtonEvent</name></member>
      <member refid="group__kwineffects_1ga4ed77506be381680bf664dbc8c20e036" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>tabletToolProximity</name></member>
      <member refid="group__kwineffects_1gaf16e9ca42cceb738fb859d1a1a462548" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>tabletToolTip</name></member>
      <member refid="group__kwineffects_1gaa31554949bc00085e6380b50be16138e" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>touchCancel</name></member>
      <member refid="group__kwineffects_1ga315fd305e7570f41e7bce7db6812381f" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>touchDown</name></member>
      <member refid="group__kwineffects_1ga54d00a9e05b5d4597db40c2f5b1d36de" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>touchMotion</name></member>
      <member refid="group__kwineffects_1gaf3871967d6199eb7c87621bc75b925bb" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>touchUp</name></member>
      <member refid="group__kwineffects_1ga7b142933c38cb9b4a433b768b266e7cb" prot="public" virt="virtual"><scope>KWin::SlidingPopupsEffect</scope><name>windowInputMouseEvent</name></member>
      <member refid="group__kwineffects_1ga50174eb0169aebceb78ebd5aff71c481" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>~Effect</name></member>
      <member refid="class_k_win_1_1_sliding_popups_effect_1abb3f1f03f5a981ecbd3b46b21bbd9e0e" prot="public" virt="non-virtual"><scope>KWin::SlidingPopupsEffect</scope><name>~SlidingPopupsEffect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
