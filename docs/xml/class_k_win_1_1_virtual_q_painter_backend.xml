<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_virtual_q_painter_backend" kind="class" language="C++" prot="public">
    <compoundname>KWin::VirtualQPainterBackend</compoundname>
    <basecompoundref refid="class_k_win_1_1_q_painter_backend" prot="public" virt="non-virtual">KWin::QPainterBackend</basecompoundref>
    <includes refid="virtual__qpainter__backend_8h" local="no">virtual_qpainter_backend.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_virtual_q_painter_backend_1a32ec657ca2ada51580d91770cde9598b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_graphics_buffer_allocator" kindref="compound">GraphicsBufferAllocator</ref> &gt;</type>
        <definition>std::unique_ptr&lt;GraphicsBufferAllocator&gt; KWin::VirtualQPainterBackend::m_allocator</definition>
        <argsstring></argsstring>
        <name>m_allocator</name>
        <qualifiedname>KWin::VirtualQPainterBackend::m_allocator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_qpainter_backend.h" line="65" column="21" bodyfile="kwin/src/backends/virtual/virtual_qpainter_backend.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_q_painter_backend_1a0d729acc5ff11f0a995859ac9374fa95" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *, std::unique_ptr&lt; <ref refid="class_k_win_1_1_virtual_q_painter_layer" kindref="compound">VirtualQPainterLayer</ref> &gt; &gt;</type>
        <definition>std::map&lt;Output *, std::unique_ptr&lt;VirtualQPainterLayer&gt; &gt; KWin::VirtualQPainterBackend::m_outputs</definition>
        <argsstring></argsstring>
        <name>m_outputs</name>
        <qualifiedname>KWin::VirtualQPainterBackend::m_outputs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_qpainter_backend.h" line="66" column="14" bodyfile="kwin/src/backends/virtual/virtual_qpainter_backend.h" bodystart="66" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_virtual_q_painter_backend_1a40b29685379f2a4102a4839547dcee1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::VirtualQPainterBackend::VirtualQPainterBackend</definition>
        <argsstring>(VirtualBackend *backend)</argsstring>
        <name>VirtualQPainterBackend</name>
        <qualifiedname>KWin::VirtualQPainterBackend::VirtualQPainterBackend</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_backend" kindref="compound">VirtualBackend</ref> *</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_qpainter_backend.h" line="53" column="5" bodyfile="kwin/src/backends/virtual/virtual_qpainter_backend.cpp" bodystart="74" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_q_painter_backend_1abfa8b324f532406baba9302633aa00e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::VirtualQPainterBackend::~VirtualQPainterBackend</definition>
        <argsstring>() override</argsstring>
        <name>~VirtualQPainterBackend</name>
        <qualifiedname>KWin::VirtualQPainterBackend::~VirtualQPainterBackend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_qpainter_backend.h" line="54" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_q_painter_backend_1a370c9114ed415cc77ae23ac6b48ccf11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_graphics_buffer_allocator" kindref="compound">GraphicsBufferAllocator</ref> *</type>
        <definition>GraphicsBufferAllocator * KWin::VirtualQPainterBackend::graphicsBufferAllocator</definition>
        <argsstring>() const</argsstring>
        <name>graphicsBufferAllocator</name>
        <qualifiedname>KWin::VirtualQPainterBackend::graphicsBufferAllocator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_qpainter_backend.h" line="56" column="29" bodyfile="kwin/src/backends/virtual/virtual_qpainter_backend.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_q_painter_backend_1ac51c7163720432be25bec240063b719d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::VirtualQPainterBackend::present</definition>
        <argsstring>(Output *output, const std::shared_ptr&lt; OutputFrame &gt; &amp;frame) override</argsstring>
        <name>present</name>
        <qualifiedname>KWin::VirtualQPainterBackend::present</qualifiedname>
        <reimplements refid="class_k_win_1_1_render_backend_1ad9736308199d71cdd97755a111f5abbe">present</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> &gt; &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_qpainter_backend.h" line="58" column="10" bodyfile="kwin/src/backends/virtual/virtual_qpainter_backend.cpp" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_q_painter_backend_1aa67952a9c655f49cb2ff29dd87c6b557" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_virtual_q_painter_layer" kindref="compound">VirtualQPainterLayer</ref> *</type>
        <definition>VirtualQPainterLayer * KWin::VirtualQPainterBackend::primaryLayer</definition>
        <argsstring>(Output *output) override</argsstring>
        <name>primaryLayer</name>
        <qualifiedname>KWin::VirtualQPainterBackend::primaryLayer</qualifiedname>
        <reimplements refid="class_k_win_1_1_render_backend_1a0862ffb5aba97ee2d82e6488e4d1471d">primaryLayer</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_qpainter_backend.h" line="59" column="26" bodyfile="kwin/src/backends/virtual/virtual_qpainter_backend.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_virtual_q_painter_backend_1a8e7660f0bcc3be0375c98949160e2e82" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualQPainterBackend::addOutput</definition>
        <argsstring>(Output *output)</argsstring>
        <name>addOutput</name>
        <qualifiedname>KWin::VirtualQPainterBackend::addOutput</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_qpainter_backend.h" line="62" column="10" bodyfile="kwin/src/backends/virtual/virtual_qpainter_backend.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_q_painter_backend_1a1360ac4f7db36b86c9b3243e92eca6bc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualQPainterBackend::removeOutput</definition>
        <argsstring>(Output *output)</argsstring>
        <name>removeOutput</name>
        <qualifiedname>KWin::VirtualQPainterBackend::removeOutput</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_qpainter_backend.h" line="63" column="10" bodyfile="kwin/src/backends/virtual/virtual_qpainter_backend.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::QPainterBackend</label>
        <link refid="class_k_win_1_1_q_painter_backend"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KWin::RenderBackend</label>
        <link refid="class_k_win_1_1_render_backend"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::VirtualQPainterBackend</label>
        <link refid="class_k_win_1_1_virtual_q_painter_backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::QPainterBackend</label>
        <link refid="class_k_win_1_1_q_painter_backend"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KWin::RenderBackend</label>
        <link refid="class_k_win_1_1_render_backend"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::VirtualQPainterBackend</label>
        <link refid="class_k_win_1_1_virtual_q_painter_backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/backends/virtual/virtual_qpainter_backend.h" line="49" column="1" bodyfile="kwin/src/backends/virtual/virtual_qpainter_backend.h" bodystart="50" bodyend="67"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_virtual_q_painter_backend_1a8e7660f0bcc3be0375c98949160e2e82" prot="private" virt="non-virtual"><scope>KWin::VirtualQPainterBackend</scope><name>addOutput</name></member>
      <member refid="class_k_win_1_1_render_backend_1a995e6152b42f76691d296e99780ef707" prot="public" virt="virtual"><scope>KWin::VirtualQPainterBackend</scope><name>checkGraphicsReset</name></member>
      <member refid="class_k_win_1_1_q_painter_backend_1aa900b8b99a52720ee4a4755004dd223f" prot="public" virt="virtual"><scope>KWin::VirtualQPainterBackend</scope><name>compositingType</name></member>
      <member refid="class_k_win_1_1_q_painter_backend_1aff220169aa2dab357193134bcf2b2614" prot="public" virt="virtual"><scope>KWin::VirtualQPainterBackend</scope><name>createSurfaceTextureWayland</name></member>
      <member refid="class_k_win_1_1_render_backend_1abe178a184592ff07e972f4971de5f964" prot="public" virt="virtual"><scope>KWin::VirtualQPainterBackend</scope><name>cursorLayer</name></member>
      <member refid="class_k_win_1_1_render_backend_1a9135e39ee4f8aed8dcfd2771fe0a7773" prot="public" virt="virtual"><scope>KWin::VirtualQPainterBackend</scope><name>drmDevice</name></member>
      <member refid="class_k_win_1_1_virtual_q_painter_backend_1a370c9114ed415cc77ae23ac6b48ccf11" prot="public" virt="non-virtual"><scope>KWin::VirtualQPainterBackend</scope><name>graphicsBufferAllocator</name></member>
      <member refid="class_k_win_1_1_q_painter_backend_1a42d70b9b9256a11fe6b9cc9d22170330" prot="public" virt="non-virtual"><scope>KWin::VirtualQPainterBackend</scope><name>isFailed</name></member>
      <member refid="class_k_win_1_1_virtual_q_painter_backend_1a32ec657ca2ada51580d91770cde9598b" prot="private" virt="non-virtual"><scope>KWin::VirtualQPainterBackend</scope><name>m_allocator</name></member>
      <member refid="class_k_win_1_1_virtual_q_painter_backend_1a0d729acc5ff11f0a995859ac9374fa95" prot="private" virt="non-virtual"><scope>KWin::VirtualQPainterBackend</scope><name>m_outputs</name></member>
      <member refid="class_k_win_1_1_virtual_q_painter_backend_1ac51c7163720432be25bec240063b719d" prot="public" virt="virtual"><scope>KWin::VirtualQPainterBackend</scope><name>present</name></member>
      <member refid="class_k_win_1_1_virtual_q_painter_backend_1aa67952a9c655f49cb2ff29dd87c6b557" prot="public" virt="virtual"><scope>KWin::VirtualQPainterBackend</scope><name>primaryLayer</name></member>
      <member refid="class_k_win_1_1_q_painter_backend_1aea8d4b3476c2a0d7f05bfc31173e5dd5" prot="protected" virt="non-virtual"><scope>KWin::VirtualQPainterBackend</scope><name>QPainterBackend</name></member>
      <member refid="class_k_win_1_1_virtual_q_painter_backend_1a1360ac4f7db36b86c9b3243e92eca6bc" prot="private" virt="non-virtual"><scope>KWin::VirtualQPainterBackend</scope><name>removeOutput</name></member>
      <member refid="class_k_win_1_1_render_backend_1a64651d2ee05d39d5e1df7391036198d8" prot="public" virt="virtual"><scope>KWin::VirtualQPainterBackend</scope><name>repairPresentation</name></member>
      <member refid="class_k_win_1_1_q_painter_backend_1a360e5f99249f85996c4ba12cc3029e72" prot="protected" virt="non-virtual"><scope>KWin::VirtualQPainterBackend</scope><name>setFailed</name></member>
      <member refid="class_k_win_1_1_render_backend_1aca3c178c2ab62c1b5f1074200b066c53" prot="public" virt="virtual"><scope>KWin::VirtualQPainterBackend</scope><name>supportedFormats</name></member>
      <member refid="class_k_win_1_1_render_backend_1a19fb9a934538fe684e8fe9725f253904" prot="public" virt="virtual"><scope>KWin::VirtualQPainterBackend</scope><name>testImportBuffer</name></member>
      <member refid="class_k_win_1_1_virtual_q_painter_backend_1a40b29685379f2a4102a4839547dcee1e" prot="public" virt="non-virtual"><scope>KWin::VirtualQPainterBackend</scope><name>VirtualQPainterBackend</name></member>
      <member refid="class_k_win_1_1_q_painter_backend_1aa9567039bb920bc977ac946de73944c4" prot="public" virt="virtual"><scope>KWin::VirtualQPainterBackend</scope><name>~QPainterBackend</name></member>
      <member refid="class_k_win_1_1_virtual_q_painter_backend_1abfa8b324f532406baba9302633aa00e7" prot="public" virt="non-virtual"><scope>KWin::VirtualQPainterBackend</scope><name>~VirtualQPainterBackend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
