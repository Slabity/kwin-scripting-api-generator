<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="tabbox_8cpp" kind="file" language="C++">
    <compoundname>tabbox.cpp</compoundname>
    <includes refid="tabbox_8h" local="yes">tabbox.h</includes>
    <includes refid="tabbox__logging_8h" local="yes">tabbox/tabbox_logging.h</includes>
    <includes refid="tabboxconfig_8h" local="yes">tabbox/tabboxconfig.h</includes>
    <includes refid="effecthandler_8h" local="yes">effect/effecthandler.h</includes>
    <includes refid="focuschain_8h" local="yes">focuschain.h</includes>
    <includes refid="input_8h" local="yes">input.h</includes>
    <includes refid="keyboard__input_8h" local="yes">keyboard_input.h</includes>
    <includes refid="pointer__input_8h" local="yes">pointer_input.h</includes>
    <includes refid="screenedge_8h" local="yes">screenedge.h</includes>
    <includes local="yes">virtualdesktops.h</includes>
    <includes local="yes">window.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes local="no">QAction</includes>
    <includes local="no">QKeyEvent</includes>
    <includes local="no">KConfig</includes>
    <includes local="no">KConfigGroup</includes>
    <includes local="no">KGlobalAccel</includes>
    <includes local="no">KLazyLocalizedString</includes>
    <includes local="yes">moc_tabbox.cpp</includes>
    <incdepgraph>
      <node id="39">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>effect/effect.h</label>
        <link refid="effect_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>effect/effecthandler.h</label>
        <link refid="effecthandler_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>effect/effectwindow.h</label>
        <link refid="effectwindow_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>focuschain.h</label>
        <link refid="focuschain_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>input.h</label>
        <link refid="input_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>input_event.h</label>
        <link refid="input__event_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>keyboard_input.h</label>
        <link refid="keyboard__input_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>pointer_input.h</label>
        <link refid="pointer__input_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>screenedge.h</label>
        <link refid="screenedge_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/tabbox/tabbox.cpp</label>
        <link refid="tabbox_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>tabbox.h</label>
        <link refid="tabbox_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>tabbox/tabbox_logging.h</label>
        <link refid="tabbox__logging_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>tabboxconfig.h</label>
        <link refid="tabboxconfig_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>tabbox/tabboxhandler.h</label>
        <link refid="tabboxhandler_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>utils/cursortheme.h</label>
        <link refid="cursortheme_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>KConfig</label>
      </node>
      <node id="76">
        <label>KConfigGroup</label>
      </node>
      <node id="16">
        <label>KConfigWatcher</label>
      </node>
      <node id="84">
        <label>KGlobalAccel</label>
      </node>
      <node id="85">
        <label>KLazyLocalizedString</label>
      </node>
      <node id="34">
        <label>KPluginFactory</label>
      </node>
      <node id="17">
        <label>KSharedConfig</label>
      </node>
      <node id="69">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="81">
        <label>QAction</label>
      </node>
      <node id="70">
        <label>QApplication</label>
      </node>
      <node id="42">
        <label>QByteArray</label>
      </node>
      <node id="8">
        <label>QCoreApplication</label>
      </node>
      <node id="73">
        <label>QDBusContext</label>
      </node>
      <node id="74">
        <label>QDataStream</label>
      </node>
      <node id="29">
        <label>QDebug</label>
      </node>
      <node id="48">
        <label>QEasingCurve</label>
      </node>
      <node id="61">
        <label>QElapsedTimer</label>
      </node>
      <node id="51">
        <label>QHash</label>
      </node>
      <node id="49">
        <label>QIcon</label>
      </node>
      <node id="9">
        <label>QImage</label>
      </node>
      <node id="82">
        <label>QKeyEvent</label>
      </node>
      <node id="26">
        <label>QKeySequence</label>
      </node>
      <node id="43">
        <label>QList</label>
      </node>
      <node id="30">
        <label>QLoggingCategory</label>
      </node>
      <node id="41">
        <label>QMatrix4x4</label>
      </node>
      <node id="24">
        <label>QModelIndex</label>
      </node>
      <node id="14">
        <label>QObject</label>
      </node>
      <node id="50">
        <label>QPair</label>
      </node>
      <node id="25">
        <label>QPixmap</label>
      </node>
      <node id="10">
        <label>QPoint</label>
      </node>
      <node id="55">
        <label>QPointF</label>
      </node>
      <node id="15">
        <label>QPointer</label>
      </node>
      <node id="71">
        <label>QProcessEnvironment</label>
      </node>
      <node id="45">
        <label>QRect</label>
      </node>
      <node id="33">
        <label>QRegion</label>
      </node>
      <node id="18">
        <label>QSet</label>
      </node>
      <node id="60">
        <label>QSharedDataPointer</label>
      </node>
      <node id="44">
        <label>QSize</label>
      </node>
      <node id="52">
        <label>QStack</label>
      </node>
      <node id="23">
        <label>QString</label>
      </node>
      <node id="75">
        <label>QStringList</label>
      </node>
      <node id="27">
        <label>QTimer</label>
      </node>
      <node id="46">
        <label>QUuid</label>
      </node>
      <node id="11">
        <label>QVariant</label>
      </node>
      <node id="12">
        <label>QVector2D</label>
      </node>
      <node id="47">
        <label>QWindow</label>
      </node>
      <node id="20">
        <label>chrono</label>
      </node>
      <node id="79">
        <label>climits</label>
      </node>
      <node id="5">
        <label>config-kwin.h</label>
      </node>
      <node id="19">
        <label>functional</label>
      </node>
      <node id="13">
        <label>kwin_export.h</label>
      </node>
      <node id="63">
        <label>memory</label>
      </node>
      <node id="86">
        <label>moc_tabbox.cpp</label>
      </node>
      <node id="80">
        <label>netwm_def.h</label>
      </node>
      <node id="40">
        <label>optional</label>
      </node>
      <node id="64">
        <label>virtualdesktops.h</label>
      </node>
      <node id="65">
        <label>window.h</label>
      </node>
      <node id="58">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <innernamespace refid="namespace_k_win_1_1_tab_box">KWin::TabBox</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>1999,<sp/>2000<sp/>Matthias<sp/>Ettrich<sp/>&lt;ettrich@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2003<sp/>Lubos<sp/>Lunak<sp/>&lt;l.lunak@kde.org&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2009<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>QT_CLEAN_NAMESPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>own</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tabbox_8h" kindref="compound">tabbox.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tabbox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tabbox__logging_8h" kindref="compound">tabbox/tabbox_logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tabboxconfig_8h" kindref="compound">tabbox/tabboxconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>kwin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="effecthandler_8h" kindref="compound">effect/effecthandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="focuschain_8h" kindref="compound">focuschain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input_8h" kindref="compound">input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keyboard__input_8h" kindref="compound">keyboard_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer__input_8h" kindref="compound">pointer_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="screenedge_8h" kindref="compound">screenedge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;virtualdesktops.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QAction&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QKeyEvent&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KConfig&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KConfigGroup&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KGlobalAccel&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KLazyLocalizedString&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1_1_tab_box" kindref="compound">TabBox</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a6ebd4c31e8e007d294f0ab3691d8a835" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a6ebd4c31e8e007d294f0ab3691d8a835" kindref="member">TabBoxHandlerImpl::TabBoxHandlerImpl</ref>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box" kindref="compound">TabBox</ref><sp/>*<ref refid="namespace_k_win_1_1_tab_box_1ab8e1cbfa02924a1537b961051b1a4038" kindref="member">tabBox</ref>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1afd9c605d4b851b017536e5a7934b6da2" kindref="member">TabBoxHandler</ref>(<ref refid="namespace_k_win_1_1_tab_box_1ab8e1cbfa02924a1537b961051b1a4038" kindref="member">tabBox</ref>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tabBox(<ref refid="namespace_k_win_1_1_tab_box_1ab8e1cbfa02924a1537b961051b1a4038" kindref="member">tabBox</ref>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1aeab30ec33c11afb482529a1aaa128da5" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1aeab30ec33c11afb482529a1aaa128da5" kindref="member">TabBoxHandlerImpl::~TabBoxHandlerImpl</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a8624aef24080c90213f594f318ca1c51" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a8624aef24080c90213f594f318ca1c51" kindref="member">TabBoxHandlerImpl::activeScreen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="54"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aaee7f44422f40ea8256b2f54e83a2b37" kindref="member">outputs</ref>().indexOf(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activeOutput());</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a8e0835bac3d27bbb409200aaca651b14" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a8e0835bac3d27bbb409200aaca651b14" kindref="member">TabBoxHandlerImpl::desktopName</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="59"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>-&gt;isOnAllDesktops())<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>-&gt;desktops().last()-&gt;name();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VirtualDesktopManager::self()-&gt;currentDesktop()-&gt;name();</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a39c3cfed15b68caf3f9c7d84bfd9e393" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a39c3cfed15b68caf3f9c7d84bfd9e393" kindref="member">TabBoxHandlerImpl::nextClientFocusChain</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="67"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a9cdd73f71ccdefa9152c49ad16ad2be9" kindref="member">focusChain</ref>()-&gt;<ref refid="class_k_win_1_1_focus_chain_1ada1346e7450d500c29be1ccc3e95ae89" kindref="member">nextMostRecentlyUsed</ref>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1aac40da9b9e7ef4ffe93ae605cb77c826" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1aac40da9b9e7ef4ffe93ae605cb77c826" kindref="member">TabBoxHandlerImpl::firstClientFocusChain</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="72"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a9cdd73f71ccdefa9152c49ad16ad2be9" kindref="member">focusChain</ref>()-&gt;<ref refid="class_k_win_1_1_focus_chain_1ace6f644f23d1f6c0877134e4f0ffb4d4" kindref="member">firstMostRecentlyUsed</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1ae1cc410f909fc5a9023033dbf02f0a65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1ae1cc410f909fc5a9023033dbf02f0a65" kindref="member">TabBoxHandlerImpl::isInFocusChain</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="77"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a9cdd73f71ccdefa9152c49ad16ad2be9" kindref="member">focusChain</ref>()-&gt;<ref refid="class_k_win_1_1_focus_chain_1a9604f738cac8866be71342f8d5207e1d" kindref="member">contains</ref>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1ac7d99796a5d77cbf58b3b63386875b4b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1ac7d99796a5d77cbf58b3b63386875b4b" kindref="member">TabBoxHandlerImpl::activeClient</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="82"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a0fcebcde2aaab133120f33d412e34fd6" kindref="member">activeWindow</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TabBoxHandlerImpl::checkDesktop(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*client)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="87"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1aab06239dbde732513bfea7314a591fc5" kindref="member">config</ref>().clientDesktopMode())<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a7fd63893079ca8ebc55c8d809b5eaecaa0382d15a3fda625bde9601d212feef3c" kindref="member">TabBoxConfig::AllDesktopsClients</ref>:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a7fd63893079ca8ebc55c8d809b5eaecaae218e908febe18241ef4a0edbebbe885" kindref="member">TabBoxConfig::ExcludeCurrentDesktopClients</ref>:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>-&gt;<ref refid="class_k_win_1_1_window_1aa975d4f4a79a999c827e0a4d7bb5c1dd" kindref="member">isOnCurrentDesktop</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>TabBoxConfig::OnlyCurrentDesktopClients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>-&gt;<ref refid="class_k_win_1_1_window_1aa975d4f4a79a999c827e0a4d7bb5c1dd" kindref="member">isOnCurrentDesktop</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TabBoxHandlerImpl::checkActivity(Window<sp/>*client)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="99"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1aab06239dbde732513bfea7314a591fc5" kindref="member">config</ref>().clientActivitiesMode())<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a16f043ac7461cc567bd1477d5f220381a243d49c5d5f94501a1c545e916c67cac" kindref="member">TabBoxConfig::AllActivitiesClients</ref>:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a16f043ac7461cc567bd1477d5f220381afa082b17ca4993008a60028764b95876" kindref="member">TabBoxConfig::ExcludeCurrentActivityClients</ref>:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>-&gt;<ref refid="class_k_win_1_1_window_1a6214074a0338d546c1c97c736f1b1fe6" kindref="member">isOnCurrentActivity</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>TabBoxConfig::OnlyCurrentActivityClients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>-&gt;<ref refid="class_k_win_1_1_window_1a6214074a0338d546c1c97c736f1b1fe6" kindref="member">isOnCurrentActivity</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TabBoxHandlerImpl::checkApplications(Window<sp/>*client)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="111"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>list<sp/>=<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a4d36491fe85396618223ad617d008824" kindref="member">clientList</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1aab06239dbde732513bfea7314a591fc5" kindref="member">config</ref>().clientApplicationsMode())<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a46e9fb8b7892307c9edae626464c0cd6a19897ff98c135cbf18372a66d1c21473" kindref="member">TabBoxConfig::OneWindowPerApplication</ref>:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>list<sp/>already<sp/>contains<sp/>an<sp/>entry<sp/>of<sp/>this<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Window<sp/>*other<sp/>:<sp/>list)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window_1af6b077eadf47fd68373d43f94eef23ad" kindref="member">Window::belongToSameApplication</ref>(other,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>,<sp/><ref refid="class_k_win_1_1_window_1a70e1b60416c67a488268d17dba135ecaa6f4457bf1caf8f10b38c5d575603e22e" kindref="member">Window::SameApplicationCheck::AllowCrossProcesses</ref>))<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a46e9fb8b7892307c9edae626464c0cd6ae2a5e2ff29e69189332b31c0085d0061" kindref="member">TabBoxConfig::AllWindowsCurrentApplication</ref>:<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Window<sp/>*active<sp/>=<sp/><ref refid="namespace_k_win_1_1_tab_box_1ab8e1cbfa02924a1537b961051b1a4038" kindref="member">tabBox</ref>-&gt;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1ab84bb67514e3a108c2fa6d070e22f4cf" kindref="member">activeClient</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>active<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_window_1af6b077eadf47fd68373d43f94eef23ad" kindref="member">Window::belongToSameApplication</ref>(active,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>,<sp/><ref refid="class_k_win_1_1_window_1a70e1b60416c67a488268d17dba135ecaa6f4457bf1caf8f10b38c5d575603e22e" kindref="member">Window::SameApplicationCheck::AllowCrossProcesses</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>TabBoxConfig::AllWindowsAllApplications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TabBoxHandlerImpl::checkMinimized(Window<sp/>*client)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="133"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1aab06239dbde732513bfea7314a591fc5" kindref="member">config</ref>().clientMinimizedMode())<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a389715c45c2923cface74f0f102ac5aaac6a78d5962f09c138a1e54a9d6bc95a5" kindref="member">TabBoxConfig::ExcludeMinimizedClients</ref>:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>-&gt;isMinimized();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a389715c45c2923cface74f0f102ac5aaa3c5d848f71b956610edd5cbcc4838530" kindref="member">TabBoxConfig::OnlyMinimizedClients</ref>:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>-&gt;isMinimized();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>TabBoxConfig::IgnoreMinimizedStatus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TabBoxHandlerImpl::checkMultiScreen(Window<sp/>*client)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="145"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1aab06239dbde732513bfea7314a591fc5" kindref="member">config</ref>().clientMultiScreenMode())<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1ac78441ecad3c5eee44e47f0bf1d14cb7a9f625fcae3d5fd7ecda3bc4b81d51193" kindref="member">TabBoxConfig::IgnoreMultiScreen</ref>:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1ac78441ecad3c5eee44e47f0bf1d14cb7a7955a81e3689700d9359bbcdbd682d95" kindref="member">TabBoxConfig::ExcludeCurrentScreenClients</ref>:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>-&gt;output()<sp/>!=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a5c706b5fddc7707a36576936450d86b9" kindref="member">activeOutput</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>TabBoxConfig::OnlyCurrentScreenClients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>-&gt;output()<sp/>==<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a5c706b5fddc7707a36576936450d86b9" kindref="member">activeOutput</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a5c94ecbd74c93392289bbf2516d42377" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a5c94ecbd74c93392289bbf2516d42377" kindref="member">TabBoxHandlerImpl::clientToAddToList</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="157"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref><sp/>||<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>-&gt;isDeleted())<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*ret<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addClient<sp/>=<sp/>checkDesktop(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>checkActivity(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>checkApplications(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>checkMinimized(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>checkMultiScreen(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>addClient<sp/>=<sp/>addClient<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>-&gt;wantsTabFocus()<sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>-&gt;skipSwitcher();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addClient)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>add<sp/>windows<sp/>that<sp/>have<sp/>modal<sp/>dialogs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*modal<sp/>=<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>-&gt;findModal();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modal<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>modal<sp/>==<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a913dac104fcbe61766ab024f1c674f80" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a4d36491fe85396618223ad617d008824" kindref="member">clientList</ref>().contains(modal))<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>modal;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a18eb06cc15571f0522a35addbebf3e3a" refkind="member"><highlight class="normal">QList&lt;Window<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a18eb06cc15571f0522a35addbebf3e3a" kindref="member">TabBoxHandlerImpl::stackingOrder</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="184"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Window<sp/>*&gt;<sp/>stacking<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a376b811ccbcdce840e1a9838d62f802e" kindref="member">stackingOrder</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;Window<sp/>*&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>:<sp/>stacking)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;isDeleted())<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;isClient())<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.append(window);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a69ae423644c16b12320601d48558c37d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a69ae423644c16b12320601d48558c37d" kindref="member">TabBoxHandlerImpl::isKWinCompositing</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="199"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1af1e3c769e92554ca0b510f82e901a12d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1af1e3c769e92554ca0b510f82e901a12d" kindref="member">TabBoxHandlerImpl::raiseClient</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*c)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="204"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7af0e246269d807f7f29527ba90613ee" kindref="member">raiseWindow</ref>(c);</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a4748b99f999ab635acdbdb5b9ef6948a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a4748b99f999ab635acdbdb5b9ef6948a" kindref="member">TabBoxHandlerImpl::restack</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*c,<sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*under)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1abf31c3a83a38f58b6c29718c3a7f16df" kindref="member">stackBelow</ref>(c,<sp/>under);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a68763b29d004974a9917c7c5fd834aa8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a68763b29d004974a9917c7c5fd834aa8" kindref="member">TabBoxHandlerImpl::elevateClient</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*c,<sp/>QWindow<sp/>*tabbox,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="214"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="class_k_win_1_1_window_1af78348da5a0ad82e99e06f1ca9e64ab4" kindref="member">elevate</ref>(b);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*w<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;findInternal(tabbox))<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w-&gt;elevate(b);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a19278e6b9ef9d1a431021fd32e1c8b3b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a19278e6b9ef9d1a431021fd32e1c8b3b" kindref="member">TabBoxHandlerImpl::shadeClient</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="222"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="class_k_win_1_1_window_1a58c27d98b0edb3a6d0afb7fdf3882c39" kindref="member">cancelShadeHoverTimer</ref>();<sp/></highlight><highlight class="comment">//<sp/>stop<sp/>core<sp/>shading<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!b<sp/>&amp;&amp;<sp/>c-&gt;<ref refid="class_k_win_1_1_window_1abfa6caaf2d5624a4cdd2b49d20ed228c" kindref="member">shadeMode</ref>()<sp/>==<sp/><ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585faf7edb6b11c2666b2ef0da40d95f12d39" kindref="member">ShadeNormal</ref>)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="class_k_win_1_1_window_1a14232d4a0703db154fc0f506be5a675a" kindref="member">setShade</ref>(<ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585faec9cfe314b9bcc398475c383305a8174" kindref="member">ShadeHover</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&amp;&amp;<sp/>c-&gt;<ref refid="class_k_win_1_1_window_1abfa6caaf2d5624a4cdd2b49d20ed228c" kindref="member">shadeMode</ref>()<sp/>==<sp/><ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585faec9cfe314b9bcc398475c383305a8174" kindref="member">ShadeHover</ref>)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="class_k_win_1_1_window_1a14232d4a0703db154fc0f506be5a675a" kindref="member">setShade</ref>(<ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585faf7edb6b11c2666b2ef0da40d95f12d39" kindref="member">ShadeNormal</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a0ea98dccf0b15229e30bcd36dac2d051" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a0ea98dccf0b15229e30bcd36dac2d051" kindref="member">TabBoxHandlerImpl::desktopClient</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="232"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a18eb06cc15571f0522a35addbebf3e3a" kindref="member">stackingOrder</ref><sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a376b811ccbcdce840e1a9838d62f802e" kindref="member">stackingOrder</ref>();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>:<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a18eb06cc15571f0522a35addbebf3e3a" kindref="member">stackingOrder</ref>)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;isDeleted())<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;isClient()<sp/>&amp;&amp;<sp/>window-&gt;isDesktop()<sp/>&amp;&amp;<sp/>window-&gt;isOnCurrentDesktop()<sp/>&amp;&amp;<sp/>window-&gt;output()<sp/>==<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activeOutput())<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>window;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a1e46964ea9cdcfe7451a2d294ddcbdca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1a1e46964ea9cdcfe7451a2d294ddcbdca" kindref="member">TabBoxHandlerImpl::activateAndClose</ref>()</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tabBox-&gt;accept();</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1ad005d20aae9128904e0cf5e25ce5dfb3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1ad005d20aae9128904e0cf5e25ce5dfb3" kindref="member">TabBoxHandlerImpl::highlightWindows</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window,<sp/>QWindow<sp/>*controller)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;EffectWindow<sp/>*&gt;<sp/>windows;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windows<sp/>&lt;&lt;<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a680b520607df91ff2ee91be0c33c8736" kindref="member">effectWindow</ref>();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*t<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;findInternal(controller))<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windows<sp/>&lt;&lt;<sp/>t-&gt;effectWindow();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;highlightWindows(windows);</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1ae024df7bd37ecc039c34691c9300f97e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl_1ae024df7bd37ecc039c34691c9300f97e" kindref="member">TabBoxHandlerImpl::noModifierGrab</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="266"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tabBox-&gt;noModifierGrab();</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>TabBox</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="class_k_win_1_1_tab_box_1_1_tab_box_1af27a8e5e780c886362d2e4f760dd173b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1af27a8e5e780c886362d2e4f760dd173b" kindref="member">TabBox::TabBox</ref>()</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_displayRefcount(0)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tabGrab(false)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_noModifierGrab(false)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_forcedGlobalMouseGrab(false)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_ready(false)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isShown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>m_defaultConfig<sp/>=<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config" kindref="compound">TabBoxConfig</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>m_defaultConfig.setClientDesktopMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a7fd63893079ca8ebc55c8d809b5eaecaa09c9af829df05cd5486252e6688f5d59" kindref="member">TabBoxConfig::OnlyCurrentDesktopClients</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>m_defaultConfig.setClientActivitiesMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a16f043ac7461cc567bd1477d5f220381aee4f79d4b51ba9f80c0b8928ab9f732b" kindref="member">TabBoxConfig::OnlyCurrentActivityClients</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>m_defaultConfig.setClientApplicationsMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a46e9fb8b7892307c9edae626464c0cd6adbe57874245b08be57ffd214a225af85" kindref="member">TabBoxConfig::AllWindowsAllApplications</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>m_defaultConfig.setOrderMinimizedMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a86146aece60ef883296609a11e9c53c0abf2f1ea59db05decde0cfc98d6eeb680" kindref="member">TabBoxConfig::NoGroupByMinimized</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>m_defaultConfig.setClientMinimizedMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a389715c45c2923cface74f0f102ac5aaa8dd72c6a86d993fbf8fc3be8255685b0" kindref="member">TabBoxConfig::IgnoreMinimizedStatus</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>m_defaultConfig.setShowDesktopMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1aba9c504446a3ee34f72fcea9e4bc8e71ad1e18349057bf3c8705cbefc76596ecc" kindref="member">TabBoxConfig::DoNotShowDesktopClient</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>m_defaultConfig.setClientMultiScreenMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1ac78441ecad3c5eee44e47f0bf1d14cb7a9f625fcae3d5fd7ecda3bc4b81d51193" kindref="member">TabBoxConfig::IgnoreMultiScreen</ref>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>m_defaultConfig.setClientSwitchingMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a8ef8f55aba1cbb523585e20bef524628acb1c383d1178171a0e39e88a6f483cda" kindref="member">TabBoxConfig::FocusChainSwitching</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alternativeConfig<sp/>=<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config" kindref="compound">TabBoxConfig</ref>();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alternativeConfig.setClientDesktopMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a7fd63893079ca8ebc55c8d809b5eaecaa0382d15a3fda625bde9601d212feef3c" kindref="member">TabBoxConfig::AllDesktopsClients</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alternativeConfig.setClientActivitiesMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a16f043ac7461cc567bd1477d5f220381aee4f79d4b51ba9f80c0b8928ab9f732b" kindref="member">TabBoxConfig::OnlyCurrentActivityClients</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alternativeConfig.setClientApplicationsMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a46e9fb8b7892307c9edae626464c0cd6adbe57874245b08be57ffd214a225af85" kindref="member">TabBoxConfig::AllWindowsAllApplications</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alternativeConfig.setOrderMinimizedMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a86146aece60ef883296609a11e9c53c0abf2f1ea59db05decde0cfc98d6eeb680" kindref="member">TabBoxConfig::NoGroupByMinimized</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alternativeConfig.setClientMinimizedMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a389715c45c2923cface74f0f102ac5aaa8dd72c6a86d993fbf8fc3be8255685b0" kindref="member">TabBoxConfig::IgnoreMinimizedStatus</ref>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alternativeConfig.setShowDesktopMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1aba9c504446a3ee34f72fcea9e4bc8e71ad1e18349057bf3c8705cbefc76596ecc" kindref="member">TabBoxConfig::DoNotShowDesktopClient</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alternativeConfig.setClientMultiScreenMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1ac78441ecad3c5eee44e47f0bf1d14cb7a9f625fcae3d5fd7ecda3bc4b81d51193" kindref="member">TabBoxConfig::IgnoreMultiScreen</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alternativeConfig.setClientSwitchingMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a8ef8f55aba1cbb523585e20bef524628acb1c383d1178171a0e39e88a6f483cda" kindref="member">TabBoxConfig::FocusChainSwitching</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>m_defaultCurrentApplicationConfig<sp/>=<sp/>m_defaultConfig;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>m_defaultCurrentApplicationConfig.setClientApplicationsMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a46e9fb8b7892307c9edae626464c0cd6ae2a5e2ff29e69189332b31c0085d0061" kindref="member">TabBoxConfig::AllWindowsCurrentApplication</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alternativeCurrentApplicationConfig<sp/>=<sp/>m_alternativeConfig;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alternativeCurrentApplicationConfig.setClientApplicationsMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a46e9fb8b7892307c9edae626464c0cd6ae2a5e2ff29e69189332b31c0085d0061" kindref="member">TabBoxConfig::AllWindowsCurrentApplication</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tabBox<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl" kindref="compound">TabBoxHandlerImpl</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>QTimer::singleShot(0,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a58214e7c8e65a191deb46d96c35505d2" kindref="member">TabBox::handlerReady</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tabBoxMode<sp/>=<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858acc36245044facafcd616a8659016e4d0" kindref="member">TabBoxWindowsMode</ref>;<sp/></highlight><highlight class="comment">//<sp/>init<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(&amp;m_delayedShowTimer,<sp/>&amp;QTimer::timeout,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a5da0ce76634cee59670bea4d03e9991f" kindref="member">TabBox::show</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1abd94bbc1291ecb4698c459980e158ace" kindref="member">Workspace::configChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;TabBox::reconfigure);</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a26dca575c025308d0841dcc0eb61c9c1" kindref="member">TabBox::~TabBox</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a58214e7c8e65a191deb46d96c35505d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a58214e7c8e65a191deb46d96c35505d2" kindref="member">TabBox::handlerReady</ref>()</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tabBox-&gt;setConfig(m_defaultConfig);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>reconfigure();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ready<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Slot&gt;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabBox::key(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KLazyLocalizedString<sp/>&amp;actionName,<sp/>Slot<sp/>slot,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QKeySequence<sp/>&amp;shortcut)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>QAction<sp/>*a<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QAction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;componentName&quot;</highlight><highlight class="normal">,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;kwin&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setObjectName(QString::fromUtf8(actionName.untranslatedText()));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setText(actionName.toString());</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setGlobalShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>shortcut);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(a,<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>slot);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cuts<sp/>=<sp/>KGlobalAccel::self()-&gt;shortcut(a);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>globalShortcutChanged(a,<sp/>cuts.isEmpty()<sp/>?<sp/>QKeySequence()<sp/>:<sp/>cuts.first());</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s_windows<sp/>=<sp/>kli18n(</highlight><highlight class="stringliteral">&quot;Walk<sp/>Through<sp/>Windows&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s_windowsRev<sp/>=<sp/>kli18n(</highlight><highlight class="stringliteral">&quot;Walk<sp/>Through<sp/>Windows<sp/>(Reverse)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s_windowsAlt<sp/>=<sp/>kli18n(</highlight><highlight class="stringliteral">&quot;Walk<sp/>Through<sp/>Windows<sp/>Alternative&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s_windowsAltRev<sp/>=<sp/>kli18n(</highlight><highlight class="stringliteral">&quot;Walk<sp/>Through<sp/>Windows<sp/>Alternative<sp/>(Reverse)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s_app<sp/>=<sp/>kli18n(</highlight><highlight class="stringliteral">&quot;Walk<sp/>Through<sp/>Windows<sp/>of<sp/>Current<sp/>Application&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s_appRev<sp/>=<sp/>kli18n(</highlight><highlight class="stringliteral">&quot;Walk<sp/>Through<sp/>Windows<sp/>of<sp/>Current<sp/>Application<sp/>(Reverse)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s_appAlt<sp/>=<sp/>kli18n(</highlight><highlight class="stringliteral">&quot;Walk<sp/>Through<sp/>Windows<sp/>of<sp/>Current<sp/>Application<sp/>Alternative&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s_appAltRev<sp/>=<sp/>kli18n(</highlight><highlight class="stringliteral">&quot;Walk<sp/>Through<sp/>Windows<sp/>of<sp/>Current<sp/>Application<sp/>Alternative<sp/>(Reverse)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1911fdd0f5f4aee1b62876be79168bf1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1911fdd0f5f4aee1b62876be79168bf1" kindref="member">TabBox::initShortcuts</ref>()</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>key(s_windows,<sp/>&amp;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1af68d90e0edf23629102c49e44bc28bad" kindref="member">TabBox::slotWalkThroughWindows</ref>,<sp/>Qt::AltModifier<sp/>|<sp/>Qt::Key_Tab);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>key(s_windowsRev,<sp/>&amp;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ad43b9bc1d3fd7a722c27c1004fd49ec9" kindref="member">TabBox::slotWalkBackThroughWindows</ref>,<sp/>Qt::AltModifier<sp/>|<sp/>Qt::ShiftModifier<sp/>|<sp/>Qt::Key_Tab);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>key(s_app,<sp/>&amp;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a5e314de683bb534c283a90480cd0faa7" kindref="member">TabBox::slotWalkThroughCurrentAppWindows</ref>,<sp/>Qt::AltModifier<sp/>|<sp/>Qt::Key_QuoteLeft);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>key(s_appRev,<sp/>&amp;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a448b459bc3a11feea6ebf2f0e1301c69" kindref="member">TabBox::slotWalkBackThroughCurrentAppWindows</ref>,<sp/>Qt::AltModifier<sp/>|<sp/>Qt::Key_AsciiTilde);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>key(s_windowsAlt,<sp/>&amp;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a580bd8263be1d31055aea4abb5b7b0b6" kindref="member">TabBox::slotWalkThroughWindowsAlternative</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>key(s_windowsAltRev,<sp/>&amp;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1abf4eaf2feb03a195732656aaeceff70b" kindref="member">TabBox::slotWalkBackThroughWindowsAlternative</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>key(s_appAlt,<sp/>&amp;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac7a4406498fa07c8844ed20d9bf08027" kindref="member">TabBox::slotWalkThroughCurrentAppWindowsAlternative</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>key(s_appAltRev,<sp/>&amp;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ada514e4b9b2940cdcc2b07383fd16338" kindref="member">TabBox::slotWalkBackThroughCurrentAppWindowsAlternative</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(KGlobalAccel::self(),<sp/>&amp;KGlobalAccel::globalShortcutChanged,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;TabBox::globalShortcutChanged);</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabBox::globalShortcutChanged(QAction<sp/>*action,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QKeySequence<sp/>&amp;seq)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qstrcmp(qPrintable(action-&gt;objectName()),<sp/>s_windows.untranslatedText())<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cutWalkThroughWindows<sp/>=<sp/>seq;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qstrcmp(qPrintable(action-&gt;objectName()),<sp/>s_windowsRev.untranslatedText())<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cutWalkThroughWindowsReverse<sp/>=<sp/>seq;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qstrcmp(qPrintable(action-&gt;objectName()),<sp/>s_app.untranslatedText())<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cutWalkThroughCurrentAppWindows<sp/>=<sp/>seq;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qstrcmp(qPrintable(action-&gt;objectName()),<sp/>s_appRev.untranslatedText())<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cutWalkThroughCurrentAppWindowsReverse<sp/>=<sp/>seq;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qstrcmp(qPrintable(action-&gt;objectName()),<sp/>s_windowsAlt.untranslatedText())<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cutWalkThroughWindowsAlternative<sp/>=<sp/>seq;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qstrcmp(qPrintable(action-&gt;objectName()),<sp/>s_windowsAltRev.untranslatedText())<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cutWalkThroughWindowsAlternativeReverse<sp/>=<sp/>seq;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qstrcmp(qPrintable(action-&gt;objectName()),<sp/>s_appAlt.untranslatedText())<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cutWalkThroughCurrentAppWindowsAlternative<sp/>=<sp/>seq;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qstrcmp(qPrintable(action-&gt;objectName()),<sp/>s_appAltRev.untranslatedText())<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cutWalkThroughCurrentAppWindowsAlternativeReverse<sp/>=<sp/>seq;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="class_k_win_1_1_tab_box_1_1_tab_box_1adca588625750805b2c37a809802d2f21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1adca588625750805b2c37a809802d2f21" kindref="member">TabBox::setMode</ref>(<ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1694b3795ef31994277cdbb9d81c720d" kindref="member">mode</ref>)</highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tabBoxMode<sp/>=<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1694b3795ef31994277cdbb9d81c720d" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1694b3795ef31994277cdbb9d81c720d" kindref="member">mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858acc36245044facafcd616a8659016e4d0" kindref="member">TabBoxWindowsMode</ref>:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tabBox-&gt;setConfig(m_defaultConfig);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858ac4233e12ac7bd155576133fa2a4d00fa" kindref="member">TabBoxWindowsAlternativeMode</ref>:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tabBox-&gt;setConfig(m_alternativeConfig);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858a319c0072d749d7cda8e38048bc1c8398" kindref="member">TabBoxCurrentAppWindowsMode</ref>:</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tabBox-&gt;setConfig(m_defaultCurrentApplicationConfig);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858a5b76f09beea407d1a3d21e6939c932c0" kindref="member">TabBoxCurrentAppWindowsAlternativeMode</ref>:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tabBox-&gt;setConfig(m_alternativeCurrentApplicationConfig);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a8024cc72a79cf75e9c14d51625c81daa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a8024cc72a79cf75e9c14d51625c81daa" kindref="member">TabBox::reset</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>partial_reset)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tabBox-&gt;createModel(partial_reset);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!partial_reset)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QModelIndex<sp/>activeIndex<sp/>=<sp/>m_tabBox-&gt;index(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activeWindow());</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(activeIndex.isValid())<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a497aa38f460da818b9b1cb4511e46869" kindref="member">setCurrentIndex</ref>(activeIndex);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a497aa38f460da818b9b1cb4511e46869" kindref="member">setCurrentIndex</ref>(m_tabBox-&gt;first());</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_tabBox-&gt;currentIndex().isValid()<sp/>||<sp/>!m_tabBox-&gt;client(m_tabBox-&gt;currentIndex()))<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a497aa38f460da818b9b1cb4511e46869" kindref="member">setCurrentIndex</ref>(m_tabBox-&gt;first());</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a72049c4cc4a44a9bc6309aa23be46e18" kindref="member">tabBoxUpdated</ref>();</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a976ba90bacc25d52de18cd6dbd21cc99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a976ba90bacc25d52de18cd6dbd21cc99" kindref="member">TabBox::nextPrev</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>next)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a497aa38f460da818b9b1cb4511e46869" kindref="member">setCurrentIndex</ref>(m_tabBox-&gt;nextPrev(next),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a72049c4cc4a44a9bc6309aa23be46e18" kindref="member">tabBoxUpdated</ref>();</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1270973ac95a0838dabebf8586a9620e" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1270973ac95a0838dabebf8586a9620e" kindref="member">TabBox::currentClient</ref>()</highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*client<sp/>=<sp/>m_tabBox-&gt;<ref refid="class_k_win_1_1_window_1abe19bb40b369f778012075b9752d84eb" kindref="member">client</ref>(m_tabBox-&gt;currentIndex()))<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;hasWindow(client))<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>client;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a0c1cfe552fa9c27dd247ab1a03e1b974" refkind="member"><highlight class="normal">QList&lt;Window<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a0c1cfe552fa9c27dd247ab1a03e1b974" kindref="member">TabBox::currentClientList</ref>()</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tabBox-&gt;clientList();</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae690d9ca9e66276dffe3f3d24c822724" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae690d9ca9e66276dffe3f3d24c822724" kindref="member">TabBox::setCurrentClient</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*newClient)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a497aa38f460da818b9b1cb4511e46869" kindref="member">setCurrentIndex</ref>(m_tabBox-&gt;index(newClient));</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a497aa38f460da818b9b1cb4511e46869" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a497aa38f460da818b9b1cb4511e46869" kindref="member">TabBox::setCurrentIndex</ref>(QModelIndex<sp/>index,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>notifyEffects)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!index.isValid())<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tabBox-&gt;setCurrentIndex(index);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(notifyEffects)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a72049c4cc4a44a9bc6309aa23be46e18" kindref="member">tabBoxUpdated</ref>();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="class_k_win_1_1_tab_box_1_1_tab_box_1ada984cbde4fba1227c92bd18fb33fabd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ada984cbde4fba1227c92bd18fb33fabd" kindref="member">TabBox::haveActiveClient</ref>()</highlight></codeline>
<codeline lineno="460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tabBox-&gt;index(m_tabBox-&gt;activeClient()).isValid();</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a5da0ce76634cee59670bea4d03e9991f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a5da0ce76634cee59670bea4d03e9991f" kindref="member">TabBox::show</ref>()</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a022015d159ec1731e56daa8da6f40ea1" kindref="member">tabBoxAdded</ref>(m_tabBoxMode);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae972b83e5b098c615c3829441f6cc4a7" kindref="member">isDisplayed</ref>())<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_isShown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ac6fe3f106ae7cdbb81d38ecf31e2ba54" kindref="member">setShowingDesktop</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac173f2e2fd4c113fb54e8e498421ec69" kindref="member">reference</ref>();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isShown<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tabBox-&gt;show();</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a47cde82c2861bc24c4e8bbd693195722" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a47cde82c2861bc24c4e8bbd693195722" kindref="member">TabBox::hide</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>abort)</highlight></codeline>
<codeline lineno="478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>m_delayedShowTimer.stop();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_isShown)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_isShown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1af10109f1391136a17bfa79fb8260108f" kindref="member">unreference</ref>();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9430e324f64ad9450044173df6d2d50e" kindref="member">tabBoxClosed</ref>();</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae972b83e5b098c615c3829441f6cc4a7" kindref="member">isDisplayed</ref>())<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_TABBOX)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Tab<sp/>box<sp/>was<sp/>not<sp/>properly<sp/>closed<sp/>by<sp/>an<sp/>effect&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tabBox-&gt;hide(abort);</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabBox::reconfigure()</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>KSharedConfigPtr<sp/>c<sp/>=<sp/>kwinApp()-&gt;config();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>KConfigGroup<sp/>config<sp/>=<sp/>c-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;TabBox&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>loadConfig(c-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;TabBox&quot;</highlight><highlight class="normal">)),<sp/>m_defaultConfig);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>loadConfig(c-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;TabBoxAlternative&quot;</highlight><highlight class="normal">)),<sp/>m_alternativeConfig);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>m_defaultCurrentApplicationConfig<sp/>=<sp/>m_defaultConfig;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>m_defaultCurrentApplicationConfig.<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a5e40b8ec1b016b909e588a64a22ac6d5" kindref="member">setClientApplicationsMode</ref>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a46e9fb8b7892307c9edae626464c0cd6ae2a5e2ff29e69189332b31c0085d0061" kindref="member">TabBoxConfig::AllWindowsCurrentApplication</ref>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alternativeCurrentApplicationConfig<sp/>=<sp/>m_alternativeConfig;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alternativeCurrentApplicationConfig.<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a5e40b8ec1b016b909e588a64a22ac6d5" kindref="member">setClientApplicationsMode</ref>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a46e9fb8b7892307c9edae626464c0cd6ae2a5e2ff29e69189332b31c0085d0061" kindref="member">TabBoxConfig::AllWindowsCurrentApplication</ref>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tabBox-&gt;<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a3acd26a3cd3ecbef086d7b27cb2af0c4" kindref="member">setConfig</ref>(m_defaultConfig);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>m_delayShowTime<sp/>=<sp/>config.readEntry&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;DelayTime&quot;</highlight><highlight class="normal">,<sp/>90);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;ElectricBorder&gt;<sp/>*borders<sp/>=<sp/>&amp;m_borderActivate;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>borderConfig<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;BorderActivate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref><sp/>border<sp/>:<sp/>std::as_const(*borders))<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1aaee4026fa795568ea3217b1d70cd4234" kindref="member">unreserve</ref>(border,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>borders-&gt;clear();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringList<sp/>list<sp/>=<sp/>config.readEntry(borderConfig,<sp/>QStringList());</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;s<sp/>:<sp/>std::as_const(list))<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>s.toInt(&amp;ok);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>borders-&gt;append(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref>(i));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1a26e8b8046e90de4811253d87de67477d" kindref="member">reserve</ref>(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref>(i),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;toggle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>borders<sp/>=<sp/>&amp;m_borderAlternativeActivate;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>borderConfig<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;BorderAlternativeActivate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>touchConfig<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>config](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;key,<sp/>QHash&lt;ElectricBorder,<sp/>QAction<sp/>*&gt;<sp/>&amp;actions,<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1694b3795ef31994277cdbb9d81c720d" kindref="member">mode</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>&amp;defaults<sp/>=<sp/>QStringList{})<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fist<sp/>erase<sp/>old<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>actions.begin();<sp/>it<sp/>!=<sp/>actions.end();)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it.value();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>actions.erase(it);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>new<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>list<sp/>=<sp/>config.readEntry(key,<sp/>defaults);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;s<sp/>:<sp/>list)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>s.toInt(&amp;ok);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QAction<sp/>*a<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QAction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(a,<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::bind(&amp;TabBox::toggleMode,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1694b3795ef31994277cdbb9d81c720d" kindref="member">mode</ref>));</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1abdd24d5b332b226ad4b3b84d79979721" kindref="member">reserveTouch</ref>(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref>(i),<sp/>a);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions.insert(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref>(i),<sp/>a);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>touchConfig(QStringLiteral(</highlight><highlight class="stringliteral">&quot;TouchBorderActivate&quot;</highlight><highlight class="normal">),<sp/>m_touchActivate,<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858acc36245044facafcd616a8659016e4d0" kindref="member">TabBoxWindowsMode</ref>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>touchConfig(QStringLiteral(</highlight><highlight class="stringliteral">&quot;TouchBorderAlternativeActivate&quot;</highlight><highlight class="normal">),<sp/>m_touchAlternativeActivate,<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858ac4233e12ac7bd155576133fa2a4d00fa" kindref="member">TabBoxWindowsAlternativeMode</ref>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabBox::loadConfig(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KConfigGroup<sp/>&amp;config,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config" kindref="compound">TabBoxConfig</ref><sp/>&amp;tabBoxConfig)</highlight></codeline>
<codeline lineno="554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>tabBoxConfig.setClientDesktopMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a7fd63893079ca8ebc55c8d809b5eaeca" kindref="member">TabBoxConfig::ClientDesktopMode</ref>(</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.readEntry&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;DesktopMode&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1afbc5d7170dc3c6061bbf8cc1d28789b0" kindref="member">TabBoxConfig::defaultDesktopMode</ref>())));</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>tabBoxConfig.setClientActivitiesMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a16f043ac7461cc567bd1477d5f220381" kindref="member">TabBoxConfig::ClientActivitiesMode</ref>(</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.readEntry&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;ActivitiesMode&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a500314d8f556cc7182a13d588d363887" kindref="member">TabBoxConfig::defaultActivitiesMode</ref>())));</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>tabBoxConfig.setClientApplicationsMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a46e9fb8b7892307c9edae626464c0cd6" kindref="member">TabBoxConfig::ClientApplicationsMode</ref>(</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.readEntry&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;ApplicationsMode&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a83e9a8d5cb433b0373b56caac7a80d9f" kindref="member">TabBoxConfig::defaultApplicationsMode</ref>())));</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>tabBoxConfig.setOrderMinimizedMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a86146aece60ef883296609a11e9c53c0" kindref="member">TabBoxConfig::OrderMinimizedMode</ref>(</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.readEntry&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;OrderMinimizedMode&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a8041fd70efed8e7477ede7f46a9e0c74" kindref="member">TabBoxConfig::defaultOrderMinimizedMode</ref>())));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>tabBoxConfig.setClientMinimizedMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a389715c45c2923cface74f0f102ac5aa" kindref="member">TabBoxConfig::ClientMinimizedMode</ref>(</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.readEntry&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;MinimizedMode&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1aac9f89eeb2d72e1031bf233b5fbff975" kindref="member">TabBoxConfig::defaultMinimizedMode</ref>())));</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>tabBoxConfig.setShowDesktopMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1aba9c504446a3ee34f72fcea9e4bc8e71" kindref="member">TabBoxConfig::ShowDesktopMode</ref>(</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.readEntry&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;ShowDesktopMode&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a9f4d8c7f52168487c860e3712a93fbb1" kindref="member">TabBoxConfig::defaultShowDesktopMode</ref>())));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>tabBoxConfig.setClientMultiScreenMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1ac78441ecad3c5eee44e47f0bf1d14cb7" kindref="member">TabBoxConfig::ClientMultiScreenMode</ref>(</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.readEntry&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;MultiScreenMode&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a6d7ee0bd0d441a5d12928dbcb713c9e3" kindref="member">TabBoxConfig::defaultMultiScreenMode</ref>())));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>tabBoxConfig.setClientSwitchingMode(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a8ef8f55aba1cbb523585e20bef524628" kindref="member">TabBoxConfig::ClientSwitchingMode</ref>(</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.readEntry&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;SwitchingMode&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a319d5c490e21400612da5cacdbe990c8" kindref="member">TabBoxConfig::defaultSwitchingMode</ref>())));</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>tabBoxConfig.setShowTabBox(config.readEntry&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;ShowTabBox&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1aeabe9c76ce11950e07073191db07733f" kindref="member">TabBoxConfig::defaultShowTabBox</ref>()));</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>tabBoxConfig.setHighlightWindows(config.readEntry&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;HighlightWindows&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1adc63a2ce544bf584fe2f3233d3733d8b" kindref="member">TabBoxConfig::defaultHighlightWindow</ref>()));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>tabBoxConfig.setLayoutName(config.readEntry&lt;QString&gt;(</highlight><highlight class="stringliteral">&quot;LayoutName&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config_1a8add7c74114faaeaa7d5f9c2a1a50d74" kindref="member">TabBoxConfig::defaultLayoutName</ref>()));</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9713d69ae30759f385f97a4887dd07b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9713d69ae30759f385f97a4887dd07b6" kindref="member">TabBox::delayedShow</ref>()</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae972b83e5b098c615c3829441f6cc4a7" kindref="member">isDisplayed</ref>()<sp/>||<sp/>m_delayedShowTimer.isActive())<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>already<sp/>called<sp/>show<sp/>-<sp/>no<sp/>need<sp/>to<sp/>call<sp/>it<sp/>twice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_delayShowTime)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a5da0ce76634cee59670bea4d03e9991f" kindref="member">show</ref>();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>m_delayedShowTimer.setSingleShot(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>m_delayedShowTimer.start(m_delayShowTime);</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a044023f866a56da6a8db9490ecd9b607" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a044023f866a56da6a8db9490ecd9b607" kindref="member">TabBox::handleMouseEvent</ref>(QMouseEvent<sp/>*event)</highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_isShown<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae972b83e5b098c615c3829441f6cc4a7" kindref="member">isDisplayed</ref>())<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tabbox<sp/>has<sp/>been<sp/>replaced,<sp/>check<sp/>effects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref><sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;checkInputWindowEvent(event))<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(event-&gt;type())<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QEvent::MouseMove:</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_tabBox-&gt;containsPos(event-&gt;globalPosition().toPoint()))<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>out<sp/>all<sp/>events<sp/>which<sp/>are<sp/>not<sp/>on<sp/>the<sp/>TabBox<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>want<sp/>windows<sp/>to<sp/>react<sp/>on<sp/>the<sp/>mouse<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QEvent::MouseButtonPress:</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!m_isShown<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae972b83e5b098c615c3829441f6cc4a7" kindref="member">isDisplayed</ref>())<sp/>||<sp/>!m_tabBox-&gt;containsPos(event-&gt;globalPosition().toPoint()))<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a41bd565ec3abf42051b6d42ac0ff77a2" kindref="member">close</ref>();<sp/></highlight><highlight class="comment">//<sp/>click<sp/>outside<sp/>closes<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QEvent::MouseButtonRelease:</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>do<sp/>not<sp/>filter<sp/>it<sp/>out,<sp/>the<sp/>intenal<sp/>filter<sp/>takes<sp/>care</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626" refid="class_k_win_1_1_tab_box_1_1_tab_box_1af6940f8ece1b04922f09d10d08e016e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1af6940f8ece1b04922f09d10d08e016e2" kindref="member">TabBox::handleWheelEvent</ref>(QWheelEvent<sp/>*event)</highlight></codeline>
<codeline lineno="627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_isShown<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae972b83e5b098c615c3829441f6cc4a7" kindref="member">isDisplayed</ref>())<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tabbox<sp/>has<sp/>been<sp/>replaced,<sp/>check<sp/>effects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref><sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;checkInputWindowEvent(event))<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;angleDelta().y()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QModelIndex<sp/>index<sp/>=<sp/>m_tabBox-&gt;nextPrev(event-&gt;angleDelta().y()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index.isValid())<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a497aa38f460da818b9b1cb4511e46869" kindref="member">setCurrentIndex</ref>(index);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a42a5978bc78f1d591b6830cf143414f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a42a5978bc78f1d591b6830cf143414f0" kindref="member">TabBox::grabbedKeyEvent</ref>(QKeyEvent<sp/>*event)</highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae9d066878e968c9aa360d40ad52a0638" kindref="member">tabBoxKeyEvent</ref>(event);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_isShown<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae972b83e5b098c615c3829441f6cc4a7" kindref="member">isDisplayed</ref>())<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tabbox<sp/>has<sp/>been<sp/>replaced,<sp/>check<sp/>effects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_noModifierGrab)<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;key()<sp/>==<sp/>Qt::Key_Enter<sp/>||<sp/>event-&gt;key()<sp/>==<sp/>Qt::Key_Return<sp/>||<sp/>event-&gt;key()<sp/>==<sp/>Qt::Key_Space)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9aeebb8d321620597bd966fb02f7bfad" kindref="member">accept</ref>();</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tabBox-&gt;grabbedKeyEvent(event);</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>areModKeysDepressed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QKeySequence<sp/>&amp;seq)</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seq.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Qt::KeyboardModifiers<sp/>mod<sp/>=<sp/>seq[seq.count()<sp/>-<sp/>1].keyboardModifiers();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Qt::KeyboardModifiers<sp/>mods<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1abbd6b8583398b8c63085b8e1f3deadbc" kindref="member">modifiersRelevantForGlobalShortcuts</ref>();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mod<sp/>&amp;<sp/>Qt::ShiftModifier)<sp/>&amp;&amp;<sp/>mods.testFlag(Qt::ShiftModifier))<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mod<sp/>&amp;<sp/>Qt::ControlModifier)<sp/>&amp;&amp;<sp/>mods.testFlag(Qt::ControlModifier))<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mod<sp/>&amp;<sp/>Qt::AltModifier)<sp/>&amp;&amp;<sp/>mods.testFlag(Qt::AltModifier))<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mod<sp/>&amp;<sp/>Qt::MetaModifier)<sp/>&amp;&amp;<sp/>mods.testFlag(Qt::MetaModifier))<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabBox::navigatingThroughWindows(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forward,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QKeySequence<sp/>&amp;shortcut,<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_ready<sp/>||<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1af37c6de753dc28184d118afe16567235" kindref="member">isGrabbed</ref>())<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;<ref refid="class_k_win_1_1_options_1ad3f3aefd2daba7297a20532fc2e7b32d" kindref="member">focusPolicyIsReasonable</ref>())<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ungrabXKeyboard();<sp/>//<sp/>need<sp/>that<sp/>because<sp/>of<sp/>accelerator<sp/>raw<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>CDE<sp/>style<sp/>raise<sp/>/<sp/>lower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CDEWalkThroughWindows(forward);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(areModKeysDepressed(shortcut))<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startKDEWalkThroughWindows(forward,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1694b3795ef31994277cdbb9d81c720d" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>shortcut<sp/>has<sp/>no<sp/>modifiers,<sp/>don&apos;t<sp/>show<sp/>the<sp/>tabbox,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>grab,<sp/>but<sp/>simply<sp/>go<sp/>to<sp/>the<sp/>next<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KDEOneStepThroughWindows(forward,<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1694b3795ef31994277cdbb9d81c720d" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703" refid="class_k_win_1_1_tab_box_1_1_tab_box_1af68d90e0edf23629102c49e44bc28bad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1af68d90e0edf23629102c49e44bc28bad" kindref="member">TabBox::slotWalkThroughWindows</ref>()</highlight></codeline>
<codeline lineno="704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>navigatingThroughWindows(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>m_cutWalkThroughWindows,<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858acc36245044facafcd616a8659016e4d0" kindref="member">TabBoxWindowsMode</ref>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="class_k_win_1_1_tab_box_1_1_tab_box_1ad43b9bc1d3fd7a722c27c1004fd49ec9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ad43b9bc1d3fd7a722c27c1004fd49ec9" kindref="member">TabBox::slotWalkBackThroughWindows</ref>()</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>navigatingThroughWindows(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>m_cutWalkThroughWindowsReverse,<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858acc36245044facafcd616a8659016e4d0" kindref="member">TabBoxWindowsMode</ref>);</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a580bd8263be1d31055aea4abb5b7b0b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a580bd8263be1d31055aea4abb5b7b0b6" kindref="member">TabBox::slotWalkThroughWindowsAlternative</ref>()</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>navigatingThroughWindows(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>m_cutWalkThroughWindowsAlternative,<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858ac4233e12ac7bd155576133fa2a4d00fa" kindref="member">TabBoxWindowsAlternativeMode</ref>);</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718" refid="class_k_win_1_1_tab_box_1_1_tab_box_1abf4eaf2feb03a195732656aaeceff70b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1abf4eaf2feb03a195732656aaeceff70b" kindref="member">TabBox::slotWalkBackThroughWindowsAlternative</ref>()</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>navigatingThroughWindows(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>m_cutWalkThroughWindowsAlternativeReverse,<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858ac4233e12ac7bd155576133fa2a4d00fa" kindref="member">TabBoxWindowsAlternativeMode</ref>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a5e314de683bb534c283a90480cd0faa7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a5e314de683bb534c283a90480cd0faa7" kindref="member">TabBox::slotWalkThroughCurrentAppWindows</ref>()</highlight></codeline>
<codeline lineno="724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>navigatingThroughWindows(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>m_cutWalkThroughCurrentAppWindows,<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858a319c0072d749d7cda8e38048bc1c8398" kindref="member">TabBoxCurrentAppWindowsMode</ref>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a448b459bc3a11feea6ebf2f0e1301c69" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a448b459bc3a11feea6ebf2f0e1301c69" kindref="member">TabBox::slotWalkBackThroughCurrentAppWindows</ref>()</highlight></codeline>
<codeline lineno="729"><highlight class="normal">{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>navigatingThroughWindows(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>m_cutWalkThroughCurrentAppWindowsReverse,<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858a319c0072d749d7cda8e38048bc1c8398" kindref="member">TabBoxCurrentAppWindowsMode</ref>);</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733" refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac7a4406498fa07c8844ed20d9bf08027" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac7a4406498fa07c8844ed20d9bf08027" kindref="member">TabBox::slotWalkThroughCurrentAppWindowsAlternative</ref>()</highlight></codeline>
<codeline lineno="734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>navigatingThroughWindows(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>m_cutWalkThroughCurrentAppWindowsAlternative,<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858a5b76f09beea407d1a3d21e6939c932c0" kindref="member">TabBoxCurrentAppWindowsAlternativeMode</ref>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="class_k_win_1_1_tab_box_1_1_tab_box_1ada514e4b9b2940cdcc2b07383fd16338" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ada514e4b9b2940cdcc2b07383fd16338" kindref="member">TabBox::slotWalkBackThroughCurrentAppWindowsAlternative</ref>()</highlight></codeline>
<codeline lineno="739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>navigatingThroughWindows(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>m_cutWalkThroughCurrentAppWindowsAlternativeReverse,<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858a5b76f09beea407d1a3d21e6939c932c0" kindref="member">TabBoxCurrentAppWindowsAlternativeMode</ref>);</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabBox::shadeActivate(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*c)</highlight></codeline>
<codeline lineno="744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c-&gt;<ref refid="class_k_win_1_1_window_1abfa6caaf2d5624a4cdd2b49d20ed228c" kindref="member">shadeMode</ref>()<sp/>==<sp/><ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585faf7edb6b11c2666b2ef0da40d95f12d39" kindref="member">ShadeNormal</ref><sp/>||<sp/>c-&gt;<ref refid="class_k_win_1_1_window_1abfa6caaf2d5624a4cdd2b49d20ed228c" kindref="member">shadeMode</ref>()<sp/>==<sp/><ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585faec9cfe314b9bcc398475c383305a8174" kindref="member">ShadeHover</ref>)<sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;isShadeHover())<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="class_k_win_1_1_window_1a14232d4a0703db154fc0f506be5a675a" kindref="member">setShade</ref>(<ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585fa0efe8ab38e5c11c17415dffdf970bda6" kindref="member">ShadeActivated</ref>);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a15b1c9b968686b6154bbc5925299b1d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a15b1c9b968686b6154bbc5925299b1d2" kindref="member">TabBox::toggle</ref>(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref><sp/>eb)</highlight></codeline>
<codeline lineno="751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_borderAlternativeActivate.contains(eb))<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>toggleMode(<ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858ac4233e12ac7bd155576133fa2a4d00fa" kindref="member">TabBoxWindowsAlternativeMode</ref>);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>toggleMode(<ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858acc36245044facafcd616a8659016e4d0" kindref="member">TabBoxWindowsMode</ref>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TabBox::toggleMode(<ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;focusPolicyIsReasonable())<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ae972b83e5b098c615c3829441f6cc4a7" kindref="member">isDisplayed</ref>())<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9aeebb8d321620597bd966fb02f7bfad" kindref="member">accept</ref>();</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!establishTabBoxGrab())<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>m_noModifierGrab<sp/>=<sp/>m_tabGrab<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a246b282229b36fc27552487cdd3329d7" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_input_redirection_1a6761bebc602f211e72216e4abd5b71b5" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1a08331b9bfe253820f19d4c5634863a95" kindref="member">setEnableConstraints</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1adca588625750805b2c37a809802d2f21" kindref="member">setMode</ref>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1694b3795ef31994277cdbb9d81c720d" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a8024cc72a79cf75e9c14d51625c81daa" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a5da0ce76634cee59670bea4d03e9991f" kindref="member">show</ref>();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TabBox::startKDEWalkThroughWindows(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forward,<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!establishTabBoxGrab())<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tabGrab<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>m_noModifierGrab<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a246b282229b36fc27552487cdd3329d7" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_input_redirection_1a6761bebc602f211e72216e4abd5b71b5" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1a08331b9bfe253820f19d4c5634863a95" kindref="member">setEnableConstraints</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1adca588625750805b2c37a809802d2f21" kindref="member">setMode</ref>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1694b3795ef31994277cdbb9d81c720d" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a8024cc72a79cf75e9c14d51625c81daa" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ada984cbde4fba1227c92bd18fb33fabd" kindref="member">haveActiveClient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a976ba90bacc25d52de18cd6dbd21cc99" kindref="member">nextPrev</ref>(forward);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9713d69ae30759f385f97a4887dd07b6" kindref="member">delayedShow</ref>();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabBox::KDEWalkThroughWindows(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forward)</highlight></codeline>
<codeline lineno="806"><highlight class="normal">{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a976ba90bacc25d52de18cd6dbd21cc99" kindref="member">nextPrev</ref>(forward);</highlight></codeline>
<codeline lineno="808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabBox::CDEWalkThroughWindows(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forward)</highlight></codeline>
<codeline lineno="811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*c<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>find<sp/>the<sp/>first<sp/>suitable<sp/>client<sp/>for<sp/>unreasonable<sp/>focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>policies<sp/>-<sp/>the<sp/>topmost<sp/>one,<sp/>with<sp/>some<sp/>exceptions<sp/>(can&apos;t<sp/>be<sp/>keepabove/below,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>it<sp/>gets<sp/>stuck<sp/>on<sp/>them)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Q_ASSERT(Workspace::self()-&gt;block_stacking_updates<sp/>==<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;stackingOrder().size()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a376b811ccbcdce840e1a9838d62f802e" kindref="member">stackingOrder</ref>().at(i);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;isDeleted())<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;isClient()<sp/>&amp;&amp;<sp/>t-&gt;isOnCurrentActivity()<sp/>&amp;&amp;<sp/>t-&gt;isOnCurrentDesktop()<sp/>&amp;&amp;<sp/>!t-&gt;isSpecialWindow()</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!t-&gt;isShade()<sp/>&amp;&amp;<sp/>t-&gt;isShown()<sp/>&amp;&amp;<sp/>t-&gt;wantsTabFocus()</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!t-&gt;keepAbove()<sp/>&amp;&amp;<sp/>!t-&gt;keepBelow())<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*nc<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>options_traverse_all;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KConfigGroup<sp/>group(kwinApp()-&gt;config(),<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;TabBox&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options_traverse_all<sp/>=<sp/>group.readEntry(</highlight><highlight class="stringliteral">&quot;TraverseAll&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*firstClient<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nc<sp/>=<sp/>forward<sp/>?<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1aa01ab3c6f409e418fca2cdd06336923f" kindref="member">nextClientStatic</ref>(nc)<sp/>:<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a0bbba9bd3346afdb2fbf3ce0130e0035" kindref="member">previousClientStatic</ref>(nc);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!firstClient)<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>see<sp/>our<sp/>first<sp/>client<sp/>for<sp/>the<sp/>second<sp/>time,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>time<sp/>to<sp/>stop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstClient<sp/>=<sp/>nc;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nc<sp/>==<sp/>firstClient)<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>candidates<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nc<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nc<sp/>&amp;&amp;<sp/>nc<sp/>!=<sp/>c<sp/>&amp;&amp;<sp/>((!options_traverse_all<sp/>&amp;&amp;<sp/>!nc-&gt;isOnCurrentDesktop())<sp/>||<sp/>nc-&gt;isMinimized()<sp/>||<sp/>!nc-&gt;wantsTabFocus()<sp/>||<sp/>nc-&gt;keepAbove()<sp/>||<sp/>nc-&gt;keepBelow()<sp/>||<sp/>!nc-&gt;isOnCurrentActivity()));</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nc)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&amp;&amp;<sp/>c<sp/>!=<sp/>nc)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aac64d498c63fc4cc5ce08700d7f311b9" kindref="member">lowerWindow</ref>(c);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;<ref refid="class_k_win_1_1_options_1ad3f3aefd2daba7297a20532fc2e7b32d" kindref="member">focusPolicyIsReasonable</ref>())<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" kindref="member">activateWindow</ref>(nc);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadeActivate(nc);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nc-&gt;isOnCurrentDesktop())<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VirtualDesktopManager::self()-&gt;setCurrent(nc-&gt;desktops().constLast());</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a7af0e246269d807f7f29527ba90613ee" kindref="member">raiseWindow</ref>(nc);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabBox::KDEOneStepThroughWindows(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forward,<sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1adca588625750805b2c37a809802d2f21" kindref="member">setMode</ref>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1694b3795ef31994277cdbb9d81c720d" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a8024cc72a79cf75e9c14d51625c81daa" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ada984cbde4fba1227c92bd18fb33fabd" kindref="member">haveActiveClient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a976ba90bacc25d52de18cd6dbd21cc99" kindref="member">nextPrev</ref>(forward);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Window<sp/>*c<sp/>=<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1270973ac95a0838dabebf8586a9620e" kindref="member">currentClient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" kindref="member">activateWindow</ref>(c);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadeActivate(c);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>whether<sp/>a<sp/>key<sp/>event<sp/>matches<sp/>the<sp/>shortcut<sp/>for<sp/>a<sp/>given<sp/>mode,<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward<sp/>or<sp/>backward,<sp/>returning<sp/>the<sp/>direction,<sp/>or<sp/>Steady<sp/>for<sp/>no<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Handles<sp/>pitfalls<sp/>with<sp/>the<sp/>Shift<sp/>modifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal">TabBox::Direction<sp/>TabBox::matchShortcuts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KeyboardKeyEvent<sp/>&amp;keyEvent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QKeySequence<sp/>&amp;forward,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QKeySequence<sp/>&amp;backward)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="884"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>contains<sp/>=<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QKeySequence<sp/>&amp;shortcut,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QKeyCombination<sp/>key)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>shortcut.count();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shortcut[i]<sp/>==<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contains(forward,<sp/>keyEvent.modifiers<sp/>|<sp/>keyEvent.key))<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Forward;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contains(backward,<sp/>keyEvent.modifiers<sp/>|<sp/>keyEvent.key))<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Backward;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(keyEvent.modifiers<sp/>&amp;<sp/>Qt::ShiftModifier))<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Steady;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>testing<sp/>the<sp/>unshifted<sp/>key<sp/>(Ctrl+A<sp/>vs.<sp/>Ctrl+Shift+a<sp/>etc.),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>whether<sp/>this<sp/>is<sp/>+Shift+Tab/Backtab<sp/>and<sp/>test<sp/>that<sp/>against</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+Shift+Backtab/Tab<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyEvent.key<sp/>==<sp/>Qt::Key_Tab<sp/>||<sp/>keyEvent.key<sp/>==<sp/>Qt::Key_Backtab)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contains(forward,<sp/>keyEvent.modifiers<sp/>|<sp/>Qt::Key_Backtab)<sp/>||<sp/>contains(forward,<sp/>keyEvent.modifiers<sp/>|<sp/>Qt::Key_Tab))<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Forward;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contains(backward,<sp/>keyEvent.modifiers<sp/>|<sp/>Qt::Key_Backtab)<sp/>||<sp/>contains(backward,<sp/>keyEvent.modifiers<sp/>|<sp/>Qt::Key_Tab))<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Backward;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>shortcuts<sp/>do<sp/>not<sp/>match,<sp/>try<sp/>matching<sp/>again<sp/>after<sp/>filtering<sp/>the<sp/>shift<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>needed<sp/>to<sp/>handle<sp/>correctly<sp/>the<sp/>ALT+~<sp/>shorcut<sp/>for<sp/>example<sp/>as<sp/>it<sp/>is<sp/>coded<sp/>as<sp/>ALT+SHIFT+~<sp/>in<sp/>keyQt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contains(forward,<sp/>(keyEvent.modifiers<sp/>&amp;<sp/>~Qt::ShiftModifier)<sp/>|<sp/>keyEvent.key))<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Forward;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contains(backward,<sp/>(keyEvent.modifiers<sp/>&amp;<sp/>~Qt::ShiftModifier)<sp/>|<sp/>keyEvent.key))<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Backward;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Steady;</highlight></codeline>
<codeline lineno="926"><highlight class="normal">};</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a6bb74e5274e1138a6b1e175169572b37" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a6bb74e5274e1138a6b1e175169572b37" kindref="member">TabBox::keyPress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref><sp/>&amp;keyEvent)</highlight></codeline>
<codeline lineno="929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_tabGrab)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>Direction<sp/>direction(Steady);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;std::pair&lt;QKeySequence,<sp/>QKeySequence&gt;,<sp/><ref refid="namespace_k_win_1_1_tab_box_1a77ae9ab90719bc7b7342e88a7e4f2036" kindref="member">TABBOX_MODE_COUNT</ref>&gt;<sp/>shortcuts<sp/>=<sp/>{{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{m_cutWalkThroughWindows,<sp/>m_cutWalkThroughWindowsReverse},</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{m_cutWalkThroughWindowsAlternative,<sp/>m_cutWalkThroughWindowsAlternativeReverse},</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{m_cutWalkThroughCurrentAppWindows,<sp/>m_cutWalkThroughCurrentAppWindowsReverse},</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{m_cutWalkThroughCurrentAppWindowsAlternative,<sp/>m_cutWalkThroughCurrentAppWindowsAlternativeReverse},</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>}};</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentModeIdx<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1694b3795ef31994277cdbb9d81c720d" kindref="member">mode</ref>());</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespace_k_win_1_1_tab_box_1a77ae9ab90719bc7b7342e88a7e4f2036" kindref="member">TABBOX_MODE_COUNT</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>checking<sp/>from<sp/>the<sp/>current<sp/>mode<sp/>so<sp/>in<sp/>case<sp/>of<sp/>collision<sp/>we<sp/>stay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>(i<sp/>+<sp/>currentModeIdx)<sp/>%<sp/><ref refid="namespace_k_win_1_1_tab_box_1a77ae9ab90719bc7b7342e88a7e4f2036" kindref="member">TABBOX_MODE_COUNT</ref>;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref><sp/>testedMode<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_k_win_1aad393b058dfa58c0c3ca91c0c2b5f858" kindref="member">TabBoxMode</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(idx);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/>matchShortcuts(keyEvent,<sp/>shortcuts[idx].first,<sp/>shortcuts[idx].second);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/>Steady)<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>need<sp/>to<sp/>switch<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(testedMode<sp/>!=<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1694b3795ef31994277cdbb9d81c720d" kindref="member">mode</ref>())<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9aeebb8d321620597bd966fb02f7bfad" kindref="member">accept</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1adca588625750805b2c37a809802d2f21" kindref="member">setMode</ref>(testedMode);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>replayWithChangedTabboxMode<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>direction]()<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a8024cc72a79cf75e9c14d51625c81daa" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a976ba90bacc25d52de18cd6dbd21cc99" kindref="member">nextPrev</ref>(direction<sp/>==<sp/>Forward);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTimer::singleShot(50,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>replayWithChangedTabboxMode);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/>Steady)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyEvent.<ref refid="struct_k_win_1_1_keyboard_key_event_1a5f81ba6145bce999f32aec0b97da7548" kindref="member">key</ref><sp/>==<sp/>Qt::Key_Escape)<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a41bd565ec3abf42051b6d42ac0ff77a2" kindref="member">close</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QKeyEvent<sp/>event(QEvent::KeyPress,<sp/>keyEvent.<ref refid="struct_k_win_1_1_keyboard_key_event_1a5f81ba6145bce999f32aec0b97da7548" kindref="member">key</ref>,<sp/>Qt::NoModifier);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a42a5978bc78f1d591b6830cf143414f0" kindref="member">grabbedKeyEvent</ref>(&amp;event);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>wrap<sp/>around<sp/>list<sp/>on<sp/>key<sp/>auto-repeat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyEvent.<ref refid="struct_k_win_1_1_keyboard_key_event_1a9a3f8bbb9b2bb84fbb3a0833d11a2baa" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1a7f7309d5a83099309ac04dcb795ad0ce" kindref="member">KeyboardKeyState::Repeated</ref>)<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/>Forward<sp/>&amp;&amp;<sp/>m_tabBox-&gt;currentIndex().row()<sp/>==<sp/>m_tabBox-&gt;clientList().count()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/>Backward<sp/>&amp;&amp;<sp/>m_tabBox-&gt;currentIndex().row()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finally<sp/>apply<sp/>the<sp/>direction<sp/>to<sp/>iterate<sp/>over<sp/>the<sp/>window<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>KDEWalkThroughWindows(direction<sp/>==<sp/>Forward);</highlight></codeline>
<codeline lineno="990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a41bd565ec3abf42051b6d42ac0ff77a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a41bd565ec3abf42051b6d42ac0ff77a2" kindref="member">TabBox::close</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>abort)</highlight></codeline>
<codeline lineno="993"><highlight class="normal">{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1af37c6de753dc28184d118afe16567235" kindref="member">isGrabbed</ref>())<sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removeTabBoxGrab();</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a47cde82c2861bc24c4e8bbd693195722" kindref="member">hide</ref>(abort);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tabGrab<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>m_noModifierGrab<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a246b282229b36fc27552487cdd3329d7" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_input_redirection_1a6761bebc602f211e72216e4abd5b71b5" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1a08331b9bfe253820f19d4c5634863a95" kindref="member">setEnableConstraints</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9aeebb8d321620597bd966fb02f7bfad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9aeebb8d321620597bd966fb02f7bfad" kindref="member">TabBox::accept</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closeTabBox)</highlight></codeline>
<codeline lineno="1006"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*c<sp/>=<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a1270973ac95a0838dabebf8586a9620e" kindref="member">currentClient</ref>();</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closeTabBox)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a41bd565ec3abf42051b6d42ac0ff77a2" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" kindref="member">activateWindow</ref>(c);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadeActivate(c);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;<ref refid="class_k_win_1_1_window_1ab56044e6eff0cd7e2a144756834c0751" kindref="member">isDesktop</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ac6fe3f106ae7cdbb81d38ecf31e2ba54" kindref="member">setShowingDesktop</ref>(!<ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;showingDesktop(),<sp/>!m_defaultConfig.isHighlightWindows());</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020" refid="class_k_win_1_1_tab_box_1_1_tab_box_1adcf36925d1fd17bda4b322b65307f98b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1adcf36925d1fd17bda4b322b65307f98b" kindref="member">TabBox::modifiersReleased</ref>()</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_noModifierGrab)<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_tabGrab)<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a9aeebb8d321620597bd966fb02f7bfad" kindref="member">accept</ref>();</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034" refid="class_k_win_1_1_tab_box_1_1_tab_box_1aa01ab3c6f409e418fca2cdd06336923f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1aa01ab3c6f409e418fca2cdd06336923f" kindref="member">TabBox::nextClientStatic</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*c)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1035"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;list<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a56ba55626239671625164a73ef19f775" kindref="member">windows</ref>();</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c<sp/>||<sp/>list.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac173f2e2fd4c113fb54e8e498421ec69" kindref="member">reference</ref><sp/>=<sp/>list.indexOf(c);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac173f2e2fd4c113fb54e8e498421ec69" kindref="member">reference</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list.first();</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac173f2e2fd4c113fb54e8e498421ec69" kindref="member">reference</ref><sp/>+<sp/>1;<sp/>i<sp/>&lt;<sp/>list.count();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*candidate<sp/>=<sp/>list[i];</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(candidate-&gt;<ref refid="class_k_win_1_1_window_1a5f50be966c1885fe61b8a54e2dd584d8" kindref="member">isClient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>candidate;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrap<sp/>around</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac173f2e2fd4c113fb54e8e498421ec69" kindref="member">reference</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*candidate<sp/>=<sp/>list[i];</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(candidate-&gt;<ref refid="class_k_win_1_1_window_1a5f50be966c1885fe61b8a54e2dd584d8" kindref="member">isClient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>candidate;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064" refid="class_k_win_1_1_tab_box_1_1_tab_box_1a0bbba9bd3346afdb2fbf3ce0130e0035" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1a0bbba9bd3346afdb2fbf3ce0130e0035" kindref="member">TabBox::previousClientStatic</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*c)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1065"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;list<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a56ba55626239671625164a73ef19f775" kindref="member">windows</ref>();</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c<sp/>||<sp/>list.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac173f2e2fd4c113fb54e8e498421ec69" kindref="member">reference</ref><sp/>=<sp/>list.indexOf(c);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac173f2e2fd4c113fb54e8e498421ec69" kindref="member">reference</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list.last();</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac173f2e2fd4c113fb54e8e498421ec69" kindref="member">reference</ref><sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*candidate<sp/>=<sp/>list[i];</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(candidate-&gt;<ref refid="class_k_win_1_1_window_1a5f50be966c1885fe61b8a54e2dd584d8" kindref="member">isClient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>candidate;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrap<sp/>around</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>list.size()<sp/>-<sp/>1;<sp/>i<sp/>&gt;<sp/><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_1ac173f2e2fd4c113fb54e8e498421ec69" kindref="member">reference</ref>;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*candidate<sp/>=<sp/>list[i];</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(candidate-&gt;<ref refid="class_k_win_1_1_window_1a5f50be966c1885fe61b8a54e2dd584d8" kindref="member">isClient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>candidate;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TabBox::establishTabBoxGrab()</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>m_forcedGlobalMouseGrab<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabBox::removeTabBoxGrab()</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>m_forcedGlobalMouseGrab<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>TabBox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_tabbox.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/tabbox/tabbox.cpp"/>
  </compounddef>
</doxygen>
