<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="ftrace_8h" kind="file" language="C++">
    <compoundname>ftrace.h</compoundname>
    <includes refid="globals_8h" local="yes">effect/globals.h</includes>
    <includes local="no">QFile</includes>
    <includes local="no">QMutex</includes>
    <includes local="no">QMutexLocker</includes>
    <includes local="no">QObject</includes>
    <includes local="no">QTextStream</includes>
    <includedby refid="compositor_8cpp" local="yes">kwin/src/compositor.cpp</includedby>
    <includedby refid="ftrace_8cpp" local="yes">kwin/src/ftrace.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/ftrace.h</label>
        <link refid="ftrace_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>QCoreApplication</label>
      </node>
      <node id="10">
        <label>QFile</label>
      </node>
      <node id="5">
        <label>QImage</label>
      </node>
      <node id="11">
        <label>QMutex</label>
      </node>
      <node id="12">
        <label>QMutexLocker</label>
      </node>
      <node id="13">
        <label>QObject</label>
      </node>
      <node id="6">
        <label>QPoint</label>
      </node>
      <node id="14">
        <label>QTextStream</label>
      </node>
      <node id="7">
        <label>QVariant</label>
      </node>
      <node id="8">
        <label>QVector2D</label>
      </node>
      <node id="3">
        <label>config-kwin.h</label>
      </node>
      <node id="9">
        <label>kwin_export.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>kwin/src/compositor.cpp</label>
        <link refid="compositor_8cpp"/>
      </node>
      <node id="3">
        <label>kwin/src/ftrace.cpp</label>
        <link refid="ftrace_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/src/ftrace.h</label>
        <link refid="ftrace_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_k_win_1_1_f_trace_logger" prot="public">KWin::FTraceLogger</innerclass>
    <innerclass refid="class_k_win_1_1_f_trace_duration" prot="public">KWin::FTraceDuration</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="ftrace_8h_1aa384a200fe8fda590d73adf1ee949860" prot="public" static="no">
        <name>fTrace</name>
        <param><defname>...</defname></param>
        <initializer>    if (KWin::FTraceLogger::self()-&gt;isEnabled()) \
        KWin::FTraceLogger::self()-&gt;trace(__VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Optimised macro, arguments are only copied if tracing is enabled </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/ftrace.h" line="98" column="9" bodyfile="kwin/src/ftrace.h" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="define" id="ftrace_8h_1a38ce836487e4e050d29fb479c0b3cb80" prot="public" static="no">
        <name>fTraceDuration</name>
        <param><defname>...</defname></param>
        <initializer>    std::unique_ptr&lt;<ref refid="class_k_win_1_1_f_trace_duration" kindref="compound">KWin::FTraceDuration</ref>&gt; _duration(KWin::FTraceLogger::self()-&gt;isEnabled() ? new <ref refid="class_k_win_1_1_f_trace_duration" kindref="compound">KWin::FTraceDuration</ref>(__VA_ARGS__) : nullptr);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Will insert two markers into the log. Once when called, and the second at the end of the relevant block In GPUVis this will appear as a timed block with begin_ctx and end_ctx markers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/ftrace.h" line="106" column="9" bodyfile="kwin/src/ftrace.h" bodystart="106" bodyend="107"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>David<sp/>Edmundson<sp/>&lt;davidedmundson@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globals_8h" kindref="compound">effect/globals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QFile&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QMutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QMutexLocker&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QObject&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTextStream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30" refid="class_k_win_1_1_f_trace_logger" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KWIN_EXPORT<sp/><ref refid="class_k_win_1_1_f_trace_logger" kindref="compound">FTraceLogger</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_CLASSINFO(</highlight><highlight class="stringliteral">&quot;D-Bus<sp/>Interface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;org.kde.kwin.FTrace&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34" refid="class_k_win_1_1_f_trace_logger_1a30a96dd096ed67d50cc26bba07082057" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_f_trace_logger_1a30a96dd096ed67d50cc26bba07082057" kindref="member">isEnabled</ref><sp/>READ<sp/><ref refid="class_k_win_1_1_f_trace_logger_1a30a96dd096ed67d50cc26bba07082057" kindref="member">isEnabled</ref><sp/>NOTIFY<sp/><ref refid="class_k_win_1_1_f_trace_logger_1a9bc3b184bc01161a641374cbb00f5f5a" kindref="member">enabledChanged</ref>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_f_trace_logger_1a30a96dd096ed67d50cc26bba07082057" kindref="member">isEnabled</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="47" refid="class_k_win_1_1_f_trace_logger_1a2896ffeab4d927de41d10c0dde1170a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_f_trace_logger_1a2896ffeab4d927de41d10c0dde1170a8" kindref="member">trace</ref>(Args...<sp/>args)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_f_trace_logger_1a30a96dd096ed67d50cc26bba07082057" kindref="member">isEnabled</ref>());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMutexLocker<sp/>lock(&amp;m_mutex);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_file.isOpen())<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTextStream<sp/>stream(&amp;m_file);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(stream<sp/>&lt;&lt;<sp/>...<sp/>&lt;&lt;<sp/>args)<sp/>&lt;&lt;<sp/>Qt::endl;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="59" refid="class_k_win_1_1_f_trace_logger_1a9bc3b184bc01161a641374cbb00f5f5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_f_trace_logger_1a9bc3b184bc01161a641374cbb00f5f5a" kindref="member">enabledChanged</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Q_SLOTS:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_SCRIPTABLE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_f_trace_logger_1a9f348f9289d22a5fad460be326440c31" kindref="member">setEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QString<sp/>filePath();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>open();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/>m_file;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>QMutex<sp/>m_mutex;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="globals_8h_1a1aeaa8101b0da8b34534aa7dccfdc166" kindref="member">KWIN_SINGLETON</ref>(<ref refid="class_k_win_1_1_f_trace_logger" kindref="compound">FTraceLogger</ref>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_k_win_1_1_f_trace_duration" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KWIN_EXPORT<sp/><ref refid="class_k_win_1_1_f_trace_duration_1a4a599b3328585a935ec24e2357c7daff" kindref="member">FTraceDuration</ref></highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="76" refid="class_k_win_1_1_f_trace_duration_1a4a599b3328585a935ec24e2357c7daff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_f_trace_duration_1a4a599b3328585a935ec24e2357c7daff" kindref="member">FTraceDuration</ref>(Args...<sp/>args)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QAtomicInteger&lt;quint32&gt;<sp/>s_context<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTextStream<sp/>stream(&amp;m_message);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(stream<sp/>&lt;&lt;<sp/>...<sp/>&lt;&lt;<sp/>args);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream.flush();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_context<sp/>=<sp/>++s_context;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FTraceLogger::self()-&gt;trace(m_message,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>begin_ctx=&quot;</highlight><highlight class="normal">,<sp/>m_context);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_f_trace_duration" kindref="compound">~FTraceDuration</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>m_message;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>m_context;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="ftrace_8h_1aa384a200fe8fda590d73adf1ee949860" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fTrace(...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(KWin::FTraceLogger::self()-&gt;isEnabled())<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KWin::FTraceLogger::self()-&gt;trace(__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="ftrace_8h_1a38ce836487e4e050d29fb479c0b3cb80" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fTraceDuration(...)<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWin::FTraceDuration&gt;<sp/>_duration(KWin::FTraceLogger::self()-&gt;isEnabled()<sp/>?<sp/>new<sp/>KWin::FTraceDuration(__VA_ARGS__)<sp/>:<sp/>nullptr);</highlight></codeline>
    </programlisting>
    <location file="kwin/src/ftrace.h"/>
  </compounddef>
</doxygen>
