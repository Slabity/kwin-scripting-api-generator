<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="surface_8cpp" kind="file" language="C++">
    <compoundname>surface.cpp</compoundname>
    <includes refid="surface_8h" local="yes">surface.h</includes>
    <includes refid="wayland_2blur_8h" local="yes">blur.h</includes>
    <includes refid="clientconnection_8h" local="yes">clientconnection.h</includes>
    <includes refid="colormanagement__v1_8h" local="yes">colormanagement_v1.h</includes>
    <includes refid="wayland_2compositor_8h" local="yes">compositor.h</includes>
    <includes refid="wayland_2contrast_8h" local="yes">contrast.h</includes>
    <includes refid="display_8h" local="yes">display.h</includes>
    <includes refid="fractionalscale__v1__p_8h" local="yes">fractionalscale_v1_p.h</includes>
    <includes refid="frog__colormanagement__v1_8h" local="yes">frog_colormanagement_v1.h</includes>
    <includes refid="idleinhibit__v1__p_8h" local="yes">idleinhibit_v1_p.h</includes>
    <includes refid="linux__drm__syncobj__v1_8h" local="yes">linux_drm_syncobj_v1.h</includes>
    <includes refid="linuxdmabufv1clientbuffer_8h" local="yes">linuxdmabufv1clientbuffer.h</includes>
    <includes refid="wayland_2output_8h" local="yes">output.h</includes>
    <includes refid="pointerconstraints__v1__p_8h" local="yes">pointerconstraints_v1_p.h</includes>
    <includes refid="presentationtime_8h" local="yes">presentationtime.h</includes>
    <includes refid="region__p_8h" local="yes">region_p.h</includes>
    <includes refid="wayland_2shadow_8h" local="yes">shadow.h</includes>
    <includes refid="wayland_2slide_8h" local="yes">slide.h</includes>
    <includes refid="subcompositor_8h" local="yes">subcompositor.h</includes>
    <includes refid="surface__p_8h" local="yes">surface_p.h</includes>
    <includes refid="transaction_8h" local="yes">transaction.h</includes>
    <includes refid="resource_8h" local="yes">utils/resource.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cmath</includes>
    <includes local="no">drm_fourcc.h</includes>
    <includes local="no">wayland-server.h</includes>
    <includes local="yes">moc_surface.cpp</includes>
    <incdepgraph>
      <node id="3">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>utils/resource.h</label>
        <link refid="resource_8h"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>blur.h</label>
        <link refid="wayland_2blur_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>clientconnection.h</label>
        <link refid="clientconnection_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>colormanagement_v1.h</label>
        <link refid="colormanagement__v1_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>compositor.h</label>
        <link refid="wayland_2compositor_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>contrast.h</label>
        <link refid="wayland_2contrast_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>display.h</label>
        <link refid="display_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>fractionalscale_v1_p.h</label>
        <link refid="fractionalscale__v1__p_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>frog_colormanagement_v1.h</label>
        <link refid="frog__colormanagement__v1_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>idleinhibit_v1.h</label>
        <link refid="idleinhibit__v1_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>idleinhibit_v1_p.h</label>
        <link refid="idleinhibit__v1__p_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>linux_drm_syncobj_v1.h</label>
        <link refid="linux__drm__syncobj__v1_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>linuxdmabufv1clientbuffer.h</label>
        <link refid="linuxdmabufv1clientbuffer_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>output.h</label>
        <link refid="wayland_2output_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>pointerconstraints_v1.h</label>
        <link refid="pointerconstraints__v1_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>pointerconstraints_v1_p.h</label>
        <link refid="pointerconstraints__v1__p_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>presentationtime.h</label>
        <link refid="presentationtime_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>region_p.h</label>
        <link refid="region__p_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>shadow.h</label>
        <link refid="wayland_2shadow_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>slide.h</label>
        <link refid="wayland_2slide_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>subcompositor.h</label>
        <link refid="subcompositor_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/surface.cpp</label>
        <link refid="surface_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>surface.h</label>
        <link refid="surface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>surface_p.h</label>
        <link refid="surface__p_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>QByteArray</label>
      </node>
      <node id="37">
        <label>QColor</label>
      </node>
      <node id="12">
        <label>QCoreApplication</label>
      </node>
      <node id="21">
        <label>QDebug</label>
      </node>
      <node id="51">
        <label>QHash</label>
      </node>
      <node id="13">
        <label>QImage</label>
      </node>
      <node id="19">
        <label>QList</label>
      </node>
      <node id="64">
        <label>QMarginsF</label>
      </node>
      <node id="5">
        <label>QMatrix4x4</label>
      </node>
      <node id="16">
        <label>QObject</label>
      </node>
      <node id="14">
        <label>QPoint</label>
      </node>
      <node id="27">
        <label>QPointer</label>
      </node>
      <node id="22">
        <label>QRect</label>
      </node>
      <node id="29">
        <label>QRegion</label>
      </node>
      <node id="52">
        <label>QSet</label>
      </node>
      <node id="20">
        <label>QSize</label>
      </node>
      <node id="23">
        <label>QUuid</label>
      </node>
      <node id="15">
        <label>QVariant</label>
      </node>
      <node id="6">
        <label>QVector2D</label>
      </node>
      <node id="75">
        <label>algorithm</label>
      </node>
      <node id="59">
        <label>chrono</label>
      </node>
      <node id="76">
        <label>cmath</label>
      </node>
      <node id="11">
        <label>config-kwin.h</label>
      </node>
      <node id="68">
        <label>deque</label>
      </node>
      <node id="77">
        <label>drm_fourcc.h</label>
      </node>
      <node id="70">
        <label>functional</label>
      </node>
      <node id="7">
        <label>kwin_export.h</label>
      </node>
      <node id="73">
        <label>limits</label>
      </node>
      <node id="28">
        <label>memory</label>
      </node>
      <node id="78">
        <label>moc_surface.cpp</label>
      </node>
      <node id="4">
        <label>optional</label>
      </node>
      <node id="40">
        <label>qwayland-server-fractional-scale-v1.h</label>
      </node>
      <node id="45">
        <label>qwayland-server-idle-inhibit-unstable-v1.h</label>
      </node>
      <node id="47">
        <label>qwayland-server-linux-drm-syncobj-v1.h</label>
      </node>
      <node id="57">
        <label>qwayland-server-pointer-constraints-unstable-v1.h</label>
      </node>
      <node id="62">
        <label>qwayland-server-wayland.h</label>
      </node>
      <node id="32">
        <label>sys/types.h</label>
      </node>
      <node id="74">
        <label>type_traits</label>
      </node>
      <node id="50">
        <label>utility</label>
      </node>
      <node id="71">
        <label>vector</label>
      </node>
      <node id="53">
        <label>wayland-server.h</label>
      </node>
      <node id="34">
        <label>wayland/qwayland-server-color-management-v1.h</label>
      </node>
      <node id="42">
        <label>wayland/qwayland-server-frog-color-management-v1.h</label>
      </node>
      <node id="60">
        <label>wayland/qwayland-server-presentation-time.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2014<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface_8h" kindref="compound">surface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland_2blur_8h" kindref="compound">blur.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="clientconnection_8h" kindref="compound">clientconnection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colormanagement__v1_8h" kindref="compound">colormanagement_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland_2compositor_8h" kindref="compound">compositor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland_2contrast_8h" kindref="compound">contrast.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fractionalscale__v1__p_8h" kindref="compound">fractionalscale_v1_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="frog__colormanagement__v1_8h" kindref="compound">frog_colormanagement_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="idleinhibit__v1__p_8h" kindref="compound">idleinhibit_v1_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linux__drm__syncobj__v1_8h" kindref="compound">linux_drm_syncobj_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linuxdmabufv1clientbuffer_8h" kindref="compound">linuxdmabufv1clientbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland_2output_8h" kindref="compound">output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointerconstraints__v1__p_8h" kindref="compound">pointerconstraints_v1_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="presentationtime_8h" kindref="compound">presentationtime.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="region__p_8h" kindref="compound">region_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland_2shadow_8h" kindref="compound">shadow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland_2slide_8h" kindref="compound">slide.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="subcompositor_8h" kindref="compound">subcompositor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface__p_8h" kindref="compound">surface_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="transaction_8h" kindref="compound">transaction.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="resource_8h" kindref="compound">utils/resource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drm_fourcc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wayland-server.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QRegion<sp/>map_helper(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>&amp;matrix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>QRegion<sp/>result;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect<sp/>:<sp/>region)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>matrix.mapRect(QRectF(rect)).toAlignedRect();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_k_win_1_1_surface_role_1af45a87a00a3134d208075f92cde8b844" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_role_1af45a87a00a3134d208075f92cde8b844" kindref="member">SurfaceRole::SurfaceRole</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;<ref refid="class_k_win_1_1_surface_role_1a411cfed0650df13c4094fbc76ddca2a2" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_name(<ref refid="class_k_win_1_1_surface_role_1a411cfed0650df13c4094fbc76ddca2a2" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_k_win_1_1_surface_role_1a411cfed0650df13c4094fbc76ddca2a2" refkind="member"><highlight class="normal">QByteArray<sp/><ref refid="class_k_win_1_1_surface_role_1a411cfed0650df13c4094fbc76ddca2a2" kindref="member">SurfaceRole::name</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="53"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_name;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_k_win_1_1_surface_interface_private_1ab2122db84a98ba24dad882edb2c65e7e" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface_private_1ab2122db84a98ba24dad882edb2c65e7e" kindref="member">SurfaceInterfacePrivate::SurfaceInterfacePrivate</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>(<ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>(std::make_unique&lt;<ref refid="struct_k_win_1_1_surface_state" kindref="compound">SurfaceState</ref>&gt;())</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>(std::make_unique&lt;<ref refid="struct_k_win_1_1_surface_state" kindref="compound">SurfaceState</ref>&gt;())</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_k_win_1_1_surface_interface_private_1ab31cacafc2ccbd1f0dce2ce2ce6c6ecd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab31cacafc2ccbd1f0dce2ce2ce6c6ecd" kindref="member">SurfaceInterfacePrivate::addChild</ref>(<ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*child)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>protocol<sp/>is<sp/>not<sp/>precise<sp/>on<sp/>how<sp/>to<sp/>handle<sp/>the<sp/>addition<sp/>of<sp/>new<sp/>sub<sp/>surfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;subsurface.above.append(child);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.above.append(child);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>.transaction)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>.transaction-&gt;amend(<ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>,<sp/>[child](<ref refid="struct_k_win_1_1_surface_state" kindref="compound">SurfaceState</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_k_win_1_1_surface_state_1a8ed409c43fbe1f5e8cc51e3f7fd05bd7" kindref="member">subsurface</ref>.<ref refid="struct_k_win_1_1_surface_state_1af7256df53f9ae2675cfba78dade7c10f" kindref="member">above</ref>.append(child);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1adc738604031e36fd242b8d6099653d20" kindref="member">firstTransaction</ref>;<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref>;<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref>-&gt;next(<ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>))<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref>-&gt;amend(<ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>,<sp/>[child](<ref refid="struct_k_win_1_1_surface_state" kindref="compound">SurfaceState</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_k_win_1_1_surface_state_1a8ed409c43fbe1f5e8cc51e3f7fd05bd7" kindref="member">subsurface</ref>.<ref refid="struct_k_win_1_1_surface_state_1af7256df53f9ae2675cfba78dade7c10f" kindref="member">above</ref>.append(child);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>child-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1a835e595db96452e83d9bcc23b3e48d68" kindref="member">surface</ref>()-&gt;<ref refid="class_k_win_1_1_surface_interface_1abad9449df6afe4574c7f48f3a31f53a3" kindref="member">setOutputs</ref>(<ref refid="class_k_win_1_1_surface_interface_private_1a1b3c3318484cd9df2b45c58567ca0f8e" kindref="member">outputs</ref>,<sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab24e4533a32a6e859a92f0336aa23e28" kindref="member">primaryOutput</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a5a59e0edbf210b6dc5b47129828466ff" kindref="member">preferredBufferScale</ref>.has_value())<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1a835e595db96452e83d9bcc23b3e48d68" kindref="member">surface</ref>()-&gt;<ref refid="class_k_win_1_1_surface_interface_1a361edd675ef00ecf53b25cc0886993ea" kindref="member">setPreferredBufferScale</ref>(<ref refid="class_k_win_1_1_surface_interface_private_1a5a59e0edbf210b6dc5b47129828466ff" kindref="member">preferredBufferScale</ref>.value());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1aec81c2bf09ac8d3c0c292e0661568a9e" kindref="member">preferredBufferTransform</ref>.has_value())<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1a835e595db96452e83d9bcc23b3e48d68" kindref="member">surface</ref>()-&gt;<ref refid="class_k_win_1_1_surface_interface_1a4d261ead21e8952d3b136fb17e60a0cb" kindref="member">setPreferredBufferTransform</ref>(<ref refid="class_k_win_1_1_surface_interface_private_1aec81c2bf09ac8d3c0c292e0661568a9e" kindref="member">preferredBufferTransform</ref>.value());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1afcd49f43dced8e03f6e6fad96d4d80e8" kindref="member">preferredColorDescription</ref>)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1a835e595db96452e83d9bcc23b3e48d68" kindref="member">surface</ref>()-&gt;<ref refid="class_k_win_1_1_surface_interface_1ac68a339a2abcc856493392bed36087e9" kindref="member">setPreferredColorDescription</ref>(<ref refid="class_k_win_1_1_surface_interface_private_1afcd49f43dced8e03f6e6fad96d4d80e8" kindref="member">preferredColorDescription</ref>.value());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;childSubSurfaceAdded(child);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;childSubSurfacesChanged();</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_k_win_1_1_surface_interface_private_1a60725cf75d1979aa830bb699a33565ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a60725cf75d1979aa830bb699a33565ff" kindref="member">SurfaceInterfacePrivate::removeChild</ref>(<ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*child)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>protocol<sp/>is<sp/>not<sp/>precise<sp/>on<sp/>how<sp/>to<sp/>handle<sp/>the<sp/>addition<sp/>of<sp/>new<sp/>sub<sp/>surfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;subsurface.below.removeAll(child);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;subsurface.above.removeAll(child);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.below.removeAll(child);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.above.removeAll(child);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>.transaction)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>.transaction-&gt;amend(<ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>,<sp/>[child](<ref refid="struct_k_win_1_1_surface_state" kindref="compound">SurfaceState</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_k_win_1_1_surface_state_1a8ed409c43fbe1f5e8cc51e3f7fd05bd7" kindref="member">subsurface</ref>.<ref refid="struct_k_win_1_1_surface_state_1a87afd84c4b28dfe395b0867af74a2440" kindref="member">below</ref>.removeOne(child);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_k_win_1_1_surface_state_1a8ed409c43fbe1f5e8cc51e3f7fd05bd7" kindref="member">subsurface</ref>.<ref refid="struct_k_win_1_1_surface_state_1af7256df53f9ae2675cfba78dade7c10f" kindref="member">above</ref>.removeOne(child);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1adc738604031e36fd242b8d6099653d20" kindref="member">firstTransaction</ref>;<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref>;<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref>-&gt;next(<ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>))<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref>-&gt;amend(<ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>,<sp/>[child](<ref refid="struct_k_win_1_1_surface_state" kindref="compound">SurfaceState</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_k_win_1_1_surface_state_1a8ed409c43fbe1f5e8cc51e3f7fd05bd7" kindref="member">subsurface</ref>.<ref refid="struct_k_win_1_1_surface_state_1a87afd84c4b28dfe395b0867af74a2440" kindref="member">below</ref>.removeOne(child);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_k_win_1_1_surface_state_1a8ed409c43fbe1f5e8cc51e3f7fd05bd7" kindref="member">subsurface</ref>.<ref refid="struct_k_win_1_1_surface_state_1af7256df53f9ae2675cfba78dade7c10f" kindref="member">above</ref>.removeOne(child);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;childSubSurfaceRemoved(child);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;childSubSurfacesChanged();</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_k_win_1_1_surface_interface_private_1a1a4d62dcdf8b905f51f911da283e26ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1a4d62dcdf8b905f51f911da283e26ca" kindref="member">SurfaceInterfacePrivate::raiseChild</ref>(<ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>,<sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*anchor)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>-&gt;parentSurface()<sp/>==<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;SubSurfaceInterface<sp/>*&gt;<sp/>*anchorList;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorIndex;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.below.removeOne(<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.above.removeOne(<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor<sp/>==<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pretend<sp/>as<sp/>if<sp/>the<sp/>parent<sp/>surface<sp/>were<sp/>before<sp/>the<sp/>first<sp/>child<sp/>in<sp/>the<sp/>above<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchorList<sp/>=<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.above;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchorIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchorIndex<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.above.indexOf(anchor-&gt;<ref refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" kindref="member">subSurface</ref>());<sp/>anchorIndex<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchorList<sp/>=<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.above;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchorIndex<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.below.indexOf(anchor-&gt;<ref refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" kindref="member">subSurface</ref>());<sp/>anchorIndex<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchorList<sp/>=<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.below;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>anchor<sp/>belongs<sp/>to<sp/>other<sp/>sub-surface<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>anchorList-&gt;insert(anchorIndex<sp/>+<sp/>1,<sp/><ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurfaceOrderChanged<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="class_k_win_1_1_surface_interface_private_1aea9828f4e71f7d721e74bba655a059db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1aea9828f4e71f7d721e74bba655a059db" kindref="member">SurfaceInterfacePrivate::lowerChild</ref>(<ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>,<sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*anchor)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>-&gt;parentSurface()<sp/>==<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;SubSurfaceInterface<sp/>*&gt;<sp/>*anchorList;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorIndex;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.below.removeOne(<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.above.removeOne(<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor<sp/>==<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pretend<sp/>as<sp/>if<sp/>the<sp/>parent<sp/>surface<sp/>were<sp/>after<sp/>the<sp/>last<sp/>child<sp/>in<sp/>the<sp/>below<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchorList<sp/>=<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.below;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchorIndex<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.below.count();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchorIndex<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.above.indexOf(anchor-&gt;<ref refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" kindref="member">subSurface</ref>());<sp/>anchorIndex<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchorList<sp/>=<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.above;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchorIndex<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.below.indexOf(anchor-&gt;<ref refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" kindref="member">subSurface</ref>());<sp/>anchorIndex<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchorList<sp/>=<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.below;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>anchor<sp/>belongs<sp/>to<sp/>other<sp/>sub-surface<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>anchorList-&gt;insert(anchorIndex,<sp/><ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurfaceOrderChanged<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="class_k_win_1_1_surface_interface_private_1a5eb6ac150c2e5a326ef6fc77fe77f92a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a5eb6ac150c2e5a326ef6fc77fe77f92a" kindref="member">SurfaceInterfacePrivate::setShadow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointer&lt;ShadowInterface&gt;<sp/>&amp;shadow)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;shadow<sp/>=<sp/>shadow;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;shadowIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_k_win_1_1_surface_interface_private_1a183bcfb0f9e3f37f86fbba6150dd74b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a183bcfb0f9e3f37f86fbba6150dd74b7" kindref="member">SurfaceInterfacePrivate::setBlur</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointer&lt;BlurInterface&gt;<sp/>&amp;blur)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;blur<sp/>=<sp/>blur;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;blurIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_k_win_1_1_surface_interface_private_1aefa0413dc0a4022f1e0d397c7fe0551e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1aefa0413dc0a4022f1e0d397c7fe0551e" kindref="member">SurfaceInterfacePrivate::setSlide</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointer&lt;SlideInterface&gt;<sp/>&amp;slide)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;slide<sp/>=<sp/>slide;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;slideIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="class_k_win_1_1_surface_interface_private_1a12904473202b5687e104a603acea4266" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a12904473202b5687e104a603acea4266" kindref="member">SurfaceInterfacePrivate::setContrast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointer&lt;ContrastInterface&gt;<sp/>&amp;contrast)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;contrast<sp/>=<sp/>contrast;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;contrastIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="class_k_win_1_1_surface_interface_private_1a8e31e2e2a2e6e86ba0b921b5ebb9d452" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a8e31e2e2a2e6e86ba0b921b5ebb9d452" kindref="member">SurfaceInterfacePrivate::installPointerConstraint</ref>(<ref refid="class_k_win_1_1_locked_pointer_v1_interface" kindref="compound">LockedPointerV1Interface</ref><sp/>*lock)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!<ref refid="class_k_win_1_1_surface_interface_private_1a9f3c9805e77842f304059c22ffd8fdb5" kindref="member">lockedPointer</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!<ref refid="class_k_win_1_1_surface_interface_private_1a1ae056e325be763714db0556876b4ade" kindref="member">confinedPointer</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a9f3c9805e77842f304059c22ffd8fdb5" kindref="member">lockedPointer</ref><sp/>=<sp/>lock;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cleanUp<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a9f3c9805e77842f304059c22ffd8fdb5" kindref="member">lockedPointer</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject::disconnect(constrainsOneShotConnection);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constrainsOneShotConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject::disconnect(constrainsUnboundConnection);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constrainsUnboundConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;pointerConstraintsChanged();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lock-&gt;<ref refid="class_k_win_1_1_locked_pointer_v1_interface_1ae3ce8e22e8796b6c1423e82ab542769d" kindref="member">lifeTime</ref>()<sp/>==<sp/><ref refid="class_k_win_1_1_locked_pointer_v1_interface_1a6898cb9ae5dae696ff59959f040f8193ac7fc2ee61fad0e2bba6754efdee31481" kindref="member">LockedPointerV1Interface::LifeTime::OneShot</ref>)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constrainsOneShotConnection<sp/>=<sp/>QObject::connect(lock,<sp/>&amp;<ref refid="class_k_win_1_1_locked_pointer_v1_interface_1a29cd197400c6713f86da269db910eebc" kindref="member">LockedPointerV1Interface::lockedChanged</ref>,<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>cleanUp]<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a9f3c9805e77842f304059c22ffd8fdb5" kindref="member">lockedPointer</ref>-&gt;isLocked())<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cleanUp();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>constrainsUnboundConnection<sp/>=<sp/>QObject::connect(lock,<sp/>&amp;LockedPointerV1Interface::destroyed,<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>,<sp/>cleanUp);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;pointerConstraintsChanged();</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="class_k_win_1_1_surface_interface_private_1a610f0b5b41fe1f54b22e4485300de441" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a8e31e2e2a2e6e86ba0b921b5ebb9d452" kindref="member">SurfaceInterfacePrivate::installPointerConstraint</ref>(<ref refid="class_k_win_1_1_confined_pointer_v1_interface" kindref="compound">ConfinedPointerV1Interface</ref><sp/>*confinement)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!<ref refid="class_k_win_1_1_surface_interface_private_1a9f3c9805e77842f304059c22ffd8fdb5" kindref="member">lockedPointer</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!<ref refid="class_k_win_1_1_surface_interface_private_1a1ae056e325be763714db0556876b4ade" kindref="member">confinedPointer</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1ae056e325be763714db0556876b4ade" kindref="member">confinedPointer</ref><sp/>=<sp/>confinement;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cleanUp<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1ae056e325be763714db0556876b4ade" kindref="member">confinedPointer</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject::disconnect(constrainsOneShotConnection);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constrainsOneShotConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject::disconnect(constrainsUnboundConnection);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constrainsUnboundConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;pointerConstraintsChanged();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(confinement-&gt;<ref refid="class_k_win_1_1_confined_pointer_v1_interface_1ae2f933e168d6f2d925806dbcadfa9f89" kindref="member">lifeTime</ref>()<sp/>==<sp/><ref refid="class_k_win_1_1_confined_pointer_v1_interface_1a23910b34807f67d27d7b09bedce41b3aac7fc2ee61fad0e2bba6754efdee31481" kindref="member">ConfinedPointerV1Interface::LifeTime::OneShot</ref>)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constrainsOneShotConnection<sp/>=<sp/>QObject::connect(confinement,<sp/>&amp;<ref refid="class_k_win_1_1_confined_pointer_v1_interface_1ac1184dd32b6d396089635063fa656f06" kindref="member">ConfinedPointerV1Interface::confinedChanged</ref>,<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>cleanUp]<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a1ae056e325be763714db0556876b4ade" kindref="member">confinedPointer</ref>-&gt;isConfined())<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cleanUp();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>constrainsUnboundConnection<sp/>=<sp/>QObject::connect(confinement,<sp/>&amp;ConfinedPointerV1Interface::destroyed,<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>,<sp/>cleanUp);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;pointerConstraintsChanged();</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="class_k_win_1_1_surface_interface_private_1a138e7a1590fa6ec5484d2e246538fa61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a138e7a1590fa6ec5484d2e246538fa61" kindref="member">SurfaceInterfacePrivate::installIdleInhibitor</ref>(<ref refid="class_k_win_1_1_idle_inhibitor_v1_interface" kindref="compound">IdleInhibitorV1Interface</ref><sp/>*inhibitor)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1aac53996351af94c8c36effddfd75ce3f" kindref="member">idleInhibitors</ref><sp/>&lt;&lt;<sp/>inhibitor;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1aac53996351af94c8c36effddfd75ce3f" kindref="member">idleInhibitors</ref>.count()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;inhibitsIdleChanged();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="class_k_win_1_1_surface_interface_private_1a15e0792173d2b508b10507848733c3d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a15e0792173d2b508b10507848733c3d1" kindref="member">SurfaceInterfacePrivate::removeIdleInhibitor</ref>(<ref refid="class_k_win_1_1_idle_inhibitor_v1_interface" kindref="compound">IdleInhibitorV1Interface</ref><sp/>*inhibitor)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1aac53996351af94c8c36effddfd75ce3f" kindref="member">idleInhibitors</ref>.removeOne(inhibitor);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1aac53996351af94c8c36effddfd75ce3f" kindref="member">idleInhibitors</ref>.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;inhibitsIdleChanged();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="class_k_win_1_1_surface_interface_private_1a6c427231e71c5bc17a0e976c251f2fce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a6c427231e71c5bc17a0e976c251f2fce" kindref="member">SurfaceInterfacePrivate::surface_destroy_resource</ref>(Resource<sp/>*)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;aboutToBeDestroyed();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="class_k_win_1_1_surface_interface_private_1a3372d7a04035de70a3a755c8db9cd984" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a3372d7a04035de70a3a755c8db9cd984" kindref="member">SurfaceInterfacePrivate::surface_destroy</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="class_k_win_1_1_surface_interface_private_1a98fc07e7fd3540d8a4d4640f7a2523e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a98fc07e7fd3540d8a4d4640f7a2523e3" kindref="member">SurfaceInterfacePrivate::surface_attach</ref>(Resource<sp/>*resource,<sp/>struct<sp/>::wl_resource<sp/>*buffer,<sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_resource_get_version(resource-&gt;handle)<sp/>&gt;=<sp/>WL_SURFACE_OFFSET_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>!=<sp/>0<sp/>||<sp/>y<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_invalid_offset,<sp/></highlight><highlight class="stringliteral">&quot;wl_surface.attach<sp/>offset<sp/>must<sp/>be<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;offset<sp/>=<sp/>QPoint(x,<sp/>y);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;bufferIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buffer)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>got<sp/>a<sp/>null<sp/>buffer,<sp/>deletes<sp/>content<sp/>in<sp/>next<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;buffer<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;damage<sp/>=<sp/>QRegion();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;bufferDamage<sp/>=<sp/>QRegion();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;buffer<sp/>=<sp/><ref refid="class_k_win_1_1_display_1a374a4d7de3f7a40aed96a879dc92b497" kindref="member">Display::bufferForResource</ref>(buffer);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="class_k_win_1_1_surface_interface_private_1a6b446d66db4c0e3a737e09fa086d98fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a6b446d66db4c0e3a737e09fa086d98fd" kindref="member">SurfaceInterfacePrivate::surface_damage</ref>(Resource<sp/>*,<sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/>int32_t<sp/>width,<sp/>int32_t<sp/>height)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;damage<sp/>+=<sp/>QRect(x,<sp/>y,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="class_k_win_1_1_surface_interface_private_1a560d8e3efe821fda46f18de722cf0a0f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a560d8e3efe821fda46f18de722cf0a0f" kindref="member">SurfaceInterfacePrivate::surface_frame</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>callback)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource<sp/>*callbackResource<sp/>=<sp/>wl_resource_create(resource-&gt;client(),</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;wl_callback_interface,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal"><sp/>1,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callbackResource)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(resource-&gt;handle);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_set_implementation(callbackResource,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>[](wl_resource<sp/>*resource)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(wl_resource_get_link(resource));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_list_insert(<ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;frameCallbacks.prev,<sp/>wl_resource_get_link(callbackResource));</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="class_k_win_1_1_surface_interface_private_1ad1d94179ce4b88e104afe3b347d6527b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1ad1d94179ce4b88e104afe3b347d6527b" kindref="member">SurfaceInterfacePrivate::surface_set_opaque_region</ref>(Resource<sp/>*resource,<sp/>struct<sp/>::wl_resource<sp/>*region)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_region_interface" kindref="compound">RegionInterface</ref><sp/>*r<sp/>=<sp/><ref refid="class_k_win_1_1_region_interface_1a0ecf7673a3024e538d31cf5b92135ff0" kindref="member">RegionInterface::get</ref>(region);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;opaque<sp/>=<sp/>r<sp/>?<sp/>r-&gt;<ref refid="class_k_win_1_1_region_interface_1aa7d634c08e838be9c4ac0c405fc83c6f" kindref="member">region</ref>()<sp/>:<sp/>QRegion();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;opaqueIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="class_k_win_1_1_surface_interface_private_1a16c3ee5aae72ec24c2ed2e21b806a06e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a16c3ee5aae72ec24c2ed2e21b806a06e" kindref="member">SurfaceInterfacePrivate::surface_set_input_region</ref>(Resource<sp/>*resource,<sp/>struct<sp/>::wl_resource<sp/>*region)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_region_interface" kindref="compound">RegionInterface</ref><sp/>*r<sp/>=<sp/><ref refid="class_k_win_1_1_region_interface_1a0ecf7673a3024e538d31cf5b92135ff0" kindref="member">RegionInterface::get</ref>(region);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;input<sp/>=<sp/>r<sp/>?<sp/>r-&gt;<ref refid="class_k_win_1_1_region_interface_1aa7d634c08e838be9c4ac0c405fc83c6f" kindref="member">region</ref>()<sp/>:<sp/><ref refid="namespace_k_win_1a0655524c1f1ba8dbb2cf16a1e4b9bb97" kindref="member">infiniteRegion</ref>();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;inputIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="class_k_win_1_1_surface_interface_private_1a0ad10dfbe823828c94fe264f8209da1c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a0ad10dfbe823828c94fe264f8209da1c" kindref="member">SurfaceInterfacePrivate::surface_commit</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sync<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>.handle<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>.handle-&gt;isSynchronized();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1ac76e9a01ba0719c9a4776208d07d1a04" kindref="member">syncObjV1</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_surface_interface_private_1ac76e9a01ba0719c9a4776208d07d1a04" kindref="member">syncObjV1</ref>-&gt;maybeEmitProtocolErrors())<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unless<sp/>a<sp/>protocol<sp/>overrides<sp/>the<sp/>properties,<sp/>we<sp/>need<sp/>to<sp/>assume<sp/>some<sp/>YUV-&gt;RGB<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>matrix<sp/>and<sp/>color<sp/>space<sp/>to<sp/>be<sp/>attached<sp/>to<sp/>YUV<sp/>formats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasColorManagementProtocol<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a5fc7c9c6beca01e4bf77665aaae9ef08" kindref="member">colorSurface</ref><sp/>||<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a4efcc95339fe517eac1d710694618a08" kindref="member">frogColorManagement</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a979f390fd254c3b1bbe6f77c4e3f442a" kindref="member">bufferRef</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a979f390fd254c3b1bbe6f77c4e3f442a" kindref="member">bufferRef</ref>-&gt;dmabufAttributes())<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a979f390fd254c3b1bbe6f77c4e3f442a" kindref="member">bufferRef</ref>-&gt;dmabufAttributes()-&gt;format)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DRM_FORMAT_NV12:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;yuvCoefficients<sp/>=<sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9a0b69475c5783f10c0be13d36825fc3b9" kindref="member">YUVMatrixCoefficients::BT709</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;yuvCoefficientsIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasColorManagementProtocol)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;colorDescription<sp/>=<sp/><ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;colorDescriptionIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DRM_FORMAT_P010:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;yuvCoefficients<sp/>=<sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9acede9bc5f1db241392356796faabf6e6" kindref="member">YUVMatrixCoefficients::BT2020</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;yuvCoefficientsIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasColorManagementProtocol)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;colorDescription<sp/>=<sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref>(<ref refid="class_k_win_1_1_colorimetry_1a99c05e3a03117057e2bb1019b9861acb" kindref="member">Colorimetry::BT2020</ref>,<sp/><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref>(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a326f23a55a0039ee6a7130470b8b8779" kindref="member">TransferFunction::PerceptualQuantizer</ref>));</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;colorDescriptionIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;yuvCoefficients<sp/>=<sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9ac9c5c65fb4af9cf90eb99b3b84424189" kindref="member">YUVMatrixCoefficients::Identity</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;yuvCoefficientsIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasColorManagementProtocol)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;colorDescription<sp/>=<sp/><ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;colorDescriptionIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;yuvCoefficients<sp/>=<sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9ac9c5c65fb4af9cf90eb99b3b84424189" kindref="member">YUVMatrixCoefficients::Identity</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;yuvCoefficientsIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasColorManagementProtocol)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;colorDescription<sp/>=<sp/><ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;colorDescriptionIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_transaction" kindref="compound">Transaction</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sync)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>.transaction)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>.transaction<sp/>=<sp/>std::make_unique&lt;Transaction&gt;();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>.transaction.get();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transaction" kindref="compound">Transaction</ref>();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref><sp/>:<sp/>std::as_const(<ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.below))<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>surfacePrivate<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a78c6d25b9d679356cef73bb14ca36138" kindref="member">SurfaceInterfacePrivate::get</ref>(<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>-&gt;surface());</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surfacePrivate-&gt;subsurface.transaction)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref>-&gt;merge(surfacePrivate-&gt;subsurface.transaction.get());</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surfacePrivate-&gt;subsurface.transaction.reset();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref><sp/>:<sp/>std::as_const(<ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;subsurface.above))<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>surfacePrivate<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a78c6d25b9d679356cef73bb14ca36138" kindref="member">SurfaceInterfacePrivate::get</ref>(<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>-&gt;surface());</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surfacePrivate-&gt;subsurface.transaction)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref>-&gt;merge(surfacePrivate-&gt;subsurface.transaction.get());</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surfacePrivate-&gt;subsurface.transaction.reset();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref>-&gt;add(<ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sync)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a1b67ae2374f0457241e24907ae0f979e" kindref="member">transaction</ref>-&gt;commit();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;serial++;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="class_k_win_1_1_surface_interface_private_1ac1b5697c55a5a363bbf848822a9292fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1ac1b5697c55a5a363bbf848822a9292fb" kindref="member">SurfaceInterfacePrivate::surface_set_buffer_transform</ref>(Resource<sp/>*resource,<sp/>int32_t<sp/>transform)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transform<sp/>&lt;<sp/>0<sp/>||<sp/>transform<sp/>&gt;<sp/>WL_OUTPUT_TRANSFORM_FLIPPED_270)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_invalid_transform,<sp/></highlight><highlight class="stringliteral">&quot;buffer<sp/>transform<sp/>must<sp/>be<sp/>a<sp/>valid<sp/>transform<sp/>(%d<sp/>specified)&quot;</highlight><highlight class="normal">,<sp/>transform);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;bufferTransform<sp/>=<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7" kindref="member">OutputTransform::Kind</ref>(transform);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;bufferTransformIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="class_k_win_1_1_surface_interface_private_1a19a3595526875d9dbae0d95042f2efd3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a19a3595526875d9dbae0d95042f2efd3" kindref="member">SurfaceInterfacePrivate::surface_set_buffer_scale</ref>(Resource<sp/>*resource,<sp/>int32_t<sp/>scale)</highlight></codeline>
<codeline lineno="434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_invalid_scale,<sp/></highlight><highlight class="stringliteral">&quot;buffer<sp/>scale<sp/>must<sp/>be<sp/>at<sp/>least<sp/>one<sp/>(%d<sp/>specified)&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;bufferScale<sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;bufferScaleIsSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="class_k_win_1_1_surface_interface_private_1a97af26e845b3c7b6a790b413de9ca1c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a97af26e845b3c7b6a790b413de9ca1c6" kindref="member">SurfaceInterfacePrivate::surface_damage_buffer</ref>(Resource<sp/>*resource,<sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/>int32_t<sp/>width,<sp/>int32_t<sp/>height)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;bufferDamage<sp/>+=<sp/>QRect(x,<sp/>y,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="class_k_win_1_1_surface_interface_private_1ae57458579e3b4cf1136b881eaccae0cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1ae57458579e3b4cf1136b881eaccae0cb" kindref="member">SurfaceInterfacePrivate::surface_offset</ref>(Resource<sp/>*resource,<sp/>int32_t<sp/>x,<sp/>int32_t<sp/>y)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a682c19f4ab9902427d5fb1529892e0a6" kindref="member">pending</ref>-&gt;offset<sp/>=<sp/>QPoint(x,<sp/>y);</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="class_k_win_1_1_surface_interface_1a89a3676d287e67529ad85f250dbfbeb5" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface_1a89a3676d287e67529ad85f250dbfbeb5" kindref="member">SurfaceInterface::SurfaceInterface</ref>(<ref refid="class_k_win_1_1_compositor_interface" kindref="compound">CompositorInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1ab5ff7cfdde87bd781a4df782d3930245" kindref="member">compositor</ref>,<sp/>wl_resource<sp/>*<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(<ref refid="class_k_win_1_1_surface_interface_1ab5ff7cfdde87bd781a4df782d3930245" kindref="member">compositor</ref>)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>d(new<sp/><ref refid="class_k_win_1_1_surface_interface_1a190f6b81c407c3225216fc0b52b733e7" kindref="member">SurfaceInterfacePrivate</ref>(this))</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;compositor<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1ab5ff7cfdde87bd781a4df782d3930245" kindref="member">compositor</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;init(<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;client<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1ab5ff7cfdde87bd781a4df782d3930245" kindref="member">compositor</ref>-&gt;display()-&gt;getConnection(d-&gt;resource()-&gt;client());</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;pendingScaleOverride<sp/>=<sp/>d-&gt;client-&gt;scaleOverride();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;scaleOverride<sp/>=<sp/>d-&gt;pendingScaleOverride;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(d-&gt;client,<sp/>&amp;<ref refid="class_k_win_1_1_client_connection_1add152dd3b2eec28cf0d737d8affb411f" kindref="member">ClientConnection::scaleOverrideChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;pendingScaleOverride<sp/>=<sp/>d-&gt;client-&gt;scaleOverride();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="class_k_win_1_1_surface_interface_1aa82a45c4b56de81c67baf446a40a785e" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface_1aa82a45c4b56de81c67baf446a40a785e" kindref="member">SurfaceInterface::~SurfaceInterface</ref>()</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="class_k_win_1_1_surface_interface_1a74d8c5aef926651948ae88d70feb0ffe" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_role" kindref="compound">SurfaceRole</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a74d8c5aef926651948ae88d70feb0ffe" kindref="member">SurfaceInterface::role</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="473"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;role;</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="class_k_win_1_1_surface_interface_1af7fc1b7a86682bcd55e1195f471213e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1af7fc1b7a86682bcd55e1195f471213e4" kindref="member">SurfaceInterface::setRole</ref>(<ref refid="class_k_win_1_1_surface_role" kindref="compound">SurfaceRole</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a74d8c5aef926651948ae88d70feb0ffe" kindref="member">role</ref>)</highlight></codeline>
<codeline lineno="478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;role<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a74d8c5aef926651948ae88d70feb0ffe" kindref="member">role</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="class_k_win_1_1_surface_interface_1a8d8796005db45f1800be16df5ac04242" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="class_k_win_1_1_surface_interface_1a8d8796005db45f1800be16df5ac04242" kindref="member">SurfaceInterface::id</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="483"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wl_resource_get_id(<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">resource</ref>());</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">SurfaceInterface::client</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="488"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;<ref refid="class_k_win_1_1_client_connection_1aa3b49670cf09ff8b5bf837f7ba29f7d2" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" refkind="member"><highlight class="normal">wl_resource<sp/>*<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">SurfaceInterface::resource</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="493"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;resource()-&gt;handle;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="class_k_win_1_1_surface_interface_1ab5ff7cfdde87bd781a4df782d3930245" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_compositor_interface" kindref="compound">CompositorInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1ab5ff7cfdde87bd781a4df782d3930245" kindref="member">SurfaceInterface::compositor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="498"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;compositor;</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="class_k_win_1_1_surface_interface_1aa8db310a54de302b6528ea4ac0d1bd29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1aa8db310a54de302b6528ea4ac0d1bd29" kindref="member">SurfaceInterface::frameRendered</ref>(quint32<sp/>msec)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>notify<sp/>all<sp/>callbacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource<sp/>*<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource<sp/>*tmp;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_for_each_safe<sp/>(<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">resource</ref>,<sp/>tmp,<sp/>&amp;d-&gt;current-&gt;frameCallbacks)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_callback_send_done(<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">resource</ref>,<sp/>msec);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(<ref refid="class_k_win_1_1_surface_interface_1a967a6d17b9be9b1ec2e6f3c3c60d667d" kindref="member">resource</ref>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514" refid="class_k_win_1_1_surface_interface_1a0de5f3bc96df584e06784cd3e1b302d0" refkind="member"><highlight class="normal">std::unique_ptr&lt;PresentationFeedback&gt;<sp/><ref refid="class_k_win_1_1_surface_interface_1a0de5f3bc96df584e06784cd3e1b302d0" kindref="member">SurfaceInterface::takePresentationFeedback</ref>(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output<sp/>&amp;&amp;<sp/>(!d-&gt;primaryOutput<sp/>||<sp/>d-&gt;primaryOutput-&gt;handle()<sp/>!=<sp/>output))<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(d-&gt;current-&gt;presentationFeedback);</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="class_k_win_1_1_surface_interface_1afc16532a55ee920009490477944d014c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1afc16532a55ee920009490477944d014c" kindref="member">SurfaceInterface::hasFrameCallbacks</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="523"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!wl_list_empty(&amp;d-&gt;current-&gt;frameCallbacks);</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="class_k_win_1_1_surface_interface_private_1a009850c82ed547073c611967f33ad0cb" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a009850c82ed547073c611967f33ad0cb" kindref="member">SurfaceInterfacePrivate::computeBufferSourceBox</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="528"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;viewport.sourceGeometry.isValid())<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRectF(QPointF(0,<sp/>0),<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;buffer-&gt;size());</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>bounds<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;bufferTransform.map(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;buffer-&gt;size());</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>box(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;viewport.sourceGeometry.x()<sp/>*<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;bufferScale,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;viewport.sourceGeometry.y()<sp/>*<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;bufferScale,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;viewport.sourceGeometry.width()<sp/>*<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;bufferScale,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;viewport.sourceGeometry.height()<sp/>*<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;bufferScale);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;bufferTransform.map(box,<sp/>bounds);</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542" refid="struct_k_win_1_1_surface_state_1a419cb95e53903164fcf77e419a7b1585" refkind="member"><highlight class="normal"><ref refid="struct_k_win_1_1_surface_state_1a419cb95e53903164fcf77e419a7b1585" kindref="member">SurfaceState::SurfaceState</ref>()</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="struct_k_win_1_1_surface_state_1ab569e3a0f96a7f2d25062ad8814790b7" kindref="member">frameCallbacks</ref>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="struct_k_win_1_1_surface_state_1a2cb08955717a0928c410cb1704ab3ed6" refkind="member"><highlight class="normal"><ref refid="struct_k_win_1_1_surface_state_1a2cb08955717a0928c410cb1704ab3ed6" kindref="member">SurfaceState::~SurfaceState</ref>()</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource<sp/>*resource;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource<sp/>*tmp;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_for_each_safe<sp/>(resource,<sp/>tmp,<sp/>&amp;<ref refid="struct_k_win_1_1_surface_state_1ab569e3a0f96a7f2d25062ad8814790b7" kindref="member">frameCallbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_destroy(resource);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="struct_k_win_1_1_surface_state_1a14bdab7f33d426f8b71fda74b30e5e1d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_surface_state_1a14bdab7f33d426f8b71fda74b30e5e1d" kindref="member">SurfaceState::mergeInto</ref>(<ref refid="struct_k_win_1_1_surface_state_1a419cb95e53903164fcf77e419a7b1585" kindref="member">SurfaceState</ref><sp/>*target)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a4ce7c87f9b4fc429f6782500c3627ceb" kindref="member">serial</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a4ce7c87f9b4fc429f6782500c3627ceb" kindref="member">serial</ref>;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1a8aff1011918e6cdfbe786a31ff8c3660" kindref="member">bufferIsSet</ref>)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1ac0837357be0fe251f2df8d5806730551" kindref="member">buffer</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1ac0837357be0fe251f2df8d5806730551" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a602c940cf7ed0fd63b34923ecf90a03b" kindref="member">offset</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a602c940cf7ed0fd63b34923ecf90a03b" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1ac48ae95d742926fbca1f7dbc572bc078" kindref="member">damage</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1ac48ae95d742926fbca1f7dbc572bc078" kindref="member">damage</ref>;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1ac26f56d5a1960ac8530053e41f5e8926" kindref="member">bufferDamage</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1ac26f56d5a1960ac8530053e41f5e8926" kindref="member">bufferDamage</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a292de26c7336704962a092f9e75af72f" kindref="member">acquirePoint</ref>.<ref refid="struct_k_win_1_1_surface_state_1a1640c0239538807a2f07cfe95567beb7" kindref="member">timeline</ref><sp/>=<sp/>std::exchange(<ref refid="struct_k_win_1_1_surface_state_1a292de26c7336704962a092f9e75af72f" kindref="member">acquirePoint</ref>.timeline,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a292de26c7336704962a092f9e75af72f" kindref="member">acquirePoint</ref>.<ref refid="struct_k_win_1_1_surface_state_1ac9dcc3ba8342cc30c19d18dcfe182bac" kindref="member">point</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a292de26c7336704962a092f9e75af72f" kindref="member">acquirePoint</ref>.point;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1abf3acab810dd002a25cd00f64754d8a8" kindref="member">releasePoint</ref><sp/>=<sp/>std::move(<ref refid="struct_k_win_1_1_surface_state_1abf3acab810dd002a25cd00f64754d8a8" kindref="member">releasePoint</ref>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a8aff1011918e6cdfbe786a31ff8c3660" kindref="member">bufferIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1a654ae3aa13a5818f80bd988c1da74954" kindref="member">viewport</ref>.sourceGeometryIsSet)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a654ae3aa13a5818f80bd988c1da74954" kindref="member">viewport</ref>.<ref refid="struct_k_win_1_1_surface_state_1a61ba2e2d700c0cebdec272d20b04e022" kindref="member">sourceGeometry</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a654ae3aa13a5818f80bd988c1da74954" kindref="member">viewport</ref>.sourceGeometry;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a654ae3aa13a5818f80bd988c1da74954" kindref="member">viewport</ref>.<ref refid="struct_k_win_1_1_surface_state_1a3ad0aca94b9cbe542f2aba0b2838fd1f" kindref="member">sourceGeometryIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1a654ae3aa13a5818f80bd988c1da74954" kindref="member">viewport</ref>.destinationSizeIsSet)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a654ae3aa13a5818f80bd988c1da74954" kindref="member">viewport</ref>.<ref refid="struct_k_win_1_1_surface_state_1a5618b92421b92e3dbb26f960d93b8d13" kindref="member">destinationSize</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a654ae3aa13a5818f80bd988c1da74954" kindref="member">viewport</ref>.destinationSize;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a654ae3aa13a5818f80bd988c1da74954" kindref="member">viewport</ref>.<ref refid="struct_k_win_1_1_surface_state_1a049718929bb68d3e896264decffa10f9" kindref="member">destinationSizeIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a8ed409c43fbe1f5e8cc51e3f7fd05bd7" kindref="member">subsurface</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a8ed409c43fbe1f5e8cc51e3f7fd05bd7" kindref="member">subsurface</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1aed9a8fc19e8444970f8de5c9957803a2" kindref="member">subsurfaceOrderChanged</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1aed9a8fc19e8444970f8de5c9957803a2" kindref="member">subsurfaceOrderChanged</ref>;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1aaf6909898a2f67ef5e9eb851c20a117c" kindref="member">subsurfacePositionChanged</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1aaf6909898a2f67ef5e9eb851c20a117c" kindref="member">subsurfacePositionChanged</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_list_insert_list(&amp;target-&gt;<ref refid="struct_k_win_1_1_surface_state_1ab569e3a0f96a7f2d25062ad8814790b7" kindref="member">frameCallbacks</ref>,<sp/>&amp;<ref refid="struct_k_win_1_1_surface_state_1ab569e3a0f96a7f2d25062ad8814790b7" kindref="member">frameCallbacks</ref>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1ab84a1042ae1547385571c0e1e82bd04c" kindref="member">shadowIsSet</ref>)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a6d10e1ea4efd934a873ac231d7603e8c" kindref="member">shadow</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a6d10e1ea4efd934a873ac231d7603e8c" kindref="member">shadow</ref>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1ab84a1042ae1547385571c0e1e82bd04c" kindref="member">shadowIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1a4f0b6709ad57de713f3c6f4df3a4f9df" kindref="member">blurIsSet</ref>)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a7ea6a47d4620b04bb93738e2c4967d8d" kindref="member">blur</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a7ea6a47d4620b04bb93738e2c4967d8d" kindref="member">blur</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a4f0b6709ad57de713f3c6f4df3a4f9df" kindref="member">blurIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1a90a0b027fdcf05d307129e114b6acb98" kindref="member">contrastIsSet</ref>)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a08658be8f0f2ecf1292fceb37b5c78a8" kindref="member">contrast</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a08658be8f0f2ecf1292fceb37b5c78a8" kindref="member">contrast</ref>;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a90a0b027fdcf05d307129e114b6acb98" kindref="member">contrastIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1abbb08ef497c323730ecd31a07a7685bb" kindref="member">slideIsSet</ref>)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a37d12692e47ac1d16333cc6e777228a3" kindref="member">slide</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a37d12692e47ac1d16333cc6e777228a3" kindref="member">slide</ref>;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1abbb08ef497c323730ecd31a07a7685bb" kindref="member">slideIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1a5a1a4863d19765c8388d6c73ea0b190c" kindref="member">inputIsSet</ref>)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1afb7e7cd4f66a24612a709f70ffbecd13" kindref="member">input</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1afb7e7cd4f66a24612a709f70ffbecd13" kindref="member">input</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a5a1a4863d19765c8388d6c73ea0b190c" kindref="member">inputIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1a57912f69ab12bfa097b9ae6abe26a24b" kindref="member">opaqueIsSet</ref>)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a3b1957b2a00b250c0eda16371095047d" kindref="member">opaque</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a3b1957b2a00b250c0eda16371095047d" kindref="member">opaque</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a57912f69ab12bfa097b9ae6abe26a24b" kindref="member">opaqueIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1afd892fccd1bb44019fa577558878cada" kindref="member">bufferScaleIsSet</ref>)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a67c7408df78aefdc7930a11e34ac91da" kindref="member">bufferScale</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a67c7408df78aefdc7930a11e34ac91da" kindref="member">bufferScale</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1afd892fccd1bb44019fa577558878cada" kindref="member">bufferScaleIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1aa8f3da3ef00116d0f02c029d02e62bd8" kindref="member">bufferTransformIsSet</ref>)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a3ab32ba643962a3135d67503357d7fc1" kindref="member">bufferTransform</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a3ab32ba643962a3135d67503357d7fc1" kindref="member">bufferTransform</ref>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1aa8f3da3ef00116d0f02c029d02e62bd8" kindref="member">bufferTransformIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1a7f801fa5b231ed675a6acb31c392f45c" kindref="member">contentTypeIsSet</ref>)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a45387a286b42f1dfd68c9923b2a2a97d" kindref="member">contentType</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a45387a286b42f1dfd68c9923b2a2a97d" kindref="member">contentType</ref>;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a7f801fa5b231ed675a6acb31c392f45c" kindref="member">contentTypeIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1a5248ef438d95d72e48d2c40b5bef99ed" kindref="member">presentationModeHintIsSet</ref>)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a56ea715997a6832acba3788224d4c3a4" kindref="member">presentationHint</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a56ea715997a6832acba3788224d4c3a4" kindref="member">presentationHint</ref>;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a5248ef438d95d72e48d2c40b5bef99ed" kindref="member">presentationModeHintIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1a311d88d15fb76c9ae9687787ac31c580" kindref="member">colorDescriptionIsSet</ref>)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a8ba557f1a749a2149a30a0183b4f14b8" kindref="member">colorDescription</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a8ba557f1a749a2149a30a0183b4f14b8" kindref="member">colorDescription</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a311d88d15fb76c9ae9687787ac31c580" kindref="member">colorDescriptionIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1a36fc71ee8ce941a67b20f9eca912487f" kindref="member">alphaMultiplierIsSet</ref>)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a1326f78f1d49d72cc5ef77e418fb6bc8" kindref="member">alphaMultiplier</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a1326f78f1d49d72cc5ef77e418fb6bc8" kindref="member">alphaMultiplier</ref>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a36fc71ee8ce941a67b20f9eca912487f" kindref="member">alphaMultiplierIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1_surface_state_1a7491480b3b194fe3b68a89cd97f037f7" kindref="member">yuvCoefficientsIsSet</ref>)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1abaeb8f9da531453006615a4685cc941b" kindref="member">yuvCoefficients</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1abaeb8f9da531453006615a4685cc941b" kindref="member">yuvCoefficients</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a7491480b3b194fe3b68a89cd97f037f7" kindref="member">yuvCoefficientsIsSet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1acd4df0ecdc716a6877e2b19f9299c173" kindref="member">presentationFeedback</ref><sp/>=<sp/>std::move(<ref refid="struct_k_win_1_1_surface_state_1acd4df0ecdc716a6877e2b19f9299c173" kindref="member">presentationFeedback</ref>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="struct_k_win_1_1_surface_state_1a419cb95e53903164fcf77e419a7b1585" kindref="member">SurfaceState</ref>{};</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_surface_state_1a4ce7c87f9b4fc429f6782500c3627ceb" kindref="member">serial</ref><sp/>=<sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a4ce7c87f9b4fc429f6782500c3627ceb" kindref="member">serial</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_surface_state_1a8ed409c43fbe1f5e8cc51e3f7fd05bd7" kindref="member">subsurface</ref><sp/>=<sp/>target-&gt;<ref refid="struct_k_win_1_1_surface_state_1a8ed409c43fbe1f5e8cc51e3f7fd05bd7" kindref="member">subsurface</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_list_init(&amp;<ref refid="struct_k_win_1_1_surface_state_1ab569e3a0f96a7f2d25062ad8814790b7" kindref="member">frameCallbacks</ref>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646" refid="class_k_win_1_1_surface_interface_private_1ae5bceedd6d2937b84c4b223faf279a84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1ae5bceedd6d2937b84c4b223faf279a84" kindref="member">SurfaceInterfacePrivate::applyState</ref>(<ref refid="struct_k_win_1_1_surface_state" kindref="compound">SurfaceState</ref><sp/>*next)</highlight></codeline>
<codeline lineno="647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bufferChanged<sp/>=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a8aff1011918e6cdfbe786a31ff8c3660" kindref="member">bufferIsSet</ref><sp/>&amp;&amp;<sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;buffer<sp/>!=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1ac0837357be0fe251f2df8d5806730551" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>opaqueRegionChanged<sp/>=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a57912f69ab12bfa097b9ae6abe26a24b" kindref="member">opaqueIsSet</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transformChanged<sp/>=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1aa8f3da3ef00116d0f02c029d02e62bd8" kindref="member">bufferTransformIsSet</ref><sp/>&amp;&amp;<sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;bufferTransform<sp/>!=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a3ab32ba643962a3135d67503357d7fc1" kindref="member">bufferTransform</ref>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shadowChanged<sp/>=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1ab84a1042ae1547385571c0e1e82bd04c" kindref="member">shadowIsSet</ref>;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blurChanged<sp/>=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a4f0b6709ad57de713f3c6f4df3a4f9df" kindref="member">blurIsSet</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contrastChanged<sp/>=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a90a0b027fdcf05d307129e114b6acb98" kindref="member">contrastIsSet</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>slideChanged<sp/>=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1abbb08ef497c323730ecd31a07a7685bb" kindref="member">slideIsSet</ref>;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>subsurfaceOrderChanged<sp/>=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1aed9a8fc19e8444970f8de5c9957803a2" kindref="member">subsurfaceOrderChanged</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visibilityChanged<sp/>=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a8aff1011918e6cdfbe786a31ff8c3660" kindref="member">bufferIsSet</ref><sp/>&amp;&amp;<sp/>bool(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;buffer)<sp/>!=<sp/>bool(next-&gt;<ref refid="struct_k_win_1_1_surface_state_1ac0837357be0fe251f2df8d5806730551" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>colorDescriptionChanged<sp/>=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a311d88d15fb76c9ae9687787ac31c580" kindref="member">colorDescriptionIsSet</ref><sp/>&amp;&amp;<sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;colorDescription<sp/>!=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a8ba557f1a749a2149a30a0183b4f14b8" kindref="member">colorDescription</ref>);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>presentationModeHintChanged<sp/>=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a5248ef438d95d72e48d2c40b5bef99ed" kindref="member">presentationModeHintIsSet</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bufferReleasePointChanged<sp/>=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a8aff1011918e6cdfbe786a31ff8c3660" kindref="member">bufferIsSet</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;releasePoint<sp/>!=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1abf3acab810dd002a25cd00f64754d8a8" kindref="member">releasePoint</ref>;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alphaMultiplierChanged<sp/>=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a36fc71ee8ce941a67b20f9eca912487f" kindref="member">alphaMultiplierIsSet</ref>;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>yuvCoefficientsChanged<sp/>=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a7491480b3b194fe3b68a89cd97f037f7" kindref="member">yuvCoefficientsIsSet</ref><sp/>&amp;&amp;<sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;yuvCoefficients<sp/>!=<sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1abaeb8f9da531453006615a4685cc941b" kindref="member">yuvCoefficients</ref>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>oldSurfaceSize<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" kindref="member">surfaceSize</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>oldBufferSourceBox<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab5a7ee1c57517c8ad3beccbd81edb581" kindref="member">bufferSourceBox</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>oldInputRegion<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a3bc29744852f970becf011f59bbc919b" kindref="member">inputRegion</ref>;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a14bdab7f33d426f8b71fda74b30e5e1d" kindref="member">mergeInto</ref>(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>.get());</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a979f390fd254c3b1bbe6f77c4e3f442a" kindref="member">bufferRef</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;buffer;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a979f390fd254c3b1bbe6f77c4e3f442a" kindref="member">bufferRef</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;releasePoint)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a979f390fd254c3b1bbe6f77c4e3f442a" kindref="member">bufferRef</ref>-&gt;addReleasePoint(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;releasePoint);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a693e0f4016c0d2337d1542dbbfd51b47" kindref="member">scaleOverride</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1ad3ba9ec59f116f005f07e358f13a14d8" kindref="member">pendingScaleOverride</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;buffer)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab5a7ee1c57517c8ad3beccbd81edb581" kindref="member">bufferSourceBox</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a009850c82ed547073c611967f33ad0cb" kindref="member">computeBufferSourceBox</ref>();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;viewport.destinationSize.isValid())<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" kindref="member">surfaceSize</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;viewport.destinationSize;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;viewport.sourceGeometry.isValid())<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" kindref="member">surfaceSize</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;viewport.sourceGeometry.size();</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" kindref="member">surfaceSize</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;bufferTransform.map(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;buffer-&gt;size()<sp/>/<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;bufferScale);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>surfaceRect(QPoint(0,<sp/>0),<sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" kindref="member">surfaceSize</ref>);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a3bc29744852f970becf011f59bbc919b" kindref="member">inputRegion</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;input<sp/>&amp;<sp/>surfaceRect.toAlignedRect();</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;buffer-&gt;hasAlphaChannel())<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a9b0f6f27785e70e26b1dde83a9582fcc" kindref="member">opaqueRegion</ref><sp/>=<sp/>surfaceRect.toAlignedRect();</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a9b0f6f27785e70e26b1dde83a9582fcc" kindref="member">opaqueRegion</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;opaque<sp/>&amp;<sp/>surfaceRect.toAlignedRect();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>scaleOverrideMatrix;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a693e0f4016c0d2337d1542dbbfd51b47" kindref="member">scaleOverride</ref><sp/>!=<sp/>1.)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleOverrideMatrix.scale(1.<sp/>/<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a693e0f4016c0d2337d1542dbbfd51b47" kindref="member">scaleOverride</ref>,<sp/>1.<sp/>/<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a693e0f4016c0d2337d1542dbbfd51b47" kindref="member">scaleOverride</ref>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a9b0f6f27785e70e26b1dde83a9582fcc" kindref="member">opaqueRegion</ref><sp/>=<sp/>map_helper(scaleOverrideMatrix,<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a9b0f6f27785e70e26b1dde83a9582fcc" kindref="member">opaqueRegion</ref>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a3bc29744852f970becf011f59bbc919b" kindref="member">inputRegion</ref><sp/>=<sp/>map_helper(scaleOverrideMatrix,<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a3bc29744852f970becf011f59bbc919b" kindref="member">inputRegion</ref>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" kindref="member">surfaceSize</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" kindref="member">surfaceSize</ref><sp/>/<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a693e0f4016c0d2337d1542dbbfd51b47" kindref="member">scaleOverride</ref>;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" kindref="member">surfaceSize</ref><sp/>=<sp/>QSizeF(0,<sp/>0);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab5a7ee1c57517c8ad3beccbd81edb581" kindref="member">bufferSourceBox</ref><sp/>=<sp/>QRectF();</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a3bc29744852f970becf011f59bbc919b" kindref="member">inputRegion</ref><sp/>=<sp/>QRegion();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a9b0f6f27785e70e26b1dde83a9582fcc" kindref="member">opaqueRegion</ref><sp/>=<sp/>QRegion();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opaqueRegionChanged)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;opaqueChanged(<ref refid="class_k_win_1_1_surface_interface_private_1a9b0f6f27785e70e26b1dde83a9582fcc" kindref="member">opaqueRegion</ref>);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldInputRegion<sp/>!=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a3bc29744852f970becf011f59bbc919b" kindref="member">inputRegion</ref>)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;inputChanged(<ref refid="class_k_win_1_1_surface_interface_private_1a3bc29744852f970becf011f59bbc919b" kindref="member">inputRegion</ref>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transformChanged)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;bufferTransformChanged(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;bufferTransform);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visibilityChanged)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a70d0ec630f07e5ac57b5c6e499ce74c7" kindref="member">updateEffectiveMapped</ref>();</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1ab5a7ee1c57517c8ad3beccbd81edb581" kindref="member">bufferSourceBox</ref><sp/>!=<sp/>oldBufferSourceBox)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;bufferSourceBoxChanged();</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufferChanged)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;bufferChanged();</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" kindref="member">surfaceSize</ref><sp/>!=<sp/>oldSurfaceSize)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;sizeChanged();</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shadowChanged)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;shadowChanged();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blurChanged)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;blurChanged();</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contrastChanged)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;contrastChanged();</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slideChanged)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;slideOnShowHideChanged();</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subsurfaceOrderChanged)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;childSubSurfacesChanged();</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colorDescriptionChanged<sp/>||<sp/>yuvCoefficientsChanged)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;colorDescription<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;colorDescription.withYuvCoefficients(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;yuvCoefficients);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;colorDescriptionChanged();</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(presentationModeHintChanged)<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;presentationModeHintChanged();</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufferReleasePointChanged)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;bufferReleasePointChanged();</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alphaMultiplierChanged)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;alphaMultiplierChanged();</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufferChanged)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;buffer<sp/>&amp;&amp;<sp/>(!<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;damage.isEmpty()<sp/>||<sp/>!<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;bufferDamage.isEmpty()))<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>bufferRect<sp/>=<sp/>QRect(QPoint(0,<sp/>0),<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;buffer-&gt;size());</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a7ac039f6992d06145f99148542d7aaa0" kindref="member">bufferDamage</ref><sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;bufferDamage</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.united(<ref refid="class_k_win_1_1_surface_interface_private_1a84cad8c8d3bfb60758380e2b4b9f9c00" kindref="member">mapToBuffer</ref>(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;damage))</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.intersected(bufferRect);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;damaged(<ref refid="class_k_win_1_1_surface_interface_private_1a7ac039f6992d06145f99148542d7aaa0" kindref="member">bufferDamage</ref>);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>position<sp/>of<sp/>a<sp/>sub-surface<sp/>is<sp/>applied<sp/>when<sp/>its<sp/>parent<sp/>is<sp/>committed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref><sp/>:<sp/>std::as_const(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;subsurface.below))<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>-&gt;parentApplyState(next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a4ce7c87f9b4fc429f6782500c3627ceb" kindref="member">serial</ref>);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref><sp/>:<sp/>std::as_const(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;subsurface.above))<sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>-&gt;parentApplyState(next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a4ce7c87f9b4fc429f6782500c3627ceb" kindref="member">serial</ref>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;stateApplied(next-&gt;<ref refid="struct_k_win_1_1_surface_state_1a4ce7c87f9b4fc429f6782500c3627ceb" kindref="member">serial</ref>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;committed();</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781" refid="class_k_win_1_1_surface_interface_private_1a679a9393d795ccc2c709990163ea165e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a679a9393d795ccc2c709990163ea165e" kindref="member">SurfaceInterfacePrivate::computeEffectiveMapped</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="782"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_surface_interface_private_1a979f390fd254c3b1bbe6f77c4e3f442a" kindref="member">bufferRef</ref>)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>.handle)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>.handle-&gt;parentSurface()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>.handle-&gt;parentSurface()-&gt;isMapped();</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792" refid="class_k_win_1_1_surface_interface_private_1a70d0ec630f07e5ac57b5c6e499ce74c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a70d0ec630f07e5ac57b5c6e499ce74c7" kindref="member">SurfaceInterfacePrivate::updateEffectiveMapped</ref>()</highlight></codeline>
<codeline lineno="793"><highlight class="normal">{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>effectiveMapped<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a679a9393d795ccc2c709990163ea165e" kindref="member">computeEffectiveMapped</ref>();</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a2dd76eeb6414dbec2d05105f9ad7d856" kindref="member">mapped</ref><sp/>==<sp/>effectiveMapped)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a2dd76eeb6414dbec2d05105f9ad7d856" kindref="member">mapped</ref><sp/>=<sp/>effectiveMapped;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_private_1a2dd76eeb6414dbec2d05105f9ad7d856" kindref="member">mapped</ref>)<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;mapped();</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_surface_interface_private_1afeaaca4b873459e8385d2e89d3b8f47b" kindref="member">q</ref>-&gt;unmapped();</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref><sp/>:<sp/>std::as_const(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;subsurface.below))<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>surfacePrivate<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a78c6d25b9d679356cef73bb14ca36138" kindref="member">SurfaceInterfacePrivate::get</ref>(<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>-&gt;surface());</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surfacePrivate-&gt;updateEffectiveMapped();</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref><sp/>:<sp/>std::as_const(<ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;subsurface.above))<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>surfacePrivate<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a78c6d25b9d679356cef73bb14ca36138" kindref="member">SurfaceInterfacePrivate::get</ref>(<ref refid="class_k_win_1_1_surface_interface_private_1aee2266d0a3fa0ed5d6ba4b8eec33967f" kindref="member">subsurface</ref>-&gt;surface());</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surfacePrivate-&gt;updateEffectiveMapped();</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817" refid="class_k_win_1_1_surface_interface_private_1a2d40367c137b5049faf798d255b40fd8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a2d40367c137b5049faf798d255b40fd8" kindref="member">SurfaceInterfacePrivate::contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;position)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="818"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>QRectF::contains<sp/>as<sp/>that<sp/>includes<sp/>all<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>x<sp/>=<sp/>position.x();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>y<sp/>=<sp/>position.y();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a2dd76eeb6414dbec2d05105f9ad7d856" kindref="member">mapped</ref><sp/>&amp;&amp;<sp/>x<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>y<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" kindref="member">surfaceSize</ref>.width()<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" kindref="member">surfaceSize</ref>.height();</highlight></codeline>
<codeline lineno="824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826" refid="class_k_win_1_1_surface_interface_private_1a901b88ce658c89262fd7cbad78d300b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a901b88ce658c89262fd7cbad78d300b5" kindref="member">SurfaceInterfacePrivate::inputContains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;position)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="827"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_private_1a2d40367c137b5049faf798d255b40fd8" kindref="member">contains</ref>(position)<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a3bc29744852f970becf011f59bbc919b" kindref="member">inputRegion</ref>.contains(QPoint(std::floor(position.x()),<sp/>std::floor(position.y())));</highlight></codeline>
<codeline lineno="829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831" refid="class_k_win_1_1_surface_interface_private_1a84cad8c8d3bfb60758380e2b4b9f9c00" refkind="member"><highlight class="normal">QRegion<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a84cad8c8d3bfb60758380e2b4b9f9c00" kindref="member">SurfaceInterfacePrivate::mapToBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="832"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(region.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRegion();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>sourceBox<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;bufferTransform.inverted().map(<ref refid="class_k_win_1_1_surface_interface_private_1ab5a7ee1c57517c8ad3beccbd81edb581" kindref="member">bufferSourceBox</ref>,<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;buffer-&gt;size());</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>xScale<sp/>=<sp/>sourceBox.width()<sp/>/<sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" kindref="member">surfaceSize</ref>.width();</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>yScale<sp/>=<sp/>sourceBox.height()<sp/>/<sp/><ref refid="class_k_win_1_1_surface_interface_private_1ab70f9cd4d58f1ada77ff97f1e8bf2aa2" kindref="member">surfaceSize</ref>.height();</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>QRegion<sp/>result;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QRectF<sp/>rect<sp/>:<sp/>region)<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="class_k_win_1_1_surface_interface_private_1a555f677479afeea1bf0b557431dc995d" kindref="member">current</ref>-&gt;bufferTransform.map(QRectF(rect.x()<sp/>*<sp/>xScale,<sp/>rect.y()<sp/>*<sp/>yScale,<sp/>rect.width()<sp/>*<sp/>xScale,<sp/>rect.height()<sp/>*<sp/>yScale),<sp/>sourceBox.size()).translated(<ref refid="class_k_win_1_1_surface_interface_private_1ab5a7ee1c57517c8ad3beccbd81edb581" kindref="member">bufferSourceBox</ref>.topLeft()).toAlignedRect();</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848" refid="class_k_win_1_1_surface_interface_1a45b8549b5bfff00c85812c836c975995" refkind="member"><highlight class="normal">QRegion<sp/><ref refid="class_k_win_1_1_surface_interface_1a45b8549b5bfff00c85812c836c975995" kindref="member">SurfaceInterface::bufferDamage</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="849"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;bufferDamage;</highlight></codeline>
<codeline lineno="851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853" refid="class_k_win_1_1_surface_interface_1a2f78aaa341ac742630da6ffe7423fb1a" refkind="member"><highlight class="normal">QRegion<sp/><ref refid="class_k_win_1_1_surface_interface_1afe2b6c1fb2b1cc64ca1e349e39b90e20" kindref="member">SurfaceInterface::opaque</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="854"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;opaqueRegion;</highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858" refid="class_k_win_1_1_surface_interface_1a44dddaf85bd2e3870549f6897b58b6cd" refkind="member"><highlight class="normal">QRegion<sp/><ref refid="class_k_win_1_1_surface_interface_1a2252ccfdaefae7974f9682cb5d190cda" kindref="member">SurfaceInterface::input</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="859"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;inputRegion;</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863" refid="class_k_win_1_1_surface_interface_1a3ff230bfc9b49793c1493c306435eb03" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_surface_interface_1a3ff230bfc9b49793c1493c306435eb03" kindref="member">SurfaceInterface::bufferSourceBox</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="864"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;bufferSourceBox;</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868" refid="class_k_win_1_1_surface_interface_1a651c492e0b9e149c49215562606f2f2e" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref><sp/><ref refid="class_k_win_1_1_surface_interface_1a651c492e0b9e149c49215562606f2f2e" kindref="member">SurfaceInterface::bufferTransform</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="869"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;current-&gt;bufferTransform;</highlight></codeline>
<codeline lineno="871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873" refid="class_k_win_1_1_surface_interface_1a6f53ff0fca97e468e7ccf6681f4a5030" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a6f53ff0fca97e468e7ccf6681f4a5030" kindref="member">SurfaceInterface::buffer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="874"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;bufferRef.buffer();</highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878" refid="class_k_win_1_1_surface_interface_1a5a6b83bbb0260f80c8b98c918cafcba3" refkind="member"><highlight class="normal">QPoint<sp/><ref refid="class_k_win_1_1_surface_interface_1a5a6b83bbb0260f80c8b98c918cafcba3" kindref="member">SurfaceInterface::offset</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="879"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;current-&gt;offset<sp/>/<sp/>d-&gt;scaleOverride;</highlight></codeline>
<codeline lineno="881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883" refid="class_k_win_1_1_surface_interface_1a24ac16f7936d889771c2ab09d973175b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface_1a89a3676d287e67529ad85f250dbfbeb5" kindref="member">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a24ac16f7936d889771c2ab09d973175b" kindref="member">SurfaceInterface::get</ref>(wl_resource<sp/>*native)</highlight></codeline>
<codeline lineno="884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>surfacePrivate<sp/>=<sp/><ref refid="namespace_k_win_1a8c77ef01a5298009b38f91650c249957" kindref="member">resource_cast&lt;SurfaceInterfacePrivate *&gt;</ref>(native))<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>surfacePrivate-&gt;q;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891" refid="class_k_win_1_1_surface_interface_1afb65dc63f3864f15ef4a041f558d0220" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface_1a89a3676d287e67529ad85f250dbfbeb5" kindref="member">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a24ac16f7936d889771c2ab09d973175b" kindref="member">SurfaceInterface::get</ref>(quint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>)</highlight></codeline>
<codeline lineno="892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1a24ac16f7936d889771c2ab09d973175b" kindref="member">get</ref>(<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>-&gt;getResource(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899" refid="class_k_win_1_1_surface_interface_1abb75b79f52d1243adff87dafe40c82c3" refkind="member"><highlight class="normal">QList&lt;SubSurfaceInterface<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_surface_interface_1abb75b79f52d1243adff87dafe40c82c3" kindref="member">SurfaceInterface::below</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="900"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;current-&gt;subsurface.<ref refid="class_k_win_1_1_surface_interface_1abb75b79f52d1243adff87dafe40c82c3" kindref="member">below</ref>;</highlight></codeline>
<codeline lineno="902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904" refid="class_k_win_1_1_surface_interface_1aa2e1595bf1af4314836b40d1e7063591" refkind="member"><highlight class="normal">QList&lt;SubSurfaceInterface<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_surface_interface_1aa2e1595bf1af4314836b40d1e7063591" kindref="member">SurfaceInterface::above</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="905"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;current-&gt;subsurface.above;</highlight></codeline>
<codeline lineno="907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909" refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" kindref="member">SurfaceInterface::subSurface</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="910"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;subsurface.handle;</highlight></codeline>
<codeline lineno="912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914" refid="class_k_win_1_1_surface_interface_1a6b90cf6b6f8c6fbf42764d98d690c865" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface_1a89a3676d287e67529ad85f250dbfbeb5" kindref="member">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a6b90cf6b6f8c6fbf42764d98d690c865" kindref="member">SurfaceInterface::mainSurface</ref>()</highlight></codeline>
<codeline lineno="915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" kindref="member">subSurface</ref>()<sp/>?<sp/><ref refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" kindref="member">subSurface</ref>()-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1af71fe28a901624f2d6f1857db53030e8" kindref="member">mainSurface</ref>()<sp/>:<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919" refid="class_k_win_1_1_surface_interface_1ab2d82c9acbd58b19df8a81b66dfd6764" refkind="member"><highlight class="normal">QSizeF<sp/><ref refid="class_k_win_1_1_surface_interface_1ad4b3c49e2e99aa0f949c85507850a6b6" kindref="member">SurfaceInterface::size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="920"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;surfaceSize;</highlight></codeline>
<codeline lineno="922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924" refid="class_k_win_1_1_surface_interface_1ac312d3dd7257a9e1c7d5465a0c35fc2e" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_surface_interface_1ac312d3dd7257a9e1c7d5465a0c35fc2e" kindref="member">SurfaceInterface::boundingRect</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="925"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>rect(QPoint(0,<sp/>0),<sp/><ref refid="class_k_win_1_1_surface_interface_1ad4b3c49e2e99aa0f949c85507850a6b6" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" kindref="member">subSurface</ref><sp/>:<sp/>std::as_const(d-&gt;current-&gt;subsurface.below))<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1a89a3676d287e67529ad85f250dbfbeb5" kindref="member">SurfaceInterface</ref><sp/>*childSurface<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" kindref="member">subSurface</ref>-&gt;surface();</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect<sp/>|=<sp/>childSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1ac312d3dd7257a9e1c7d5465a0c35fc2e" kindref="member">boundingRect</ref>().translated(<ref refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" kindref="member">subSurface</ref>-&gt;position());</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" kindref="member">subSurface</ref><sp/>:<sp/>std::as_const(d-&gt;current-&gt;subsurface.above))<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1a89a3676d287e67529ad85f250dbfbeb5" kindref="member">SurfaceInterface</ref><sp/>*childSurface<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" kindref="member">subSurface</ref>-&gt;surface();</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect<sp/>|=<sp/>childSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1ac312d3dd7257a9e1c7d5465a0c35fc2e" kindref="member">boundingRect</ref>().translated(<ref refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" kindref="member">subSurface</ref>-&gt;position());</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rect;</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940" refid="class_k_win_1_1_surface_interface_1a76a84d1cdeca1c0c219a863a1c1fa42c" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_shadow_interface" kindref="compound">ShadowInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a76a84d1cdeca1c0c219a863a1c1fa42c" kindref="member">SurfaceInterface::shadow</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="941"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;current-&gt;shadow;</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945" refid="class_k_win_1_1_surface_interface_1a496b8ea7a9daee6fca45c95e80bb8a0c" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_blur_interface" kindref="compound">BlurInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a496b8ea7a9daee6fca45c95e80bb8a0c" kindref="member">SurfaceInterface::blur</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="946"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;current-&gt;blur;</highlight></codeline>
<codeline lineno="948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950" refid="class_k_win_1_1_surface_interface_1a8c228ce629146acad506722342999f26" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_contrast_interface" kindref="compound">ContrastInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a8c228ce629146acad506722342999f26" kindref="member">SurfaceInterface::contrast</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="951"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;current-&gt;<ref refid="class_k_win_1_1_contrast_interface_1a62d7e33b84a77ed0cff3530603b85ed8" kindref="member">contrast</ref>;</highlight></codeline>
<codeline lineno="953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955" refid="class_k_win_1_1_surface_interface_1a03bedbd16808f5fde244cd1ecddabc5c" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_slide_interface" kindref="compound">SlideInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a03bedbd16808f5fde244cd1ecddabc5c" kindref="member">SurfaceInterface::slideOnShowHide</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="956"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;current-&gt;slide;</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960" refid="class_k_win_1_1_surface_interface_1a5859a70ac95110b480eae0160b1b83f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1a5859a70ac95110b480eae0160b1b83f0" kindref="member">SurfaceInterface::isMapped</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="961"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;mapped;</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965" refid="class_k_win_1_1_surface_interface_1a7715aa26db105726d096236a94df69d5" refkind="member"><highlight class="normal">QList&lt;OutputInterface<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_surface_interface_1a7715aa26db105726d096236a94df69d5" kindref="member">SurfaceInterface::outputs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="966"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;outputs;</highlight></codeline>
<codeline lineno="968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970" refid="class_k_win_1_1_surface_interface_1abad9449df6afe4574c7f48f3a31f53a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1abad9449df6afe4574c7f48f3a31f53a3" kindref="member">SurfaceInterface::setOutputs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;OutputInterface<sp/>*&gt;<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_1a7715aa26db105726d096236a94df69d5" kindref="member">outputs</ref>,<sp/><ref refid="class_k_win_1_1_output_interface" kindref="compound">OutputInterface</ref><sp/>*primaryOutput)</highlight></codeline>
<codeline lineno="971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;outputs<sp/>==<sp/><ref refid="class_k_win_1_1_surface_interface_1a7715aa26db105726d096236a94df69d5" kindref="member">outputs</ref><sp/>&amp;&amp;<sp/>d-&gt;primaryOutput<sp/>==<sp/>primaryOutput)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;OutputInterface<sp/>*&gt;<sp/>removedOutputs<sp/>=<sp/>d-&gt;outputs;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a7715aa26db105726d096236a94df69d5" kindref="member">outputs</ref>.constBegin(),<sp/>end<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a7715aa26db105726d096236a94df69d5" kindref="member">outputs</ref>.constEnd();<sp/>it<sp/>!=<sp/>end;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>o<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removedOutputs.removeOne(o);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>removedOutputs.constBegin(),<sp/>end<sp/>=<sp/>removedOutputs.constEnd();<sp/>it<sp/>!=<sp/>end;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resources<sp/>=<sp/>(*it)-&gt;clientResources(<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>()-&gt;<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>());</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(wl_resource<sp/>*outputResource<sp/>:<sp/>resources)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_leave(outputResource);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;outputDestroyedConnections.take(*it));</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;outputBoundConnections.take(*it));</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;OutputInterface<sp/>*&gt;<sp/>addedOutputsOutputs<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a7715aa26db105726d096236a94df69d5" kindref="member">outputs</ref>;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>d-&gt;outputs.constBegin(),<sp/>end<sp/>=<sp/>d-&gt;outputs.constEnd();<sp/>it<sp/>!=<sp/>end;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>o<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addedOutputsOutputs.removeOne(o);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>addedOutputsOutputs.constBegin(),<sp/>end<sp/>=<sp/>addedOutputsOutputs.constEnd();<sp/>it<sp/>!=<sp/>end;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>o<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resources<sp/>=<sp/>o-&gt;clientResources(<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>()-&gt;<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>());</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(wl_resource<sp/>*outputResource<sp/>:<sp/>resources)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_enter(outputResource);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;outputDestroyedConnections[o]<sp/>=<sp/>connect(o,<sp/>&amp;<ref refid="class_k_win_1_1_output_interface_1aabe8839279b9d4583810c2ebd4e9487a" kindref="member">OutputInterface::removed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>o]<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1a7715aa26db105726d096236a94df69d5" kindref="member">outputs</ref><sp/>=<sp/>d-&gt;outputs;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface_1a7715aa26db105726d096236a94df69d5" kindref="member">outputs</ref>.removeOne(o))<sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_1abad9449df6afe4574c7f48f3a31f53a3" kindref="member">setOutputs</ref>(<ref refid="class_k_win_1_1_surface_interface_1a7715aa26db105726d096236a94df69d5" kindref="member">outputs</ref>,<sp/>d-&gt;primaryOutput);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(!d-&gt;outputBoundConnections.contains(o));</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;outputBoundConnections[o]<sp/>=<sp/>connect(o,<sp/>&amp;<ref refid="class_k_win_1_1_output_interface_1a6d287bbdace7f5159eac83f5c2e79b19" kindref="member">OutputInterface::bound</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref><sp/>*c,<sp/>wl_resource<sp/>*outputResource)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/><ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_enter(outputResource);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;outputs<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a7715aa26db105726d096236a94df69d5" kindref="member">outputs</ref>;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;primaryOutput<sp/>=<sp/>primaryOutput;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>child<sp/>:<sp/>std::as_const(d-&gt;current-&gt;subsurface.below))<sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;surface()-&gt;setOutputs(<ref refid="class_k_win_1_1_surface_interface_1a7715aa26db105726d096236a94df69d5" kindref="member">outputs</ref>,<sp/>primaryOutput);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>child<sp/>:<sp/>std::as_const(d-&gt;current-&gt;subsurface.above))<sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;surface()-&gt;setOutputs(<ref refid="class_k_win_1_1_surface_interface_1a7715aa26db105726d096236a94df69d5" kindref="member">outputs</ref>,<sp/>primaryOutput);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026" refid="class_k_win_1_1_surface_interface_1a121877c312e955cc43e6aa4d337a525d" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface_1a89a3676d287e67529ad85f250dbfbeb5" kindref="member">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1a121877c312e955cc43e6aa4d337a525d" kindref="member">SurfaceInterface::surfaceAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;position)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_surface_interface_1a5859a70ac95110b480eae0160b1b83f0" kindref="member">isMapped</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>d-&gt;current-&gt;subsurface.above.crbegin();<sp/>it<sp/>!=<sp/>d-&gt;current-&gt;subsurface.above.crend();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*current<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_1a89a3676d287e67529ad85f250dbfbeb5" kindref="member">SurfaceInterface</ref><sp/>*surface<sp/>=<sp/>current-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1a835e595db96452e83d9bcc23b3e48d68" kindref="member">surface</ref>();</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a121877c312e955cc43e6aa4d337a525d" kindref="member">surfaceAt</ref>(position<sp/>-<sp/>current-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1a89fa5bfb83370e1b02c88d70391baa1b" kindref="member">position</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>whether<sp/>the<sp/>geometry<sp/>contains<sp/>the<sp/>pos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;contains(position))<sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>d-&gt;current-&gt;subsurface.below.crbegin();<sp/>it<sp/>!=<sp/>d-&gt;current-&gt;subsurface.below.crend();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*current<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_1a89a3676d287e67529ad85f250dbfbeb5" kindref="member">SurfaceInterface</ref><sp/>*surface<sp/>=<sp/>current-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1a835e595db96452e83d9bcc23b3e48d68" kindref="member">surface</ref>();</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a121877c312e955cc43e6aa4d337a525d" kindref="member">surfaceAt</ref>(position<sp/>-<sp/>current-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1a89fa5bfb83370e1b02c88d70391baa1b" kindref="member">position</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055" refid="class_k_win_1_1_surface_interface_1af7a3a3ccbdff6ffd690e357fd02f2fcc" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface_1a89a3676d287e67529ad85f250dbfbeb5" kindref="member">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1af7a3a3ccbdff6ffd690e357fd02f2fcc" kindref="member">SurfaceInterface::inputSurfaceAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;position)</highlight></codeline>
<codeline lineno="1056"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Most<sp/>of<sp/>this<sp/>is<sp/>very<sp/>similar<sp/>to<sp/>SurfaceInterface::surfaceAt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Is<sp/>there<sp/>a<sp/>way<sp/>to<sp/>reduce<sp/>the<sp/>code<sp/>duplication?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_surface_interface_1a5859a70ac95110b480eae0160b1b83f0" kindref="member">isMapped</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>d-&gt;current-&gt;subsurface.above.crbegin();<sp/>it<sp/>!=<sp/>d-&gt;current-&gt;subsurface.above.crend();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*current<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>surface<sp/>=<sp/>current-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1a835e595db96452e83d9bcc23b3e48d68" kindref="member">surface</ref>();</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>surface-&gt;inputSurfaceAt(position<sp/>-<sp/>current-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1a89fa5bfb83370e1b02c88d70391baa1b" kindref="member">position</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>whether<sp/>the<sp/>geometry<sp/>and<sp/>input<sp/>region<sp/>contain<sp/>the<sp/>pos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;inputContains(position))<sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>d-&gt;current-&gt;subsurface.below.crbegin();<sp/>it<sp/>!=<sp/>d-&gt;current-&gt;subsurface.below.crend();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*current<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>surface<sp/>=<sp/>current-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1a835e595db96452e83d9bcc23b3e48d68" kindref="member">surface</ref>();</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>surface-&gt;inputSurfaceAt(position<sp/>-<sp/>current-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1a89fa5bfb83370e1b02c88d70391baa1b" kindref="member">position</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087" refid="class_k_win_1_1_surface_interface_1adcc92bcb7baae24e72f17d6891251db4" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_locked_pointer_v1_interface" kindref="compound">LockedPointerV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1adcc92bcb7baae24e72f17d6891251db4" kindref="member">SurfaceInterface::lockedPointer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1088"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;lockedPointer;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092" refid="class_k_win_1_1_surface_interface_1ab47d49e9938d4a0ffc6c04699827bca9" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_confined_pointer_v1_interface" kindref="compound">ConfinedPointerV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1ab47d49e9938d4a0ffc6c04699827bca9" kindref="member">SurfaceInterface::confinedPointer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1093"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;confinedPointer;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097" refid="class_k_win_1_1_surface_interface_1ad04a4a624f04e1ea740924752a4229db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1ad04a4a624f04e1ea740924752a4229db" kindref="member">SurfaceInterface::inhibitsIdle</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1098"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!d-&gt;idleInhibitors.isEmpty();</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102" refid="class_k_win_1_1_surface_interface_1aa70cfee0dba3485d83ab4fc95bd87b0c" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback" kindref="compound">LinuxDmaBufV1Feedback</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1aa70cfee0dba3485d83ab4fc95bd87b0c" kindref="member">SurfaceInterface::dmabufFeedbackV1</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1103"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;dmabufFeedbackV1.get();</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107" refid="class_k_win_1_1_surface_interface_1a30d780e9ac910cb9b990b78778762b8f" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1ae822402a75b1dbd6c2afc72f87fa60a6" kindref="member">ContentType</ref><sp/><ref refid="class_k_win_1_1_surface_interface_1a30d780e9ac910cb9b990b78778762b8f" kindref="member">SurfaceInterface::contentType</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1108"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;current-&gt;contentType;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112" refid="class_k_win_1_1_surface_interface_1a5e267a0c51c75519a475004bd3437cef" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_surface_interface_1a5e267a0c51c75519a475004bd3437cef" kindref="member">SurfaceInterface::mapToChild</ref>(<ref refid="class_k_win_1_1_surface_interface_1a89a3676d287e67529ad85f250dbfbeb5" kindref="member">SurfaceInterface</ref><sp/>*child,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;point)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1113"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>local<sp/>=<sp/>point;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface_1a89a3676d287e67529ad85f250dbfbeb5" kindref="member">SurfaceInterface</ref><sp/>*surface<sp/>=<sp/>child;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surface<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>local;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*subsurface<sp/>=<sp/>surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a8c35c1fcb861e552405f054fc2386def" kindref="member">subSurface</ref>();</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q_UNLIKELY(!subsurface))<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF();</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local<sp/>-=<sp/>subsurface-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1a89fa5bfb83370e1b02c88d70391baa1b" kindref="member">position</ref>();</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface<sp/>=<sp/>subsurface-&gt;<ref refid="class_k_win_1_1_sub_surface_interface_1a53dea67dad7c6216621028e81082be6c" kindref="member">parentSurface</ref>();</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF();</highlight></codeline>
<codeline lineno="1132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134" refid="class_k_win_1_1_surface_interface_1aedcd504f5954c1ed715e34d868096a61" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_surface_interface_1aedcd504f5954c1ed715e34d868096a61" kindref="member">SurfaceInterface::scaleOverride</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1135"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;scaleOverride;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139" refid="class_k_win_1_1_surface_interface_1a72be072046416f8e0c7e7689c76cdd77" refkind="member"><highlight class="normal">QPoint<sp/><ref refid="class_k_win_1_1_surface_interface_1a72be072046416f8e0c7e7689c76cdd77" kindref="member">SurfaceInterface::toSurfaceLocal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;point)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1140"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPoint(point.x()<sp/>*<sp/>d-&gt;scaleOverride,<sp/>point.y()<sp/>*<sp/>d-&gt;scaleOverride);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144" refid="class_k_win_1_1_surface_interface_1addc81521241e04558d1b4d576e6be1c9" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_surface_interface_1a72be072046416f8e0c7e7689c76cdd77" kindref="member">SurfaceInterface::toSurfaceLocal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;point)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1145"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(point.x()<sp/>*<sp/>d-&gt;scaleOverride,<sp/>point.y()<sp/>*<sp/>d-&gt;scaleOverride);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149" refid="class_k_win_1_1_surface_interface_1a1d4a2ed7869d836e854c323c9ab6da15" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1a9b2c7d76c9b9021af62d089e13e456d6" kindref="member">PresentationModeHint</ref><sp/><ref refid="class_k_win_1_1_surface_interface_1a1d4a2ed7869d836e854c323c9ab6da15" kindref="member">SurfaceInterface::presentationModeHint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1150"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;current-&gt;presentationHint;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154" refid="class_k_win_1_1_surface_interface_1a0f4fc57574afca45ef63a20e004cb5c7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_1a0f4fc57574afca45ef63a20e004cb5c7" kindref="member">SurfaceInterface::colorDescription</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1155"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;current-&gt;colorDescription;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159" refid="class_k_win_1_1_surface_interface_1a608048fe714d1f56d16c3eab604a3ef5" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9" kindref="member">RenderingIntent</ref><sp/><ref refid="class_k_win_1_1_surface_interface_1a608048fe714d1f56d16c3eab604a3ef5" kindref="member">SurfaceInterface::renderingIntent</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1160"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;current-&gt;renderingIntent;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164" refid="class_k_win_1_1_surface_interface_1ac68a339a2abcc856493392bed36087e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1ac68a339a2abcc856493392bed36087e9" kindref="member">SurfaceInterface::setPreferredColorDescription</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>&amp;descr)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;preferredColorDescription<sp/>==<sp/>descr)<sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;preferredColorDescription<sp/>=<sp/>descr;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;frogColorManagement)<sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;frogColorManagement-&gt;setPreferredColorDescription(descr);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>feedbackSurface<sp/>:<sp/>std::as_const(d-&gt;colorFeedbackSurfaces))<sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feedbackSurface-&gt;setPreferredColorDescription(descr);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>child<sp/>:<sp/>std::as_const(d-&gt;current-&gt;subsurface.below))<sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;surface()-&gt;setPreferredColorDescription(descr);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>child<sp/>:<sp/>std::as_const(d-&gt;current-&gt;subsurface.above))<sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;surface()-&gt;setPreferredColorDescription(descr);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184" refid="class_k_win_1_1_surface_interface_1a361edd675ef00ecf53b25cc0886993ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1a361edd675ef00ecf53b25cc0886993ea" kindref="member">SurfaceInterface::setPreferredBufferScale</ref>(qreal<sp/>scale)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>==<sp/>d-&gt;preferredBufferScale)<sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;preferredBufferScale<sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;fractionalScaleExtension)<sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;fractionalScaleExtension-&gt;setPreferredScale(scale);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;resource()-&gt;version()<sp/>&gt;=<sp/>WL_SURFACE_PREFERRED_BUFFER_SCALE_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_preferred_buffer_scale(std::ceil(scale));</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>child<sp/>:<sp/>std::as_const(d-&gt;current-&gt;subsurface.below))<sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;surface()-&gt;setPreferredBufferScale(scale);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>child<sp/>:<sp/>std::as_const(d-&gt;current-&gt;subsurface.above))<sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;surface()-&gt;setPreferredBufferScale(scale);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206" refid="class_k_win_1_1_surface_interface_1a4d261ead21e8952d3b136fb17e60a0cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1a4d261ead21e8952d3b136fb17e60a0cb" kindref="member">SurfaceInterface::setPreferredBufferTransform</ref>(<ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref><sp/>transform)</highlight></codeline>
<codeline lineno="1207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transform<sp/>==<sp/>d-&gt;preferredBufferTransform)<sp/>{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;preferredBufferTransform<sp/>=<sp/>transform;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;resource()-&gt;version()<sp/>&gt;=<sp/>WL_SURFACE_PREFERRED_BUFFER_TRANSFORM_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_preferred_buffer_transform(uint32_t(transform.<ref refid="class_k_win_1_1_output_transform_1a616973bbf05f161040b6cfbaec44f0a7" kindref="member">kind</ref>()));</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>child<sp/>:<sp/>std::as_const(d-&gt;current-&gt;subsurface.below))<sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;surface()-&gt;setPreferredBufferTransform(transform);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>child<sp/>:<sp/>std::as_const(d-&gt;current-&gt;subsurface.above))<sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;surface()-&gt;setPreferredBufferTransform(transform);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225" refid="class_k_win_1_1_surface_interface_1aa8823a4917971939e10f6bbaf33c08e2" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_transaction" kindref="compound">Transaction</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1aa8823a4917971939e10f6bbaf33c08e2" kindref="member">SurfaceInterface::firstTransaction</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1226"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;firstTransaction;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230" refid="class_k_win_1_1_surface_interface_1a81e1ee5acae349923c0c72c4b8a51409" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1a81e1ee5acae349923c0c72c4b8a51409" kindref="member">SurfaceInterface::setFirstTransaction</ref>(<ref refid="class_k_win_1_1_transaction" kindref="compound">Transaction</ref><sp/>*transaction)</highlight></codeline>
<codeline lineno="1231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;firstTransaction<sp/>=<sp/>transaction;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235" refid="class_k_win_1_1_surface_interface_1afca7daaa7341bed830b250e84e3a8b43" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_transaction" kindref="compound">Transaction</ref><sp/>*<ref refid="class_k_win_1_1_surface_interface_1afca7daaa7341bed830b250e84e3a8b43" kindref="member">SurfaceInterface::lastTransaction</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1236"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;lastTransaction;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240" refid="class_k_win_1_1_surface_interface_1a5f6f5f6c29fa8f1438b2cd2dfa1e8ef4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1a5f6f5f6c29fa8f1438b2cd2dfa1e8ef4" kindref="member">SurfaceInterface::setLastTransaction</ref>(<ref refid="class_k_win_1_1_transaction" kindref="compound">Transaction</ref><sp/>*transaction)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;lastTransaction<sp/>=<sp/>transaction;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245" refid="class_k_win_1_1_surface_interface_1a57406faaa8efaae58d1ed4428059b0b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1a57406faaa8efaae58d1ed4428059b0b3" kindref="member">SurfaceInterface::traverseTree</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(<ref refid="class_k_win_1_1_surface_interface_1a89a3676d287e67529ad85f250dbfbeb5" kindref="member">SurfaceInterface</ref><sp/>*surface)&gt;<sp/>callback)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>callback(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*subsurface<sp/>:<sp/>std::as_const(d-&gt;current-&gt;subsurface.below))<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsurface-&gt;surface()-&gt;traverseTree(callback);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref><sp/>*subsurface<sp/>:<sp/>std::as_const(d-&gt;current-&gt;subsurface.above))<sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsurface-&gt;surface()-&gt;traverseTree(callback);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257" refid="class_k_win_1_1_surface_interface_1abfedbb06b4fff6bad9515db700823d8f" refkind="member"><highlight class="normal">std::shared_ptr&lt;SyncReleasePoint&gt;<sp/><ref refid="class_k_win_1_1_surface_interface_1abfedbb06b4fff6bad9515db700823d8f" kindref="member">SurfaceInterface::bufferReleasePoint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1258"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;current-&gt;releasePoint;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262" refid="class_k_win_1_1_surface_interface_1a8cf8570b2d56ec00d5b4f8612aee08eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface_1a8cf8570b2d56ec00d5b4f8612aee08eb" kindref="member">SurfaceInterface::alphaMultiplier</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1263"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;current-&gt;alphaMultiplier;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_surface.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/surface.cpp"/>
  </compounddef>
</doxygen>
