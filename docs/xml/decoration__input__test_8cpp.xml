<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="decoration__input__test_8cpp" kind="file" language="C++">
    <compoundname>decoration_input_test.cpp</compoundname>
    <includes refid="kwin__wayland__test_8h" local="yes">kwin_wayland_test.h</includes>
    <includes refid="core_2output_8h" local="yes">core/output.h</includes>
    <includes refid="cursor_8h" local="yes">cursor.h</includes>
    <includes refid="internalwindow_8h" local="yes">internalwindow.h</includes>
    <includes refid="pointer__input_8h" local="yes">pointer_input.h</includes>
    <includes refid="touch__input_8h" local="yes">touch_input.h</includes>
    <includes refid="wayland__server_8h" local="yes">wayland_server.h</includes>
    <includes local="yes">window.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes refid="decoratedwindow_8h" local="yes">decorations/decoratedwindow.h</includes>
    <includes refid="decorationbridge_8h" local="yes">decorations/decorationbridge.h</includes>
    <includes refid="settings_8h" local="yes">decorations/settings.h</includes>
    <includes local="no">KWayland/Client/compositor.h</includes>
    <includes local="no">KWayland/Client/connection_thread.h</includes>
    <includes local="no">KWayland/Client/keyboard.h</includes>
    <includes local="no">KWayland/Client/pointer.h</includes>
    <includes local="no">KWayland/Client/seat.h</includes>
    <includes local="no">KWayland/Client/shm_pool.h</includes>
    <includes local="no">KWayland/Client/surface.h</includes>
    <includes local="no">KDecoration3/Decoration</includes>
    <includes local="no">KDecoration3/DecorationSettings</includes>
    <includes local="no">QSignalSpy</includes>
    <includes local="no">linux/input.h</includes>
    <includes local="yes">decoration_input_test.moc</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/autotests/integration/decoration_input_test.cpp</label>
        <link refid="decoration__input__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kwin_wayland_test.h</label>
        <link refid="kwin__wayland__test_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>decorations/decoratedwindow.h</label>
        <link refid="decoratedwindow_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>decorations/decorationbridge.h</label>
        <link refid="decorationbridge_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>decorations/settings.h</label>
        <link refid="settings_8h"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>input.h</label>
        <link refid="input_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>internalwindow.h</label>
        <link refid="internalwindow_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>pointer_input.h</label>
        <link refid="pointer__input_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>rules.h</label>
        <link refid="rules_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>touch_input.h</label>
        <link refid="touch__input_8h"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>utils/cursortheme.h</label>
        <link refid="cursortheme_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>wayland_server.h</label>
        <link refid="wayland__server_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>window.h</label>
        <link refid="window_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>KConfigGroup</label>
      </node>
      <node id="61">
        <label>KConfigWatcher</label>
      </node>
      <node id="104">
        <label>KDecoration3/Decoration</label>
      </node>
      <node id="105">
        <label>KDecoration3/DecorationSettings</label>
      </node>
      <node id="92">
        <label>KDecoration3/Private/DecoratedWindowPrivate</label>
      </node>
      <node id="95">
        <label>KDecoration3/Private/DecorationBridge</label>
      </node>
      <node id="97">
        <label>KDecoration3/Private/DecorationSettingsPrivate</label>
      </node>
      <node id="48">
        <label>KSharedConfig</label>
      </node>
      <node id="98">
        <label>KWayland/Client/compositor.h</label>
      </node>
      <node id="99">
        <label>KWayland/Client/connection_thread.h</label>
      </node>
      <node id="100">
        <label>KWayland/Client/keyboard.h</label>
      </node>
      <node id="101">
        <label>KWayland/Client/pointer.h</label>
      </node>
      <node id="102">
        <label>KWayland/Client/seat.h</label>
      </node>
      <node id="103">
        <label>KWayland/Client/shm_pool.h</label>
      </node>
      <node id="17">
        <label>KWayland/Client/surface.h</label>
      </node>
      <node id="58">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="59">
        <label>QApplication</label>
      </node>
      <node id="40">
        <label>QByteArray</label>
      </node>
      <node id="6">
        <label>QCoreApplication</label>
      </node>
      <node id="86">
        <label>QDBusContext</label>
      </node>
      <node id="87">
        <label>QDataStream</label>
      </node>
      <node id="93">
        <label>QDeadlineTimer</label>
      </node>
      <node id="43">
        <label>QDebug</label>
      </node>
      <node id="70">
        <label>QElapsedTimer</label>
      </node>
      <node id="47">
        <label>QHash</label>
      </node>
      <node id="71">
        <label>QIcon</label>
      </node>
      <node id="7">
        <label>QImage</label>
      </node>
      <node id="72">
        <label>QKeySequence</label>
      </node>
      <node id="41">
        <label>QList</label>
      </node>
      <node id="67">
        <label>QLoggingCategory</label>
      </node>
      <node id="39">
        <label>QMatrix4x4</label>
      </node>
      <node id="12">
        <label>QObject</label>
      </node>
      <node id="8">
        <label>QPoint</label>
      </node>
      <node id="81">
        <label>QPointF</label>
      </node>
      <node id="73">
        <label>QPointer</label>
      </node>
      <node id="60">
        <label>QProcessEnvironment</label>
      </node>
      <node id="44">
        <label>QRect</label>
      </node>
      <node id="63">
        <label>QRectF</label>
      </node>
      <node id="77">
        <label>QSet</label>
      </node>
      <node id="79">
        <label>QSharedDataPointer</label>
      </node>
      <node id="15">
        <label>QSignalSpy</label>
      </node>
      <node id="42">
        <label>QSize</label>
      </node>
      <node id="66">
        <label>QString</label>
      </node>
      <node id="88">
        <label>QStringList</label>
      </node>
      <node id="16">
        <label>QTest</label>
      </node>
      <node id="74">
        <label>QTimer</label>
      </node>
      <node id="45">
        <label>QUuid</label>
      </node>
      <node id="9">
        <label>QVariant</label>
      </node>
      <node id="10">
        <label>QVector2D</label>
      </node>
      <node id="80">
        <label>chrono</label>
      </node>
      <node id="68">
        <label>climits</label>
      </node>
      <node id="5">
        <label>config-kwin.h</label>
      </node>
      <node id="107">
        <label>decoration_input_test.moc</label>
      </node>
      <node id="69">
        <label>functional</label>
      </node>
      <node id="11">
        <label>kwin_export.h</label>
      </node>
      <node id="106">
        <label>linux/input.h</label>
      </node>
      <node id="13">
        <label>main.h</label>
      </node>
      <node id="57">
        <label>memory</label>
      </node>
      <node id="90">
        <label>netwm_def.h</label>
      </node>
      <node id="18">
        <label>optional</label>
      </node>
      <node id="19">
        <label>qwayland-color-management-v1.h</label>
      </node>
      <node id="20">
        <label>qwayland-cursor-shape-v1.h</label>
      </node>
      <node id="21">
        <label>qwayland-fake-input.h</label>
      </node>
      <node id="22">
        <label>qwayland-fractional-scale-v1.h</label>
      </node>
      <node id="23">
        <label>qwayland-idle-inhibit-unstable-v1.h</label>
      </node>
      <node id="24">
        <label>qwayland-input-method-unstable-v1.h</label>
      </node>
      <node id="25">
        <label>qwayland-kde-output-device-v2.h</label>
      </node>
      <node id="26">
        <label>qwayland-kde-output-management-v2.h</label>
      </node>
      <node id="27">
        <label>qwayland-kde-screen-edge-v1.h</label>
      </node>
      <node id="28">
        <label>qwayland-security-context-v1.h</label>
      </node>
      <node id="29">
        <label>qwayland-text-input-unstable-v3.h</label>
      </node>
      <node id="30">
        <label>qwayland-wlr-layer-shell-unstable-v1.h</label>
      </node>
      <node id="31">
        <label>qwayland-xdg-decoration-unstable-v1.h</label>
      </node>
      <node id="32">
        <label>qwayland-xdg-dialog-v1.h</label>
      </node>
      <node id="33">
        <label>qwayland-xdg-shell.h</label>
      </node>
      <node id="34">
        <label>qwayland-zkde-screencast-unstable-v1.h</label>
      </node>
      <node id="53">
        <label>utility</label>
      </node>
      <node id="14">
        <label>window.h</label>
      </node>
      <node id="49">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_k_win_1_1_decoration_input_test" prot="public">KWin::DecorationInputTest</innerclass>
    <innerclass refid="class_k_win_1_1_event_helper" prot="public">KWin::EventHelper</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" prot="public" static="no">
        <name>MOTION</name>
        <param><defname>target</defname></param>
        <initializer>Test::pointerMotion(target, timestamp++)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/decoration_input_test.cpp" line="76" column="9" bodyfile="kwin/autotests/integration/decoration_input_test.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="decoration__input__test_8cpp_1a46a51002349c170aef3a8ff4e583bcfc" prot="public" static="no">
        <name>PRESS</name>
        <initializer>Test::pointerButtonPressed(BTN_LEFT, timestamp++)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/decoration_input_test.cpp" line="78" column="9" bodyfile="kwin/autotests/integration/decoration_input_test.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="decoration__input__test_8cpp_1a5bd9a30fc22d9a737ee060d41a4ec479" prot="public" static="no">
        <name>RELEASE</name>
        <initializer>Test::pointerButtonReleased(BTN_LEFT, timestamp++)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/decoration_input_test.cpp" line="80" column="9" bodyfile="kwin/autotests/integration/decoration_input_test.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="decoration__input__test_8cpp_1a4222f76513600fb74dd51a968a774aa8" prot="public" static="no">
        <name>VERIFY</name>
        <param><defname>statement</defname></param>
        <initializer>    if (!QTest::qVerify((statement), #statement, &quot;&quot;, __FILE__, __LINE__)) \
        return {nullptr, nullptr, nullptr, nullptr};</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/decoration_input_test.cpp" line="84" column="9"/>
      </memberdef>
      <memberdef kind="define" id="decoration__input__test_8cpp_1ad64b33a68d587ced26b6cfc88f453a6c" prot="public" static="no">
        <name>COMPARE</name>
        <param><defname>actual</defname></param>
        <param><defname>expected</defname></param>
        <initializer>    if (!QTest::qCompare(actual, expected, #actual, #expected, __FILE__, __LINE__)) \
        return {nullptr, nullptr, nullptr, nullptr};</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/decoration_input_test.cpp" line="87" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2016<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kwin__wayland__test_8h" kindref="compound">kwin_wayland_test.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2output_8h" kindref="compound">core/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cursor_8h" kindref="compound">cursor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="internalwindow_8h" kindref="compound">internalwindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer__input_8h" kindref="compound">pointer_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="touch__input_8h" kindref="compound">touch_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland__server_8h" kindref="compound">wayland_server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="decoratedwindow_8h" kindref="compound">decorations/decoratedwindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="decorationbridge_8h" kindref="compound">decorations/decorationbridge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="settings_8h" kindref="compound">decorations/settings.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/compositor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/connection_thread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/keyboard.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/pointer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/seat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/shm_pool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/surface.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KDecoration3/Decoration&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KDecoration3/DecorationSettings&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSignalSpy&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/input.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="x11keyread_8cpp_1ac0925a94f4858115ad1f04be885ac3b3" kindref="member">Q_DECLARE_METATYPE</ref>(Qt::WindowFrameSection)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>s_socketName<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;wayland_test_kwin_decoration_input-0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_k_win_1_1_decoration_input_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_decoration_input_test" kindref="compound">DecorationInputTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Q_SLOTS:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cleanup();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testAxis_data();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testAxis();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testDoubleClickOnAllDesktops();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testDoubleClickClose();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testDoubleTap();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testHover();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testPressToMove_data();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testPressToMove();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testTapToMove_data();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testTapToMove();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testResizeOutsideWindow_data();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testResizeOutsideWindow();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testModifierClickUnrestrictedMove_data();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testModifierClickUnrestrictedMove();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testModifierScrollOpacity_data();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testModifierScrollOpacity();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testTouchEvents();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testTooltipDoesntEatKeyEvents();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tuple&lt;Window<sp/>*,<sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;,<sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;,<sp/>std::unique_ptr&lt;Test::XdgToplevelDecorationV1&gt;&gt;<sp/>showWindow();</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOTION(target)<sp/>Test::pointerMotion(target,<sp/>timestamp++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="decoration__input__test_8cpp_1a46a51002349c170aef3a8ff4e583bcfc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRESS<sp/>Test::pointerButtonPressed(BTN_LEFT,<sp/>timestamp++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="decoration__input__test_8cpp_1a5bd9a30fc22d9a737ee060d41a4ec479" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RELEASE<sp/>Test::pointerButtonReleased(BTN_LEFT,<sp/>timestamp++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">std::tuple&lt;Window<sp/>*,<sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;,<sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;,<sp/>std::unique_ptr&lt;Test::XdgToplevelDecorationV1&gt;&gt;<sp/>DecorationInputTest::showWindow()</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERIFY(statement)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!QTest::qVerify((statement),<sp/>#statement,<sp/>&quot;&quot;,<sp/>__FILE__,<sp/>__LINE__))<sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>{nullptr,<sp/>nullptr,<sp/>nullptr,<sp/>nullptr};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMPARE(actual,<sp/>expected)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!QTest::qCompare(actual,<sp/>expected,<sp/>#actual,<sp/>#expected,<sp/>__FILE__,<sp/>__LINE__))<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>{nullptr,<sp/>nullptr,<sp/>nullptr,<sp/>nullptr};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface{<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>()};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a4222f76513600fb74dd51a968a774aa8" kindref="member">VERIFY</ref>(surface.get());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get(),<sp/><ref refid="namespace_k_win_1_1_test_1acc9401c7c509367c1bd5356379700924a77185debc8f1119630b3a59c3384d69d" kindref="member">Test::CreationSetup::CreateOnly</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a4222f76513600fb74dd51a968a774aa8" kindref="member">VERIFY</ref>(shellSurface.get());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevelDecorationV1&gt;<sp/>decoration<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a5b6ba1c532f1dec604fbb3a7bd44ee04" kindref="member">Test::createXdgToplevelDecorationV1</ref>(shellSurface.get());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a4222f76513600fb74dd51a968a774aa8" kindref="member">VERIFY</ref>(decoration.get());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>decorationConfigureRequestedSpy(decoration.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_decoration_v1_1a389a2bf556a1e31a46eeca8afb482619" kindref="member">Test::XdgToplevelDecorationV1::configureRequested</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceConfigureRequestedSpy(shellSurface-&gt;xdgSurface(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">Test::XdgSurface::configureRequested</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>decoration-&gt;set_mode(Test::XdgToplevelDecorationV1::mode_server_side);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>surface-&gt;commit(KWayland::Client::Surface::CommitFlag::None);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a4222f76513600fb74dd51a968a774aa8" kindref="member">VERIFY</ref>(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1ad64b33a68d587ced26b6cfc88f453a6c" kindref="member">COMPARE</ref>(decorationConfigureRequestedSpy.last().at(0).value&lt;Test::XdgToplevelDecorationV1::mode&gt;(),<sp/>Test::XdgToplevelDecorationV1::mode_server_side);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>let&apos;s<sp/>render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(500,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a4222f76513600fb74dd51a968a774aa8" kindref="member">VERIFY</ref>(window);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1ad64b33a68d587ced26b6cfc88f453a6c" kindref="member">COMPARE</ref>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activeWindow(),<sp/>window);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VERIFY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>COMPARE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{window,<sp/>std::move(surface),<sp/>std::move(shellSurface),<sp/>std::move(decoration)};</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::initTestCase()</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;KWin::Window<sp/>*&gt;();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;KWin::InternalWindow<sp/>*&gt;();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;init(s_socketName));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(1280,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>some<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>KSharedConfig::Ptr<sp/>config<sp/>=<sp/>KSharedConfig::openConfig(QString(),<sp/>KConfig::SimpleConfig);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;MouseBindings&quot;</highlight><highlight class="normal">)).writeEntry(</highlight><highlight class="stringliteral">&quot;CommandTitlebarWheel&quot;</highlight><highlight class="normal">,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;above/below&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Windows&quot;</highlight><highlight class="normal">)).writeEntry(</highlight><highlight class="stringliteral">&quot;TitlebarDoubleClickCommand&quot;</highlight><highlight class="normal">,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;OnAllDesktops&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Desktops&quot;</highlight><highlight class="normal">)).writeEntry(</highlight><highlight class="stringliteral">&quot;Number&quot;</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;sync();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>kwinApp()-&gt;setConfig(config);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>kwinApp()-&gt;start();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aaee7f44422f40ea8256b2f54e83a2b37" kindref="member">outputs</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputs.count(),<sp/>2);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputs[0]-&gt;geometry(),<sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputs[1]-&gt;geometry(),<sp/>QRect(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>setenv(</highlight><highlight class="stringliteral">&quot;QT_QPA_PLATFORM&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wayland&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::init()</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1a36c6e87757c3c97858c55b650c9d304c" kindref="member">Test::setupWaylandConnection</ref>(<ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a25c40c519686f155291de96c60796f70" kindref="member">Test::AdditionalWaylandInterface::Seat</ref><sp/>|<sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536aa3c659ec106f82ef9eb08668a1094ae3" kindref="member">Test::AdditionalWaylandInterface::XdgDecorationV1</ref>));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1ab4cf52ccd596caf6af24eb259913c597" kindref="member">Test::waitForWaylandPointer</ref>());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1abe694aeb41eaff7b515070ad0c11dba4" kindref="member">setActiveOutput</ref>(QPoint(640,<sp/>512));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(QPoint(640,<sp/>512));</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::cleanup()</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a12755bae9118cb958baf0efbd222d7c8" kindref="member">Test::destroyWaylandConnection</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testAxis_data()</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QPoint&gt;(</highlight><highlight class="stringliteral">&quot;decoPoint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;Qt::WindowFrameSection&gt;(</highlight><highlight class="stringliteral">&quot;expectedSection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;topLeft&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QPoint(0,<sp/>0)<sp/>&lt;&lt;<sp/>Qt::TopLeftSection;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;top&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QPoint(250,<sp/>0)<sp/>&lt;&lt;<sp/>Qt::TopSection;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;topRight&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QPoint(499,<sp/>0)<sp/>&lt;&lt;<sp/>Qt::TopRightSection;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testAxis()</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oneTick<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[window,<sp/>surface,<sp/>shellSurface,<sp/>decoration]<sp/>=<sp/>showWindow();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isDecorated());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;noBorder());</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;titlebarPosition(),<sp/>Qt::TopEdge);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;keepAbove());</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;keepBelow());</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>timestamp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;pointer()-&gt;decoration());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;pointer()-&gt;decoration()-&gt;decoration()-&gt;sectionUnderMouse(),<sp/>Qt::TitleBarArea);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>mouse<sp/>wheel<sp/>direction<sp/>looks<sp/>wrong<sp/>to<sp/>me</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simulate<sp/>wheel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1af420d2992ffcd40de8c3f31a69f71ade" kindref="member">Test::pointerAxisVertical</ref>(oneTick,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;keepBelow());</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;keepAbove());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1af420d2992ffcd40de8c3f31a69f71ade" kindref="member">Test::pointerAxisVertical</ref>(-oneTick,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;keepBelow());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;keepAbove());</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1af420d2992ffcd40de8c3f31a69f71ade" kindref="member">Test::pointerAxisVertical</ref>(-oneTick,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;keepBelow());</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;keepAbove());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>top<sp/>most<sp/>deco<sp/>pixel,<sp/>BUG:<sp/>362860</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPoint(0,<sp/>0));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QPoint,<sp/>decoPoint);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(decoPoint);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;pointer()-&gt;decoration());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;pointer()-&gt;decoration()-&gt;window(),<sp/>window);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>QTEST(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;pointer()-&gt;decoration()-&gt;decoration()-&gt;sectionUnderMouse(),<sp/></highlight><highlight class="stringliteral">&quot;expectedSection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1af420d2992ffcd40de8c3f31a69f71ade" kindref="member">Test::pointerAxisVertical</ref>(oneTick,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;keepBelow());</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;keepAbove());</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KWin::DecorationInputTest::testDoubleClickOnAllDesktops()</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>KConfigGroup<sp/>group<sp/>=<sp/>kwinApp()-&gt;config()-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Windows&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>group.writeEntry(</highlight><highlight class="stringliteral">&quot;TitlebarDoubleClickCommand&quot;</highlight><highlight class="normal">,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;OnAllDesktops&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>group.sync();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ae78f215cb85fe7ea6cadea0067efbc72" kindref="member">slotReconfigure</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[window,<sp/>surface,<sp/>shellSurface,<sp/>decoration]<sp/>=<sp/>showWindow();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isDecorated());</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;noBorder());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;isOnAllDesktops());</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>timestamp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>click</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a46a51002349c170aef3a8ff4e583bcfc" kindref="member">PRESS</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a5bd9a30fc22d9a737ee060d41a4ec479" kindref="member">RELEASE</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a46a51002349c170aef3a8ff4e583bcfc" kindref="member">PRESS</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a5bd9a30fc22d9a737ee060d41a4ec479" kindref="member">RELEASE</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isOnAllDesktops());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>click<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a46a51002349c170aef3a8ff4e583bcfc" kindref="member">PRESS</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a5bd9a30fc22d9a737ee060d41a4ec479" kindref="member">RELEASE</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isOnAllDesktops());</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a46a51002349c170aef3a8ff4e583bcfc" kindref="member">PRESS</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a5bd9a30fc22d9a737ee060d41a4ec479" kindref="member">RELEASE</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;isOnAllDesktops());</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testDoubleClickClose()</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>test<sp/>verifies<sp/>that<sp/>no<sp/>crash<sp/>occurs<sp/>when<sp/>double<sp/>click<sp/>is<sp/>configured<sp/>to<sp/>close<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>KConfigGroup<sp/>group<sp/>=<sp/>kwinApp()-&gt;config()-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Windows&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>group.writeEntry(</highlight><highlight class="stringliteral">&quot;TitlebarDoubleClickCommand&quot;</highlight><highlight class="normal">,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Close&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>group.sync();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ae78f215cb85fe7ea6cadea0067efbc72" kindref="member">slotReconfigure</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[window,<sp/>surface,<sp/>shellSurface,<sp/>decoration]<sp/>=<sp/>showWindow();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isDecorated());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>timestamp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(shellSurface.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1aca9814388f7a96f8ce6eaa3098c3dd18" kindref="member">Test::XdgToplevel::closeRequested</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[&amp;surface<sp/>=<sp/>surface]()<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface.reset();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>click</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>closedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1a75b348e50a34a4881ce281e40d1e8f02" kindref="member">Window::closed</ref>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;ref();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a46a51002349c170aef3a8ff4e583bcfc" kindref="member">PRESS</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a5bd9a30fc22d9a737ee060d41a4ec479" kindref="member">RELEASE</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a46a51002349c170aef3a8ff4e583bcfc" kindref="member">PRESS</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(closedSpy.wait());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a5bd9a30fc22d9a737ee060d41a4ec479" kindref="member">RELEASE</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isDeleted());</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;unref();</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KWin::DecorationInputTest::testDoubleTap()</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>KConfigGroup<sp/>group<sp/>=<sp/>kwinApp()-&gt;config()-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Windows&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>group.writeEntry(</highlight><highlight class="stringliteral">&quot;TitlebarDoubleClickCommand&quot;</highlight><highlight class="normal">,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;OnAllDesktops&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>group.sync();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ae78f215cb85fe7ea6cadea0067efbc72" kindref="member">slotReconfigure</ref>();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[window,<sp/>surface,<sp/>shellSurface,<sp/>decoration]<sp/>=<sp/>showWindow();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isDecorated());</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;noBorder());</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;isOnAllDesktops());</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>timestamp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>tapPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>tap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a23de04a19c3519614786ab986c0c1e7c" kindref="member">Test::touchDown</ref>(0,<sp/>tapPoint,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1abe1cb34b00c3dce9daa8ba37ce7c402b" kindref="member">Test::touchUp</ref>(0,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a23de04a19c3519614786ab986c0c1e7c" kindref="member">Test::touchDown</ref>(0,<sp/>tapPoint,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1abe1cb34b00c3dce9daa8ba37ce7c402b" kindref="member">Test::touchUp</ref>(0,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isOnAllDesktops());</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>tap<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a23de04a19c3519614786ab986c0c1e7c" kindref="member">Test::touchDown</ref>(0,<sp/>tapPoint,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1abe1cb34b00c3dce9daa8ba37ce7c402b" kindref="member">Test::touchUp</ref>(0,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isOnAllDesktops());</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a23de04a19c3519614786ab986c0c1e7c" kindref="member">Test::touchDown</ref>(0,<sp/>tapPoint,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1abe1cb34b00c3dce9daa8ba37ce7c402b" kindref="member">Test::touchUp</ref>(0,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;isOnAllDesktops());</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testHover()</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[window,<sp/>surface,<sp/>shellSurface,<sp/>decoration]<sp/>=<sp/>showWindow();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isDecorated());</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;noBorder());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>our<sp/>left<sp/>border<sp/>is<sp/>moved<sp/>out<sp/>of<sp/>the<sp/>visible<sp/>area,<sp/>so<sp/>move<sp/>the<sp/>window<sp/>to<sp/>a<sp/>better<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPoint(20,<sp/>0));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>timestamp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;cursor(),<sp/>CursorShape(Qt::ArrowCursor));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>a<sp/>mismatch<sp/>of<sp/>the<sp/>cursor<sp/>key<sp/>positions<sp/>between<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>and<sp/>without<sp/>borders<sp/>(with<sp/>borders<sp/>one<sp/>can<sp/>move<sp/>inside<sp/>a<sp/>bit<sp/>and<sp/>still</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>on<sp/>an<sp/>edge,<sp/>without<sp/>not).<sp/>We<sp/>should<sp/>make<sp/>this<sp/>consistent<sp/>in<sp/>KWin&apos;s<sp/>core.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Test<sp/>input<sp/>position<sp/>with<sp/>different<sp/>border<sp/>sizes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>We<sp/>should<sp/>test<sp/>with<sp/>the<sp/>fake<sp/>decoration<sp/>to<sp/>have<sp/>a<sp/>fixed<sp/>test<sp/>environment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasBorders<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a83a4d2853a17494f680716e42f2d9799" kindref="member">decorationBridge</ref>()-&gt;<ref refid="class_k_win_1_1_decoration_1_1_decoration_bridge_1a9bad6843806bfe113511debe7e2808c3" kindref="member">settings</ref>()-&gt;borderSize()<sp/>!=<sp/>KDecoration3::BorderSize::None;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>deviation<sp/>=<sp/>[hasBorders]<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hasBorders<sp/>?<sp/>-1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().x(),<sp/>0));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;cursor(),<sp/>CursorShape(<ref refid="namespace_k_win_1_1_extended_cursor_1a7cb2d5bc7b5966a1499c5f6e3048c290a9ad5d6446235ab7a7d35fb34c5bb2a9d" kindref="member">KWin::ExtendedCursor::SizeNorthWest</ref>));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().x()<sp/>+<sp/>window-&gt;frameGeometry().width()<sp/>/<sp/>2,<sp/>0));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;cursor(),<sp/>CursorShape(<ref refid="namespace_k_win_1_1_extended_cursor_1a7cb2d5bc7b5966a1499c5f6e3048c290a30ccb8d95fe229cd1d6b3c3c36f8152d" kindref="member">KWin::ExtendedCursor::SizeNorth</ref>));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().x()<sp/>+<sp/>window-&gt;frameGeometry().width()<sp/>-<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;cursor(),<sp/>CursorShape(<ref refid="namespace_k_win_1_1_extended_cursor_1a7cb2d5bc7b5966a1499c5f6e3048c290aeb9e779a82ab19389bf0416eab4e6b7c" kindref="member">KWin::ExtendedCursor::SizeNorthEast</ref>));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().x()<sp/>+<sp/>window-&gt;frameGeometry().width()<sp/>+<sp/>deviation(),<sp/>window-&gt;height()<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;cursor(),<sp/>CursorShape(<ref refid="namespace_k_win_1_1_extended_cursor_1a7cb2d5bc7b5966a1499c5f6e3048c290a0ce4cf641e5de6c6e7e17514bb223f5e" kindref="member">KWin::ExtendedCursor::SizeEast</ref>));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().x()<sp/>+<sp/>window-&gt;frameGeometry().width()<sp/>+<sp/>deviation(),<sp/>window-&gt;height()<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;cursor(),<sp/>CursorShape(<ref refid="namespace_k_win_1_1_extended_cursor_1a7cb2d5bc7b5966a1499c5f6e3048c290ace921a5459888ba61bd5e21a7a2ff423" kindref="member">KWin::ExtendedCursor::SizeSouthEast</ref>));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().x()<sp/>+<sp/>window-&gt;frameGeometry().width()<sp/>/<sp/>2,<sp/>window-&gt;height()<sp/>+<sp/>deviation()));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;cursor(),<sp/>CursorShape(<ref refid="namespace_k_win_1_1_extended_cursor_1a7cb2d5bc7b5966a1499c5f6e3048c290afe568b1bfe4a2e6ccbc37ea72868bfcc" kindref="member">KWin::ExtendedCursor::SizeSouth</ref>));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().x(),<sp/>window-&gt;height()<sp/>+<sp/>deviation()));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;cursor(),<sp/>CursorShape(<ref refid="namespace_k_win_1_1_extended_cursor_1a7cb2d5bc7b5966a1499c5f6e3048c290a9de72becd09e878d040a7e7c1573edf0" kindref="member">KWin::ExtendedCursor::SizeSouthWest</ref>));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().x()<sp/>-<sp/>1,<sp/>window-&gt;height()<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;cursor(),<sp/>CursorShape(<ref refid="namespace_k_win_1_1_extended_cursor_1a7cb2d5bc7b5966a1499c5f6e3048c290af2d9a06ae3fc3210a33c9ee539baa44b" kindref="member">KWin::ExtendedCursor::SizeWest</ref>));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(window-&gt;frameGeometry().center());</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>QEXPECT_FAIL(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Cursor<sp/>not<sp/>set<sp/>back<sp/>on<sp/>leave&quot;</highlight><highlight class="normal">,<sp/>Continue);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;cursor(),<sp/>CursorShape(Qt::ArrowCursor));</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testPressToMove_data()</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QPoint&gt;(</highlight><highlight class="stringliteral">&quot;offset&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QPoint&gt;(</highlight><highlight class="stringliteral">&quot;offset2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QPoint&gt;(</highlight><highlight class="stringliteral">&quot;offset3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;To<sp/>right&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QPoint(10,<sp/>0)<sp/>&lt;&lt;<sp/>QPoint(20,<sp/>0)<sp/>&lt;&lt;<sp/>QPoint(30,<sp/>0);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;To<sp/>left&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QPoint(-10,<sp/>0)<sp/>&lt;&lt;<sp/>QPoint(-20,<sp/>0)<sp/>&lt;&lt;<sp/>QPoint(-30,<sp/>0);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;To<sp/>bottom&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QPoint(0,<sp/>10)<sp/>&lt;&lt;<sp/>QPoint(0,<sp/>20)<sp/>&lt;&lt;<sp/>QPoint(0,<sp/>30);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;To<sp/>top&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QPoint(0,<sp/>-10)<sp/>&lt;&lt;<sp/>QPoint(0,<sp/>-20)<sp/>&lt;&lt;<sp/>QPoint(0,<sp/>-30);</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testPressToMove()</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[window,<sp/>surface,<sp/>shellSurface,<sp/>decoration]<sp/>=<sp/>showWindow();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isDecorated());</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;noBorder());</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activeOutput()-&gt;geometry().center()<sp/>-<sp/>QPoint(window-&gt;width()<sp/>/<sp/>2,<sp/>window-&gt;height()<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>interactiveMoveResizeStartedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1a010201206994e942640621e136fb90c4" kindref="member">Window::interactiveMoveResizeStarted</ref>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>interactiveMoveResizeFinishedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1a6e7ab55b455103df20931b548729169a" kindref="member">Window::interactiveMoveResizeFinished</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>timestamp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;y()<sp/>+<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;cursor(),<sp/>CursorShape(Qt::ArrowCursor));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a46a51002349c170aef3a8ff4e583bcfc" kindref="member">PRESS</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QPoint,<sp/>offset);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;y()<sp/>+<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0)<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>oldPos<sp/>=<sp/>window-&gt;pos();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(interactiveMoveResizeStartedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a5bd9a30fc22d9a737ee060d41a4ec479" kindref="member">RELEASE</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>QTRY_VERIFY(!window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(interactiveMoveResizeFinishedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>QEXPECT_FAIL(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Just<sp/>trigger<sp/>move<sp/>doesn&apos;t<sp/>move<sp/>the<sp/>window&quot;</highlight><highlight class="normal">,<sp/>Continue);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;pos(),<sp/>oldPos<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a46a51002349c170aef3a8ff4e583bcfc" kindref="member">PRESS</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QPoint,<sp/>offset2);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;y()<sp/>+<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0)<sp/>+<sp/>offset2);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(interactiveMoveResizeStartedSpy.count(),<sp/>2);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QPoint,<sp/>offset3);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;y()<sp/>+<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0)<sp/>+<sp/>offset3);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a5bd9a30fc22d9a737ee060d41a4ec479" kindref="member">RELEASE</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>QTRY_VERIFY(!window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(interactiveMoveResizeFinishedSpy.count(),<sp/>2);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>the<sp/>offset<sp/>should<sp/>also<sp/>be<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;pos(),<sp/>oldPos<sp/>+<sp/>offset2<sp/>+<sp/>offset3);</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testTapToMove_data()</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QPoint&gt;(</highlight><highlight class="stringliteral">&quot;offset&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QPoint&gt;(</highlight><highlight class="stringliteral">&quot;offset2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QPoint&gt;(</highlight><highlight class="stringliteral">&quot;offset3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;To<sp/>right&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QPoint(10,<sp/>0)<sp/>&lt;&lt;<sp/>QPoint(20,<sp/>0)<sp/>&lt;&lt;<sp/>QPoint(30,<sp/>0);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;To<sp/>left&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QPoint(-10,<sp/>0)<sp/>&lt;&lt;<sp/>QPoint(-20,<sp/>0)<sp/>&lt;&lt;<sp/>QPoint(-30,<sp/>0);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;To<sp/>bottom&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QPoint(0,<sp/>10)<sp/>&lt;&lt;<sp/>QPoint(0,<sp/>20)<sp/>&lt;&lt;<sp/>QPoint(0,<sp/>30);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;To<sp/>top&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QPoint(0,<sp/>-10)<sp/>&lt;&lt;<sp/>QPoint(0,<sp/>-20)<sp/>&lt;&lt;<sp/>QPoint(0,<sp/>-30);</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testTapToMove()</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[window,<sp/>surface,<sp/>shellSurface,<sp/>decoration]<sp/>=<sp/>showWindow();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isDecorated());</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;noBorder());</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activeOutput()-&gt;geometry().center()<sp/>-<sp/>QPoint(window-&gt;width()<sp/>/<sp/>2,<sp/>window-&gt;height()<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>interactiveMoveResizeStartedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1a010201206994e942640621e136fb90c4" kindref="member">Window::interactiveMoveResizeStarted</ref>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>interactiveMoveResizeFinishedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1a6e7ab55b455103df20931b548729169a" kindref="member">Window::interactiveMoveResizeFinished</ref>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>timestamp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>QPoint<sp/>p<sp/>=<sp/>QPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;y()<sp/>+<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a23de04a19c3519614786ab986c0c1e7c" kindref="member">Test::touchDown</ref>(0,<sp/>p,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QPoint,<sp/>offset);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;decorationPressId(),<sp/>0);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a374744d98acd1329e4133c7ab30a1cb4" kindref="member">Test::touchMotion</ref>(0,<sp/>p<sp/>+<sp/>offset,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>oldPos<sp/>=<sp/>window-&gt;pos();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(interactiveMoveResizeStartedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1abe1cb34b00c3dce9daa8ba37ce7c402b" kindref="member">Test::touchUp</ref>(0,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>QTRY_VERIFY(!window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(interactiveMoveResizeFinishedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>QEXPECT_FAIL(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Just<sp/>trigger<sp/>move<sp/>doesn&apos;t<sp/>move<sp/>the<sp/>window&quot;</highlight><highlight class="normal">,<sp/>Continue);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;pos(),<sp/>oldPos<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a23de04a19c3519614786ab986c0c1e7c" kindref="member">Test::touchDown</ref>(1,<sp/>p<sp/>+<sp/>offset,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;decorationPressId(),<sp/>1);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QPoint,<sp/>offset2);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a374744d98acd1329e4133c7ab30a1cb4" kindref="member">Test::touchMotion</ref>(1,<sp/>QPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;y()<sp/>+<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0)<sp/>+<sp/>offset2,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(interactiveMoveResizeStartedSpy.count(),<sp/>2);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QPoint,<sp/>offset3);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a374744d98acd1329e4133c7ab30a1cb4" kindref="member">Test::touchMotion</ref>(1,<sp/>QPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;y()<sp/>+<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0)<sp/>+<sp/>offset3,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1abe1cb34b00c3dce9daa8ba37ce7c402b" kindref="member">Test::touchUp</ref>(1,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>QTRY_VERIFY(!window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(interactiveMoveResizeFinishedSpy.count(),<sp/>2);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>the<sp/>offset<sp/>should<sp/>also<sp/>be<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;pos(),<sp/>oldPos<sp/>+<sp/>offset2<sp/>+<sp/>offset3);</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testResizeOutsideWindow_data()</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;Qt::Edge&gt;(</highlight><highlight class="stringliteral">&quot;edge&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;Qt::CursorShape&gt;(</highlight><highlight class="stringliteral">&quot;expectedCursor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;left&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>Qt::LeftEdge<sp/>&lt;&lt;<sp/>Qt::SizeHorCursor;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;right&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>Qt::RightEdge<sp/>&lt;&lt;<sp/>Qt::SizeHorCursor;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;bottom&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>Qt::BottomEdge<sp/>&lt;&lt;<sp/>Qt::SizeVerCursor;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testResizeOutsideWindow()</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>test<sp/>verifies<sp/>that<sp/>one<sp/>can<sp/>resize<sp/>the<sp/>window<sp/>outside<sp/>the<sp/>decoration<sp/>with<sp/>NoSideBorder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>adjust<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>kwinApp()-&gt;config()-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;org.kde.kdecoration2&quot;</highlight><highlight class="normal">)).writeEntry(</highlight><highlight class="stringliteral">&quot;BorderSize&quot;</highlight><highlight class="normal">,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>kwinApp()-&gt;config()-&gt;sync();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ae78f215cb85fe7ea6cadea0067efbc72" kindref="member">slotReconfigure</ref>();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>create<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[window,<sp/>surface,<sp/>shellSurface,<sp/>decoration]<sp/>=<sp/>showWindow();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isDecorated());</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;noBorder());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activeOutput()-&gt;geometry().center()<sp/>-<sp/>QPoint(window-&gt;width()<sp/>/<sp/>2,<sp/>window-&gt;height()<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>interactiveMoveResizeStartedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1a010201206994e942640621e136fb90c4" kindref="member">Window::interactiveMoveResizeStarted</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>to<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>timestamp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(Qt::Edge,<sp/>edge);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(edge)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::LeftEdge:</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().x()<sp/>-<sp/>1,<sp/>window-&gt;frameGeometry().center().y()));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::RightEdge:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().x()<sp/>+<sp/>window-&gt;frameGeometry().width()<sp/>+<sp/>1,<sp/>window-&gt;frameGeometry().center().y()));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::BottomEdge:</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1aad466159b950f6809028cbd9178a413f" kindref="member">MOTION</ref>(QPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;frameGeometry().y()<sp/>+<sp/>window-&gt;frameGeometry().height()<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!exclusiveContains(window-&gt;frameGeometry(),<sp/><ref refid="class_k_win_1_1_cursors_1a5e43427047cf7663b4d9723fac4c1408" kindref="member">KWin::Cursors::self</ref>()-&gt;<ref refid="class_k_win_1_1_cursors_1acf6c2a783e4dec9b50fc15784ce3f167" kindref="member">mouse</ref>()-&gt;<ref refid="class_k_win_1_1_cursor_1a072173549f79b150251d835dc02515ba" kindref="member">pos</ref>()));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pressing<sp/>should<sp/>trigger<sp/>resize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a46a51002349c170aef3a8ff4e583bcfc" kindref="member">PRESS</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;isInteractiveResize());</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(interactiveMoveResizeStartedSpy.wait());</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isInteractiveResize());</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="decoration__input__test_8cpp_1a5bd9a30fc22d9a737ee060d41a4ec479" kindref="member">RELEASE</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;isInteractiveResize());</highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testModifierClickUnrestrictedMove_data()</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;modifierKey&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;mouseButton&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QString&gt;(</highlight><highlight class="stringliteral">&quot;modKey&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;capsLock&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>alt<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Alt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>meta<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Meta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Alt<sp/>+<sp/>Left<sp/>Click&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTALT<sp/>&lt;&lt;<sp/>BTN_LEFT<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Alt<sp/>+<sp/>Right<sp/>Click&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTALT<sp/>&lt;&lt;<sp/>BTN_RIGHT<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Alt<sp/>+<sp/>Middle<sp/>Click&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTALT<sp/>&lt;&lt;<sp/>BTN_MIDDLE<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Alt<sp/>+<sp/>Left<sp/>Click&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTALT<sp/>&lt;&lt;<sp/>BTN_LEFT<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Alt<sp/>+<sp/>Right<sp/>Click&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTALT<sp/>&lt;&lt;<sp/>BTN_RIGHT<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Alt<sp/>+<sp/>Middle<sp/>Click&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTALT<sp/>&lt;&lt;<sp/>BTN_MIDDLE<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>everything<sp/>with<sp/>meta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Meta<sp/>+<sp/>Left<sp/>Click&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTMETA<sp/>&lt;&lt;<sp/>BTN_LEFT<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Meta<sp/>+<sp/>Right<sp/>Click&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTMETA<sp/>&lt;&lt;<sp/>BTN_RIGHT<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Meta<sp/>+<sp/>Middle<sp/>Click&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTMETA<sp/>&lt;&lt;<sp/>BTN_MIDDLE<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Meta<sp/>+<sp/>Left<sp/>Click&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTMETA<sp/>&lt;&lt;<sp/>BTN_LEFT<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Meta<sp/>+<sp/>Right<sp/>Click&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTMETA<sp/>&lt;&lt;<sp/>BTN_RIGHT<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Meta<sp/>+<sp/>Middle<sp/>Click&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTMETA<sp/>&lt;&lt;<sp/>BTN_MIDDLE<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>with<sp/>capslock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Alt<sp/>+<sp/>Left<sp/>Click/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTALT<sp/>&lt;&lt;<sp/>BTN_LEFT<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Alt<sp/>+<sp/>Right<sp/>Click/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTALT<sp/>&lt;&lt;<sp/>BTN_RIGHT<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Alt<sp/>+<sp/>Middle<sp/>Click/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTALT<sp/>&lt;&lt;<sp/>BTN_MIDDLE<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Alt<sp/>+<sp/>Left<sp/>Click/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTALT<sp/>&lt;&lt;<sp/>BTN_LEFT<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Alt<sp/>+<sp/>Right<sp/>Click/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTALT<sp/>&lt;&lt;<sp/>BTN_RIGHT<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Alt<sp/>+<sp/>Middle<sp/>Click/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTALT<sp/>&lt;&lt;<sp/>BTN_MIDDLE<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>everything<sp/>with<sp/>meta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Meta<sp/>+<sp/>Left<sp/>Click/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTMETA<sp/>&lt;&lt;<sp/>BTN_LEFT<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Meta<sp/>+<sp/>Right<sp/>Click/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTMETA<sp/>&lt;&lt;<sp/>BTN_RIGHT<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Meta<sp/>+<sp/>Middle<sp/>Click/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTMETA<sp/>&lt;&lt;<sp/>BTN_MIDDLE<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Meta<sp/>+<sp/>Left<sp/>Click/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTMETA<sp/>&lt;&lt;<sp/>BTN_LEFT<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Meta<sp/>+<sp/>Right<sp/>Click/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTMETA<sp/>&lt;&lt;<sp/>BTN_RIGHT<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Meta<sp/>+<sp/>Middle<sp/>Click/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTMETA<sp/>&lt;&lt;<sp/>BTN_MIDDLE<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testModifierClickUnrestrictedMove()</highlight></codeline>
<codeline lineno="559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>test<sp/>ensures<sp/>that<sp/>Alt+mouse<sp/>button<sp/>press<sp/>triggers<sp/>unrestricted<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>modify<sp/>the<sp/>config<sp/>for<sp/>this<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QString,<sp/>modKey);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>KConfigGroup<sp/>group<sp/>=<sp/>kwinApp()-&gt;config()-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;MouseBindings&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>group.writeEntry(</highlight><highlight class="stringliteral">&quot;CommandAllKey&quot;</highlight><highlight class="normal">,<sp/>modKey);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>group.writeEntry(</highlight><highlight class="stringliteral">&quot;CommandAll1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Move&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>group.writeEntry(</highlight><highlight class="stringliteral">&quot;CommandAll2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Move&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>group.writeEntry(</highlight><highlight class="stringliteral">&quot;CommandAll3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Move&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>group.sync();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ae78f215cb85fe7ea6cadea0067efbc72" kindref="member">slotReconfigure</ref>();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;<ref refid="class_k_win_1_1_options_1a3f2bc3dc5bf877677dd2304291b1bf6f" kindref="member">commandAllModifier</ref>(),<sp/>modKey<sp/>==<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Alt&quot;</highlight><highlight class="normal">)<sp/>?<sp/>Qt::AltModifier<sp/>:<sp/>Qt::MetaModifier);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;<ref refid="class_k_win_1_1_options_1a920df998bfc957644c787124fa226281" kindref="member">commandAll1</ref>(),<sp/><ref refid="class_k_win_1_1_options_1a3ea5092c5fafec92b108838f1cecedcda47ccc8da852dd4787d243d541aedee1b" kindref="member">Options::MouseUnrestrictedMove</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;<ref refid="class_k_win_1_1_options_1a632f34760537df845806bb382d658e75" kindref="member">commandAll2</ref>(),<sp/><ref refid="class_k_win_1_1_options_1a3ea5092c5fafec92b108838f1cecedcda47ccc8da852dd4787d243d541aedee1b" kindref="member">Options::MouseUnrestrictedMove</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;<ref refid="class_k_win_1_1_options_1a7c169a94b130b1cc8e6dc6fd453da6ba" kindref="member">commandAll3</ref>(),<sp/><ref refid="class_k_win_1_1_options_1a3ea5092c5fafec92b108838f1cecedcda47ccc8da852dd4787d243d541aedee1b" kindref="member">Options::MouseUnrestrictedMove</ref>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[window,<sp/>surface,<sp/>shellSurface,<sp/>decoration]<sp/>=<sp/>showWindow();</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isDecorated());</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;noBorder());</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activeOutput()-&gt;geometry().center()<sp/>-<sp/>QPoint(window-&gt;width()<sp/>/<sp/>2,<sp/>window-&gt;height()<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>cursor<sp/>on<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(QPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;y()<sp/>+<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simulate<sp/>modifier+click</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>timestamp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>capsLock);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(capsLock)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a24e61eb6fba767f564d715bbae7a2e09" kindref="member">Test::keyboardKeyPressed</ref>(KEY_CAPSLOCK,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>modifierKey);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>mouseButton);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a24e61eb6fba767f564d715bbae7a2e09" kindref="member">Test::keyboardKeyPressed</ref>(modifierKey,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a7ed1822cd70b207b310b8b892241d15e" kindref="member">Test::pointerButtonPressed</ref>(mouseButton,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>release<sp/>modifier<sp/>should<sp/>not<sp/>change<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a0e41594af5bb5f89fd58919de458c7c5" kindref="member">Test::keyboardKeyReleased</ref>(modifierKey,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>releasing<sp/>the<sp/>key<sp/>should<sp/>end<sp/>move/resize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1abc9def44c9309a5e696d48288462bd08" kindref="member">Test::pointerButtonReleased</ref>(mouseButton,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(capsLock)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a0e41594af5bb5f89fd58919de458c7c5" kindref="member">Test::keyboardKeyReleased</ref>(KEY_CAPSLOCK,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testModifierScrollOpacity_data()</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;modifierKey&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QString&gt;(</highlight><highlight class="stringliteral">&quot;modKey&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;capsLock&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>alt<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Alt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>meta<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Meta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Alt&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTALT<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Alt&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTALT<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Meta&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTMETA<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Meta&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTMETA<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Alt/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTALT<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Alt/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTALT<sp/>&lt;&lt;<sp/>alt<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left<sp/>Meta/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_LEFTMETA<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right<sp/>Meta/CapsLock&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>KEY_RIGHTMETA<sp/>&lt;&lt;<sp/>meta<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testModifierScrollOpacity()</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>test<sp/>verifies<sp/>that<sp/>mod+wheel<sp/>performs<sp/>a<sp/>window<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>modify<sp/>the<sp/>config<sp/>for<sp/>this<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QString,<sp/>modKey);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>KConfigGroup<sp/>group<sp/>=<sp/>kwinApp()-&gt;config()-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;MouseBindings&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>group.writeEntry(</highlight><highlight class="stringliteral">&quot;CommandAllKey&quot;</highlight><highlight class="normal">,<sp/>modKey);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>group.writeEntry(</highlight><highlight class="stringliteral">&quot;CommandAllWheel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;change<sp/>opacity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>group.sync();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ae78f215cb85fe7ea6cadea0067efbc72" kindref="member">slotReconfigure</ref>();</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[window,<sp/>surface,<sp/>shellSurface,<sp/>decoration]<sp/>=<sp/>showWindow();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isDecorated());</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;noBorder());</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;activeOutput()-&gt;geometry().center()<sp/>-<sp/>QPoint(window-&gt;width()<sp/>/<sp/>2,<sp/>window-&gt;height()<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>cursor<sp/>on<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(QPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;y()<sp/>+<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>opacity<sp/>to<sp/>0.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setOpacity(0.5);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;opacity(),<sp/>0.5);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simulate<sp/>modifier+wheel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>timestamp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>capsLock);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(capsLock)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a24e61eb6fba767f564d715bbae7a2e09" kindref="member">Test::keyboardKeyPressed</ref>(KEY_CAPSLOCK,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>modifierKey);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a24e61eb6fba767f564d715bbae7a2e09" kindref="member">Test::keyboardKeyPressed</ref>(modifierKey,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1af420d2992ffcd40de8c3f31a69f71ade" kindref="member">Test::pointerAxisVertical</ref>(-5,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;opacity(),<sp/>0.6);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1af420d2992ffcd40de8c3f31a69f71ade" kindref="member">Test::pointerAxisVertical</ref>(5,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;opacity(),<sp/>0.5);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a0e41594af5bb5f89fd58919de458c7c5" kindref="member">Test::keyboardKeyReleased</ref>(modifierKey,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(capsLock)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a0e41594af5bb5f89fd58919de458c7c5" kindref="member">Test::keyboardKeyReleased</ref>(KEY_CAPSLOCK,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="class_k_win_1_1_event_helper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_event_helper_1afae978f14079f2634d311112e90c55fb" kindref="member">EventHelper</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="672" refid="class_k_win_1_1_event_helper_1afae978f14079f2634d311112e90c55fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_event_helper_1afae978f14079f2634d311112e90c55fb" kindref="member">EventHelper</ref>()</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>QObject()</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676" refid="class_k_win_1_1_event_helper_1ab16820502dc4d69b66bfeca1e9027cfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_event_helper_1ab16820502dc4d69b66bfeca1e9027cfd" kindref="member">~EventHelper</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678" refid="class_k_win_1_1_event_helper_1a86e6dbbbf628b5b4a9a3149b5ea2ce87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_event_helper_1a86e6dbbbf628b5b4a9a3149b5ea2ce87" kindref="member">eventFilter</ref>(QObject<sp/>*watched,<sp/>QEvent<sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="679"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;type()<sp/>==<sp/>QEvent::HoverMove)<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_event_helper_1a2c14a16ab9e357f4a9e2e26ff38c2489" kindref="member">hoverMove</ref>();</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;type()<sp/>==<sp/>QEvent::HoverLeave)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_event_helper_1ae28d874a1b0612d13480b29f81fe18a1" kindref="member">hoverLeave</ref>();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="689" refid="class_k_win_1_1_event_helper_1a2c14a16ab9e357f4a9e2e26ff38c2489" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_event_helper_1a2c14a16ab9e357f4a9e2e26ff38c2489" kindref="member">hoverMove</ref>();</highlight></codeline>
<codeline lineno="690" refid="class_k_win_1_1_event_helper_1ae28d874a1b0612d13480b29f81fe18a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_event_helper_1ae28d874a1b0612d13480b29f81fe18a1" kindref="member">hoverLeave</ref>();</highlight></codeline>
<codeline lineno="691"><highlight class="normal">};</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testTouchEvents()</highlight></codeline>
<codeline lineno="694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>test<sp/>verifies<sp/>that<sp/>the<sp/>decoration<sp/>gets<sp/>a<sp/>hover<sp/>leave<sp/>event<sp/>on<sp/>touch<sp/>release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>BUG<sp/>386231</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[window,<sp/>surface,<sp/>shellSurface,<sp/>decoration]<sp/>=<sp/>showWindow();</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isDecorated());</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;noBorder());</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_event_helper" kindref="compound">EventHelper</ref><sp/>helper;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;decoration()-&gt;installEventFilter(&amp;helper);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>hoverMoveSpy(&amp;helper,<sp/>&amp;<ref refid="class_k_win_1_1_event_helper_1a2c14a16ab9e357f4a9e2e26ff38c2489" kindref="member">EventHelper::hoverMove</ref>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>hoverLeaveSpy(&amp;helper,<sp/>&amp;<ref refid="class_k_win_1_1_event_helper_1ae28d874a1b0612d13480b29f81fe18a1" kindref="member">EventHelper::hoverLeave</ref>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>timestamp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>tapPoint(window-&gt;frameGeometry().center().x(),<sp/>window-&gt;frameMargins().top()<sp/>/<sp/>2.0);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;decoration());</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a23de04a19c3519614786ab986c0c1e7c" kindref="member">Test::touchDown</ref>(0,<sp/>tapPoint,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;decoration());</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;decoration()-&gt;decoration(),<sp/>window-&gt;decoration());</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(hoverMoveSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(hoverLeaveSpy.count(),<sp/>0);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1abe1cb34b00c3dce9daa8ba37ce7c402b" kindref="member">Test::touchUp</ref>(0,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(hoverMoveSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(hoverLeaveSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;isInteractiveMove(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>let&apos;s<sp/>check<sp/>that<sp/>a<sp/>hover<sp/>motion<sp/>is<sp/>sent<sp/>if<sp/>the<sp/>pointer<sp/>is<sp/>on<sp/>deco,<sp/>when<sp/>touch<sp/>release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(tapPoint);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(hoverMoveSpy.count(),<sp/>2);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a23de04a19c3519614786ab986c0c1e7c" kindref="member">Test::touchDown</ref>(0,<sp/>tapPoint,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(hoverMoveSpy.count(),<sp/>3);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(hoverLeaveSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1abe1cb34b00c3dce9daa8ba37ce7c402b" kindref="member">Test::touchUp</ref>(0,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(hoverMoveSpy.count(),<sp/>3);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(hoverLeaveSpy.count(),<sp/>2);</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecorationInputTest::testTooltipDoesntEatKeyEvents()</highlight></codeline>
<codeline lineno="734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>test<sp/>verifies<sp/>that<sp/>a<sp/>tooltip<sp/>on<sp/>the<sp/>decoration<sp/>does<sp/>not<sp/>steal<sp/>key<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BUG:<sp/>393253</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>create<sp/>a<sp/>keyboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>keyboard<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a5f6b6eee3f6e90f7c4693e06af67d91d" kindref="member">Test::waylandSeat</ref>()-&gt;createKeyboard(<ref refid="namespace_k_win_1_1_test_1a5f6b6eee3f6e90f7c4693e06af67d91d" kindref="member">Test::waylandSeat</ref>());</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(keyboard);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>enteredSpy(keyboard,<sp/>&amp;KWayland::Client::Keyboard::entered);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[window,<sp/>surface,<sp/>shellSurface,<sp/>decoration]<sp/>=<sp/>showWindow();</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isDecorated());</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!window-&gt;noBorder());</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(enteredSpy.wait());</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>keyEvent(keyboard,<sp/>&amp;KWayland::Client::Keyboard::keyChanged);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(keyEvent.isValid());</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>windowAddedSpy(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a8f82a0ac5517ddb86629fa3f8243e388" kindref="member">Workspace::windowAdded</ref>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;decoratedWindow()-&gt;requestShowToolTip(QStringLiteral(</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>should<sp/>get<sp/>an<sp/>internal<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(windowAddedSpy.wait());</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>InternalWindow<sp/>*internal<sp/>=<sp/>windowAddedSpy.first().first().value&lt;InternalWindow<sp/>*&gt;();</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(internal-&gt;isInternal());</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(internal-&gt;handle()-&gt;flags().testFlag(Qt::ToolTip));</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>send<sp/>a<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>timestamp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a24e61eb6fba767f564d715bbae7a2e09" kindref="member">Test::keyboardKeyPressed</ref>(KEY_A,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(keyEvent.wait());</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a0e41594af5bb5f89fd58919de458c7c5" kindref="member">Test::keyboardKeyReleased</ref>(KEY_A,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(keyEvent.wait());</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;decoratedWindow()-&gt;requestHideToolTip();</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">Test::waitForWindowClosed</ref>(internal);</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><ref refid="kwin__wayland__test_8h_1a105fcd0c1d5eb52370ab30db8ad37c4c" kindref="member">WAYLANDTEST_MAIN</ref>(<ref refid="class_k_win_1_1_decoration_input_test" kindref="compound">KWin::DecorationInputTest</ref>)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;decoration_input_test.moc&quot;</highlight></codeline>
    </programlisting>
    <location file="kwin/autotests/integration/decoration_input_test.cpp"/>
  </compounddef>
</doxygen>
