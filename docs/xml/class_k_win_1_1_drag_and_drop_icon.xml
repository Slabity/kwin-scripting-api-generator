<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_drag_and_drop_icon" kind="class" language="C++" prot="public">
    <compoundname>KWin::DragAndDropIcon</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="datadevice_8h" local="no">datadevice.h</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_k_win_1_1_drag_and_drop_icon_1a9d47bf2337df119f1447651219d67149" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class DataDeviceInterfacePrivate</definition>
        <argsstring></argsstring>
        <name>DataDeviceInterfacePrivate</name>
        <qualifiedname>KWin::DragAndDropIcon::DataDeviceInterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_data_device_interface_private" kindref="compound">DataDeviceInterfacePrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/datadevice.h" line="64" column="18" bodyfile="kwin/src/wayland/datadevice.h" bodystart="64" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_drag_and_drop_icon_1a5aa9e5a2bf3fa615df5939a5b7a45442" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_drag_and_drop_icon_private" kindref="compound">DragAndDropIconPrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;DragAndDropIconPrivate&gt; KWin::DragAndDropIcon::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::DragAndDropIcon::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/datadevice.h" line="65" column="21" bodyfile="kwin/src/wayland/datadevice.h" bodystart="65" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_drag_and_drop_icon_1a3e14d06bf87d64b444e721bd72932acb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::DragAndDropIcon::~DragAndDropIcon</definition>
        <argsstring>() override</argsstring>
        <name>~DragAndDropIcon</name>
        <qualifiedname>KWin::DragAndDropIcon::~DragAndDropIcon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/datadevice.h" line="43" column="5" bodyfile="kwin/src/wayland/datadevice.cpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drag_and_drop_icon_1a7f3a8e73f8b15a93496c2f50749997ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPoint</type>
        <definition>QPoint KWin::DragAndDropIcon::position</definition>
        <argsstring>() const</argsstring>
        <name>position</name>
        <qualifiedname>KWin::DragAndDropIcon::position</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the position of the icon relative to the cursor&apos;s hotspot. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/datadevice.h" line="50" column="12" bodyfile="kwin/src/wayland/datadevice.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drag_and_drop_icon_1a11ef4c5df4188bba7553fe7e9dc39e84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
        <definition>SurfaceInterface * KWin::DragAndDropIcon::surface</definition>
        <argsstring>() const</argsstring>
        <name>surface</name>
        <qualifiedname>KWin::DragAndDropIcon::surface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the underlying icon surface. This function always returns a valid surface. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/datadevice.h" line="55" column="22" bodyfile="kwin/src/wayland/datadevice.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_drag_and_drop_icon_1a854cd6bdd637e43c7cf24728eabf234d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_surface_role" kindref="compound">SurfaceRole</ref> *</type>
        <definition>SurfaceRole * KWin::DragAndDropIcon::role</definition>
        <argsstring>()</argsstring>
        <name>role</name>
        <qualifiedname>KWin::DragAndDropIcon::role</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/datadevice.h" line="45" column="24" bodyfile="kwin/src/wayland/datadevice.cpp" bodystart="47" bodyend="51"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_drag_and_drop_icon_1a9421e794366028713e40383c14030eb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DragAndDropIcon::changed</definition>
        <argsstring>()</argsstring>
        <name>changed</name>
        <qualifiedname>KWin::DragAndDropIcon::changed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/datadevice.h" line="58" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_drag_and_drop_icon_1acb3bc410ca2313e358160335a9bede43" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DragAndDropIcon::commit</definition>
        <argsstring>()</argsstring>
        <name>commit</name>
        <qualifiedname>KWin::DragAndDropIcon::commit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/datadevice.h" line="61" column="10" bodyfile="kwin/src/wayland/datadevice.cpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drag_and_drop_icon_1ab015aaee1d0fe09247c1b47d6e5994c9" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::DragAndDropIcon::DragAndDropIcon</definition>
        <argsstring>(SurfaceInterface *surface)</argsstring>
        <name>DragAndDropIcon</name>
        <qualifiedname>KWin::DragAndDropIcon::DragAndDropIcon</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/datadevice.h" line="63" column="14" bodyfile="kwin/src/wayland/datadevice.cpp" bodystart="36" bodyend="41"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_drag_and_drop_icon" kindref="compound">DragAndDropIcon</ref> class represents a drag-and-drop icon.</para>
<para>Note that the lifetime of the drag-and-drop icon is bound to the lifetime of the underlying icon surface. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::DragAndDropIcon</label>
        <link refid="class_k_win_1_1_drag_and_drop_icon"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::DragAndDropIcon</label>
        <link refid="class_k_win_1_1_drag_and_drop_icon"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/datadevice.h" line="38" column="1" bodyfile="kwin/src/wayland/datadevice.h" bodystart="39" bodyend="66"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_drag_and_drop_icon_1a9421e794366028713e40383c14030eb8" prot="public" virt="non-virtual"><scope>KWin::DragAndDropIcon</scope><name>changed</name></member>
      <member refid="class_k_win_1_1_drag_and_drop_icon_1acb3bc410ca2313e358160335a9bede43" prot="private" virt="non-virtual"><scope>KWin::DragAndDropIcon</scope><name>commit</name></member>
      <member refid="class_k_win_1_1_drag_and_drop_icon_1a5aa9e5a2bf3fa615df5939a5b7a45442" prot="private" virt="non-virtual"><scope>KWin::DragAndDropIcon</scope><name>d</name></member>
      <member refid="class_k_win_1_1_drag_and_drop_icon_1a9d47bf2337df119f1447651219d67149" prot="private" virt="non-virtual"><scope>KWin::DragAndDropIcon</scope><name>DataDeviceInterfacePrivate</name></member>
      <member refid="class_k_win_1_1_drag_and_drop_icon_1ab015aaee1d0fe09247c1b47d6e5994c9" prot="private" virt="non-virtual"><scope>KWin::DragAndDropIcon</scope><name>DragAndDropIcon</name></member>
      <member refid="class_k_win_1_1_drag_and_drop_icon_1a7f3a8e73f8b15a93496c2f50749997ce" prot="public" virt="non-virtual"><scope>KWin::DragAndDropIcon</scope><name>position</name></member>
      <member refid="class_k_win_1_1_drag_and_drop_icon_1a854cd6bdd637e43c7cf24728eabf234d" prot="public" virt="non-virtual"><scope>KWin::DragAndDropIcon</scope><name>role</name></member>
      <member refid="class_k_win_1_1_drag_and_drop_icon_1a11ef4c5df4188bba7553fe7e9dc39e84" prot="public" virt="non-virtual"><scope>KWin::DragAndDropIcon</scope><name>surface</name></member>
      <member refid="class_k_win_1_1_drag_and_drop_icon_1a3e14d06bf87d64b444e721bd72932acb" prot="public" virt="non-virtual"><scope>KWin::DragAndDropIcon</scope><name>~DragAndDropIcon</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
