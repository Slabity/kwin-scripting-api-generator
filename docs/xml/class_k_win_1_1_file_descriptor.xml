<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_file_descriptor" kind="class" language="C++" prot="public">
    <compoundname>KWin::FileDescriptor</compoundname>
    <includes refid="filedescriptor_8h" local="no">filedescriptor.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_file_descriptor_1a730c15a1f57e06e97471090c6fff16ce" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::FileDescriptor::m_fd</definition>
        <argsstring></argsstring>
        <name>m_fd</name>
        <qualifiedname>KWin::FileDescriptor::m_fd</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="38" column="9" bodyfile="kwin/src/utils/filedescriptor.h" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_file_descriptor_1aba873efc31d2abab73db4e2557c6bc60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::FileDescriptor::FileDescriptor</definition>
        <argsstring>()=default</argsstring>
        <name>FileDescriptor</name>
        <qualifiedname>KWin::FileDescriptor::FileDescriptor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="19" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_file_descriptor_1ab1db9b0e7b4eaab1364d0b00e325f40f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::FileDescriptor::FileDescriptor</definition>
        <argsstring>(int fd)</argsstring>
        <name>FileDescriptor</name>
        <qualifiedname>KWin::FileDescriptor::FileDescriptor</qualifiedname>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="20" column="14" bodyfile="kwin/src/utils/filedescriptor.cpp" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_file_descriptor_1ae7d5bf2cb1dd124d88adc12809d7a821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::FileDescriptor::FileDescriptor</definition>
        <argsstring>(FileDescriptor &amp;&amp;)</argsstring>
        <name>FileDescriptor</name>
        <qualifiedname>KWin::FileDescriptor::FileDescriptor</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref> &amp;&amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="21" column="5" bodyfile="kwin/src/utils/filedescriptor.cpp" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_file_descriptor_1a89f849e7d82c240e0f231137318c46dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref> &amp;</type>
        <definition>FileDescriptor &amp; KWin::FileDescriptor::operator=</definition>
        <argsstring>(FileDescriptor &amp;&amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>KWin::FileDescriptor::operator=</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref> &amp;&amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="22" column="20" bodyfile="kwin/src/utils/filedescriptor.cpp" bodystart="29" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_file_descriptor_1a8d777510e5519dbfb7748b8b73f7a2f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::FileDescriptor::~FileDescriptor</definition>
        <argsstring>()</argsstring>
        <name>~FileDescriptor</name>
        <qualifiedname>KWin::FileDescriptor::~FileDescriptor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="23" column="5" bodyfile="kwin/src/utils/filedescriptor.cpp" bodystart="38" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_file_descriptor_1ae7440b8498e75596486adce9934a416d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::FileDescriptor::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <qualifiedname>KWin::FileDescriptor::isValid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="25" column="10" bodyfile="kwin/src/utils/filedescriptor.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_file_descriptor_1ab59a3ce5116b1e7718d8fb7994d47a41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::FileDescriptor::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <qualifiedname>KWin::FileDescriptor::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="26" column="9" bodyfile="kwin/src/utils/filedescriptor.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_file_descriptor_1a6177bed9dd431d6dbc9e2d653eb565bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::FileDescriptor::take</definition>
        <argsstring>()</argsstring>
        <name>take</name>
        <qualifiedname>KWin::FileDescriptor::take</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="27" column="9" bodyfile="kwin/src/utils/filedescriptor.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_file_descriptor_1a229fa06329c1456002f887193bf17f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FileDescriptor::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <qualifiedname>KWin::FileDescriptor::reset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="28" column="10" bodyfile="kwin/src/utils/filedescriptor.cpp" bodystart="60" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_file_descriptor_1af6d14c98af23cdfad88629ce10d10538" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref></type>
        <definition>FileDescriptor KWin::FileDescriptor::duplicate</definition>
        <argsstring>() const</argsstring>
        <name>duplicate</name>
        <qualifiedname>KWin::FileDescriptor::duplicate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="29" column="20" bodyfile="kwin/src/utils/filedescriptor.cpp" bodystart="68" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_file_descriptor_1a971ce7437b9d6788981cc708472c5df4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::FileDescriptor::isReadable</definition>
        <argsstring>() const</argsstring>
        <name>isReadable</name>
        <qualifiedname>KWin::FileDescriptor::isReadable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="31" column="10" bodyfile="kwin/src/utils/filedescriptor.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_file_descriptor_1a5c159b5b9a396193ff79c4d940f61ab1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::FileDescriptor::isClosed</definition>
        <argsstring>() const</argsstring>
        <name>isClosed</name>
        <qualifiedname>KWin::FileDescriptor::isClosed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="32" column="10" bodyfile="kwin/src/utils/filedescriptor.cpp" bodystart="77" bodyend="80"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_file_descriptor_1aab7caf65085b120b2bc325287834e4d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::FileDescriptor::isReadable</definition>
        <argsstring>(int fd)</argsstring>
        <name>isReadable</name>
        <qualifiedname>KWin::FileDescriptor::isReadable</qualifiedname>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="34" column="17" bodyfile="kwin/src/utils/filedescriptor.cpp" bodystart="100" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_file_descriptor_1abfc00511e3364df3a3c80abaf475e92e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::FileDescriptor::isClosed</definition>
        <argsstring>(int fd)</argsstring>
        <name>isClosed</name>
        <qualifiedname>KWin::FileDescriptor::isClosed</qualifiedname>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/filedescriptor.h" line="35" column="17" bodyfile="kwin/src/utils/filedescriptor.cpp" bodystart="87" bodyend="98"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="kwin/src/utils/filedescriptor.h" line="16" column="1" bodyfile="kwin/src/utils/filedescriptor.h" bodystart="17" bodyend="39"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_file_descriptor_1af6d14c98af23cdfad88629ce10d10538" prot="public" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>duplicate</name></member>
      <member refid="class_k_win_1_1_file_descriptor_1aba873efc31d2abab73db4e2557c6bc60" prot="public" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>FileDescriptor</name></member>
      <member refid="class_k_win_1_1_file_descriptor_1ab1db9b0e7b4eaab1364d0b00e325f40f" prot="public" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>FileDescriptor</name></member>
      <member refid="class_k_win_1_1_file_descriptor_1ae7d5bf2cb1dd124d88adc12809d7a821" prot="public" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>FileDescriptor</name></member>
      <member refid="class_k_win_1_1_file_descriptor_1ab59a3ce5116b1e7718d8fb7994d47a41" prot="public" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>get</name></member>
      <member refid="class_k_win_1_1_file_descriptor_1a5c159b5b9a396193ff79c4d940f61ab1" prot="public" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>isClosed</name></member>
      <member refid="class_k_win_1_1_file_descriptor_1abfc00511e3364df3a3c80abaf475e92e" prot="public" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>isClosed</name></member>
      <member refid="class_k_win_1_1_file_descriptor_1a971ce7437b9d6788981cc708472c5df4" prot="public" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>isReadable</name></member>
      <member refid="class_k_win_1_1_file_descriptor_1aab7caf65085b120b2bc325287834e4d5" prot="public" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>isReadable</name></member>
      <member refid="class_k_win_1_1_file_descriptor_1ae7440b8498e75596486adce9934a416d" prot="public" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>isValid</name></member>
      <member refid="class_k_win_1_1_file_descriptor_1a730c15a1f57e06e97471090c6fff16ce" prot="private" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>m_fd</name></member>
      <member refid="class_k_win_1_1_file_descriptor_1a89f849e7d82c240e0f231137318c46dc" prot="public" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>operator=</name></member>
      <member refid="class_k_win_1_1_file_descriptor_1a229fa06329c1456002f887193bf17f06" prot="public" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>reset</name></member>
      <member refid="class_k_win_1_1_file_descriptor_1a6177bed9dd431d6dbc9e2d653eb565bc" prot="public" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>take</name></member>
      <member refid="class_k_win_1_1_file_descriptor_1a8d777510e5519dbfb7748b8b73f7a2f1" prot="public" virt="non-virtual"><scope>KWin::FileDescriptor</scope><name>~FileDescriptor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
