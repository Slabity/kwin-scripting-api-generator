<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_input_stacking_order_test" kind="class" language="C++" prot="public">
    <compoundname>KWin::InputStackingOrderTest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_input_stacking_order_test_1a9d5316eb8aac2aa12047ba207969d0ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputStackingOrderTest::initTestCase</definition>
        <argsstring>()</argsstring>
        <name>initTestCase</name>
        <qualifiedname>KWin::InputStackingOrderTest::initTestCase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/input_stacking_order.cpp" line="38" column="10" bodyfile="kwin/autotests/integration/input_stacking_order.cpp" bodystart="47" bodyend="62"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_input_stacking_order_test_1a2217b82970c7e6ee37f4712dcf76805f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputStackingOrderTest::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>KWin::InputStackingOrderTest::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/input_stacking_order.cpp" line="39" column="10" bodyfile="kwin/autotests/integration/input_stacking_order.cpp" bodystart="64" bodyend="71"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_input_stacking_order_test_1a777d02ba1663e656b39f27738e0ce04e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputStackingOrderTest::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>KWin::InputStackingOrderTest::cleanup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/input_stacking_order.cpp" line="40" column="10" bodyfile="kwin/autotests/integration/input_stacking_order.cpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_input_stacking_order_test_1a1ada75906af4d9372cf38355f0089234" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputStackingOrderTest::testPointerFocusUpdatesOnStackingOrderChange</definition>
        <argsstring>()</argsstring>
        <name>testPointerFocusUpdatesOnStackingOrderChange</name>
        <qualifiedname>KWin::InputStackingOrderTest::testPointerFocusUpdatesOnStackingOrderChange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/input_stacking_order.cpp" line="41" column="10" bodyfile="kwin/autotests/integration/input_stacking_order.cpp" bodystart="84" bodyend="152"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_input_stacking_order_test_1a0ccea278a5abdf44e65dc4c0e8ea7be8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::InputStackingOrderTest::render</definition>
        <argsstring>(KWayland::Client::Surface *surface)</argsstring>
        <name>render</name>
        <qualifiedname>KWin::InputStackingOrderTest::render</qualifiedname>
        <param>
          <type>KWayland::Client::Surface *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/input_stacking_order.cpp" line="44" column="10" bodyfile="kwin/autotests/integration/input_stacking_order.cpp" bodystart="78" bodyend="82"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::InputStackingOrderTest</label>
        <link refid="class_k_win_1_1_input_stacking_order_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::InputStackingOrderTest</label>
        <link refid="class_k_win_1_1_input_stacking_order_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/integration/input_stacking_order.cpp" line="34" column="1" bodyfile="kwin/autotests/integration/input_stacking_order.cpp" bodystart="35" bodyend="45"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_input_stacking_order_test_1a777d02ba1663e656b39f27738e0ce04e" prot="private" virt="non-virtual"><scope>KWin::InputStackingOrderTest</scope><name>cleanup</name></member>
      <member refid="class_k_win_1_1_input_stacking_order_test_1a2217b82970c7e6ee37f4712dcf76805f" prot="private" virt="non-virtual"><scope>KWin::InputStackingOrderTest</scope><name>init</name></member>
      <member refid="class_k_win_1_1_input_stacking_order_test_1a9d5316eb8aac2aa12047ba207969d0ec" prot="private" virt="non-virtual"><scope>KWin::InputStackingOrderTest</scope><name>initTestCase</name></member>
      <member refid="class_k_win_1_1_input_stacking_order_test_1a0ccea278a5abdf44e65dc4c0e8ea7be8" prot="private" virt="non-virtual"><scope>KWin::InputStackingOrderTest</scope><name>render</name></member>
      <member refid="class_k_win_1_1_input_stacking_order_test_1a1ada75906af4d9372cf38355f0089234" prot="private" virt="non-virtual"><scope>KWin::InputStackingOrderTest</scope><name>testPointerFocusUpdatesOnStackingOrderChange</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
