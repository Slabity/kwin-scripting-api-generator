<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_window_vertex" kind="class" language="C++" prot="public">
    <compoundname>KWin::WindowVertex</compoundname>
    <includes refid="itemgeometry_8h" local="no">itemgeometry.h</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_k_win_1_1_window_vertex_1a04d128304d3f6dc7adfd4e2b9e88dfe4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class WindowQuad</definition>
        <argsstring></argsstring>
        <name>WindowQuad</name>
        <qualifiedname>KWin::WindowVertex::WindowQuad</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window_quad" kindref="compound">WindowQuad</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="49" column="18" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_k_win_1_1_window_vertex_1af53349c4c99a178e4a9f9956114d984c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class WindowQuadList</definition>
        <argsstring></argsstring>
        <name>WindowQuadList</name>
        <qualifiedname>KWin::WindowVertex::WindowQuadList</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window_quad_list" kindref="compound">WindowQuadList</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="50" column="18" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_window_vertex_1aad9c65a19817e1ab3b086ed92e035eee" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KWin::WindowVertex::px</definition>
        <argsstring></argsstring>
        <name>px</name>
        <qualifiedname>KWin::WindowVertex::px</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="51" column="12" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_window_vertex_1a90149669eb1f79ca88596713c25eec38" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KWin::WindowVertex::py</definition>
        <argsstring></argsstring>
        <name>py</name>
        <qualifiedname>KWin::WindowVertex::py</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="51" column="15" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_window_vertex_1ab12de61950f5698e4b1c677f25cd731f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KWin::WindowVertex::tx</definition>
        <argsstring></argsstring>
        <name>tx</name>
        <qualifiedname>KWin::WindowVertex::tx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="52" column="12" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_window_vertex_1afbb5e8ae4e362462cc37d4a648b3271b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KWin::WindowVertex::ty</definition>
        <argsstring></argsstring>
        <name>ty</name>
        <qualifiedname>KWin::WindowVertex::ty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="52" column="15" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_window_vertex_1a990930664c286e019560709762379148" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::WindowVertex::WindowVertex</definition>
        <argsstring>()</argsstring>
        <name>WindowVertex</name>
        <qualifiedname>KWin::WindowVertex::WindowVertex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="24" column="5" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="204" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_vertex_1a15f0dfa4ad92172cbf94a31644da5ebc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::WindowVertex::WindowVertex</definition>
        <argsstring>(const QPointF &amp;position, const QPointF &amp;textureCoordinate)</argsstring>
        <name>WindowVertex</name>
        <qualifiedname>KWin::WindowVertex::WindowVertex</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>textureCoordinate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="25" column="5" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="220" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_vertex_1a10aea863958b56fecd0d1d0ec1613beb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::WindowVertex::WindowVertex</definition>
        <argsstring>(double x, double y, double tx, double ty)</argsstring>
        <name>WindowVertex</name>
        <qualifiedname>KWin::WindowVertex::WindowVertex</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="26" column="5" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="212" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_vertex_1a2410a6327e195217bbf890844323224c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double KWin::WindowVertex::x</definition>
        <argsstring>() const</argsstring>
        <name>x</name>
        <qualifiedname>KWin::WindowVertex::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="28" column="12" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_vertex_1a993029d8be46adc8cdb06c7289c42ec0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double KWin::WindowVertex::y</definition>
        <argsstring>() const</argsstring>
        <name>y</name>
        <qualifiedname>KWin::WindowVertex::y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="32" column="12" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_vertex_1a8a11e14b8b47d454e5c1fd8966c0c28c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double KWin::WindowVertex::u</definition>
        <argsstring>() const</argsstring>
        <name>u</name>
        <qualifiedname>KWin::WindowVertex::u</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="36" column="12" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_vertex_1a957edfa73c53bf5f90f6ba67f6b8af0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double KWin::WindowVertex::v</definition>
        <argsstring>() const</argsstring>
        <name>v</name>
        <qualifiedname>KWin::WindowVertex::v</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="40" column="12" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_vertex_1a745e85bd3dbee092ec055c8955810224" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WindowVertex::move</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>move</name>
        <qualifiedname>KWin::WindowVertex::move</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="44" column="10" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="228" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_vertex_1a8d455c30777348916b3597597fed51b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WindowVertex::setX</definition>
        <argsstring>(double x)</argsstring>
        <name>setX</name>
        <qualifiedname>KWin::WindowVertex::setX</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="45" column="10" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_vertex_1a88650ede99d62fe68ea2dee02c7524e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WindowVertex::setY</definition>
        <argsstring>(double y)</argsstring>
        <name>setY</name>
        <qualifiedname>KWin::WindowVertex::setY</qualifiedname>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scene/itemgeometry.h" line="46" column="10" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="239" bodyend="242"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Vertex class. </para>
    </briefdescription>
    <detaileddescription>
<para>A vertex is one position in a window. <ref refid="class_k_win_1_1_window_quad" kindref="compound">WindowQuad</ref> consists of four <ref refid="class_k_win_1_1_window_vertex" kindref="compound">WindowVertex</ref> objects and represents one part of a window. </para>
    </detaileddescription>
    <location file="kwin/src/scene/itemgeometry.h" line="21" column="1" bodyfile="kwin/src/scene/itemgeometry.h" bodystart="22" bodyend="53"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_window_vertex_1a745e85bd3dbee092ec055c8955810224" prot="public" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>move</name></member>
      <member refid="class_k_win_1_1_window_vertex_1aad9c65a19817e1ab3b086ed92e035eee" prot="private" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>px</name></member>
      <member refid="class_k_win_1_1_window_vertex_1a90149669eb1f79ca88596713c25eec38" prot="private" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>py</name></member>
      <member refid="class_k_win_1_1_window_vertex_1a8d455c30777348916b3597597fed51b2" prot="public" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>setX</name></member>
      <member refid="class_k_win_1_1_window_vertex_1a88650ede99d62fe68ea2dee02c7524e1" prot="public" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>setY</name></member>
      <member refid="class_k_win_1_1_window_vertex_1ab12de61950f5698e4b1c677f25cd731f" prot="private" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>tx</name></member>
      <member refid="class_k_win_1_1_window_vertex_1afbb5e8ae4e362462cc37d4a648b3271b" prot="private" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>ty</name></member>
      <member refid="class_k_win_1_1_window_vertex_1a8a11e14b8b47d454e5c1fd8966c0c28c" prot="public" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>u</name></member>
      <member refid="class_k_win_1_1_window_vertex_1a957edfa73c53bf5f90f6ba67f6b8af0d" prot="public" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>v</name></member>
      <member refid="class_k_win_1_1_window_vertex_1a04d128304d3f6dc7adfd4e2b9e88dfe4" prot="private" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>WindowQuad</name></member>
      <member refid="class_k_win_1_1_window_vertex_1af53349c4c99a178e4a9f9956114d984c" prot="private" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>WindowQuadList</name></member>
      <member refid="class_k_win_1_1_window_vertex_1a990930664c286e019560709762379148" prot="public" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>WindowVertex</name></member>
      <member refid="class_k_win_1_1_window_vertex_1a15f0dfa4ad92172cbf94a31644da5ebc" prot="public" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>WindowVertex</name></member>
      <member refid="class_k_win_1_1_window_vertex_1a10aea863958b56fecd0d1d0ec1613beb" prot="public" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>WindowVertex</name></member>
      <member refid="class_k_win_1_1_window_vertex_1a2410a6327e195217bbf890844323224c" prot="public" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>x</name></member>
      <member refid="class_k_win_1_1_window_vertex_1a993029d8be46adc8cdb06c7289c42ec0" prot="public" virt="non-virtual"><scope>KWin::WindowVertex</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
