<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="linuxdmabufv1clientbuffer_8h" kind="file" language="C++">
    <compoundname>linuxdmabufv1clientbuffer.h</compoundname>
    <includes refid="graphicsbuffer_8h" local="yes">core/graphicsbuffer.h</includes>
    <includes local="no">QHash</includes>
    <includes local="no">QSet</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">wayland-server.h</includes>
    <includedby refid="abstract__egl__backend_8h" local="yes">kwin/src/platformsupport/scenes/opengl/abstract_egl_backend.h</includedby>
    <includedby refid="surfaceitem__wayland_8cpp" local="yes">kwin/src/scene/surfaceitem_wayland.cpp</includedby>
    <includedby refid="linuxdmabufv1clientbuffer_8cpp" local="yes">kwin/src/wayland/linuxdmabufv1clientbuffer.cpp</includedby>
    <includedby refid="linuxdmabufv1clientbuffer__p_8h" local="yes">kwin/src/wayland/linuxdmabufv1clientbuffer_p.h</includedby>
    <includedby refid="surface_8cpp" local="yes">kwin/src/wayland/surface.cpp</includedby>
    <includedby refid="wayland__server_8cpp" local="yes">kwin/src/wayland_server.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/linuxdmabufv1clientbuffer.h</label>
        <link refid="linuxdmabufv1clientbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>QHash</label>
      </node>
      <node id="5">
        <label>QObject</label>
      </node>
      <node id="9">
        <label>QSet</label>
      </node>
      <node id="6">
        <label>QSize</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
      <node id="10">
        <label>sys/types.h</label>
      </node>
      <node id="7">
        <label>utility</label>
      </node>
      <node id="11">
        <label>wayland-server.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>kwin/src/backends/drm/drm_backend.cpp</label>
        <link refid="drm__backend_8cpp"/>
      </node>
      <node id="5">
        <label>kwin/src/backends/drm/drm_egl_backend.cpp</label>
        <link refid="drm__egl__backend_8cpp"/>
      </node>
      <node id="3">
        <label>kwin/src/backends/drm/drm_egl_backend.h</label>
        <link refid="drm__egl__backend_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>kwin/src/backends/drm/drm_egl_layer.cpp</label>
        <link refid="drm__egl__layer_8cpp"/>
      </node>
      <node id="7">
        <label>kwin/src/backends/drm/drm_egl_layer_surface.cpp</label>
        <link refid="drm__egl__layer__surface_8cpp"/>
      </node>
      <node id="8">
        <label>kwin/src/backends/drm/drm_gpu.cpp</label>
        <link refid="drm__gpu_8cpp"/>
      </node>
      <node id="9">
        <label>kwin/src/backends/drm/drm_pipeline.cpp</label>
        <link refid="drm__pipeline_8cpp"/>
      </node>
      <node id="10">
        <label>kwin/src/backends/drm/drm_virtual_egl_layer.cpp</label>
        <link refid="drm__virtual__egl__layer_8cpp"/>
      </node>
      <node id="12">
        <label>kwin/src/backends/virtual/virtual_backend.cpp</label>
        <link refid="virtual__backend_8cpp"/>
      </node>
      <node id="13">
        <label>kwin/src/backends/virtual/virtual_egl_backend.cpp</label>
        <link refid="virtual__egl__backend_8cpp"/>
      </node>
      <node id="11">
        <label>kwin/src/backends/virtual/virtual_egl_backend.h</label>
        <link refid="virtual__egl__backend_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>kwin/src/backends/wayland/wayland_backend.cpp</label>
        <link refid="wayland__backend_8cpp"/>
      </node>
      <node id="16">
        <label>kwin/src/backends/wayland/wayland_egl_backend.cpp</label>
        <link refid="wayland__egl__backend_8cpp"/>
      </node>
      <node id="14">
        <label>kwin/src/backends/wayland/wayland_egl_backend.h</label>
        <link refid="wayland__egl__backend_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>kwin/src/backends/x11/x11_windowed_backend.cpp</label>
        <link refid="x11__windowed__backend_8cpp"/>
      </node>
      <node id="19">
        <label>kwin/src/backends/x11/x11_windowed_egl_backend.cpp</label>
        <link refid="x11__windowed__egl__backend_8cpp"/>
      </node>
      <node id="17">
        <label>kwin/src/backends/x11/x11_windowed_egl_backend.h</label>
        <link refid="x11__windowed__egl__backend_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>kwin/src/platformsupport/scenes/opengl/abstract_egl_backend.cpp</label>
        <link refid="abstract__egl__backend_8cpp"/>
      </node>
      <node id="2">
        <label>kwin/src/platformsupport/scenes/opengl/abstract_egl_backend.h</label>
        <link refid="abstract__egl__backend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>kwin/src/platformsupport/scenes/opengl/openglsurfacetexture.cpp</label>
        <link refid="openglsurfacetexture_8cpp"/>
      </node>
      <node id="22">
        <label>kwin/src/plugins/screencast/screencastbuffer.cpp</label>
        <link refid="screencastbuffer_8cpp"/>
      </node>
      <node id="23">
        <label>kwin/src/plugins/screencast/screencaststream.cpp</label>
        <link refid="screencaststream_8cpp"/>
      </node>
      <node id="24">
        <label>kwin/src/scene/surfaceitem_wayland.cpp</label>
        <link refid="surfaceitem__wayland_8cpp"/>
      </node>
      <node id="27">
        <label>kwin/src/wayland/display.cpp</label>
        <link refid="display_8cpp"/>
      </node>
      <node id="25">
        <label>kwin/src/wayland/linuxdmabufv1clientbuffer.cpp</label>
        <link refid="linuxdmabufv1clientbuffer_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/src/wayland/linuxdmabufv1clientbuffer.h</label>
        <link refid="linuxdmabufv1clientbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>kwin/src/wayland/linuxdmabufv1clientbuffer_p.h</label>
        <link refid="linuxdmabufv1clientbuffer__p_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>kwin/src/wayland/surface.cpp</label>
        <link refid="surface_8cpp"/>
      </node>
      <node id="29">
        <label>kwin/src/wayland_server.cpp</label>
        <link refid="wayland__server_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_k_win_1_1_linux_dma_buf_v1_feedback" prot="public">KWin::LinuxDmaBufV1Feedback</innerclass>
    <innerclass refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche" prot="public">KWin::LinuxDmaBufV1Feedback::Tranche</innerclass>
    <innerclass refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration" prot="public">KWin::LinuxDmaBufV1ClientBufferIntegration</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2018<sp/>Fredrik<sp/>Höglund<sp/>&lt;fredrik@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2019<sp/>Roman<sp/>Gilg<sp/>&lt;subdiff@gmail.com&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graphicsbuffer_8h" kindref="compound">core/graphicsbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QHash&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSet&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wayland-server.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private" kindref="compound">LinuxDmaBufV1ClientBufferIntegrationPrivate</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private" kindref="compound">LinuxDmaBufV1FeedbackPrivate</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_render_backend" kindref="compound">RenderBackend</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_k_win_1_1_linux_dma_buf_v1_feedback" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KWIN_EXPORT<sp/>LinuxDmaBufV1Feedback<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31" refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1ad4edd3d95013f5186646b38b8451e678" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1ad4edd3d95013f5186646b38b8451e678" kindref="member">~LinuxDmaBufV1Feedback</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a9b0afcafb17d66d526a7075627c51308" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a9b0afcafb17d66d526a7075627c51308" kindref="member">TrancheFlag</ref><sp/>:<sp/>uint32_t<sp/>{</highlight></codeline>
<codeline lineno="34" refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a9b0afcafb17d66d526a7075627c51308a981c09d70fb19f05c134f81c7d608ebb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a9b0afcafb17d66d526a7075627c51308a981c09d70fb19f05c134f81c7d608ebb" kindref="member">Scanout</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_DECLARE_FLAGS(TrancheFlags,<sp/>TrancheFlag)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/>struct<sp/><ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche" kindref="compound">Tranche</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40" refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1a51b0800259d4bc6a3b97bbd57cfa223f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev_t<sp/><ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1a51b0800259d4bc6a3b97bbd57cfa223f" kindref="member">device</ref>;</highlight></codeline>
<codeline lineno="41" refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1abe896e94cd29b46f2cd455bb35c8d76e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrancheFlags<sp/><ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1abe896e94cd29b46f2cd455bb35c8d76e" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="42" refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1a4e2809b8d43d7cd800938c989b05ee5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/><ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche_1a4e2809b8d43d7cd800938c989b05ee5b" kindref="member">formatTable</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a383af90709901eb93f22cf8aa6a8a0bd" kindref="member">setScanoutTranches</ref>(<ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref><sp/>*device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/>&amp;formats);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1ac50eb179d4e2eec0ff84329a762cea2f" kindref="member">setTranches</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Tranche&gt;<sp/>&amp;tranches);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QList&lt;Tranche&gt;<sp/>createScanoutTranches(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Tranche&gt;<sp/>&amp;tranches,<sp/><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref><sp/>*device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/>&amp;formats);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>LinuxDmaBufV1Feedback(<ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a749a2b769cb0a85adba0dd660291a9e1" kindref="member">LinuxDmaBufV1ClientBufferIntegrationPrivate</ref><sp/>*integration);</highlight></codeline>
<codeline lineno="56" refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a749a2b769cb0a85adba0dd660291a9e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a749a2b769cb0a85adba0dd660291a9e1" kindref="member">LinuxDmaBufV1ClientBufferIntegrationPrivate</ref>;</highlight></codeline>
<codeline lineno="57" refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a751c43aedce49710f4a2e420deb4280f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a751c43aedce49710f4a2e420deb4280f" kindref="member">LinuxDmaBufV1FeedbackPrivate</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;LinuxDmaBufV1FeedbackPrivate&gt;<sp/>d;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KWIN_EXPORT<sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1a5e168b8158bf237b28a37b83e02e3192" kindref="member">LinuxDmaBufV1ClientBufferIntegration</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1a5e168b8158bf237b28a37b83e02e3192" kindref="member">LinuxDmaBufV1ClientBufferIntegration</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1a5e168b8158bf237b28a37b83e02e3192" kindref="member">~LinuxDmaBufV1ClientBufferIntegration</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_backend" kindref="compound">RenderBackend</ref><sp/>*<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1aa1ee9c12fb297e1b1576fc5833947c98" kindref="member">renderBackend</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1ac18b775d57ec632a1ce3a838c978773c" kindref="member">setRenderBackend</ref>(<ref refid="class_k_win_1_1_render_backend" kindref="compound">RenderBackend</ref><sp/>*<ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1aa1ee9c12fb297e1b1576fc5833947c98" kindref="member">renderBackend</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1a1d22d4d965678d74aa253e460371a109" kindref="member">setSupportedFormatsWithModifiers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;LinuxDmaBufV1Feedback::Tranche&gt;<sp/>&amp;tranches);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78" refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1a749a2b769cb0a85adba0dd660291a9e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_1a749a2b769cb0a85adba0dd660291a9e1" kindref="member">LinuxDmaBufV1ClientBufferIntegrationPrivate</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;LinuxDmaBufV1ClientBufferIntegrationPrivate&gt;<sp/>d;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/linuxdmabufv1clientbuffer.h"/>
  </compounddef>
</doxygen>
