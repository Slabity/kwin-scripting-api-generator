<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_e_g_l_native_fence" kind="class" language="C++" prot="public">
    <compoundname>KWin::EGLNativeFence</compoundname>
    <includes refid="eglnativefence_8h" local="no">eglnativefence.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_e_g_l_native_fence_1a869e827ada1fd79f1e01da3c0f55d2f9" prot="private" static="no" mutable="no">
        <type>EGLSyncKHR</type>
        <definition>EGLSyncKHR KWin::EGLNativeFence::m_sync</definition>
        <argsstring></argsstring>
        <name>m_sync</name>
        <qualifiedname>KWin::EGLNativeFence::m_sync</qualifiedname>
        <initializer>= EGL_NO_SYNC_KHR</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.h" line="36" column="16" bodyfile="kwin/src/opengl/eglnativefence.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_e_g_l_native_fence_1a412774dc9c74d60077c6ea858bbdc941" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref> *</type>
        <definition>EglDisplay* KWin::EGLNativeFence::m_display</definition>
        <argsstring></argsstring>
        <name>m_display</name>
        <qualifiedname>KWin::EGLNativeFence::m_display</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.h" line="37" column="16" bodyfile="kwin/src/opengl/eglnativefence.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_e_g_l_native_fence_1a3d7ba1f595b2bdcb3911b1925ca1b845" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref></type>
        <definition>FileDescriptor KWin::EGLNativeFence::m_fileDescriptor</definition>
        <argsstring></argsstring>
        <name>m_fileDescriptor</name>
        <qualifiedname>KWin::EGLNativeFence::m_fileDescriptor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.h" line="38" column="20" bodyfile="kwin/src/opengl/eglnativefence.h" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_e_g_l_native_fence_1adf5d5bba2d3fea56a2b527ff1f16afce" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::EGLNativeFence::EGLNativeFence</definition>
        <argsstring>(EglDisplay *display)</argsstring>
        <name>EGLNativeFence</name>
        <qualifiedname>KWin::EGLNativeFence::EGLNativeFence</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.h" line="22" column="14" bodyfile="kwin/src/opengl/eglnativefence.cpp" bodystart="20" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_e_g_l_native_fence_1af6cf926b1526507e173ba981be148e2a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::EGLNativeFence::EGLNativeFence</definition>
        <argsstring>(EglDisplay *display, EGLSyncKHR sync)</argsstring>
        <name>EGLNativeFence</name>
        <qualifiedname>KWin::EGLNativeFence::EGLNativeFence</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>EGLSyncKHR</type>
          <declname>sync</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.h" line="23" column="14" bodyfile="kwin/src/opengl/eglnativefence.cpp" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_e_g_l_native_fence_1a2766d168dc9e9293af2fe5007e679185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::EGLNativeFence::EGLNativeFence</definition>
        <argsstring>(EGLNativeFence &amp;&amp;)=delete</argsstring>
        <name>EGLNativeFence</name>
        <qualifiedname>KWin::EGLNativeFence::EGLNativeFence</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_e_g_l_native_fence" kindref="compound">EGLNativeFence</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.h" line="24" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_e_g_l_native_fence_1a4f7c8631625771ed18ed18fca21dbf7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::EGLNativeFence::EGLNativeFence</definition>
        <argsstring>(const EGLNativeFence &amp;)=delete</argsstring>
        <name>EGLNativeFence</name>
        <qualifiedname>KWin::EGLNativeFence::EGLNativeFence</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_e_g_l_native_fence" kindref="compound">EGLNativeFence</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.h" line="25" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_e_g_l_native_fence_1ad71ccd9379331269132a21e1c641f5c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::EGLNativeFence::~EGLNativeFence</definition>
        <argsstring>()</argsstring>
        <name>~EGLNativeFence</name>
        <qualifiedname>KWin::EGLNativeFence::~EGLNativeFence</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.h" line="26" column="5" bodyfile="kwin/src/opengl/eglnativefence.cpp" bodystart="36" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_e_g_l_native_fence_1ae2d79a7ccab167ab1b43bd5e73e5879d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::EGLNativeFence::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <qualifiedname>KWin::EGLNativeFence::isValid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.h" line="28" column="10" bodyfile="kwin/src/opengl/eglnativefence.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_e_g_l_native_fence_1ae2d25d198ffb8ade15d8349641c044dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref> &amp;</type>
        <definition>const FileDescriptor &amp; KWin::EGLNativeFence::fileDescriptor</definition>
        <argsstring>() const</argsstring>
        <name>fileDescriptor</name>
        <qualifiedname>KWin::EGLNativeFence::fileDescriptor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.h" line="29" column="26" bodyfile="kwin/src/opengl/eglnativefence.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_e_g_l_native_fence_1a191dd78483825613103040493daba390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref> &amp;&amp;</type>
        <definition>FileDescriptor &amp;&amp; KWin::EGLNativeFence::takeFileDescriptor</definition>
        <argsstring>()</argsstring>
        <name>takeFileDescriptor</name>
        <qualifiedname>KWin::EGLNativeFence::takeFileDescriptor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.h" line="30" column="20" bodyfile="kwin/src/opengl/eglnativefence.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_e_g_l_native_fence_1a6b519d55ba03309ea3b65deb0529c061" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::EGLNativeFence::waitSync</definition>
        <argsstring>() const</argsstring>
        <name>waitSync</name>
        <qualifiedname>KWin::EGLNativeFence::waitSync</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.h" line="31" column="10" bodyfile="kwin/src/opengl/eglnativefence.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_e_g_l_native_fence_1a707936f9c9d02c1f15b1c673a0b90d6c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_e_g_l_native_fence" kindref="compound">EGLNativeFence</ref></type>
        <definition>EGLNativeFence KWin::EGLNativeFence::importFence</definition>
        <argsstring>(EglDisplay *display, FileDescriptor &amp;&amp;fd)</argsstring>
        <name>importFence</name>
        <qualifiedname>KWin::EGLNativeFence::importFence</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref> &amp;&amp;</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.h" line="33" column="27" bodyfile="kwin/src/opengl/eglnativefence.cpp" bodystart="64" bodyend="75"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="kwin/src/opengl/eglnativefence.h" line="19" column="1" bodyfile="kwin/src/opengl/eglnativefence.h" bodystart="20" bodyend="39"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_e_g_l_native_fence_1adf5d5bba2d3fea56a2b527ff1f16afce" prot="public" virt="non-virtual"><scope>KWin::EGLNativeFence</scope><name>EGLNativeFence</name></member>
      <member refid="class_k_win_1_1_e_g_l_native_fence_1af6cf926b1526507e173ba981be148e2a" prot="public" virt="non-virtual"><scope>KWin::EGLNativeFence</scope><name>EGLNativeFence</name></member>
      <member refid="class_k_win_1_1_e_g_l_native_fence_1a2766d168dc9e9293af2fe5007e679185" prot="public" virt="non-virtual"><scope>KWin::EGLNativeFence</scope><name>EGLNativeFence</name></member>
      <member refid="class_k_win_1_1_e_g_l_native_fence_1a4f7c8631625771ed18ed18fca21dbf7b" prot="public" virt="non-virtual"><scope>KWin::EGLNativeFence</scope><name>EGLNativeFence</name></member>
      <member refid="class_k_win_1_1_e_g_l_native_fence_1ae2d25d198ffb8ade15d8349641c044dc" prot="public" virt="non-virtual"><scope>KWin::EGLNativeFence</scope><name>fileDescriptor</name></member>
      <member refid="class_k_win_1_1_e_g_l_native_fence_1a707936f9c9d02c1f15b1c673a0b90d6c" prot="public" virt="non-virtual"><scope>KWin::EGLNativeFence</scope><name>importFence</name></member>
      <member refid="class_k_win_1_1_e_g_l_native_fence_1ae2d79a7ccab167ab1b43bd5e73e5879d" prot="public" virt="non-virtual"><scope>KWin::EGLNativeFence</scope><name>isValid</name></member>
      <member refid="class_k_win_1_1_e_g_l_native_fence_1a412774dc9c74d60077c6ea858bbdc941" prot="private" virt="non-virtual"><scope>KWin::EGLNativeFence</scope><name>m_display</name></member>
      <member refid="class_k_win_1_1_e_g_l_native_fence_1a3d7ba1f595b2bdcb3911b1925ca1b845" prot="private" virt="non-virtual"><scope>KWin::EGLNativeFence</scope><name>m_fileDescriptor</name></member>
      <member refid="class_k_win_1_1_e_g_l_native_fence_1a869e827ada1fd79f1e01da3c0f55d2f9" prot="private" virt="non-virtual"><scope>KWin::EGLNativeFence</scope><name>m_sync</name></member>
      <member refid="class_k_win_1_1_e_g_l_native_fence_1a191dd78483825613103040493daba390" prot="public" virt="non-virtual"><scope>KWin::EGLNativeFence</scope><name>takeFileDescriptor</name></member>
      <member refid="class_k_win_1_1_e_g_l_native_fence_1a6b519d55ba03309ea3b65deb0529c061" prot="public" virt="non-virtual"><scope>KWin::EGLNativeFence</scope><name>waitSync</name></member>
      <member refid="class_k_win_1_1_e_g_l_native_fence_1ad71ccd9379331269132a21e1c641f5c0" prot="public" virt="non-virtual"><scope>KWin::EGLNativeFence</scope><name>~EGLNativeFence</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
