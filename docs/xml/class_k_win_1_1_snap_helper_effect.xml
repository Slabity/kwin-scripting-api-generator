<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_snap_helper_effect" kind="class" language="C++" prot="public">
    <compoundname>KWin::SnapHelperEffect</compoundname>
    <basecompoundref refid="class_k_win_1_1_effect" prot="public" virt="non-virtual">KWin::Effect</basecompoundref>
    <includes refid="snaphelper_8h" local="no">snaphelper.h</includes>
    <innerclass refid="struct_k_win_1_1_snap_helper_effect_1_1_animation" prot="private">KWin::SnapHelperEffect::Animation</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_snap_helper_effect_1a2ad5eb2377b29832148b626a3866923c" prot="private" static="no" mutable="no">
        <type>QRectF</type>
        <definition>QRectF KWin::SnapHelperEffect::m_geometry</definition>
        <argsstring></argsstring>
        <name>m_geometry</name>
        <qualifiedname>KWin::SnapHelperEffect::m_geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="43" column="12" bodyfile="kwin/src/plugins/snaphelper/snaphelper.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_snap_helper_effect_1a98c07df42199a94eb2627bff5149ce13" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
        <definition>EffectWindow* KWin::SnapHelperEffect::m_window</definition>
        <argsstring></argsstring>
        <name>m_window</name>
        <qualifiedname>KWin::SnapHelperEffect::m_window</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="44" column="18" bodyfile="kwin/src/plugins/snaphelper/snaphelper.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_snap_helper_effect_1ae77a2d3f8683f24f68bd46c08e50687b" prot="private" static="no" mutable="no">
        <type>Animation</type>
        <definition>Animation KWin::SnapHelperEffect::m_animation</definition>
        <argsstring></argsstring>
        <name>m_animation</name>
        <qualifiedname>KWin::SnapHelperEffect::m_animation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="52" column="15" bodyfile="kwin/src/plugins/snaphelper/snaphelper.h" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_snap_helper_effect_1a034028241899e47bfa1278af8c9ac5e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::SnapHelperEffect::SnapHelperEffect</definition>
        <argsstring>()</argsstring>
        <name>SnapHelperEffect</name>
        <qualifiedname>KWin::SnapHelperEffect::SnapHelperEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="24" column="5" bodyfile="kwin/src/plugins/snaphelper/snaphelper.cpp" bodystart="67" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_snap_helper_effect_1aa9abf63e620c67c520acc6e799379183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::SnapHelperEffect::~SnapHelperEffect</definition>
        <argsstring>() override</argsstring>
        <name>~SnapHelperEffect</name>
        <qualifiedname>KWin::SnapHelperEffect::~SnapHelperEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="25" column="5" bodyfile="kwin/src/plugins/snaphelper/snaphelper.cpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_snap_helper_effect_1a1524238930987831b00e2486a14dec75" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SnapHelperEffect::reconfigure</definition>
        <argsstring>(ReconfigureFlags flags) override</argsstring>
        <name>reconfigure</name>
        <qualifiedname>KWin::SnapHelperEffect::reconfigure</qualifiedname>
        <reimplements refid="group__kwineffects_1ga737c6d80eb8f8b24fdc6398209c38e3d">reconfigure</reimplements>
        <param>
          <type>ReconfigureFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called when configuration changes (either the effect&apos;s or <ref refid="namespace_k_win" kindref="compound">KWin</ref>&apos;s global).</para>
<para>In OpenGL based compositing, the frameworks ensures that the context is current when the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> is reconfigured. If this method is called from within the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> it is required to ensure that the context is current if the implementation does OpenGL calls. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="27" column="10" bodyfile="kwin/src/plugins/snaphelper/snaphelper.cpp" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_snap_helper_effect_1a11939bf9dd38b57f7b1a08e50f0b0a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SnapHelperEffect::prePaintScreen</definition>
        <argsstring>(ScreenPrePaintData &amp;data, std::chrono::milliseconds presentTime) override</argsstring>
        <name>prePaintScreen</name>
        <qualifiedname>KWin::SnapHelperEffect::prePaintScreen</qualifiedname>
        <reimplements refid="group__kwineffects_1ga2edc1b757e36bb6bcbbacde454dfc05c">prePaintScreen</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_screen_pre_paint_data" kindref="compound">ScreenPrePaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::chrono::milliseconds</type>
          <declname>presentTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called before starting to paint the screen. In this method you can: <itemizedlist>
<listitem><para>set whether the windows or the entire screen will be transformed </para>
</listitem>
<listitem><para>change the region of the screen that will be painted </para>
</listitem>
<listitem><para>do various housekeeping tasks such as initing your effect&apos;s variables for the upcoming paint pass or updating animation&apos;s progress</para>
</listitem>
</itemizedlist>
<emphasis>presentTime</emphasis> specifies the expected monotonic time when the rendered frame will be displayed on the screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="29" column="10" bodyfile="kwin/src/plugins/snaphelper/snaphelper.cpp" bodystart="90" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_snap_helper_effect_1aac1528cb0b41fdb3c2292d871b5da46d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SnapHelperEffect::paintScreen</definition>
        <argsstring>(const RenderTarget &amp;renderTarget, const RenderViewport &amp;viewport, int mask, const QRegion &amp;region, Output *screen) override</argsstring>
        <name>paintScreen</name>
        <qualifiedname>KWin::SnapHelperEffect::paintScreen</qualifiedname>
        <reimplements refid="group__kwineffects_1ga44ee94161446ce6fb2502376af6515a8">paintScreen</reimplements>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>screen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In this method you can: <itemizedlist>
<listitem><para>paint something on top of the windows (by painting after calling effects-&gt;<ref refid="class_k_win_1_1_snap_helper_effect_1aac1528cb0b41fdb3c2292d871b5da46d" kindref="member">paintScreen()</ref>) </para>
</listitem>
<listitem><para>paint multiple desktops and/or multiple copies of the same desktop by calling effects-&gt;<ref refid="class_k_win_1_1_snap_helper_effect_1aac1528cb0b41fdb3c2292d871b5da46d" kindref="member">paintScreen()</ref> multiple times</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="30" column="10" bodyfile="kwin/src/plugins/snaphelper/snaphelper.cpp" bodystart="99" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_snap_helper_effect_1aa59806708343036194b2e1c3c6b3c2f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::SnapHelperEffect::postPaintScreen</definition>
        <argsstring>() override</argsstring>
        <name>postPaintScreen</name>
        <qualifiedname>KWin::SnapHelperEffect::postPaintScreen</qualifiedname>
        <reimplements refid="group__kwineffects_1ga10021cf9704c00d60beae284d53846e2">postPaintScreen</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called after all the painting has been finished. In this method you can: <itemizedlist>
<listitem><para>schedule next repaint in case of animations You shouldn&apos;t paint anything here.</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="31" column="10" bodyfile="kwin/src/plugins/snaphelper/snaphelper.cpp" bodystart="188" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_snap_helper_effect_1a9da393f488ca320a3dde07722e2031a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::SnapHelperEffect::isActive</definition>
        <argsstring>() const override</argsstring>
        <name>isActive</name>
        <qualifiedname>KWin::SnapHelperEffect::isActive</qualifiedname>
        <reimplements refid="group__kwineffects_1ga596b6c0ed146b97b293f5db5f27fc40f">isActive</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overwrite this method to indicate whether your effect will be doing something in the next frame to be rendered. If the method returns <computeroutput>false</computeroutput> the effect will be excluded from the chained methods in the next rendered frame.</para>
<para>This method is called always directly before the paint loop begins. So it is totally fine to e.g. react on a window event, issue a repaint to trigger an animation and change a flag to indicate that this method returns <computeroutput>true</computeroutput>.</para>
<para>As the method is called each frame, you should not perform complex calculations. Best use just a boolean flag.</para>
<para>The default implementation of this method returns <computeroutput>true</computeroutput>. <simplesect kind="since"><para>4.8 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="33" column="10" bodyfile="kwin/src/plugins/snaphelper/snaphelper.cpp" bodystart="275" bodyend="278"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_snap_helper_effect_1a984763e8bb5897d7c7a8ceff71c6e389" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SnapHelperEffect::slotWindowAdded</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>slotWindowAdded</name>
        <qualifiedname>KWin::SnapHelperEffect::slotWindowAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="36" column="10" bodyfile="kwin/src/plugins/snaphelper/snaphelper.cpp" bodystart="201" bodyend="206"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_snap_helper_effect_1a620352fde908f63b38bc7af8994bcb46" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SnapHelperEffect::slotWindowClosed</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>slotWindowClosed</name>
        <qualifiedname>KWin::SnapHelperEffect::slotWindowClosed</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="37" column="10" bodyfile="kwin/src/plugins/snaphelper/snaphelper.cpp" bodystart="208" bodyend="224"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_snap_helper_effect_1a8fd4869ebde568e8bd1b49cf236941ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SnapHelperEffect::slotWindowStartUserMovedResized</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>slotWindowStartUserMovedResized</name>
        <qualifiedname>KWin::SnapHelperEffect::slotWindowStartUserMovedResized</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="38" column="10" bodyfile="kwin/src/plugins/snaphelper/snaphelper.cpp" bodystart="226" bodyend="243"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_snap_helper_effect_1a4d1ca32be5b6f67327f24fed6eb62eaa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SnapHelperEffect::slotWindowFinishUserMovedResized</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>slotWindowFinishUserMovedResized</name>
        <qualifiedname>KWin::SnapHelperEffect::slotWindowFinishUserMovedResized</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="39" column="10" bodyfile="kwin/src/plugins/snaphelper/snaphelper.cpp" bodystart="245" bodyend="262"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_snap_helper_effect_1a307f623814fb6a398bc90fa5f935f231" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SnapHelperEffect::slotWindowFrameGeometryChanged</definition>
        <argsstring>(EffectWindow *w, const QRectF &amp;old)</argsstring>
        <name>slotWindowFrameGeometryChanged</name>
        <qualifiedname>KWin::SnapHelperEffect::slotWindowFrameGeometryChanged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>old</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="40" column="10" bodyfile="kwin/src/plugins/snaphelper/snaphelper.cpp" bodystart="264" bodyend="273"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::SnapHelperEffect</label>
        <link refid="class_k_win_1_1_snap_helper_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::SnapHelperEffect</label>
        <link refid="class_k_win_1_1_snap_helper_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/plugins/snaphelper/snaphelper.h" line="19" column="1" bodyfile="kwin/src/plugins/snaphelper/snaphelper.h" bodystart="20" bodyend="53"/>
    <listofallmembers>
      <member refid="group__kwineffects_1gab9bcf52072fe74567496b0a894d1d873" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga3a167fe6d9c46376ed46db13caf2d135" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga0ba05f1463195d0f92ea1dd3396a5d16" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga7cf8035c970fcde177e3038d79015289" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>blocksDirectScanout</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea67d120ab5ce1dc424476e63c132af6c1" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>Blur</name></member>
      <member refid="group__kwineffects_1gab8a94f591b743b59b7285911e641e7d5" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>borderActivated</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aead805f717a48c23959a1e9ecd7722d15d" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>Contrast</name></member>
      <member refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>cursorPos</name></member>
      <member refid="group__kwineffects_1ga0c159e00c3a51ca733bea49cf8d52691" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>debug</name></member>
      <member refid="group__kwineffects_1ga254b1a3e8bb8b9b671e9b000ca027b7c" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>drawWindow</name></member>
      <member refid="group__kwineffects_1ga7bd8262f4cb2c5c3090c748eb388ad7e" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>Effect</name></member>
      <member refid="group__kwineffects_1ga6337b2a9b5aadfbb6b696119144b56ae" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>Feature</name></member>
      <member refid="group__kwineffects_1gab5e0581ae4b2dffe8014ff5cf6c21158" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>grabbedKeyboardEvent</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aeaecbb77ad241419970ece3d45296c4838" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>HighlightWindows</name></member>
      <member refid="group__kwineffects_1ga7b0ecb57667179e95c188f0ee7416d00" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>interpolate</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1a9da393f488ca320a3dde07722e2031a1" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>isActive</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1ae77a2d3f8683f24f68bd46c08e50687b" prot="private" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>m_animation</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1a2ad5eb2377b29832148b626a3866923c" prot="private" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>m_geometry</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1a98c07df42199a94eb2627bff5149ce13" prot="private" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>m_window</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea170229312ed2ec0e446ee89ba7f6b6ca" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>Nothing</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dab0de2932c45bde6df3de10d00dbd6fcd" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>PAINT_SCREEN_BACKGROUND_FIRST</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da43acbfc913cae9eb3c363aeb0524f18f" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>PAINT_SCREEN_REGION</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da3e731594d83c3e92742bff7c420fb7f8" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>PAINT_SCREEN_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da124dd798e5f793087e81da77e11a9b1e" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>PAINT_SCREEN_WITH_TRANSFORMED_WINDOWS</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac606d3dcf2dd150234f71c4c39083c7d" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>PAINT_WINDOW_OPAQUE</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da684bb6c6c278b900b6d0c889e79233b8" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>PAINT_WINDOW_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac7237bf4bb4d6ea6d6fb1215db19b45e" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>PAINT_WINDOW_TRANSLUCENT</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1aac1528cb0b41fdb3c2292d871b5da46d" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>paintScreen</name></member>
      <member refid="group__kwineffects_1ga0f0292db2bf016a0843ef7cc06219378" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>paintWindow</name></member>
      <member refid="group__kwineffects_1ga5fb1bc87ff54dcc2cfe87b070816ab00" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>perform</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1aa59806708343036194b2e1c3c6b3c2f7" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>postPaintScreen</name></member>
      <member refid="group__kwineffects_1ga9b7cf82c6f74331cffabb06c63ef914c" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>postPaintWindow</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1a11939bf9dd38b57f7b1a08e50f0b0a20" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>prePaintScreen</name></member>
      <member refid="group__kwineffects_1ga2832c7831c0f49f9f5cf0267ffc53672" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>prePaintWindow</name></member>
      <member refid="group__kwineffects_1ga30fc2cbbdd90f95568a9e350f34bf2b7" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>provides</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1a1524238930987831b00e2486a14dec75" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>reconfigure</name></member>
      <member refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>ReconfigureAll</name></member>
      <member refid="group__kwineffects_1ga4aebd7d0f695e37678debaa118fa92dc" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>ReconfigureFlag</name></member>
      <member refid="group__kwineffects_1ga120531588e58691a5a18028158d2947a" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>requestedEffectChainPosition</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea592ea0de7a4d658a1ef9bbb48b18e15a" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>ScreenInversion</name></member>
      <member refid="group__kwineffects_1ga1efc42cd9be15e8200c6e55f6bf47cb8" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>setPositionTransformations</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1a984763e8bb5897d7c7a8ceff71c6e389" prot="private" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>slotWindowAdded</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1a620352fde908f63b38bc7af8994bcb46" prot="private" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>slotWindowClosed</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1a4d1ca32be5b6f67327f24fed6eb62eaa" prot="private" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>slotWindowFinishUserMovedResized</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1a307f623814fb6a398bc90fa5f935f231" prot="private" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>slotWindowFrameGeometryChanged</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1a8fd4869ebde568e8bd1b49cf236941ad" prot="private" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>slotWindowStartUserMovedResized</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1a034028241899e47bfa1278af8c9ac5e6" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>SnapHelperEffect</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea19036d413806c53978a3234e7eb197c4" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>SystemBell</name></member>
      <member refid="group__kwineffects_1ga2d22a8f0b8a4d81615dff67dc1ef970f" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>tabletPadButtonEvent</name></member>
      <member refid="group__kwineffects_1gaa084e5a45597f5775213715eb5506f63" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>tabletPadRingEvent</name></member>
      <member refid="group__kwineffects_1ga4998fb0983bd97163935cad2c4dedd76" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>tabletPadStripEvent</name></member>
      <member refid="group__kwineffects_1ga1d4ae01f5935ea887a12018d59191cbf" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>tabletToolAxis</name></member>
      <member refid="group__kwineffects_1ga7a984d7d83dfa97962b8404301c6aba9" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>tabletToolButtonEvent</name></member>
      <member refid="group__kwineffects_1ga4ed77506be381680bf664dbc8c20e036" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>tabletToolProximity</name></member>
      <member refid="group__kwineffects_1gaf16e9ca42cceb738fb859d1a1a462548" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>tabletToolTip</name></member>
      <member refid="group__kwineffects_1gaa31554949bc00085e6380b50be16138e" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>touchCancel</name></member>
      <member refid="group__kwineffects_1ga315fd305e7570f41e7bce7db6812381f" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>touchDown</name></member>
      <member refid="group__kwineffects_1ga54d00a9e05b5d4597db40c2f5b1d36de" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>touchMotion</name></member>
      <member refid="group__kwineffects_1gaf3871967d6199eb7c87621bc75b925bb" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>touchUp</name></member>
      <member refid="group__kwineffects_1ga7b142933c38cb9b4a433b768b266e7cb" prot="public" virt="virtual"><scope>KWin::SnapHelperEffect</scope><name>windowInputMouseEvent</name></member>
      <member refid="group__kwineffects_1ga50174eb0169aebceb78ebd5aff71c481" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>~Effect</name></member>
      <member refid="class_k_win_1_1_snap_helper_effect_1aa9abf63e620c67c520acc6e799379183" prot="public" virt="non-virtual"><scope>KWin::SnapHelperEffect</scope><name>~SnapHelperEffect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
