<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_mock_property" kind="class" language="C++" prot="public">
    <compoundname>MockProperty</compoundname>
    <includes refid="mock__drm_8h" local="no">mock_drm.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_mock_property_1ac9cdfc8b7c01735eab784c38c9018cc5" prot="public" static="no" mutable="no">
        <type><ref refid="class_mock_object" kindref="compound">MockObject</ref> *</type>
        <definition>MockObject* MockProperty::obj</definition>
        <argsstring></argsstring>
        <name>obj</name>
        <qualifiedname>MockProperty::obj</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="33" column="16" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_property_1a1198e54aa32ec5f1b1267079bc2f7126" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t MockProperty::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <qualifiedname>MockProperty::id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="34" column="14" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_property_1a17f34352a1d4365c53897c25359482cb" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t MockProperty::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <qualifiedname>MockProperty::flags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="35" column="14" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_property_1a3c4a0d16cadf7b60966c569a8b697646" prot="public" static="no" mutable="no">
        <type>QString</type>
        <definition>QString MockProperty::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>MockProperty::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="36" column="13" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_property_1a1ceebe6ed0150fa707eb5a8bcda7e1c7" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t MockProperty::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>MockProperty::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="37" column="14" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_property_1a1becafc767ba4679e23db9ecf07fcb22" prot="public" static="no" mutable="no">
        <type>QList&lt; QByteArray &gt;</type>
        <definition>QList&lt;QByteArray&gt; MockProperty::enums</definition>
        <argsstring></argsstring>
        <name>enums</name>
        <qualifiedname>MockProperty::enums</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="38" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mock_property_1ace1a41f3c79cf3c44301b4e2e3d0cdf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockProperty::MockProperty</definition>
        <argsstring>(MockObject *obj, QString name, uint64_t initialValue, uint32_t flags, QList&lt; QByteArray &gt; enums={})</argsstring>
        <name>MockProperty</name>
        <qualifiedname>MockProperty::MockProperty</qualifiedname>
        <param>
          <type><ref refid="class_mock_object" kindref="compound">MockObject</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>initialValue</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>QList&lt; QByteArray &gt;</type>
          <declname>enums</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="30" column="5" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="138" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_property_1aa0b938040895c704b8a332dd0c09fbcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockProperty::~MockProperty</definition>
        <argsstring>()=default</argsstring>
        <name>~MockProperty</name>
        <qualifiedname>MockProperty::~MockProperty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="31" column="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>MockGpu</label>
        <link refid="class_mock_gpu"/>
      </node>
      <node id="2">
        <label>MockObject</label>
        <link refid="class_mock_object"/>
        <childnode refid="3" relation="usage">
          <edgelabel>gpu</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>MockProperty</label>
        <link refid="class_mock_property"/>
        <childnode refid="2" relation="usage">
          <edgelabel>obj</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/drm/mock_drm.h" line="28" column="1" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="28" bodyend="39"/>
    <listofallmembers>
      <member refid="class_mock_property_1a1becafc767ba4679e23db9ecf07fcb22" prot="public" virt="non-virtual"><scope>MockProperty</scope><name>enums</name></member>
      <member refid="class_mock_property_1a17f34352a1d4365c53897c25359482cb" prot="public" virt="non-virtual"><scope>MockProperty</scope><name>flags</name></member>
      <member refid="class_mock_property_1a1198e54aa32ec5f1b1267079bc2f7126" prot="public" virt="non-virtual"><scope>MockProperty</scope><name>id</name></member>
      <member refid="class_mock_property_1ace1a41f3c79cf3c44301b4e2e3d0cdf9" prot="public" virt="non-virtual"><scope>MockProperty</scope><name>MockProperty</name></member>
      <member refid="class_mock_property_1a3c4a0d16cadf7b60966c569a8b697646" prot="public" virt="non-virtual"><scope>MockProperty</scope><name>name</name></member>
      <member refid="class_mock_property_1ac9cdfc8b7c01735eab784c38c9018cc5" prot="public" virt="non-virtual"><scope>MockProperty</scope><name>obj</name></member>
      <member refid="class_mock_property_1a1ceebe6ed0150fa707eb5a8bcda7e1c7" prot="public" virt="non-virtual"><scope>MockProperty</scope><name>value</name></member>
      <member refid="class_mock_property_1aa0b938040895c704b8a332dd0c09fbcd" prot="public" virt="non-virtual"><scope>MockProperty</scope><name>~MockProperty</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
