<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="glshader_8cpp" kind="file" language="C++">
    <compoundname>glshader.cpp</compoundname>
    <includes refid="glshader_8h" local="yes">glshader.h</includes>
    <includes refid="glplatform_8h" local="yes">glplatform.h</includes>
    <includes refid="glutils_8h" local="yes">glutils.h</includes>
    <includes refid="common_8h" local="yes">utils/common.h</includes>
    <includes local="no">QFile</includes>
    <incdepgraph>
      <node id="3">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>opengl/eglcontext.h</label>
        <link refid="eglcontext_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>opengl/glframebuffer.h</label>
        <link refid="glframebuffer_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>glplatform.h</label>
        <link refid="glplatform_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/opengl/glshader.cpp</label>
        <link refid="glshader_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>glshader.h</label>
        <link refid="glshader_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>opengl/glshadermanager.h</label>
        <link refid="glshadermanager_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>opengl/gltexture.h</label>
        <link refid="gltexture_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>glutils.h</label>
        <link refid="glutils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>QByteArray</label>
      </node>
      <node id="8">
        <label>QColor</label>
      </node>
      <node id="16">
        <label>QCoreApplication</label>
      </node>
      <node id="33">
        <label>QDebug</label>
      </node>
      <node id="36">
        <label>QExplicitlySharedDataPointer</label>
      </node>
      <node id="51">
        <label>QFile</label>
      </node>
      <node id="42">
        <label>QFlags</label>
      </node>
      <node id="17">
        <label>QImage</label>
      </node>
      <node id="31">
        <label>QList</label>
      </node>
      <node id="49">
        <label>QLoggingCategory</label>
      </node>
      <node id="9">
        <label>QMatrix3x3</label>
      </node>
      <node id="5">
        <label>QMatrix4x4</label>
      </node>
      <node id="29">
        <label>QObject</label>
      </node>
      <node id="18">
        <label>QPoint</label>
      </node>
      <node id="34">
        <label>QRect</label>
      </node>
      <node id="37">
        <label>QRegion</label>
      </node>
      <node id="22">
        <label>QSet</label>
      </node>
      <node id="32">
        <label>QSize</label>
      </node>
      <node id="38">
        <label>QStack</label>
      </node>
      <node id="10">
        <label>QString</label>
      </node>
      <node id="35">
        <label>QUuid</label>
      </node>
      <node id="19">
        <label>QVariant</label>
      </node>
      <node id="6">
        <label>QVector2D</label>
      </node>
      <node id="11">
        <label>QVector3D</label>
      </node>
      <node id="50">
        <label>climits</label>
      </node>
      <node id="15">
        <label>config-kwin.h</label>
      </node>
      <node id="39">
        <label>epoxy/egl.h</label>
      </node>
      <node id="12">
        <label>epoxy/gl.h</label>
      </node>
      <node id="47">
        <label>functional</label>
      </node>
      <node id="7">
        <label>kwin_export.h</label>
      </node>
      <node id="43">
        <label>map</label>
      </node>
      <node id="23">
        <label>memory</label>
      </node>
      <node id="4">
        <label>optional</label>
      </node>
      <node id="45">
        <label>ranges</label>
      </node>
      <node id="46">
        <label>span</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2006-2007<sp/>Rivo<sp/>Laks<sp/>&lt;rivolaks@hot.ee&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2010,<sp/>2011<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@kde.org&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glshader_8h" kindref="compound">glshader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glplatform_8h" kindref="compound">glplatform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glutils_8h" kindref="compound">glutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">utils/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QFile&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_k_win_1_1_g_l_shader_1ad541f1e0686f484edb51277df0ae164f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_shader_1ab84b9566c32bfcfd2f4ad9f00523865e" kindref="member">GLShader::GLShader</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_valid(false)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_locationsResolved(false)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_explicitLinking(flags<sp/>&amp;<sp/><ref refid="class_k_win_1_1_g_l_shader_1a3dc6432fcd49e25ad4342a01f2ed15e6ab059d1622f2548b5c7e0f5c8580ab8a2" kindref="member">ExplicitLinking</ref>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>m_program<sp/>=<sp/>glCreateProgram();</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_k_win_1_1_g_l_shader_1ab84b9566c32bfcfd2f4ad9f00523865e" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_shader_1ab84b9566c32bfcfd2f4ad9f00523865e" kindref="member">GLShader::GLShader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;vertexfile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fragmentfile,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_valid(false)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_locationsResolved(false)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_explicitLinking(flags<sp/>&amp;<sp/><ref refid="class_k_win_1_1_g_l_shader_1a3dc6432fcd49e25ad4342a01f2ed15e6ab059d1622f2548b5c7e0f5c8580ab8a2" kindref="member">ExplicitLinking</ref>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>m_program<sp/>=<sp/>glCreateProgram();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1a5392a2d740b8025a9488c38e30fe4b92" kindref="member">loadFromFiles</ref>(vertexfile,<sp/>fragmentfile);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_k_win_1_1_g_l_shader_1a4859aa0497a1f22647f79e4edf50916f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_shader_1a4859aa0497a1f22647f79e4edf50916f" kindref="member">GLShader::~GLShader</ref>()</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>())<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_OPENGL,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>delete<sp/>shader<sp/>because<sp/>no<sp/>context<sp/>is<sp/>current&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_program)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteProgram(m_program);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_k_win_1_1_g_l_shader_1a5392a2d740b8025a9488c38e30fe4b92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1a5392a2d740b8025a9488c38e30fe4b92" kindref="member">GLShader::loadFromFiles</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;vertexFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fragmentFile)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/>vf(vertexFile);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vf.open(QIODevice::ReadOnly))<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>open&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vertexFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;for<sp/>reading!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>vertexSource<sp/>=<sp/>vf.readAll();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/>ff(fragmentFile);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ff.open(QIODevice::ReadOnly))<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>open&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fragmentFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;for<sp/>reading!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>fragmentSource<sp/>=<sp/>ff.readAll();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1a0c91ed04128048e79e58fc0342c4b0cc" kindref="member">load</ref>(vertexSource,<sp/>fragmentSource);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_k_win_1_1_g_l_shader_1a887095b409a8fc8a3fc0080fbc5f4282" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1a887095b409a8fc8a3fc0080fbc5f4282" kindref="member">GLShader::link</ref>()</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Be<sp/>optimistic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>m_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>glLinkProgram(m_program);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>program<sp/>info<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxLength,<sp/>length;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetProgramiv(m_program,<sp/>GL_INFO_LOG_LENGTH,<sp/>&amp;maxLength);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>log(maxLength,<sp/>0);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetProgramInfoLog(m_program,<sp/>maxLength,<sp/>&amp;length,<sp/>log.data());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>program<sp/>linked<sp/>successfully</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetProgramiv(m_program,<sp/>GL_LINK_STATUS,<sp/>&amp;status);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>link<sp/>shader:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>log;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Shader<sp/>link<sp/>log:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>log;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_valid;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_k_win_1_1_g_l_shader_1a53b3632c48af302767cc369a7a964563" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/><ref refid="class_k_win_1_1_g_l_shader_1a53b3632c48af302767cc369a7a964563" kindref="member">GLShader::prepareSource</ref>(GLenum<sp/>shaderType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;source)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="99"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>the<sp/>source<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>ba;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>context<sp/>=<sp/><ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;isOpenGLES()<sp/>&amp;&amp;<sp/>context-&gt;glslVersion()<sp/>&lt;<sp/><ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.append(</highlight><highlight class="stringliteral">&quot;precision<sp/>highp<sp/>float;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>ba.append(source);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;isOpenGLES()<sp/>&amp;&amp;<sp/>context-&gt;glslVersion()<sp/>&gt;=<sp/><ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.replace(</highlight><highlight class="stringliteral">&quot;#version<sp/>140&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;#version<sp/>300<sp/>es\n\nprecision<sp/>highp<sp/>float;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ba;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_k_win_1_1_g_l_shader_1aa603e1dfe0d238f5e3e49cb21a58527e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1aa603e1dfe0d238f5e3e49cb21a58527e" kindref="member">GLShader::compile</ref>(GLuint<sp/>program,<sp/>GLenum<sp/>shaderType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;source)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="115"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>shader<sp/>=<sp/>glCreateShader(shaderType);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>preparedSource<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a53b3632c48af302767cc369a7a964563" kindref="member">prepareSource</ref>(shaderType,<sp/>source);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src<sp/>=<sp/>preparedSource.constData();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSource(shader,<sp/>1,<sp/>&amp;src,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compile<sp/>the<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(shader);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>shader<sp/>info<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxLength,<sp/>length;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetShaderiv(shader,<sp/>GL_INFO_LOG_LENGTH,<sp/>&amp;maxLength);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>log(maxLength,<sp/>0);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetShaderInfoLog(shader,<sp/>maxLength,<sp/>&amp;length,<sp/>log.data());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetShaderiv(shader,<sp/>GL_COMPILE_STATUS,<sp/>&amp;status);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*typeName<sp/>=<sp/>(shaderType<sp/>==<sp/>GL_VERTEX_SHADER<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;vertex&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;fragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>compile&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>typeName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;shader:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>log;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>line<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>split<sp/>=<sp/>source.split(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;l<sp/>:<sp/>split)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_OPENGL).nospace()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;line<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>line++<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_OPENGL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Shader<sp/>compile<sp/>log:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>log;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glAttachShader(program,<sp/>shader);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteShader(shader);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="class_k_win_1_1_g_l_shader_1a0c91ed04128048e79e58fc0342c4b0cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1a0c91ed04128048e79e58fc0342c4b0cc" kindref="member">GLShader::load</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;vertexSource,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;fragmentSource)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>m_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compile<sp/>the<sp/>vertex<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vertexSource.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1aa603e1dfe0d238f5e3e49cb21a58527e" kindref="member">compile</ref>(m_program,<sp/>GL_VERTEX_SHADER,<sp/>vertexSource);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compile<sp/>the<sp/>fragment<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fragmentSource.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1aa603e1dfe0d238f5e3e49cb21a58527e" kindref="member">compile</ref>(m_program,<sp/>GL_FRAGMENT_SHADER,<sp/>fragmentSource);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_explicitLinking)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>link()<sp/>sets<sp/>mValid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1a887095b409a8fc8a3fc0080fbc5f4282" kindref="member">link</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_k_win_1_1_g_l_shader_1a96bad8743855d33a234b3564319baf05" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1a96bad8743855d33a234b3564319baf05" kindref="member">GLShader::bindAttributeLocation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindAttribLocation(m_program,<sp/>index,<sp/>name);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="class_k_win_1_1_g_l_shader_1a9d22d9f09c2693766f08e4a93c8d4b16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1a9d22d9f09c2693766f08e4a93c8d4b16" kindref="member">GLShader::bindFragDataLocation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>context<sp/>=<sp/><ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!context-&gt;isOpenGLES()<sp/>&amp;&amp;<sp/>(context-&gt;hasVersion(<ref refid="class_k_win_1_1_version" kindref="compound">Version</ref>(3,<sp/>0))<sp/>||<sp/>context-&gt;hasOpenglExtension(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;GL_EXT_gpu_shader4&quot;</highlight><highlight class="normal">))))<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindFragDataLocation(m_program,<sp/>index,<sp/>name);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="class_k_win_1_1_g_l_shader_1ae87d13e503040008ccf350ff9002186a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1ae87d13e503040008ccf350ff9002186a" kindref="member">GLShader::bind</ref>()</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(m_program);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="class_k_win_1_1_g_l_shader_1aad72b9ce7cfb9f76cad3ed605072c30c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1aad72b9ce7cfb9f76cad3ed605072c30c" kindref="member">GLShader::unbind</ref>()</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(0);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="class_k_win_1_1_g_l_shader_1a8ada3016c868b5b2c48ff2c15940c17a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1a8ada3016c868b5b2c48ff2c15940c17a" kindref="member">GLShader::resolveLocations</ref>()</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_locationsResolved)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrix4Locations[<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a564a5d93991a252df798213e5b179eb8" kindref="member">Mat4Uniform::TextureMatrix</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;textureMatrix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrix4Locations[<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a5c79d4241e5a2978c699473b01f82fe9" kindref="member">Mat4Uniform::ProjectionMatrix</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;projection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrix4Locations[<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691aa5f6f5560bfb195748b692c47b3d4379" kindref="member">Mat4Uniform::ModelViewMatrix</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;modelview&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrix4Locations[<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a45f966892aa9712b434b27ea5513b63a" kindref="member">Mat4Uniform::ModelViewProjectionMatrix</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;modelViewProjectionMatrix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrix4Locations[<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a712e256e9b659fdf78e39e87a22c153e" kindref="member">Mat4Uniform::WindowTransformation</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;windowTransformation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrix4Locations[<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a2be2f1d5bfeaf60b6b2a594c26ec98f6" kindref="member">Mat4Uniform::ScreenTransformation</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;screenTransformation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrix4Locations[<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a9eec7502d71fbfdee9bfa5a61cff61b5" kindref="member">Mat4Uniform::ColorimetryTransformation</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;colorimetryTransform&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrix4Locations[<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a47a24b8cf2e9cf4ed90b0fa4152eeaeb" kindref="member">Mat4Uniform::DestinationToLMS</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;destinationToLMS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrix4Locations[<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a5f6b03f3e017cc2c31a6a0e1b3c39a61" kindref="member">Mat4Uniform::LMSToDestination</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;lmsToDestination&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrix4Locations[<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691acfb83bc53dbfc148b8238084c8b2bbbd" kindref="member">Mat4Uniform::YuvToRgb</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;yuvToRgb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vec2Locations[<ref refid="class_k_win_1_1_g_l_shader_1a9c9d1d6b08c0bd51be06a3f4e4b75d2dadfd0a82c4bf37b1e90b690a22a20692e" kindref="member">Vec2Uniform::Offset</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;offset&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vec2Locations[<ref refid="class_k_win_1_1_g_l_shader_1a9c9d1d6b08c0bd51be06a3f4e4b75d2da218ca75efb190fc863f743803c0fb225" kindref="member">Vec2Uniform::SourceTransferFunctionParams</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;sourceTransferFunctionParams&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vec2Locations[<ref refid="class_k_win_1_1_g_l_shader_1a9c9d1d6b08c0bd51be06a3f4e4b75d2da6ec6f4b95a8cc6b1dd595dee3e9434c8" kindref="member">Vec2Uniform::DestinationTransferFunctionParams</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;destinationTransferFunctionParams&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vec3Locations[<ref refid="class_k_win_1_1_g_l_shader_1ab814086d2863ee6b89b55cc30285418ea4a298409892e447ea0614795f5944b63" kindref="member">Vec3Uniform::PrimaryBrightness</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;primaryBrightness&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vec4Locations[<ref refid="class_k_win_1_1_g_l_shader_1a6d59cea8f85957921c86729db6a84b9bac15ccc71e5767ba4f8614983965a26aa" kindref="member">Vec4Uniform::ModulationConstant</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;modulation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>m_floatLocations[<ref refid="class_k_win_1_1_g_l_shader_1a4ca07b55f39418655f237df9b679faf8a2e3307b9b1a2cc64b48f1cd6977a4b29" kindref="member">FloatUniform::Saturation</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;saturation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>m_floatLocations[<ref refid="class_k_win_1_1_g_l_shader_1a4ca07b55f39418655f237df9b679faf8a5acf7048aabb92bfacbeec966a044872" kindref="member">FloatUniform::MaxDestinationLuminance</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;maxDestinationLuminance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>m_floatLocations[<ref refid="class_k_win_1_1_g_l_shader_1a4ca07b55f39418655f237df9b679faf8a7c79f727e74c1f9b33fd1c676b370b67" kindref="member">FloatUniform::SourceReferenceLuminance</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;sourceReferenceLuminance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>m_floatLocations[<ref refid="class_k_win_1_1_g_l_shader_1a4ca07b55f39418655f237df9b679faf8ae5d7fd62ebe7e64d4924f8436ed5c368" kindref="member">FloatUniform::DestinationReferenceLuminance</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;destinationReferenceLuminance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>m_floatLocations[<ref refid="class_k_win_1_1_g_l_shader_1a4ca07b55f39418655f237df9b679faf8a7a6879900ce85b7a815e8f35459c11a9" kindref="member">FloatUniform::MaxTonemappingLuminance</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;maxTonemappingLuminance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>m_colorLocations[<ref refid="class_k_win_1_1_g_l_shader_1a5cd975ed881a6c02777c28ff85e3bf9bacb5feb1b7314637725a2e73bdc9f7295" kindref="member">ColorUniform::Color</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;geometryColor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>m_intLocations[<ref refid="class_k_win_1_1_g_l_shader_1a722159dac6e0dc4c4dab9a7efaa59617a5f05f274b3c333df5ba14546a742fc2c" kindref="member">IntUniform::TextureWidth</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;textureWidth&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>m_intLocations[<ref refid="class_k_win_1_1_g_l_shader_1a722159dac6e0dc4c4dab9a7efaa59617ab5bf654ae145a164cb6adc6195ca1e51" kindref="member">IntUniform::TextureHeight</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;textureHeight&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>m_intLocations[<ref refid="class_k_win_1_1_g_l_shader_1a722159dac6e0dc4c4dab9a7efaa59617a5bca2f066df1fe641b2b779db2a63c0a" kindref="member">IntUniform::Sampler</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;sampler&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>m_intLocations[<ref refid="class_k_win_1_1_g_l_shader_1a722159dac6e0dc4c4dab9a7efaa59617a403cfec8cd54bf91fb1f77dc88d1406f" kindref="member">IntUniform::Sampler1</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;sampler1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>m_intLocations[<ref refid="class_k_win_1_1_g_l_shader_1a722159dac6e0dc4c4dab9a7efaa59617acb853e8113dcf49497f9248a64c37268" kindref="member">IntUniform::SourceNamedTransferFunction</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;sourceNamedTransferFunction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>m_intLocations[<ref refid="class_k_win_1_1_g_l_shader_1a722159dac6e0dc4c4dab9a7efaa59617a8f1ad4433f80925de5bb70c622b91102" kindref="member">IntUniform::DestinationNamedTransferFunction</ref>]<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;destinationNamedTransferFunction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>m_locationsResolved<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">GLShader::uniformLocation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>=<sp/>glGetUniformLocation(m_program,<sp/>name);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>location;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="class_k_win_1_1_g_l_shader_1ad00256a2b188416dd8e2489f36abb68c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a454ff44f40b261412cb8ad3892106bfa" kindref="member">Mat3Uniform</ref><sp/>uniform,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix3x3<sp/>&amp;value)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1a8ada3016c868b5b2c48ff2c15940c17a" kindref="member">resolveLocations</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(m_matrix3Locations[uniform],<sp/>value);</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="class_k_win_1_1_g_l_shader_1a4e0e6a2721c4073a98a8bf07ea943c9d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691" kindref="member">Mat4Uniform</ref><sp/>uniform,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>&amp;matrix)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1a8ada3016c868b5b2c48ff2c15940c17a" kindref="member">resolveLocations</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(m_matrix4Locations[uniform],<sp/>matrix);</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="class_k_win_1_1_g_l_shader_1a846281833c8628463437fe058764bcff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a9c9d1d6b08c0bd51be06a3f4e4b75d2d" kindref="member">Vec2Uniform</ref><sp/>uniform,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector2D<sp/>&amp;value)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1a8ada3016c868b5b2c48ff2c15940c17a" kindref="member">resolveLocations</ref>();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(m_vec2Locations[uniform],<sp/>value);</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="class_k_win_1_1_g_l_shader_1a2e781768b85afc31b2b9716b4a602989" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1ab814086d2863ee6b89b55cc30285418e" kindref="member">Vec3Uniform</ref><sp/>uniform,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>&amp;value)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1a8ada3016c868b5b2c48ff2c15940c17a" kindref="member">resolveLocations</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(m_vec3Locations[uniform],<sp/>value);</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="class_k_win_1_1_g_l_shader_1a4db07c5fadbcc3dfd12634d63b4855f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a6d59cea8f85957921c86729db6a84b9b" kindref="member">Vec4Uniform</ref><sp/>uniform,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector4D<sp/>&amp;value)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1a8ada3016c868b5b2c48ff2c15940c17a" kindref="member">resolveLocations</ref>();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(m_vec4Locations[uniform],<sp/>value);</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="class_k_win_1_1_g_l_shader_1aa7a9f8a2771ecf84eab4310ede97c71b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a4ca07b55f39418655f237df9b679faf8" kindref="member">FloatUniform</ref><sp/>uniform,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1a8ada3016c868b5b2c48ff2c15940c17a" kindref="member">resolveLocations</ref>();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(m_floatLocations[uniform],<sp/>value);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="class_k_win_1_1_g_l_shader_1a8eaa6a79b44302446fa34dbbb63619dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a722159dac6e0dc4c4dab9a7efaa59617" kindref="member">IntUniform</ref><sp/>uniform,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1a8ada3016c868b5b2c48ff2c15940c17a" kindref="member">resolveLocations</ref>();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(m_intLocations[uniform],<sp/>value);</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="class_k_win_1_1_g_l_shader_1a841ebf6ccbb0c9e0051c7c4971955f3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a5cd975ed881a6c02777c28ff85e3bf9b" kindref="member">ColorUniform</ref><sp/>uniform,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector4D<sp/>&amp;value)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1a8ada3016c868b5b2c48ff2c15940c17a" kindref="member">resolveLocations</ref>();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(m_colorLocations[uniform],<sp/>value);</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="class_k_win_1_1_g_l_shader_1a9b025de07a16a1be01cd6b5808a8955d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a5cd975ed881a6c02777c28ff85e3bf9b" kindref="member">ColorUniform</ref><sp/>uniform,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;value)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1a8ada3016c868b5b2c48ff2c15940c17a" kindref="member">resolveLocations</ref>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(m_colorLocations[uniform],<sp/>value);</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(name);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(location,<sp/>value);</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="class_k_win_1_1_g_l_shader_1a3148b8c11fb1f58870957d6ae59351b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(name);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(location,<sp/>value);</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="class_k_win_1_1_g_l_shader_1a3ebb9912280954764058e55f36c2ae4b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(name);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(location,<sp/>value);</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="class_k_win_1_1_g_l_shader_1a4ac5bd3d5a3ce07ff78fe99fe94cde77" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector2D<sp/>&amp;value)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(name);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(location,<sp/>value);</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="class_k_win_1_1_g_l_shader_1a6daf28b2fe3ea03645a5fafb1674f4e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>&amp;value)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(name);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(location,<sp/>value);</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="class_k_win_1_1_g_l_shader_1ae29176e7073ba318f6c05a0e39c1d273" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector4D<sp/>&amp;value)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(name);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(location,<sp/>value);</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="class_k_win_1_1_g_l_shader_1ae1a1157538756f485e1cb8ac9b758e1d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix3x3<sp/>&amp;value)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(name);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(location,<sp/>value);</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="class_k_win_1_1_g_l_shader_1a6429d862d7b9f9151e1b2d8feef8357a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>&amp;value)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(name);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(location,<sp/>value);</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="class_k_win_1_1_g_l_shader_1a465b485fd7a19541f757b2402093fbd3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(name);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(location,<sp/>color);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="class_k_win_1_1_g_l_shader_1a2d14a593b2f856cd2ce07a6fad10c113" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1f(location,<sp/>value);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="class_k_win_1_1_g_l_shader_1a494c51f1990441f25430d4fa38477a6b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1f(location,<sp/>value);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="class_k_win_1_1_g_l_shader_1a254087bf1041071ee0a24645c7203c44" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1i(location,<sp/>value);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="class_k_win_1_1_g_l_shader_1a5d30195c16d653ddf3559725aedfc3cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xValue,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yValue,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zValue)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform3i(location,<sp/>xValue,<sp/>yValue,<sp/>zValue);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>location<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="class_k_win_1_1_g_l_shader_1a14818977dd81415b06e2f3db4478acf5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector2D<sp/>&amp;value)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform2fv(location,<sp/>1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*)&amp;value);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="class_k_win_1_1_g_l_shader_1afbf4a1cc8c7f4bf51cb2a491a79f2653" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>&amp;value)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform3fv(location,<sp/>1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*)&amp;value);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="class_k_win_1_1_g_l_shader_1a205934d06cfa0086a36546dff6baaa4e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector4D<sp/>&amp;value)</highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform4fv(location,<sp/>1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*)&amp;value);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="class_k_win_1_1_g_l_shader_1a7b58e517809878311db3013cf981d079" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix3x3<sp/>&amp;value)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix3fv(location,<sp/>1,<sp/>GL_FALSE,<sp/>value.constData());</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>location<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="class_k_win_1_1_g_l_shader_1a242c7914a77602cfd192bff1d58d1b29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>&amp;value)</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix4fv(location,<sp/>1,<sp/>GL_FALSE,<sp/>value.constData());</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="class_k_win_1_1_g_l_shader_1a36f4fdef0ba8047beab2c233330115bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">GLShader::setUniform</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform4f(location,<sp/>color.redF(),<sp/>color.greenF(),<sp/>color.blueF(),<sp/>color.alphaF());</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="class_k_win_1_1_g_l_shader_1ad4cb92cd93a384c74a0e69609f142dbe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1ad4cb92cd93a384c74a0e69609f142dbe" kindref="member">GLShader::attributeLocation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>=<sp/>glGetAttribLocation(m_program,<sp/>name);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>location;</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="class_k_win_1_1_g_l_shader_1a85be9c40fcc29294d994b7f320f31d39" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1a85be9c40fcc29294d994b7f320f31d39" kindref="member">GLShader::setAttribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1ad4cb92cd93a384c74a0e69609f142dbe" kindref="member">attributeLocation</ref>(name);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertexAttrib1f(location,<sp/>value);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="class_k_win_1_1_g_l_shader_1a5d2a9e7f60fb0e5080c7a6777656632c" refkind="member"><highlight class="normal">QMatrix4x4<sp/><ref refid="class_k_win_1_1_g_l_shader_1a5d2a9e7f60fb0e5080c7a6777656632c" kindref="member">GLShader::getUniformMatrix4x4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_shader_1a660c0baf00684b1942f923ba7e310635" kindref="member">uniformLocation</ref>(name);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(location<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLfloat<sp/>m[16];</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_context_1a62c2db828c863aa0e37b7568df85154f" kindref="member">EglContext::currentContext</ref>()-&gt;<ref refid="class_k_win_1_1_egl_context_1a1aa9a01a870cd8f23f15f0b1caff718e" kindref="member">glGetnUniformfv</ref>(m_program,<sp/>location,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m),<sp/>m);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>matrix(m[0],<sp/>m[4],<sp/>m[8],<sp/>m[12],</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[1],<sp/>m[5],<sp/>m[9],<sp/>m[13],</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[2],<sp/>m[6],<sp/>m[10],<sp/>m[14],</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[3],<sp/>m[7],<sp/>m[11],<sp/>m[15]);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix.optimize();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matrix;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QMatrix4x4();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s_disableTonemapping<sp/>=<sp/>qEnvironmentVariableIntValue(</highlight><highlight class="stringliteral">&quot;KWIN_DISABLE_TONEMAPPING&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="class_k_win_1_1_g_l_shader_1a2b37e53875c769255092205692d85ea6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_g_l_shader_1a2b37e53875c769255092205692d85ea6" kindref="member">GLShader::setColorspaceUniforms</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>&amp;dst,<sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9" kindref="member">RenderingIntent</ref><sp/>intent)</highlight></codeline>
<codeline lineno="483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a9eec7502d71fbfdee9bfa5a61cff61b5" kindref="member">Mat4Uniform::ColorimetryTransformation</ref>,<sp/>src.<ref refid="class_k_win_1_1_color_description_1a6dc069adbe6c3958bf5d9759de70ae55" kindref="member">toOther</ref>(dst,<sp/>intent));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a722159dac6e0dc4c4dab9a7efaa59617acb853e8113dcf49497f9248a64c37268" kindref="member">IntUniform::SourceNamedTransferFunction</ref>,<sp/>src.<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>().<ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a9c9d1d6b08c0bd51be06a3f4e4b75d2da218ca75efb190fc863f743803c0fb225" kindref="member">Vec2Uniform::SourceTransferFunctionParams</ref>,<sp/>QVector2D(src.<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>().<ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>,<sp/>src.<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>().<ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref><sp/>-<sp/>src.<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>().<ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a4ca07b55f39418655f237df9b679faf8a7c79f727e74c1f9b33fd1c676b370b67" kindref="member">FloatUniform::SourceReferenceLuminance</ref>,<sp/>src.<ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>());</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a722159dac6e0dc4c4dab9a7efaa59617a8f1ad4433f80925de5bb70c622b91102" kindref="member">IntUniform::DestinationNamedTransferFunction</ref>,<sp/>dst.<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>().<ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a9c9d1d6b08c0bd51be06a3f4e4b75d2da6ec6f4b95a8cc6b1dd595dee3e9434c8" kindref="member">Vec2Uniform::DestinationTransferFunctionParams</ref>,<sp/>QVector2D(dst.<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>().<ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>,<sp/>dst.<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>().<ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref><sp/>-<sp/>dst.<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>().<ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>));</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a4ca07b55f39418655f237df9b679faf8ae5d7fd62ebe7e64d4924f8436ed5c368" kindref="member">FloatUniform::DestinationReferenceLuminance</ref>,<sp/>dst.<ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>());</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a4ca07b55f39418655f237df9b679faf8a5acf7048aabb92bfacbeec966a044872" kindref="member">FloatUniform::MaxDestinationLuminance</ref>,<sp/>dst.<ref refid="class_k_win_1_1_color_description_1af5ee8e0ffe6d82b52bf658bab9f7c6de" kindref="member">maxHdrLuminance</ref>().value_or(10&apos;000));</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s_disableTonemapping<sp/>&amp;&amp;<sp/>intent<sp/>==<sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9a09ab3095e9b2d0a7773cc3d2f0f879cd" kindref="member">RenderingIntent::Perceptual</ref>)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a4ca07b55f39418655f237df9b679faf8a7a6879900ce85b7a815e8f35459c11a9" kindref="member">FloatUniform::MaxTonemappingLuminance</ref>,<sp/>src.<ref refid="class_k_win_1_1_color_description_1af5ee8e0ffe6d82b52bf658bab9f7c6de" kindref="member">maxHdrLuminance</ref>().value_or(src.<ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>())<sp/>*<sp/>dst.<ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>()<sp/>/<sp/>src.<ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>());</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a4ca07b55f39418655f237df9b679faf8a7a6879900ce85b7a815e8f35459c11a9" kindref="member">FloatUniform::MaxTonemappingLuminance</ref>,<sp/>dst.<ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>());</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a47a24b8cf2e9cf4ed90b0fa4152eeaeb" kindref="member">Mat4Uniform::DestinationToLMS</ref>,<sp/>dst.<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>().<ref refid="class_k_win_1_1_colorimetry_1a3d5266239c4f0e12609f7b811c582012" kindref="member">toLMS</ref>());</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a5f6b03f3e017cc2c31a6a0e1b3c39a61" kindref="member">Mat4Uniform::LMSToDestination</ref>,<sp/>dst.<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>().<ref refid="class_k_win_1_1_colorimetry_1a33150c30052465982b9c71b15fd4005a" kindref="member">fromLMS</ref>());</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/opengl/glshader.cpp"/>
  </compounddef>
</doxygen>
