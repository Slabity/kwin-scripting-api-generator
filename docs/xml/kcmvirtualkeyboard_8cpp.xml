<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="kcmvirtualkeyboard_8cpp" kind="file" language="C++">
    <compoundname>kcmvirtualkeyboard.cpp</compoundname>
    <includes refid="kcmvirtualkeyboard_8h" local="yes">kcmvirtualkeyboard.h</includes>
    <includes local="no">KApplicationTrader</includes>
    <includes local="no">KConfigGroup</includes>
    <includes local="no">KDesktopFile</includes>
    <includes local="no">KLocalizedString</includes>
    <includes local="no">KPluginFactory</includes>
    <includes local="no">virtualkeyboarddata.h</includes>
    <includes local="no">virtualkeyboardsettings.h</includes>
    <includes local="yes">kcmvirtualkeyboard.moc</includes>
    <includes local="yes">moc_kcmvirtualkeyboard.cpp</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/kcms/virtualkeyboard/kcmvirtualkeyboard.cpp</label>
        <link refid="kcmvirtualkeyboard_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kcmvirtualkeyboard.h</label>
        <link refid="kcmvirtualkeyboard_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>KApplicationTrader</label>
      </node>
      <node id="7">
        <label>KConfigGroup</label>
      </node>
      <node id="8">
        <label>KDesktopFile</label>
      </node>
      <node id="9">
        <label>KLocalizedString</label>
      </node>
      <node id="10">
        <label>KPluginFactory</label>
      </node>
      <node id="3">
        <label>KQuickManagedConfigModule</label>
      </node>
      <node id="4">
        <label>KService</label>
      </node>
      <node id="5">
        <label>QAbstractListModel</label>
      </node>
      <node id="13">
        <label>kcmvirtualkeyboard.moc</label>
      </node>
      <node id="14">
        <label>moc_kcmvirtualkeyboard.cpp</label>
      </node>
      <node id="11">
        <label>virtualkeyboarddata.h</label>
      </node>
      <node id="12">
        <label>virtualkeyboardsettings.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="kcmvirtualkeyboard_8cpp_1a8cb28c94fedf83aa3910221f6441f6cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_PLUGIN_FACTORY_WITH_JSON</definition>
        <argsstring>(KcmVirtualKeyboardFactory, &quot;kcm_virtualkeyboard.json&quot;, registerPlugin&lt; KcmVirtualKeyboard &gt;();registerPlugin&lt; VirtualKeyboardData &gt;();) KcmVirtualKeyboard</argsstring>
        <name>K_PLUGIN_FACTORY_WITH_JSON</name>
        <param>
          <type>KcmVirtualKeyboardFactory</type>
        </param>
        <param>
          <type>&quot;kcm_virtualkeyboard.json&quot;</type>
        </param>
        <param>
          <type>registerPlugin&lt; <ref refid="class_kcm_virtual_keyboard" kindref="compound">KcmVirtualKeyboard</ref> &gt;();registerPlugin&lt; VirtualKeyboardData &gt;();</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/kcms/virtualkeyboard/kcmvirtualkeyboard.cpp" line="18" column="1" bodyfile="kwin/src/kcms/virtualkeyboard/kcmvirtualkeyboard.cpp" bodystart="18" bodyend="26"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>Aleix<sp/>Pol<sp/>Gonzalez<sp/>&lt;aleixpol@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kcmvirtualkeyboard_8h" kindref="compound">kcmvirtualkeyboard.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KApplicationTrader&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KConfigGroup&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KDesktopFile&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KLocalizedString&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KPluginFactory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;virtualkeyboarddata.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;virtualkeyboardsettings.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="kcmvirtualkeyboard_8cpp_1a8cb28c94fedf83aa3910221f6441f6cd" refkind="member"><highlight class="normal"><ref refid="kcmvirtualkeyboard_8cpp_1a8cb28c94fedf83aa3910221f6441f6cd" kindref="member">K_PLUGIN_FACTORY_WITH_JSON</ref>(KcmVirtualKeyboardFactory,<sp/></highlight><highlight class="stringliteral">&quot;kcm_virtualkeyboard.json&quot;</highlight><highlight class="normal">,<sp/>registerPlugin&lt;KcmVirtualKeyboard&gt;();<sp/>registerPlugin&lt;VirtualKeyboardData&gt;();)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="class_kcm_virtual_keyboard_1a69d29e4abe81ad0eeba19dec23d08aba" kindref="member">KcmVirtualKeyboard::KcmVirtualKeyboard</ref>(QObject<sp/>*parent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KPluginMetaData<sp/>&amp;metaData)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>KQuickManagedConfigModule(parent,<sp/>metaData)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_data(new<sp/>VirtualKeyboardData(this))</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_model(new<sp/><ref refid="class_virtual_keyboards_model" kindref="compound">VirtualKeyboardsModel</ref>(this))</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterAnonymousType&lt;VirtualKeyboardSettings&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin.virtualkeyboardsettings&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="class_kcm_virtual_keyboard_1a05e00e419124a762d12b31a887675454" kindref="member">KcmVirtualKeyboard::~KcmVirtualKeyboard</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_kcm_virtual_keyboard_1ad6547a355caec9273d7bab5cc3c901b2" refkind="member"><highlight class="normal">VirtualKeyboardSettings<sp/>*<ref refid="class_kcm_virtual_keyboard_1a27957313b4fa16e97ef91cb249f18a5a" kindref="member">KcmVirtualKeyboard::settings</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="31"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data-&gt;settings();</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_virtual_keyboards_model_1a3a85af6bd35e895c9a34d029e5106106" refkind="member"><highlight class="normal"><ref refid="class_virtual_keyboards_model_1a3a85af6bd35e895c9a34d029e5106106" kindref="member">VirtualKeyboardsModel::VirtualKeyboardsModel</ref>(QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QAbstractListModel(parent)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>m_services<sp/>=<sp/>KApplicationTrader::query([](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KService::Ptr<sp/>&amp;service)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>service-&gt;property&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;X-KDE-Wayland-VirtualKeyboard&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>m_services.prepend({});</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_virtual_keyboards_model_1a42292ca155e16d5f9e9aee95f7645876" refkind="member"><highlight class="normal">QHash&lt;int,<sp/>QByteArray&gt;<sp/><ref refid="class_virtual_keyboards_model_1a42292ca155e16d5f9e9aee95f7645876" kindref="member">VirtualKeyboardsModel::roleNames</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="46"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>QHash&lt;int,<sp/>QByteArray&gt;<sp/>ret<sp/>=<sp/>QAbstractListModel::roleNames();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.insert(<ref refid="class_virtual_keyboards_model_1a8d03ba9e642c9985d66b842d282f49a8a7e2ee085b527a6a64c820291c3929397" kindref="member">DesktopFileNameRole</ref>,<sp/></highlight><highlight class="stringliteral">&quot;desktopFileName&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_virtual_keyboards_model_1aaf54844a25a03f164deefc4b6fe5b5e1" refkind="member"><highlight class="normal">QVariant<sp/><ref refid="class_virtual_keyboards_model_1aaf54844a25a03f164deefc4b6fe5b5e1" kindref="member">VirtualKeyboardsModel::data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QModelIndex<sp/>&amp;index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>role)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="53"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!index.isValid()<sp/>||<sp/>index.parent().isValid()<sp/>||<sp/>index.row()<sp/>&gt;<sp/>m_services.count())<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KService::Ptr<sp/>service<sp/>=<sp/>m_services[index.row()];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(role)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::DisplayRole:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>service<sp/>?<sp/>service-&gt;name()<sp/>:<sp/>i18n(</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::DecorationRole:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>service<sp/>?<sp/>service-&gt;icon()<sp/>:<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;edit-none&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::ToolTipRole:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>service<sp/>?<sp/>service-&gt;comment()<sp/>:<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>use<sp/>any<sp/>virtual<sp/>keyboard&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_virtual_keyboards_model_1a8d03ba9e642c9985d66b842d282f49a8a7e2ee085b527a6a64c820291c3929397" kindref="member">DesktopFileNameRole</ref>:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>service<sp/>?<sp/>QStandardPaths::locate(QStandardPaths::ApplicationsLocation,<sp/>service-&gt;desktopEntryName()<sp/>+<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;.desktop&quot;</highlight><highlight class="normal">))<sp/>:<sp/>QString();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_virtual_keyboards_model_1a18963ee266d8827666ed7d955f01b524" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_virtual_keyboards_model_1a18963ee266d8827666ed7d955f01b524" kindref="member">VirtualKeyboardsModel::inputMethodIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;desktopFile)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="73"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desktopFile.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;service<sp/>:<sp/>m_services)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(service<sp/>&amp;&amp;<sp/>desktopFile.endsWith(service-&gt;desktopEntryName()<sp/>+<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;.desktop&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_virtual_keyboards_model_1a82a961ed06b7d548e8c37178f697b05b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_virtual_keyboards_model_1a82a961ed06b7d548e8c37178f697b05b" kindref="member">VirtualKeyboardsModel::rowCount</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QModelIndex<sp/>&amp;parent)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="89"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parent.isValid()<sp/>?<sp/>0<sp/>:<sp/>m_services.count();</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;kcmvirtualkeyboard.moc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_kcmvirtualkeyboard.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/kcms/virtualkeyboard/kcmvirtualkeyboard.cpp"/>
  </compounddef>
</doxygen>
